uint64_t PNRProvisionalMetricsReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  uint64_t v19;
  unint64_t v20;
  double v21;
  uint64_t result;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  void *v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *v5;
          v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *v5;
      v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(_BYTE *)(a2 + v16))
        v10 = 0;
LABEL_14:
      if (v17 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v19 = *v3;
          v20 = *(_QWORD *)(a2 + v19);
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v21 = *(double *)(*(_QWORD *)(a2 + *v7) + v20);
            *(_QWORD *)(a2 + v19) = v20 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v16) = 1;
            v21 = 0.0;
          }
          objc_msgSend(a1, "setMetricsValue:", v21);
          continue;
        case 2u:
          v23 = 0;
          v24 = 0;
          v25 = 0;
          while (2)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            v28 = v27 + 1;
            if (v27 == -1 || v28 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v27);
              *(_QWORD *)(a2 + v26) = v28;
              v25 |= (unint64_t)(v29 & 0x7F) << v23;
              if (v29 < 0)
              {
                v23 += 7;
                v15 = v24++ >= 9;
                if (v15)
                {
                  v30 = 0;
                  goto LABEL_45;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v30 = 0;
          else
            v30 = v25;
LABEL_45:
          objc_msgSend(a1, "setStartTimestamp:", v30);
          continue;
        case 3u:
          PBReaderReadString();
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setStartTimestampEventName:", v31);
          goto LABEL_40;
        case 4u:
          v32 = 0;
          v33 = 0;
          v34 = 0;
          break;
        case 5u:
          PBReaderReadString();
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setEndTimestampEventName:", v31);
LABEL_40:

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v35 = *v3;
        v36 = *(_QWORD *)(a2 + v35);
        v37 = v36 + 1;
        if (v36 == -1 || v37 > *(_QWORD *)(a2 + *v4))
          break;
        v38 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
        *(_QWORD *)(a2 + v35) = v37;
        v34 |= (unint64_t)(v38 & 0x7F) << v32;
        if ((v38 & 0x80) == 0)
          goto LABEL_47;
        v32 += 7;
        v15 = v33++ >= 9;
        if (v15)
        {
          v39 = 0;
          goto LABEL_50;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_47:
      v39 = *(_BYTE *)(a2 + *v5) ? 0 : v34;
LABEL_50:
      objc_msgSend(a1, "setEndTimestamp:", v39);
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t PNRProvisionalPlannerGrainMetricsDimensionReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  PNRProvisionalMetrics *v17;
  char v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = (PNRProvisionalMetrics *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setPlanningStep:", v17);
        goto LABEL_141;
      case 2u:
        v18 = 0;
        v19 = 0;
        v20 = 0;
        while (2)
        {
          v21 = *v3;
          v22 = *(_QWORD *)(a2 + v21);
          if (v22 == -1 || v22 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v23 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v22);
            *(_QWORD *)(a2 + v21) = v22 + 1;
            v20 |= (unint64_t)(v23 & 0x7F) << v18;
            if (v23 < 0)
            {
              v18 += 7;
              v14 = v19++ >= 9;
              if (v14)
              {
                v24 = 0;
                goto LABEL_150;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v24 = 0;
        else
          v24 = v20;
LABEL_150:
        objc_msgSend(a1, "setNumQueriesCreated:", v24);
        goto LABEL_142;
      case 3u:
        v25 = 0;
        v26 = 0;
        v27 = 0;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                v31 = 0;
                goto LABEL_155;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
        else
          v31 = v27;
LABEL_155:
        objc_msgSend(a1, "setNumQueriesExecuted:", v31);
        goto LABEL_142;
      case 4u:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                v38 = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v38 = 0;
        else
          v38 = v34;
LABEL_160:
        objc_msgSend(a1, "setNumClientActionCreated:", v38);
        goto LABEL_142;
      case 5u:
        v39 = 0;
        v40 = 0;
        v41 = 0;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              v14 = v40++ >= 9;
              if (v14)
              {
                v45 = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v45 = 0;
        else
          v45 = v41;
LABEL_165:
        objc_msgSend(a1, "setNumSystemPromptResolved:", v45);
        goto LABEL_142;
      case 6u:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlannerResponseTime:", v17, 0, 0);
        goto LABEL_141;
      case 7u:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartToPlanCreatedTime:", v17, 0, 0);
        goto LABEL_141;
      case 8u:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartToLastQueryDecorationEventTime:", v17, 0, 0);
        goto LABEL_141;
      case 9u:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setLastQueryDecorationEventToPlanCreatedTime:", v17, 0, 0);
        goto LABEL_141;
      case 0xAu:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlanCreatedToResolutionTime:", v17, 0, 0);
        goto LABEL_141;
      case 0xBu:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResolutionToResponseGeneratedTime:", v17, 0, 0);
        goto LABEL_141;
      case 0xCu:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartToContextRetrievedTime:", v17, 0, 0);
        goto LABEL_141;
      case 0xDu:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartToToolsRetrievedTime:", v17, 0, 0);
        goto LABEL_141;
      case 0xEu:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartToEntitySpanMatchedTime:", v17, 0, 0);
        goto LABEL_141;
      case 0xFu:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlanCreatedToResolverRequestTime:", v17, 0, 0);
        goto LABEL_141;
      case 0x10u:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResolverRequestToResolutionTime:", v17, 0, 0);
        goto LABEL_141;
      case 0x11u:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResolverTotalQueryTime:", v17, 0, 0);
        goto LABEL_141;
      case 0x12u:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResolverTotalClientActionTime:", v17, 0, 0);
        goto LABEL_141;
      case 0x13u:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResolverFirstSystemPromptToResolutionTime:", v17, 0, 0);
        goto LABEL_141;
      case 0x14u:
        v46 = 0;
        v47 = 0;
        v48 = 0;
        while (2)
        {
          v49 = *v3;
          v50 = *(_QWORD *)(a2 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
            *(_QWORD *)(a2 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v14 = v47++ >= 9;
              if (v14)
              {
                v52 = 0;
                goto LABEL_170;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v52 = 0;
        else
          v52 = v48;
LABEL_170:
        objc_msgSend(a1, "setNumPlansCreated:", v52);
        goto LABEL_142;
      case 0x15u:
        v53 = 0;
        v54 = 0;
        v55 = 0;
        while (2)
        {
          v56 = *v3;
          v57 = *(_QWORD *)(a2 + v56);
          if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
            *(_QWORD *)(a2 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v14 = v54++ >= 9;
              if (v14)
              {
                v59 = 0;
                goto LABEL_175;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v59 = 0;
        else
          v59 = v55;
LABEL_175:
        objc_msgSend(a1, "setNumActionResolverRequests:", v59);
        goto LABEL_142;
      case 0x16u:
        v60 = 0;
        v61 = 0;
        v62 = 0;
        while (2)
        {
          v63 = *v3;
          v64 = *(_QWORD *)(a2 + v63);
          if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                v66 = 0;
                goto LABEL_180;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v66 = 0;
        else
          v66 = v62;
LABEL_180:
        objc_msgSend(a1, "setNumStatementEvaluatedFromPlanner:", v66);
        goto LABEL_142;
      case 0x17u:
        v67 = 0;
        v68 = 0;
        v69 = 0;
        while (2)
        {
          v70 = *v3;
          v71 = *(_QWORD *)(a2 + v70);
          if (v71 == -1 || v71 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
            *(_QWORD *)(a2 + v70) = v71 + 1;
            v69 |= (unint64_t)(v72 & 0x7F) << v67;
            if (v72 < 0)
            {
              v67 += 7;
              v14 = v68++ >= 9;
              if (v14)
              {
                v73 = 0;
                goto LABEL_185;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v73 = 0;
        else
          v73 = v69;
LABEL_185:
        objc_msgSend(a1, "setNumCriticalErrors:", v73);
        goto LABEL_142;
      case 0x18u:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartToLastResolverEventTime:", v17, 0, 0);
        goto LABEL_141;
      case 0x19u:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setStartToActionResolverRequestTime:", v17, 0, 0);
        goto LABEL_141;
      case 0x1Au:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setLastResolverEventToResponseGeneratedTime:", v17, 0, 0);
        goto LABEL_141;
      case 0x1Bu:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setActionResolverRequestToLastResolverEventTime:", v17, 0, 0);
        goto LABEL_141;
      case 0x1Cu:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlanCreatedToLastResolverEventTime:", v17, 0, 0);
        goto LABEL_141;
      case 0x1Du:
        v17 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v17, a2) & 1) == 0)
          goto LABEL_187;
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlanCreatedToActionResolverRequestTime:", v17, 0, 0);
        goto LABEL_141;
      case 0x1Eu:
        PBReaderReadString();
        v17 = (PNRProvisionalMetrics *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setPlannerGrainStage:", v17);
        goto LABEL_141;
      default:
        if ((v10 >> 3) != 301)
        {
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
LABEL_142:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        v17 = objc_alloc_init(PNRProvisionalSageFailureInfo);
        if (PBReaderPlaceMark() && PNRProvisionalSageFailureInfoReadFrom(v17, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setFailureInfo:", v17, 0, 0);
LABEL_141:

          goto LABEL_142;
        }
LABEL_187:

        return 0;
    }
  }
}

uint64_t PNRProvisionalRequestGrainMetricsDimensionReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  PNRProvisionalMetrics *v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v14 = v9++ >= 9;
      if (v14)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_94;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v23 = 0;
            goto LABEL_97;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_94:
        if (*(_BYTE *)(a2 + *v5))
          v23 = 0;
        else
          v23 = v19;
LABEL_97:
        objc_msgSend(a1, "setNumQueries:", v23);
        goto LABEL_89;
      case 2u:
        v25 = 0;
        v26 = 0;
        v27 = 0;
        while (2)
        {
          v28 = *v3;
          v29 = *(_QWORD *)(a2 + v28);
          if (v29 == -1 || v29 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v30 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
            *(_QWORD *)(a2 + v28) = v29 + 1;
            v27 |= (unint64_t)(v30 & 0x7F) << v25;
            if (v30 < 0)
            {
              v25 += 7;
              v14 = v26++ >= 9;
              if (v14)
              {
                v31 = 0;
                goto LABEL_102;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v31 = 0;
        else
          v31 = v27;
LABEL_102:
        objc_msgSend(a1, "setNumPlansCreated:", v31);
        goto LABEL_89;
      case 3u:
        v32 = 0;
        v33 = 0;
        v34 = 0;
        while (2)
        {
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 == -1 || v36 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 1;
            v34 |= (unint64_t)(v37 & 0x7F) << v32;
            if (v37 < 0)
            {
              v32 += 7;
              v14 = v33++ >= 9;
              if (v14)
              {
                v38 = 0;
                goto LABEL_107;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v38 = 0;
        else
          v38 = v34;
LABEL_107:
        objc_msgSend(a1, "setNumQueryPlansCreated:", v38);
        goto LABEL_89;
      case 4u:
        v39 = 0;
        v40 = 0;
        v41 = 0;
        while (2)
        {
          v42 = *v3;
          v43 = *(_QWORD *)(a2 + v42);
          if (v43 == -1 || v43 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v44 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v43);
            *(_QWORD *)(a2 + v42) = v43 + 1;
            v41 |= (unint64_t)(v44 & 0x7F) << v39;
            if (v44 < 0)
            {
              v39 += 7;
              v14 = v40++ >= 9;
              if (v14)
              {
                v45 = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v45 = 0;
        else
          v45 = v41;
LABEL_112:
        objc_msgSend(a1, "setNumResponsePlansCreated:", v45);
        goto LABEL_89;
      case 5u:
        v46 = 0;
        v47 = 0;
        v48 = 0;
        while (2)
        {
          v49 = *v3;
          v50 = *(_QWORD *)(a2 + v49);
          if (v50 == -1 || v50 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v51 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
            *(_QWORD *)(a2 + v49) = v50 + 1;
            v48 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              v14 = v47++ >= 9;
              if (v14)
              {
                v52 = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v52 = 0;
        else
          v52 = v48;
LABEL_117:
        objc_msgSend(a1, "setNumActionsCreated:", v52);
        goto LABEL_89;
      case 6u:
        v53 = 0;
        v54 = 0;
        v55 = 0;
        while (2)
        {
          v56 = *v3;
          v57 = *(_QWORD *)(a2 + v56);
          if (v57 == -1 || v57 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v58 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
            *(_QWORD *)(a2 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              v14 = v54++ >= 9;
              if (v14)
              {
                v59 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v59 = 0;
        else
          v59 = v55;
LABEL_122:
        objc_msgSend(a1, "setNumActionsExecuted:", v59);
        goto LABEL_89;
      case 7u:
        v60 = 0;
        v61 = 0;
        v62 = 0;
        while (2)
        {
          v63 = *v3;
          v64 = *(_QWORD *)(a2 + v63);
          if (v64 == -1 || v64 >= *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v65 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 1;
            v62 |= (unint64_t)(v65 & 0x7F) << v60;
            if (v65 < 0)
            {
              v60 += 7;
              v14 = v61++ >= 9;
              if (v14)
              {
                v66 = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v66 = 0;
        else
          v66 = v62;
LABEL_127:
        objc_msgSend(a1, "setNumActionResponseGenerated:", v66);
        goto LABEL_89;
      case 8u:
        v24 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v24, a2) & 1) == 0)
          goto LABEL_129;
        PBReaderRecallMark();
        objc_msgSend(a1, "setFullQueryResponseTime:", v24, 0, 0);
        goto LABEL_88;
      case 9u:
        v24 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v24, a2) & 1) == 0)
          goto LABEL_129;
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlanningTime:", v24, 0, 0);
        goto LABEL_88;
      case 0xAu:
        v24 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v24, a2) & 1) == 0)
          goto LABEL_129;
        PBReaderRecallMark();
        objc_msgSend(a1, "setExecutionTime:", v24, 0, 0);
        goto LABEL_88;
      case 0xBu:
        v24 = objc_alloc_init(PNRProvisionalMetrics);
        if (!PBReaderPlaceMark() || (PNRProvisionalMetricsReadFrom(v24, a2) & 1) == 0)
          goto LABEL_129;
        PBReaderRecallMark();
        objc_msgSend(a1, "setResponsePreparationTime:", v24, 0, 0);
        goto LABEL_88;
      case 0xCu:
        PBReaderReadString();
        v24 = (PNRProvisionalMetrics *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend(a1, "addToolId:", v24);
        goto LABEL_88;
      case 0xDu:
        PBReaderReadString();
        v24 = (PNRProvisionalMetrics *)objc_claimAutoreleasedReturnValue();
        if (v24)
          objc_msgSend(a1, "addBundleId:", v24);
        goto LABEL_88;
      default:
        if ((v10 >> 3) != 301)
        {
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
LABEL_89:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
        v24 = objc_alloc_init(PNRProvisionalSageFailureInfo);
        if (PBReaderPlaceMark() && PNRProvisionalSageFailureInfoReadFrom(v24, a2))
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setFailureInfo:", v24, 0, 0);
LABEL_88:

          goto LABEL_89;
        }
LABEL_129:

        return 0;
    }
  }
}

uint64_t PNRProvisionalSageErrorInfoReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v14 = v9++ >= 9;
        if (v14)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        PBReaderReadString();
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setErrorDomain:", v24);

      }
      else if ((v10 >> 3) == 2)
      {
        v17 = 0;
        v18 = 0;
        v19 = 0;
        while (1)
        {
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
            break;
          v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 1;
          v19 |= (unint64_t)(v22 & 0x7F) << v17;
          if ((v22 & 0x80) == 0)
            goto LABEL_31;
          v17 += 7;
          v14 = v18++ >= 9;
          if (v14)
          {
            v23 = 0;
            goto LABEL_34;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_31:
        v23 = *(_BYTE *)(a2 + *v5) ? 0 : v19;
LABEL_34:
        objc_msgSend(a1, "setErrorCode:", v23);
      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL PNRProvisionalSageFailureInfoReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  PNRProvisionalSageErrorInfo *v17;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x24BE7AF30];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
        break;
      v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v15 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        PBReaderReadString();
        v17 = (PNRProvisionalSageErrorInfo *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setFailureType:", v17);
        goto LABEL_32;
      case 2u:
        PBReaderReadString();
        v17 = (PNRProvisionalSageErrorInfo *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "setFailureSubType:", v17);
        goto LABEL_32;
      case 3u:
        v17 = objc_alloc_init(PNRProvisionalSageErrorInfo);
        if (!PBReaderPlaceMark() || (PNRProvisionalSageErrorInfoReadFrom(v17, a2) & 1) == 0)
          goto LABEL_36;
        PBReaderRecallMark();
        objc_msgSend(a1, "setError:", v17, 0, 0);
        goto LABEL_32;
      case 4u:
        v17 = objc_alloc_init(PNRProvisionalSageErrorInfo);
        if (!PBReaderPlaceMark() || (PNRProvisionalSageErrorInfoReadFrom(v17, a2) & 1) == 0)
          goto LABEL_36;
        PBReaderRecallMark();
        objc_msgSend(a1, "setUnderlyingError:", v17, 0, 0);
        goto LABEL_32;
      case 5u:
        v17 = objc_alloc_init(PNRProvisionalSageErrorInfo);
        if (PBReaderPlaceMark() && (PNRProvisionalSageErrorInfoReadFrom(v17, a2) & 1) != 0)
        {
          PBReaderRecallMark();
          objc_msgSend(a1, "setUnderUnderlyingError:", v17, 0, 0);
LABEL_32:

LABEL_33:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_36:

        return 0;
      default:
        if ((PBReaderSkipValueWithTag() & 1) == 0)
          return 0;
        goto LABEL_33;
    }
  }
}

BOOL PNRProvisionalSagePnREventReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  PNRProvisionalPlannerGrainMetricsDimension *v18;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        v18 = objc_alloc_init(PNRProvisionalPlannerGrainMetricsDimension);
        if (!PBReaderPlaceMark()
          || (PNRProvisionalPlannerGrainMetricsDimensionReadFrom(v18, a2) & 1) == 0)
        {
LABEL_35:

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setPlannerGrainMetricsDimension:", v18, 0, 0);
        goto LABEL_30;
      }
      if ((_DWORD)v17 == 2)
        break;
      if ((_DWORD)v17 == 1)
      {
        v18 = objc_alloc_init(PNRProvisionalSagePnRMetadata);
        if (!PBReaderPlaceMark() || !PNRProvisionalSagePnRMetadataReadFrom(v18, a2))
          goto LABEL_35;
        PBReaderRecallMark();
        objc_msgSend(a1, "setSagePnRMetadata:", v18, 0, 0);
LABEL_30:

        goto LABEL_32;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_32:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    v18 = objc_alloc_init(PNRProvisionalRequestGrainMetricsDimension);
    if (!PBReaderPlaceMark() || (PNRProvisionalRequestGrainMetricsDimensionReadFrom(v18, a2) & 1) == 0)
      goto LABEL_35;
    PBReaderRecallMark();
    objc_msgSend(a1, "setRequestGrainMetricsDimension:", v18, 0, 0);
    goto LABEL_30;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL PNRProvisionalSagePnRMetadataReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  void *v17;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      switch((v10 >> 3))
      {
        case 1u:
          PBReaderReadString();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setSessionId:", v17);
          goto LABEL_31;
        case 2u:
          PBReaderReadString();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setClientId:", v17);
          goto LABEL_31;
        case 3u:
          PBReaderReadString();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setClientRequestId:", v17);
          goto LABEL_31;
        case 4u:
          PBReaderReadString();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setClientSessionId:", v17);
          goto LABEL_31;
        case 5u:
          PBReaderReadString();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          if (v17)
            objc_msgSend(a1, "addPlanId:", v17);
          goto LABEL_31;
        case 6u:
          PBReaderReadString();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          if (v17)
            objc_msgSend(a1, "addActionId:", v17);
          goto LABEL_31;
        case 7u:
          PBReaderReadString();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setRequestStatus:", v17);
          goto LABEL_31;
        case 8u:
          PBReaderReadString();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(a1, "setRawSessionId:", v17);
LABEL_31:

          goto LABEL_32;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
            return 0;
LABEL_32:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          break;
      }
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t PNRProvisionalSagePnRWrapperReadFrom(void *a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  PNRProvisionalSagePnREvent *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x24BE7AF60];
  v4 = (int *)MEMORY[0x24BE7AF50];
  v5 = (int *)MEMORY[0x24BE7AF48];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF60]) < *(_QWORD *)(a2 + (int)*MEMORY[0x24BE7AF50]))
  {
    v7 = (int *)MEMORY[0x24BE7AF30];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 101)
      {
        v17 = objc_alloc_init(PNRProvisionalSagePnREvent);
        if (!PBReaderPlaceMark() || !PNRProvisionalSagePnREventReadFrom(v17, a2))
        {

          return 0;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "setSagePnR:", v17, 0, 0);

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void type metadata accessor for SISchemaComponentName(uint64_t a1)
{
  sub_240356540(a1, &qword_256FFA140);
}

void type metadata accessor for SISchemaAnyEventType(uint64_t a1)
{
  sub_240356540(a1, &qword_256FFA148);
}

void type metadata accessor for BMStreamIdentifier(uint64_t a1)
{
  sub_240356540(a1, &qword_256FFA150);
}

void sub_240356540(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void sub_240356584(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_24035658C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_2403565A0(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_2403565D0(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_2403565E4(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_2403565F8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_240356604(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_240356610(uint64_t a1, uint64_t a2)
{
  return sub_2403568B8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E8]);
}

uint64_t sub_24035661C(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_2408E5CF0();
  *a2 = 0;
  return result;
}

uint64_t sub_240356690(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_2408E5CFC();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24035670C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_2408E5D08();
  v2 = sub_2408E5CE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24035674C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2408E5CE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_240356790@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_2408E5D08();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2403567B8()
{
  sub_24035686C(&qword_256FFA170, (uint64_t)&unk_2408E80FC);
  sub_24035686C(&qword_256FFA178, (uint64_t)&unk_2408E809C);
  return sub_2408E6074();
}

uint64_t sub_240356824()
{
  return sub_24035686C(&qword_256FFA158, (uint64_t)&unk_2408E8060);
}

uint64_t sub_240356848()
{
  return sub_24035686C(&qword_256FFA160, (uint64_t)&unk_2408E8034);
}

uint64_t sub_24035686C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for BMStreamIdentifier(255);
    result = MEMORY[0x242684578](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2403568AC(uint64_t a1, uint64_t a2)
{
  return sub_2403568B8(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_2403568B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_2408E5D08();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2403568F4()
{
  sub_2408E5D08();
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_240356934()
{
  uint64_t v0;

  sub_2408E5D08();
  sub_2408E6218();
  sub_2408E5D44();
  v0 = sub_2408E623C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2403569A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_2408E5D08();
  v2 = v1;
  if (v0 == sub_2408E5D08() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_240356A2C()
{
  return sub_24035686C(&qword_256FFA168, (uint64_t)&unk_2408E80D0);
}

void sub_240356A50(uint64_t a1)
{
  objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94F10]), sel_init);
  __asm { BR              X10 }
}

void *sub_240356A98(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void *v12;

  if (v12)
    objc_msgSend(v12, sel_setSiriPermissionRequired_, 1);
  return v12;
}

id sub_240356B34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (unsigned int *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94E10]), sel_init);
  if (v5)
  {
    v6 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
    v7 = a1 + *(int *)(v6 + 40);
    v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FD8]), sel_init);
    sub_240356D7C(v7, (uint64_t)v4);
    v9 = type metadata accessor for TranscriptProtoStatementID(0);
    if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9) == 1)
    {
      sub_240356DC4((uint64_t)v4);
    }
    else
    {
      v10 = *v4;
      sub_240356E40((uint64_t)v4);
      objc_msgSend(v8, sel_setIndex_, v10);
    }
    objc_msgSend(v5, sel_setStatementId_, v8);

    objc_msgSend(v5, sel_setIsClientAction_, *(unsigned __int8 *)(a1 + 24));
    objc_msgSend(v5, sel_setIsConfirmed_, *(unsigned __int8 *)(a1 + 25));
    objc_msgSend(v5, sel_setIsAuthenticated_, *(unsigned __int8 *)(a1 + 26));
    v11 = (void *)sub_2408E5CE4();
    objc_msgSend(v5, sel_setToolId_, v11);

    v12 = sub_2403B0734(a1 + *(int *)(v6 + 36));
    objc_msgSend(v5, sel_setResolvedParameters_, v12);

    if (sub_24040B554(*(_QWORD *)(a1 + 16)))
    {
      sub_240356E04();
      v13 = (void *)sub_2408E5D8C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v5, sel_setUnresolvedParameterSets_, v13);

  }
  return v5;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x242684560]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_240356D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240356DC4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_240356E04()
{
  unint64_t result;

  result = qword_256FFA308;
  if (!qword_256FFA308)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FFA308);
  }
  return result;
}

uint64_t sub_240356E40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t IETranscriptEventWrapper.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  int *v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t result;

  v2 = *(int *)(type metadata accessor for IETranscriptEventWrapper() + 20);
  v3 = (int *)type metadata accessor for TranscriptProtoEvent(0);
  a1[11] = 0;
  a1[12] = 0;
  v4 = (char *)a1 + v3[11];
  v5 = type metadata accessor for TranscriptProtoPayload(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (_QWORD *)((char *)a1 + v3[12]);
  *v6 = 0;
  v6[1] = 0;
  v7 = (char *)a1 + v3[13];
  v8 = type metadata accessor for TranscriptProtoTimepoint(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (char *)a1 + v3[14];
  v10 = sub_2408E5750();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (char *)a1 + v3[15];
  v12 = type metadata accessor for TranscriptProtoParticipantID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (char *)a1 + v3[16];
  v14 = type metadata accessor for TranscriptProtoSpanID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = 0;
  a1[7] = 0xE000000000000000;
  a1[8] = 0;
  a1[9] = 0xE000000000000000;
  result = sub_240357018(MEMORY[0x24BEE4AF8]);
  a1[10] = result;
  *(_QWORD *)((char *)a1 + v2) = 0;
  return result;
}

uint64_t type metadata accessor for IETranscriptEventWrapper()
{
  uint64_t result;

  result = qword_256FFA510;
  if (!qword_256FFA510)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_240357018(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA650);
  v2 = (_QWORD *)sub_2408E605C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_240509E28(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for IETranscriptEventWrapper(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(_QWORD *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  void (*v46)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  unsigned int (**v55)(const void *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  void (*v64)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(_QWORD *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(_QWORD *, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t Step;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(_QWORD *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(_QWORD *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  _QWORD *v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  _BYTE *v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  unsigned int (*v127)(_BYTE *, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t StepResults;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(_QWORD *, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  int *v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  unsigned int (*v145)(_QWORD *, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _BYTE *v149;
  _BYTE *v150;
  uint64_t v151;
  void (*v152)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v153;
  _BYTE *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _BYTE *v159;
  _QWORD *v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void (*v165)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v166;
  uint64_t v167;
  uint64_t v168;
  _BYTE *v169;
  _QWORD *v170;
  _BYTE *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v176;
  uint64_t v177;
  uint64_t v178;
  _BYTE *v179;
  _QWORD *v180;
  _BYTE *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _BYTE *v190;
  _BYTE *v191;
  uint64_t v192;
  void (*v193)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v194;
  _BYTE *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unsigned int (*v199)(_BYTE *, uint64_t, uint64_t);
  uint64_t v200;
  _BYTE *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _BYTE *v206;
  _BYTE *v207;
  uint64_t v208;
  void (*v209)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v210;
  _BYTE *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  unsigned int (*v220)(char *, uint64_t, uint64_t);
  uint64_t v221;
  _QWORD *v222;
  _BYTE *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  unsigned int (*v231)(char *, uint64_t, uint64_t);
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  _BYTE *v239;
  _QWORD *v240;
  _QWORD *v241;
  uint64_t v242;
  uint64_t v243;
  unsigned int (*v244)(_QWORD *, uint64_t, uint64_t);
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  _QWORD *v248;
  unsigned int (*v249)(_QWORD *, uint64_t, uint64_t);
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int *v253;
  uint64_t v254;
  _QWORD *v255;
  _QWORD *v256;
  uint64_t v257;
  uint64_t v258;
  unsigned int (*v259)(_QWORD *, uint64_t, uint64_t);
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  _BYTE *v263;
  _BYTE *v264;
  uint64_t v265;
  void (*v266)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v267;
  _BYTE *v268;
  uint64_t v269;
  uint64_t v270;
  unsigned int (**v271)(_QWORD *, uint64_t, uint64_t);
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  int *v275;
  uint64_t v276;
  _QWORD *v277;
  _QWORD *v278;
  uint64_t v279;
  uint64_t v280;
  unsigned int (*v281)(_QWORD *, uint64_t, uint64_t);
  uint64_t v282;
  uint64_t v283;
  int *v284;
  uint64_t v285;
  _QWORD *v286;
  _QWORD *v287;
  uint64_t v288;
  uint64_t v289;
  unsigned int (*v290)(_QWORD *, uint64_t, uint64_t);
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  _BYTE *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  _BYTE *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  _QWORD *v303;
  _QWORD *v304;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v306;
  unsigned int (*v307)(_QWORD *, uint64_t, uint64_t);
  uint64_t v308;
  uint64_t v309;
  int *DecorationPrePlannerResult;
  uint64_t v311;
  _QWORD *v312;
  _QWORD *v313;
  uint64_t v314;
  uint64_t v315;
  unsigned int (*v316)(_QWORD *, uint64_t, uint64_t);
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  void (*v324)(char *, char *, uint64_t);
  uint64_t v325;
  uint64_t v326;
  _QWORD *v327;
  _QWORD *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  char *v335;
  uint64_t v336;
  void (*v337)(char *, char *, uint64_t);
  char *v338;
  uint64_t v339;
  _QWORD *v340;
  _QWORD *v341;
  uint64_t v342;
  uint64_t v343;
  _BYTE *v344;
  _QWORD *v345;
  char *v346;
  uint64_t v347;
  void (*v348)(_BYTE *, char *, uint64_t);
  char *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  void (*v357)(char *, char *, uint64_t);
  char *v358;
  uint64_t v359;
  _QWORD *v360;
  _QWORD *v361;
  uint64_t v362;
  uint64_t v363;
  _QWORD *v364;
  _QWORD *v365;
  uint64_t v366;
  uint64_t v367;
  _QWORD *v368;
  _QWORD *v369;
  _QWORD *v370;
  uint64_t v371;
  uint64_t v372;
  _BYTE *v373;
  char *v374;
  uint64_t v375;
  void (*v376)(_BYTE *, char *, uint64_t);
  uint64_t v377;
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  void (*v382)(char *, char *, uint64_t);
  uint64_t v383;
  _BYTE *v384;
  _BYTE *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  char *v390;
  uint64_t v391;
  uint64_t v392;
  void (*v393)(char *, char *, uint64_t);
  char *v394;
  uint64_t v395;
  uint64_t v396;
  _BYTE *v397;
  char *v398;
  uint64_t v399;
  char *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  char *v409;
  char *v410;
  uint64_t v411;
  uint64_t v412;
  void (*v413)(char *, char *, uint64_t);
  char *v414;
  uint64_t v415;
  uint64_t v416;
  _BYTE *v417;
  char *v418;
  uint64_t v419;
  uint64_t v420;
  char *v421;
  char *v422;
  uint64_t v423;
  uint64_t v424;
  void (*v425)(char *, char *, uint64_t);
  char *v426;
  uint64_t v427;
  uint64_t v428;
  _QWORD *v429;
  _QWORD *v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  _BYTE *v436;
  _QWORD *v437;
  uint64_t v438;
  uint64_t v439;
  void (*v440)(_BYTE *, char *, uint64_t);
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  _QWORD *v444;
  _QWORD *v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  char *v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  char *v455;
  uint64_t v456;
  void (*v457)(char *, char *, uint64_t);
  char *v458;
  uint64_t v459;
  _BYTE *v460;
  char *v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  char *v467;
  char *v468;
  uint64_t v469;
  uint64_t v470;
  void (*v471)(char *, char *, uint64_t);
  char *v472;
  uint64_t v473;
  uint64_t v474;
  char *v475;
  char *v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t *v487;
  uint64_t v488;
  uint64_t v489;
  unsigned int (*v490)(uint64_t *, uint64_t, uint64_t);
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  char *v494;
  uint64_t v495;
  uint64_t v496;
  void (*v497)(char *, char *, uint64_t);
  uint64_t v498;
  uint64_t v499;
  _QWORD *v500;
  _QWORD *v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  char *v505;
  uint64_t v506;
  uint64_t v507;
  void (*v508)(char *, char *, uint64_t);
  char *v509;
  uint64_t v510;
  uint64_t v511;
  _QWORD *v512;
  _QWORD *v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  _BYTE *v517;
  _BYTE *v518;
  uint64_t v519;
  int *v520;
  uint64_t v521;
  _QWORD *v522;
  uint64_t *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  _BYTE *v529;
  _BYTE *v530;
  uint64_t v531;
  int *v532;
  uint64_t v533;
  _QWORD *v534;
  _QWORD *v535;
  uint64_t v536;
  uint64_t v537;
  unsigned int (*v538)(_QWORD *, uint64_t, uint64_t);
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  char *v544;
  uint64_t v545;
  void (*v546)(char *, char *, uint64_t);
  uint64_t v547;
  _BYTE *v548;
  char *v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  char *v553;
  char *v554;
  uint64_t v555;
  uint64_t v556;
  void (*v557)(char *, char *, uint64_t);
  char *v558;
  uint64_t v559;
  uint64_t v560;
  char *v561;
  char *v562;
  uint64_t DecorationPrePlannerResultPayload;
  unsigned int (**v564)(const void *, uint64_t, uint64_t);
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  _DWORD *v568;
  uint64_t v569;
  unsigned int (*v570)(_DWORD *, uint64_t, uint64_t);
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  char *v574;
  char *v575;
  uint64_t v576;
  uint64_t v577;
  void (*v578)(char *, char *, uint64_t);
  char *v579;
  uint64_t v580;
  uint64_t v581;
  _BYTE *v582;
  char *v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  char *v587;
  uint64_t v588;
  uint64_t v589;
  void (*v590)(char *, char *, uint64_t);
  char *v591;
  uint64_t v592;
  uint64_t v593;
  _BYTE *v594;
  char *v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  char *v601;
  char *v602;
  uint64_t v603;
  uint64_t v604;
  void (*v605)(char *, char *, uint64_t);
  uint64_t v606;
  uint64_t v607;
  _BYTE *v608;
  char *v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  char *v613;
  uint64_t v614;
  uint64_t v615;
  void (*v616)(char *, char *, uint64_t);
  char *v617;
  uint64_t v618;
  uint64_t v619;
  _BYTE *v620;
  char *v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  char *v625;
  char *v626;
  uint64_t v627;
  uint64_t v628;
  _QWORD *v629;
  _QWORD *v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  char *v636;
  uint64_t v637;
  uint64_t v638;
  void (*v639)(char *, char *, uint64_t);
  char *v640;
  uint64_t v641;
  uint64_t v642;
  _QWORD *v643;
  _QWORD *v644;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  char *v649;
  char *v650;
  uint64_t v651;
  uint64_t v652;
  void (*v653)(char *, char *, uint64_t);
  char *v654;
  uint64_t v655;
  uint64_t v656;
  _BYTE *v657;
  char *v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  char *v662;
  uint64_t v663;
  uint64_t v664;
  void (*v665)(char *, char *, uint64_t);
  char *v666;
  uint64_t v667;
  char *v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  void (*v674)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v675;
  uint64_t v676;
  _BYTE *v677;
  char *v678;
  uint64_t v679;
  uint64_t v680;
  _BYTE *v681;
  char *v682;
  uint64_t v683;
  int EnumCaseMultiPayload;
  uint64_t v685;
  uint64_t v686;
  _BYTE *v687;
  _BYTE *v688;
  uint64_t v689;
  char *v690;
  uint64_t v691;
  uint64_t v692;
  char *v693;
  uint64_t v694;
  uint64_t v695;
  char *v696;
  char *v697;
  uint64_t v698;
  int *v699;
  uint64_t v700;
  _BYTE *v701;
  _QWORD *v702;
  _QWORD *v703;
  uint64_t v704;
  uint64_t v705;
  _QWORD *v706;
  _QWORD *v707;
  uint64_t v708;
  _QWORD *v709;
  unsigned int (*v710)(_QWORD *, uint64_t, uint64_t);
  uint64_t v711;
  uint64_t v712;
  char *v713;
  char *v714;
  uint64_t v715;
  char *v716;
  uint64_t v717;
  char *v718;
  _QWORD *v719;
  char *v720;
  uint64_t v721;
  uint64_t v722;
  _BYTE *v723;
  char *v724;
  uint64_t v725;
  char *v726;
  char *v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  _QWORD *v735;
  uint64_t v736;
  uint64_t v737;
  void (**v738)(_QWORD *, _QWORD, uint64_t, _QWORD);
  char *v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  _BYTE *v743;
  _BYTE *v744;
  uint64_t v745;
  uint64_t v746;
  _BYTE *v747;
  _BYTE *v748;
  uint64_t v749;
  uint64_t v750;
  _QWORD *v751;
  _QWORD *v752;
  _QWORD *v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  char *v759;
  int *v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  _BYTE *v764;
  void (*v765)(char *, char *, uint64_t);
  char *v766;
  uint64_t v767;
  uint64_t v768;
  _QWORD *v769;
  _QWORD *v770;
  uint64_t v771;
  unsigned int (**v772)(_QWORD *, uint64_t, uint64_t);
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  uint64_t v776;
  _QWORD *v777;
  int v778;
  _BYTE *v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  _QWORD *v783;
  _QWORD *v784;
  _QWORD *v785;
  uint64_t v786;
  uint64_t v787;
  char *v788;
  char *v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  _BYTE *v793;
  void (*v794)(char *, char *, uint64_t);
  char *v795;
  uint64_t v796;
  void *v797;
  void (**v798)(_QWORD *, _QWORD, uint64_t, void *);
  uint64_t v799;
  char *v800;
  char *v801;
  uint64_t v802;
  uint64_t v803;
  char *v804;
  char *v805;
  uint64_t v806;
  uint64_t v807;
  _QWORD *v808;
  _QWORD *v809;
  uint64_t v810;
  uint64_t v811;
  _QWORD *v812;
  _QWORD *v813;
  uint64_t v814;
  uint64_t v815;
  unsigned int (*v816)(_QWORD *, uint64_t, uint64_t);
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  char *v821;
  char *v822;
  uint64_t v823;
  void (*v824)(char *, char *, uint64_t);
  char *v825;
  uint64_t v826;
  char *v827;
  _QWORD *v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  int v836;
  char *v837;
  uint64_t v838;
  char *v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  char *v845;
  char *v846;
  uint64_t v847;
  uint64_t v848;
  _QWORD *v849;
  _QWORD *v850;
  uint64_t v851;
  uint64_t v852;
  unsigned int (*v853)(_QWORD, _QWORD, _QWORD);
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  uint64_t v858;
  uint64_t v859;
  _QWORD *v860;
  uint64_t v861;
  unsigned int (*v862)(_QWORD *, uint64_t, uint64_t);
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  char *v866;
  char *v867;
  uint64_t v868;
  uint64_t v869;
  char *v870;
  char *v871;
  uint64_t v872;
  uint64_t v873;
  _QWORD *v874;
  _QWORD *v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  _QWORD *v882;
  uint64_t v883;
  unsigned int (*v884)(_QWORD *, uint64_t, uint64_t);
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  char *v888;
  char *v889;
  uint64_t v890;
  uint64_t v891;
  char *v892;
  char *v893;
  uint64_t v894;
  uint64_t v895;
  _BYTE *v896;
  char *v897;
  uint64_t v898;
  uint64_t v899;
  _QWORD *v900;
  _QWORD *v901;
  uint64_t v902;
  uint64_t v903;
  unsigned int (*v904)(_QWORD *, uint64_t, uint64_t);
  uint64_t v905;
  uint64_t v906;
  uint64_t v907;
  char *v908;
  uint64_t v909;
  uint64_t v910;
  void (*v911)(char *, char *, uint64_t);
  char *v912;
  uint64_t v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  char *v918;
  uint64_t v919;
  uint64_t v920;
  void (*v921)(char *, char *, uint64_t);
  char *v922;
  uint64_t v923;
  uint64_t v924;
  _BYTE *v925;
  char *v926;
  uint64_t v927;
  uint64_t v928;
  char *v929;
  char *v930;
  uint64_t v931;
  uint64_t v932;
  _BYTE *v933;
  char *v934;
  uint64_t v935;
  uint64_t v936;
  uint64_t v937;
  char *v938;
  uint64_t v939;
  _QWORD *v940;
  void (*v941)(char *, char *, uint64_t);
  uint64_t v942;
  char *v943;
  char *v944;
  uint64_t v945;
  uint64_t v946;
  uint64_t v947;
  char *v948;
  char *v949;
  uint64_t v950;
  uint64_t v951;
  _BYTE *v952;
  char *v953;
  uint64_t v954;
  uint64_t v955;
  _BYTE *v956;
  _BYTE *v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  char *v961;
  char *v962;
  uint64_t v963;
  uint64_t v964;
  char *v965;
  char *v966;
  uint64_t v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  char *v972;
  uint64_t v973;
  char *v974;
  char *v975;
  char *v976;
  uint64_t v977;
  uint64_t v978;
  _QWORD *v979;
  _QWORD *v980;
  uint64_t v981;
  uint64_t v982;
  _QWORD *v983;
  _QWORD *v984;
  uint64_t v985;
  uint64_t v986;
  unsigned int (*v987)(_QWORD *, uint64_t, uint64_t);
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  char *v991;
  uint64_t v992;
  void (*v993)(char *, char *, uint64_t);
  char *v994;
  uint64_t v995;
  _BYTE *v996;
  char *v997;
  uint64_t v998;
  uint64_t v999;
  _BYTE *v1000;
  char *v1001;
  uint64_t v1002;
  int *v1003;
  uint64_t v1004;
  _QWORD *v1005;
  _QWORD *v1006;
  uint64_t v1007;
  uint64_t v1008;
  _QWORD *v1009;
  _QWORD *v1010;
  uint64_t v1011;
  uint64_t v1012;
  unsigned int (*v1013)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  char *v1017;
  uint64_t v1018;
  void (*v1019)(char *, char *, uint64_t);
  char *v1020;
  uint64_t v1021;
  _BYTE *v1022;
  char *v1023;
  uint64_t v1024;
  uint64_t v1025;
  char *v1026;
  char *v1027;
  uint64_t v1028;
  uint64_t v1029;
  _QWORD *v1030;
  _QWORD *v1031;
  int *v1032;
  uint64_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  char *v1036;
  char *v1037;
  uint64_t v1038;
  unsigned int (*v1039)(char *, uint64_t, uint64_t);
  uint64_t v1040;
  uint64_t v1041;
  uint64_t v1042;
  uint64_t v1043;
  char *v1044;
  char *v1045;
  uint64_t v1046;
  char *v1047;
  char *v1048;
  char *v1049;
  uint64_t v1050;
  char *v1051;
  uint64_t v1052;
  char *v1053;
  char *v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  char *v1058;
  char *v1059;
  uint64_t v1060;
  uint64_t v1061;
  char *v1062;
  char *v1063;
  uint64_t v1064;
  uint64_t v1065;
  char *v1066;
  char *v1067;
  uint64_t v1068;
  uint64_t v1069;
  _BYTE *v1070;
  _QWORD *v1071;
  _QWORD *v1072;
  uint64_t v1073;
  uint64_t v1074;
  uint64_t v1075;
  uint64_t v1076;
  uint64_t v1077;
  char *v1078;
  char *v1079;
  uint64_t v1080;
  void (*v1081)(char *, char *, uint64_t);
  char *v1082;
  uint64_t v1083;
  _BYTE *v1084;
  _QWORD *v1085;
  _QWORD *v1086;
  uint64_t v1087;
  uint64_t v1088;
  _BYTE *v1089;
  char *v1090;
  uint64_t v1091;
  void (*v1092)(_BYTE *, char *, uint64_t);
  char *v1093;
  uint64_t v1094;
  char *v1095;
  char *v1096;
  uint64_t v1097;
  uint64_t v1098;
  _BYTE *v1099;
  char *v1100;
  uint64_t v1101;
  uint64_t v1102;
  _BYTE *v1103;
  char *v1104;
  uint64_t v1105;
  uint64_t v1106;
  _QWORD *v1107;
  _QWORD *v1108;
  uint64_t v1109;
  uint64_t v1110;
  _QWORD *v1111;
  _QWORD *v1112;
  uint64_t v1113;
  uint64_t v1114;
  unsigned int (*v1115)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1116;
  uint64_t v1117;
  uint64_t v1118;
  char *v1119;
  char *v1120;
  uint64_t v1121;
  uint64_t v1122;
  unsigned int (*v1123)(char *, uint64_t, uint64_t);
  uint64_t v1124;
  uint64_t v1125;
  char *v1126;
  char *v1127;
  uint64_t v1128;
  uint64_t v1129;
  char *v1130;
  char *v1131;
  uint64_t v1132;
  uint64_t v1133;
  uint64_t v1134;
  uint64_t v1135;
  _QWORD *v1136;
  _QWORD *v1137;
  uint64_t v1138;
  uint64_t v1139;
  uint64_t v1140;
  uint64_t v1141;
  uint64_t v1142;
  char *v1143;
  char *v1144;
  uint64_t v1145;
  _QWORD *v1146;
  void (*v1147)(char *, char *, uint64_t);
  uint64_t v1148;
  uint64_t v1149;
  _QWORD *v1150;
  _QWORD *v1151;
  uint64_t v1152;
  uint64_t v1153;
  uint64_t v1154;
  uint64_t v1155;
  char *v1156;
  char *v1157;
  uint64_t v1158;
  uint64_t v1159;
  uint64_t v1160;
  char *v1161;
  uint64_t v1162;
  uint64_t v1163;
  void *v1164;
  id v1165;
  uint64_t v1167;
  char *v1168;
  uint64_t v1169;
  uint64_t v1170;
  char *v1171;
  char *v1172;
  int *v1173;
  unsigned int (**v1174)(_QWORD *, uint64_t, int *);
  uint64_t v1175;
  uint64_t v1176;
  char *v1177;
  uint64_t v1178;
  unsigned int (*v1179)(char *, uint64_t, uint64_t);
  uint64_t v1180;
  uint64_t v1181;
  uint64_t v1182;
  uint64_t v1183;
  uint64_t v1184;
  uint64_t v1185;
  uint64_t v1186;
  uint64_t v1187;
  char *v1188;
  char *v1189;
  uint64_t v1190;
  uint64_t v1191;
  uint64_t v1192;
  uint64_t v1193;
  uint64_t v1194;
  char *v1195;
  char *v1196;
  uint64_t v1197;
  void (*v1198)(char *, char *, uint64_t);
  uint64_t v1199;
  char *v1200;
  char *v1201;
  uint64_t v1202;
  uint64_t v1203;
  char *v1204;
  char *v1205;
  uint64_t v1206;
  uint64_t v1207;
  char *v1208;
  char *v1209;
  uint64_t v1210;
  void (*v1211)(char *, char *, uint64_t);
  uint64_t v1212;
  char *v1213;
  char *v1214;
  uint64_t v1215;
  int *v1216;
  uint64_t v1217;
  _QWORD *v1218;
  _QWORD *v1219;
  uint64_t v1220;
  _QWORD *v1221;
  unsigned int (*v1222)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1223;
  uint64_t v1224;
  uint64_t v1225;
  char *v1226;
  uint64_t v1227;
  uint64_t v1228;
  uint64_t v1229;
  _BYTE *v1230;
  void (*v1231)(char *, char *, uint64_t);
  char *v1232;
  uint64_t v1233;
  uint64_t v1234;
  _QWORD *v1235;
  _QWORD *v1236;
  uint64_t v1237;
  uint64_t v1238;
  uint64_t v1239;
  char *v1240;
  uint64_t v1241;
  uint64_t v1242;
  uint64_t v1243;
  _BYTE *v1244;
  void (*v1245)(char *, char *, uint64_t);
  char *v1246;
  uint64_t v1247;
  uint64_t v1248;
  _QWORD *v1249;
  _QWORD *v1250;
  uint64_t v1251;
  uint64_t v1252;
  uint64_t v1253;
  char *v1254;
  _QWORD *v1255;
  uint64_t v1256;
  uint64_t v1257;
  uint64_t v1258;
  _BYTE *v1259;
  void (*v1260)(char *, char *, uint64_t);
  char *v1261;
  uint64_t v1262;
  uint64_t v1263;
  _BYTE *v1264;
  char *v1265;
  uint64_t v1266;
  void (*v1267)(char *, char *, uint64_t);
  char *v1268;
  char *v1269;
  _QWORD *v1270;
  void *v1271;
  _QWORD *v1272;
  char *v1273;
  _QWORD *v1274;
  void *v1275;
  _QWORD *v1276;
  char *v1277;
  void *v1278;
  _QWORD *v1279;
  void *v1280;
  _QWORD *v1281;
  _QWORD *v1282;
  char *v1283;
  void (**v1284)(char *, _QWORD, uint64_t, int *);
  void *v1285;
  void *v1286;
  void (*v1287)(char *, char *, uint64_t);
  void *v1288;
  _QWORD *v1289;
  char *v1290;
  uint64_t v1291;
  unsigned int (*v1292)(_QWORD *, uint64_t, uint64_t);
  char *v1293;
  int *v1294;
  char *v1295;
  uint64_t v1296;
  uint64_t v1297;
  uint64_t v1298;
  _BYTE *v1299;
  _QWORD *v1300;
  uint64_t v1301;
  uint64_t v1302;
  char *v1303;
  uint64_t v1304;
  uint64_t v1305;
  uint64_t v1306;
  char *v1307;
  char *v1308;
  _QWORD *__dst;
  char *__dsta;
  char *__dstg;
  void *__dstb;
  char *__dsth;
  _QWORD *__dstc;
  unsigned int (**__dstd)(const void *, uint64_t, uint64_t);
  _BYTE *__dsti;
  unsigned int (*__dste)(_QWORD *, uint64_t, uint64_t);
  char *__dstj;
  _QWORD *__dstf;
  _QWORD *__dstk;
  _QWORD *__dstl;
  char *__dstm;
  int *v1323;
  int *v1324;
  int *v1325;
  int *DecorationResult;
  char *v1327;
  unsigned int (**v1328)(const void *, uint64_t, uint64_t);
  char *v1329;
  char *v1330;
  int *v1331;
  char *v1332;
  char *v1333;
  _DWORD *v1334;
  char *v1335;
  char *v1336;
  char *v1337;
  char *v1338;
  void *v1339;
  void *v1340;
  int *v1341;
  char *v1342;
  char *v1343;
  char *v1344;
  char *v1345;
  uint64_t v1346;
  uint64_t v1347;
  uint64_t v1348;
  uint64_t v1349;
  uint64_t v1350;
  uint64_t v1351;
  uint64_t v1352;
  uint64_t v1353;
  uint64_t v1354;
  uint64_t v1355;
  uint64_t v1356;
  uint64_t v1357;
  uint64_t v1358;
  uint64_t v1359;
  uint64_t v1360;
  uint64_t v1361;
  uint64_t v1362;
  _QWORD *__src;
  _QWORD *__srca;
  _QWORD *__srcb;
  _QWORD *__srcc;
  _QWORD *__srcd;
  _QWORD *__srce;
  _QWORD *__srcf;
  _QWORD *__srcg;
  _QWORD *__srch;
  _QWORD *__srci;
  _QWORD *__srcj;
  _QWORD *__srck;
  _QWORD *__srcl;
  _QWORD *__srcm;
  _QWORD *__srcn;
  _QWORD *__srco;
  _QWORD *__srcp;
  _QWORD *__srcq;
  _QWORD *__srcr;
  _QWORD *__srcs;
  _QWORD *__srct;
  _QWORD *__srcu;
  _QWORD *__srcv;
  uint64_t v1386;
  uint64_t v1387;
  uint64_t v1388;
  uint64_t v1389;
  uint64_t v1390;
  uint64_t v1391;
  uint64_t v1392;
  uint64_t v1393;
  uint64_t v1394;
  uint64_t v1395;
  uint64_t v1396;
  uint64_t v1397;
  uint64_t v1398;
  uint64_t v1399;
  uint64_t v1400;
  uint64_t v1401;
  uint64_t v1402;
  uint64_t v1403;
  uint64_t v1404;
  uint64_t v1405;
  uint64_t v1406;
  uint64_t v1407;
  uint64_t v1408;
  uint64_t v1409;
  uint64_t v1410;
  uint64_t v1411;
  unsigned int (*v1412)(_BYTE *, uint64_t, uint64_t);
  uint64_t v1413;
  _BYTE *v1415;
  _QWORD *v1416;
  uint64_t v1418;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v20 = (_QWORD *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
    return v20;
  }
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  a1[12] = a2[12];
  v1418 = type metadata accessor for TranscriptProtoEvent(0);
  v11 = *(int *)(v1418 + 44);
  v1415 = (char *)a1 + v11;
  v1416 = a1;
  v12 = (char *)a2 + v11;
  v13 = type metadata accessor for TranscriptProtoPayload(0);
  v14 = *(_QWORD *)(v13 - 8);
  v1412 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v1412(v12, 1, v13))
  {
    v1411 = v14;
    v21 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    v1413 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v1413 + 48))(v12, 1, v21))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
      v23 = v1415;
      memcpy(v1415, v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v18 = a2;
      v17 = (int *)v1418;
      v24 = v1411;
LABEL_293:
      v1102 = *(int *)(v13 + 20);
      v1103 = &v23[v1102];
      v1104 = (char *)v15 + v1102;
      v1105 = sub_2408E57A4();
      (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v1105 - 8) + 16))(v1103, v1104, v1105);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v23, 0, 1, v13);
      goto LABEL_294;
    }
    v18 = a2;
    v17 = (int *)v1418;
    v24 = v14;
    v23 = v1415;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v1386 = v21;
        *v1415 = *v12;
        v25 = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
        v26 = v25[5];
        v27 = &v1415[v26];
        v28 = (_QWORD *)((char *)v15 + v26);
        v29 = type metadata accessor for TranscriptProtoLocaleSettings(0);
        v30 = *(_QWORD *)(v29 - 8);
        __src = v15;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v318 = v28[1];
          *v27 = *v28;
          v27[1] = v318;
          v319 = v28[3];
          v27[2] = v28[2];
          v27[3] = v319;
          v320 = v28[5];
          v27[4] = v28[4];
          v27[5] = v320;
          v321 = *(int *)(v29 + 28);
          __dstg = (char *)v28 + v321;
          v1327 = (char *)v27 + v321;
          v322 = v13;
          v323 = sub_2408E57A4();
          v324 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v323 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v15 = __src;
          swift_bridgeObjectRetain();
          v325 = v323;
          v13 = v322;
          v324(v1327, __dstg, v325);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        v326 = v25[6];
        v23 = v1415;
        v327 = &v1415[v326];
        v328 = (_QWORD *)((char *)v15 + v326);
        v329 = type metadata accessor for TranscriptProtoDeviceDetails(0);
        v330 = *(_QWORD *)(v329 - 8);
        v21 = v1386;
        v24 = v1411;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v330 + 48))(v328, 1, v329))
        {
          v331 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
          memcpy(v327, v328, *(_QWORD *)(*(_QWORD *)(v331 - 8) + 64));
        }
        else
        {
          v566 = v328[1];
          *v327 = *v328;
          v327[1] = v566;
          v567 = *(int *)(v329 + 20);
          v1334 = (_DWORD *)((char *)v327 + v567);
          v568 = (_DWORD *)((char *)v328 + v567);
          v569 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
          __dstc = *(_QWORD **)(v569 - 8);
          v570 = (unsigned int (*)(_DWORD *, uint64_t, uint64_t))__dstc[6];
          swift_bridgeObjectRetain();
          if (v570(v568, 1, v569))
          {
            v571 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
            memcpy(v1334, v568, *(_QWORD *)(*(_QWORD *)(v571 - 8) + 64));
          }
          else
          {
            *v1334 = *v568;
            v712 = *(int *)(v569 + 20);
            v713 = (char *)v1334 + v712;
            v1300 = v327;
            v714 = (char *)v568 + v712;
            v715 = sub_2408E57A4();
            v716 = v714;
            v327 = v1300;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v715 - 8) + 16))(v713, v716, v715);
            ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstc[7])(v1334, 0, 1, v569);
          }
          v21 = v1386;
          v24 = v1411;
          v717 = *(int *)(v329 + 24);
          v718 = (char *)v327 + v717;
          v719 = v327;
          v720 = (char *)v328 + v717;
          v721 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v721 - 8) + 16))(v718, v720, v721);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v330 + 56))(v719, 0, 1, v329);
          v23 = v1415;
        }
        v722 = v25[7];
        v723 = &v23[v722];
        v15 = __src;
        v724 = (char *)__src + v722;
        v725 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v725 - 8) + 16))(v723, v724, v725);
        goto LABEL_291;
      case 1u:
        v1387 = v21;
        v1346 = v13;
        v32 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v32;
        v1415[16] = v12[16];
        v33 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
        v34 = v33[6];
        v35 = &v1415[v34];
        v36 = (_QWORD *)((char *)v15 + v34);
        v37 = type metadata accessor for TranscriptProtoStatementID(0);
        v38 = *(_QWORD *)(v37 - 8);
        v39 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48);
        swift_bridgeObjectRetain();
        if (v39(v36, 1, v37))
        {
          v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v35 = *(_DWORD *)v36;
          v332 = v36[2];
          v35[1] = v36[1];
          v35[2] = v332;
          v333 = *(int *)(v37 + 24);
          v334 = (char *)v35 + v333;
          __srcj = v15;
          v335 = (char *)v36 + v333;
          v336 = sub_2408E57A4();
          v337 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v336 - 8) + 16);
          swift_bridgeObjectRetain();
          v338 = v335;
          v15 = __srcj;
          v337(v334, v338, v336);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
        }
        v339 = v33[7];
        v340 = &v1415[v339];
        v341 = (_QWORD *)((char *)v15 + v339);
        v342 = v341[1];
        *v340 = *v341;
        v340[1] = v342;
        v343 = v33[8];
        v344 = &v1415[v343];
        v345 = v15;
        v346 = (char *)v15 + v343;
        v347 = sub_2408E57A4();
        v348 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v347 - 8) + 16);
        swift_bridgeObjectRetain();
        v349 = v346;
        v15 = v345;
        v348(v344, v349, v347);
        v23 = v1415;
        v21 = v1387;
        goto LABEL_82;
      case 2u:
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        v1415[8] = v12[8];
        v41 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1415 + 3) = v41;
        v42 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
        v1388 = v21;
        v43 = &v1415[v42];
        v1347 = v13;
        v44 = &v12[v42];
        v45 = sub_2408E57A4();
        v46 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v47 = v43;
        v21 = v1388;
        v48 = v44;
        v13 = v1347;
        v49 = v45;
        v24 = v1411;
        v46(v47, v48, v49);
        v23 = v1415;
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 3u:
        *v1415 = *v12;
        v50 = (int *)type metadata accessor for TranscriptProtoRequest(0);
        v51 = v50[5];
        v52 = &v1415[v51];
        v53 = (char *)v15 + v51;
        v54 = type metadata accessor for TranscriptProtoRequestContent(0);
        v55 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v54 - 8);
        v1389 = v21;
        if (v55[6](v53, 1, v54))
        {
          v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          v1328 = v55;
          v350 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v350 - 8) + 48))(v53, 1, v350))
          {
            v668 = (char *)&loc_240359FC8 + 4 * word_2408E825E[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v351 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v351 - 8) + 64));
          v959 = *(int *)(v54 + 20);
          v960 = v54;
          v961 = &v52[v959];
          v962 = &v53[v959];
          v963 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v963 - 8) + 16))(v961, v962, v963);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1328[7])(v52, 0, 1, v960);
        }
        v964 = v50[6];
        v965 = &v1415[v964];
        v966 = (char *)v15 + v964;
        v967 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
        v968 = *(_QWORD *)(v967 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v968 + 48))(v966, 1, v967))
        {
          v969 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
          memcpy(v965, v966, *(_QWORD *)(*(_QWORD *)(v969 - 8) + 64));
        }
        else
        {
          v970 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v970 - 8) + 48))(v966, 1, v970))
          {
            v972 = (char *)&loc_24035E0B8 + 4 * byte_2408E8266[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v971 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
          memcpy(v965, v966, *(_QWORD *)(*(_QWORD *)(v971 - 8) + 64));
          v973 = *(int *)(v967 + 20);
          v974 = v965;
          v975 = &v965[v973];
          v976 = &v966[v973];
          v977 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v977 - 8) + 16))(v975, v976, v977);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v968 + 56))(v974, 0, 1, v967);
        }
        v978 = v50[7];
        v979 = &v1415[v978];
        v980 = (_QWORD *)((char *)v15 + v978);
        v981 = v980[1];
        *v979 = *v980;
        v979[1] = v981;
        v982 = v50[8];
        v983 = &v1415[v982];
        v984 = (_QWORD *)((char *)v15 + v982);
        v985 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v986 = *(_QWORD *)(v985 - 8);
        v987 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v986 + 48);
        swift_bridgeObjectRetain();
        if (v987(v984, 1, v985))
        {
          v988 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v983, v984, *(_QWORD *)(*(_QWORD *)(v988 - 8) + 64));
        }
        else
        {
          v989 = v984[1];
          *v983 = *v984;
          v983[1] = v989;
          v983[2] = v984[2];
          v990 = *(int *)(v985 + 24);
          v1344 = (char *)v983 + v990;
          v1360 = v13;
          v991 = (char *)v984 + v990;
          v992 = sub_2408E57A4();
          v993 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v992 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v994 = v991;
          v13 = v1360;
          v993(v1344, v994, v992);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v986 + 56))(v983, 0, 1, v985);
        }
        v24 = v1411;
        v995 = v50[9];
        v23 = v1415;
        v996 = &v1415[v995];
        v997 = (char *)v15 + v995;
        v998 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v998 - 8) + 16))(v996, v997, v998);
        v21 = v1389;
        goto LABEL_291;
      case 4u:
        v57 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v57;
        v58 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1415 + 3) = v58;
        v59 = *((_QWORD *)v12 + 5);
        *((_QWORD *)v1415 + 4) = *((_QWORD *)v12 + 4);
        *((_QWORD *)v1415 + 5) = v59;
        *((_QWORD *)v1415 + 6) = *((_QWORD *)v12 + 6);
        v1415[56] = v12[56];
        v60 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
        v61 = &v1415[v60];
        v62 = &v12[v60];
        v63 = sub_2408E57A4();
        v64 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v65 = v61;
        v24 = v1411;
        v66 = v62;
        v67 = v63;
        v18 = a2;
        v17 = (int *)v1418;
        v64(v65, v66, v67);
        v23 = v1415;
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 5u:
        v1390 = v21;
        v1346 = v13;
        v68 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v68;
        v1415[16] = v12[16];
        *((_QWORD *)v1415 + 3) = *((_QWORD *)v12 + 3);
        v69 = (int *)type metadata accessor for TranscriptProtoAction(0);
        v70 = v69[7];
        v71 = &v1415[v70];
        v72 = (_QWORD *)((char *)v15 + v70);
        v73 = type metadata accessor for TranscriptProtoStatementID(0);
        v74 = *(_QWORD *)(v73 - 8);
        v75 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v74 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v75(v72, 1, v73))
        {
          v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v71 = *(_DWORD *)v72;
          v352 = v72[2];
          v71[1] = v72[1];
          v71[2] = v352;
          v353 = *(int *)(v73 + 24);
          v354 = (char *)v71 + v353;
          __srck = v15;
          v355 = (char *)v72 + v353;
          v356 = sub_2408E57A4();
          v357 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v356 - 8) + 16);
          swift_bridgeObjectRetain();
          v358 = v355;
          v15 = __srck;
          v357(v354, v358, v356);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
        }
        v359 = v69[8];
        v360 = &v1415[v359];
        v361 = (_QWORD *)((char *)v15 + v359);
        v362 = v361[1];
        *v360 = *v361;
        v360[1] = v362;
        v363 = v69[9];
        v364 = &v1415[v363];
        v365 = (_QWORD *)((char *)v15 + v363);
        v366 = v365[1];
        *v364 = *v365;
        v364[1] = v366;
        v367 = v69[10];
        v368 = &v1415[v367];
        v369 = (_QWORD *)((char *)v15 + v367);
        v370 = v15;
        v371 = v369[1];
        *v368 = *v369;
        v368[1] = v371;
        v372 = v69[11];
        v373 = &v1415[v372];
        v374 = (char *)v370 + v372;
        v375 = sub_2408E57A4();
        v376 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v375 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15 = v370;
        swift_bridgeObjectRetain();
        v376(v373, v374, v375);
        v23 = v1415;
        v21 = v1390;
LABEL_82:
        swift_storeEnumTagMultiPayload();
        v18 = a2;
        v17 = (int *)v1418;
        v13 = v1346;
        goto LABEL_254;
      case 6u:
        v1391 = v21;
        v1348 = v13;
        v77 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v77;
        v78 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1415 + 3) = v78;
        v79 = *((_QWORD *)v12 + 5);
        *((_QWORD *)v1415 + 4) = *((_QWORD *)v12 + 4);
        *((_QWORD *)v1415 + 5) = v79;
        v80 = *((_QWORD *)v12 + 7);
        *((_QWORD *)v1415 + 6) = *((_QWORD *)v12 + 6);
        *((_QWORD *)v1415 + 7) = v80;
        v81 = type metadata accessor for TranscriptProtoClientAction(0);
        v82 = *(int *)(v81 + 36);
        __dst = &v1415[v82];
        v1323 = (int *)v81;
        v83 = &v12[v82];
        v84 = type metadata accessor for TranscriptProtoStatementID(0);
        v85 = *(_QWORD *)(v84 - 8);
        v86 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v85 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v86(v83, 1, v84))
        {
          v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(__dst, v83, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dst = *(_DWORD *)v83;
          v377 = v83[2];
          __dst[1] = v83[1];
          __dst[2] = v377;
          v378 = *(int *)(v84 + 24);
          v379 = (char *)__dst + v378;
          v380 = (char *)v83 + v378;
          v381 = sub_2408E57A4();
          v382 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v381 - 8) + 16);
          swift_bridgeObjectRetain();
          v382(v379, v380, v381);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v85 + 56))(__dst, 0, 1, v84);
        }
        v18 = a2;
        v17 = (int *)v1418;
        v24 = v1411;
        v383 = v1323[10];
        v23 = v1415;
        v384 = &v1415[v383];
        v15 = v12;
        v385 = &v12[v383];
        v386 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v386 - 8) + 16))(v384, v385, v386);
        v21 = v1391;
        swift_storeEnumTagMultiPayload();
        v13 = v1348;
        goto LABEL_292;
      case 7u:
        v1392 = v21;
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        Step = type metadata accessor for TranscriptProtoQueryStep(0);
        v89 = *(int *)(Step + 20);
        v90 = &v1415[v89];
        v91 = (_QWORD *)((char *)v15 + v89);
        v92 = type metadata accessor for TranscriptProtoStatementID(0);
        v93 = *(_QWORD *)(v92 - 8);
        v94 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v93 + 48);
        swift_bridgeObjectRetain();
        if (v94(v91, 1, v92))
          goto LABEL_22;
        goto LABEL_85;
      case 8u:
        v1392 = v21;
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        Step = type metadata accessor for TranscriptProtoVariableStep(0);
        v96 = *(int *)(Step + 20);
        v90 = &v1415[v96];
        v91 = (_QWORD *)((char *)v15 + v96);
        v92 = type metadata accessor for TranscriptProtoStatementID(0);
        v93 = *(_QWORD *)(v92 - 8);
        v97 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v93 + 48);
        swift_bridgeObjectRetain();
        if (v97(v91, 1, v92))
        {
LABEL_22:
          v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        }
        else
        {
LABEL_85:
          *(_DWORD *)v90 = *(_DWORD *)v91;
          v387 = v91[2];
          v90[1] = v91[1];
          v90[2] = v387;
          v388 = *(int *)(v92 + 24);
          v389 = (char *)v90 + v388;
          __srcl = v15;
          v390 = (char *)v91 + v388;
          v391 = v13;
          v392 = sub_2408E57A4();
          v393 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v392 - 8) + 16);
          swift_bridgeObjectRetain();
          v394 = v390;
          v15 = __srcl;
          v395 = v392;
          v13 = v391;
          v393(v389, v394, v395);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
        }
        v396 = *(int *)(Step + 24);
        v23 = v1415;
        v397 = &v1415[v396];
        v398 = (char *)v15 + v396;
        v399 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v399 - 8) + 16))(v397, v398, v399);
        v21 = v1392;
        goto LABEL_252;
      case 9u:
        v98 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v98;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 0xAu:
        v99 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
        if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 48))(v12, 1, v99))
        {
          v400 = (char *)&loc_240358C2C + 4 * word_2408E8256[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
        memcpy(v1415, v12, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        v17 = (int *)v1418;
        v955 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
        v956 = &v1415[v955];
        v957 = &v12[v955];
        v958 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v958 - 8) + 16))(v956, v957, v958);
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 0xBu:
        v101 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
        v102 = *(_QWORD *)(v101 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v102 + 48))(v12, 1, v101))
        {
          v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
          v23 = v1415;
          memcpy(v1415, v12, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
        }
        else
        {
          v23 = v1415;
          v401 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
          v402 = *(_QWORD *)(v401 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v402 + 48))(v12, 1, v401))
          {
            v403 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
            memcpy(v1415, v12, *(_QWORD *)(*(_QWORD *)(v403 - 8) + 64));
          }
          else
          {
            v669 = *((_QWORD *)v12 + 1);
            *(_QWORD *)v1415 = *(_QWORD *)v12;
            *((_QWORD *)v1415 + 1) = v669;
            v670 = *((_QWORD *)v12 + 3);
            *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
            *((_QWORD *)v1415 + 3) = v670;
            v671 = *((_QWORD *)v12 + 5);
            *((_QWORD *)v1415 + 4) = *((_QWORD *)v12 + 4);
            *((_QWORD *)v1415 + 5) = v671;
            v672 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
            v1299 = &v12[v672];
            __dsti = &v1415[v672];
            v1358 = v13;
            v673 = sub_2408E57A4();
            v674 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v673 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v675 = v673;
            v13 = v1358;
            v674(__dsti, v1299, v675);
            v23 = v1415;
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v402 + 56))(v1415, 0, 1, v401);
          }
          v18 = a2;
          v676 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
          v677 = &v23[v676];
          v678 = (char *)v15 + v676;
          v679 = sub_2408E57A4();
          (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v679 - 8) + 16))(v677, v678, v679);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v23, 0, 1, v101);
        }
        v17 = (int *)v1418;
        v680 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
        v681 = &v23[v680];
        v682 = (char *)v15 + v680;
        v683 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v683 - 8) + 16))(v681, v682, v683);
        swift_storeEnumTagMultiPayload();
        goto LABEL_254;
      case 0xCu:
        v104 = *(_QWORD *)v12;
        v105 = *((_QWORD *)v12 + 1);
        sub_240360070(*(_QWORD *)v12, v105);
        *(_QWORD *)v1415 = v104;
        *((_QWORD *)v1415 + 1) = v105;
        v106 = *((_QWORD *)v12 + 2);
        v107 = *((_QWORD *)v12 + 3);
        sub_240360070(v106, v107);
        *((_QWORD *)v1415 + 2) = v106;
        *((_QWORD *)v1415 + 3) = v107;
        v108 = *((_QWORD *)v12 + 5);
        *((_QWORD *)v1415 + 4) = *((_QWORD *)v12 + 4);
        *((_QWORD *)v1415 + 5) = v108;
        v109 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
        v110 = &v1415[v109];
        v111 = v12;
        v112 = &v12[v109];
        v113 = v21;
        v114 = v13;
        v115 = sub_2408E57A4();
        v116 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
        swift_bridgeObjectRetain();
        v117 = v112;
        v15 = v111;
        v24 = v1411;
        v118 = v115;
        v13 = v114;
        v21 = v113;
        v116(v110, v117, v118);
        v23 = v1415;
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 0xDu:
        v119 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v119;
        v120 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1415 + 3) = v120;
        v121 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        v122 = v121[6];
        v123 = &v1415[v122];
        __srca = v15;
        v124 = (char *)v15 + v122;
        v125 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        v126 = *(_QWORD *)(v125 - 8);
        v127 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v126 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v127(v124, 1, v125))
        {
          v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
          memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
          v23 = v1415;
          goto LABEL_196;
        }
        v1355 = v13;
        v404 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        v405 = *(_QWORD *)(v404 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v405 + 48))(v124, 1, v404))
        {
          v406 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
          memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v406 - 8) + 64));
          v23 = v1415;
          goto LABEL_195;
        }
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 6)
        {
          v741 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v741 - 8) + 16))(v123, v124, v741);
        }
        else
        {
          v1339 = (void *)v404;
          if (EnumCaseMultiPayload == 5)
          {
            *v123 = *v124;
            v742 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                          + 20);
            v743 = &v123[v742];
            v744 = &v124[v742];
            v745 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v745 - 8) + 16))(v743, v744, v745);
            v404 = (uint64_t)v1339;
          }
          else
          {
            if (EnumCaseMultiPayload != 1)
            {
              memcpy(v123, v124, *(_QWORD *)(v405 + 64));
              v23 = v1415;
LABEL_194:
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v405 + 56))(v123, 0, 1, v404);
LABEL_195:
              v746 = *(int *)(v125 + 20);
              v747 = &v123[v746];
              v748 = &v124[v746];
              v749 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v749 - 8) + 16))(v747, v748, v749);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
              v13 = v1355;
LABEL_196:
              v750 = v121[7];
              v751 = &v23[v750];
              v752 = __srca;
              v753 = (_QWORD *)((char *)__srca + v750);
              v754 = type metadata accessor for TranscriptProtoStatementID(0);
              v755 = *(_QWORD *)(v754 - 8);
              __dste = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v755 + 48);
              v1302 = v755;
              if (__dste(v753, 1, v754))
              {
                v756 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v751, v753, *(_QWORD *)(*(_QWORD *)(v756 - 8) + 64));
              }
              else
              {
                *(_DWORD *)v751 = *(_DWORD *)v753;
                v757 = v753[2];
                v751[1] = v753[1];
                v751[2] = v757;
                v758 = *(int *)(v754 + 24);
                v1340 = (void *)v754;
                v759 = (char *)v751 + v758;
                v1293 = (char *)v753 + v758;
                v760 = v121;
                v761 = v21;
                v762 = v13;
                v763 = sub_2408E57A4();
                v764 = v23;
                v765 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v763 - 8) + 16);
                swift_bridgeObjectRetain();
                v766 = v759;
                v754 = (uint64_t)v1340;
                v752 = __srca;
                v767 = v763;
                v13 = v762;
                v21 = v761;
                v121 = v760;
                v765(v766, v1293, v767);
                v23 = v764;
                (*(void (**)(_QWORD *, _QWORD, uint64_t, void *))(v755 + 56))(v751, 0, 1, v1340);
              }
              v768 = v121[8];
              v769 = &v23[v768];
              v770 = (_QWORD *)((char *)v752 + v768);
              v771 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
              v772 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v771 - 8);
              v24 = v1411;
              if (v772[6](v770, 1, v771))
              {
                v773 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
                memcpy(v769, v770, *(_QWORD *)(*(_QWORD *)(v773 - 8) + 64));
                v17 = (int *)v1418;
              }
              else
              {
                v1294 = v121;
                v1341 = (int *)v754;
                v774 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
                v775 = *(_QWORD *)(v774 - 8);
                v1286 = v772;
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v775 + 48))(v770, 1, v774))
                {
                  v776 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
                  memcpy(v769, v770, *(_QWORD *)(*(_QWORD *)(v776 - 8) + 64));
                  v777 = v769;
                  v17 = (int *)v1418;
                }
                else
                {
                  v1275 = (void *)v775;
                  v1280 = (void *)v774;
                  v778 = swift_getEnumCaseMultiPayload();
                  if (v778 == 1)
                  {
                    *v769 = *v770;
                    v787 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                    v788 = (char *)v769 + v787;
                    v789 = (char *)v770 + v787;
                    v790 = v21;
                    v791 = v13;
                    v792 = sub_2408E57A4();
                    v777 = v769;
                    v793 = v23;
                    v794 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v792 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v795 = v789;
                    v796 = v792;
                    v13 = v791;
                    v21 = v790;
                    v24 = v1411;
                    v794(v788, v795, v796);
                    v23 = v793;
                    v797 = v1280;
                    swift_storeEnumTagMultiPayload();
                    v17 = (int *)v1418;
                    v798 = (void (**)(_QWORD *, _QWORD, uint64_t, void *))v1275;
                  }
                  else if (v778)
                  {
                    v798 = (void (**)(_QWORD *, _QWORD, uint64_t, void *))v775;
                    memcpy(v769, v770, *(_QWORD *)(v775 + 64));
                    v777 = v769;
                    v17 = (int *)v1418;
                    v797 = v1280;
                  }
                  else
                  {
                    v1271 = (void *)v771;
                    v1409 = v21;
                    v1359 = v13;
                    v779 = v23;
                    v780 = v770[1];
                    *v769 = *v770;
                    v769[1] = v780;
                    v781 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                    v782 = *(int *)(v781 + 20);
                    v777 = v769;
                    v783 = (_QWORD *)((char *)v769 + v782);
                    v784 = v770;
                    v785 = (_QWORD *)((char *)v770 + v782);
                    swift_bridgeObjectRetain();
                    if (__dste(v785, 1, (uint64_t)v1341))
                    {
                      v786 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                      memcpy(v783, v785, *(_QWORD *)(*(_QWORD *)(v786 - 8) + 64));
                    }
                    else
                    {
                      *(_DWORD *)v783 = *(_DWORD *)v785;
                      v936 = v785[2];
                      v783[1] = v785[1];
                      v783[2] = v936;
                      v937 = v1341[6];
                      __dstj = (char *)v783 + v937;
                      v938 = (char *)v785 + v937;
                      v939 = sub_2408E57A4();
                      v940 = v783;
                      v941 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v939 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v941(__dstj, v938, v939);
                      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v1302 + 56))(v940, 0, 1, v1341);
                    }
                    v942 = *(int *)(v781 + 24);
                    v943 = (char *)v769 + v942;
                    v770 = v784;
                    v944 = (char *)v784 + v942;
                    v945 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v945 - 8) + 16))(v943, v944, v945);
                    v797 = v1280;
                    swift_storeEnumTagMultiPayload();
                    v17 = (int *)v1418;
                    v23 = v779;
                    v13 = v1359;
                    v21 = v1409;
                    v24 = v1411;
                    v771 = (uint64_t)v1271;
                    v798 = (void (**)(_QWORD *, _QWORD, uint64_t, void *))v1275;
                  }
                  v798[7](v777, 0, 1, v797);
                }
                v946 = *(int *)(v771 + 20);
                v947 = v771;
                v948 = (char *)v777 + v946;
                v949 = (char *)v770 + v946;
                v950 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v950 - 8) + 16))(v948, v949, v950);
                (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1286 + 7))(v777, 0, 1, v947);
                v121 = v1294;
              }
              v951 = v121[9];
              v952 = &v23[v951];
              v15 = __srca;
              v953 = (char *)__srca + v951;
              v954 = sub_2408E57A4();
              (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v954 - 8) + 16))(v952, v953, v954);
              swift_storeEnumTagMultiPayload();
              v18 = a2;
LABEL_292:
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v1413 + 56))(v23, 0, 1, v21);
              goto LABEL_293;
            }
            v685 = *(_QWORD *)v124;
            if ((~*(_QWORD *)v124 & 0xF000000000000007) != 0)
              swift_retain();
            *(_QWORD *)v123 = v685;
            v686 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
            v687 = &v123[v686];
            v688 = &v124[v686];
            v689 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v689 - 8) + 16))(v687, v688, v689);
            v404 = (uint64_t)v1339;
          }
        }
        swift_storeEnumTagMultiPayload();
        v23 = v1415;
        goto LABEL_194;
      case 0xEu:
      case 0x10u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x29u:
        v156 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v1415, v12, v156);
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 0xFu:
        v1393 = v21;
        v129 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v129;
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
        v131 = *(int *)(StepResults + 24);
        v132 = &v1415[v131];
        v133 = (_QWORD *)((char *)v15 + v131);
        v134 = type metadata accessor for TranscriptProtoStatementID(0);
        v135 = *(_QWORD *)(v134 - 8);
        v136 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v135 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v136(v133, 1, v134))
        {
          v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v132 = *(_DWORD *)v133;
          v407 = v133[2];
          v132[1] = v133[1];
          v132[2] = v407;
          v408 = *(int *)(v134 + 24);
          v409 = (char *)v132 + v408;
          __srcm = v15;
          v410 = (char *)v133 + v408;
          v411 = v13;
          v412 = sub_2408E57A4();
          v413 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v412 - 8) + 16);
          swift_bridgeObjectRetain();
          v414 = v410;
          v15 = __srcm;
          v415 = v412;
          v13 = v411;
          v413(v409, v414, v415);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
        }
        v416 = *(int *)(StepResults + 28);
        v23 = v1415;
        v417 = &v1415[v416];
        v418 = (char *)v15 + v416;
        v419 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v419 - 8) + 16))(v417, v418, v419);
        v21 = v1393;
        goto LABEL_252;
      case 0x11u:
        v1394 = v21;
        v138 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v138;
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        v1415[24] = v12[24];
        *(_WORD *)(v1415 + 25) = *(_WORD *)(v12 + 25);
        v139 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
        v140 = v139[9];
        v141 = &v1415[v140];
        v142 = (_QWORD *)((char *)v15 + v140);
        v143 = type metadata accessor for TranscriptProtoParameterSet(0);
        v144 = *(_QWORD *)(v143 - 8);
        v145 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v144 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v145(v142, 1, v143))
        {
          v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
          memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
        }
        else
        {
          *v141 = *v142;
          v420 = *(int *)(v143 + 20);
          v421 = (char *)v141 + v420;
          __srcn = v15;
          v422 = (char *)v142 + v420;
          v423 = v13;
          v424 = sub_2408E57A4();
          v425 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v424 - 8) + 16);
          swift_bridgeObjectRetain();
          v426 = v422;
          v15 = __srcn;
          v427 = v424;
          v13 = v423;
          v425(v421, v426, v427);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
        }
        v428 = v139[10];
        v429 = &v1415[v428];
        v430 = (_QWORD *)((char *)v15 + v428);
        v431 = type metadata accessor for TranscriptProtoStatementID(0);
        v432 = *(_QWORD *)(v431 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v432 + 48))(v430, 1, v431))
        {
          v433 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v429, v430, *(_QWORD *)(*(_QWORD *)(v433 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v429 = *(_DWORD *)v430;
          v572 = v430[2];
          v429[1] = v430[1];
          v429[2] = v572;
          v573 = *(int *)(v431 + 24);
          v574 = (char *)v429 + v573;
          __srcq = v15;
          v575 = (char *)v430 + v573;
          v576 = v13;
          v577 = sub_2408E57A4();
          v578 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v577 - 8) + 16);
          swift_bridgeObjectRetain();
          v579 = v575;
          v15 = __srcq;
          v580 = v577;
          v13 = v576;
          v578(v574, v579, v580);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v432 + 56))(v429, 0, 1, v431);
        }
        v24 = v1411;
        v581 = v139[11];
        v23 = v1415;
        v582 = &v1415[v581];
        v583 = (char *)v15 + v581;
        v584 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v584 - 8) + 16))(v582, v583, v584);
        v21 = v1394;
        goto LABEL_291;
      case 0x12u:
        v147 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v147;
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        v148 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
        v1395 = v21;
        v149 = &v1415[v148];
        v1349 = v13;
        v150 = &v12[v148];
        v151 = sub_2408E57A4();
        v152 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v151 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v153 = v149;
        v21 = v1395;
        v154 = v150;
        v13 = v1349;
        v155 = v151;
        v24 = v1411;
        v152(v153, v154, v155);
        v23 = v1415;
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 0x16u:
        v157 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v157;
        v158 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
        v159 = &v1415[v158];
        v160 = v12;
        v161 = &v12[v158];
        v162 = v21;
        v163 = v13;
        v164 = sub_2408E57A4();
        v165 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v164 - 8) + 16);
        swift_bridgeObjectRetain();
        v166 = v161;
        v15 = v160;
        v24 = v1411;
        v167 = v164;
        v13 = v163;
        v21 = v162;
        v165(v159, v166, v167);
        v23 = v1415;
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 0x17u:
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        v168 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
        v169 = &v1415[v168];
        v170 = v12;
        v171 = &v12[v168];
        v172 = v21;
        v173 = v13;
        v174 = sub_2408E57A4();
        v175 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v174 - 8) + 16);
        swift_bridgeObjectRetain();
        v176 = v171;
        v15 = v170;
        v24 = v1411;
        v177 = v174;
        v13 = v173;
        v21 = v172;
        v175(v169, v176, v177);
        v23 = v1415;
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 0x18u:
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        v178 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
        v179 = &v1415[v178];
        v180 = v12;
        v181 = &v12[v178];
        v182 = v21;
        v183 = v13;
        v184 = sub_2408E57A4();
        v185 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v184 - 8) + 16);
        swift_bridgeObjectRetain();
        v186 = v181;
        v15 = v180;
        v24 = v1411;
        v187 = v184;
        v13 = v183;
        v21 = v182;
        v185(v179, v186, v187);
        v23 = v1415;
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 0x19u:
        v188 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v188;
        v189 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
        v1396 = v21;
        v190 = &v1415[v189];
        v1350 = v13;
        v191 = &v12[v189];
        v192 = sub_2408E57A4();
        v193 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v192 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v194 = v190;
        v21 = v1396;
        v195 = v191;
        v13 = v1350;
        v196 = v192;
        v24 = v1411;
        v193(v194, v195, v196);
        v23 = v1415;
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 0x1Au:
        v1397 = v21;
        v197 = type metadata accessor for TranscriptProtoStatementID(0);
        v198 = *(_QWORD *)(v197 - 8);
        v199 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v198 + 48);
        if (v199(v12, 1, v197))
        {
          v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          v201 = v1415;
          memcpy(v1415, v12, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
        }
        else
        {
          v201 = v1415;
          *(_DWORD *)v1415 = *(_DWORD *)v12;
          v434 = *((_QWORD *)v12 + 2);
          *((_QWORD *)v1415 + 1) = *((_QWORD *)v12 + 1);
          *((_QWORD *)v1415 + 2) = v434;
          v435 = *(int *)(v197 + 24);
          v436 = &v1415[v435];
          v1329 = (char *)v15 + v435;
          v437 = v15;
          v438 = v13;
          v439 = sub_2408E57A4();
          v440 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v439 - 8) + 16);
          swift_bridgeObjectRetain();
          v441 = v439;
          v13 = v438;
          v15 = v437;
          v440(v436, v1329, v441);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v1415, 0, 1, v197);
        }
        v442 = type metadata accessor for TranscriptProtoActionCancellation(0);
        v443 = *(int *)(v442 + 20);
        v444 = &v201[v443];
        v445 = (_QWORD *)((char *)v15 + v443);
        if (v199((_BYTE *)v15 + v443, 1, v197))
        {
          v446 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v444, v445, *(_QWORD *)(*(_QWORD *)(v446 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v444 = *(_DWORD *)v445;
          v585 = v445[2];
          v444[1] = v445[1];
          v444[2] = v585;
          v586 = *(int *)(v197 + 24);
          v1335 = (char *)v444 + v586;
          __srcr = v15;
          v587 = (char *)v445 + v586;
          v588 = v13;
          v589 = sub_2408E57A4();
          v590 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v589 - 8) + 16);
          swift_bridgeObjectRetain();
          v591 = v587;
          v15 = __srcr;
          v592 = v589;
          v13 = v588;
          v590(v1335, v591, v592);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v198 + 56))(v444, 0, 1, v197);
        }
        v17 = (int *)v1418;
        v593 = *(int *)(v442 + 24);
        v23 = v1415;
        v594 = &v1415[v593];
        v595 = (char *)v15 + v593;
        v596 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v596 - 8) + 16))(v594, v595, v596);
        v21 = v1397;
        goto LABEL_331;
      case 0x1Bu:
        v202 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v202;
        v203 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1415 + 3) = v203;
        *((_DWORD *)v1415 + 8) = *((_DWORD *)v12 + 8);
        v1351 = v13;
        v204 = *((_QWORD *)v12 + 6);
        *((_QWORD *)v1415 + 5) = *((_QWORD *)v12 + 5);
        *((_QWORD *)v1415 + 6) = v204;
        v205 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
        v206 = &v1415[v205];
        v207 = &v12[v205];
        v208 = sub_2408E57A4();
        v209 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v208 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v13 = v1351;
        swift_bridgeObjectRetain();
        v210 = v206;
        v24 = v1411;
        v211 = v207;
        v212 = v208;
        v18 = a2;
        v17 = (int *)v1418;
        v209(v210, v211, v212);
        v23 = v1415;
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 0x1Cu:
        v213 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v213;
        v214 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1415 + 3) = v214;
        *((_QWORD *)v1415 + 4) = *((_QWORD *)v12 + 4);
        v1324 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
        v215 = v1324[7];
        v216 = &v1415[v215];
        __srcb = v12;
        v217 = &v12[v215];
        v218 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v219 = *(_QWORD *)(v218 - 8);
        v220 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v219 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v1352 = v13;
        v1398 = v21;
        if (v220(v217, 1, v218))
        {
          v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
          memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
          v222 = __srcb;
          v223 = v1415;
        }
        else
        {
          v447 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v447 - 8) + 48))(v217, 1, v447))
          {
            v690 = (char *)&loc_24035A23C + 4 * word_2408E8236[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v448 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
          memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v448 - 8) + 64));
          v222 = __srcb;
          v223 = v1415;
          v1025 = *(int *)(v218 + 20);
          v1026 = &v216[v1025];
          v1027 = &v217[v1025];
          v1028 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1028 - 8) + 16))(v1026, v1027, v1028);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v219 + 56))(v216, 0, 1, v218);
        }
        v1029 = v1324[8];
        v1030 = &v223[v1029];
        v1031 = (_QWORD *)((char *)v222 + v1029);
        v1032 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
        v1033 = *((_QWORD *)v1032 - 1);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v1033 + 48))(v1031, 1, v1032))
        {
          v1034 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
          memcpy(v1030, v1031, *(_QWORD *)(*(_QWORD *)(v1034 - 8) + 64));
        }
        else
        {
          *v1030 = *v1031;
          *((_BYTE *)v1030 + 8) = *((_BYTE *)v1031 + 8);
          v1030[2] = v1031[2];
          v1035 = v1032[7];
          v1036 = (char *)v1030 + v1035;
          v1037 = (char *)v1031 + v1035;
          v1038 = type metadata accessor for TranscriptProtoDialogType(0);
          __dstf = *(_QWORD **)(v1038 - 8);
          v1039 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstf[6];
          v1040 = v1038;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v1039(v1037, 1, v1040))
          {
            v1041 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
            memcpy(v1036, v1037, *(_QWORD *)(*(_QWORD *)(v1041 - 8) + 64));
          }
          else
          {
            v1306 = v1040;
            v1042 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1042 - 8) + 48))(v1037, 1, v1042))
            {
              v1045 = (char *)&loc_24035EDBC + 4 * byte_2408E824C[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v1043 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
            memcpy(v1036, v1037, *(_QWORD *)(*(_QWORD *)(v1043 - 8) + 64));
            v1044 = v1037;
            v1046 = *(int *)(v1040 + 20);
            v1047 = &v1036[v1046];
            v1048 = v1036;
            v1049 = &v1044[v1046];
            v1050 = sub_2408E57A4();
            v1051 = v1047;
            v1040 = v1306;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1050 - 8) + 16))(v1051, v1049, v1050);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstf[7])(v1048, 0, 1, v1306);
          }
          v1052 = v1032[8];
          v1053 = (char *)v1030 + v1052;
          v1054 = (char *)v1031 + v1052;
          if (v1039((char *)v1031 + v1052, 1, v1040))
          {
            v1055 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
            memcpy(v1053, v1054, *(_QWORD *)(*(_QWORD *)(v1055 - 8) + 64));
          }
          else
          {
            v1056 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1056 - 8) + 48))(v1054, 1, v1056))
            {
              v1059 = (char *)&loc_24035EFC4 + 4 * byte_2408E8251[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v1057 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
            memcpy(v1053, v1054, *(_QWORD *)(*(_QWORD *)(v1057 - 8) + 64));
            v1058 = v1054;
            v1060 = *(int *)(v1040 + 20);
            v1061 = v1040;
            v1062 = &v1053[v1060];
            v1063 = &v1058[v1060];
            v1064 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1064 - 8) + 16))(v1062, v1063, v1064);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstf[7])(v1053, 0, 1, v1061);
          }
          v1065 = v1032[9];
          v1066 = (char *)v1030 + v1065;
          v1067 = (char *)v1031 + v1065;
          v1068 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1068 - 8) + 16))(v1066, v1067, v1068);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v1033 + 56))(v1030, 0, 1, v1032);
          v222 = __srcb;
        }
        v1069 = v1324[9];
        v1070 = v223;
        v1071 = &v223[v1069];
        v1072 = (_QWORD *)((char *)v222 + v1069);
        v1073 = type metadata accessor for TranscriptProtoStatementID(0);
        v1074 = *(_QWORD *)(v1073 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1074 + 48))(v1072, 1, v1073))
        {
          v1075 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1071, v1072, *(_QWORD *)(*(_QWORD *)(v1075 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1071 = *(_DWORD *)v1072;
          v1076 = v1072[2];
          v1071[1] = v1072[1];
          v1071[2] = v1076;
          v1077 = *(int *)(v1073 + 24);
          v1078 = (char *)v1071 + v1077;
          v1079 = (char *)v1072 + v1077;
          v1080 = sub_2408E57A4();
          v1081 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1080 - 8) + 16);
          swift_bridgeObjectRetain();
          v1082 = v1079;
          v222 = __srcb;
          v1081(v1078, v1082, v1080);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1074 + 56))(v1071, 0, 1, v1073);
        }
        v24 = v1411;
        v1083 = v1324[10];
        v1084 = v1070;
        v1085 = &v1070[v1083];
        v1086 = (_QWORD *)((char *)v222 + v1083);
        v1087 = v1086[1];
        *v1085 = *v1086;
        v1085[1] = v1087;
        v1088 = v1324[11];
        v1089 = &v1070[v1088];
        v1090 = (char *)__srcb + v1088;
        v1091 = sub_2408E57A4();
        v1092 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v1091 - 8) + 16);
        swift_bridgeObjectRetain();
        v1093 = v1090;
        v15 = __srcb;
        v1092(v1089, v1093, v1091);
        v23 = v1084;
        v21 = v1398;
        swift_storeEnumTagMultiPayload();
        v18 = a2;
        v17 = (int *)v1418;
        v13 = v1352;
        goto LABEL_292;
      case 0x1Du:
        v224 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v224;
        v225 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1415 + 3) = v225;
        v226 = type metadata accessor for TranscriptProtoStatementResult(0);
        v227 = *(int *)(v226 + 24);
        __dsta = &v1415[v227];
        v1325 = (int *)v226;
        v228 = &v12[v227];
        v229 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        v230 = *(_QWORD *)(v229 - 8);
        v231 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v230 + 48);
        swift_bridgeObjectRetain();
        v232 = v228;
        swift_bridgeObjectRetain();
        __srcc = v15;
        if (v231(v228, 1, v229))
        {
          v233 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
          memcpy(__dsta, v228, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
          v23 = v1415;
        }
        else
        {
          v1291 = v230;
          v1298 = v229;
          v449 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v450 = *(_QWORD *)(v449 - 8);
          v451 = __dsta;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v450 + 48))(v232, 1, v449))
          {
            v452 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(__dsta, v232, *(_QWORD *)(*(_QWORD *)(v452 - 8) + 64));
            v23 = v1415;
          }
          else
          {
            v691 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            v23 = v1415;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v691 - 8) + 48))(v232, 1, v691))
            {
              v739 = (char *)&loc_24035A878 + 4 * word_2408E8220[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v692 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            v451 = __dsta;
            memcpy(__dsta, v232, *(_QWORD *)(*(_QWORD *)(v692 - 8) + 64));
            v1167 = *(int *)(v449 + 20);
            v1283 = &__dsta[v1167];
            v1168 = &v232[v1167];
            v1169 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1169 - 8) + 16))(v1283, v1168, v1169);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(__dsta, 0, 1, v449);
          }
          v1170 = *(int *)(v1298 + 20);
          v1171 = &v451[v1170];
          v1172 = &v232[v1170];
          v1173 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
          v1174 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v1173 - 1);
          if (((unsigned int (**)(char *, uint64_t, int *))v1174)[6](v1172, 1, v1173))
          {
            v1175 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
            memcpy(v1171, v1172, *(_QWORD *)(*(_QWORD *)(v1175 - 8) + 64));
          }
          else
          {
            v1284 = (void (**)(char *, _QWORD, uint64_t, int *))v1174;
            v1410 = v21;
            *(_QWORD *)v1171 = *(_QWORD *)v1172;
            v1176 = v1173[5];
            v1277 = &v1171[v1176];
            v1177 = &v1172[v1176];
            v1178 = type metadata accessor for TranscriptProtoResponseDialog(0);
            v1272 = *(_QWORD **)(v1178 - 8);
            v1179 = (unsigned int (*)(char *, uint64_t, uint64_t))v1272[6];
            swift_bridgeObjectRetain();
            v1362 = v13;
            v1290 = v232;
            if (v1179(v1177, 1, v1178))
            {
              v1180 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
              memcpy(v1277, v1177, *(_QWORD *)(*(_QWORD *)(v1180 - 8) + 64));
            }
            else
            {
              v1181 = *((_QWORD *)v1177 + 1);
              *(_QWORD *)v1277 = *(_QWORD *)v1177;
              *((_QWORD *)v1277 + 1) = v1181;
              v1182 = *((_QWORD *)v1177 + 3);
              *((_QWORD *)v1277 + 2) = *((_QWORD *)v1177 + 2);
              *((_QWORD *)v1277 + 3) = v1182;
              v1183 = *((_QWORD *)v1177 + 5);
              *((_QWORD *)v1277 + 4) = *((_QWORD *)v1177 + 4);
              *((_QWORD *)v1277 + 5) = v1183;
              v1184 = *((_QWORD *)v1177 + 7);
              *((_QWORD *)v1277 + 6) = *((_QWORD *)v1177 + 6);
              *((_QWORD *)v1277 + 7) = v1184;
              v1185 = *(int *)(v1178 + 32);
              v1268 = &v1177[v1185];
              v1269 = &v1277[v1185];
              v1186 = sub_2408E57A4();
              v1267 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1186 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1267(v1269, v1268, v1186);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1272[7])(v1277, 0, 1, v1178);
            }
            v1187 = v1173[6];
            v1188 = &v1171[v1187];
            v1189 = &v1172[v1187];
            v1190 = type metadata accessor for TranscriptProtoResponseVisual(0);
            v1191 = *(_QWORD *)(v1190 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1191 + 48))(v1189, 1, v1190))
            {
              v1192 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
              memcpy(v1188, v1189, *(_QWORD *)(*(_QWORD *)(v1192 - 8) + 64));
            }
            else
            {
              v1193 = *((_QWORD *)v1189 + 1);
              *(_QWORD *)v1188 = *(_QWORD *)v1189;
              *((_QWORD *)v1188 + 1) = v1193;
              v1194 = *(int *)(v1190 + 24);
              v1278 = (void *)v1190;
              v1195 = &v1188[v1194];
              v1196 = &v1189[v1194];
              v1197 = sub_2408E57A4();
              v1273 = v1188;
              v1198 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1197 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1198(v1195, v1196, v1197);
              (*(void (**)(char *, _QWORD, uint64_t, void *))(v1191 + 56))(v1273, 0, 1, v1278);
            }
            v21 = v1410;
            v1199 = v1173[7];
            v1200 = &v1171[v1199];
            v1201 = &v1172[v1199];
            v1202 = *((_QWORD *)v1201 + 1);
            *(_QWORD *)v1200 = *(_QWORD *)v1201;
            *((_QWORD *)v1200 + 1) = v1202;
            v1203 = v1173[8];
            v1204 = &v1171[v1203];
            v1205 = &v1172[v1203];
            v1206 = *((_QWORD *)v1205 + 1);
            *(_QWORD *)v1204 = *(_QWORD *)v1205;
            *((_QWORD *)v1204 + 1) = v1206;
            v1171[v1173[9]] = v1172[v1173[9]];
            v1171[v1173[10]] = v1172[v1173[10]];
            v1207 = v1173[11];
            v1208 = &v1171[v1207];
            v1209 = &v1172[v1207];
            v1210 = sub_2408E57A4();
            v1211 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1210 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1211(v1208, v1209, v1210);
            v1284[7](v1171, 0, 1, v1173);
            v13 = v1362;
            v15 = __srcc;
            v23 = v1415;
            v232 = v1290;
          }
          v1212 = *(int *)(v1298 + 24);
          v1213 = &__dsta[v1212];
          v1214 = &v232[v1212];
          v1215 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1215 - 8) + 16))(v1213, v1214, v1215);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1291 + 56))(__dsta, 0, 1, v1298);
        }
        v1216 = v1325;
        v1217 = v1325[7];
        v1218 = &v23[v1217];
        v1219 = (_QWORD *)((char *)v15 + v1217);
        v1220 = type metadata accessor for TranscriptProtoStatementID(0);
        v1221 = *(_QWORD **)(v1220 - 8);
        v1222 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1221[6];
        if (v1222(v1219, 1, v1220))
        {
          v1223 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1218, v1219, *(_QWORD *)(*(_QWORD *)(v1223 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1218 = *(_DWORD *)v1219;
          v1224 = v1219[2];
          v1218[1] = v1219[1];
          v1218[2] = v1224;
          v1225 = *(int *)(v1220 + 24);
          v1307 = (char *)v1218 + v1225;
          v1226 = (char *)v1219 + v1225;
          __dstk = v1221;
          v1227 = v21;
          v1228 = v13;
          v1229 = sub_2408E57A4();
          v1230 = v23;
          v1231 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1229 - 8) + 16);
          v1216 = v1325;
          swift_bridgeObjectRetain();
          v1232 = v1226;
          v15 = __srcc;
          v1233 = v1229;
          v13 = v1228;
          v21 = v1227;
          v1221 = __dstk;
          v1231(v1307, v1232, v1233);
          v23 = v1230;
          ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstk[7])(v1218, 0, 1, v1220);
        }
        v1234 = v1216[8];
        v1235 = &v23[v1234];
        v1236 = (_QWORD *)((char *)v15 + v1234);
        if (v1222((_QWORD *)((char *)v15 + v1234), 1, v1220))
        {
          v1237 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1235, v1236, *(_QWORD *)(*(_QWORD *)(v1237 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1235 = *(_DWORD *)v1236;
          v1238 = v1236[2];
          v1235[1] = v1236[1];
          v1235[2] = v1238;
          v1239 = *(int *)(v1220 + 24);
          v1308 = (char *)v1235 + v1239;
          v1240 = (char *)v1236 + v1239;
          __dstl = v1221;
          v1241 = v21;
          v1242 = v13;
          v1243 = sub_2408E57A4();
          v1244 = v23;
          v1245 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1243 - 8) + 16);
          v1216 = v1325;
          swift_bridgeObjectRetain();
          v1246 = v1240;
          v15 = __srcc;
          v1247 = v1243;
          v13 = v1242;
          v21 = v1241;
          v1221 = __dstl;
          v1245(v1308, v1246, v1247);
          v23 = v1244;
          ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstl[7])(v1235, 0, 1, v1220);
        }
        v1248 = v1216[9];
        v1249 = &v23[v1248];
        v1250 = (_QWORD *)((char *)v15 + v1248);
        if (v1222((_QWORD *)((char *)v15 + v1248), 1, v1220))
        {
          v1251 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1249, v1250, *(_QWORD *)(*(_QWORD *)(v1251 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1249 = *(_DWORD *)v1250;
          v1252 = v1250[2];
          v1249[1] = v1250[1];
          v1249[2] = v1252;
          v1253 = *(int *)(v1220 + 24);
          __dstm = (char *)v1249 + v1253;
          v1254 = (char *)v1250 + v1253;
          v1255 = v1221;
          v1256 = v21;
          v1257 = v13;
          v1258 = sub_2408E57A4();
          v1259 = v23;
          v1260 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1258 - 8) + 16);
          v1216 = v1325;
          swift_bridgeObjectRetain();
          v1261 = v1254;
          v15 = __srcc;
          v1262 = v1258;
          v13 = v1257;
          v21 = v1256;
          v1260(__dstm, v1261, v1262);
          v23 = v1259;
          ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1255[7])(v1249, 0, 1, v1220);
        }
        v17 = (int *)v1418;
        v1263 = v1216[10];
        v1264 = &v23[v1263];
        v1265 = (char *)v15 + v1263;
        v1266 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v1266 - 8) + 16))(v1264, v1265, v1266);
LABEL_331:
        swift_storeEnumTagMultiPayload();
        v18 = a2;
        goto LABEL_254;
      case 0x1Eu:
        v1399 = v21;
        v234 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v234;
        v235 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1415 + 3) = v235;
        v236 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
        v237 = *(int *)(v236 + 24);
        v238 = v15;
        v239 = v1415;
        v240 = &v1415[v237];
        __srcd = v238;
        v241 = (_QWORD *)((char *)v238 + v237);
        v242 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v243 = *(_QWORD *)(v242 - 8);
        v244 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v243 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v244(v241, 1, v242))
          goto LABEL_51;
        goto LABEL_105;
      case 0x1Fu:
        v1399 = v21;
        v246 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v246;
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        v236 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
        v247 = *(int *)(v236 + 24);
        v248 = v15;
        v239 = v1415;
        v240 = &v1415[v247];
        __srcd = v248;
        v241 = (_QWORD *)((char *)v248 + v247);
        v242 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v243 = *(_QWORD *)(v242 - 8);
        v249 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v243 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v249(v241, 1, v242))
        {
LABEL_51:
          v245 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v240, v241, *(_QWORD *)(*(_QWORD *)(v245 - 8) + 64));
        }
        else
        {
LABEL_105:
          v453 = v241[1];
          *v240 = *v241;
          v240[1] = v453;
          v240[2] = v241[2];
          v454 = *(int *)(v242 + 24);
          v1330 = (char *)v240 + v454;
          v1356 = v13;
          v455 = (char *)v241 + v454;
          v456 = sub_2408E57A4();
          v457 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v456 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v458 = v455;
          v13 = v1356;
          v457(v1330, v458, v456);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v240, 0, 1, v242);
        }
        v459 = *(int *)(v236 + 28);
        v23 = v239;
        v460 = &v239[v459];
        v15 = __srcd;
        v461 = (char *)__srcd + v459;
        v462 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v462 - 8) + 16))(v460, v461, v462);
        v21 = v1399;
        goto LABEL_252;
      case 0x20u:
        v250 = type metadata accessor for TranscriptProtoRequestContent(0);
        v251 = *(_QWORD *)(v250 - 8);
        __srce = v12;
        v1400 = v21;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v251 + 48))(v12, 1, v250))
        {
          v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
          memcpy(v1415, v12, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
        }
        else
        {
          v463 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v463 - 8) + 48))(v15, 1, v463))
          {
            v693 = (char *)&loc_24035A330 + 4 * word_2408E8218[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v464 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
          memcpy(v1415, v15, *(_QWORD *)(*(_QWORD *)(v464 - 8) + 64));
          v999 = *(int *)(v250 + 20);
          v1000 = &v1415[v999];
          v1001 = (char *)v15 + v999;
          v1002 = sub_2408E57A4();
          (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v1002 - 8) + 16))(v1000, v1001, v1002);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v1415, 0, 1, v250);
        }
        v1003 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
        v1004 = v1003[5];
        v1005 = &v1415[v1004];
        v1006 = (_QWORD *)((char *)v15 + v1004);
        v1007 = v1006[1];
        *v1005 = *v1006;
        v1005[1] = v1007;
        v1008 = v1003[6];
        v1009 = &v1415[v1008];
        v1010 = (_QWORD *)((char *)v15 + v1008);
        v1011 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v1012 = *(_QWORD *)(v1011 - 8);
        v1013 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1012 + 48);
        swift_bridgeObjectRetain();
        if (v1013(v1010, 1, v1011))
        {
          v1014 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v1009, v1010, *(_QWORD *)(*(_QWORD *)(v1014 - 8) + 64));
        }
        else
        {
          v1015 = v1010[1];
          *v1009 = *v1010;
          v1009[1] = v1015;
          v1009[2] = v1010[2];
          v1016 = *(int *)(v1011 + 24);
          v1345 = (char *)v1009 + v1016;
          v1361 = v13;
          v1017 = (char *)v1010 + v1016;
          v1018 = sub_2408E57A4();
          v1019 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1018 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v1020 = v1017;
          v13 = v1361;
          v1019(v1345, v1020, v1018);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1012 + 56))(v1009, 0, 1, v1011);
        }
        v24 = v1411;
        v1021 = v1003[7];
        v23 = v1415;
        v1022 = &v1415[v1021];
        v15 = __srce;
        v1023 = (char *)__srce + v1021;
        v1024 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v1024 - 8) + 16))(v1022, v1023, v1024);
        v21 = v1400;
        goto LABEL_291;
      case 0x21u:
        v1401 = v21;
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        v253 = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
        v254 = v253[5];
        v255 = &v1415[v254];
        v256 = (_QWORD *)((char *)v15 + v254);
        v257 = type metadata accessor for TranscriptProtoStatementID(0);
        v258 = *(_QWORD *)(v257 - 8);
        v259 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v258 + 48);
        swift_bridgeObjectRetain();
        __srcf = v15;
        if (v259(v256, 1, v257))
        {
          v260 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v255, v256, *(_QWORD *)(*(_QWORD *)(v260 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v255 = *(_DWORD *)v256;
          v465 = v256[2];
          v255[1] = v256[1];
          v255[2] = v465;
          v466 = *(int *)(v257 + 24);
          v467 = (char *)v255 + v466;
          v468 = (char *)v256 + v466;
          v469 = v13;
          v470 = sub_2408E57A4();
          v471 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v470 - 8) + 16);
          swift_bridgeObjectRetain();
          v472 = v468;
          v15 = __srcf;
          v473 = v470;
          v13 = v469;
          v471(v467, v472, v473);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v258 + 56))(v255, 0, 1, v257);
        }
        v474 = v253[6];
        v23 = v1415;
        v475 = &v1415[v474];
        v476 = (char *)v15 + v474;
        v477 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v478 = *(_QWORD *)(v477 - 8);
        v24 = v1411;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v478 + 48))(v476, 1, v477))
        {
          v479 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
          memcpy(v475, v476, *(_QWORD *)(*(_QWORD *)(v479 - 8) + 64));
        }
        else
        {
          v597 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v597 - 8) + 48))(v476, 1, v597))
          {
            v726 = (char *)&loc_24035A5B4 + 4 * word_2408E8202[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v598 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
          memcpy(v475, v476, *(_QWORD *)(*(_QWORD *)(v598 - 8) + 64));
          v1094 = *(int *)(v477 + 20);
          v1095 = &v475[v1094];
          v1096 = &v476[v1094];
          v1097 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1097 - 8) + 16))(v1095, v1096, v1097);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v478 + 56))(v475, 0, 1, v477);
        }
        v1098 = v253[7];
        v1099 = &v1415[v1098];
        v15 = __srcf;
        v1100 = (char *)__srcf + v1098;
        v1101 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v1101 - 8) + 16))(v1099, v1100, v1101);
        v21 = v1401;
        goto LABEL_291;
      case 0x22u:
        v261 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v261;
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        v262 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
        v1402 = v21;
        v263 = &v1415[v262];
        v1353 = v13;
        v264 = &v12[v262];
        v265 = sub_2408E57A4();
        v266 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v265 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v267 = v263;
        v21 = v1402;
        v268 = v264;
        v13 = v1353;
        v269 = v265;
        v24 = v1411;
        v266(v267, v268, v269);
        v23 = v1415;
        swift_storeEnumTagMultiPayload();
        goto LABEL_292;
      case 0x23u:
        v270 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
        v271 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v270 - 8);
        __srcg = v15;
        v1403 = v21;
        if (v271[6](v15, 1, v270))
        {
          v272 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
          memcpy(v1415, v15, *(_QWORD *)(*(_QWORD *)(v272 - 8) + 64));
        }
        else
        {
          __dstb = v271;
          v1357 = v13;
          v480 = v15[1];
          *(_QWORD *)v1415 = *v15;
          *((_QWORD *)v1415 + 1) = v480;
          v481 = v15[3];
          *((_QWORD *)v1415 + 2) = v15[2];
          *((_QWORD *)v1415 + 3) = v481;
          v1415[32] = *((_BYTE *)v15 + 32);
          v482 = v15[6];
          *((_QWORD *)v1415 + 5) = v15[5];
          *((_QWORD *)v1415 + 6) = v482;
          v483 = v15[8];
          *((_QWORD *)v1415 + 7) = v15[7];
          *((_QWORD *)v1415 + 8) = v483;
          *((_QWORD *)v1415 + 9) = v15[9];
          v1415[80] = *((_BYTE *)v15 + 80);
          v484 = v15[12];
          *((_QWORD *)v1415 + 11) = v15[11];
          *((_QWORD *)v1415 + 12) = v484;
          v485 = v15[14];
          *((_QWORD *)v1415 + 13) = v15[13];
          *((_QWORD *)v1415 + 14) = v485;
          v1331 = (int *)v270;
          v486 = *(int *)(v270 + 68);
          v1270 = &v1415[v486];
          v487 = (_QWORD *)((char *)v15 + v486);
          v488 = type metadata accessor for ToolKitProtoTypeInstance(0);
          v489 = *(_QWORD *)(v488 - 8);
          v490 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v489 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v490(v487, 1, v488))
          {
            v491 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
            memcpy(v1270, v487, *(_QWORD *)(*(_QWORD *)(v491 - 8) + 64));
          }
          else
          {
            v694 = *v487;
            if ((~*v487 & 0xF000000000000007) != 0)
              swift_retain();
            *v1270 = v694;
            v695 = *(int *)(v488 + 20);
            v696 = (char *)v1270 + v695;
            v697 = (char *)v487 + v695;
            v698 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v698 - 8) + 16))(v696, v697, v698);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v489 + 56))(v1270, 0, 1, v488);
          }
          v15 = __srcg;
          v699 = v1331;
          v700 = v1331[18];
          v701 = v1415;
          v702 = &v1415[v700];
          v703 = (_QWORD *)((char *)__srcg + v700);
          v704 = v703[1];
          *v702 = *v703;
          v702[1] = v704;
          v705 = v1331[19];
          v706 = &v1415[v705];
          v707 = (_QWORD *)((char *)__srcg + v705);
          v708 = type metadata accessor for ToolKitProtoAppDefinition(0);
          v709 = *(_QWORD **)(v708 - 8);
          v710 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v709[6];
          swift_bridgeObjectRetain();
          if (v710(v707, 1, v708))
          {
            v711 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
            memcpy(v706, v707, *(_QWORD *)(*(_QWORD *)(v711 - 8) + 64));
          }
          else
          {
            v1285 = v709;
            v728 = v707[1];
            *v706 = *v707;
            v706[1] = v728;
            v729 = v707[3];
            v706[2] = v707[2];
            v706[3] = v729;
            v730 = v707[5];
            v706[4] = v707[4];
            v706[5] = v730;
            v731 = v708;
            v732 = v707[7];
            v706[6] = v707[6];
            v706[7] = v732;
            v733 = v707[9];
            v706[8] = v707[8];
            v706[9] = v733;
            *((_BYTE *)v706 + 80) = *((_BYTE *)v707 + 80);
            v1301 = v731;
            v734 = *(int *)(v731 + 40);
            v1279 = (_QWORD *)((char *)v706 + v734);
            v735 = (_QWORD *)((char *)v707 + v734);
            v736 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            v1274 = *(_QWORD **)(v736 - 8);
            v1292 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1274[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v1292(v735, 1, v736))
            {
              v737 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
              memcpy(v1279, v735, *(_QWORD *)(*(_QWORD *)(v737 - 8) + 64));
              v15 = __srcg;
              v738 = (void (**)(_QWORD *, _QWORD, uint64_t, _QWORD))v1285;
            }
            else
            {
              v740 = v735[1];
              if (v740 == 1)
              {
                *(_OWORD *)v1279 = *(_OWORD *)v735;
              }
              else
              {
                *v1279 = *v735;
                v1279[1] = v740;
                swift_bridgeObjectRetain();
              }
              v799 = *(int *)(v736 + 20);
              v800 = (char *)v1279 + v799;
              v801 = (char *)v735 + v799;
              v802 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v802 - 8) + 16))(v800, v801, v802);
              ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1274[7])(v1279, 0, 1, v736);
              v15 = __srcg;
              v738 = (void (**)(_QWORD *, _QWORD, uint64_t, _QWORD))v1285;
              v699 = v1331;
            }
            v803 = *(int *)(v1301 + 44);
            v804 = (char *)v706 + v803;
            v805 = (char *)v707 + v803;
            v806 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v806 - 8) + 16))(v804, v805, v806);
            v738[7](v706, 0, 1, v1301);
            v701 = v1415;
          }
          v807 = v699[20];
          v808 = &v701[v807];
          v809 = (_QWORD *)((char *)v15 + v807);
          v810 = v809[1];
          *v808 = *v809;
          v808[1] = v810;
          v811 = v699[21];
          v812 = &v701[v811];
          v813 = (_QWORD *)((char *)v15 + v811);
          v814 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
          v815 = *(_QWORD *)(v814 - 8);
          v816 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v815 + 48);
          swift_bridgeObjectRetain();
          if (v816(v813, 1, v814))
          {
            v817 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
            memcpy(v812, v813, *(_QWORD *)(*(_QWORD *)(v817 - 8) + 64));
          }
          else
          {
            v818 = v813[1];
            *v812 = *v813;
            v812[1] = v818;
            v819 = v813[3];
            v812[2] = v813[2];
            v812[3] = v819;
            v820 = *(int *)(v814 + 24);
            v821 = (char *)v812 + v820;
            v822 = (char *)v813 + v820;
            v823 = sub_2408E57A4();
            v824 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v823 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v825 = v821;
            v15 = __srcg;
            v824(v825, v822, v823);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v815 + 56))(v812, 0, 1, v814);
          }
          v826 = v699[22];
          v23 = v1415;
          v827 = &v1415[v826];
          v828 = (_QWORD *)((char *)v15 + v826);
          v829 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
          v830 = *(_QWORD *)(v829 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v830 + 48))(v828, 1, v829))
          {
            v831 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
            memcpy(v827, v828, *(_QWORD *)(*(_QWORD *)(v831 - 8) + 64));
          }
          else
          {
            v832 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
            v833 = *(_QWORD *)(v832 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v833 + 48))(v828, 1, v832))
            {
              v834 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
              memcpy(v827, v828, *(_QWORD *)(*(_QWORD *)(v834 - 8) + 64));
            }
            else
            {
              v835 = v832;
              v836 = swift_getEnumCaseMultiPayload();
              v837 = v827;
              v838 = v828[1];
              *(_QWORD *)v837 = *v828;
              *((_QWORD *)v837 + 1) = v838;
              v839 = v837;
              if (v836 == 1)
              {
                v837[16] = *((_BYTE *)v828 + 16);
                v840 = v828[4];
                *((_QWORD *)v837 + 3) = v828[3];
                *((_QWORD *)v837 + 4) = v840;
                v841 = v828[6];
                *((_QWORD *)v837 + 5) = v828[5];
                *((_QWORD *)v837 + 6) = v841;
                v842 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                              + 32);
                v1295 = (char *)v828 + v842;
                v1303 = &v839[v842];
                v843 = sub_2408E57A4();
                v1287 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v843 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v1287(v1303, v1295, v843);
              }
              else
              {
                swift_bridgeObjectRetain();
              }
              v827 = v839;
              swift_storeEnumTagMultiPayload();
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v833 + 56))(v839, 0, 1, v835);
              v15 = __srcg;
              v699 = v1331;
            }
            v844 = *(int *)(v829 + 20);
            v845 = &v827[v844];
            v846 = (char *)v828 + v844;
            v847 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v847 - 8) + 16))(v845, v846, v847);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v830 + 56))(v827, 0, 1, v829);
            v23 = v1415;
          }
          v848 = v699[23];
          v849 = &v23[v848];
          v850 = (_QWORD *)((char *)v15 + v848);
          v851 = type metadata accessor for ToolKitProtoContainerDefinition(0);
          v852 = *(_QWORD *)(v851 - 8);
          v853 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v852 + 48);
          v13 = v1357;
          if (v853(v850, 1, v851))
          {
            v854 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
            memcpy(v849, v850, *(_QWORD *)(*(_QWORD *)(v854 - 8) + 64));
          }
          else
          {
            v1288 = v853;
            v1296 = v852;
            v855 = v850[1];
            *v849 = *v850;
            v849[1] = v855;
            v856 = v850[3];
            v849[2] = v850[2];
            v849[3] = v856;
            *((_WORD *)v849 + 16) = *((_WORD *)v850 + 16);
            v857 = v850[6];
            v849[5] = v850[5];
            v849[6] = v857;
            v858 = v850[8];
            v849[7] = v850[7];
            v849[8] = v858;
            v1304 = v851;
            v859 = *(int *)(v851 + 40);
            v1281 = (_QWORD *)((char *)v849 + v859);
            v860 = (_QWORD *)((char *)v850 + v859);
            v861 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            v1276 = *(_QWORD **)(v861 - 8);
            v862 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1276[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v862(v860, 1, v861))
            {
              v863 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
              memcpy(v1281, v860, *(_QWORD *)(*(_QWORD *)(v863 - 8) + 64));
              v13 = v1357;
              v15 = __srcg;
            }
            else
            {
              v864 = v860[1];
              if (v864 == 1)
              {
                *(_OWORD *)v1281 = *(_OWORD *)v860;
              }
              else
              {
                *v1281 = *v860;
                v1281[1] = v864;
                swift_bridgeObjectRetain();
              }
              v865 = *(int *)(v861 + 20);
              v866 = (char *)v1281 + v865;
              v867 = (char *)v860 + v865;
              v868 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v868 - 8) + 16))(v866, v867, v868);
              ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1276[7])(v1281, 0, 1, v861);
              v13 = v1357;
              v15 = __srcg;
              v699 = v1331;
            }
            v853 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v1288;
            v851 = v1304;
            v869 = *(int *)(v1304 + 44);
            v870 = (char *)v849 + v869;
            v871 = (char *)v850 + v869;
            v872 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v872 - 8) + 16))(v870, v871, v872);
            v852 = v1296;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1296 + 56))(v849, 0, 1, v1304);
            v23 = v1415;
          }
          v873 = v699[24];
          v874 = &v23[v873];
          v875 = (_QWORD *)((char *)v15 + v873);
          if (v853((char *)v15 + v873, 1, v851))
          {
            v876 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
            memcpy(v874, v875, *(_QWORD *)(*(_QWORD *)(v876 - 8) + 64));
          }
          else
          {
            v1297 = v852;
            v1305 = v851;
            v877 = v875[1];
            *v874 = *v875;
            v874[1] = v877;
            v878 = v875[3];
            v874[2] = v875[2];
            v874[3] = v878;
            *((_WORD *)v874 + 16) = *((_WORD *)v875 + 16);
            v879 = v875[6];
            v874[5] = v875[5];
            v874[6] = v879;
            v880 = v875[8];
            v874[7] = v875[7];
            v874[8] = v880;
            v881 = *(int *)(v851 + 40);
            v1289 = (_QWORD *)((char *)v874 + v881);
            v882 = (_QWORD *)((char *)v875 + v881);
            v883 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            v1282 = *(_QWORD **)(v883 - 8);
            v884 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1282[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v884(v882, 1, v883))
            {
              v885 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
              memcpy(v1289, v882, *(_QWORD *)(*(_QWORD *)(v885 - 8) + 64));
              v13 = v1357;
              v15 = __srcg;
            }
            else
            {
              v886 = v882[1];
              if (v886 == 1)
              {
                *(_OWORD *)v1289 = *(_OWORD *)v882;
              }
              else
              {
                *v1289 = *v882;
                v1289[1] = v886;
                swift_bridgeObjectRetain();
              }
              v887 = *(int *)(v883 + 20);
              v888 = (char *)v1289 + v887;
              v889 = (char *)v882 + v887;
              v890 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v890 - 8) + 16))(v888, v889, v890);
              ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1282[7])(v1289, 0, 1, v883);
              v13 = v1357;
              v15 = __srcg;
              v699 = v1331;
            }
            v891 = *(int *)(v1305 + 44);
            v892 = (char *)v874 + v891;
            v893 = (char *)v875 + v891;
            v894 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v894 - 8) + 16))(v892, v893, v894);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1297 + 56))(v874, 0, 1, v1305);
            v23 = v1415;
          }
          v895 = v699[25];
          v896 = &v23[v895];
          v897 = (char *)v15 + v895;
          v898 = sub_2408E57A4();
          (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v898 - 8) + 16))(v896, v897, v898);
          (*((void (**)(_BYTE *, _QWORD, uint64_t, int *))__dstb + 7))(v23, 0, 1, v699);
        }
        v532 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
        v899 = v532[5];
        v900 = &v23[v899];
        v901 = (_QWORD *)((char *)v15 + v899);
        v902 = type metadata accessor for TranscriptProtoStatementID(0);
        v903 = *(_QWORD *)(v902 - 8);
        v904 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v903 + 48);
        if (v904(v901, 1, v902))
        {
          v905 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v900, v901, *(_QWORD *)(*(_QWORD *)(v905 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v900 = *(_DWORD *)v901;
          v906 = v901[2];
          v900[1] = v901[1];
          v900[2] = v906;
          v907 = *(int *)(v902 + 24);
          v1342 = (char *)v900 + v907;
          v908 = (char *)v901 + v907;
          v909 = v13;
          v910 = sub_2408E57A4();
          v911 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v910 - 8) + 16);
          swift_bridgeObjectRetain();
          v912 = v908;
          v15 = __srcg;
          v913 = v910;
          v13 = v909;
          v911(v1342, v912, v913);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v903 + 56))(v900, 0, 1, v902);
        }
        v914 = v532[6];
        v643 = &v1415[v914];
        v644 = (_QWORD *)((char *)v15 + v914);
        if (v904((_QWORD *)((char *)v15 + v914), 1, v902))
          goto LABEL_247;
        *(_DWORD *)v643 = *(_DWORD *)v644;
        v916 = v644[2];
        v643[1] = v644[1];
        v643[2] = v916;
        v917 = *(int *)(v902 + 24);
        v1343 = (char *)v643 + v917;
        v918 = (char *)v644 + v917;
        v919 = v13;
        v920 = sub_2408E57A4();
        v921 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v920 - 8) + 16);
        swift_bridgeObjectRetain();
        v922 = v918;
        v15 = __srcg;
        v923 = v920;
        v13 = v919;
        v921(v1343, v922, v923);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v903 + 56))(v643, 0, 1, v902);
        goto LABEL_249;
      case 0x24u:
        v1404 = v21;
        v273 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v273;
        v1415[16] = v12[16];
        v274 = *((_QWORD *)v12 + 4);
        *((_QWORD *)v1415 + 3) = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1415 + 4) = v274;
        v275 = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
        v276 = v275[7];
        v277 = &v1415[v276];
        __srch = v15;
        v278 = (_QWORD *)((char *)v15 + v276);
        v279 = type metadata accessor for TranscriptProtoStatementID(0);
        v280 = *(_QWORD *)(v279 - 8);
        v281 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v280 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v281(v278, 1, v279))
        {
          v282 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v277 = *(_DWORD *)v278;
          v492 = v278[2];
          v277[1] = v278[1];
          v277[2] = v492;
          v493 = *(int *)(v279 + 24);
          v1332 = (char *)v277 + v493;
          v494 = (char *)v278 + v493;
          v495 = v13;
          v496 = sub_2408E57A4();
          v497 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v496 - 8) + 16);
          swift_bridgeObjectRetain();
          v498 = v496;
          v13 = v495;
          v497(v1332, v494, v498);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v280 + 56))(v277, 0, 1, v279);
        }
        v499 = v275[8];
        v500 = &v1415[v499];
        v501 = (_QWORD *)((char *)__srch + v499);
        if (v281((_QWORD *)((char *)__srch + v499), 1, v279))
        {
          v502 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v500, v501, *(_QWORD *)(*(_QWORD *)(v502 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v500 = *(_DWORD *)v501;
          v599 = v501[2];
          v500[1] = v501[1];
          v500[2] = v599;
          v600 = *(int *)(v279 + 24);
          v601 = (char *)v500 + v600;
          v602 = (char *)v501 + v600;
          v603 = v13;
          v604 = sub_2408E57A4();
          v605 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v604 - 8) + 16);
          swift_bridgeObjectRetain();
          v606 = v604;
          v13 = v603;
          v605(v601, v602, v606);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v280 + 56))(v500, 0, 1, v279);
        }
        v18 = a2;
        v607 = v275[9];
        v23 = v1415;
        v608 = &v1415[v607];
        v15 = __srch;
        v609 = (char *)__srch + v607;
        v610 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v610 - 8) + 16))(v608, v609, v610);
        v21 = v1404;
        goto LABEL_250;
      case 0x25u:
        v1405 = v21;
        v283 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v283;
        v1415[16] = v12[16];
        v284 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        v285 = v284[6];
        v286 = &v1415[v285];
        v287 = (_QWORD *)((char *)v15 + v285);
        v288 = type metadata accessor for TranscriptProtoStatementID(0);
        v289 = *(_QWORD *)(v288 - 8);
        v290 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v289 + 48);
        swift_bridgeObjectRetain();
        if (v290(v287, 1, v288))
        {
          v291 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v286, v287, *(_QWORD *)(*(_QWORD *)(v291 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v286 = *(_DWORD *)v287;
          v503 = v287[2];
          v286[1] = v287[1];
          v286[2] = v503;
          v504 = *(int *)(v288 + 24);
          v1333 = (char *)v286 + v504;
          __srco = v15;
          v505 = (char *)v287 + v504;
          v506 = v13;
          v507 = sub_2408E57A4();
          v508 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v507 - 8) + 16);
          swift_bridgeObjectRetain();
          v509 = v505;
          v15 = __srco;
          v510 = v507;
          v13 = v506;
          v508(v1333, v509, v510);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v289 + 56))(v286, 0, 1, v288);
        }
        v511 = v284[7];
        v512 = &v1415[v511];
        v513 = (_QWORD *)((char *)v15 + v511);
        if (v290((_QWORD *)((char *)v15 + v511), 1, v288))
        {
          v514 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v512, v513, *(_QWORD *)(*(_QWORD *)(v514 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v512 = *(_DWORD *)v513;
          v611 = v513[2];
          v512[1] = v513[1];
          v512[2] = v611;
          v612 = *(int *)(v288 + 24);
          v1336 = (char *)v512 + v612;
          __srcs = v15;
          v613 = (char *)v513 + v612;
          v614 = v13;
          v615 = sub_2408E57A4();
          v616 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v615 - 8) + 16);
          swift_bridgeObjectRetain();
          v617 = v613;
          v15 = __srcs;
          v618 = v615;
          v13 = v614;
          v616(v1336, v617, v618);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v289 + 56))(v512, 0, 1, v288);
        }
        v18 = a2;
        v619 = v284[8];
        v23 = v1415;
        v620 = &v1415[v619];
        v621 = (char *)v15 + v619;
        v622 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v622 - 8) + 16))(v620, v621, v622);
        v21 = v1405;
        goto LABEL_250;
      case 0x26u:
        v1406 = v21;
        v292 = type metadata accessor for ToolKitProtoTypedValue(0);
        v293 = *(_QWORD *)(v292 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v293 + 48))(v12, 1, v292))
        {
          v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
          v295 = v1415;
          memcpy(v1415, v12, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
        }
        else
        {
          v515 = *(_QWORD *)v12;
          if ((~*(_QWORD *)v12 & 0xF000000000000007) != 0)
            swift_retain();
          *(_QWORD *)v1415 = v515;
          v516 = *(int *)(v292 + 20);
          v517 = &v1415[v516];
          v518 = &v12[v516];
          v519 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v519 - 8) + 16))(v517, v518, v519);
          v295 = v1415;
          v15 = v12;
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v293 + 56))(v1415, 0, 1, v292);
        }
        v520 = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
        v521 = v520[5];
        v522 = &v295[v521];
        v523 = (_QWORD *)((char *)v15 + v521);
        v524 = type metadata accessor for ToolKitProtoTypeInstance(0);
        v525 = *(_QWORD *)(v524 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v525 + 48))(v523, 1, v524))
        {
          v526 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
          memcpy(v522, v523, *(_QWORD *)(*(_QWORD *)(v526 - 8) + 64));
        }
        else
        {
          v623 = *v523;
          if ((~*v523 & 0xF000000000000007) != 0)
            swift_retain();
          *v522 = v623;
          v624 = *(int *)(v524 + 20);
          v625 = (char *)v522 + v624;
          v626 = (char *)v523 + v624;
          v627 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v627 - 8) + 16))(v625, v626, v627);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v525 + 56))(v522, 0, 1, v524);
        }
        v628 = v520[6];
        v629 = &v1415[v628];
        v630 = (_QWORD *)((char *)v15 + v628);
        v631 = type metadata accessor for TranscriptProtoStatementID(0);
        v632 = *(_QWORD *)(v631 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v632 + 48))(v630, 1, v631))
        {
          v633 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v629, v630, *(_QWORD *)(*(_QWORD *)(v633 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v629 = *(_DWORD *)v630;
          v647 = v630[2];
          v629[1] = v630[1];
          v629[2] = v647;
          v648 = *(int *)(v631 + 24);
          v649 = (char *)v629 + v648;
          __srcu = v15;
          v650 = (char *)v630 + v648;
          v651 = v13;
          v652 = sub_2408E57A4();
          v653 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v652 - 8) + 16);
          swift_bridgeObjectRetain();
          v654 = v650;
          v15 = __srcu;
          v655 = v652;
          v13 = v651;
          v653(v649, v654, v655);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v632 + 56))(v629, 0, 1, v631);
        }
        v24 = v1411;
        v656 = v520[7];
        v23 = v1415;
        v657 = &v1415[v656];
        v658 = (char *)v15 + v656;
        v659 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v659 - 8) + 16))(v657, v658, v659);
        v21 = v1406;
LABEL_291:
        swift_storeEnumTagMultiPayload();
        v18 = a2;
        v17 = (int *)v1418;
        goto LABEL_292;
      case 0x27u:
        v1403 = v21;
        v296 = type metadata accessor for ToolKitProtoTypedValue(0);
        v297 = *(_QWORD *)(v296 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v297 + 48))(v12, 1, v296))
        {
          v298 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
          v299 = v1415;
          memcpy(v1415, v12, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
        }
        else
        {
          v527 = *(_QWORD *)v12;
          if ((~*(_QWORD *)v12 & 0xF000000000000007) != 0)
            swift_retain();
          *(_QWORD *)v1415 = v527;
          v528 = *(int *)(v296 + 20);
          v529 = &v1415[v528];
          v530 = &v12[v528];
          v531 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v531 - 8) + 16))(v529, v530, v531);
          v299 = v1415;
          v15 = v12;
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v297 + 56))(v1415, 0, 1, v296);
        }
        v532 = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
        v533 = v532[5];
        v534 = &v299[v533];
        v535 = (_QWORD *)((char *)v15 + v533);
        v536 = type metadata accessor for TranscriptProtoStatementID(0);
        v537 = *(_QWORD *)(v536 - 8);
        v538 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v537 + 48);
        if (v538(v535, 1, v536))
        {
          v539 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v534, v535, *(_QWORD *)(*(_QWORD *)(v539 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v534 = *(_DWORD *)v535;
          v634 = v535[2];
          v534[1] = v535[1];
          v534[2] = v634;
          v635 = *(int *)(v536 + 24);
          v1337 = (char *)v534 + v635;
          __srct = v15;
          v636 = (char *)v535 + v635;
          v637 = v13;
          v638 = sub_2408E57A4();
          v639 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v638 - 8) + 16);
          swift_bridgeObjectRetain();
          v640 = v636;
          v15 = __srct;
          v641 = v638;
          v13 = v637;
          v639(v1337, v640, v641);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v537 + 56))(v534, 0, 1, v536);
        }
        v642 = v532[6];
        v643 = &v1415[v642];
        v644 = (_QWORD *)((char *)v15 + v642);
        if (v538((_QWORD *)((char *)v15 + v642), 1, v536))
        {
LABEL_247:
          v915 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v643, v644, *(_QWORD *)(*(_QWORD *)(v915 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v643 = *(_DWORD *)v644;
          v660 = v644[2];
          v643[1] = v644[1];
          v643[2] = v660;
          v661 = *(int *)(v536 + 24);
          v1338 = (char *)v643 + v661;
          __srcv = v15;
          v662 = (char *)v644 + v661;
          v663 = v13;
          v664 = sub_2408E57A4();
          v665 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v664 - 8) + 16);
          swift_bridgeObjectRetain();
          v666 = v662;
          v15 = __srcv;
          v667 = v664;
          v13 = v663;
          v665(v1338, v666, v667);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v537 + 56))(v643, 0, 1, v536);
        }
LABEL_249:
        v18 = a2;
        v924 = v532[7];
        v23 = v1415;
        v925 = &v1415[v924];
        v926 = (char *)v15 + v924;
        v927 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v927 - 8) + 16))(v925, v926, v927);
        v21 = v1403;
LABEL_250:
        swift_storeEnumTagMultiPayload();
        goto LABEL_253;
      case 0x28u:
        v1407 = v21;
        v1354 = v13;
        v300 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v300;
        v301 = *((_QWORD *)v12 + 3);
        *((_QWORD *)v1415 + 2) = *((_QWORD *)v12 + 2);
        *((_QWORD *)v1415 + 3) = v301;
        DecorationResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationResult(0);
        v302 = DecorationResult[8];
        v303 = &v1415[v302];
        __srci = v12;
        v304 = &v12[v302];
        DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
        v306 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
        v307 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v306 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v307(v304, 1, DecorationToolRetrievalResponse))
        {
          v308 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
          memcpy(v303, v304, *(_QWORD *)(*(_QWORD *)(v308 - 8) + 64));
        }
        else
        {
          v540 = v304[1];
          *v303 = *v304;
          v303[1] = v540;
          v541 = v304[3];
          v303[2] = v304[2];
          v303[3] = v541;
          *((_DWORD *)v303 + 8) = *((_DWORD *)v304 + 8);
          v542 = v304[6];
          v303[5] = v304[5];
          v303[6] = v542;
          v543 = *(int *)(DecorationToolRetrievalResponse + 36);
          v544 = (char *)v303 + v543;
          __dsth = (char *)v304 + v543;
          v545 = sub_2408E57A4();
          v546 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v545 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v546(v544, __dsth, v545);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v306 + 56))(v303, 0, 1, DecorationToolRetrievalResponse);
        }
        v17 = (int *)v1418;
        v24 = v1411;
        v547 = DecorationResult[9];
        v23 = v1415;
        v548 = &v1415[v547];
        v15 = __srci;
        v549 = (char *)__srci + v547;
        v550 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v550 - 8) + 16))(v548, v549, v550);
        v21 = v1407;
        swift_storeEnumTagMultiPayload();
        v18 = a2;
        v13 = v1354;
        goto LABEL_292;
      case 0x2Au:
        v1408 = v21;
        v309 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v1415 = *(_QWORD *)v12;
        *((_QWORD *)v1415 + 1) = v309;
        DecorationPrePlannerResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
        v311 = DecorationPrePlannerResult[5];
        v312 = &v1415[v311];
        v313 = (_QWORD *)((char *)v15 + v311);
        v314 = type metadata accessor for TranscriptProtoStatementID(0);
        v315 = *(_QWORD *)(v314 - 8);
        v316 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v315 + 48);
        swift_bridgeObjectRetain();
        if (v316(v313, 1, v314))
        {
          v317 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v312, v313, *(_QWORD *)(*(_QWORD *)(v317 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v312 = *(_DWORD *)v313;
          v551 = v313[2];
          v312[1] = v313[1];
          v312[2] = v551;
          v552 = *(int *)(v314 + 24);
          v553 = (char *)v312 + v552;
          __srcp = v15;
          v554 = (char *)v313 + v552;
          v555 = v13;
          v556 = sub_2408E57A4();
          v557 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v556 - 8) + 16);
          swift_bridgeObjectRetain();
          v558 = v554;
          v15 = __srcp;
          v559 = v556;
          v13 = v555;
          v557(v553, v558, v559);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v315 + 56))(v312, 0, 1, v314);
        }
        v560 = DecorationPrePlannerResult[6];
        v23 = v1415;
        v561 = &v1415[v560];
        v562 = (char *)v15 + v560;
        DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
        v564 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(DecorationPrePlannerResultPayload - 8);
        v21 = v1408;
        if (v564[6](v562, 1, DecorationPrePlannerResultPayload))
        {
          v565 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
          memcpy(v561, v562, *(_QWORD *)(*(_QWORD *)(v565 - 8) + 64));
        }
        else
        {
          __dstd = v564;
          DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum
                                                                                     - 8)
                                                                         + 48))(v562, 1, DecorationPrePlannerPayloadEnum))
          {
            v727 = (char *)&loc_24035A65C + 4 * word_2408E81F6[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v646 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
          memcpy(v561, v562, *(_QWORD *)(*(_QWORD *)(v646 - 8) + 64));
          v928 = *(int *)(DecorationPrePlannerResultPayload + 20);
          v929 = &v561[v928];
          v930 = &v562[v928];
          v931 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v931 - 8) + 16))(v929, v930, v931);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstd[7])(v561, 0, 1, DecorationPrePlannerResultPayload);
        }
        v932 = DecorationPrePlannerResult[7];
        v933 = &v1415[v932];
        v934 = (char *)v15 + v932;
        v935 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v935 - 8) + 16))(v933, v934, v935);
LABEL_252:
        swift_storeEnumTagMultiPayload();
        v18 = a2;
LABEL_253:
        v17 = (int *)v1418;
LABEL_254:
        v24 = v1411;
        goto LABEL_292;
      default:
        memcpy(v1415, v12, *(_QWORD *)(v1413 + 64));
        goto LABEL_292;
    }
  }
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  memcpy(v1415, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  v18 = a2;
  v17 = (int *)v1418;
LABEL_294:
  v20 = v1416;
  v1106 = v17[12];
  v1107 = (_QWORD *)((char *)v1416 + v1106);
  v1108 = (_QWORD *)((char *)v18 + v1106);
  v1109 = v1108[1];
  *v1107 = *v1108;
  v1107[1] = v1109;
  v1110 = v17[13];
  v1111 = (_QWORD *)((char *)v1416 + v1110);
  v1112 = (_QWORD *)((char *)v18 + v1110);
  v1113 = type metadata accessor for TranscriptProtoTimepoint(0);
  v1114 = *(_QWORD *)(v1113 - 8);
  v1115 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1114 + 48);
  swift_bridgeObjectRetain();
  if (v1115(v1112, 1, v1113))
  {
    v1116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
    memcpy(v1111, v1112, *(_QWORD *)(*(_QWORD *)(v1116 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v1111 = *(_OWORD *)v1112;
    v1117 = v1112[3];
    v1111[2] = v1112[2];
    v1111[3] = v1117;
    v1118 = *(int *)(v1113 + 28);
    v1119 = (char *)v1111 + v1118;
    v1120 = (char *)v1112 + v1118;
    v1121 = sub_2408E5750();
    v1122 = *(_QWORD *)(v1121 - 8);
    v1123 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1122 + 48);
    swift_bridgeObjectRetain();
    if (v1123(v1120, 1, v1121))
    {
      v1124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
      memcpy(v1119, v1120, *(_QWORD *)(*(_QWORD *)(v1124 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1122 + 16))(v1119, v1120, v1121);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1122 + 56))(v1119, 0, 1, v1121);
    }
    v1125 = *(int *)(v1113 + 32);
    v1126 = (char *)v1111 + v1125;
    v1127 = (char *)v1112 + v1125;
    v1128 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1128 - 8) + 16))(v1126, v1127, v1128);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1114 + 56))(v1111, 0, 1, v1113);
    v20 = v1416;
    v18 = a2;
    v17 = (int *)v1418;
  }
  v1129 = v17[14];
  v1130 = (char *)v20 + v1129;
  v1131 = (char *)v18 + v1129;
  v1132 = sub_2408E5750();
  v1133 = *(_QWORD *)(v1132 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1133 + 48))(v1131, 1, v1132))
  {
    v1134 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
    memcpy(v1130, v1131, *(_QWORD *)(*(_QWORD *)(v1134 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1133 + 16))(v1130, v1131, v1132);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1133 + 56))(v1130, 0, 1, v1132);
  }
  v1135 = v17[15];
  v1136 = (_QWORD *)((char *)v20 + v1135);
  v1137 = (_QWORD *)((char *)v18 + v1135);
  v1138 = type metadata accessor for TranscriptProtoParticipantID(0);
  v1139 = *(_QWORD *)(v1138 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1139 + 48))(v1137, 1, v1138))
  {
    v1140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
    memcpy(v1136, v1137, *(_QWORD *)(*(_QWORD *)(v1140 - 8) + 64));
  }
  else
  {
    v1141 = v1137[1];
    *v1136 = *v1137;
    v1136[1] = v1141;
    v1142 = *(int *)(v1138 + 20);
    v1143 = (char *)v1136 + v1142;
    v1144 = (char *)v1137 + v1142;
    v1145 = sub_2408E57A4();
    v1146 = v20;
    v1147 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1145 - 8) + 16);
    swift_bridgeObjectRetain();
    v1148 = v1145;
    v17 = (int *)v1418;
    v1147(v1143, v1144, v1148);
    v20 = v1146;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1139 + 56))(v1136, 0, 1, v1138);
  }
  v1149 = v17[16];
  v1150 = (_QWORD *)((char *)v20 + v1149);
  v1151 = (_QWORD *)((char *)v18 + v1149);
  v1152 = type metadata accessor for TranscriptProtoSpanID(0);
  v1153 = *(_QWORD *)(v1152 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1153 + 48))(v1151, 1, v1152))
  {
    v1154 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
    memcpy(v1150, v1151, *(_QWORD *)(*(_QWORD *)(v1154 - 8) + 64));
  }
  else
  {
    *v1150 = *v1151;
    v1155 = *(int *)(v1152 + 20);
    v1156 = (char *)v1150 + v1155;
    v1157 = (char *)v1151 + v1155;
    v1158 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1158 - 8) + 16))(v1156, v1157, v1158);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1153 + 56))(v1150, 0, 1, v1152);
  }
  v1159 = v17[17];
  v1160 = (uint64_t)v20 + v1159;
  v1161 = (char *)v18 + v1159;
  v1162 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1162 - 8) + 16))(v1160, v1161, v1162);
  v1163 = *(int *)(a3 + 20);
  v1164 = *(void **)((char *)v18 + v1163);
  *(_QWORD *)((char *)v20 + v1163) = v1164;
  v1165 = v1164;
  return v20;
}

uint64_t sub_240360070(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void destroy for IETranscriptEventWrapper(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *StepResults;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *DecorationResult;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t Step;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  _QWORD *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unsigned int (*v163)(_QWORD, _QWORD, _QWORD);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unsigned int (*v183)(uint64_t, uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  int *v188;
  uint64_t v189;
  uint64_t v190;
  unsigned int (*v191)(uint64_t, uint64_t, uint64_t);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unsigned int (*v210)(uint64_t, uint64_t, uint64_t);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unsigned int (*v245)(uint64_t, uint64_t, uint64_t);
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  int v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  uint64_t v261;
  int EnumCaseMultiPayload;
  uint64_t v263;
  uint64_t v264;
  _QWORD *v265;
  uint64_t v266;
  uint64_t v267;
  int v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  _QWORD *v280;
  uint64_t v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  int v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  _QWORD *v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  _QWORD *v301;
  uint64_t v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  int v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  _QWORD *v317;
  uint64_t v318;
  char *v319;
  uint64_t v320;
  _QWORD *v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  int v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  int v337;
  uint64_t v338;
  uint64_t v339;
  int v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  int v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  char *v377;
  uint64_t v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  int v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  int v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  int *v416;
  uint64_t v417;
  uint64_t v418;
  unsigned int (*v419)(uint64_t, uint64_t, uint64_t);
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  int *v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  unsigned int (*v502)(uint64_t, uint64_t, uint64_t);
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  unsigned int (*v511)(uint64_t, uint64_t);
  uint64_t v512;
  uint64_t v513;
  int *v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  unsigned int (*v520)(void);
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  int *v524;
  uint64_t v525;
  int *v526;
  unsigned int (*v527)(_QWORD, _QWORD, _QWORD);
  int *v528;
  int *v529;
  int *v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  int *v536;
  uint64_t v537;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for TranscriptProtoEvent(0);
  v5 = a1 + v4[11];
  v6 = type metadata accessor for TranscriptProtoPayload(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7))
    {
LABEL_443:
      v454 = v5 + *(int *)(v6 + 20);
      v455 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v455 - 8) + 8))(v454, v455);
      goto LABEL_444;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        StepResults = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
        v10 = v5 + StepResults[5];
        v11 = type metadata accessor for TranscriptProtoLocaleSettings(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v12 = v10 + *(int *)(v11 + 28);
          v13 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        }
        v14 = v5 + StepResults[6];
        v15 = type metadata accessor for TranscriptProtoDeviceDetails(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
          goto LABEL_441;
        swift_bridgeObjectRelease();
        v16 = v14 + *(int *)(v15 + 20);
        v17 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
        {
          v18 = v16 + *(int *)(v17 + 20);
          v19 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
        }
        v20 = *(int *)(v15 + 24);
        goto LABEL_439;
      case 1u:
        swift_bridgeObjectRelease();
        v21 = type metadata accessor for TranscriptProtoTextQuery(0);
        v22 = v5 + *(int *)(v21 + 24);
        v23 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
        {
          swift_bridgeObjectRelease();
          v24 = v22 + *(int *)(v23 + 24);
          v25 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
        }
        swift_bridgeObjectRelease();
        v26 = *(int *)(v21 + 32);
        goto LABEL_442;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
        goto LABEL_442;
      case 3u:
        DecorationResult = (int *)type metadata accessor for TranscriptProtoRequest(0);
        v28 = v5 + DecorationResult[5];
        v29 = type metadata accessor for TranscriptProtoRequestContent(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
        {
          v30 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v28, 1, v30))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                swift_bridgeObjectRelease();
                v523 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                v31 = v28 + *(int *)(v523 + 20);
                v32 = type metadata accessor for TranscriptProtoStatementID(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32))
                {
                  swift_bridgeObjectRelease();
                  v33 = v31 + *(int *)(v32 + 24);
                  v34 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
                }
                v35 = *(int *)(v523 + 24);
                goto LABEL_349;
              case 1u:
                swift_bridgeObjectRelease();
                v35 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                goto LABEL_349;
              case 2u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v529 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
                v260 = (_QWORD *)(v28 + v529[6]);
                v516 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t))(*(_QWORD *)(v516 - 8) + 48))(v260, 1))
                  goto LABEL_336;
                v261 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v261 - 8) + 48))(v260, 1, v261))
                {
                  goto LABEL_335;
                }
                EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 6)
                {
                  v342 = sub_2408E57A4();
                  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v342 - 8) + 8))(v260, v342);
                }
                else
                {
                  if (EnumCaseMultiPayload == 5)
                  {
                    v263 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
                  }
                  else
                  {
                    if (EnumCaseMultiPayload != 1)
                      goto LABEL_335;
                    if ((~*v260 & 0xF000000000000007) != 0)
                      swift_release();
                    v263 = type metadata accessor for ToolKitProtoTypedValue(0);
                  }
                  v343 = (char *)v260 + *(int *)(v263 + 20);
                  v344 = sub_2408E57A4();
                  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v344 - 8) + 8))(v343, v344);
                }
LABEL_335:
                v345 = (char *)v260 + *(int *)(v516 + 20);
                v346 = sub_2408E57A4();
                (*(void (**)(char *, uint64_t))(*(_QWORD *)(v346 - 8) + 8))(v345, v346);
LABEL_336:
                v347 = v28 + v529[7];
                v519 = type metadata accessor for TranscriptProtoStatementID(0);
                v511 = *(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v519 - 8) + 48);
                if (!v511(v347, 1))
                {
                  swift_bridgeObjectRelease();
                  v348 = v347 + *(int *)(v519 + 24);
                  v349 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v349 - 8) + 8))(v348, v349);
                }
                v350 = v28 + v529[8];
                v512 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v512 - 8) + 48))(v350, 1))
                  goto LABEL_348;
                v351 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
                v510 = v350;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v351 - 8) + 48))(v350, 1, v351))
                {
                  goto LABEL_347;
                }
                v352 = swift_getEnumCaseMultiPayload();
                if (v352 == 1)
                {
                  swift_bridgeObjectRelease();
                  v357 = v350
                       + *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                }
                else
                {
                  if (v352)
                    goto LABEL_347;
                  swift_bridgeObjectRelease();
                  v353 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  v354 = v510 + *(int *)(v353 + 20);
                  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v511)(v354, 1, v519))
                  {
                    swift_bridgeObjectRelease();
                    v355 = v354 + *(int *)(v519 + 24);
                    v356 = sub_2408E57A4();
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v356 - 8) + 8))(v355, v356);
                  }
                  v357 = v510 + *(int *)(v353 + 24);
                }
                v358 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v358 - 8) + 8))(v357, v358);
LABEL_347:
                v359 = v510 + *(int *)(v512 + 20);
                v360 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v360 - 8) + 8))(v359, v360);
LABEL_348:
                v35 = v529[9];
LABEL_349:
                v361 = v28 + v35;
                v362 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v362 - 8) + 8))(v361, v362);
                break;
              case 3u:
                v264 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v264 - 8) + 8))(v28, v264);
                break;
              default:
                break;
            }
          }
          v363 = v28 + *(int *)(v29 + 20);
          v364 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v364 - 8) + 8))(v363, v364);
        }
        v365 = v5 + DecorationResult[6];
        v366 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v366 - 8) + 48))(v365, 1, v366))
        {
          v367 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v367 - 8) + 48))(v365, 1, v367))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                swift_bridgeObjectRelease();
                v368 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
                goto LABEL_360;
              case 1u:
                swift_bridgeObjectRelease();
                v369 = *(int *)(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0)
                              + 20);
                goto LABEL_361;
              case 2u:
                swift_bridgeObjectRelease();
                v368 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
                goto LABEL_360;
              case 3u:
                swift_bridgeObjectRelease();
                v368 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
                goto LABEL_360;
              case 4u:
                swift_bridgeObjectRelease();
                v368 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
                goto LABEL_360;
              case 5u:
                swift_bridgeObjectRelease();
                v368 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
LABEL_360:
                v369 = *(int *)(v368 + 24);
LABEL_361:
                v370 = v365 + v369;
                v371 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v371 - 8) + 8))(v370, v371);
                break;
              default:
                break;
            }
          }
          v372 = v365 + *(int *)(v366 + 20);
          v373 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v373 - 8) + 8))(v372, v373);
        }
        swift_bridgeObjectRelease();
        v215 = v5 + DecorationResult[8];
        v374 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v374 - 8) + 48))(v215, 1, v374))
          goto LABEL_367;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v217 = *(int *)(v374 + 24);
        goto LABEL_365;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
        goto LABEL_442;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = type metadata accessor for TranscriptProtoAction(0);
        v37 = v5 + *(int *)(v36 + 28);
        v38 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
        {
          swift_bridgeObjectRelease();
          v39 = v37 + *(int *)(v38 + 24);
          v40 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(v36 + 44);
        goto LABEL_442;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = (int *)type metadata accessor for TranscriptProtoClientAction(0);
        v42 = v5 + v41[9];
        v43 = type metadata accessor for TranscriptProtoStatementID(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v42, 1, v43))
          goto LABEL_479;
        swift_bridgeObjectRelease();
        v44 = v42 + *(int *)(v43 + 24);
        goto LABEL_478;
      case 7u:
        swift_bridgeObjectRelease();
        Step = type metadata accessor for TranscriptProtoQueryStep(0);
        goto LABEL_29;
      case 8u:
        swift_bridgeObjectRelease();
        Step = type metadata accessor for TranscriptProtoVariableStep(0);
LABEL_29:
        v46 = Step;
        v47 = v5 + *(int *)(Step + 20);
        v48 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 1, v48))
        {
          swift_bridgeObjectRelease();
          v49 = v47 + *(int *)(v48 + 24);
          v50 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
        }
        v26 = *(int *)(v46 + 24);
        goto LABEL_442;
      case 9u:
        swift_bridgeObjectRelease();
        goto LABEL_443;
      case 0xAu:
        v51 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v5, 1, v51))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              swift_bridgeObjectRelease();
              v52 = *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
              goto LABEL_192;
            case 1u:
              v224 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v224 - 8) + 48))(v5, 1, v224)&& swift_getEnumCaseMultiPayload() <= 2)
              {
                swift_bridgeObjectRelease();
                v225 = v5 + *(int *)(type metadata accessor for TranscriptProtoIntelligenceFlowError(0) + 24);
                v226 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v226 - 8) + 8))(v225, v226);
              }
              v227 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
              goto LABEL_191;
            case 2u:
              v228 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v228 - 8) + 48))(v5, 1, v228))
              {
                v229 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v229 - 8) + 48))(v5, 1, v229))
                {
                  swift_bridgeObjectRelease();
                  v230 = v5 + *(int *)(v229 + 24);
                  v231 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v231 - 8) + 8))(v230, v231);
                }
              }
              v227 = type metadata accessor for TranscriptProtoPlannerError(0);
              goto LABEL_191;
            case 3u:
              v232 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v232 - 8) + 48))(v5, 1, v232))
              {
                v233 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v233 - 8) + 48))(v5, 1, v233))
                {
                  swift_bridgeObjectRelease();
                  v234 = v5 + *(int *)(v233 + 24);
                  v235 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v235 - 8) + 8))(v234, v235);
                }
              }
              v227 = type metadata accessor for TranscriptProtoExecutorError(0);
LABEL_191:
              v52 = *(int *)(v227 + 20);
LABEL_192:
              v236 = v5 + v52;
              v237 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v237 - 8) + 8))(v236, v237);
              break;
            default:
              break;
          }
        }
        v26 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
        goto LABEL_442;
      case 0xBu:
        v53 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v5, 1, v53))
        {
          v54 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v5, 1, v54))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v55 = v5 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
            v56 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
          }
          v57 = v5 + *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
          v58 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
        }
        v26 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
        goto LABEL_442;
      case 0xCu:
        sub_240363D58(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
        sub_240363D58(*(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24));
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
        goto LABEL_442;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v59 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        v60 = (_QWORD *)(v5 + v59[6]);
        v61 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48))(v60, 1, v61))
          goto LABEL_198;
        v62 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v60, 1, v62))
          goto LABEL_197;
        v63 = swift_getEnumCaseMultiPayload();
        if (v63 == 6)
        {
          v238 = sub_2408E57A4();
          (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v238 - 8) + 8))(v60, v238);
        }
        else
        {
          if (v63 == 5)
          {
            v64 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
          }
          else
          {
            if (v63 != 1)
              goto LABEL_197;
            if ((~*v60 & 0xF000000000000007) != 0)
              swift_release();
            v64 = type metadata accessor for ToolKitProtoTypedValue(0);
          }
          v239 = (char *)v60 + *(int *)(v64 + 20);
          v240 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v240 - 8) + 8))(v239, v240);
        }
LABEL_197:
        v241 = (char *)v60 + *(int *)(v61 + 20);
        v242 = sub_2408E57A4();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v242 - 8) + 8))(v241, v242);
LABEL_198:
        v243 = v5 + v59[7];
        v244 = type metadata accessor for TranscriptProtoStatementID(0);
        v245 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v244 - 8) + 48);
        if (!v245(v243, 1, v244))
        {
          swift_bridgeObjectRelease();
          v246 = v243 + *(int *)(v244 + 24);
          v247 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v247 - 8) + 8))(v246, v247);
        }
        v248 = v5 + v59[8];
        v249 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v249 - 8) + 48))(v248, 1, v249))
          goto LABEL_210;
        v528 = v59;
        v250 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v250 - 8) + 48))(v248, 1, v250))
          goto LABEL_209;
        v251 = swift_getEnumCaseMultiPayload();
        if (v251 == 1)
        {
          swift_bridgeObjectRelease();
          v255 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        }
        else
        {
          if (v251)
            goto LABEL_209;
          swift_bridgeObjectRelease();
          v515 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
          v252 = v248 + *(int *)(v515 + 20);
          if (!v245(v252, 1, v244))
          {
            swift_bridgeObjectRelease();
            v253 = v252 + *(int *)(v244 + 24);
            v254 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v254 - 8) + 8))(v253, v254);
          }
          v255 = *(int *)(v515 + 24);
        }
        v256 = v248 + v255;
        v257 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v257 - 8) + 8))(v256, v257);
LABEL_209:
        v258 = v248 + *(int *)(v249 + 20);
        v259 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v259 - 8) + 8))(v258, v259);
        v59 = v528;
LABEL_210:
        v26 = v59[9];
        goto LABEL_442;
      case 0xEu:
      case 0x10u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x29u:
        v8 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v5, v8);
        goto LABEL_443;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        StepResults = (int *)type metadata accessor for TranscriptProtoQueryStepResults(0);
        v65 = StepResults[6];
        goto LABEL_160;
      case 0x11u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v66 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
        v67 = v5 + v66[9];
        v68 = type metadata accessor for TranscriptProtoParameterSet(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 48))(v67, 1, v68))
        {
          swift_bridgeObjectRelease();
          v69 = v67 + *(int *)(v68 + 20);
          v70 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
        }
        v71 = v5 + v66[10];
        v72 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 48))(v71, 1, v72))
        {
          swift_bridgeObjectRelease();
          v73 = v71 + *(int *)(v72 + 24);
          v74 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v73, v74);
        }
        v26 = v66[11];
        goto LABEL_442;
      case 0x12u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
        goto LABEL_442;
      case 0x16u:
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
        goto LABEL_442;
      case 0x17u:
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
        goto LABEL_442;
      case 0x18u:
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
        goto LABEL_442;
      case 0x19u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
        goto LABEL_442;
      case 0x1Au:
        v75 = type metadata accessor for TranscriptProtoStatementID(0);
        v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48);
        if (!v76(v5, 1, v75))
        {
          swift_bridgeObjectRelease();
          v77 = v5 + *(int *)(v75 + 24);
          v78 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v77, v78);
        }
        v79 = type metadata accessor for TranscriptProtoActionCancellation(0);
        v80 = v5 + *(int *)(v79 + 20);
        if (!v76(v80, 1, v75))
        {
          swift_bridgeObjectRelease();
          v81 = v80 + *(int *)(v75 + 24);
          v82 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 8))(v81, v82);
        }
        v26 = *(int *)(v79 + 24);
        goto LABEL_442;
      case 0x1Bu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
        goto LABEL_442;
      case 0x1Cu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v83 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
        v84 = v5 + v83[7];
        v85 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v84, 1, v85))
          goto LABEL_406;
        v86 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 48))(v84, 1, v86))
          goto LABEL_405;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v524 = v83;
            v87 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            v88 = (_QWORD *)(v84 + v87[6]);
            v89 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v88, 1, v89))
            {
              if ((~*v88 & 0xF000000000000007) != 0)
                swift_release();
              v90 = (char *)v88 + *(int *)(v89 + 20);
              v91 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v91 - 8) + 8))(v90, v91);
            }
            v92 = v84 + v87[7];
            v93 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 48))(v92, 1, v93))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v94 = v92 + *(int *)(v93 + 28);
              v95 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 8))(v94, v95);
            }
            v96 = v87[8];
            goto LABEL_251;
          case 1u:
            swift_bridgeObjectRelease();
            v271 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            goto LABEL_403;
          case 2u:
            swift_bridgeObjectRelease();
            v271 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_403;
          case 3u:
            v524 = v83;
            swift_bridgeObjectRelease();
            v272 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_241;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v273 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_404;
          case 5u:
            v524 = v83;
            swift_bridgeObjectRelease();
            v272 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_241:
            v274 = v272;
            v275 = (_QWORD *)(v84 + *(int *)(v272 + 24));
            v276 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v276 - 8) + 48))(v275, 1, v276))
            {
              if ((~*v275 & 0xF000000000000007) != 0)
                swift_release();
              v277 = (char *)v275 + *(int *)(v276 + 20);
              v278 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v278 - 8) + 8))(v277, v278);
            }
            v96 = *(int *)(v274 + 28);
            goto LABEL_251;
          case 6u:
            v524 = v83;
            swift_bridgeObjectRelease();
            v279 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            v280 = (_QWORD *)(v84 + *(int *)(v279 + 20));
            v281 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v281 - 8) + 48))(v280, 1, v281))
            {
              if ((~*v280 & 0xF000000000000007) != 0)
                swift_release();
              v282 = (char *)v280 + *(int *)(v281 + 20);
              v283 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v283 - 8) + 8))(v282, v283);
            }
            v96 = *(int *)(v279 + 24);
LABEL_251:
            v284 = v84 + v96;
            v285 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v285 - 8) + 8))(v284, v285);
            v83 = v524;
            goto LABEL_405;
          case 7u:
            v286 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v286 - 8) + 48))(v84, 1, v286))
            {
              goto LABEL_402;
            }
            v287 = swift_getEnumCaseMultiPayload();
            if (v287 != 2)
            {
              if (v287 == 1)
              {
                v288 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
              }
              else
              {
                if (v287)
                  goto LABEL_402;
                v288 = type metadata accessor for TranscriptProtoAppRequirement(0);
              }
LABEL_401:
              v409 = v84 + *(int *)(v288 + 20);
              v410 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v410 - 8) + 8))(v409, v410);
LABEL_402:
              v271 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_403:
              v273 = *(int *)(v271 + 20);
LABEL_404:
              v411 = v84 + v273;
              v412 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v412 - 8) + 8))(v411, v412);
LABEL_405:
              v413 = v84 + *(int *)(v85 + 20);
              v414 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v414 - 8) + 8))(v413, v414);
LABEL_406:
              v415 = v5 + v83[8];
              v416 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v416 - 1) + 48))(v415, 1, v416))
              {
                v536 = v83;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v417 = v415 + v416[7];
                v418 = type metadata accessor for TranscriptProtoDialogType(0);
                v419 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v418 - 8) + 48);
                if (!v419(v417, 1, v418))
                {
                  v521 = v418;
                  v420 = type metadata accessor for TranscriptProtoDialogFormat(0);
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v420 - 8) + 48))(v417, 1, v420))
                  {
                    switch(swift_getEnumCaseMultiPayload())
                    {
                      case 0u:
                        swift_bridgeObjectRelease();
                        v422 = type metadata accessor for TranscriptProtoStaticText(0);
                        goto LABEL_414;
                      case 1u:
                        swift_bridgeObjectRelease();
                        v422 = type metadata accessor for TranscriptProtoSonicText(0);
                        goto LABEL_414;
                      case 2u:
                        swift_bridgeObjectRelease();
                        v422 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_414:
                        v423 = v417 + *(int *)(v422 + 20);
                        v424 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v424 - 8) + 8))(v423, v424);
                        break;
                      case 3u:
                      case 4u:
                        v421 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v421 - 8) + 8))(v417, v421);
                        break;
                      default:
                        break;
                    }
                  }
                  v418 = v521;
                  v425 = v417 + *(int *)(v521 + 20);
                  v426 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v426 - 8) + 8))(v425, v426);
                }
                v427 = v415 + v416[8];
                if (!v419(v427, 1, v418))
                {
                  v428 = v418;
                  v429 = type metadata accessor for TranscriptProtoDialogFormat(0);
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v429 - 8) + 48))(v427, 1, v429))
                  {
                    switch(swift_getEnumCaseMultiPayload())
                    {
                      case 0u:
                        swift_bridgeObjectRelease();
                        v431 = type metadata accessor for TranscriptProtoStaticText(0);
                        goto LABEL_423;
                      case 1u:
                        swift_bridgeObjectRelease();
                        v431 = type metadata accessor for TranscriptProtoSonicText(0);
                        goto LABEL_423;
                      case 2u:
                        swift_bridgeObjectRelease();
                        v431 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_423:
                        v432 = v427 + *(int *)(v431 + 20);
                        v433 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v433 - 8) + 8))(v432, v433);
                        break;
                      case 3u:
                      case 4u:
                        v430 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v430 - 8) + 8))(v427, v430);
                        break;
                      default:
                        break;
                    }
                  }
                  v434 = v427 + *(int *)(v428 + 20);
                  v435 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v435 - 8) + 8))(v434, v435);
                }
                v436 = v415 + v416[9];
                v437 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v437 - 8) + 8))(v436, v437);
                v83 = v536;
              }
              v438 = v5 + v83[9];
              v439 = type metadata accessor for TranscriptProtoStatementID(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v439 - 8) + 48))(v438, 1, v439))
              {
                swift_bridgeObjectRelease();
                v440 = v438 + *(int *)(v439 + 24);
                v441 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v441 - 8) + 8))(v440, v441);
              }
              swift_bridgeObjectRelease();
              v26 = v83[11];
LABEL_442:
              v452 = v5 + v26;
              v453 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v453 - 8) + 8))(v452, v453);
              goto LABEL_443;
            }
            v336 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v336 - 8) + 48))(v84, 1, v336))
            {
              goto LABEL_400;
            }
            v337 = swift_getEnumCaseMultiPayload();
            if (v337 == 1)
            {
              v404 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v404 - 8) + 48))(v84, 1, v404))
              {
                v405 = v84 + *(int *)(v404 + 20);
                v406 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v406 - 8) + 8))(v405, v406);
              }
              v338 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
            }
            else
            {
              if (v337)
              {
LABEL_400:
                v288 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
                goto LABEL_401;
              }
              swift_bridgeObjectRelease();
              v338 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
            }
            v407 = v84 + *(int *)(v338 + 20);
            v408 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v408 - 8) + 8))(v407, v408);
            goto LABEL_400;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v273 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
            goto LABEL_404;
          case 9u:
            v289 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v289 - 8) + 48))(v84, 1, v289))
            {
              v290 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v290 - 8) + 48))(v84, 1, v290))
              {
                v291 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v291 - 8) + 48))(v84, 16, v291))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v292 = v84 + *(int *)(v291 + 28);
                  v293 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v293 - 8) + 8))(v292, v293);
                }
              }
              v294 = v84 + *(int *)(v289 + 20);
              v295 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v295 - 8) + 8))(v294, v295);
            }
            v271 = type metadata accessor for TranscriptProtoActionFailure(0);
            goto LABEL_403;
          case 0xAu:
            swift_bridgeObjectRelease();
            v271 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
            goto LABEL_403;
          default:
            goto LABEL_405;
        }
      case 0x1Du:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
        v97 = v5 + v41[6];
        v98 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 48))(v97, 1, v98))
          goto LABEL_472;
        v99 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 48))(v97, 1, v99))
          goto LABEL_465;
        v100 = v98;
        v101 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 48))(v97, 1, v101))
          goto LABEL_464;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v514 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
            v525 = v97;
            v102 = (_QWORD *)(v97 + v514[6]);
            v103 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 48))(v102, 1, v103))
            {
              if ((~*v102 & 0xF000000000000007) != 0)
                swift_release();
              v104 = (char *)v102 + *(int *)(v103 + 20);
              v105 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v105 - 8) + 8))(v104, v105);
            }
            v106 = v525 + v514[7];
            v107 = type metadata accessor for TranscriptProtoUndoContext(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48))(v106, 1, v107))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v108 = v106 + *(int *)(v107 + 28);
              v109 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 8))(v108, v109);
            }
            v97 = v525;
            v110 = v514[8];
            goto LABEL_463;
          case 1u:
            swift_bridgeObjectRelease();
            v315 = type metadata accessor for TranscriptProtoActionConfirmation(0);
            goto LABEL_321;
          case 2u:
            swift_bridgeObjectRelease();
            v315 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
            goto LABEL_321;
          case 3u:
            swift_bridgeObjectRelease();
            v316 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
            goto LABEL_298;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v110 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
            goto LABEL_463;
          case 5u:
            swift_bridgeObjectRelease();
            v316 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_298:
            v517 = v316;
            v533 = v97;
            v317 = (_QWORD *)(v97 + *(int *)(v316 + 24));
            v318 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v318 - 8) + 48))(v317, 1, v318))
            {
              if ((~*v317 & 0xF000000000000007) != 0)
                swift_release();
              v319 = (char *)v317 + *(int *)(v318 + 20);
              v320 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v320 - 8) + 8))(v319, v320);
            }
            v97 = v533;
            v110 = *(int *)(v517 + 28);
            goto LABEL_463;
          case 6u:
            swift_bridgeObjectRelease();
            v518 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
            v534 = v97;
            v321 = (_QWORD *)(v97 + *(int *)(v518 + 20));
            v322 = type metadata accessor for ToolKitProtoTypedValue(0);
            if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v322 - 8) + 48))(v321, 1, v322))
            {
              if ((~*v321 & 0xF000000000000007) != 0)
                swift_release();
              v323 = (char *)v321 + *(int *)(v322 + 20);
              v324 = sub_2408E57A4();
              (*(void (**)(char *, uint64_t))(*(_QWORD *)(v324 - 8) + 8))(v323, v324);
            }
            v97 = v534;
            v110 = *(int *)(v518 + 24);
            goto LABEL_463;
          case 7u:
            v325 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
            v535 = v97;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v325 - 8) + 48))(v97, 1, v325))
            {
              goto LABEL_461;
            }
            v326 = swift_getEnumCaseMultiPayload();
            if (v326 != 2)
            {
              if (v326 == 1)
              {
                v327 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
              }
              else
              {
                if (v326)
                  goto LABEL_461;
                v327 = type metadata accessor for TranscriptProtoAppRequirement(0);
              }
LABEL_460:
              v480 = v97 + *(int *)(v327 + 20);
              v481 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v481 - 8) + 8))(v480, v481);
LABEL_461:
              v335 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_462:
              v110 = *(int *)(v335 + 20);
              v97 = v535;
LABEL_463:
              v482 = v97 + v110;
              v483 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v483 - 8) + 8))(v482, v483);
LABEL_464:
              v484 = v97 + *(int *)(v99 + 20);
              v485 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v485 - 8) + 8))(v484, v485);
              v98 = v100;
LABEL_465:
              v486 = v97 + *(int *)(v98 + 20);
              v487 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v487 - 1) + 48))(v486, 1, v487))
              {
                v522 = v98;
                v537 = v97;
                swift_bridgeObjectRelease();
                v488 = v486 + v487[5];
                v489 = type metadata accessor for TranscriptProtoResponseDialog(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v489 - 8) + 48))(v488, 1, v489))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v490 = v488 + *(int *)(v489 + 32);
                  v491 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v491 - 8) + 8))(v490, v491);
                }
                v492 = v486 + v487[6];
                v493 = type metadata accessor for TranscriptProtoResponseVisual(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v493 - 8) + 48))(v492, 1, v493))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v494 = v492 + *(int *)(v493 + 24);
                  v495 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v495 - 8) + 8))(v494, v495);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v496 = v486 + v487[11];
                v497 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v497 - 8) + 8))(v496, v497);
                v98 = v522;
                v97 = v537;
              }
              v498 = v97 + *(int *)(v98 + 24);
              v499 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v499 - 8) + 8))(v498, v499);
LABEL_472:
              v500 = v5 + v41[7];
              v501 = type metadata accessor for TranscriptProtoStatementID(0);
              v502 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v501 - 8) + 48);
              if (!v502(v500, 1, v501))
              {
                swift_bridgeObjectRelease();
                v503 = v500 + *(int *)(v501 + 24);
                v504 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v504 - 8) + 8))(v503, v504);
              }
              v505 = v5 + v41[8];
              if (!v502(v505, 1, v501))
              {
                swift_bridgeObjectRelease();
                v506 = v505 + *(int *)(v501 + 24);
                v507 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v507 - 8) + 8))(v506, v507);
              }
              v508 = v5 + v41[9];
              if (!v502(v508, 1, v501))
              {
                swift_bridgeObjectRelease();
                v44 = v508 + *(int *)(v501 + 24);
LABEL_478:
                v509 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v509 - 8) + 8))(v44, v509);
              }
LABEL_479:
              v26 = v41[10];
              goto LABEL_442;
            }
            v401 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v401 - 8) + 48))(v97, 1, v401))
            {
              goto LABEL_459;
            }
            v402 = swift_getEnumCaseMultiPayload();
            if (v402 == 1)
            {
              v476 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v476 - 8) + 48))(v97, 1, v476))
              {
                v477 = v97 + *(int *)(v476 + 20);
                v478 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v478 - 8) + 8))(v477, v478);
              }
              v403 = v97
                   + *(int *)(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0) + 20);
            }
            else
            {
              if (v402)
              {
LABEL_459:
                v327 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
                goto LABEL_460;
              }
              swift_bridgeObjectRelease();
              v403 = v97
                   + *(int *)(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0) + 20);
            }
            v479 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v479 - 8) + 8))(v403, v479);
            goto LABEL_459;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v110 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
            goto LABEL_463;
          case 9u:
            v328 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
            v535 = v97;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v328 - 8) + 48))(v97, 1, v328))
            {
              v329 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v329 - 8) + 48))(v97, 1, v329))
              {
                v330 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v330 - 8) + 48))(v535, 16, v330))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v331 = v535 + *(int *)(v330 + 28);
                  v332 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v332 - 8) + 8))(v331, v332);
                }
              }
              v333 = v535 + *(int *)(v328 + 20);
              v334 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v334 - 8) + 8))(v333, v334);
            }
            v335 = type metadata accessor for TranscriptProtoActionFailure(0);
            goto LABEL_462;
          case 0xAu:
            swift_bridgeObjectRelease();
            v315 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
LABEL_321:
            v110 = *(int *)(v315 + 20);
            goto LABEL_463;
          default:
            goto LABEL_464;
        }
      case 0x1Eu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v111 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
        goto LABEL_90;
      case 0x1Fu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v111 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
LABEL_90:
        StepResults = (int *)v111;
        v112 = *(int *)(v111 + 24);
        goto LABEL_388;
      case 0x20u:
        v113 = type metadata accessor for TranscriptProtoRequestContent(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 48))(v5, 1, v113))
        {
          v114 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 48))(v5, 1, v114))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                swift_bridgeObjectRelease();
                v115 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                v116 = v5 + *(int *)(v115 + 20);
                v117 = type metadata accessor for TranscriptProtoStatementID(0);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 48))(v116, 1, v117))
                {
                  swift_bridgeObjectRelease();
                  v118 = v116 + *(int *)(v117 + 24);
                  v119 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 8))(v118, v119);
                }
                v120 = *(int *)(v115 + 24);
                goto LABEL_385;
              case 1u:
                swift_bridgeObjectRelease();
                v120 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                goto LABEL_385;
              case 2u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v530 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
                v265 = (_QWORD *)(v5 + v530[6]);
                v266 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v266 - 8) + 48))(v265, 1, v266))
                {
                  goto LABEL_372;
                }
                v267 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v267 - 8) + 48))(v265, 1, v267))
                {
                  goto LABEL_371;
                }
                v268 = swift_getEnumCaseMultiPayload();
                if (v268 == 6)
                {
                  v376 = sub_2408E57A4();
                  (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v376 - 8) + 8))(v265, v376);
                }
                else
                {
                  if (v268 == 5)
                  {
                    v269 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
                  }
                  else
                  {
                    if (v268 != 1)
                      goto LABEL_371;
                    if ((~*v265 & 0xF000000000000007) != 0)
                      swift_release();
                    v269 = type metadata accessor for ToolKitProtoTypedValue(0);
                  }
                  v377 = (char *)v265 + *(int *)(v269 + 20);
                  v378 = sub_2408E57A4();
                  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v378 - 8) + 8))(v377, v378);
                }
LABEL_371:
                v379 = (char *)v265 + *(int *)(v266 + 20);
                v380 = sub_2408E57A4();
                (*(void (**)(char *, uint64_t))(*(_QWORD *)(v380 - 8) + 8))(v379, v380);
LABEL_372:
                v381 = v5 + v530[7];
                v382 = type metadata accessor for TranscriptProtoStatementID(0);
                v520 = *(unsigned int (**)(void))(*(_QWORD *)(v382 - 8) + 48);
                if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v520)(v381, 1, v382))
                {
                  swift_bridgeObjectRelease();
                  v383 = v381 + *(int *)(v382 + 24);
                  v384 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v384 - 8) + 8))(v383, v384);
                }
                v385 = v5 + v530[8];
                v386 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v386 - 8) + 48))(v385, 1, v386))
                {
                  goto LABEL_384;
                }
                v387 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v387 - 8) + 48))(v385, 1, v387))
                {
                  goto LABEL_383;
                }
                v388 = swift_getEnumCaseMultiPayload();
                if (v388 == 1)
                {
                  swift_bridgeObjectRelease();
                  v392 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
                }
                else
                {
                  if (v388)
                    goto LABEL_383;
                  swift_bridgeObjectRelease();
                  v513 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
                  v389 = v385 + *(int *)(v513 + 20);
                  if (!v520())
                  {
                    swift_bridgeObjectRelease();
                    v390 = v389 + *(int *)(v382 + 24);
                    v391 = sub_2408E57A4();
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v391 - 8) + 8))(v390, v391);
                  }
                  v392 = *(int *)(v513 + 24);
                }
                v393 = v385 + v392;
                v394 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v394 - 8) + 8))(v393, v394);
LABEL_383:
                v395 = v385 + *(int *)(v386 + 20);
                v396 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v396 - 8) + 8))(v395, v396);
LABEL_384:
                v120 = v530[9];
LABEL_385:
                v397 = v5 + v120;
                v398 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v398 - 8) + 8))(v397, v398);
                break;
              case 3u:
                v270 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v270 - 8) + 8))(v5, v270);
                break;
              default:
                break;
            }
          }
          v399 = v5 + *(int *)(v113 + 20);
          v400 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v400 - 8) + 8))(v399, v400);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
        swift_bridgeObjectRelease();
        v112 = StepResults[6];
LABEL_388:
        v14 = v5 + v112;
        v204 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 48))(v14, 1, v204))
          goto LABEL_441;
        swift_bridgeObjectRelease();
LABEL_390:
        swift_bridgeObjectRelease();
        v20 = *(int *)(v204 + 24);
        goto LABEL_439;
      case 0x21u:
        swift_bridgeObjectRelease();
        StepResults = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
        v121 = v5 + StepResults[5];
        v122 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 48))(v121, 1, v122))
        {
          swift_bridgeObjectRelease();
          v123 = v121 + *(int *)(v122 + 24);
          v124 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 8))(v123, v124);
        }
        v14 = v5 + StepResults[6];
        DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoStatementOutcome(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerResultPayload
                                                                                   - 8)
                                                                       + 48))(v14, 1, DecorationPrePlannerResultPayload))
        {
          goto LABEL_441;
        }
        v126 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 48))(v14, 1, v126))
          goto LABEL_438;
        break;
      case 0x22u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v26 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
        goto LABEL_442;
      case 0x23u:
        v136 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v136 - 1) + 48))(v5, 1, v136))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v137 = (_QWORD *)(v5 + v136[17]);
          v138 = type metadata accessor for ToolKitProtoTypeInstance(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 48))(v137, 1, v138))
          {
            if ((~*v137 & 0xF000000000000007) != 0)
              swift_release();
            v139 = (char *)v137 + *(int *)(v138 + 20);
            v140 = sub_2408E57A4();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v140 - 8) + 8))(v139, v140);
          }
          swift_bridgeObjectRelease();
          v141 = v5 + v136[19];
          v142 = type metadata accessor for ToolKitProtoAppDefinition(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 48))(v141, 1, v142))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v143 = v141 + *(int *)(v142 + 40);
            v144 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 48))(v143, 1, v144))
            {
              if (*(_QWORD *)(v143 + 8) != 1)
                swift_bridgeObjectRelease();
              v145 = v143 + *(int *)(v144 + 20);
              v146 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 8))(v145, v146);
            }
            v147 = v141 + *(int *)(v142 + 44);
            v148 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 8))(v147, v148);
          }
          swift_bridgeObjectRelease();
          v149 = v5 + v136[21];
          v150 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 48))(v149, 1, v150))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v151 = v149 + *(int *)(v150 + 24);
            v152 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 8))(v151, v152);
          }
          v153 = v5 + v136[22];
          v154 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 48))(v153, 1, v154))
          {
            v155 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v155 - 8) + 48))(v153, 1, v155))
            {
              v156 = swift_getEnumCaseMultiPayload();
              swift_bridgeObjectRelease();
              if (v156 == 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v157 = v153
                     + *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                              + 32);
                v158 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 8))(v157, v158);
              }
            }
            v159 = v153 + *(int *)(v154 + 20);
            v160 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 8))(v159, v160);
          }
          v161 = v5 + v136[23];
          v162 = type metadata accessor for ToolKitProtoContainerDefinition(0);
          v163 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v162 - 8) + 48);
          if (!v163(v161, 1, v162))
          {
            v527 = v163;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v164 = v161 + *(int *)(v162 + 40);
            v165 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 48))(v164, 1, v165))
            {
              v166 = v164;
              if (*(_QWORD *)(v164 + 8) != 1)
              {
                swift_bridgeObjectRelease();
                v166 = v164;
              }
              v167 = v166 + *(int *)(v165 + 20);
              v168 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v168 - 8) + 8))(v167, v168);
            }
            v169 = v161 + *(int *)(v162 + 44);
            v170 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v170 - 8) + 8))(v169, v170);
            v163 = v527;
          }
          v171 = v5 + v136[24];
          if (!v163(v171, 1, v162))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v172 = v171 + *(int *)(v162 + 40);
            v173 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v173 - 8) + 48))(v172, 1, v173))
            {
              if (*(_QWORD *)(v172 + 8) != 1)
                swift_bridgeObjectRelease();
              v174 = v172 + *(int *)(v173 + 20);
              v175 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 8))(v174, v175);
            }
            v176 = v171 + *(int *)(v162 + 44);
            v177 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 8))(v176, v177);
          }
          v178 = v5 + v136[25];
          v179 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v179 - 8) + 8))(v178, v179);
        }
        v180 = type metadata accessor for TranscriptProtoToolResolution(0);
        goto LABEL_167;
      case 0x24u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        DecorationResult = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
        v181 = v5 + DecorationResult[7];
        v182 = type metadata accessor for TranscriptProtoStatementID(0);
        v183 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 48);
        if (!v183(v181, 1, v182))
        {
          swift_bridgeObjectRelease();
          v184 = v181 + *(int *)(v182 + 24);
          v185 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 8))(v184, v185);
        }
        v186 = v5 + DecorationResult[8];
        if (v183(v186, 1, v182))
          goto LABEL_367;
        swift_bridgeObjectRelease();
        v187 = v186 + *(int *)(v182 + 24);
        goto LABEL_366;
      case 0x25u:
        swift_bridgeObjectRelease();
        v188 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        v189 = v5 + v188[6];
        v190 = type metadata accessor for TranscriptProtoStatementID(0);
        v191 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v190 - 8) + 48);
        if (!v191(v189, 1, v190))
        {
          swift_bridgeObjectRelease();
          v192 = v189 + *(int *)(v190 + 24);
          v193 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v193 - 8) + 8))(v192, v193);
        }
        v194 = v5 + v188[7];
        if (!v191(v194, 1, v190))
        {
          swift_bridgeObjectRelease();
          v195 = v194 + *(int *)(v190 + 24);
          v196 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v196 - 8) + 8))(v195, v196);
        }
        v26 = v188[8];
        goto LABEL_442;
      case 0x26u:
        v197 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v197 - 8) + 48))(v5, 1, v197))
        {
          if ((~*(_QWORD *)v5 & 0xF000000000000007) != 0)
            swift_release();
          v198 = v5 + *(int *)(v197 + 20);
          v199 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 8))(v198, v199);
        }
        StepResults = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
        v200 = (_QWORD *)(v5 + StepResults[5]);
        v201 = type metadata accessor for ToolKitProtoTypeInstance(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v201 - 8) + 48))(v200, 1, v201))
        {
          if ((~*v200 & 0xF000000000000007) != 0)
            swift_release();
          v202 = (char *)v200 + *(int *)(v201 + 20);
          v203 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v203 - 8) + 8))(v202, v203);
        }
        v65 = StepResults[6];
LABEL_160:
        v14 = v5 + v65;
        v204 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v204 - 8) + 48))(v14, 1, v204))
          goto LABEL_390;
        goto LABEL_441;
      case 0x27u:
        v205 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v205 - 8) + 48))(v5, 1, v205))
        {
          if ((~*(_QWORD *)v5 & 0xF000000000000007) != 0)
            swift_release();
          v206 = v5 + *(int *)(v205 + 20);
          v207 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v207 - 8) + 8))(v206, v207);
        }
        v180 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
LABEL_167:
        StepResults = (int *)v180;
        v208 = v5 + *(int *)(v180 + 20);
        v209 = type metadata accessor for TranscriptProtoStatementID(0);
        v210 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 48);
        if (!v210(v208, 1, v209))
        {
          swift_bridgeObjectRelease();
          v211 = v208 + *(int *)(v209 + 24);
          v212 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v212 - 8) + 8))(v211, v212);
        }
        v213 = v5 + StepResults[6];
        if (v210(v213, 1, v209))
          goto LABEL_441;
        swift_bridgeObjectRelease();
        v214 = v213 + *(int *)(v209 + 24);
        goto LABEL_440;
      case 0x28u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        DecorationResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationResult(0);
        v215 = v5 + DecorationResult[8];
        DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationToolRetrievalResponse - 8)
                                                                       + 48))(v215, 1, DecorationToolRetrievalResponse))
        {
          goto LABEL_367;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v217 = *(int *)(DecorationToolRetrievalResponse + 36);
LABEL_365:
        v187 = v215 + v217;
LABEL_366:
        v375 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v375 - 8) + 8))(v187, v375);
LABEL_367:
        v26 = DecorationResult[9];
        goto LABEL_442;
      case 0x2Au:
        swift_bridgeObjectRelease();
        StepResults = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
        v218 = v5 + StepResults[5];
        v219 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v219 - 8) + 48))(v218, 1, v219))
        {
          swift_bridgeObjectRelease();
          v220 = v218 + *(int *)(v219 + 24);
          v221 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 8))(v220, v221);
        }
        v14 = v5 + StepResults[6];
        DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerResultPayload
                                                                                   - 8)
                                                                       + 48))(v14, 1, DecorationPrePlannerResultPayload))
        {
          goto LABEL_441;
        }
        DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8)
                                                                        + 48))(v14, 1, DecorationPrePlannerPayloadEnum))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
              goto LABEL_436;
            case 1u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
              goto LABEL_436;
            case 2u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
              goto LABEL_436;
            case 3u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
              goto LABEL_436;
            case 4u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
              goto LABEL_436;
            case 5u:
              swift_bridgeObjectRelease();
              DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
              goto LABEL_436;
            default:
              goto LABEL_438;
          }
        }
        goto LABEL_438;
      default:
        goto LABEL_443;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v526 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v127 = (_QWORD *)(v14 + v526[6]);
        v128 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 48))(v127, 1, v128))
        {
          if ((~*v127 & 0xF000000000000007) != 0)
            swift_release();
          v129 = (char *)v127 + *(int *)(v128 + 20);
          v130 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v130 - 8) + 8))(v129, v130);
        }
        v131 = v14 + v526[7];
        v132 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 48))(v131, 1, v132))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v133 = v131 + *(int *)(v132 + 28);
          v134 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 8))(v133, v134);
        }
        v135 = v526[8];
        goto LABEL_437;
      case 1u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoActionConfirmation(0);
        goto LABEL_436;
      case 2u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_436;
      case 3u:
        swift_bridgeObjectRelease();
        v296 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_270;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v135 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_437;
      case 5u:
        swift_bridgeObjectRelease();
        v296 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_270:
        v531 = v296;
        v297 = (_QWORD *)(v14 + *(int *)(v296 + 24));
        v298 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v298 - 8) + 48))(v297, 1, v298))
        {
          if ((~*v297 & 0xF000000000000007) != 0)
            swift_release();
          v299 = (char *)v297 + *(int *)(v298 + 20);
          v300 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v300 - 8) + 8))(v299, v300);
        }
        v135 = *(int *)(v531 + 28);
        goto LABEL_437;
      case 6u:
        swift_bridgeObjectRelease();
        v532 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v301 = (_QWORD *)(v14 + *(int *)(v532 + 20));
        v302 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v302 - 8) + 48))(v301, 1, v302))
        {
          if ((~*v301 & 0xF000000000000007) != 0)
            swift_release();
          v303 = (char *)v301 + *(int *)(v302 + 20);
          v304 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v304 - 8) + 8))(v303, v304);
        }
        v135 = *(int *)(v532 + 24);
        goto LABEL_437;
      case 7u:
        v305 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v305 - 8) + 48))(v14, 1, v305))
          goto LABEL_435;
        v306 = swift_getEnumCaseMultiPayload();
        if (v306 != 2)
        {
          if (v306 == 1)
          {
            v307 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (v306)
              goto LABEL_435;
            v307 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_434:
          v447 = v14 + *(int *)(v307 + 20);
          v448 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v448 - 8) + 8))(v447, v448);
LABEL_435:
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_436:
          v135 = *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
LABEL_437:
          v449 = v14 + v135;
          v450 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v450 - 8) + 8))(v449, v450);
LABEL_438:
          v20 = *(int *)(DecorationPrePlannerResultPayload + 20);
LABEL_439:
          v214 = v14 + v20;
LABEL_440:
          v451 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v451 - 8) + 8))(v214, v451);
LABEL_441:
          v26 = StepResults[7];
          goto LABEL_442;
        }
        v339 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v339 - 8) + 48))(v14, 1, v339))
          goto LABEL_433;
        v340 = swift_getEnumCaseMultiPayload();
        if (v340 == 1)
        {
          v442 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v442 - 8) + 48))(v14, 1, v442))
          {
            v443 = v14 + *(int *)(v442 + 20);
            v444 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v444 - 8) + 8))(v443, v444);
          }
          v341 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v340)
          {
LABEL_433:
            v307 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_434;
          }
          swift_bridgeObjectRelease();
          v341 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        v445 = v14 + *(int *)(v341 + 20);
        v446 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v446 - 8) + 8))(v445, v446);
        goto LABEL_433;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v135 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_437;
      case 9u:
        v308 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v308 - 8) + 48))(v14, 1, v308))
        {
          v309 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v309 - 8) + 48))(v14, 1, v309))
          {
            v310 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v310 - 8) + 48))(v14, 16, v310))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v311 = v14 + *(int *)(v310 + 28);
              v312 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v312 - 8) + 8))(v311, v312);
            }
          }
          v313 = v14 + *(int *)(v308 + 20);
          v314 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v314 - 8) + 8))(v313, v314);
        }
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_436;
      case 0xAu:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_436;
      default:
        goto LABEL_438;
    }
  }
LABEL_444:
  swift_bridgeObjectRelease();
  v456 = a1 + v4[13];
  v457 = type metadata accessor for TranscriptProtoTimepoint(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v457 - 8) + 48))(v456, 1, v457))
  {
    swift_bridgeObjectRelease();
    v458 = v456 + *(int *)(v457 + 28);
    v459 = sub_2408E5750();
    v460 = *(_QWORD *)(v459 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v460 + 48))(v458, 1, v459))
      (*(void (**)(uint64_t, uint64_t))(v460 + 8))(v458, v459);
    v461 = v456 + *(int *)(v457 + 32);
    v462 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v462 - 8) + 8))(v461, v462);
  }
  v463 = a1 + v4[14];
  v464 = sub_2408E5750();
  v465 = *(_QWORD *)(v464 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v465 + 48))(v463, 1, v464))
    (*(void (**)(uint64_t, uint64_t))(v465 + 8))(v463, v464);
  v466 = a1 + v4[15];
  v467 = type metadata accessor for TranscriptProtoParticipantID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v467 - 8) + 48))(v466, 1, v467))
  {
    swift_bridgeObjectRelease();
    v468 = v466 + *(int *)(v467 + 20);
    v469 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v469 - 8) + 8))(v468, v469);
  }
  v470 = a1 + v4[16];
  v471 = type metadata accessor for TranscriptProtoSpanID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v471 - 8) + 48))(v470, 1, v471))
  {
    v472 = v470 + *(int *)(v471 + 20);
    v473 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v473 - 8) + 8))(v472, v473);
  }
  v474 = a1 + v4[17];
  v475 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v475 - 8) + 8))(v474, v475);

}

uint64_t sub_240363D58(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

_QWORD *initializeWithCopy for IETranscriptEventWrapper(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(_QWORD *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  void (*v43)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  unsigned int (**v52)(const void *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  void (*v61)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(_QWORD *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(_QWORD *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t Step;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int (*v91)(_QWORD *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(_QWORD *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  _QWORD *v108;
  _BYTE *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE *v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(_BYTE *, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t StepResults;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int (*v132)(_QWORD *, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  unsigned int (*v141)(_QWORD *, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE *v145;
  _BYTE *v146;
  uint64_t v147;
  void (*v148)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v149;
  _BYTE *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  _QWORD *v156;
  _BYTE *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v162;
  uint64_t v163;
  uint64_t v164;
  _BYTE *v165;
  _QWORD *v166;
  _BYTE *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v172;
  uint64_t v173;
  uint64_t v174;
  _BYTE *v175;
  _QWORD *v176;
  _BYTE *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _BYTE *v186;
  _BYTE *v187;
  uint64_t v188;
  void (*v189)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v190;
  _BYTE *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unsigned int (*v195)(_BYTE *, uint64_t, uint64_t);
  uint64_t v196;
  _BYTE *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  _BYTE *v202;
  _BYTE *v203;
  uint64_t v204;
  void (*v205)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v206;
  _BYTE *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  unsigned int (*v216)(char *, uint64_t, uint64_t);
  uint64_t v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  _QWORD *v225;
  unsigned int (*v226)(char *, uint64_t, uint64_t);
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  _QWORD *v233;
  _BYTE *v234;
  _QWORD *v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  unsigned int (*v239)(_QWORD *, uint64_t, uint64_t);
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _QWORD *v243;
  unsigned int (*v244)(_QWORD *, uint64_t, uint64_t);
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  _QWORD *v250;
  uint64_t v251;
  uint64_t v252;
  unsigned int (*v253)(_QWORD *, uint64_t, uint64_t);
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  _BYTE *v257;
  _BYTE *v258;
  uint64_t v259;
  void (*v260)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v261;
  _BYTE *v262;
  uint64_t v263;
  uint64_t v264;
  unsigned int (**v265)(_QWORD *, uint64_t, uint64_t);
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  int *v269;
  uint64_t v270;
  _QWORD *v271;
  _QWORD *v272;
  uint64_t v273;
  uint64_t v274;
  unsigned int (*v275)(_QWORD *, uint64_t, uint64_t);
  uint64_t v276;
  uint64_t v277;
  int *v278;
  uint64_t v279;
  _QWORD *v280;
  _QWORD *v281;
  uint64_t v282;
  uint64_t v283;
  unsigned int (*v284)(_QWORD *, uint64_t, uint64_t);
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  _BYTE *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  _BYTE *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  _QWORD *v297;
  _QWORD *v298;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v300;
  unsigned int (*v301)(_QWORD *, uint64_t, uint64_t);
  uint64_t v302;
  uint64_t v303;
  int *DecorationPrePlannerResult;
  uint64_t v305;
  _QWORD *v306;
  _QWORD *v307;
  uint64_t v308;
  uint64_t v309;
  unsigned int (*v310)(_QWORD *, uint64_t, uint64_t);
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  void (*v318)(char *, char *, uint64_t);
  uint64_t v319;
  uint64_t v320;
  _QWORD *v321;
  _QWORD *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  uint64_t v330;
  void (*v331)(char *, char *, uint64_t);
  char *v332;
  uint64_t v333;
  _QWORD *v334;
  _QWORD *v335;
  uint64_t v336;
  uint64_t v337;
  _BYTE *v338;
  _QWORD *v339;
  char *v340;
  uint64_t v341;
  void (*v342)(_BYTE *, char *, uint64_t);
  char *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  void (*v351)(char *, char *, uint64_t);
  char *v352;
  uint64_t v353;
  _QWORD *v354;
  _QWORD *v355;
  uint64_t v356;
  uint64_t v357;
  _QWORD *v358;
  _QWORD *v359;
  uint64_t v360;
  uint64_t v361;
  _QWORD *v362;
  _QWORD *v363;
  _QWORD *v364;
  uint64_t v365;
  uint64_t v366;
  _BYTE *v367;
  char *v368;
  uint64_t v369;
  void (*v370)(_BYTE *, char *, uint64_t);
  uint64_t v371;
  uint64_t v372;
  char *v373;
  char *v374;
  uint64_t v375;
  void (*v376)(char *, char *, uint64_t);
  uint64_t v377;
  _BYTE *v378;
  _BYTE *v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char *v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  void (*v387)(char *, char *, uint64_t);
  char *v388;
  uint64_t v389;
  uint64_t v390;
  _BYTE *v391;
  char *v392;
  uint64_t v393;
  char *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  char *v405;
  char *v406;
  uint64_t v407;
  uint64_t v408;
  void (*v409)(char *, char *, uint64_t);
  char *v410;
  uint64_t v411;
  uint64_t v412;
  _BYTE *v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  char *v417;
  char *v418;
  uint64_t v419;
  uint64_t v420;
  void (*v421)(char *, char *, uint64_t);
  char *v422;
  uint64_t v423;
  uint64_t v424;
  _QWORD *v425;
  _QWORD *v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  _BYTE *v432;
  _QWORD *v433;
  uint64_t v434;
  uint64_t v435;
  void (*v436)(_BYTE *, char *, uint64_t);
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  _QWORD *v440;
  _QWORD *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  char *v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  char *v451;
  uint64_t v452;
  void (*v453)(char *, char *, uint64_t);
  char *v454;
  uint64_t v455;
  _BYTE *v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  char *v463;
  char *v464;
  uint64_t v465;
  uint64_t v466;
  void (*v467)(char *, char *, uint64_t);
  char *v468;
  uint64_t v469;
  uint64_t v470;
  char *v471;
  char *v472;
  uint64_t v473;
  unsigned int (**v474)(const void *, uint64_t, uint64_t);
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t *v483;
  uint64_t v484;
  uint64_t v485;
  unsigned int (*v486)(uint64_t *, uint64_t, uint64_t);
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  char *v490;
  uint64_t v491;
  uint64_t v492;
  void (*v493)(char *, char *, uint64_t);
  uint64_t v494;
  uint64_t v495;
  _QWORD *v496;
  _QWORD *v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  char *v501;
  uint64_t v502;
  uint64_t v503;
  void (*v504)(char *, char *, uint64_t);
  char *v505;
  uint64_t v506;
  uint64_t v507;
  _QWORD *v508;
  _QWORD *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  _BYTE *v513;
  _BYTE *v514;
  uint64_t v515;
  int *v516;
  uint64_t v517;
  _QWORD *v518;
  uint64_t *v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  _BYTE *v525;
  _BYTE *v526;
  uint64_t v527;
  int *v528;
  uint64_t v529;
  _QWORD *v530;
  _QWORD *v531;
  uint64_t v532;
  uint64_t v533;
  unsigned int (*v534)(_QWORD *, uint64_t, uint64_t);
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  char *v540;
  uint64_t v541;
  void (*v542)(char *, char *, uint64_t);
  uint64_t v543;
  _BYTE *v544;
  char *v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  char *v549;
  char *v550;
  uint64_t v551;
  uint64_t v552;
  void (*v553)(char *, char *, uint64_t);
  char *v554;
  uint64_t v555;
  uint64_t v556;
  char *v557;
  char *v558;
  uint64_t DecorationPrePlannerResultPayload;
  unsigned int (**v560)(const void *, uint64_t, uint64_t);
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  _DWORD *v564;
  uint64_t v565;
  unsigned int (*v566)(_DWORD *, uint64_t, uint64_t);
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  char *v570;
  char *v571;
  uint64_t v572;
  uint64_t v573;
  void (*v574)(char *, char *, uint64_t);
  char *v575;
  uint64_t v576;
  uint64_t v577;
  _BYTE *v578;
  char *v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  char *v583;
  uint64_t v584;
  uint64_t v585;
  void (*v586)(char *, char *, uint64_t);
  char *v587;
  uint64_t v588;
  uint64_t v589;
  _BYTE *v590;
  char *v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  char *v597;
  char *v598;
  uint64_t v599;
  uint64_t v600;
  void (*v601)(char *, char *, uint64_t);
  uint64_t v602;
  uint64_t v603;
  _BYTE *v604;
  char *v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  char *v609;
  uint64_t v610;
  uint64_t v611;
  void (*v612)(char *, char *, uint64_t);
  char *v613;
  uint64_t v614;
  uint64_t v615;
  _BYTE *v616;
  char *v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  char *v621;
  char *v622;
  uint64_t v623;
  uint64_t v624;
  _QWORD *v625;
  _QWORD *v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  char *v632;
  uint64_t v633;
  uint64_t v634;
  void (*v635)(char *, char *, uint64_t);
  char *v636;
  uint64_t v637;
  uint64_t v638;
  _QWORD *v639;
  _QWORD *v640;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  char *v645;
  char *v646;
  uint64_t v647;
  uint64_t v648;
  void (*v649)(char *, char *, uint64_t);
  char *v650;
  uint64_t v651;
  uint64_t v652;
  _BYTE *v653;
  char *v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  char *v658;
  uint64_t v659;
  uint64_t v660;
  void (*v661)(char *, char *, uint64_t);
  char *v662;
  uint64_t v663;
  char *v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  void (*v670)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v671;
  uint64_t v672;
  _BYTE *v673;
  char *v674;
  uint64_t v675;
  uint64_t v676;
  _BYTE *v677;
  char *v678;
  uint64_t v679;
  int EnumCaseMultiPayload;
  uint64_t v681;
  uint64_t v682;
  _BYTE *v683;
  _BYTE *v684;
  uint64_t v685;
  char *v686;
  uint64_t v687;
  uint64_t v688;
  char *v689;
  uint64_t v690;
  uint64_t v691;
  char *v692;
  char *v693;
  uint64_t v694;
  int *v695;
  uint64_t v696;
  _BYTE *v697;
  _QWORD *v698;
  _QWORD *v699;
  uint64_t v700;
  uint64_t v701;
  _QWORD *v702;
  _QWORD *v703;
  uint64_t v704;
  uint64_t v705;
  unsigned int (*v706)(_QWORD *, uint64_t, uint64_t);
  uint64_t v707;
  uint64_t v708;
  char *v709;
  char *v710;
  uint64_t v711;
  char *v712;
  uint64_t v713;
  char *v714;
  _QWORD *v715;
  char *v716;
  uint64_t v717;
  char *v718;
  char *v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  int *v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  _QWORD *v727;
  uint64_t v728;
  unsigned int (*v729)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v730;
  uint64_t v731;
  int *v732;
  uint64_t v733;
  char *v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  _BYTE *v739;
  _BYTE *v740;
  uint64_t v741;
  _BYTE *v742;
  uint64_t v743;
  _BYTE *v744;
  _BYTE *v745;
  uint64_t v746;
  uint64_t v747;
  _QWORD *v748;
  _QWORD *v749;
  _QWORD *v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  char *v756;
  uint64_t v757;
  char *v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  void (*v762)(char *, char *, uint64_t);
  char *v763;
  uint64_t v764;
  uint64_t v765;
  _BYTE *v766;
  _QWORD *v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  _QWORD *v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  int v775;
  uint64_t v776;
  uint64_t v777;
  uint64_t v778;
  _QWORD *v779;
  _QWORD *v780;
  uint64_t v781;
  _QWORD *v782;
  uint64_t v783;
  char *v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  void (*v789)(char *, char *, uint64_t);
  char *v790;
  uint64_t v791;
  uint64_t v792;
  char *v793;
  char *v794;
  uint64_t v795;
  uint64_t v796;
  char *v797;
  char *v798;
  uint64_t v799;
  uint64_t v800;
  _QWORD *v801;
  _QWORD *v802;
  uint64_t v803;
  uint64_t v804;
  _QWORD *v805;
  _QWORD *v806;
  uint64_t v807;
  uint64_t v808;
  unsigned int (*v809)(_QWORD *, uint64_t, uint64_t);
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  char *v814;
  char *v815;
  uint64_t v816;
  void (*v817)(char *, char *, uint64_t);
  char *v818;
  uint64_t v819;
  _QWORD *v820;
  _QWORD *v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  int v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  _QWORD *v836;
  char *v837;
  char *v838;
  uint64_t v839;
  uint64_t v840;
  _QWORD *v841;
  _QWORD *v842;
  uint64_t v843;
  uint64_t v844;
  unsigned int (*v845)(_QWORD *, uint64_t, uint64_t);
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  uint64_t v850;
  uint64_t v851;
  _QWORD *v852;
  uint64_t v853;
  unsigned int (*v854)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v855;
  uint64_t v856;
  uint64_t v857;
  uint64_t v858;
  char *v859;
  char *v860;
  uint64_t v861;
  uint64_t v862;
  char *v863;
  char *v864;
  uint64_t v865;
  uint64_t v866;
  _QWORD *v867;
  _QWORD *v868;
  uint64_t v869;
  void (**v870)(_BYTE *, _QWORD, uint64_t, int *);
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  _QWORD *v876;
  uint64_t v877;
  uint64_t (*v878)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v879;
  _QWORD *v880;
  uint64_t v881;
  int v882;
  uint64_t v883;
  uint64_t v884;
  uint64_t v885;
  char *v886;
  char *v887;
  uint64_t v888;
  uint64_t v889;
  char *v890;
  char *v891;
  uint64_t v892;
  uint64_t v893;
  _BYTE *v894;
  char *v895;
  uint64_t v896;
  uint64_t v897;
  _QWORD *v898;
  _QWORD *v899;
  uint64_t v900;
  uint64_t v901;
  unsigned int (*v902)(_QWORD *, uint64_t, uint64_t);
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  char *v906;
  uint64_t v907;
  uint64_t v908;
  void (*v909)(char *, char *, uint64_t);
  char *v910;
  uint64_t v911;
  uint64_t v912;
  uint64_t v913;
  uint64_t v914;
  uint64_t v915;
  char *v916;
  uint64_t v917;
  uint64_t v918;
  void (*v919)(char *, char *, uint64_t);
  char *v920;
  uint64_t v921;
  uint64_t v922;
  _BYTE *v923;
  char *v924;
  uint64_t v925;
  uint64_t v926;
  char *v927;
  char *v928;
  uint64_t v929;
  uint64_t v930;
  _BYTE *v931;
  char *v932;
  uint64_t v933;
  uint64_t v934;
  uint64_t v935;
  char *v936;
  uint64_t v937;
  void (*v938)(char *, char *, uint64_t);
  uint64_t v939;
  char *v940;
  char *v941;
  uint64_t v942;
  uint64_t v943;
  uint64_t v944;
  char *v945;
  char *v946;
  uint64_t v947;
  uint64_t v948;
  _BYTE *v949;
  char *v950;
  uint64_t v951;
  uint64_t v952;
  _BYTE *v953;
  _BYTE *v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  char *v958;
  char *v959;
  uint64_t v960;
  uint64_t v961;
  char *v962;
  char *v963;
  uint64_t v964;
  uint64_t v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  char *v969;
  uint64_t v970;
  char *v971;
  char *v972;
  char *v973;
  uint64_t v974;
  uint64_t v975;
  _QWORD *v976;
  _QWORD *v977;
  uint64_t v978;
  uint64_t v979;
  _QWORD *v980;
  _QWORD *v981;
  uint64_t v982;
  uint64_t v983;
  unsigned int (*v984)(_QWORD *, uint64_t, uint64_t);
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  char *v988;
  uint64_t v989;
  void (*v990)(char *, char *, uint64_t);
  char *v991;
  uint64_t v992;
  _BYTE *v993;
  char *v994;
  uint64_t v995;
  uint64_t v996;
  _BYTE *v997;
  _BYTE *v998;
  uint64_t v999;
  int *v1000;
  uint64_t v1001;
  _QWORD *v1002;
  _QWORD *v1003;
  uint64_t v1004;
  uint64_t v1005;
  _QWORD *v1006;
  _QWORD *v1007;
  uint64_t v1008;
  uint64_t v1009;
  unsigned int (*v1010)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1011;
  uint64_t v1012;
  uint64_t v1013;
  char *v1014;
  uint64_t v1015;
  void (*v1016)(char *, char *, uint64_t);
  char *v1017;
  uint64_t v1018;
  _BYTE *v1019;
  char *v1020;
  uint64_t v1021;
  uint64_t v1022;
  char *v1023;
  char *v1024;
  uint64_t v1025;
  uint64_t v1026;
  _QWORD *v1027;
  _QWORD *v1028;
  int *v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  char *v1033;
  char *v1034;
  uint64_t v1035;
  unsigned int (*v1036)(char *, uint64_t, uint64_t);
  uint64_t v1037;
  uint64_t v1038;
  uint64_t v1039;
  uint64_t v1040;
  char *v1041;
  char *v1042;
  uint64_t v1043;
  char *v1044;
  char *v1045;
  char *v1046;
  uint64_t v1047;
  char *v1048;
  uint64_t v1049;
  char *v1050;
  char *v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  char *v1055;
  char *v1056;
  uint64_t v1057;
  uint64_t v1058;
  char *v1059;
  char *v1060;
  uint64_t v1061;
  uint64_t v1062;
  char *v1063;
  char *v1064;
  uint64_t v1065;
  uint64_t v1066;
  _QWORD *v1067;
  _QWORD *v1068;
  uint64_t v1069;
  uint64_t v1070;
  uint64_t v1071;
  uint64_t v1072;
  uint64_t v1073;
  char *v1074;
  char *v1075;
  uint64_t v1076;
  void (*v1077)(char *, char *, uint64_t);
  char *v1078;
  uint64_t v1079;
  _QWORD *v1080;
  _QWORD *v1081;
  uint64_t v1082;
  uint64_t v1083;
  _BYTE *v1084;
  char *v1085;
  uint64_t v1086;
  void (*v1087)(_BYTE *, char *, uint64_t);
  char *v1088;
  uint64_t v1089;
  char *v1090;
  char *v1091;
  char *v1092;
  uint64_t v1093;
  uint64_t v1094;
  _BYTE *v1095;
  char *v1096;
  uint64_t v1097;
  uint64_t v1098;
  _BYTE *v1099;
  char *v1100;
  uint64_t v1101;
  _QWORD *v1102;
  uint64_t v1103;
  _QWORD *v1104;
  _QWORD *v1105;
  uint64_t v1106;
  uint64_t v1107;
  _QWORD *v1108;
  _QWORD *v1109;
  uint64_t v1110;
  uint64_t v1111;
  unsigned int (*v1112)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1113;
  uint64_t v1114;
  uint64_t v1115;
  char *v1116;
  char *v1117;
  uint64_t v1118;
  uint64_t v1119;
  unsigned int (*v1120)(char *, uint64_t, uint64_t);
  uint64_t v1121;
  uint64_t v1122;
  char *v1123;
  char *v1124;
  uint64_t v1125;
  uint64_t v1126;
  char *v1127;
  char *v1128;
  uint64_t v1129;
  uint64_t v1130;
  uint64_t v1131;
  uint64_t v1132;
  _QWORD *v1133;
  _QWORD *v1134;
  uint64_t v1135;
  uint64_t v1136;
  uint64_t v1137;
  uint64_t v1138;
  uint64_t v1139;
  char *v1140;
  char *v1141;
  uint64_t v1142;
  _QWORD *v1143;
  void (*v1144)(char *, char *, uint64_t);
  uint64_t v1145;
  uint64_t v1146;
  _QWORD *v1147;
  _QWORD *v1148;
  uint64_t v1149;
  uint64_t v1150;
  uint64_t v1151;
  uint64_t v1152;
  char *v1153;
  char *v1154;
  uint64_t v1155;
  uint64_t v1156;
  uint64_t v1157;
  char *v1158;
  uint64_t v1159;
  uint64_t v1160;
  void *v1161;
  id v1162;
  uint64_t v1164;
  char *v1165;
  char *v1166;
  uint64_t v1167;
  char *v1168;
  uint64_t v1169;
  char *v1170;
  char *v1171;
  int *v1172;
  uint64_t v1173;
  uint64_t v1174;
  uint64_t v1175;
  char *v1176;
  uint64_t v1177;
  unsigned int (*v1178)(char *, uint64_t, uint64_t);
  uint64_t v1179;
  uint64_t v1180;
  uint64_t v1181;
  uint64_t v1182;
  uint64_t v1183;
  uint64_t v1184;
  uint64_t v1185;
  uint64_t v1186;
  char *v1187;
  char *v1188;
  uint64_t v1189;
  uint64_t v1190;
  uint64_t v1191;
  uint64_t v1192;
  uint64_t v1193;
  char *v1194;
  char *v1195;
  uint64_t v1196;
  void (*v1197)(char *, char *, uint64_t);
  uint64_t v1198;
  char *v1199;
  char *v1200;
  uint64_t v1201;
  uint64_t v1202;
  char *v1203;
  char *v1204;
  uint64_t v1205;
  uint64_t v1206;
  char *v1207;
  char *v1208;
  uint64_t v1209;
  void (*v1210)(char *, char *, uint64_t);
  uint64_t v1211;
  char *v1212;
  char *v1213;
  uint64_t v1214;
  int *v1215;
  uint64_t v1216;
  _QWORD *v1217;
  _QWORD *v1218;
  uint64_t v1219;
  _QWORD *v1220;
  unsigned int (*v1221)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1222;
  uint64_t v1223;
  uint64_t v1224;
  char *v1225;
  uint64_t v1226;
  uint64_t v1227;
  uint64_t v1228;
  _BYTE *v1229;
  void (*v1230)(char *, char *, uint64_t);
  char *v1231;
  uint64_t v1232;
  uint64_t v1233;
  _QWORD *v1234;
  _QWORD *v1235;
  uint64_t v1236;
  uint64_t v1237;
  uint64_t v1238;
  char *v1239;
  uint64_t v1240;
  uint64_t v1241;
  uint64_t v1242;
  _BYTE *v1243;
  void (*v1244)(char *, char *, uint64_t);
  char *v1245;
  uint64_t v1246;
  uint64_t v1247;
  _QWORD *v1248;
  _QWORD *v1249;
  uint64_t v1250;
  uint64_t v1251;
  uint64_t v1252;
  char *v1253;
  _QWORD *v1254;
  uint64_t v1255;
  uint64_t v1256;
  uint64_t v1257;
  _BYTE *v1258;
  void (*v1259)(char *, char *, uint64_t);
  char *v1260;
  uint64_t v1261;
  uint64_t v1262;
  _BYTE *v1263;
  char *v1264;
  uint64_t v1265;
  void (*v1266)(char *, char *, uint64_t);
  char *v1267;
  char *v1268;
  _QWORD *v1269;
  _QWORD *v1270;
  char *v1271;
  void *v1272;
  char *v1273;
  void *v1274;
  char *v1275;
  uint64_t v1276;
  _QWORD *__src;
  void *__srca;
  void (*__srce)(char *, char *, uint64_t);
  _QWORD *__srcb;
  _QWORD *__srcc;
  char *__srcd;
  void (**v1283)(char *, _QWORD, uint64_t, uint64_t);
  _QWORD *v1284;
  void (**v1285)(void *, _QWORD, uint64_t, uint64_t);
  char *v1286;
  _QWORD *v1287;
  _QWORD *v1288;
  uint64_t v1289;
  _BYTE *v1290;
  _QWORD *v1291;
  uint64_t v1292;
  uint64_t v1293;
  uint64_t v1294;
  char *v1295;
  uint64_t v1296;
  uint64_t v1297;
  uint64_t v1298;
  char *v1299;
  char *v1300;
  _QWORD *__dst;
  char *__dsta;
  char *__dstk;
  char *__dstl;
  _QWORD *__dstb;
  unsigned int (**__dstc)(const void *, uint64_t, uint64_t);
  unsigned int (**__dstd)(const void *, uint64_t, uint64_t);
  _BYTE *__dstm;
  void *__dste;
  int *__dstf;
  unsigned int (*__dstg)(_QWORD *, uint64_t, uint64_t);
  char *__dstn;
  void *__dsto;
  int *__dsth;
  int *__dsti;
  void *__dstp;
  _QWORD *__dstj;
  _QWORD *__dstq;
  _QWORD *__dstr;
  char *__dsts;
  int *v1321;
  int *v1322;
  int *v1323;
  int *v1324;
  int *DecorationResult;
  char *v1326;
  unsigned int (**v1327)(const void *, uint64_t, uint64_t);
  char *v1328;
  char *v1329;
  int *v1330;
  char *v1331;
  char *v1332;
  _DWORD *v1333;
  char *v1334;
  char *v1335;
  char *v1336;
  char *v1337;
  char *v1338;
  char *v1339;
  char *v1340;
  char *v1341;
  uint64_t v1342;
  uint64_t v1343;
  uint64_t v1344;
  uint64_t v1345;
  uint64_t v1346;
  uint64_t v1347;
  uint64_t v1348;
  uint64_t v1349;
  uint64_t v1350;
  uint64_t v1351;
  uint64_t v1352;
  uint64_t v1353;
  uint64_t v1354;
  uint64_t v1355;
  uint64_t v1356;
  uint64_t v1357;
  _QWORD *v1358;
  _QWORD *v1359;
  _QWORD *v1360;
  _QWORD *v1361;
  _QWORD *v1362;
  _QWORD *v1363;
  _QWORD *v1364;
  _QWORD *v1365;
  _QWORD *v1366;
  _QWORD *v1367;
  _QWORD *v1368;
  _QWORD *v1369;
  _QWORD *v1370;
  _QWORD *v1371;
  _QWORD *v1372;
  _QWORD *v1373;
  _QWORD *v1374;
  _QWORD *v1375;
  _QWORD *v1376;
  _QWORD *v1377;
  _QWORD *v1378;
  _QWORD *v1379;
  uint64_t v1380;
  uint64_t v1381;
  uint64_t v1382;
  uint64_t v1383;
  uint64_t v1384;
  uint64_t v1385;
  uint64_t v1386;
  uint64_t v1387;
  uint64_t v1388;
  uint64_t v1389;
  uint64_t v1390;
  uint64_t v1391;
  uint64_t v1392;
  uint64_t v1393;
  uint64_t v1394;
  uint64_t v1395;
  uint64_t v1396;
  uint64_t v1397;
  uint64_t v1398;
  uint64_t v1399;
  uint64_t v1400;
  uint64_t v1401;
  uint64_t v1402;
  uint64_t v1403;
  uint64_t v1404;
  uint64_t v1405;
  unsigned int (*v1406)(_BYTE *, uint64_t, uint64_t);
  uint64_t v1407;
  _BYTE *v1409;
  _QWORD *v1410;
  uint64_t v1412;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  a1[12] = a2[12];
  v1412 = type metadata accessor for TranscriptProtoEvent(0);
  v10 = *(int *)(v1412 + 44);
  v1409 = (char *)a1 + v10;
  v1410 = a1;
  v11 = (char *)a2 + v10;
  v12 = type metadata accessor for TranscriptProtoPayload(0);
  v13 = *(_QWORD *)(v12 - 8);
  v1406 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v1406(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
    memcpy(v1409, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    v17 = a2;
    v16 = (int *)v1412;
    goto LABEL_291;
  }
  v1405 = v13;
  v18 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v1407 = *(_QWORD *)(v18 - 8);
  if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v1407 + 48))(v11, 1, v18))
  {
    v17 = a2;
    v16 = (int *)v1412;
    v21 = v13;
    v20 = v1409;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v1380 = v18;
        *v1409 = *v11;
        v22 = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
        v23 = v22[5];
        v24 = &v1409[v23];
        v25 = (_QWORD *)((char *)v14 + v23);
        v26 = type metadata accessor for TranscriptProtoLocaleSettings(0);
        v27 = *(_QWORD *)(v26 - 8);
        v1358 = v14;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v312 = v25[1];
          *v24 = *v25;
          v24[1] = v312;
          v313 = v25[3];
          v24[2] = v25[2];
          v24[3] = v313;
          v314 = v25[5];
          v24[4] = v25[4];
          v24[5] = v314;
          v315 = *(int *)(v26 + 28);
          __dstk = (char *)v25 + v315;
          v1326 = (char *)v24 + v315;
          v316 = v12;
          v317 = sub_2408E57A4();
          v318 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v317 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v14 = v1358;
          swift_bridgeObjectRetain();
          v319 = v317;
          v12 = v316;
          v318(v1326, __dstk, v319);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        v320 = v22[6];
        v20 = v1409;
        v321 = &v1409[v320];
        v322 = (_QWORD *)((char *)v14 + v320);
        v323 = type metadata accessor for TranscriptProtoDeviceDetails(0);
        v324 = *(_QWORD *)(v323 - 8);
        v18 = v1380;
        v21 = v1405;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v324 + 48))(v322, 1, v323))
        {
          v325 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
          memcpy(v321, v322, *(_QWORD *)(*(_QWORD *)(v325 - 8) + 64));
        }
        else
        {
          v562 = v322[1];
          *v321 = *v322;
          v321[1] = v562;
          v563 = *(int *)(v323 + 20);
          v1333 = (_DWORD *)((char *)v321 + v563);
          v564 = (_DWORD *)((char *)v322 + v563);
          v565 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
          __dstb = *(_QWORD **)(v565 - 8);
          v566 = (unsigned int (*)(_DWORD *, uint64_t, uint64_t))__dstb[6];
          swift_bridgeObjectRetain();
          if (v566(v564, 1, v565))
          {
            v567 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
            memcpy(v1333, v564, *(_QWORD *)(*(_QWORD *)(v567 - 8) + 64));
          }
          else
          {
            *v1333 = *v564;
            v708 = *(int *)(v565 + 20);
            v709 = (char *)v1333 + v708;
            v1291 = v321;
            v710 = (char *)v564 + v708;
            v711 = sub_2408E57A4();
            v712 = v710;
            v321 = v1291;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v711 - 8) + 16))(v709, v712, v711);
            ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstb[7])(v1333, 0, 1, v565);
          }
          v18 = v1380;
          v21 = v1405;
          v713 = *(int *)(v323 + 24);
          v714 = (char *)v321 + v713;
          v715 = v321;
          v716 = (char *)v322 + v713;
          v717 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v717 - 8) + 16))(v714, v716, v717);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v324 + 56))(v715, 0, 1, v323);
          v20 = v1409;
        }
        goto LABEL_287;
      case 1u:
        v1381 = v18;
        v1342 = v12;
        v29 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v29;
        v1409[16] = v11[16];
        v30 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
        v31 = v30[6];
        v32 = &v1409[v31];
        v33 = (_QWORD *)((char *)v14 + v31);
        v34 = type metadata accessor for TranscriptProtoStatementID(0);
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v35 + 48);
        swift_bridgeObjectRetain();
        if (v36(v33, 1, v34))
        {
          v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v32 = *(_DWORD *)v33;
          v326 = v33[2];
          v32[1] = v33[1];
          v32[2] = v326;
          v327 = *(int *)(v34 + 24);
          v328 = (char *)v32 + v327;
          v1367 = v14;
          v329 = (char *)v33 + v327;
          v330 = sub_2408E57A4();
          v331 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v330 - 8) + 16);
          swift_bridgeObjectRetain();
          v332 = v329;
          v14 = v1367;
          v331(v328, v332, v330);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        v333 = v30[7];
        v334 = &v1409[v333];
        v335 = (_QWORD *)((char *)v14 + v333);
        v336 = v335[1];
        *v334 = *v335;
        v334[1] = v336;
        v337 = v30[8];
        v338 = &v1409[v337];
        v339 = v14;
        v340 = (char *)v14 + v337;
        v341 = sub_2408E57A4();
        v342 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v341 - 8) + 16);
        swift_bridgeObjectRetain();
        v343 = v340;
        v14 = v339;
        v342(v338, v343, v341);
        v20 = v1409;
        v18 = v1381;
        goto LABEL_80;
      case 2u:
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        v1409[8] = v11[8];
        v38 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v1409 + 3) = v38;
        v39 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
        v1382 = v18;
        v40 = &v1409[v39];
        v1343 = v12;
        v41 = &v11[v39];
        v42 = sub_2408E57A4();
        v43 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v44 = v40;
        v18 = v1382;
        v45 = v41;
        v12 = v1343;
        v46 = v42;
        v21 = v1405;
        v43(v44, v45, v46);
        v20 = v1409;
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 3u:
        *v1409 = *v11;
        v47 = (int *)type metadata accessor for TranscriptProtoRequest(0);
        v48 = v47[5];
        v49 = &v1409[v48];
        v50 = (char *)v14 + v48;
        v51 = type metadata accessor for TranscriptProtoRequestContent(0);
        v52 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v51 - 8);
        v1383 = v18;
        if (v52[6](v50, 1, v51))
        {
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          v1327 = v52;
          v344 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v344 - 8) + 48))(v50, 1, v344))
          {
            v664 = (char *)&loc_240366C14 + 4 * word_2408E83F6[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v345 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
          memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v345 - 8) + 64));
          v956 = *(int *)(v51 + 20);
          v957 = v51;
          v958 = &v49[v956];
          v959 = &v50[v956];
          v960 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v960 - 8) + 16))(v958, v959, v960);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1327[7])(v49, 0, 1, v957);
        }
        v961 = v47[6];
        v962 = &v1409[v961];
        v963 = (char *)v14 + v961;
        v964 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
        v965 = *(_QWORD *)(v964 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v965 + 48))(v963, 1, v964))
        {
          v966 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
          memcpy(v962, v963, *(_QWORD *)(*(_QWORD *)(v966 - 8) + 64));
        }
        else
        {
          v967 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v967 - 8) + 48))(v963, 1, v967))
          {
            v969 = (char *)&loc_24036AE74 + 4 * byte_2408E83FE[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v968 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
          memcpy(v962, v963, *(_QWORD *)(*(_QWORD *)(v968 - 8) + 64));
          v970 = *(int *)(v964 + 20);
          v971 = v962;
          v972 = &v962[v970];
          v973 = &v963[v970];
          v974 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v974 - 8) + 16))(v972, v973, v974);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v965 + 56))(v971, 0, 1, v964);
        }
        v975 = v47[7];
        v976 = &v1409[v975];
        v977 = (_QWORD *)((char *)v14 + v975);
        v978 = v977[1];
        *v976 = *v977;
        v976[1] = v978;
        v979 = v47[8];
        v980 = &v1409[v979];
        v981 = (_QWORD *)((char *)v14 + v979);
        v982 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v983 = *(_QWORD *)(v982 - 8);
        v984 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v983 + 48);
        swift_bridgeObjectRetain();
        if (v984(v981, 1, v982))
        {
          v985 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v980, v981, *(_QWORD *)(*(_QWORD *)(v985 - 8) + 64));
        }
        else
        {
          v986 = v981[1];
          *v980 = *v981;
          v980[1] = v986;
          v980[2] = v981[2];
          v987 = *(int *)(v982 + 24);
          v1340 = (char *)v980 + v987;
          v1355 = v12;
          v988 = (char *)v981 + v987;
          v989 = sub_2408E57A4();
          v990 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v989 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v991 = v988;
          v12 = v1355;
          v990(v1340, v991, v989);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v983 + 56))(v980, 0, 1, v982);
        }
        v21 = v1405;
        v992 = v47[9];
        v20 = v1409;
        v993 = &v1409[v992];
        v994 = (char *)v14 + v992;
        v995 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v995 - 8) + 16))(v993, v994, v995);
        v18 = v1383;
        goto LABEL_288;
      case 4u:
        v54 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v54;
        v55 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v1409 + 3) = v55;
        v56 = *((_QWORD *)v11 + 5);
        *((_QWORD *)v1409 + 4) = *((_QWORD *)v11 + 4);
        *((_QWORD *)v1409 + 5) = v56;
        *((_QWORD *)v1409 + 6) = *((_QWORD *)v11 + 6);
        v1409[56] = v11[56];
        v57 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
        v58 = &v1409[v57];
        v59 = &v11[v57];
        v60 = sub_2408E57A4();
        v61 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v62 = v58;
        v21 = v1405;
        v63 = v59;
        v64 = v60;
        v17 = a2;
        v16 = (int *)v1412;
        v61(v62, v63, v64);
        v20 = v1409;
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 5u:
        v1384 = v18;
        v1342 = v12;
        v65 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v65;
        v1409[16] = v11[16];
        *((_QWORD *)v1409 + 3) = *((_QWORD *)v11 + 3);
        v66 = (int *)type metadata accessor for TranscriptProtoAction(0);
        v67 = v66[7];
        v68 = &v1409[v67];
        v69 = (_QWORD *)((char *)v14 + v67);
        v70 = type metadata accessor for TranscriptProtoStatementID(0);
        v71 = *(_QWORD *)(v70 - 8);
        v72 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v71 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v72(v69, 1, v70))
        {
          v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v68 = *(_DWORD *)v69;
          v346 = v69[2];
          v68[1] = v69[1];
          v68[2] = v346;
          v347 = *(int *)(v70 + 24);
          v348 = (char *)v68 + v347;
          v1368 = v14;
          v349 = (char *)v69 + v347;
          v350 = sub_2408E57A4();
          v351 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v350 - 8) + 16);
          swift_bridgeObjectRetain();
          v352 = v349;
          v14 = v1368;
          v351(v348, v352, v350);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
        }
        v353 = v66[8];
        v354 = &v1409[v353];
        v355 = (_QWORD *)((char *)v14 + v353);
        v356 = v355[1];
        *v354 = *v355;
        v354[1] = v356;
        v357 = v66[9];
        v358 = &v1409[v357];
        v359 = (_QWORD *)((char *)v14 + v357);
        v360 = v359[1];
        *v358 = *v359;
        v358[1] = v360;
        v361 = v66[10];
        v362 = &v1409[v361];
        v363 = (_QWORD *)((char *)v14 + v361);
        v364 = v14;
        v365 = v363[1];
        *v362 = *v363;
        v362[1] = v365;
        v366 = v66[11];
        v367 = &v1409[v366];
        v368 = (char *)v364 + v366;
        v369 = sub_2408E57A4();
        v370 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v369 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v14 = v364;
        swift_bridgeObjectRetain();
        v370(v367, v368, v369);
        v20 = v1409;
        v18 = v1384;
LABEL_80:
        swift_storeEnumTagMultiPayload();
        v17 = a2;
        v16 = (int *)v1412;
        v12 = v1342;
        goto LABEL_251;
      case 6u:
        v1385 = v18;
        v1344 = v12;
        v74 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v74;
        v75 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v1409 + 3) = v75;
        v76 = *((_QWORD *)v11 + 5);
        *((_QWORD *)v1409 + 4) = *((_QWORD *)v11 + 4);
        *((_QWORD *)v1409 + 5) = v76;
        v77 = *((_QWORD *)v11 + 7);
        *((_QWORD *)v1409 + 6) = *((_QWORD *)v11 + 6);
        *((_QWORD *)v1409 + 7) = v77;
        v78 = type metadata accessor for TranscriptProtoClientAction(0);
        v79 = *(int *)(v78 + 36);
        __dst = &v1409[v79];
        v1321 = (int *)v78;
        v80 = &v11[v79];
        v81 = type metadata accessor for TranscriptProtoStatementID(0);
        v82 = *(_QWORD *)(v81 - 8);
        v83 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v83(v80, 1, v81))
        {
          v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(__dst, v80, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        }
        else
        {
          *(_DWORD *)__dst = *(_DWORD *)v80;
          v371 = v80[2];
          __dst[1] = v80[1];
          __dst[2] = v371;
          v372 = *(int *)(v81 + 24);
          v373 = (char *)__dst + v372;
          v374 = (char *)v80 + v372;
          v375 = sub_2408E57A4();
          v376 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v375 - 8) + 16);
          swift_bridgeObjectRetain();
          v376(v373, v374, v375);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(__dst, 0, 1, v81);
        }
        v17 = a2;
        v16 = (int *)v1412;
        v21 = v1405;
        v377 = v1321[10];
        v20 = v1409;
        v378 = &v1409[v377];
        v14 = v11;
        v379 = &v11[v377];
        v380 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v380 - 8) + 16))(v378, v379, v380);
        v18 = v1385;
        swift_storeEnumTagMultiPayload();
        v12 = v1344;
        goto LABEL_289;
      case 7u:
        v1386 = v18;
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        Step = type metadata accessor for TranscriptProtoQueryStep(0);
        v86 = *(int *)(Step + 20);
        v87 = &v1409[v86];
        v88 = (_QWORD *)((char *)v14 + v86);
        v89 = type metadata accessor for TranscriptProtoStatementID(0);
        v90 = *(_QWORD *)(v89 - 8);
        v91 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v90 + 48);
        swift_bridgeObjectRetain();
        if (v91(v88, 1, v89))
          goto LABEL_20;
        goto LABEL_83;
      case 8u:
        v1386 = v18;
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        Step = type metadata accessor for TranscriptProtoVariableStep(0);
        v93 = *(int *)(Step + 20);
        v87 = &v1409[v93];
        v88 = (_QWORD *)((char *)v14 + v93);
        v89 = type metadata accessor for TranscriptProtoStatementID(0);
        v90 = *(_QWORD *)(v89 - 8);
        v94 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v90 + 48);
        swift_bridgeObjectRetain();
        if (v94(v88, 1, v89))
        {
LABEL_20:
          v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        else
        {
LABEL_83:
          *(_DWORD *)v87 = *(_DWORD *)v88;
          v381 = v88[2];
          v87[1] = v88[1];
          v87[2] = v381;
          v382 = *(int *)(v89 + 24);
          v383 = (char *)v87 + v382;
          v1369 = v14;
          v384 = (char *)v88 + v382;
          v385 = v12;
          v386 = sub_2408E57A4();
          v387 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v386 - 8) + 16);
          swift_bridgeObjectRetain();
          v388 = v384;
          v14 = v1369;
          v389 = v386;
          v12 = v385;
          v387(v383, v388, v389);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
        }
        v390 = *(int *)(Step + 24);
        v20 = v1409;
        v391 = &v1409[v390];
        v392 = (char *)v14 + v390;
        v393 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v393 - 8) + 16))(v391, v392, v393);
        v18 = v1386;
        goto LABEL_249;
      case 9u:
        v95 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v95;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 0xAu:
        v96 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
        if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 48))(v11, 1, v96))
        {
          v394 = (char *)&loc_240365874 + 4 * word_2408E83EE[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
        memcpy(v1409, v11, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        v16 = (int *)v1412;
        v952 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
        v953 = &v1409[v952];
        v954 = &v11[v952];
        v955 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v955 - 8) + 16))(v953, v954, v955);
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 0xBu:
        v98 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
        v99 = *(_QWORD *)(v98 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v99 + 48))(v11, 1, v98))
        {
          v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
          v20 = v1409;
          memcpy(v1409, v11, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          v20 = v1409;
          v395 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
          v396 = *(_QWORD *)(v395 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v396 + 48))(v11, 1, v395))
          {
            v397 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
            memcpy(v1409, v11, *(_QWORD *)(*(_QWORD *)(v397 - 8) + 64));
          }
          else
          {
            v665 = *((_QWORD *)v11 + 1);
            *(_QWORD *)v1409 = *(_QWORD *)v11;
            *((_QWORD *)v1409 + 1) = v665;
            v666 = *((_QWORD *)v11 + 3);
            *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
            *((_QWORD *)v1409 + 3) = v666;
            v667 = *((_QWORD *)v11 + 5);
            *((_QWORD *)v1409 + 4) = *((_QWORD *)v11 + 4);
            *((_QWORD *)v1409 + 5) = v667;
            v668 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
            v1290 = &v11[v668];
            __dstm = &v1409[v668];
            v1353 = v12;
            v669 = sub_2408E57A4();
            v670 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v669 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v671 = v669;
            v12 = v1353;
            v670(__dstm, v1290, v671);
            v20 = v1409;
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v396 + 56))(v1409, 0, 1, v395);
          }
          v17 = a2;
          v672 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
          v673 = &v20[v672];
          v674 = (char *)v14 + v672;
          v675 = sub_2408E57A4();
          (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v675 - 8) + 16))(v673, v674, v675);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v20, 0, 1, v98);
        }
        v16 = (int *)v1412;
        v676 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
        v677 = &v20[v676];
        v678 = (char *)v14 + v676;
        v679 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v679 - 8) + 16))(v677, v678, v679);
        swift_storeEnumTagMultiPayload();
        goto LABEL_251;
      case 0xCu:
        v101 = *(_QWORD *)v11;
        v102 = *((_QWORD *)v11 + 1);
        sub_240360070(*(_QWORD *)v11, v102);
        *(_QWORD *)v1409 = v101;
        *((_QWORD *)v1409 + 1) = v102;
        v103 = *((_QWORD *)v11 + 2);
        v104 = *((_QWORD *)v11 + 3);
        sub_240360070(v103, v104);
        *((_QWORD *)v1409 + 2) = v103;
        *((_QWORD *)v1409 + 3) = v104;
        v105 = *((_QWORD *)v11 + 5);
        *((_QWORD *)v1409 + 4) = *((_QWORD *)v11 + 4);
        *((_QWORD *)v1409 + 5) = v105;
        v106 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
        v107 = &v1409[v106];
        v108 = v11;
        v109 = &v11[v106];
        v110 = v18;
        v111 = v12;
        v112 = sub_2408E57A4();
        v113 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
        swift_bridgeObjectRetain();
        v114 = v109;
        v14 = v108;
        v21 = v1405;
        v115 = v112;
        v12 = v111;
        v18 = v110;
        v113(v107, v114, v115);
        v20 = v1409;
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 0xDu:
        v116 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v116;
        v117 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v1409 + 3) = v117;
        v1322 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
        v118 = v1322[6];
        v119 = &v1409[v118];
        v1359 = v14;
        v120 = (char *)v14 + v118;
        v121 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
        v122 = *(_QWORD *)(v121 - 8);
        v123 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v122 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v123(v120, 1, v121))
        {
          v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
          memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          v20 = v1409;
        }
        else
        {
          v398 = v18;
          v399 = v12;
          v400 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          v401 = *(_QWORD *)(v400 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v401 + 48))(v120, 1, v400))
          {
            v402 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
            memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v402 - 8) + 64));
            v20 = v1409;
          }
          else
          {
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            switch(EnumCaseMultiPayload)
            {
              case 6:
                v736 = sub_2408E57A4();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v736 - 8) + 16))(v119, v120, v736);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *v119 = *v120;
                v737 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                              + 20);
                v738 = v400;
                v739 = &v119[v737];
                v740 = &v120[v737];
                v741 = sub_2408E57A4();
                v742 = v739;
                v400 = v738;
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v741 - 8) + 16))(v742, v740, v741);
                swift_storeEnumTagMultiPayload();
                break;
              case 1:
                __dste = (void *)v400;
                v681 = *(_QWORD *)v120;
                if ((~*(_QWORD *)v120 & 0xF000000000000007) != 0)
                  swift_retain();
                *(_QWORD *)v119 = v681;
                v682 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                v683 = &v119[v682];
                v684 = &v120[v682];
                v685 = sub_2408E57A4();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v685 - 8) + 16))(v683, v684, v685);
                v400 = (uint64_t)__dste;
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v119, v120, *(_QWORD *)(v401 + 64));
                break;
            }
            v20 = v1409;
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v401 + 56))(v119, 0, 1, v400);
          }
          v743 = *(int *)(v121 + 20);
          v744 = &v119[v743];
          v745 = &v120[v743];
          v746 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v746 - 8) + 16))(v744, v745, v746);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
          v12 = v399;
          v18 = v398;
        }
        v747 = v1322[7];
        v748 = &v20[v747];
        v749 = v1359;
        v750 = (_QWORD *)((char *)v1359 + v747);
        v751 = type metadata accessor for TranscriptProtoStatementID(0);
        v752 = *(_QWORD *)(v751 - 8);
        __dstg = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v752 + 48);
        if (__dstg(v750, 1, v751))
        {
          v753 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v748, v750, *(_QWORD *)(*(_QWORD *)(v753 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v748 = *(_DWORD *)v750;
          v754 = v750[2];
          v748[1] = v750[1];
          v748[2] = v754;
          v755 = *(int *)(v751 + 24);
          v756 = (char *)v748 + v755;
          v1293 = v751;
          v757 = v752;
          v758 = (char *)v750 + v755;
          v759 = v18;
          v760 = v12;
          v761 = sub_2408E57A4();
          v762 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v761 - 8) + 16);
          swift_bridgeObjectRetain();
          v763 = v758;
          v752 = v757;
          v751 = v1293;
          v749 = v1359;
          v764 = v761;
          v12 = v760;
          v18 = v759;
          v762(v756, v763, v764);
          v20 = v1409;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v752 + 56))(v748, 0, 1, v1293);
        }
        v765 = v1322[8];
        v766 = &v20[v765];
        v767 = (_QWORD *)((char *)v749 + v765);
        v768 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
        v769 = *(_QWORD *)(v768 - 8);
        v21 = v1405;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v769 + 48))(v767, 1, v768))
        {
          v770 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
          memcpy(v766, v767, *(_QWORD *)(*(_QWORD *)(v770 - 8) + 64));
          v16 = (int *)v1412;
          goto LABEL_256;
        }
        v1285 = (void (**)(void *, _QWORD, uint64_t, uint64_t))v752;
        v1294 = v769;
        v771 = v766;
        v772 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
        v773 = *(_QWORD *)(v772 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v773 + 48))(v767, 1, v772))
        {
          v774 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
          memcpy(v771, v767, *(_QWORD *)(*(_QWORD *)(v774 - 8) + 64));
          v16 = (int *)v1412;
          goto LABEL_255;
        }
        v775 = swift_getEnumCaseMultiPayload();
        __srca = (void *)v768;
        if (v775 == 1)
        {
          v782 = v771;
          *v771 = *v767;
          v783 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
          v784 = (char *)v771 + v783;
          __dstn = (char *)v767 + v783;
          v785 = v772;
          v786 = v18;
          v787 = v12;
          v788 = sub_2408E57A4();
          v789 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v788 - 8) + 16);
          swift_bridgeObjectRetain();
          v790 = v784;
          v791 = v788;
          v12 = v787;
          v18 = v786;
          v772 = v785;
          v21 = v1405;
          v789(v790, __dstn, v791);
          v20 = v1409;
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          if (!v775)
          {
            v1403 = v18;
            v1354 = v12;
            v776 = v767[1];
            *v771 = *v767;
            v771[1] = v776;
            v777 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            v778 = *(int *)(v777 + 20);
            v779 = (_QWORD *)((char *)v771 + v778);
            v780 = (_QWORD *)((char *)v767 + v778);
            swift_bridgeObjectRetain();
            if (__dstg(v780, 1, v751))
            {
              v781 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v779, v780, *(_QWORD *)(*(_QWORD *)(v781 - 8) + 64));
            }
            else
            {
              *(_DWORD *)v779 = *(_DWORD *)v780;
              v934 = v780[2];
              v779[1] = v780[1];
              v779[2] = v934;
              v935 = *(int *)(v751 + 24);
              v1275 = (char *)v779 + v935;
              v936 = (char *)v780 + v935;
              v937 = sub_2408E57A4();
              __dstp = v779;
              v938 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v937 - 8) + 16);
              swift_bridgeObjectRetain();
              v938(v1275, v936, v937);
              v1285[7](__dstp, 0, 1, v751);
            }
            v939 = *(int *)(v777 + 24);
            v782 = v771;
            v940 = (char *)v771 + v939;
            v941 = (char *)v767 + v939;
            v942 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v942 - 8) + 16))(v940, v941, v942);
            swift_storeEnumTagMultiPayload();
            v16 = (int *)v1412;
            v12 = v1354;
            v18 = v1403;
            v21 = v1405;
            v20 = v1409;
LABEL_254:
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v773 + 56))(v782, 0, 1, v772);
            v771 = v782;
            v768 = (uint64_t)__srca;
LABEL_255:
            v943 = *(int *)(v768 + 20);
            v944 = v768;
            v945 = (char *)v771 + v943;
            v946 = (char *)v767 + v943;
            v947 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v947 - 8) + 16))(v945, v946, v947);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1294 + 56))(v771, 0, 1, v944);
LABEL_256:
            v948 = v1322[9];
            v949 = &v20[v948];
            v14 = v1359;
            v950 = (char *)v1359 + v948;
            v951 = sub_2408E57A4();
            (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v951 - 8) + 16))(v949, v950, v951);
            swift_storeEnumTagMultiPayload();
            v17 = a2;
LABEL_289:
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v1407 + 56))(v20, 0, 1, v18);
            goto LABEL_290;
          }
          v782 = v771;
          memcpy(v771, v767, *(_QWORD *)(v773 + 64));
        }
        v16 = (int *)v1412;
        goto LABEL_254;
      case 0xEu:
      case 0x10u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x29u:
        v152 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v1409, v11, v152);
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 0xFu:
        v1387 = v18;
        v125 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v125;
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
        v127 = *(int *)(StepResults + 24);
        v128 = &v1409[v127];
        v129 = (_QWORD *)((char *)v14 + v127);
        v130 = type metadata accessor for TranscriptProtoStatementID(0);
        v131 = *(_QWORD *)(v130 - 8);
        v132 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v131 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v132(v129, 1, v130))
        {
          v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v128 = *(_DWORD *)v129;
          v403 = v129[2];
          v128[1] = v129[1];
          v128[2] = v403;
          v404 = *(int *)(v130 + 24);
          v405 = (char *)v128 + v404;
          v1370 = v14;
          v406 = (char *)v129 + v404;
          v407 = v12;
          v408 = sub_2408E57A4();
          v409 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v408 - 8) + 16);
          swift_bridgeObjectRetain();
          v410 = v406;
          v14 = v1370;
          v411 = v408;
          v12 = v407;
          v409(v405, v410, v411);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
        }
        v412 = *(int *)(StepResults + 28);
        v20 = v1409;
        v413 = &v1409[v412];
        v414 = (char *)v14 + v412;
        v415 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v415 - 8) + 16))(v413, v414, v415);
        v18 = v1387;
        goto LABEL_249;
      case 0x11u:
        v1388 = v18;
        v134 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v134;
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        v1409[24] = v11[24];
        *(_WORD *)(v1409 + 25) = *(_WORD *)(v11 + 25);
        v135 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
        v136 = v135[9];
        v137 = &v1409[v136];
        v138 = (_QWORD *)((char *)v14 + v136);
        v139 = type metadata accessor for TranscriptProtoParameterSet(0);
        v140 = *(_QWORD *)(v139 - 8);
        v141 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v140 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v141(v138, 1, v139))
        {
          v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
          memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
        }
        else
        {
          *v137 = *v138;
          v416 = *(int *)(v139 + 20);
          v417 = (char *)v137 + v416;
          v1371 = v14;
          v418 = (char *)v138 + v416;
          v419 = v12;
          v420 = sub_2408E57A4();
          v421 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v420 - 8) + 16);
          swift_bridgeObjectRetain();
          v422 = v418;
          v14 = v1371;
          v423 = v420;
          v12 = v419;
          v421(v417, v422, v423);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
        }
        v424 = v135[10];
        v425 = &v1409[v424];
        v426 = (_QWORD *)((char *)v14 + v424);
        v427 = type metadata accessor for TranscriptProtoStatementID(0);
        v428 = *(_QWORD *)(v427 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v428 + 48))(v426, 1, v427))
        {
          v429 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v425, v426, *(_QWORD *)(*(_QWORD *)(v429 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v425 = *(_DWORD *)v426;
          v568 = v426[2];
          v425[1] = v426[1];
          v425[2] = v568;
          v569 = *(int *)(v427 + 24);
          v570 = (char *)v425 + v569;
          v1374 = v14;
          v571 = (char *)v426 + v569;
          v572 = v12;
          v573 = sub_2408E57A4();
          v574 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v573 - 8) + 16);
          swift_bridgeObjectRetain();
          v575 = v571;
          v14 = v1374;
          v576 = v573;
          v12 = v572;
          v574(v570, v575, v576);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v428 + 56))(v425, 0, 1, v427);
        }
        v21 = v1405;
        v577 = v135[11];
        v20 = v1409;
        v578 = &v1409[v577];
        v579 = (char *)v14 + v577;
        v580 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v580 - 8) + 16))(v578, v579, v580);
        v18 = v1388;
        goto LABEL_288;
      case 0x12u:
        v143 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v143;
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        v144 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
        v1389 = v18;
        v145 = &v1409[v144];
        v1345 = v12;
        v146 = &v11[v144];
        v147 = sub_2408E57A4();
        v148 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v147 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v149 = v145;
        v18 = v1389;
        v150 = v146;
        v12 = v1345;
        v151 = v147;
        v21 = v1405;
        v148(v149, v150, v151);
        v20 = v1409;
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 0x16u:
        v153 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v153;
        v154 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
        v155 = &v1409[v154];
        v156 = v11;
        v157 = &v11[v154];
        v158 = v18;
        v159 = v12;
        v160 = sub_2408E57A4();
        v161 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v160 - 8) + 16);
        swift_bridgeObjectRetain();
        v162 = v157;
        v14 = v156;
        v21 = v1405;
        v163 = v160;
        v12 = v159;
        v18 = v158;
        v161(v155, v162, v163);
        v20 = v1409;
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 0x17u:
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        v164 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
        v165 = &v1409[v164];
        v166 = v11;
        v167 = &v11[v164];
        v168 = v18;
        v169 = v12;
        v170 = sub_2408E57A4();
        v171 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v170 - 8) + 16);
        swift_bridgeObjectRetain();
        v172 = v167;
        v14 = v166;
        v21 = v1405;
        v173 = v170;
        v12 = v169;
        v18 = v168;
        v171(v165, v172, v173);
        v20 = v1409;
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 0x18u:
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        v174 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
        v175 = &v1409[v174];
        v176 = v11;
        v177 = &v11[v174];
        v178 = v18;
        v179 = v12;
        v180 = sub_2408E57A4();
        v181 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v180 - 8) + 16);
        swift_bridgeObjectRetain();
        v182 = v177;
        v14 = v176;
        v21 = v1405;
        v183 = v180;
        v12 = v179;
        v18 = v178;
        v181(v175, v182, v183);
        v20 = v1409;
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 0x19u:
        v184 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v184;
        v185 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
        v1390 = v18;
        v186 = &v1409[v185];
        v1346 = v12;
        v187 = &v11[v185];
        v188 = sub_2408E57A4();
        v189 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v188 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v190 = v186;
        v18 = v1390;
        v191 = v187;
        v12 = v1346;
        v192 = v188;
        v21 = v1405;
        v189(v190, v191, v192);
        v20 = v1409;
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 0x1Au:
        v1391 = v18;
        v193 = type metadata accessor for TranscriptProtoStatementID(0);
        v194 = *(_QWORD *)(v193 - 8);
        v195 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v194 + 48);
        if (v195(v11, 1, v193))
        {
          v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          v197 = v1409;
          memcpy(v1409, v11, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
        }
        else
        {
          v197 = v1409;
          *(_DWORD *)v1409 = *(_DWORD *)v11;
          v430 = *((_QWORD *)v11 + 2);
          *((_QWORD *)v1409 + 1) = *((_QWORD *)v11 + 1);
          *((_QWORD *)v1409 + 2) = v430;
          v431 = *(int *)(v193 + 24);
          v432 = &v1409[v431];
          v1328 = (char *)v14 + v431;
          v433 = v14;
          v434 = v12;
          v435 = sub_2408E57A4();
          v436 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v435 - 8) + 16);
          swift_bridgeObjectRetain();
          v437 = v435;
          v12 = v434;
          v14 = v433;
          v436(v432, v1328, v437);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v194 + 56))(v1409, 0, 1, v193);
        }
        v438 = type metadata accessor for TranscriptProtoActionCancellation(0);
        v439 = *(int *)(v438 + 20);
        v440 = &v197[v439];
        v441 = (_QWORD *)((char *)v14 + v439);
        if (v195((_BYTE *)v14 + v439, 1, v193))
        {
          v442 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v440, v441, *(_QWORD *)(*(_QWORD *)(v442 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v440 = *(_DWORD *)v441;
          v581 = v441[2];
          v440[1] = v441[1];
          v440[2] = v581;
          v582 = *(int *)(v193 + 24);
          v1334 = (char *)v440 + v582;
          v1375 = v14;
          v583 = (char *)v441 + v582;
          v584 = v12;
          v585 = sub_2408E57A4();
          v586 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v585 - 8) + 16);
          swift_bridgeObjectRetain();
          v587 = v583;
          v14 = v1375;
          v588 = v585;
          v12 = v584;
          v586(v1334, v587, v588);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v194 + 56))(v440, 0, 1, v193);
        }
        v16 = (int *)v1412;
        v589 = *(int *)(v438 + 24);
        v20 = v1409;
        v590 = &v1409[v589];
        v591 = (char *)v14 + v589;
        v592 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v592 - 8) + 16))(v590, v591, v592);
        v18 = v1391;
        goto LABEL_327;
      case 0x1Bu:
        v198 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v198;
        v199 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v1409 + 3) = v199;
        *((_DWORD *)v1409 + 8) = *((_DWORD *)v11 + 8);
        v1347 = v12;
        v200 = *((_QWORD *)v11 + 6);
        *((_QWORD *)v1409 + 5) = *((_QWORD *)v11 + 5);
        *((_QWORD *)v1409 + 6) = v200;
        v201 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
        v202 = &v1409[v201];
        v203 = &v11[v201];
        v204 = sub_2408E57A4();
        v205 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v204 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v12 = v1347;
        swift_bridgeObjectRetain();
        v206 = v202;
        v21 = v1405;
        v207 = v203;
        v208 = v204;
        v17 = a2;
        v16 = (int *)v1412;
        v205(v206, v207, v208);
        v20 = v1409;
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 0x1Cu:
        v209 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v209;
        v210 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v1409 + 3) = v210;
        *((_QWORD *)v1409 + 4) = *((_QWORD *)v11 + 4);
        v1323 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
        v211 = v1323[7];
        v212 = &v1409[v211];
        v1360 = v11;
        v213 = &v11[v211];
        v214 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v215 = *(_QWORD *)(v214 - 8);
        v216 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v215 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v1348 = v12;
        v1392 = v18;
        if (v216(v213, 1, v214))
        {
          v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
          memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
          v218 = v1360;
        }
        else
        {
          v443 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v443 - 8) + 48))(v213, 1, v443))
          {
            v686 = (char *)&loc_240366E94 + 4 * word_2408E83CE[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v444 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
          memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v444 - 8) + 64));
          v218 = v1360;
          v1022 = *(int *)(v214 + 20);
          v1023 = &v212[v1022];
          v1024 = &v213[v1022];
          v1025 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1025 - 8) + 16))(v1023, v1024, v1025);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
        }
        v1026 = v1323[8];
        v1027 = &v1409[v1026];
        v1028 = (_QWORD *)((char *)v218 + v1026);
        v1029 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
        v1030 = *((_QWORD *)v1029 - 1);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v1030 + 48))(v1028, 1, v1029))
        {
          v1031 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
          memcpy(v1027, v1028, *(_QWORD *)(*(_QWORD *)(v1031 - 8) + 64));
        }
        else
        {
          *v1027 = *v1028;
          *((_BYTE *)v1027 + 8) = *((_BYTE *)v1028 + 8);
          v1027[2] = v1028[2];
          v1032 = v1029[7];
          v1033 = (char *)v1027 + v1032;
          v1034 = (char *)v1028 + v1032;
          v1035 = type metadata accessor for TranscriptProtoDialogType(0);
          __dstj = *(_QWORD **)(v1035 - 8);
          v1036 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstj[6];
          v1037 = v1035;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v1036(v1034, 1, v1037))
          {
            v1038 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
            memcpy(v1033, v1034, *(_QWORD *)(*(_QWORD *)(v1038 - 8) + 64));
          }
          else
          {
            v1298 = v1037;
            v1039 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1039 - 8) + 48))(v1034, 1, v1039))
            {
              v1041 = (char *)&loc_24036BBC0 + 4 * byte_2408E83E4[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v1040 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
            memcpy(v1033, v1034, *(_QWORD *)(*(_QWORD *)(v1040 - 8) + 64));
            v1042 = v1034;
            v1043 = *(int *)(v1037 + 20);
            v1044 = &v1033[v1043];
            v1045 = v1033;
            v1046 = &v1042[v1043];
            v1047 = sub_2408E57A4();
            v1048 = v1044;
            v1037 = v1298;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1047 - 8) + 16))(v1048, v1046, v1047);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstj[7])(v1045, 0, 1, v1298);
          }
          v1049 = v1029[8];
          v1050 = (char *)v1027 + v1049;
          v1051 = (char *)v1028 + v1049;
          if (v1036((char *)v1028 + v1049, 1, v1037))
          {
            v1052 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
            memcpy(v1050, v1051, *(_QWORD *)(*(_QWORD *)(v1052 - 8) + 64));
          }
          else
          {
            v1053 = type metadata accessor for TranscriptProtoDialogFormat(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1053 - 8) + 48))(v1051, 1, v1053))
            {
              v1055 = (char *)&loc_24036BDAC + 4 * byte_2408E83E9[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v1054 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
            memcpy(v1050, v1051, *(_QWORD *)(*(_QWORD *)(v1054 - 8) + 64));
            v1056 = v1051;
            v1057 = *(int *)(v1037 + 20);
            v1058 = v1037;
            v1059 = &v1050[v1057];
            v1060 = &v1056[v1057];
            v1061 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1061 - 8) + 16))(v1059, v1060, v1061);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstj[7])(v1050, 0, 1, v1058);
          }
          v1062 = v1029[9];
          v1063 = (char *)v1027 + v1062;
          v1064 = (char *)v1028 + v1062;
          v1065 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1065 - 8) + 16))(v1063, v1064, v1065);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v1030 + 56))(v1027, 0, 1, v1029);
          v218 = v1360;
        }
        v1066 = v1323[9];
        v1067 = &v1409[v1066];
        v1068 = (_QWORD *)((char *)v218 + v1066);
        v1069 = type metadata accessor for TranscriptProtoStatementID(0);
        v1070 = *(_QWORD *)(v1069 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1070 + 48))(v1068, 1, v1069))
        {
          v1071 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1067, v1068, *(_QWORD *)(*(_QWORD *)(v1071 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1067 = *(_DWORD *)v1068;
          v1072 = v1068[2];
          v1067[1] = v1068[1];
          v1067[2] = v1072;
          v1073 = *(int *)(v1069 + 24);
          v1074 = (char *)v1067 + v1073;
          v1075 = (char *)v1068 + v1073;
          v1076 = sub_2408E57A4();
          v1077 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1076 - 8) + 16);
          swift_bridgeObjectRetain();
          v1078 = v1075;
          v218 = v1360;
          v1077(v1074, v1078, v1076);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1070 + 56))(v1067, 0, 1, v1069);
        }
        v21 = v1405;
        v1079 = v1323[10];
        v1080 = &v1409[v1079];
        v1081 = (_QWORD *)((char *)v218 + v1079);
        v1082 = v1081[1];
        *v1080 = *v1081;
        v1080[1] = v1082;
        v1083 = v1323[11];
        v1084 = &v1409[v1083];
        v1085 = (char *)v1360 + v1083;
        v1086 = sub_2408E57A4();
        v1087 = *(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v1086 - 8) + 16);
        swift_bridgeObjectRetain();
        v1088 = v1085;
        v14 = v1360;
        v1087(v1084, v1088, v1086);
        v20 = v1409;
        v18 = v1392;
        swift_storeEnumTagMultiPayload();
        v17 = a2;
        v16 = (int *)v1412;
        v12 = v1348;
        goto LABEL_289;
      case 0x1Du:
        v219 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v219;
        v220 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v1409 + 3) = v220;
        v221 = type metadata accessor for TranscriptProtoStatementResult(0);
        v222 = *(int *)(v221 + 24);
        __dsta = &v1409[v222];
        v1324 = (int *)v221;
        v223 = &v11[v222];
        v224 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
        v225 = *(_QWORD **)(v224 - 8);
        v226 = (unsigned int (*)(char *, uint64_t, uint64_t))v225[6];
        swift_bridgeObjectRetain();
        v227 = v223;
        swift_bridgeObjectRetain();
        v1361 = v14;
        if (v226(v223, 1, v224))
        {
          v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
          memcpy(__dsta, v223, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
          v20 = v1409;
        }
        else
        {
          v1283 = (void (**)(char *, _QWORD, uint64_t, uint64_t))v225;
          v1289 = v224;
          v445 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v446 = *(_QWORD *)(v445 - 8);
          v447 = __dsta;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v446 + 48))(v227, 1, v445))
          {
            v448 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(__dsta, v227, *(_QWORD *)(*(_QWORD *)(v448 - 8) + 64));
            v20 = v1409;
          }
          else
          {
            v687 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            v20 = v1409;
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v687 - 8) + 48))(v227, 1, v687))
            {
              v734 = (char *)&loc_2403674DC + 4 * word_2408E83B8[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v688 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(__dsta, v227, *(_QWORD *)(*(_QWORD *)(v688 - 8) + 64));
            v1164 = *(int *)(v445 + 20);
            v1165 = &__dsta[v1164];
            v1166 = &v227[v1164];
            v1167 = sub_2408E57A4();
            v1168 = v1165;
            v447 = __dsta;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1167 - 8) + 16))(v1168, v1166, v1167);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v446 + 56))(__dsta, 0, 1, v445);
          }
          v1169 = *(int *)(v1289 + 20);
          v1170 = &v447[v1169];
          v1171 = &v227[v1169];
          v1172 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
          v1173 = *((_QWORD *)v1172 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v1173 + 48))(v1171, 1, v1172))
          {
            v1174 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
            memcpy(v1170, v1171, *(_QWORD *)(*(_QWORD *)(v1174 - 8) + 64));
          }
          else
          {
            v1276 = v1173;
            v1404 = v18;
            *(_QWORD *)v1170 = *(_QWORD *)v1171;
            v1175 = v1172[5];
            v1273 = &v1170[v1175];
            v1176 = &v1171[v1175];
            v1177 = type metadata accessor for TranscriptProtoResponseDialog(0);
            v1270 = *(_QWORD **)(v1177 - 8);
            v1178 = (unsigned int (*)(char *, uint64_t, uint64_t))v1270[6];
            swift_bridgeObjectRetain();
            v1357 = v12;
            __srcd = v227;
            if (v1178(v1176, 1, v1177))
            {
              v1179 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
              memcpy(v1273, v1176, *(_QWORD *)(*(_QWORD *)(v1179 - 8) + 64));
            }
            else
            {
              v1180 = *((_QWORD *)v1176 + 1);
              *(_QWORD *)v1273 = *(_QWORD *)v1176;
              *((_QWORD *)v1273 + 1) = v1180;
              v1181 = *((_QWORD *)v1176 + 3);
              *((_QWORD *)v1273 + 2) = *((_QWORD *)v1176 + 2);
              *((_QWORD *)v1273 + 3) = v1181;
              v1182 = *((_QWORD *)v1176 + 5);
              *((_QWORD *)v1273 + 4) = *((_QWORD *)v1176 + 4);
              *((_QWORD *)v1273 + 5) = v1182;
              v1183 = *((_QWORD *)v1176 + 7);
              *((_QWORD *)v1273 + 6) = *((_QWORD *)v1176 + 6);
              *((_QWORD *)v1273 + 7) = v1183;
              v1184 = *(int *)(v1177 + 32);
              v1267 = &v1176[v1184];
              v1268 = &v1273[v1184];
              v1185 = sub_2408E57A4();
              v1266 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1185 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1266(v1268, v1267, v1185);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v1270[7])(v1273, 0, 1, v1177);
            }
            v1186 = v1172[6];
            v1187 = &v1170[v1186];
            v1188 = &v1171[v1186];
            v1189 = type metadata accessor for TranscriptProtoResponseVisual(0);
            v1190 = *(_QWORD *)(v1189 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1190 + 48))(v1188, 1, v1189))
            {
              v1191 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
              memcpy(v1187, v1188, *(_QWORD *)(*(_QWORD *)(v1191 - 8) + 64));
            }
            else
            {
              v1192 = *((_QWORD *)v1188 + 1);
              *(_QWORD *)v1187 = *(_QWORD *)v1188;
              *((_QWORD *)v1187 + 1) = v1192;
              v1193 = *(int *)(v1189 + 24);
              v1274 = (void *)v1189;
              v1194 = &v1187[v1193];
              v1195 = &v1188[v1193];
              v1196 = sub_2408E57A4();
              v1271 = v1187;
              v1197 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1196 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1197(v1194, v1195, v1196);
              (*(void (**)(char *, _QWORD, uint64_t, void *))(v1190 + 56))(v1271, 0, 1, v1274);
            }
            v18 = v1404;
            v1198 = v1172[7];
            v1199 = &v1170[v1198];
            v1200 = &v1171[v1198];
            v1201 = *((_QWORD *)v1200 + 1);
            *(_QWORD *)v1199 = *(_QWORD *)v1200;
            *((_QWORD *)v1199 + 1) = v1201;
            v1202 = v1172[8];
            v1203 = &v1170[v1202];
            v1204 = &v1171[v1202];
            v1205 = *((_QWORD *)v1204 + 1);
            *(_QWORD *)v1203 = *(_QWORD *)v1204;
            *((_QWORD *)v1203 + 1) = v1205;
            v1170[v1172[9]] = v1171[v1172[9]];
            v1170[v1172[10]] = v1171[v1172[10]];
            v1206 = v1172[11];
            v1207 = &v1170[v1206];
            v1208 = &v1171[v1206];
            v1209 = sub_2408E57A4();
            v1210 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1209 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1210(v1207, v1208, v1209);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v1276 + 56))(v1170, 0, 1, v1172);
            v12 = v1357;
            v14 = v1361;
            v20 = v1409;
            v227 = __srcd;
          }
          v1211 = *(int *)(v1289 + 24);
          v1212 = &__dsta[v1211];
          v1213 = &v227[v1211];
          v1214 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1214 - 8) + 16))(v1212, v1213, v1214);
          v1283[7](__dsta, 0, 1, v1289);
        }
        v1215 = v1324;
        v1216 = v1324[7];
        v1217 = &v20[v1216];
        v1218 = (_QWORD *)((char *)v14 + v1216);
        v1219 = type metadata accessor for TranscriptProtoStatementID(0);
        v1220 = *(_QWORD **)(v1219 - 8);
        v1221 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v1220[6];
        if (v1221(v1218, 1, v1219))
        {
          v1222 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1217, v1218, *(_QWORD *)(*(_QWORD *)(v1222 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1217 = *(_DWORD *)v1218;
          v1223 = v1218[2];
          v1217[1] = v1218[1];
          v1217[2] = v1223;
          v1224 = *(int *)(v1219 + 24);
          v1299 = (char *)v1217 + v1224;
          v1225 = (char *)v1218 + v1224;
          __dstq = v1220;
          v1226 = v18;
          v1227 = v12;
          v1228 = sub_2408E57A4();
          v1229 = v20;
          v1230 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1228 - 8) + 16);
          v1215 = v1324;
          swift_bridgeObjectRetain();
          v1231 = v1225;
          v14 = v1361;
          v1232 = v1228;
          v12 = v1227;
          v18 = v1226;
          v1220 = __dstq;
          v1230(v1299, v1231, v1232);
          v20 = v1229;
          ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstq[7])(v1217, 0, 1, v1219);
        }
        v1233 = v1215[8];
        v1234 = &v20[v1233];
        v1235 = (_QWORD *)((char *)v14 + v1233);
        if (v1221((_QWORD *)((char *)v14 + v1233), 1, v1219))
        {
          v1236 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1234, v1235, *(_QWORD *)(*(_QWORD *)(v1236 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1234 = *(_DWORD *)v1235;
          v1237 = v1235[2];
          v1234[1] = v1235[1];
          v1234[2] = v1237;
          v1238 = *(int *)(v1219 + 24);
          v1300 = (char *)v1234 + v1238;
          v1239 = (char *)v1235 + v1238;
          __dstr = v1220;
          v1240 = v18;
          v1241 = v12;
          v1242 = sub_2408E57A4();
          v1243 = v20;
          v1244 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1242 - 8) + 16);
          v1215 = v1324;
          swift_bridgeObjectRetain();
          v1245 = v1239;
          v14 = v1361;
          v1246 = v1242;
          v12 = v1241;
          v18 = v1240;
          v1220 = __dstr;
          v1244(v1300, v1245, v1246);
          v20 = v1243;
          ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstr[7])(v1234, 0, 1, v1219);
        }
        v1247 = v1215[9];
        v1248 = &v20[v1247];
        v1249 = (_QWORD *)((char *)v14 + v1247);
        if (v1221((_QWORD *)((char *)v14 + v1247), 1, v1219))
        {
          v1250 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1248, v1249, *(_QWORD *)(*(_QWORD *)(v1250 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v1248 = *(_DWORD *)v1249;
          v1251 = v1249[2];
          v1248[1] = v1249[1];
          v1248[2] = v1251;
          v1252 = *(int *)(v1219 + 24);
          __dsts = (char *)v1248 + v1252;
          v1253 = (char *)v1249 + v1252;
          v1254 = v1220;
          v1255 = v18;
          v1256 = v12;
          v1257 = sub_2408E57A4();
          v1258 = v20;
          v1259 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1257 - 8) + 16);
          v1215 = v1324;
          swift_bridgeObjectRetain();
          v1260 = v1253;
          v14 = v1361;
          v1261 = v1257;
          v12 = v1256;
          v18 = v1255;
          v1259(__dsts, v1260, v1261);
          v20 = v1258;
          ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v1254[7])(v1248, 0, 1, v1219);
        }
        v16 = (int *)v1412;
        v1262 = v1215[10];
        v1263 = &v20[v1262];
        v1264 = (char *)v14 + v1262;
        v1265 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v1265 - 8) + 16))(v1263, v1264, v1265);
LABEL_327:
        swift_storeEnumTagMultiPayload();
        v17 = a2;
        goto LABEL_251;
      case 0x1Eu:
        v1393 = v18;
        v229 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v229;
        v230 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v1409 + 3) = v230;
        v231 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
        v232 = *(int *)(v231 + 24);
        v233 = v14;
        v234 = v1409;
        v235 = &v1409[v232];
        v1362 = v233;
        v236 = (_QWORD *)((char *)v233 + v232);
        v237 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v238 = *(_QWORD *)(v237 - 8);
        v239 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v238 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v239(v236, 1, v237))
          goto LABEL_49;
        goto LABEL_103;
      case 0x1Fu:
        v1393 = v18;
        v241 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v241;
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        v231 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
        v242 = *(int *)(v231 + 24);
        v243 = v14;
        v234 = v1409;
        v235 = &v1409[v242];
        v1362 = v243;
        v236 = (_QWORD *)((char *)v243 + v242);
        v237 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v238 = *(_QWORD *)(v237 - 8);
        v244 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v238 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v244(v236, 1, v237))
        {
LABEL_49:
          v240 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v235, v236, *(_QWORD *)(*(_QWORD *)(v240 - 8) + 64));
        }
        else
        {
LABEL_103:
          v449 = v236[1];
          *v235 = *v236;
          v235[1] = v449;
          v235[2] = v236[2];
          v450 = *(int *)(v237 + 24);
          v1329 = (char *)v235 + v450;
          v1351 = v12;
          v451 = (char *)v236 + v450;
          v452 = sub_2408E57A4();
          v453 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v452 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v454 = v451;
          v12 = v1351;
          v453(v1329, v454, v452);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v238 + 56))(v235, 0, 1, v237);
        }
        v455 = *(int *)(v231 + 28);
        v20 = v234;
        v456 = &v234[v455];
        v14 = v1362;
        v457 = (char *)v1362 + v455;
        v458 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v458 - 8) + 16))(v456, v457, v458);
        v18 = v1393;
        goto LABEL_249;
      case 0x20u:
        v245 = type metadata accessor for TranscriptProtoRequestContent(0);
        v246 = *(_QWORD *)(v245 - 8);
        v1363 = v11;
        v1394 = v18;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v246 + 48))(v11, 1, v245))
        {
          v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
          memcpy(v1409, v11, *(_QWORD *)(*(_QWORD *)(v247 - 8) + 64));
        }
        else
        {
          v459 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
          if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v459 - 8) + 48))(v11, 1, v459))
          {
            v689 = (char *)&loc_240366F88 + 4 * word_2408E83B0[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v460 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
          memcpy(v1409, v11, *(_QWORD *)(*(_QWORD *)(v460 - 8) + 64));
          v996 = *(int *)(v245 + 20);
          v997 = &v1409[v996];
          v998 = &v11[v996];
          v999 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v999 - 8) + 16))(v997, v998, v999);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v246 + 56))(v1409, 0, 1, v245);
        }
        v1000 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
        v1001 = v1000[5];
        v1002 = &v1409[v1001];
        v1003 = (_QWORD *)((char *)v14 + v1001);
        v1004 = v1003[1];
        *v1002 = *v1003;
        v1002[1] = v1004;
        v1005 = v1000[6];
        v1006 = &v1409[v1005];
        v1007 = (_QWORD *)((char *)v14 + v1005);
        v1008 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
        v1009 = *(_QWORD *)(v1008 - 8);
        v1010 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1009 + 48);
        swift_bridgeObjectRetain();
        if (v1010(v1007, 1, v1008))
        {
          v1011 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
          memcpy(v1006, v1007, *(_QWORD *)(*(_QWORD *)(v1011 - 8) + 64));
        }
        else
        {
          v1012 = v1007[1];
          *v1006 = *v1007;
          v1006[1] = v1012;
          v1006[2] = v1007[2];
          v1013 = *(int *)(v1008 + 24);
          v1341 = (char *)v1006 + v1013;
          v1356 = v12;
          v1014 = (char *)v1007 + v1013;
          v1015 = sub_2408E57A4();
          v1016 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1015 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v1017 = v1014;
          v12 = v1356;
          v1016(v1341, v1017, v1015);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1009 + 56))(v1006, 0, 1, v1008);
        }
        v21 = v1405;
        v1018 = v1000[7];
        v20 = v1409;
        v1019 = &v1409[v1018];
        v14 = v1363;
        v1020 = (char *)v1363 + v1018;
        v1021 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v1021 - 8) + 16))(v1019, v1020, v1021);
        v18 = v1394;
        goto LABEL_288;
      case 0x21u:
        v1395 = v18;
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        v22 = (int *)type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
        v248 = v22[5];
        v249 = &v1409[v248];
        v250 = (_QWORD *)((char *)v14 + v248);
        v251 = type metadata accessor for TranscriptProtoStatementID(0);
        v252 = *(_QWORD *)(v251 - 8);
        v253 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v252 + 48);
        swift_bridgeObjectRetain();
        v1358 = v14;
        if (v253(v250, 1, v251))
        {
          v254 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v249, v250, *(_QWORD *)(*(_QWORD *)(v254 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v249 = *(_DWORD *)v250;
          v461 = v250[2];
          v249[1] = v250[1];
          v249[2] = v461;
          v462 = *(int *)(v251 + 24);
          v463 = (char *)v249 + v462;
          v464 = (char *)v250 + v462;
          v465 = v12;
          v466 = sub_2408E57A4();
          v467 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v466 - 8) + 16);
          swift_bridgeObjectRetain();
          v468 = v464;
          v14 = v1358;
          v469 = v466;
          v12 = v465;
          v467(v463, v468, v469);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v252 + 56))(v249, 0, 1, v251);
        }
        v470 = v22[6];
        v20 = v1409;
        v471 = &v1409[v470];
        v472 = (char *)v14 + v470;
        v473 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v474 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v473 - 8);
        v18 = v1395;
        v21 = v1405;
        if (v474[6](v472, 1, v473))
        {
          v475 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
          memcpy(v471, v472, *(_QWORD *)(*(_QWORD *)(v475 - 8) + 64));
        }
        else
        {
          v593 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          __dstc = v474;
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v593 - 8) + 48))(v472, 1, v593))
          {
            v718 = (char *)&loc_240367214 + 4 * word_2408E839A[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v594 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
          memcpy(v471, v472, *(_QWORD *)(*(_QWORD *)(v594 - 8) + 64));
          v1089 = *(int *)(v473 + 20);
          v1090 = &v471[v1089];
          v1091 = v471;
          v1092 = &v472[v1089];
          v1093 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1093 - 8) + 16))(v1090, v1092, v1093);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstc[7])(v1091, 0, 1, v473);
        }
LABEL_287:
        v1094 = v22[7];
        v1095 = &v20[v1094];
        v14 = v1358;
        v1096 = (char *)v1358 + v1094;
        v1097 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v1097 - 8) + 16))(v1095, v1096, v1097);
        goto LABEL_288;
      case 0x22u:
        v255 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v255;
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        v256 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
        v1396 = v18;
        v257 = &v1409[v256];
        v1349 = v12;
        v258 = &v11[v256];
        v259 = sub_2408E57A4();
        v260 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v259 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v261 = v257;
        v18 = v1396;
        v262 = v258;
        v12 = v1349;
        v263 = v259;
        v21 = v1405;
        v260(v261, v262, v263);
        v20 = v1409;
        swift_storeEnumTagMultiPayload();
        goto LABEL_289;
      case 0x23u:
        v264 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
        v265 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v264 - 8);
        v1364 = v14;
        v1397 = v18;
        if (v265[6](v14, 1, v264))
        {
          v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
          memcpy(v1409, v14, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
        }
        else
        {
          v1272 = v265;
          v1352 = v12;
          v476 = v14[1];
          *(_QWORD *)v1409 = *v14;
          *((_QWORD *)v1409 + 1) = v476;
          v477 = v14[3];
          *((_QWORD *)v1409 + 2) = v14[2];
          *((_QWORD *)v1409 + 3) = v477;
          v1409[32] = *((_BYTE *)v14 + 32);
          v478 = v14[6];
          *((_QWORD *)v1409 + 5) = v14[5];
          *((_QWORD *)v1409 + 6) = v478;
          v479 = v14[8];
          *((_QWORD *)v1409 + 7) = v14[7];
          *((_QWORD *)v1409 + 8) = v479;
          *((_QWORD *)v1409 + 9) = v14[9];
          v1409[80] = *((_BYTE *)v14 + 80);
          v480 = v14[12];
          *((_QWORD *)v1409 + 11) = v14[11];
          *((_QWORD *)v1409 + 12) = v480;
          v481 = v14[14];
          v1330 = (int *)v264;
          *((_QWORD *)v1409 + 13) = v14[13];
          *((_QWORD *)v1409 + 14) = v481;
          v482 = *(int *)(v264 + 68);
          v1269 = &v1409[v482];
          v483 = (_QWORD *)((char *)v14 + v482);
          v484 = type metadata accessor for ToolKitProtoTypeInstance(0);
          v485 = *(_QWORD *)(v484 - 8);
          v486 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v485 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v486(v483, 1, v484))
          {
            v487 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
            memcpy(v1269, v483, *(_QWORD *)(*(_QWORD *)(v487 - 8) + 64));
          }
          else
          {
            v690 = *v483;
            if ((~*v483 & 0xF000000000000007) != 0)
              swift_retain();
            *v1269 = v690;
            v691 = *(int *)(v484 + 20);
            v692 = (char *)v1269 + v691;
            v693 = (char *)v483 + v691;
            v694 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v694 - 8) + 16))(v692, v693, v694);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v485 + 56))(v1269, 0, 1, v484);
          }
          v14 = v1364;
          v695 = v1330;
          v696 = v1330[18];
          v697 = v1409;
          v698 = &v1409[v696];
          v699 = (_QWORD *)((char *)v1364 + v696);
          v700 = v699[1];
          *v698 = *v699;
          v698[1] = v700;
          v701 = v1330[19];
          v702 = &v1409[v701];
          v703 = (_QWORD *)((char *)v1364 + v701);
          v704 = type metadata accessor for ToolKitProtoAppDefinition(0);
          v705 = *(_QWORD *)(v704 - 8);
          v706 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v705 + 48);
          swift_bridgeObjectRetain();
          if (v706(v703, 1, v704))
          {
            v707 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
            memcpy(v702, v703, *(_QWORD *)(*(_QWORD *)(v707 - 8) + 64));
          }
          else
          {
            v1292 = v705;
            v720 = v703[1];
            *v702 = *v703;
            v702[1] = v720;
            v721 = v703[3];
            v702[2] = v703[2];
            v702[3] = v721;
            v722 = v703[5];
            v702[4] = v703[4];
            v702[5] = v722;
            v723 = (int *)v704;
            v724 = v703[7];
            v702[6] = v703[6];
            v702[7] = v724;
            v725 = v703[9];
            v702[8] = v703[8];
            v702[9] = v725;
            *((_BYTE *)v702 + 80) = *((_BYTE *)v703 + 80);
            __dstf = v723;
            v726 = v723[10];
            v1284 = (_QWORD *)((char *)v702 + v726);
            v727 = (_QWORD *)((char *)v703 + v726);
            v728 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            __src = *(_QWORD **)(v728 - 8);
            v729 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))__src[6];
            swift_bridgeObjectRetain();
            v730 = v727;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v729(v727, 1, v728))
            {
              v731 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
              memcpy(v1284, v727, *(_QWORD *)(*(_QWORD *)(v731 - 8) + 64));
              v14 = v1364;
              v733 = v1292;
              v732 = __dstf;
              v695 = v1330;
            }
            else
            {
              v735 = v727[1];
              if (v735 == 1)
              {
                *(_OWORD *)v1284 = *(_OWORD *)v727;
              }
              else
              {
                *v1284 = *v727;
                v1284[1] = v735;
                swift_bridgeObjectRetain();
              }
              v14 = v1364;
              v733 = v1292;
              v732 = __dstf;
              v695 = v1330;
              v792 = *(int *)(v728 + 20);
              v793 = (char *)v1284 + v792;
              v794 = (char *)v730 + v792;
              v795 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v795 - 8) + 16))(v793, v794, v795);
              ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__src[7])(v1284, 0, 1, v728);
            }
            v796 = v732[11];
            v797 = (char *)v702 + v796;
            v798 = (char *)v703 + v796;
            v799 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v799 - 8) + 16))(v797, v798, v799);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v733 + 56))(v702, 0, 1, v732);
            v697 = v1409;
          }
          v800 = v695[20];
          v801 = &v697[v800];
          v802 = (_QWORD *)((char *)v14 + v800);
          v803 = v802[1];
          *v801 = *v802;
          v801[1] = v803;
          v804 = v695[21];
          v805 = &v697[v804];
          v806 = (_QWORD *)((char *)v14 + v804);
          v807 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
          v808 = *(_QWORD *)(v807 - 8);
          v809 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v808 + 48);
          swift_bridgeObjectRetain();
          if (v809(v806, 1, v807))
          {
            v810 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
            memcpy(v805, v806, *(_QWORD *)(*(_QWORD *)(v810 - 8) + 64));
          }
          else
          {
            v811 = v806[1];
            *v805 = *v806;
            v805[1] = v811;
            v812 = v806[3];
            v805[2] = v806[2];
            v805[3] = v812;
            v813 = *(int *)(v807 + 24);
            v814 = (char *)v805 + v813;
            v815 = (char *)v806 + v813;
            v816 = sub_2408E57A4();
            v817 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v816 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v818 = v814;
            v14 = v1364;
            v817(v818, v815, v816);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v808 + 56))(v805, 0, 1, v807);
          }
          v819 = v695[22];
          v20 = v1409;
          v820 = &v1409[v819];
          v821 = (_QWORD *)((char *)v14 + v819);
          v822 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
          v823 = *(_QWORD *)(v822 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v823 + 48))(v821, 1, v822))
          {
            v824 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
            memcpy(v820, v821, *(_QWORD *)(*(_QWORD *)(v824 - 8) + 64));
          }
          else
          {
            v825 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
            v826 = *(_QWORD *)(v825 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v826 + 48))(v821, 1, v825))
            {
              v827 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
              memcpy(v820, v821, *(_QWORD *)(*(_QWORD *)(v827 - 8) + 64));
            }
            else
            {
              v828 = swift_getEnumCaseMultiPayload();
              v829 = v821[1];
              *v820 = *v821;
              v820[1] = v829;
              if (v828 == 1)
              {
                *((_BYTE *)v820 + 16) = *((_BYTE *)v821 + 16);
                __dsto = (void *)v825;
                v830 = v821[4];
                v820[3] = v821[3];
                v820[4] = v830;
                v831 = v821[6];
                v820[5] = v821[5];
                v820[6] = v831;
                v832 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                              + 32);
                v1286 = (char *)v821 + v832;
                v1295 = (char *)v820 + v832;
                v833 = sub_2408E57A4();
                __srce = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v833 - 8) + 16);
                swift_bridgeObjectRetain();
                v825 = (uint64_t)__dsto;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v834 = v833;
                v14 = v1364;
                __srce(v1295, v1286, v834);
              }
              else
              {
                swift_bridgeObjectRetain();
              }
              swift_storeEnumTagMultiPayload();
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v826 + 56))(v820, 0, 1, v825);
            }
            v835 = *(int *)(v822 + 20);
            v836 = v820;
            v837 = (char *)v820 + v835;
            v838 = (char *)v821 + v835;
            v839 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v839 - 8) + 16))(v837, v838, v839);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v823 + 56))(v836, 0, 1, v822);
            v20 = v1409;
          }
          v840 = v695[23];
          v841 = &v20[v840];
          v842 = (_QWORD *)((char *)v14 + v840);
          v843 = type metadata accessor for ToolKitProtoContainerDefinition(0);
          v844 = *(_QWORD *)(v843 - 8);
          v845 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v844 + 48);
          v12 = v1352;
          if (v845(v842, 1, v843))
          {
            v846 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
            memcpy(v841, v842, *(_QWORD *)(*(_QWORD *)(v846 - 8) + 64));
          }
          else
          {
            v1296 = v844;
            __dsth = (int *)v843;
            v847 = v842[1];
            *v841 = *v842;
            v841[1] = v847;
            v848 = v842[3];
            v841[2] = v842[2];
            v841[3] = v848;
            *((_WORD *)v841 + 16) = *((_WORD *)v842 + 16);
            v849 = v842[6];
            v841[5] = v842[5];
            v841[6] = v849;
            v850 = v842[8];
            v841[7] = v842[7];
            v841[8] = v850;
            v851 = *(int *)(v843 + 40);
            v1287 = (_QWORD *)((char *)v841 + v851);
            v852 = (_QWORD *)((char *)v842 + v851);
            v853 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            __srcb = *(_QWORD **)(v853 - 8);
            v854 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))__srcb[6];
            swift_bridgeObjectRetain();
            v855 = v852;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v854(v852, 1, v853))
            {
              v856 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
              memcpy(v1287, v852, *(_QWORD *)(*(_QWORD *)(v856 - 8) + 64));
              v12 = v1352;
              v14 = v1364;
              v695 = v1330;
            }
            else
            {
              v857 = v852[1];
              if (v857 == 1)
              {
                *(_OWORD *)v1287 = *(_OWORD *)v852;
              }
              else
              {
                *v1287 = *v852;
                v1287[1] = v857;
                swift_bridgeObjectRetain();
              }
              v12 = v1352;
              v14 = v1364;
              v695 = v1330;
              v858 = *(int *)(v853 + 20);
              v859 = (char *)v1287 + v858;
              v860 = (char *)v855 + v858;
              v861 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v861 - 8) + 16))(v859, v860, v861);
              ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__srcb[7])(v1287, 0, 1, v853);
            }
            v843 = (uint64_t)__dsth;
            v862 = __dsth[11];
            v863 = (char *)v841 + v862;
            v864 = (char *)v842 + v862;
            v865 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v865 - 8) + 16))(v863, v864, v865);
            v844 = v1296;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v1296 + 56))(v841, 0, 1, __dsth);
            v20 = v1409;
          }
          v866 = v695[24];
          v867 = &v20[v866];
          v868 = (_QWORD *)((char *)v14 + v866);
          if (v845((_QWORD *)((char *)v14 + v866), 1, v843))
          {
            v869 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
            memcpy(v867, v868, *(_QWORD *)(*(_QWORD *)(v869 - 8) + 64));
            v870 = (void (**)(_BYTE *, _QWORD, uint64_t, int *))v1272;
          }
          else
          {
            v1297 = v844;
            __dsti = (int *)v843;
            v871 = v868[1];
            *v867 = *v868;
            v867[1] = v871;
            v872 = v868[3];
            v867[2] = v868[2];
            v867[3] = v872;
            *((_WORD *)v867 + 16) = *((_WORD *)v868 + 16);
            v873 = v868[6];
            v867[5] = v868[5];
            v867[6] = v873;
            v874 = v868[8];
            v867[7] = v868[7];
            v867[8] = v874;
            v875 = *(int *)(v843 + 40);
            v1288 = (_QWORD *)((char *)v867 + v875);
            v876 = (_QWORD *)((char *)v868 + v875);
            v877 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            __srcc = *(_QWORD **)(v877 - 8);
            v878 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))__srcc[6];
            swift_bridgeObjectRetain();
            v879 = v876;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v880 = v876;
            v881 = v877;
            v882 = v878(v880, 1, v877);
            v870 = (void (**)(_BYTE *, _QWORD, uint64_t, int *))v1272;
            if (v882)
            {
              v883 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
              memcpy(v1288, v879, *(_QWORD *)(*(_QWORD *)(v883 - 8) + 64));
              v12 = v1352;
              v14 = v1364;
            }
            else
            {
              v884 = v879[1];
              if (v884 == 1)
              {
                *(_OWORD *)v1288 = *(_OWORD *)v879;
              }
              else
              {
                *v1288 = *v879;
                v1288[1] = v884;
                swift_bridgeObjectRetain();
              }
              v12 = v1352;
              v14 = v1364;
              v885 = *(int *)(v881 + 20);
              v886 = (char *)v1288 + v885;
              v887 = (char *)v879 + v885;
              v888 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v888 - 8) + 16))(v886, v887, v888);
              ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__srcc[7])(v1288, 0, 1, v881);
            }
            v889 = __dsti[11];
            v890 = (char *)v867 + v889;
            v891 = (char *)v868 + v889;
            v892 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v892 - 8) + 16))(v890, v891, v892);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v1297 + 56))(v867, 0, 1, __dsti);
            v20 = v1409;
          }
          v893 = v695[25];
          v894 = &v20[v893];
          v895 = (char *)v14 + v893;
          v896 = sub_2408E57A4();
          (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v896 - 8) + 16))(v894, v895, v896);
          v870[7](v20, 0, 1, v695);
        }
        v528 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
        v897 = v528[5];
        v898 = &v20[v897];
        v899 = (_QWORD *)((char *)v14 + v897);
        v900 = type metadata accessor for TranscriptProtoStatementID(0);
        v901 = *(_QWORD *)(v900 - 8);
        v902 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v901 + 48);
        if (v902(v899, 1, v900))
        {
          v903 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v898, v899, *(_QWORD *)(*(_QWORD *)(v903 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v898 = *(_DWORD *)v899;
          v904 = v899[2];
          v898[1] = v899[1];
          v898[2] = v904;
          v905 = *(int *)(v900 + 24);
          v1338 = (char *)v898 + v905;
          v906 = (char *)v899 + v905;
          v907 = v12;
          v908 = sub_2408E57A4();
          v909 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v908 - 8) + 16);
          swift_bridgeObjectRetain();
          v910 = v906;
          v14 = v1364;
          v911 = v908;
          v12 = v907;
          v909(v1338, v910, v911);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v901 + 56))(v898, 0, 1, v900);
        }
        v912 = v528[6];
        v639 = &v1409[v912];
        v640 = (_QWORD *)((char *)v14 + v912);
        if (v902((_QWORD *)((char *)v14 + v912), 1, v900))
          goto LABEL_244;
        *(_DWORD *)v639 = *(_DWORD *)v640;
        v914 = v640[2];
        v639[1] = v640[1];
        v639[2] = v914;
        v915 = *(int *)(v900 + 24);
        v1339 = (char *)v639 + v915;
        v916 = (char *)v640 + v915;
        v917 = v12;
        v918 = sub_2408E57A4();
        v919 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v918 - 8) + 16);
        swift_bridgeObjectRetain();
        v920 = v916;
        v14 = v1364;
        v921 = v918;
        v12 = v917;
        v919(v1339, v920, v921);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v901 + 56))(v639, 0, 1, v900);
        goto LABEL_246;
      case 0x24u:
        v1398 = v18;
        v267 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v267;
        v1409[16] = v11[16];
        v268 = *((_QWORD *)v11 + 4);
        *((_QWORD *)v1409 + 3) = *((_QWORD *)v11 + 3);
        *((_QWORD *)v1409 + 4) = v268;
        v269 = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
        v270 = v269[7];
        v271 = &v1409[v270];
        v1365 = v14;
        v272 = (_QWORD *)((char *)v14 + v270);
        v273 = type metadata accessor for TranscriptProtoStatementID(0);
        v274 = *(_QWORD *)(v273 - 8);
        v275 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v274 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v275(v272, 1, v273))
        {
          v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v271, v272, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v271 = *(_DWORD *)v272;
          v488 = v272[2];
          v271[1] = v272[1];
          v271[2] = v488;
          v489 = *(int *)(v273 + 24);
          v1331 = (char *)v271 + v489;
          v490 = (char *)v272 + v489;
          v491 = v12;
          v492 = sub_2408E57A4();
          v493 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v492 - 8) + 16);
          swift_bridgeObjectRetain();
          v494 = v492;
          v12 = v491;
          v493(v1331, v490, v494);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v274 + 56))(v271, 0, 1, v273);
        }
        v495 = v269[8];
        v496 = &v1409[v495];
        v497 = (_QWORD *)((char *)v1365 + v495);
        if (v275((_QWORD *)((char *)v1365 + v495), 1, v273))
        {
          v498 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v496, v497, *(_QWORD *)(*(_QWORD *)(v498 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v496 = *(_DWORD *)v497;
          v595 = v497[2];
          v496[1] = v497[1];
          v496[2] = v595;
          v596 = *(int *)(v273 + 24);
          v597 = (char *)v496 + v596;
          v598 = (char *)v497 + v596;
          v599 = v12;
          v600 = sub_2408E57A4();
          v601 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v600 - 8) + 16);
          swift_bridgeObjectRetain();
          v602 = v600;
          v12 = v599;
          v601(v597, v598, v602);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v274 + 56))(v496, 0, 1, v273);
        }
        v17 = a2;
        v603 = v269[9];
        v20 = v1409;
        v604 = &v1409[v603];
        v14 = v1365;
        v605 = (char *)v1365 + v603;
        v606 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v606 - 8) + 16))(v604, v605, v606);
        v18 = v1398;
        goto LABEL_247;
      case 0x25u:
        v1399 = v18;
        v277 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v277;
        v1409[16] = v11[16];
        v278 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        v279 = v278[6];
        v280 = &v1409[v279];
        v281 = (_QWORD *)((char *)v14 + v279);
        v282 = type metadata accessor for TranscriptProtoStatementID(0);
        v283 = *(_QWORD *)(v282 - 8);
        v284 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v283 + 48);
        swift_bridgeObjectRetain();
        if (v284(v281, 1, v282))
        {
          v285 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v280, v281, *(_QWORD *)(*(_QWORD *)(v285 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v280 = *(_DWORD *)v281;
          v499 = v281[2];
          v280[1] = v281[1];
          v280[2] = v499;
          v500 = *(int *)(v282 + 24);
          v1332 = (char *)v280 + v500;
          v1372 = v14;
          v501 = (char *)v281 + v500;
          v502 = v12;
          v503 = sub_2408E57A4();
          v504 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v503 - 8) + 16);
          swift_bridgeObjectRetain();
          v505 = v501;
          v14 = v1372;
          v506 = v503;
          v12 = v502;
          v504(v1332, v505, v506);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v280, 0, 1, v282);
        }
        v507 = v278[7];
        v508 = &v1409[v507];
        v509 = (_QWORD *)((char *)v14 + v507);
        if (v284((_QWORD *)((char *)v14 + v507), 1, v282))
        {
          v510 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v508, v509, *(_QWORD *)(*(_QWORD *)(v510 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v508 = *(_DWORD *)v509;
          v607 = v509[2];
          v508[1] = v509[1];
          v508[2] = v607;
          v608 = *(int *)(v282 + 24);
          v1335 = (char *)v508 + v608;
          v1376 = v14;
          v609 = (char *)v509 + v608;
          v610 = v12;
          v611 = sub_2408E57A4();
          v612 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v611 - 8) + 16);
          swift_bridgeObjectRetain();
          v613 = v609;
          v14 = v1376;
          v614 = v611;
          v12 = v610;
          v612(v1335, v613, v614);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v508, 0, 1, v282);
        }
        v17 = a2;
        v615 = v278[8];
        v20 = v1409;
        v616 = &v1409[v615];
        v617 = (char *)v14 + v615;
        v618 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v618 - 8) + 16))(v616, v617, v618);
        v18 = v1399;
        goto LABEL_247;
      case 0x26u:
        v1400 = v18;
        v286 = type metadata accessor for ToolKitProtoTypedValue(0);
        v287 = *(_QWORD *)(v286 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v287 + 48))(v11, 1, v286))
        {
          v288 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
          v289 = v1409;
          memcpy(v1409, v11, *(_QWORD *)(*(_QWORD *)(v288 - 8) + 64));
        }
        else
        {
          v511 = *(_QWORD *)v11;
          if ((~*(_QWORD *)v11 & 0xF000000000000007) != 0)
            swift_retain();
          *(_QWORD *)v1409 = v511;
          v512 = *(int *)(v286 + 20);
          v513 = &v1409[v512];
          v514 = &v11[v512];
          v515 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v515 - 8) + 16))(v513, v514, v515);
          v289 = v1409;
          v14 = v11;
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v287 + 56))(v1409, 0, 1, v286);
        }
        v516 = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
        v517 = v516[5];
        v518 = &v289[v517];
        v519 = (_QWORD *)((char *)v14 + v517);
        v520 = type metadata accessor for ToolKitProtoTypeInstance(0);
        v521 = *(_QWORD *)(v520 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v521 + 48))(v519, 1, v520))
        {
          v522 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
          memcpy(v518, v519, *(_QWORD *)(*(_QWORD *)(v522 - 8) + 64));
        }
        else
        {
          v619 = *v519;
          if ((~*v519 & 0xF000000000000007) != 0)
            swift_retain();
          *v518 = v619;
          v620 = *(int *)(v520 + 20);
          v621 = (char *)v518 + v620;
          v622 = (char *)v519 + v620;
          v623 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v623 - 8) + 16))(v621, v622, v623);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v521 + 56))(v518, 0, 1, v520);
        }
        v624 = v516[6];
        v625 = &v1409[v624];
        v626 = (_QWORD *)((char *)v14 + v624);
        v627 = type metadata accessor for TranscriptProtoStatementID(0);
        v628 = *(_QWORD *)(v627 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v628 + 48))(v626, 1, v627))
        {
          v629 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v625, v626, *(_QWORD *)(*(_QWORD *)(v629 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v625 = *(_DWORD *)v626;
          v643 = v626[2];
          v625[1] = v626[1];
          v625[2] = v643;
          v644 = *(int *)(v627 + 24);
          v645 = (char *)v625 + v644;
          v1378 = v14;
          v646 = (char *)v626 + v644;
          v647 = v12;
          v648 = sub_2408E57A4();
          v649 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v648 - 8) + 16);
          swift_bridgeObjectRetain();
          v650 = v646;
          v14 = v1378;
          v651 = v648;
          v12 = v647;
          v649(v645, v650, v651);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v628 + 56))(v625, 0, 1, v627);
        }
        v21 = v1405;
        v652 = v516[7];
        v20 = v1409;
        v653 = &v1409[v652];
        v654 = (char *)v14 + v652;
        v655 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v655 - 8) + 16))(v653, v654, v655);
        v18 = v1400;
LABEL_288:
        swift_storeEnumTagMultiPayload();
        v17 = a2;
        v16 = (int *)v1412;
        goto LABEL_289;
      case 0x27u:
        v1397 = v18;
        v290 = type metadata accessor for ToolKitProtoTypedValue(0);
        v291 = *(_QWORD *)(v290 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v291 + 48))(v11, 1, v290))
        {
          v292 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
          v293 = v1409;
          memcpy(v1409, v11, *(_QWORD *)(*(_QWORD *)(v292 - 8) + 64));
        }
        else
        {
          v523 = *(_QWORD *)v11;
          if ((~*(_QWORD *)v11 & 0xF000000000000007) != 0)
            swift_retain();
          *(_QWORD *)v1409 = v523;
          v524 = *(int *)(v290 + 20);
          v525 = &v1409[v524];
          v526 = &v11[v524];
          v527 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v527 - 8) + 16))(v525, v526, v527);
          v293 = v1409;
          v14 = v11;
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v291 + 56))(v1409, 0, 1, v290);
        }
        v528 = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
        v529 = v528[5];
        v530 = &v293[v529];
        v531 = (_QWORD *)((char *)v14 + v529);
        v532 = type metadata accessor for TranscriptProtoStatementID(0);
        v533 = *(_QWORD *)(v532 - 8);
        v534 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v533 + 48);
        if (v534(v531, 1, v532))
        {
          v535 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v530, v531, *(_QWORD *)(*(_QWORD *)(v535 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v530 = *(_DWORD *)v531;
          v630 = v531[2];
          v530[1] = v531[1];
          v530[2] = v630;
          v631 = *(int *)(v532 + 24);
          v1336 = (char *)v530 + v631;
          v1377 = v14;
          v632 = (char *)v531 + v631;
          v633 = v12;
          v634 = sub_2408E57A4();
          v635 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v634 - 8) + 16);
          swift_bridgeObjectRetain();
          v636 = v632;
          v14 = v1377;
          v637 = v634;
          v12 = v633;
          v635(v1336, v636, v637);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v533 + 56))(v530, 0, 1, v532);
        }
        v638 = v528[6];
        v639 = &v1409[v638];
        v640 = (_QWORD *)((char *)v14 + v638);
        if (v534((_QWORD *)((char *)v14 + v638), 1, v532))
        {
LABEL_244:
          v913 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v639, v640, *(_QWORD *)(*(_QWORD *)(v913 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v639 = *(_DWORD *)v640;
          v656 = v640[2];
          v639[1] = v640[1];
          v639[2] = v656;
          v657 = *(int *)(v532 + 24);
          v1337 = (char *)v639 + v657;
          v1379 = v14;
          v658 = (char *)v640 + v657;
          v659 = v12;
          v660 = sub_2408E57A4();
          v661 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v660 - 8) + 16);
          swift_bridgeObjectRetain();
          v662 = v658;
          v14 = v1379;
          v663 = v660;
          v12 = v659;
          v661(v1337, v662, v663);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v533 + 56))(v639, 0, 1, v532);
        }
LABEL_246:
        v17 = a2;
        v922 = v528[7];
        v20 = v1409;
        v923 = &v1409[v922];
        v924 = (char *)v14 + v922;
        v925 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v925 - 8) + 16))(v923, v924, v925);
        v18 = v1397;
LABEL_247:
        swift_storeEnumTagMultiPayload();
        goto LABEL_250;
      case 0x28u:
        v1401 = v18;
        v1350 = v12;
        v294 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v294;
        v295 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v1409 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v1409 + 3) = v295;
        DecorationResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationResult(0);
        v296 = DecorationResult[8];
        v297 = &v1409[v296];
        v1366 = v11;
        v298 = &v11[v296];
        DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
        v300 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
        v301 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v300 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v301(v298, 1, DecorationToolRetrievalResponse))
        {
          v302 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
          memcpy(v297, v298, *(_QWORD *)(*(_QWORD *)(v302 - 8) + 64));
        }
        else
        {
          v536 = v298[1];
          *v297 = *v298;
          v297[1] = v536;
          v537 = v298[3];
          v297[2] = v298[2];
          v297[3] = v537;
          *((_DWORD *)v297 + 8) = *((_DWORD *)v298 + 8);
          v538 = v298[6];
          v297[5] = v298[5];
          v297[6] = v538;
          v539 = *(int *)(DecorationToolRetrievalResponse + 36);
          v540 = (char *)v297 + v539;
          __dstl = (char *)v298 + v539;
          v541 = sub_2408E57A4();
          v542 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v541 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v542(v540, __dstl, v541);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v300 + 56))(v297, 0, 1, DecorationToolRetrievalResponse);
        }
        v16 = (int *)v1412;
        v21 = v1405;
        v543 = DecorationResult[9];
        v20 = v1409;
        v544 = &v1409[v543];
        v14 = v1366;
        v545 = (char *)v1366 + v543;
        v546 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v546 - 8) + 16))(v544, v545, v546);
        v18 = v1401;
        swift_storeEnumTagMultiPayload();
        v17 = a2;
        v12 = v1350;
        goto LABEL_289;
      case 0x2Au:
        v1402 = v18;
        v303 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v1409 = *(_QWORD *)v11;
        *((_QWORD *)v1409 + 1) = v303;
        DecorationPrePlannerResult = (int *)type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
        v305 = DecorationPrePlannerResult[5];
        v306 = &v1409[v305];
        v307 = (_QWORD *)((char *)v14 + v305);
        v308 = type metadata accessor for TranscriptProtoStatementID(0);
        v309 = *(_QWORD *)(v308 - 8);
        v310 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v309 + 48);
        swift_bridgeObjectRetain();
        if (v310(v307, 1, v308))
        {
          v311 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v306, v307, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v306 = *(_DWORD *)v307;
          v547 = v307[2];
          v306[1] = v307[1];
          v306[2] = v547;
          v548 = *(int *)(v308 + 24);
          v549 = (char *)v306 + v548;
          v1373 = v14;
          v550 = (char *)v307 + v548;
          v551 = v12;
          v552 = sub_2408E57A4();
          v553 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v552 - 8) + 16);
          swift_bridgeObjectRetain();
          v554 = v550;
          v14 = v1373;
          v555 = v552;
          v12 = v551;
          v553(v549, v554, v555);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v309 + 56))(v306, 0, 1, v308);
        }
        v556 = DecorationPrePlannerResult[6];
        v20 = v1409;
        v557 = &v1409[v556];
        v558 = (char *)v14 + v556;
        DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
        v560 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(DecorationPrePlannerResultPayload - 8);
        v18 = v1402;
        if (v560[6](v558, 1, DecorationPrePlannerResultPayload))
        {
          v561 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
          memcpy(v557, v558, *(_QWORD *)(*(_QWORD *)(v561 - 8) + 64));
        }
        else
        {
          __dstd = v560;
          DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum
                                                                                     - 8)
                                                                         + 48))(v558, 1, DecorationPrePlannerPayloadEnum))
          {
            v719 = (char *)&loc_2403672C0 + 4 * word_2408E838E[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v642 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
          memcpy(v557, v558, *(_QWORD *)(*(_QWORD *)(v642 - 8) + 64));
          v926 = *(int *)(DecorationPrePlannerResultPayload + 20);
          v927 = &v557[v926];
          v928 = &v558[v926];
          v929 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v929 - 8) + 16))(v927, v928, v929);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstd[7])(v557, 0, 1, DecorationPrePlannerResultPayload);
        }
        v930 = DecorationPrePlannerResult[7];
        v931 = &v1409[v930];
        v932 = (char *)v14 + v930;
        v933 = sub_2408E57A4();
        (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v933 - 8) + 16))(v931, v932, v933);
LABEL_249:
        swift_storeEnumTagMultiPayload();
        v17 = a2;
LABEL_250:
        v16 = (int *)v1412;
LABEL_251:
        v21 = v1405;
        goto LABEL_289;
      default:
        memcpy(v1409, v11, *(_QWORD *)(v1407 + 64));
        goto LABEL_289;
    }
  }
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v20 = v1409;
  memcpy(v1409, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  v17 = a2;
  v16 = (int *)v1412;
  v21 = v1405;
LABEL_290:
  v1098 = *(int *)(v12 + 20);
  v1099 = &v20[v1098];
  v1100 = (char *)v14 + v1098;
  v1101 = sub_2408E57A4();
  (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v1101 - 8) + 16))(v1099, v1100, v1101);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v12);
LABEL_291:
  v1102 = v1410;
  v1103 = v16[12];
  v1104 = (_QWORD *)((char *)v1410 + v1103);
  v1105 = (_QWORD *)((char *)v17 + v1103);
  v1106 = v1105[1];
  *v1104 = *v1105;
  v1104[1] = v1106;
  v1107 = v16[13];
  v1108 = (_QWORD *)((char *)v1410 + v1107);
  v1109 = (_QWORD *)((char *)v17 + v1107);
  v1110 = type metadata accessor for TranscriptProtoTimepoint(0);
  v1111 = *(_QWORD *)(v1110 - 8);
  v1112 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1111 + 48);
  swift_bridgeObjectRetain();
  if (v1112(v1109, 1, v1110))
  {
    v1113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
    memcpy(v1108, v1109, *(_QWORD *)(*(_QWORD *)(v1113 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v1108 = *(_OWORD *)v1109;
    v1114 = v1109[3];
    v1108[2] = v1109[2];
    v1108[3] = v1114;
    v1115 = *(int *)(v1110 + 28);
    v1116 = (char *)v1108 + v1115;
    v1117 = (char *)v1109 + v1115;
    v1118 = sub_2408E5750();
    v1119 = *(_QWORD *)(v1118 - 8);
    v1120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1119 + 48);
    swift_bridgeObjectRetain();
    if (v1120(v1117, 1, v1118))
    {
      v1121 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
      memcpy(v1116, v1117, *(_QWORD *)(*(_QWORD *)(v1121 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1119 + 16))(v1116, v1117, v1118);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1119 + 56))(v1116, 0, 1, v1118);
    }
    v1122 = *(int *)(v1110 + 32);
    v1123 = (char *)v1108 + v1122;
    v1124 = (char *)v1109 + v1122;
    v1125 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1125 - 8) + 16))(v1123, v1124, v1125);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1111 + 56))(v1108, 0, 1, v1110);
    v1102 = v1410;
    v17 = a2;
    v16 = (int *)v1412;
  }
  v1126 = v16[14];
  v1127 = (char *)v1102 + v1126;
  v1128 = (char *)v17 + v1126;
  v1129 = sub_2408E5750();
  v1130 = *(_QWORD *)(v1129 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1130 + 48))(v1128, 1, v1129))
  {
    v1131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
    memcpy(v1127, v1128, *(_QWORD *)(*(_QWORD *)(v1131 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1130 + 16))(v1127, v1128, v1129);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1130 + 56))(v1127, 0, 1, v1129);
  }
  v1132 = v16[15];
  v1133 = (_QWORD *)((char *)v1102 + v1132);
  v1134 = (_QWORD *)((char *)v17 + v1132);
  v1135 = type metadata accessor for TranscriptProtoParticipantID(0);
  v1136 = *(_QWORD *)(v1135 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1136 + 48))(v1134, 1, v1135))
  {
    v1137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
    memcpy(v1133, v1134, *(_QWORD *)(*(_QWORD *)(v1137 - 8) + 64));
  }
  else
  {
    v1138 = v1134[1];
    *v1133 = *v1134;
    v1133[1] = v1138;
    v1139 = *(int *)(v1135 + 20);
    v1140 = (char *)v1133 + v1139;
    v1141 = (char *)v1134 + v1139;
    v1142 = sub_2408E57A4();
    v1143 = v1102;
    v1144 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1142 - 8) + 16);
    swift_bridgeObjectRetain();
    v1145 = v1142;
    v16 = (int *)v1412;
    v1144(v1140, v1141, v1145);
    v1102 = v1143;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1136 + 56))(v1133, 0, 1, v1135);
  }
  v1146 = v16[16];
  v1147 = (_QWORD *)((char *)v1102 + v1146);
  v1148 = (_QWORD *)((char *)v17 + v1146);
  v1149 = type metadata accessor for TranscriptProtoSpanID(0);
  v1150 = *(_QWORD *)(v1149 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1150 + 48))(v1148, 1, v1149))
  {
    v1151 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
    memcpy(v1147, v1148, *(_QWORD *)(*(_QWORD *)(v1151 - 8) + 64));
  }
  else
  {
    *v1147 = *v1148;
    v1152 = *(int *)(v1149 + 20);
    v1153 = (char *)v1147 + v1152;
    v1154 = (char *)v1148 + v1152;
    v1155 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1155 - 8) + 16))(v1153, v1154, v1155);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1150 + 56))(v1147, 0, 1, v1149);
  }
  v1156 = v16[17];
  v1157 = (uint64_t)v1102 + v1156;
  v1158 = (char *)v17 + v1156;
  v1159 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v1159 - 8) + 16))(v1157, v1158, v1159);
  v1160 = *(int *)(a3 + 20);
  v1161 = *(void **)((char *)v17 + v1160);
  *(_QWORD *)((char *)v1102 + v1160) = v1161;
  v1162 = v1161;
  return v1102;
}

#error "24036CE68: too big function (funcsize=0)"

uint64_t sub_240388AE4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for IETranscriptEventWrapper(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  int *v49;
  uint64_t v50;
  _DWORD *v51;
  _DWORD *v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  _DWORD *v58;
  _DWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _DWORD *v64;
  _DWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  unsigned int (**v88)(const void *, uint64_t, uint64_t);
  uint64_t v89;
  uint64_t v90;
  _DWORD *v91;
  _DWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  _BYTE *v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  _BYTE *v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  _BYTE *v127;
  uint64_t v128;
  _BYTE *v129;
  _BYTE *v130;
  uint64_t v131;
  _BYTE *v132;
  uint64_t v133;
  _BYTE *v134;
  uint64_t v135;
  _BYTE *v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  _BYTE *v143;
  uint64_t v144;
  _BYTE *v145;
  uint64_t v146;
  _BYTE *v147;
  _BYTE *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _DWORD *v168;
  _DWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _BYTE *v174;
  uint64_t v175;
  _BYTE *v176;
  uint64_t v177;
  _BYTE *v178;
  _BYTE *v179;
  uint64_t v180;
  unsigned int (**v181)(_BYTE *, uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  _DWORD *v184;
  _DWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _DWORD *v190;
  _DWORD *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  __int128 v201;
  uint64_t v202;
  _OWORD *v203;
  _OWORD *v204;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _DWORD *v209;
  _DWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  __int128 v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _OWORD *v220;
  uint64_t v221;
  unsigned int (**v222)(_OWORD *, uint64_t, uint64_t);
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  _BYTE *v228;
  _BYTE *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  _BYTE *v237;
  _BYTE *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  _BYTE *v247;
  _BYTE *v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  const void *v257;
  uint64_t v258;
  _BYTE *v259;
  _BYTE *v260;
  int *v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  _DWORD *v269;
  _DWORD *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _BYTE *v275;
  _BYTE *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  _DWORD *v280;
  _DWORD *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  _BYTE *v293;
  _BYTE *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  unsigned int (**v304)(const void *, uint64_t, uint64_t);
  uint64_t v305;
  __int128 v306;
  uint64_t v307;
  _QWORD *v308;
  _QWORD *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  _DWORD *v317;
  _DWORD *v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  _DWORD *v324;
  _DWORD *v325;
  uint64_t v326;
  uint64_t v327;
  _BYTE *v328;
  _BYTE *v329;
  uint64_t v330;
  uint64_t v331;
  _QWORD *v332;
  _QWORD *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  _BYTE *v338;
  _BYTE *v339;
  uint64_t v340;
  uint64_t v341;
  _DWORD *v342;
  _DWORD *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  __int128 v347;
  uint64_t v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  _BYTE *v352;
  _BYTE *v353;
  uint64_t v354;
  uint64_t v355;
  char *v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  uint64_t DecorationPrePlannerResultPayload;
  unsigned int (**v361)(const void *, uint64_t, uint64_t);
  uint64_t v362;
  uint64_t v363;
  _DWORD *v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  uint64_t v371;
  _BYTE *v372;
  _BYTE *v373;
  uint64_t v374;
  uint64_t v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  _BYTE *v379;
  _BYTE *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  char *v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  _BYTE *v389;
  _BYTE *v390;
  uint64_t v391;
  uint64_t v392;
  char *v393;
  char *v394;
  uint64_t v395;
  uint64_t v396;
  _BYTE *v397;
  _BYTE *v398;
  uint64_t v399;
  uint64_t v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  _DWORD *v404;
  _DWORD *v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  char *v410;
  uint64_t v411;
  uint64_t v412;
  _BYTE *v413;
  _BYTE *v414;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  char *v419;
  uint64_t v420;
  uint64_t v421;
  _BYTE *v422;
  _BYTE *v423;
  uint64_t v424;
  char *v425;
  __int128 v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  _BYTE *v430;
  _BYTE *v431;
  uint64_t v432;
  uint64_t v433;
  _BYTE *v434;
  _BYTE *v435;
  uint64_t v436;
  int EnumCaseMultiPayload;
  void (**v438)(_BYTE *, _QWORD, uint64_t, void *);
  uint64_t v439;
  _BYTE *v440;
  uint64_t v441;
  void *v442;
  char *v443;
  uint64_t v444;
  uint64_t v445;
  char *v446;
  uint64_t v447;
  char *v448;
  uint64_t v449;
  int *v450;
  uint64_t v451;
  _OWORD *v452;
  _OWORD *v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  char *v458;
  uint64_t v459;
  uint64_t v460;
  char *v461;
  char *v462;
  uint64_t v463;
  uint64_t v464;
  _BYTE *v465;
  _BYTE *v466;
  uint64_t v467;
  char *v468;
  char *v469;
  __int128 v470;
  __int128 v471;
  uint64_t v472;
  _OWORD *v473;
  uint64_t v474;
  uint64_t v475;
  char *v476;
  uint64_t v477;
  char *v478;
  uint64_t v479;
  uint64_t v480;
  char *v481;
  char *v482;
  uint64_t v483;
  uint64_t v484;
  _OWORD *v485;
  _OWORD *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  __int128 v490;
  uint64_t v491;
  char *v492;
  uint64_t v493;
  int *v494;
  uint64_t v495;
  _OWORD *v496;
  uint64_t v497;
  unsigned int (**v498)(_OWORD *, uint64_t, uint64_t);
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  int *v503;
  uint64_t v504;
  char *v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  _BYTE *v509;
  uint64_t v510;
  uint64_t v511;
  _BYTE *v512;
  _BYTE *v513;
  uint64_t v514;
  uint64_t v515;
  _DWORD *v516;
  _DWORD *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  char *v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  _BYTE *v526;
  uint64_t v527;
  unsigned int (**v528)(const void *, uint64_t, uint64_t);
  uint64_t v529;
  _OWORD *v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  _QWORD *v534;
  int *v535;
  int v536;
  uint64_t v537;
  uint64_t v538;
  _DWORD *v539;
  uint64_t v540;
  _QWORD *v541;
  uint64_t v542;
  char *v543;
  uint64_t v544;
  uint64_t v545;
  char *v546;
  char *v547;
  uint64_t v548;
  uint64_t v549;
  _OWORD *v550;
  _OWORD *v551;
  uint64_t v552;
  uint64_t v553;
  __int128 v554;
  uint64_t v555;
  _OWORD *v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  char *v562;
  char *v563;
  uint64_t v564;
  uint64_t v565;
  _OWORD *v566;
  _OWORD *v567;
  uint64_t v568;
  __int128 v569;
  uint64_t v570;
  _OWORD *v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  char *v577;
  char *v578;
  uint64_t v579;
  uint64_t v580;
  int *v581;
  _BYTE *v582;
  _BYTE *v583;
  uint64_t v584;
  uint64_t v585;
  _DWORD *v586;
  _DWORD *v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  char *v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  _BYTE *v597;
  uint64_t v598;
  uint64_t v599;
  _BYTE *v600;
  _BYTE *v601;
  uint64_t v602;
  uint64_t v603;
  char *v604;
  char *v605;
  uint64_t v606;
  uint64_t v607;
  char *v608;
  uint64_t v609;
  uint64_t v610;
  char *v611;
  char *v612;
  uint64_t v613;
  uint64_t v614;
  char *v615;
  char *v616;
  uint64_t v617;
  uint64_t v618;
  _BYTE *v619;
  _BYTE *v620;
  uint64_t v621;
  uint64_t v622;
  _BYTE *v623;
  _BYTE *v624;
  uint64_t v625;
  uint64_t v626;
  char *v627;
  char *v628;
  uint64_t v629;
  uint64_t v630;
  char *v631;
  char *v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  char *v638;
  uint64_t v639;
  char *v640;
  char *v641;
  uint64_t v642;
  uint64_t v643;
  _QWORD *v644;
  _QWORD *v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  char *v650;
  uint64_t v651;
  uint64_t v652;
  _BYTE *v653;
  _BYTE *v654;
  uint64_t v655;
  uint64_t v656;
  _BYTE *v657;
  _BYTE *v658;
  uint64_t v659;
  int *v660;
  uint64_t v661;
  _QWORD *v662;
  _QWORD *v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  char *v667;
  uint64_t v668;
  uint64_t v669;
  _BYTE *v670;
  _BYTE *v671;
  uint64_t v672;
  uint64_t v673;
  char *v674;
  char *v675;
  uint64_t v676;
  uint64_t v677;
  _QWORD *v678;
  uint64_t v679;
  unsigned int (**v680)(_QWORD *, uint64_t, uint64_t);
  uint64_t v681;
  uint64_t v682;
  char *v683;
  char *v684;
  uint64_t v685;
  uint64_t v686;
  int *v687;
  uint64_t v688;
  uint64_t v689;
  char *v690;
  char *v691;
  uint64_t v692;
  char *v693;
  char *v694;
  uint64_t v695;
  int *v696;
  uint64_t v697;
  _QWORD *v698;
  char *v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  char *v703;
  uint64_t v704;
  char *v705;
  char *v706;
  uint64_t v707;
  uint64_t v708;
  int *v709;
  char *v710;
  char *v711;
  uint64_t v712;
  uint64_t v713;
  _DWORD *v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  char *v719;
  uint64_t v720;
  uint64_t v721;
  _BYTE *v722;
  _BYTE *v723;
  uint64_t v724;
  uint64_t v725;
  char *v726;
  char *v727;
  uint64_t v728;
  uint64_t v729;
  char *v730;
  char *v731;
  uint64_t v732;
  int *v733;
  uint64_t v734;
  char *v735;
  char *v736;
  int *v737;
  unsigned int (**v738)(_QWORD *, uint64_t, int *);
  uint64_t v739;
  uint64_t v740;
  char *v741;
  char *v742;
  uint64_t v743;
  uint64_t v744;
  __int128 v745;
  __int128 v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  char *v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  char *v756;
  char *v757;
  uint64_t v758;
  uint64_t v759;
  int *v760;
  char *v761;
  char *v762;
  uint64_t v763;
  uint64_t v764;
  _DWORD *v765;
  _DWORD *v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  char *v771;
  uint64_t v772;
  uint64_t v773;
  _DWORD *v774;
  _DWORD *v775;
  uint64_t v776;
  uint64_t v777;
  char *v778;
  char *v779;
  uint64_t v780;
  uint64_t v781;
  _DWORD *v782;
  _DWORD *v783;
  uint64_t v784;
  uint64_t v785;
  char *v786;
  char *v787;
  uint64_t v788;
  uint64_t v789;
  _BYTE *v790;
  _BYTE *v791;
  uint64_t v792;
  uint64_t v793;
  _BYTE *v794;
  _BYTE *v795;
  uint64_t v796;
  uint64_t v797;
  _OWORD *v798;
  _OWORD *v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  __int128 v805;
  uint64_t v806;
  char *v807;
  char *v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  char *v813;
  char *v814;
  uint64_t v815;
  uint64_t v816;
  void *v817;
  const void *v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  _OWORD *v823;
  _OWORD *v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  char *v829;
  char *v830;
  uint64_t v831;
  uint64_t v832;
  _QWORD *v833;
  _QWORD *v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  char *v839;
  char *v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v847;
  char *v848;
  char *v849;
  _DWORD *v850;
  void (**v851)(char *, _QWORD, uint64_t, int *);
  void (**v852)(char *, _QWORD, uint64_t, uint64_t);
  int *v853;
  void *v854;
  void *v855;
  char *v856;
  _QWORD *v857;
  int *v858;
  char *v859;
  void (**v860)(void *, _QWORD, uint64_t, void *);
  _BYTE *v861;
  char *v862;
  char *v863;
  _BYTE *v864;
  _QWORD *v865;
  void *v866;
  char *v867;
  char *v868;
  char *v869;
  char *v870;
  void (**v871)(void *, _QWORD, uint64_t, uint64_t);
  int *v872;
  void *v873;
  void *v874;
  _OWORD *v875;
  _OWORD *v876;
  unsigned int (**v877)(const void *, uint64_t, uint64_t);
  _OWORD *v878;
  void *v879;
  unsigned int (*v880)(char *, uint64_t);
  char *__dst;
  void (**__dsta)(void *, _QWORD, uint64_t, uint64_t);
  void (**__dstb)(char *, _QWORD, uint64_t, int *);
  unsigned int (**__dstc)(const void *, uint64_t, uint64_t);
  void *__dstd;
  char *__dstj;
  char *__dste;
  void *__dstf;
  void *__dstg;
  char *__dstk;
  _OWORD *__dsth;
  void *__dsti;
  _BYTE *v893;
  _DWORD *v894;
  _BYTE *v895;
  char *v896;
  int *v897;
  unsigned int (*v898)(_DWORD *, uint64_t, uint64_t);
  int *v899;
  int *v900;
  char *v901;
  int *v902;
  char *__src;
  char *__srca;
  int *__srcb;
  int *__srcc;
  char *__srcj;
  char *__srck;
  char *__srcd;
  void *__srce;
  char *__srcl;
  void *__srcf;
  int *__srcg;
  char *__srcm;
  _QWORD *__srch;
  char *__srcn;
  int *__srci;
  char *__srco;
  int *v919;
  char *v920;
  char *v921;
  void *v922;
  void *v923;
  void *v924;
  unsigned int (**v925)(const void *, uint64_t, uint64_t);
  char *v926;
  void *v927;
  void *v928;
  void *v929;
  unsigned int (**v930)(const void *, uint64_t, uint64_t);
  _BYTE *v931;
  int *v932;
  char *v933;
  char *v934;
  void *v935;
  void *v936;
  void *v937;
  void *v938;
  _BYTE *v939;
  void *v940;
  void *v941;
  void *v942;
  void *v943;
  void *v944;
  void *v945;
  void *v946;
  void *v947;
  unsigned int (*v948)(_DWORD *, uint64_t, uint64_t);
  unsigned int (*v949)(_DWORD *, uint64_t, uint64_t);
  char *v950;
  _OWORD *v951;
  char *v952;
  char *v953;
  char *v954;
  char *v955;
  char *v956;
  char *v957;
  char *v958;
  char *v959;
  unsigned int (*v960)(_DWORD *, uint64_t, uint64_t);
  char *v961;
  char *v962;
  char *v963;
  char *v964;
  char *v965;
  char *v966;
  _BYTE *v967;
  char *v968;
  int *v969;
  char *v970;
  _OWORD *v971;
  char *v972;
  _QWORD *v973;
  unsigned int (*v974)(_OWORD *, uint64_t, uint64_t);
  char *v975;
  unsigned int (*v976)(_DWORD *, uint64_t, uint64_t);
  _BYTE *v977;
  char *v978;
  _QWORD *v979;
  _DWORD *v980;
  void (**v981)(char *, _QWORD, uint64_t, int *);
  unsigned int (*v982)(_DWORD *, uint64_t, uint64_t);
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  uint64_t v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  uint64_t v1006;
  uint64_t v1007;
  uint64_t v1008;
  uint64_t v1009;
  uint64_t v1010;
  uint64_t v1011;
  uint64_t v1012;
  uint64_t v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  uint64_t v1017;
  uint64_t v1018;
  uint64_t v1019;
  int *v1020;
  uint64_t Step;
  uint64_t v1022;
  uint64_t StepResults;
  int *v1024;
  unsigned int (*v1025)(_BYTE *, uint64_t, uint64_t);
  int *v1026;
  uint64_t v1027;
  int *v1028;
  int *v1029;
  uint64_t DecorationResult;
  uint64_t DecorationPrePlannerResult;
  uint64_t v1032;
  int *v1033;
  int *v1034;
  char *v1035;
  uint64_t v1036;
  char *v1037;
  uint64_t v1038;
  uint64_t v1039;
  int *v1040;
  int *v1041;
  int *v1042;

  v4 = a2;
  v5 = a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v8 = (int *)type metadata accessor for TranscriptProtoEvent(0);
  v9 = v8[11];
  v10 = (_BYTE *)(v5 + v9);
  v11 = (_BYTE *)(v4 + v9);
  v12 = type metadata accessor for TranscriptProtoPayload(0);
  v13 = *(void **)(v12 - 8);
  if ((*((unsigned int (**)(_BYTE *, uint64_t, uint64_t))v13 + 6))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v988 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          *v10 = *v11;
          v1017 = type metadata accessor for TranscriptProtoSessionStart(0);
          v18 = *(int *)(v1017 + 20);
          v19 = &v10[v18];
          v20 = &v11[v18];
          v21 = type metadata accessor for TranscriptProtoLocaleSettings(0);
          v22 = *(_QWORD *)(v21 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
          {
            v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
            memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          }
          else
          {
            v214 = v20[1];
            *v19 = *v20;
            v19[1] = v214;
            v19[2] = v20[2];
            v215 = *(int *)(v21 + 28);
            v950 = (char *)v19 + v215;
            v216 = (char *)v20 + v215;
            v217 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v217 - 8) + 32))(v950, v216, v217);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
          }
          v218 = v1017;
          v219 = *(int *)(v1017 + 24);
          v951 = &v10[v219];
          v220 = &v11[v219];
          v221 = type metadata accessor for TranscriptProtoDeviceDetails(0);
          v222 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v221 - 8);
          if (v222[6](v220, 1, v221))
          {
            v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
            memcpy(v951, v220, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
          }
          else
          {
            v929 = v222;
            *v951 = *v220;
            v363 = *(int *)(v221 + 20);
            v894 = (_DWORD *)((char *)v951 + v363);
            v364 = (_DWORD *)((char *)v220 + v363);
            v365 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
            v873 = *(void **)(v365 - 8);
            __srcd = (char *)v220;
            v366 = v221;
            if ((*((unsigned int (**)(_DWORD *, uint64_t, uint64_t))v873 + 6))(v364, 1, v365))
            {
              v367 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
              memcpy(v894, v364, *(_QWORD *)(*(_QWORD *)(v367 - 8) + 64));
            }
            else
            {
              *v894 = *v364;
              v457 = *(int *)(v365 + 20);
              v458 = (char *)v894 + v457;
              __dstj = (char *)v364 + v457;
              v459 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v459 - 8) + 32))(v458, __dstj, v459);
              (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))v873 + 7))(v894, 0, 1, v365);
            }
            v460 = *(int *)(v366 + 24);
            v461 = (char *)v951 + v460;
            v462 = &__srcd[v460];
            v463 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v463 - 8) + 32))(v461, v462, v463);
            (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))v929 + 7))(v951, 0, 1, v366);
            v218 = v1017;
          }
          goto LABEL_164;
        case 1u:
          v989 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          *(_OWORD *)v10 = *(_OWORD *)v11;
          v10[16] = v11[16];
          v24 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
          v25 = v24[6];
          v26 = &v10[v25];
          v27 = &v11[v25];
          v28 = type metadata accessor for TranscriptProtoStatementID(0);
          v1018 = *(_QWORD *)(v28 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1018 + 48))(v27, 1, v28))
          {
            v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            *v26 = *v27;
            *(_OWORD *)(v26 + 2) = *(_OWORD *)(v27 + 2);
            v224 = *(int *)(v28 + 24);
            v952 = (char *)v26 + v224;
            v225 = (char *)v27 + v224;
            v226 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v952, v225, v226);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1018 + 56))(v26, 0, 1, v28);
          }
          *(_OWORD *)&v10[v24[7]] = *(_OWORD *)&v11[v24[7]];
          v227 = v24[8];
          v228 = &v10[v227];
          v229 = &v11[v227];
          v230 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v230 - 8) + 32))(v228, v229, v230);
          v15 = v989;
          goto LABEL_280;
        case 2u:
          *(_QWORD *)v10 = *(_QWORD *)v11;
          v10[8] = v11[8];
          *((_OWORD *)v10 + 1) = *((_OWORD *)v11 + 1);
          v30 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
          v1007 = v16;
          v31 = &v10[v30];
          v936 = v13;
          v32 = v15;
          v33 = &v11[v30];
          v34 = sub_2408E57A4();
          v35 = v31;
          v16 = v1007;
          v36 = v33;
          v15 = v32;
          v13 = v936;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v35, v36, v34);
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 3u:
          v1040 = v8;
          v983 = a3;
          *v10 = *v11;
          v919 = (int *)type metadata accessor for TranscriptProtoRequest(0);
          v37 = v919[5];
          __dst = &v10[v37];
          v38 = &v11[v37];
          v39 = type metadata accessor for TranscriptProtoRequestContent(0);
          v871 = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v39 - 8);
          v990 = v15;
          v1006 = v16;
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v871[6])(v38, 1, v39))
          {
            v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
            memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            v231 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v231 - 8) + 48))(v38, 1, v231))
            {
              v425 = (char *)&loc_24038B370 + 4 * word_2408E8726[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
            memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
            v626 = *(int *)(v39 + 20);
            v627 = &__dst[v626];
            v628 = &v38[v626];
            v629 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v629 - 8) + 32))(v627, v628, v629);
            v871[7](__dst, 0, 1, v39);
          }
          v630 = v919[6];
          v631 = &v10[v630];
          v632 = &v11[v630];
          v633 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
          v634 = *(_QWORD *)(v633 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v634 + 48))(v632, 1, v633))
          {
            v635 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
            memcpy(v631, v632, *(_QWORD *)(*(_QWORD *)(v635 - 8) + 64));
          }
          else
          {
            v1036 = v634;
            v636 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v636 - 8) + 48))(v632, 1, v636))
            {
              v638 = (char *)&loc_24038EF20 + 4 * byte_2408E872E[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v637 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
            memcpy(v631, v632, *(_QWORD *)(*(_QWORD *)(v637 - 8) + 64));
            v639 = *(int *)(v633 + 20);
            v640 = &v631[v639];
            v641 = &v632[v639];
            v642 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v642 - 8) + 32))(v640, v641, v642);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1036 + 56))(v631, 0, 1, v633);
          }
          *(_OWORD *)&v10[v919[7]] = *(_OWORD *)&v11[v919[7]];
          v643 = v919[8];
          v644 = &v10[v643];
          v645 = &v11[v643];
          v646 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v647 = *(_QWORD *)(v646 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v647 + 48))(v645, 1, v646))
          {
            v648 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v644, v645, *(_QWORD *)(*(_QWORD *)(v648 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v644 = *(_OWORD *)v645;
            v644[2] = v645[2];
            v649 = *(int *)(v646 + 24);
            v1037 = (char *)v644 + v649;
            v650 = (char *)v645 + v649;
            v651 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v651 - 8) + 32))(v1037, v650, v651);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v647 + 56))(v644, 0, 1, v646);
          }
          v652 = v919[9];
          v653 = &v10[v652];
          v654 = &v11[v652];
          v655 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v655 - 8) + 32))(v653, v654, v655);
          v15 = v990;
          goto LABEL_280;
        case 4u:
          v41 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v41;
          *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
          *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
          v10[56] = v11[56];
          v42 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
          v1008 = v16;
          v43 = &v10[v42];
          v937 = v13;
          v44 = v15;
          v45 = &v11[v42];
          v46 = sub_2408E57A4();
          v47 = v43;
          v16 = v1008;
          v48 = v45;
          v15 = v44;
          v13 = v937;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v47, v48, v46);
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 5u:
          v991 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          *(_OWORD *)v10 = *(_OWORD *)v11;
          v10[16] = v11[16];
          *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
          v49 = (int *)type metadata accessor for TranscriptProtoAction(0);
          v50 = v49[7];
          v51 = &v10[v50];
          v52 = &v11[v50];
          v53 = type metadata accessor for TranscriptProtoStatementID(0);
          v1019 = *(_QWORD *)(v53 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1019 + 48))(v52, 1, v53))
          {
            v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
          }
          else
          {
            *v51 = *v52;
            *(_OWORD *)(v51 + 2) = *(_OWORD *)(v52 + 2);
            v233 = *(int *)(v53 + 24);
            v953 = (char *)v51 + v233;
            v234 = (char *)v52 + v233;
            v235 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 32))(v953, v234, v235);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1019 + 56))(v51, 0, 1, v53);
          }
          *(_OWORD *)&v10[v49[8]] = *(_OWORD *)&v11[v49[8]];
          *(_OWORD *)&v10[v49[9]] = *(_OWORD *)&v11[v49[9]];
          *(_OWORD *)&v10[v49[10]] = *(_OWORD *)&v11[v49[10]];
          v236 = v49[11];
          v237 = &v10[v236];
          v238 = &v11[v236];
          v239 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v239 - 8) + 32))(v237, v238, v239);
          v15 = v991;
          goto LABEL_280;
        case 6u:
          v992 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          v55 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v55;
          v56 = *((_OWORD *)v11 + 3);
          *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
          *((_OWORD *)v10 + 3) = v56;
          v1020 = (int *)type metadata accessor for TranscriptProtoClientAction(0);
          v57 = v1020[9];
          v58 = &v10[v57];
          v59 = &v11[v57];
          v60 = type metadata accessor for TranscriptProtoStatementID(0);
          v61 = *(_QWORD *)(v60 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
          {
            v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
          }
          else
          {
            *v58 = *v59;
            *(_OWORD *)(v58 + 2) = *(_OWORD *)(v59 + 2);
            v240 = *(int *)(v60 + 24);
            v954 = (char *)v58 + v240;
            v241 = (char *)v59 + v240;
            v242 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 32))(v954, v241, v242);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
          }
          goto LABEL_279;
        case 7u:
          v993 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          *(_QWORD *)v10 = *(_QWORD *)v11;
          Step = type metadata accessor for TranscriptProtoQueryStep(0);
          v63 = *(int *)(Step + 20);
          v64 = &v10[v63];
          v65 = &v11[v63];
          v66 = type metadata accessor for TranscriptProtoStatementID(0);
          v67 = *(_QWORD *)(v66 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
            goto LABEL_19;
          goto LABEL_80;
        case 8u:
          v993 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          *(_QWORD *)v10 = *(_QWORD *)v11;
          Step = type metadata accessor for TranscriptProtoVariableStep(0);
          v69 = *(int *)(Step + 20);
          v64 = &v10[v69];
          v65 = &v11[v69];
          v66 = type metadata accessor for TranscriptProtoStatementID(0);
          v67 = *(_QWORD *)(v66 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
          {
LABEL_19:
            v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
          }
          else
          {
LABEL_80:
            *v64 = *v65;
            *(_OWORD *)(v64 + 2) = *(_OWORD *)(v65 + 2);
            v243 = *(int *)(v66 + 24);
            v955 = (char *)v64 + v243;
            v244 = (char *)v65 + v243;
            v245 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v955, v244, v245);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
          }
          v246 = *(int *)(Step + 24);
          v247 = &v10[v246];
          v248 = &v11[v246];
          v249 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v249 - 8) + 32))(v247, v248, v249);
          v15 = v993;
          goto LABEL_280;
        case 0xAu:
          v994 = v15;
          v70 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
          v1006 = v16;
          if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 48))(v11, 1, v70))
          {
            v250 = (char *)&loc_24038A288 + 4 * word_2408E871E[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
          v622 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
          v623 = &v10[v622];
          v624 = &v11[v622];
          v625 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v625 - 8) + 32))(v623, v624, v625);
          v15 = v994;
          goto LABEL_229;
        case 0xBu:
          v995 = v15;
          v1006 = v16;
          v72 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
          v73 = *(_QWORD *)(v72 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v73 + 48))(v11, 1, v72))
          {
            v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
          }
          else
          {
            v1032 = v73;
            v1041 = v8;
            v251 = a3;
            v252 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
            v253 = *(_QWORD *)(v252 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v253 + 48))(v11, 1, v252))
            {
              v254 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
              memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v254 - 8) + 64));
            }
            else
            {
              v426 = *((_OWORD *)v11 + 1);
              *(_OWORD *)v10 = *(_OWORD *)v11;
              *((_OWORD *)v10 + 1) = v426;
              *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
              v427 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
              v931 = &v11[v427];
              v967 = &v10[v427];
              v428 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v428 - 8) + 32))(v967, v931, v428);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v253 + 56))(v10, 0, 1, v252);
            }
            v429 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
            v430 = &v10[v429];
            v431 = &v11[v429];
            v432 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v432 - 8) + 32))(v430, v431, v432);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v1032 + 56))(v10, 0, 1, v72);
            a3 = v251;
            v8 = v1041;
          }
          v433 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
          v434 = &v10[v433];
          v435 = &v11[v433];
          v436 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v436 - 8) + 32))(v434, v435, v436);
          v15 = v995;
LABEL_229:
          swift_storeEnumTagMultiPayload();
          goto LABEL_282;
        case 0xCu:
          v75 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v75;
          *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
          v76 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
          v1009 = v16;
          v77 = &v10[v76];
          v938 = v13;
          v78 = v15;
          v79 = &v11[v76];
          v80 = sub_2408E57A4();
          v81 = v77;
          v16 = v1009;
          v82 = v79;
          v15 = v78;
          v13 = v938;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v81, v82, v80);
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 0xDu:
          v996 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          v83 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v83;
          v84 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          v85 = *(int *)(v84 + 24);
          v939 = &v10[v85];
          v86 = &v11[v85];
          v87 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          v88 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v87 - 8);
          v1022 = v84;
          if (v88[6](v86, 1, v87))
          {
            v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
            memcpy(v939, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          }
          else
          {
            __srcb = (int *)v87;
            v925 = v88;
            v255 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
            v256 = *(_QWORD *)(v255 - 8);
            v257 = v86;
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v256 + 48))(v86, 1, v255))
            {
              v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
              v259 = v939;
              memcpy(v939, v257, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
              v260 = v257;
              v261 = __srcb;
            }
            else
            {
              __dstd = (void *)v256;
              v895 = v86;
              v874 = (void *)v255;
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              v261 = __srcb;
              if (EnumCaseMultiPayload == 6)
              {
                v507 = sub_2408E57A4();
                v259 = v939;
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v507 - 8) + 32))(v939, v895, v507);
                v442 = (void *)v255;
                swift_storeEnumTagMultiPayload();
                v438 = (void (**)(_BYTE *, _QWORD, uint64_t, void *))__dstd;
              }
              else
              {
                v438 = (void (**)(_BYTE *, _QWORD, uint64_t, void *))v256;
                if (EnumCaseMultiPayload == 5)
                {
                  v259 = v939;
                  *v939 = *v895;
                  v508 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                                + 20);
                  v864 = &v939[v508];
                  v509 = &v895[v508];
                  v510 = sub_2408E57A4();
                  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v510 - 8) + 32))(v864, v509, v510);
                  v442 = v874;
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  v259 = v939;
                  if (EnumCaseMultiPayload == 1)
                  {
                    *(_QWORD *)v939 = *(_QWORD *)v895;
                    v439 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                    v861 = &v939[v439];
                    v440 = &v895[v439];
                    v441 = sub_2408E57A4();
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v441 - 8) + 32))(v861, v440, v441);
                    v442 = v874;
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(v939, v895, *(_QWORD *)(v256 + 64));
                    v442 = v874;
                  }
                }
              }
              v438[7](v259, 0, 1, v442);
              v260 = v895;
            }
            v511 = v261[5];
            v512 = &v259[v511];
            v513 = &v260[v511];
            v514 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v514 - 8) + 32))(v512, v513, v514);
            ((void (*)(_BYTE *, _QWORD, uint64_t, int *))v925[7])(v259, 0, 1, v261);
            v84 = v1022;
          }
          v515 = *(int *)(v84 + 28);
          v516 = &v10[v515];
          v517 = &v11[v515];
          v518 = type metadata accessor for TranscriptProtoStatementID(0);
          v519 = *(_QWORD *)(v518 - 8);
          v898 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v519 + 48);
          __srcg = (int *)v518;
          __dstg = (void *)v519;
          if (v898(v517, 1, v518))
          {
            v520 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v516, v517, *(_QWORD *)(*(_QWORD *)(v520 - 8) + 64));
          }
          else
          {
            *v516 = *v517;
            *(_OWORD *)(v516 + 2) = *(_OWORD *)(v517 + 2);
            v521 = *(int *)(v518 + 24);
            v972 = (char *)v516 + v521;
            v522 = (char *)v517 + v521;
            v523 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v523 - 8) + 32))(v972, v522, v523);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v519 + 56))(v516, 0, 1, v518);
          }
          v524 = v1022;
          v525 = *(int *)(v1022 + 32);
          v973 = &v10[v525];
          v526 = &v11[v525];
          v527 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          v528 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v527 - 8);
          if (v528[6](v526, 1, v527))
          {
            v529 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
            memcpy(v973, v526, *(_QWORD *)(*(_QWORD *)(v529 - 8) + 64));
            goto LABEL_228;
          }
          v877 = v528;
          v530 = v526;
          v932 = (int *)v527;
          v531 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          v532 = *(_QWORD *)(v531 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v532 + 48))(v530, 1, v531))
          {
            v533 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
            v534 = v973;
            memcpy(v973, v530, *(_QWORD *)(*(_QWORD *)(v533 - 8) + 64));
            v535 = (int *)v527;
            goto LABEL_227;
          }
          v865 = v530;
          v536 = swift_getEnumCaseMultiPayload();
          if (v536 == 1)
          {
            v541 = v973;
            *v973 = *v865;
            v542 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            v543 = (char *)v973 + v542;
            __srcm = (char *)v865 + v542;
            v544 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v544 - 8) + 32))(v543, __srcm, v544);
          }
          else
          {
            if (v536)
            {
              v541 = v973;
              memcpy(v973, v865, *(_QWORD *)(v532 + 64));
              goto LABEL_226;
            }
            v855 = (void *)v531;
            *(_OWORD *)v973 = *v530;
            v537 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            v538 = *(int *)(v537 + 20);
            v847 = v537;
            v850 = (_DWORD *)((char *)v973 + v538);
            v539 = (_DWORD *)((char *)v530 + v538);
            if (v898((_QWORD *)((char *)v865 + v538), 1, (uint64_t)__srcg))
            {
              v540 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v850, v539, *(_QWORD *)(*(_QWORD *)(v540 - 8) + 64));
            }
            else
            {
              *v850 = *v539;
              *(_OWORD *)(v850 + 2) = *(_OWORD *)(v539 + 2);
              v607 = __srcg[6];
              v901 = (char *)v850 + v607;
              v608 = (char *)v539 + v607;
              v609 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v609 - 8) + 32))(v901, v608, v609);
              (*((void (**)(_DWORD *, _QWORD, uint64_t, int *))__dstg + 7))(v850, 0, 1, __srcg);
            }
            v610 = *(int *)(v847 + 24);
            v541 = v973;
            v611 = (char *)v973 + v610;
            v612 = (char *)v865 + v610;
            v613 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v613 - 8) + 32))(v611, v612, v613);
            v531 = (uint64_t)v855;
          }
          swift_storeEnumTagMultiPayload();
LABEL_226:
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v532 + 56))(v541, 0, 1, v531);
          v534 = v541;
          v535 = v932;
          v530 = v865;
LABEL_227:
          v614 = v535[5];
          v615 = (char *)v534 + v614;
          v616 = (char *)v530 + v614;
          v617 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v617 - 8) + 32))(v615, v616, v617);
          ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v877[7])(v534, 0, 1, v932);
          v524 = v1022;
LABEL_228:
          v618 = *(int *)(v524 + 36);
          v619 = &v10[v618];
          v620 = &v11[v618];
          v621 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v621 - 8) + 32))(v619, v620, v621);
          v15 = v996;
LABEL_280:
          swift_storeEnumTagMultiPayload();
          a3 = v983;
LABEL_281:
          v8 = v1040;
LABEL_282:
          v16 = v1006;
LABEL_283:
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
          break;
        case 0xEu:
        case 0x10u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x29u:
          v109 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v10, v11, v109);
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 0xFu:
          v997 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          *(_QWORD *)v10 = *(_QWORD *)v11;
          *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
          StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
          v90 = *(int *)(StepResults + 24);
          v91 = &v10[v90];
          v92 = &v11[v90];
          v93 = type metadata accessor for TranscriptProtoStatementID(0);
          v94 = *(_QWORD *)(v93 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
          {
            v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
          }
          else
          {
            *v91 = *v92;
            *(_OWORD *)(v91 + 2) = *(_OWORD *)(v92 + 2);
            v262 = *(int *)(v93 + 24);
            v956 = (char *)v91 + v262;
            v263 = (char *)v92 + v262;
            v264 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 32))(v956, v263, v264);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
          }
          goto LABEL_100;
        case 0x11u:
          v998 = v15;
          v1006 = v16;
          v1040 = v8;
          v984 = a3;
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
          v10[24] = v11[24];
          *(_WORD *)(v10 + 25) = *(_WORD *)(v11 + 25);
          v1024 = (int *)type metadata accessor for TranscriptProtoActionResolverRequest(0);
          v96 = v1024[9];
          v97 = &v10[v96];
          v98 = &v11[v96];
          v99 = type metadata accessor for TranscriptProtoParameterSet(0);
          v100 = *(_QWORD *)(v99 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
          {
            v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
            memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
          }
          else
          {
            *v97 = *v98;
            v265 = *(int *)(v99 + 20);
            v957 = (char *)v97 + v265;
            v266 = (char *)v98 + v265;
            v267 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v267 - 8) + 32))(v957, v266, v267);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
          }
          v268 = v1024[10];
          v269 = &v10[v268];
          v270 = &v11[v268];
          v271 = type metadata accessor for TranscriptProtoStatementID(0);
          v272 = *(_QWORD *)(v271 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v272 + 48))(v270, 1, v271))
          {
            v273 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v273 - 8) + 64));
          }
          else
          {
            *v269 = *v270;
            *(_OWORD *)(v269 + 2) = *(_OWORD *)(v270 + 2);
            v368 = *(int *)(v271 + 24);
            v964 = (char *)v269 + v368;
            v369 = (char *)v270 + v368;
            v370 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v370 - 8) + 32))(v964, v369, v370);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v272 + 56))(v269, 0, 1, v271);
          }
          a3 = v984;
          v371 = v1024[11];
          v372 = &v10[v371];
          v373 = &v11[v371];
          v374 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v374 - 8) + 32))(v372, v373, v374);
          v15 = v998;
          goto LABEL_222;
        case 0x12u:
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
          v102 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
          v1010 = v16;
          v103 = &v10[v102];
          v940 = v13;
          v104 = v15;
          v105 = &v11[v102];
          v106 = sub_2408E57A4();
          v107 = v103;
          v16 = v1010;
          v108 = v105;
          v15 = v104;
          v13 = v940;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v107, v108, v106);
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 0x16u:
          *(_OWORD *)v10 = *(_OWORD *)v11;
          v110 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
          v1011 = v16;
          v111 = &v10[v110];
          v941 = v13;
          v112 = v15;
          v113 = &v11[v110];
          v114 = sub_2408E57A4();
          v115 = v111;
          v16 = v1011;
          v116 = v113;
          v15 = v112;
          v13 = v941;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v114 - 8) + 32))(v115, v116, v114);
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 0x17u:
          *(_QWORD *)v10 = *(_QWORD *)v11;
          v117 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
          v1012 = v16;
          v118 = &v10[v117];
          v942 = v13;
          v119 = v15;
          v120 = &v11[v117];
          v121 = sub_2408E57A4();
          v122 = v118;
          v16 = v1012;
          v123 = v120;
          v15 = v119;
          v13 = v942;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v122, v123, v121);
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 0x18u:
          *(_QWORD *)v10 = *(_QWORD *)v11;
          v124 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
          v1013 = v16;
          v125 = &v10[v124];
          v943 = v13;
          v126 = v15;
          v127 = &v11[v124];
          v128 = sub_2408E57A4();
          v129 = v125;
          v16 = v1013;
          v130 = v127;
          v15 = v126;
          v13 = v943;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v129, v130, v128);
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 0x19u:
          *(_OWORD *)v10 = *(_OWORD *)v11;
          v131 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
          v1014 = v16;
          v132 = &v10[v131];
          v944 = v13;
          v133 = v15;
          v134 = &v11[v131];
          v135 = sub_2408E57A4();
          v136 = v132;
          v16 = v1014;
          v137 = v134;
          v15 = v133;
          v13 = v944;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v136, v137, v135);
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 0x1Au:
          v999 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          v138 = type metadata accessor for TranscriptProtoStatementID(0);
          v139 = *(_QWORD *)(v138 - 8);
          v1025 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v139 + 48);
          v945 = (void *)v139;
          if (v1025(v11, 1, v138))
          {
            v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v10 = *(_DWORD *)v11;
            *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
            v274 = *(int *)(v138 + 24);
            v275 = &v10[v274];
            v276 = &v11[v274];
            v277 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v277 - 8) + 32))(v275, v276, v277);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v10, 0, 1, v138);
          }
          v278 = type metadata accessor for TranscriptProtoActionCancellation(0);
          v279 = *(int *)(v278 + 20);
          v280 = &v10[v279];
          v281 = &v11[v279];
          if (v1025(&v11[v279], 1, v138))
          {
            v282 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v280, v281, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
          }
          else
          {
            *v280 = *v281;
            *(_OWORD *)(v280 + 2) = *(_OWORD *)(v281 + 2);
            v375 = *(int *)(v138 + 24);
            v1035 = (char *)v280 + v375;
            v376 = (char *)v281 + v375;
            v377 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v377 - 8) + 32))(v1035, v376, v377);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))v945 + 7))(v280, 0, 1, v138);
          }
          v378 = *(int *)(v278 + 24);
          v379 = &v10[v378];
          v380 = &v11[v378];
          v381 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v381 - 8) + 32))(v379, v380, v381);
          v15 = v999;
          goto LABEL_280;
        case 0x1Bu:
          v141 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v141;
          *((_DWORD *)v10 + 8) = *((_DWORD *)v11 + 8);
          *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
          v142 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
          v1015 = v16;
          v143 = &v10[v142];
          v946 = v13;
          v144 = v15;
          v145 = &v11[v142];
          v146 = sub_2408E57A4();
          v147 = v143;
          v16 = v1015;
          v148 = v145;
          v15 = v144;
          v13 = v946;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v147, v148, v146);
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 0x1Cu:
          v1040 = v8;
          v983 = a3;
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
          *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
          v1026 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
          v149 = v1026[7];
          __src = &v10[v149];
          v150 = &v11[v149];
          v151 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          __dsta = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v151 - 8);
          v920 = v150;
          v1000 = v15;
          v1006 = v16;
          if (((unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6])(v150, 1, v151))
          {
            v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(__src, v150, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
          }
          else
          {
            v283 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v283 - 8) + 48))(v920, 1, v283))
            {
              v443 = (char *)&loc_24038B5B8 + 4 * word_2408E86FE[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(__src, v920, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
            v673 = *(int *)(v151 + 20);
            v674 = &__src[v673];
            v675 = &v920[v673];
            v676 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v676 - 8) + 32))(v674, v675, v676);
            __dsta[7](__src, 0, 1, v151);
          }
          v677 = v1026[8];
          v979 = &v10[v677];
          v678 = &v11[v677];
          v679 = type metadata accessor for TranscriptProtoResponseOutput(0);
          v680 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v679 - 8);
          if (v680[6](v678, 1, v679))
          {
            v681 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
            memcpy(v979, v678, *(_QWORD *)(*(_QWORD *)(v681 - 8) + 64));
          }
          else
          {
            __dsti = v680;
            *v979 = *v678;
            *((_BYTE *)v979 + 8) = *((_BYTE *)v678 + 8);
            v979[2] = v678[2];
            __srci = (int *)v679;
            v933 = (char *)v678;
            v682 = *(int *)(v679 + 28);
            v683 = (char *)v979 + v682;
            v684 = (char *)v678 + v682;
            v685 = type metadata accessor for TranscriptProtoDialogType(0);
            v857 = *(_QWORD **)(v685 - 8);
            v902 = (int *)v685;
            v880 = (unsigned int (*)(char *, uint64_t))v857[6];
            if (v880(v684, 1))
            {
              v686 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
              memcpy(v683, v684, *(_QWORD *)(*(_QWORD *)(v686 - 8) + 64));
              v687 = v902;
            }
            else
            {
              v688 = type metadata accessor for TranscriptProtoDialogFormat(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v688 - 8) + 48))(v684, 1, v688))
              {
                v690 = (char *)&loc_24038FB68 + 4 * byte_2408E8714[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v689 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
              memcpy(v683, v684, *(_QWORD *)(*(_QWORD *)(v689 - 8) + 64));
              v691 = v684;
              v687 = v902;
              v692 = v902[5];
              v693 = &v683[v692];
              v694 = &v691[v692];
              v695 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v695 - 8) + 32))(v693, v694, v695);
              ((void (*)(char *, _QWORD, uint64_t, int *))v857[7])(v683, 0, 1, v902);
            }
            v696 = __srci;
            v697 = __srci[8];
            v698 = v979;
            v868 = (char *)v979 + v697;
            v699 = &v933[v697];
            if (((unsigned int (*)(char *, uint64_t, int *))v880)(&v933[v697], 1, v687))
            {
              v700 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
              memcpy(v868, v699, *(_QWORD *)(*(_QWORD *)(v700 - 8) + 64));
            }
            else
            {
              v701 = type metadata accessor for TranscriptProtoDialogFormat(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v701 - 8) + 48))(v699, 1, v701))
              {
                v703 = (char *)&loc_24038FD60 + 4 * byte_2408E8719[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v702 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
              memcpy(v868, v699, *(_QWORD *)(*(_QWORD *)(v702 - 8) + 64));
              v704 = v902[5];
              v705 = &v868[v704];
              v706 = &v699[v704];
              v707 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v707 - 8) + 32))(v705, v706, v707);
              ((void (*)(char *, _QWORD, uint64_t, int *))v857[7])(v868, 0, 1, v902);
              v698 = v979;
              v696 = __srci;
            }
            v708 = v696[9];
            v709 = v696;
            v710 = (char *)v698 + v708;
            v711 = &v933[v708];
            v712 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v712 - 8) + 32))(v710, v711, v712);
            (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))__dsti + 7))(v698, 0, 1, v709);
          }
          v713 = v1026[9];
          v980 = &v10[v713];
          v714 = &v11[v713];
          v715 = type metadata accessor for TranscriptProtoStatementID(0);
          v716 = *(_QWORD *)(v715 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v716 + 48))(v714, 1, v715))
          {
            v717 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v980, v714, *(_QWORD *)(*(_QWORD *)(v717 - 8) + 64));
          }
          else
          {
            *v980 = *v714;
            *(_OWORD *)(v980 + 2) = *(_OWORD *)(v714 + 2);
            v718 = *(int *)(v715 + 24);
            v934 = (char *)v980 + v718;
            v719 = (char *)v714 + v718;
            v720 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v720 - 8) + 32))(v934, v719, v720);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v716 + 56))(v980, 0, 1, v715);
          }
          *(_OWORD *)&v10[v1026[10]] = *(_OWORD *)&v11[v1026[10]];
          v721 = v1026[11];
          v722 = &v10[v721];
          v723 = &v11[v721];
          v724 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v724 - 8) + 32))(v722, v723, v724);
          v15 = v1000;
          goto LABEL_280;
        case 0x1Du:
          v153 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v153;
          v1020 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
          v154 = v1020[6];
          v893 = v10;
          __srca = &v10[v154];
          v921 = &v11[v154];
          v155 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
          __dstb = *(void (***)(char *, _QWORD, uint64_t, int *))(v155 - 8);
          v1040 = v8;
          v983 = a3;
          v992 = v15;
          v1006 = v16;
          if (((unsigned int (*)(char *, uint64_t, uint64_t))__dstb[6])(v921, 1, v155))
          {
            v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
            memcpy(__srca, v921, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
          }
          else
          {
            v872 = (int *)v155;
            v285 = type metadata accessor for TranscriptProtoStatementOutcome(0);
            v860 = *(void (***)(void *, _QWORD, uint64_t, void *))(v285 - 8);
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v860[6])(v921, 1, v285))
            {
              v286 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
              v288 = __srca;
              v287 = v921;
              memcpy(__srca, v921, *(_QWORD *)(*(_QWORD *)(v286 - 8) + 64));
            }
            else
            {
              v853 = (int *)v285;
              v444 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v444 - 8) + 48))(v921, 1, v444))
              {
                v476 = (char *)&loc_24038BB80 + 4 * word_2408E86E8[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v445 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
              memcpy(__srca, v921, *(_QWORD *)(*(_QWORD *)(v445 - 8) + 64));
              v729 = v853[5];
              v730 = &__srca[v729];
              v288 = __srca;
              v287 = v921;
              v731 = &v921[v729];
              v732 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v732 - 8) + 32))(v730, v731, v732);
              v860[7](__srca, 0, 1, v853);
            }
            v733 = v872;
            v734 = v872[5];
            v735 = &v288[v734];
            v736 = &v287[v734];
            v737 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
            v738 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v737 - 1);
            if (((unsigned int (**)(char *, uint64_t, int *))v738)[6](v736, 1, v737))
            {
              v739 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
              memcpy(v735, v736, *(_QWORD *)(*(_QWORD *)(v739 - 8) + 64));
            }
            else
            {
              v981 = (void (**)(char *, _QWORD, uint64_t, int *))v738;
              *(_QWORD *)v735 = *(_QWORD *)v736;
              v740 = v737[5];
              v741 = &v735[v740];
              v742 = &v736[v740];
              v743 = type metadata accessor for TranscriptProtoResponseDialog(0);
              v851 = *(void (***)(char *, _QWORD, uint64_t, int *))(v743 - 8);
              v858 = (int *)v743;
              if (((unsigned int (*)(char *, uint64_t))v851[6])(v742, 1))
              {
                v744 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
                memcpy(v741, v742, *(_QWORD *)(*(_QWORD *)(v744 - 8) + 64));
              }
              else
              {
                v745 = *((_OWORD *)v742 + 1);
                *(_OWORD *)v741 = *(_OWORD *)v742;
                *((_OWORD *)v741 + 1) = v745;
                v746 = *((_OWORD *)v742 + 3);
                *((_OWORD *)v741 + 2) = *((_OWORD *)v742 + 2);
                *((_OWORD *)v741 + 3) = v746;
                v747 = v858[8];
                v848 = &v741[v747];
                v869 = &v742[v747];
                v748 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v748 - 8) + 32))(v848, v869, v748);
                v851[7](v741, 0, 1, v858);
              }
              v749 = v737[6];
              v859 = &v735[v749];
              v750 = &v736[v749];
              v751 = type metadata accessor for TranscriptProtoResponseVisual(0);
              v852 = *(void (***)(char *, _QWORD, uint64_t, uint64_t))(v751 - 8);
              if (((unsigned int (*)(char *, uint64_t, uint64_t))v852[6])(v750, 1, v751))
              {
                v752 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
                memcpy(v859, v750, *(_QWORD *)(*(_QWORD *)(v752 - 8) + 64));
              }
              else
              {
                *(_OWORD *)v859 = *(_OWORD *)v750;
                v753 = *(int *)(v751 + 24);
                v849 = &v859[v753];
                v870 = &v750[v753];
                v754 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v754 - 8) + 32))(v849, v870, v754);
                v852[7](v859, 0, 1, v751);
              }
              *(_OWORD *)&v735[v737[7]] = *(_OWORD *)&v736[v737[7]];
              *(_OWORD *)&v735[v737[8]] = *(_OWORD *)&v736[v737[8]];
              v735[v737[9]] = v736[v737[9]];
              v735[v737[10]] = v736[v737[10]];
              v755 = v737[11];
              v756 = &v735[v755];
              v757 = &v736[v755];
              v758 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v758 - 8) + 32))(v756, v757, v758);
              v981[7](v735, 0, 1, v737);
              v733 = v872;
            }
            v759 = v733[6];
            v760 = v733;
            v761 = &__srca[v759];
            v762 = &v921[v759];
            v763 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v763 - 8) + 32))(v761, v762, v763);
            __dstb[7](__srca, 0, 1, v760);
          }
          v764 = v1020[7];
          v10 = v893;
          v765 = &v893[v764];
          v766 = &v11[v764];
          v767 = type metadata accessor for TranscriptProtoStatementID(0);
          v768 = *(_QWORD *)(v767 - 8);
          v982 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v768 + 48);
          v935 = (void *)v768;
          if (v982(v766, 1, v767))
          {
            v769 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v765, v766, *(_QWORD *)(*(_QWORD *)(v769 - 8) + 64));
          }
          else
          {
            *v765 = *v766;
            *(_OWORD *)(v765 + 2) = *(_OWORD *)(v766 + 2);
            v770 = *(int *)(v767 + 24);
            __srco = (char *)v765 + v770;
            v771 = (char *)v766 + v770;
            v772 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v772 - 8) + 32))(__srco, v771, v772);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v768 + 56))(v765, 0, 1, v767);
          }
          v773 = v1020[8];
          v774 = &v893[v773];
          v775 = &v11[v773];
          if (v982(&v11[v773], 1, v767))
          {
            v776 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v774, v775, *(_QWORD *)(*(_QWORD *)(v776 - 8) + 64));
          }
          else
          {
            *v774 = *v775;
            *(_OWORD *)(v774 + 2) = *(_OWORD *)(v775 + 2);
            v777 = *(int *)(v767 + 24);
            v778 = (char *)v774 + v777;
            v779 = (char *)v775 + v777;
            v780 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v780 - 8) + 32))(v778, v779, v780);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))v935 + 7))(v774, 0, 1, v767);
          }
          v781 = v1020[9];
          v782 = &v893[v781];
          v783 = &v11[v781];
          if (v982(&v11[v781], 1, v767))
          {
            v784 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v782, v783, *(_QWORD *)(*(_QWORD *)(v784 - 8) + 64));
          }
          else
          {
            *v782 = *v783;
            *(_OWORD *)(v782 + 2) = *(_OWORD *)(v783 + 2);
            v785 = *(int *)(v767 + 24);
            v786 = (char *)v782 + v785;
            v787 = (char *)v783 + v785;
            v788 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v788 - 8) + 32))(v786, v787, v788);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))v935 + 7))(v782, 0, 1, v767);
          }
LABEL_279:
          v789 = v1020[10];
          v790 = &v10[v789];
          v791 = &v11[v789];
          v792 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v792 - 8) + 32))(v790, v791, v792);
          v15 = v992;
          goto LABEL_280;
        case 0x1Eu:
          v997 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          v157 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v157;
          StepResults = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
          v158 = *(int *)(StepResults + 24);
          v159 = &v10[v158];
          v160 = &v11[v158];
          v161 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v162 = *(_QWORD *)(v161 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v162 + 48))(v160, 1, v161))
            goto LABEL_50;
          goto LABEL_99;
        case 0x1Fu:
          v997 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          *(_QWORD *)v10 = *(_QWORD *)v11;
          *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
          StepResults = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
          v163 = *(int *)(StepResults + 24);
          v159 = &v10[v163];
          v160 = &v11[v163];
          v161 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v162 = *(_QWORD *)(v161 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v162 + 48))(v160, 1, v161))
          {
LABEL_50:
            v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
          }
          else
          {
LABEL_99:
            *(_OWORD *)v159 = *(_OWORD *)v160;
            v159[2] = v160[2];
            v289 = *(int *)(v161 + 24);
            v958 = (char *)v159 + v289;
            v290 = (char *)v160 + v289;
            v291 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v291 - 8) + 32))(v958, v290, v291);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v159, 0, 1, v161);
          }
LABEL_100:
          v292 = *(int *)(StepResults + 28);
          v293 = &v10[v292];
          v294 = &v11[v292];
          v295 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v295 - 8) + 32))(v293, v294, v295);
          v15 = v997;
          goto LABEL_280;
        case 0x20u:
          v1001 = v15;
          v165 = type metadata accessor for TranscriptProtoRequestContent(0);
          v922 = *(void **)(v165 - 8);
          v1040 = v8;
          v983 = a3;
          v1006 = v16;
          if ((*((unsigned int (**)(_BYTE *, uint64_t, uint64_t))v922 + 6))(v11, 1, v165))
          {
            v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
          }
          else
          {
            __srcc = (int *)v165;
            v296 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v296 - 8) + 48))(v11, 1, v296))
            {
              v446 = (char *)&loc_24038B6C0 + 4 * word_2408E86E0[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v297 - 8) + 64));
            v656 = __srcc[5];
            v657 = &v10[v656];
            v658 = &v11[v656];
            v659 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v659 - 8) + 32))(v657, v658, v659);
            (*((void (**)(_BYTE *, _QWORD, uint64_t, int *))v922 + 7))(v10, 0, 1, __srcc);
          }
          v660 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
          *(_OWORD *)&v10[v660[5]] = *(_OWORD *)&v11[v660[5]];
          v661 = v660[6];
          v662 = &v10[v661];
          v663 = &v11[v661];
          v664 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v1038 = *(_QWORD *)(v664 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1038 + 48))(v663, 1, v664))
          {
            v665 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v662, v663, *(_QWORD *)(*(_QWORD *)(v665 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v662 = *(_OWORD *)v663;
            v662[2] = v663[2];
            v666 = *(int *)(v664 + 24);
            v978 = (char *)v662 + v666;
            v667 = (char *)v663 + v666;
            v668 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v668 - 8) + 32))(v978, v667, v668);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1038 + 56))(v662, 0, 1, v664);
          }
          v669 = v660[7];
          v670 = &v10[v669];
          v671 = &v11[v669];
          v672 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v672 - 8) + 32))(v670, v671, v672);
          v15 = v1001;
          goto LABEL_280;
        case 0x21u:
          v988 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          *(_QWORD *)v10 = *(_QWORD *)v11;
          v1027 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
          v167 = *(int *)(v1027 + 20);
          v168 = &v10[v167];
          v169 = &v11[v167];
          v170 = type metadata accessor for TranscriptProtoStatementID(0);
          v171 = *(_QWORD *)(v170 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v171 + 48))(v169, 1, v170))
          {
            v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
          }
          else
          {
            *v168 = *v169;
            *(_OWORD *)(v168 + 2) = *(_OWORD *)(v169 + 2);
            v298 = *(int *)(v170 + 24);
            v959 = (char *)v168 + v298;
            v299 = (char *)v169 + v298;
            v300 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32))(v959, v299, v300);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v168, 0, 1, v170);
          }
          v218 = v1027;
          v301 = *(int *)(v1027 + 24);
          v926 = &v10[v301];
          v302 = &v11[v301];
          v303 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v304 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v303 - 8);
          if (v304[6](v302, 1, v303))
          {
            v305 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(v926, v302, *(_QWORD *)(*(_QWORD *)(v305 - 8) + 64));
          }
          else
          {
            __srce = (void *)v303;
            __dstc = v304;
            v382 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v382 - 8) + 48))(v302, 1, v382))
            {
              v468 = (char *)&loc_24038B914 + 4 * word_2408E86CA[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v383 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(v926, v302, *(_QWORD *)(*(_QWORD *)(v383 - 8) + 64));
            v725 = *(int *)(v303 + 20);
            v726 = &v926[v725];
            v727 = &v302[v725];
            v728 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v728 - 8) + 32))(v726, v727, v728);
            ((void (*)(char *, _QWORD, uint64_t, void *))__dstc[7])(v926, 0, 1, __srce);
            v218 = v1027;
          }
          goto LABEL_164;
        case 0x22u:
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
          v173 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
          v1016 = v16;
          v174 = &v10[v173];
          v947 = v13;
          v175 = v15;
          v176 = &v11[v173];
          v177 = sub_2408E57A4();
          v178 = v174;
          v16 = v1016;
          v179 = v176;
          v15 = v175;
          v13 = v947;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v178, v179, v177);
          swift_storeEnumTagMultiPayload();
          goto LABEL_283;
        case 0x23u:
          v1002 = v15;
          v1006 = v16;
          v1040 = v8;
          v985 = a3;
          v180 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
          v181 = *(unsigned int (***)(_BYTE *, uint64_t, uint64_t))(v180 - 8);
          if (v181[6](v11, 1, v180))
          {
            v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
          }
          else
          {
            v927 = v181;
            v306 = *((_OWORD *)v11 + 1);
            *(_OWORD *)v10 = *(_OWORD *)v11;
            *((_OWORD *)v10 + 1) = v306;
            v10[32] = v11[32];
            *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
            *(_OWORD *)(v10 + 56) = *(_OWORD *)(v11 + 56);
            *((_QWORD *)v10 + 9) = *((_QWORD *)v11 + 9);
            v10[80] = v11[80];
            *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
            *(_OWORD *)(v10 + 104) = *(_OWORD *)(v11 + 104);
            v1033 = (int *)v180;
            v307 = *(int *)(v180 + 68);
            v308 = &v10[v307];
            v309 = &v11[v307];
            v310 = type metadata accessor for ToolKitProtoTypeInstance(0);
            v311 = *(_QWORD *)(v310 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v311 + 48))(v309, 1, v310))
            {
              v312 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
              memcpy(v308, v309, *(_QWORD *)(*(_QWORD *)(v312 - 8) + 64));
            }
            else
            {
              *v308 = *v309;
              v447 = *(int *)(v310 + 20);
              v968 = (char *)v308 + v447;
              v448 = (char *)v309 + v447;
              v449 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v449 - 8) + 32))(v968, v448, v449);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v311 + 56))(v308, 0, 1, v310);
            }
            v450 = v1033;
            *(_OWORD *)&v10[v1033[18]] = *(_OWORD *)&v11[v1033[18]];
            v451 = v1033[19];
            v452 = &v10[v451];
            v453 = &v11[v451];
            v454 = type metadata accessor for ToolKitProtoAppDefinition(0);
            v455 = *(_QWORD *)(v454 - 8);
            v969 = (int *)v454;
            if ((*(unsigned int (**)(_OWORD *, uint64_t))(v455 + 48))(v453, 1))
            {
              v456 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
              memcpy(v452, v453, *(_QWORD *)(*(_QWORD *)(v456 - 8) + 64));
            }
            else
            {
              v896 = (char *)v452;
              v470 = v453[1];
              *v452 = *v453;
              v452[1] = v470;
              v471 = v453[3];
              v452[2] = v453[2];
              v452[3] = v471;
              v452[4] = v453[4];
              *((_BYTE *)v452 + 80) = *((_BYTE *)v453 + 80);
              v472 = v969[10];
              v875 = (_OWORD *)((char *)v452 + v472);
              v473 = (_OWORD *)((char *)v453 + v472);
              v474 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
              v854 = *(void **)(v474 - 8);
              __dste = (char *)v453;
              if ((*((unsigned int (**)(_OWORD *, uint64_t, uint64_t))v854 + 6))(v473, 1, v474))
              {
                v475 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
                memcpy(v875, v473, *(_QWORD *)(*(_QWORD *)(v475 - 8) + 64));
              }
              else
              {
                *v875 = *v473;
                v477 = *(int *)(v474 + 20);
                v478 = (char *)v875 + v477;
                v862 = (char *)v473 + v477;
                v479 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v479 - 8) + 32))(v478, v862, v479);
                (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))v854 + 7))(v875, 0, 1, v474);
              }
              v480 = v969[11];
              v481 = &v896[v480];
              v482 = &__dste[v480];
              v483 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v483 - 8) + 32))(v481, v482, v483);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v455 + 56))(v896, 0, 1, v969);
              v450 = v1033;
            }
            *(_OWORD *)&v10[v450[20]] = *(_OWORD *)&v11[v450[20]];
            v484 = v450[21];
            v485 = &v10[v484];
            v486 = &v11[v484];
            v487 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
            v488 = *(_QWORD *)(v487 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v488 + 48))(v486, 1, v487))
            {
              v489 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
              memcpy(v485, v486, *(_QWORD *)(*(_QWORD *)(v489 - 8) + 64));
            }
            else
            {
              v490 = v486[1];
              *v485 = *v486;
              v485[1] = v490;
              v491 = *(int *)(v487 + 24);
              v970 = (char *)v485 + v491;
              v492 = (char *)v486 + v491;
              v493 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v493 - 8) + 32))(v970, v492, v493);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v488 + 56))(v485, 0, 1, v487);
            }
            v494 = v1033;
            v495 = v1033[22];
            v971 = &v10[v495];
            v496 = &v11[v495];
            v497 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
            v498 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v497 - 8);
            if (v498[6](v496, 1, v497))
            {
              v499 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
              memcpy(v971, v496, *(_QWORD *)(*(_QWORD *)(v499 - 8) + 64));
            }
            else
            {
              v897 = (int *)v497;
              __srcf = v498;
              v500 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
              v501 = *(_QWORD *)(v500 - 8);
              if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v501 + 48))(v496, 1, v500))
              {
                v502 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
                memcpy(v971, v496, *(_QWORD *)(*(_QWORD *)(v502 - 8) + 64));
                v503 = v897;
              }
              else
              {
                __dstf = (void *)v500;
                v876 = v496;
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  *v971 = *v496;
                  *((_BYTE *)v971 + 16) = *((_BYTE *)v496 + 16);
                  *(_OWORD *)((char *)v971 + 24) = *(_OWORD *)((char *)v496 + 24);
                  *(_OWORD *)((char *)v971 + 40) = *(_OWORD *)((char *)v496 + 40);
                  v504 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                + 32);
                  v863 = (char *)v971 + v504;
                  v505 = (char *)v496 + v504;
                  v506 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v506 - 8) + 32))(v863, v505, v506);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v971, v496, *(_QWORD *)(v501 + 64));
                }
                v503 = v897;
                (*(void (**)(_OWORD *, _QWORD, uint64_t, void *))(v501 + 56))(v971, 0, 1, __dstf);
                v496 = v876;
              }
              v545 = v503[5];
              v546 = (char *)v971 + v545;
              v547 = (char *)v496 + v545;
              v548 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v548 - 8) + 32))(v546, v547, v548);
              (*((void (**)(_OWORD *, _QWORD, uint64_t, int *))__srcf + 7))(v971, 0, 1, v503);
              v494 = v1033;
            }
            v549 = v494[23];
            v550 = &v10[v549];
            v551 = &v11[v549];
            v552 = type metadata accessor for ToolKitProtoContainerDefinition(0);
            __srch = *(_QWORD **)(v552 - 8);
            v974 = (unsigned int (*)(_OWORD *, uint64_t, uint64_t))__srch[6];
            if (v974(v551, 1, v552))
            {
              v553 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
              memcpy(v550, v551, *(_QWORD *)(*(_QWORD *)(v553 - 8) + 64));
            }
            else
            {
              v554 = v551[1];
              *v550 = *v551;
              v550[1] = v554;
              *((_WORD *)v550 + 16) = *((_WORD *)v551 + 16);
              *(_OWORD *)((char *)v550 + 40) = *(_OWORD *)((char *)v551 + 40);
              *(_OWORD *)((char *)v550 + 56) = *(_OWORD *)((char *)v551 + 56);
              v899 = (int *)v552;
              v555 = *(int *)(v552 + 40);
              v878 = (_OWORD *)((char *)v550 + v555);
              v556 = (_OWORD *)((char *)v551 + v555);
              v557 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
              v866 = *(void **)(v557 - 8);
              if ((*((unsigned int (**)(_OWORD *, uint64_t, uint64_t))v866 + 6))(v556, 1, v557))
              {
                v558 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                memcpy(v878, v556, *(_QWORD *)(*(_QWORD *)(v558 - 8) + 64));
              }
              else
              {
                *v878 = *v556;
                v559 = *(int *)(v557 + 20);
                v856 = (char *)v878 + v559;
                __dstk = (char *)v556 + v559;
                v560 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v560 - 8) + 32))(v856, __dstk, v560);
                (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))v866 + 7))(v878, 0, 1, v557);
              }
              v552 = (uint64_t)v899;
              v561 = v899[11];
              v562 = (char *)v550 + v561;
              v563 = (char *)v551 + v561;
              v564 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v564 - 8) + 32))(v562, v563, v564);
              ((void (*)(_OWORD *, _QWORD, uint64_t, int *))__srch[7])(v550, 0, 1, v899);
              v494 = v1033;
            }
            v565 = v494[24];
            v566 = &v10[v565];
            v567 = &v11[v565];
            if (v974(&v11[v565], 1, v552))
            {
              v568 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
              memcpy(v566, v567, *(_QWORD *)(*(_QWORD *)(v568 - 8) + 64));
            }
            else
            {
              v569 = v567[1];
              *v566 = *v567;
              v566[1] = v569;
              *((_WORD *)v566 + 16) = *((_WORD *)v567 + 16);
              *(_OWORD *)((char *)v566 + 40) = *(_OWORD *)((char *)v567 + 40);
              *(_OWORD *)((char *)v566 + 56) = *(_OWORD *)((char *)v567 + 56);
              v570 = *(int *)(v552 + 40);
              __dsth = (_OWORD *)((char *)v566 + v570);
              v900 = (int *)v552;
              v571 = (_OWORD *)((char *)v567 + v570);
              v572 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
              v879 = *(void **)(v572 - 8);
              if ((*((unsigned int (**)(_OWORD *, uint64_t, uint64_t))v879 + 6))(v571, 1, v572))
              {
                v573 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                memcpy(__dsth, v571, *(_QWORD *)(*(_QWORD *)(v573 - 8) + 64));
              }
              else
              {
                *__dsth = *v571;
                v574 = *(int *)(v572 + 20);
                v867 = (char *)__dsth + v574;
                v975 = (char *)v571 + v574;
                v575 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v575 - 8) + 32))(v867, v975, v575);
                (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))v879 + 7))(__dsth, 0, 1, v572);
              }
              v576 = v900[11];
              v577 = (char *)v566 + v576;
              v578 = (char *)v567 + v576;
              v579 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v579 - 8) + 32))(v577, v578, v579);
              ((void (*)(_OWORD *, _QWORD, uint64_t, int *))__srch[7])(v566, 0, 1, v900);
              v494 = v1033;
            }
            v580 = v494[25];
            v581 = v494;
            v582 = &v10[v580];
            v583 = &v11[v580];
            v584 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v584 - 8) + 32))(v582, v583, v584);
            (*((void (**)(_BYTE *, _QWORD, uint64_t, int *))v927 + 7))(v10, 0, 1, v581);
          }
          v1034 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
          v585 = v1034[5];
          v586 = &v10[v585];
          v587 = &v11[v585];
          v588 = type metadata accessor for TranscriptProtoStatementID(0);
          v589 = *(_QWORD *)(v588 - 8);
          v976 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v589 + 48);
          if (v976(v587, 1, v588))
          {
            v590 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v586, v587, *(_QWORD *)(*(_QWORD *)(v590 - 8) + 64));
          }
          else
          {
            *v586 = *v587;
            *(_OWORD *)(v586 + 2) = *(_OWORD *)(v587 + 2);
            v591 = *(int *)(v588 + 24);
            __srcn = (char *)v586 + v591;
            v592 = (char *)v587 + v591;
            v593 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v593 - 8) + 32))(__srcn, v592, v593);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v589 + 56))(v586, 0, 1, v588);
          }
          v594 = v1034[6];
          v413 = &v10[v594];
          v414 = &v11[v594];
          if (v976(&v11[v594], 1, v588))
            goto LABEL_219;
          *(_DWORD *)v413 = *(_DWORD *)v414;
          *(_OWORD *)(v413 + 8) = *(_OWORD *)(v414 + 8);
          v596 = *(int *)(v588 + 24);
          v977 = &v413[v596];
          v597 = &v414[v596];
          v598 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v598 - 8) + 32))(v977, v597, v598);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v589 + 56))(v413, 0, 1, v588);
          goto LABEL_221;
        case 0x24u:
          v1003 = v15;
          v1006 = v16;
          v1040 = v8;
          v986 = a3;
          *(_OWORD *)v10 = *(_OWORD *)v11;
          v10[16] = v11[16];
          *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
          v1028 = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
          v183 = v1028[7];
          v184 = &v10[v183];
          v185 = &v11[v183];
          v186 = type metadata accessor for TranscriptProtoStatementID(0);
          v187 = *(_QWORD *)(v186 - 8);
          v948 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v187 + 48);
          v923 = (void *)v187;
          if (v948(v185, 1, v186))
          {
            v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
          }
          else
          {
            *v184 = *v185;
            *(_OWORD *)(v184 + 2) = *(_OWORD *)(v185 + 2);
            v313 = *(int *)(v186 + 24);
            __srcj = (char *)v184 + v313;
            v314 = (char *)v185 + v313;
            v315 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v315 - 8) + 32))(__srcj, v314, v315);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v184, 0, 1, v186);
          }
          v316 = v1028[8];
          v317 = &v10[v316];
          v318 = &v11[v316];
          if (v948(&v11[v316], 1, v186))
          {
            v319 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v317, v318, *(_QWORD *)(*(_QWORD *)(v319 - 8) + 64));
          }
          else
          {
            *v317 = *v318;
            *(_OWORD *)(v317 + 2) = *(_OWORD *)(v318 + 2);
            v384 = *(int *)(v186 + 24);
            v385 = (char *)v317 + v384;
            v386 = (char *)v318 + v384;
            v387 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v387 - 8) + 32))(v385, v386, v387);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))v923 + 7))(v317, 0, 1, v186);
          }
          a3 = v986;
          v388 = v1028[9];
          v389 = &v10[v388];
          v390 = &v11[v388];
          v391 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v391 - 8) + 32))(v389, v390, v391);
          v15 = v1003;
          goto LABEL_222;
        case 0x25u:
          v1004 = v15;
          v1006 = v16;
          v1040 = v8;
          v987 = a3;
          *(_OWORD *)v10 = *(_OWORD *)v11;
          v10[16] = v11[16];
          v1029 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
          v189 = v1029[6];
          v190 = &v10[v189];
          v191 = &v11[v189];
          v192 = type metadata accessor for TranscriptProtoStatementID(0);
          v193 = *(_QWORD *)(v192 - 8);
          v949 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v193 + 48);
          v924 = (void *)v193;
          if (v949(v191, 1, v192))
          {
            v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
          }
          else
          {
            *v190 = *v191;
            *(_OWORD *)(v190 + 2) = *(_OWORD *)(v191 + 2);
            v320 = *(int *)(v192 + 24);
            __srck = (char *)v190 + v320;
            v321 = (char *)v191 + v320;
            v322 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v322 - 8) + 32))(__srck, v321, v322);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
          }
          v323 = v1029[7];
          v324 = &v10[v323];
          v325 = &v11[v323];
          if (v949(&v11[v323], 1, v192))
          {
            v326 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v324, v325, *(_QWORD *)(*(_QWORD *)(v326 - 8) + 64));
          }
          else
          {
            *v324 = *v325;
            *(_OWORD *)(v324 + 2) = *(_OWORD *)(v325 + 2);
            v392 = *(int *)(v192 + 24);
            v393 = (char *)v324 + v392;
            v394 = (char *)v325 + v392;
            v395 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v395 - 8) + 32))(v393, v394, v395);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))v924 + 7))(v324, 0, 1, v192);
          }
          a3 = v987;
          v396 = v1029[8];
          v397 = &v10[v396];
          v398 = &v11[v396];
          v399 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v399 - 8) + 32))(v397, v398, v399);
          v15 = v1004;
          goto LABEL_222;
        case 0x26u:
          v1002 = v15;
          v1006 = v16;
          v1040 = v8;
          v985 = a3;
          v195 = type metadata accessor for ToolKitProtoTypedValue(0);
          v196 = *(_QWORD *)(v195 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v196 + 48))(v11, 1, v195))
          {
            v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v10 = *(_QWORD *)v11;
            v327 = *(int *)(v195 + 20);
            v328 = &v10[v327];
            v329 = &v11[v327];
            v330 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v330 - 8) + 32))(v328, v329, v330);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v196 + 56))(v10, 0, 1, v195);
          }
          v1034 = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
          v331 = v1034[5];
          v332 = &v10[v331];
          v333 = &v11[v331];
          v334 = type metadata accessor for ToolKitProtoTypeInstance(0);
          v335 = *(_QWORD *)(v334 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v335 + 48))(v333, 1, v334))
          {
            v336 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
            memcpy(v332, v333, *(_QWORD *)(*(_QWORD *)(v336 - 8) + 64));
          }
          else
          {
            *v332 = *v333;
            v400 = *(int *)(v334 + 20);
            v965 = (char *)v332 + v400;
            v401 = (char *)v333 + v400;
            v402 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v402 - 8) + 32))(v965, v401, v402);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v335 + 56))(v332, 0, 1, v334);
          }
          v403 = v1034[6];
          v404 = &v10[v403];
          v405 = &v11[v403];
          v406 = type metadata accessor for TranscriptProtoStatementID(0);
          v407 = *(_QWORD *)(v406 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v407 + 48))(v405, 1, v406))
          {
            v408 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v404, v405, *(_QWORD *)(*(_QWORD *)(v408 - 8) + 64));
          }
          else
          {
            *v404 = *v405;
            *(_OWORD *)(v404 + 2) = *(_OWORD *)(v405 + 2);
            v418 = *(int *)(v406 + 24);
            v966 = (char *)v404 + v418;
            v419 = (char *)v405 + v418;
            v420 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v420 - 8) + 32))(v966, v419, v420);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v407 + 56))(v404, 0, 1, v406);
          }
          goto LABEL_221;
        case 0x27u:
          v1002 = v15;
          v1006 = v16;
          v1040 = v8;
          v985 = a3;
          v198 = type metadata accessor for ToolKitProtoTypedValue(0);
          v199 = *(_QWORD *)(v198 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v199 + 48))(v11, 1, v198))
          {
            v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v10 = *(_QWORD *)v11;
            v337 = *(int *)(v198 + 20);
            v338 = &v10[v337];
            v339 = &v11[v337];
            v340 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v340 - 8) + 32))(v338, v339, v340);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v10, 0, 1, v198);
          }
          v1034 = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
          v341 = v1034[5];
          v342 = &v10[v341];
          v343 = &v11[v341];
          v344 = type metadata accessor for TranscriptProtoStatementID(0);
          v345 = *(_QWORD *)(v344 - 8);
          v960 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v345 + 48);
          v928 = (void *)v345;
          if (v960(v343, 1, v344))
          {
            v346 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v342, v343, *(_QWORD *)(*(_QWORD *)(v346 - 8) + 64));
          }
          else
          {
            *v342 = *v343;
            *(_OWORD *)(v342 + 2) = *(_OWORD *)(v343 + 2);
            v409 = *(int *)(v344 + 24);
            __srcl = (char *)v342 + v409;
            v410 = (char *)v343 + v409;
            v411 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v411 - 8) + 32))(__srcl, v410, v411);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v345 + 56))(v342, 0, 1, v344);
          }
          v412 = v1034[6];
          v413 = &v10[v412];
          v414 = &v11[v412];
          if (v960(&v11[v412], 1, v344))
          {
LABEL_219:
            v595 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v413, v414, *(_QWORD *)(*(_QWORD *)(v595 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v413 = *(_DWORD *)v414;
            *(_OWORD *)(v413 + 8) = *(_OWORD *)(v414 + 8);
            v421 = *(int *)(v344 + 24);
            v422 = &v413[v421];
            v423 = &v414[v421];
            v424 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v424 - 8) + 32))(v422, v423, v424);
            (*((void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))v928 + 7))(v413, 0, 1, v344);
          }
LABEL_221:
          a3 = v985;
          v599 = v1034[7];
          v600 = &v10[v599];
          v601 = &v11[v599];
          v602 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v602 - 8) + 32))(v600, v601, v602);
          v15 = v1002;
LABEL_222:
          swift_storeEnumTagMultiPayload();
          goto LABEL_281;
        case 0x28u:
          v1005 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          v201 = *((_OWORD *)v11 + 1);
          *(_OWORD *)v10 = *(_OWORD *)v11;
          *((_OWORD *)v10 + 1) = v201;
          DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
          v202 = *(int *)(DecorationResult + 32);
          v203 = &v10[v202];
          v204 = &v11[v202];
          DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
          v206 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v206 + 48))(v204, 1, DecorationToolRetrievalResponse))
          {
            v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
            memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
          }
          else
          {
            v347 = v204[1];
            *v203 = *v204;
            v203[1] = v347;
            *((_DWORD *)v203 + 8) = *((_DWORD *)v204 + 8);
            *(_OWORD *)((char *)v203 + 40) = *(_OWORD *)((char *)v204 + 40);
            v348 = *(int *)(DecorationToolRetrievalResponse + 36);
            v961 = (char *)v203 + v348;
            v349 = (char *)v204 + v348;
            v350 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v350 - 8) + 32))(v961, v349, v350);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v203, 0, 1, DecorationToolRetrievalResponse);
          }
          v351 = *(int *)(DecorationResult + 36);
          v352 = &v10[v351];
          v353 = &v11[v351];
          v354 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v354 - 8) + 32))(v352, v353, v354);
          v15 = v1005;
          goto LABEL_280;
        case 0x2Au:
          v988 = v15;
          v1006 = v16;
          v1040 = v8;
          v983 = a3;
          *(_OWORD *)v10 = *(_OWORD *)v11;
          DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
          v208 = *(int *)(DecorationPrePlannerResult + 20);
          v209 = &v10[v208];
          v210 = &v11[v208];
          v211 = type metadata accessor for TranscriptProtoStatementID(0);
          v212 = *(_QWORD *)(v211 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v212 + 48))(v210, 1, v211))
          {
            v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
          }
          else
          {
            *v209 = *v210;
            *(_OWORD *)(v209 + 2) = *(_OWORD *)(v210 + 2);
            v355 = *(int *)(v211 + 24);
            v962 = (char *)v209 + v355;
            v356 = (char *)v210 + v355;
            v357 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v357 - 8) + 32))(v962, v356, v357);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v212 + 56))(v209, 0, 1, v211);
          }
          v218 = DecorationPrePlannerResult;
          v358 = *(int *)(DecorationPrePlannerResult + 24);
          v963 = &v10[v358];
          v359 = &v11[v358];
          DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
          v361 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(DecorationPrePlannerResultPayload - 8);
          if (v361[6](v359, 1, DecorationPrePlannerResultPayload))
          {
            v362 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
            memcpy(v963, v359, *(_QWORD *)(*(_QWORD *)(v362 - 8) + 64));
          }
          else
          {
            v930 = v361;
            DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum
                                                                                       - 8)
                                                                           + 48))(v359, 1, DecorationPrePlannerPayloadEnum))
            {
              v469 = (char *)&loc_24038B9C8 + 4 * word_2408E86BE[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v416 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
            memcpy(v963, v359, *(_QWORD *)(*(_QWORD *)(v416 - 8) + 64));
            v417 = DecorationPrePlannerResultPayload;
            v603 = *(int *)(DecorationPrePlannerResultPayload + 20);
            v604 = &v963[v603];
            v605 = &v359[v603];
            v606 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v606 - 8) + 32))(v604, v605, v606);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v930[7])(v963, 0, 1, v417);
            v218 = DecorationPrePlannerResult;
          }
LABEL_164:
          v464 = *(int *)(v218 + 28);
          v465 = &v10[v464];
          v466 = &v11[v464];
          v467 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v467 - 8) + 32))(v465, v466, v467);
          v15 = v988;
          goto LABEL_280;
        default:
          memcpy(v10, v11, *(_QWORD *)(v16 + 64));
          goto LABEL_283;
      }
    }
    v793 = *(int *)(v12 + 20);
    v794 = &v10[v793];
    v795 = &v11[v793];
    v796 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v796 - 8) + 32))(v794, v795, v796);
    (*((void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))v13 + 7))(v10, 0, 1, v12);
  }
  *(_OWORD *)(v5 + v8[12]) = *(_OWORD *)(v4 + v8[12]);
  v797 = v8[13];
  v798 = (_OWORD *)(v5 + v797);
  v799 = (_OWORD *)(v4 + v797);
  v800 = type metadata accessor for TranscriptProtoTimepoint(0);
  v801 = *(_QWORD *)(v800 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v801 + 48))(v799, 1, v800))
  {
    v802 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
    memcpy(v798, v799, *(_QWORD *)(*(_QWORD *)(v802 - 8) + 64));
  }
  else
  {
    v1039 = v5;
    v1042 = v8;
    v803 = v4;
    v804 = a3;
    v805 = v799[1];
    *v798 = *v799;
    v798[1] = v805;
    v806 = *(int *)(v800 + 28);
    v807 = (char *)v798 + v806;
    v808 = (char *)v799 + v806;
    v809 = sub_2408E5750();
    v810 = *(_QWORD *)(v809 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v810 + 48))(v808, 1, v809))
    {
      v811 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
      memcpy(v807, v808, *(_QWORD *)(*(_QWORD *)(v811 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v810 + 32))(v807, v808, v809);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v810 + 56))(v807, 0, 1, v809);
    }
    v812 = *(int *)(v800 + 32);
    v813 = (char *)v798 + v812;
    v814 = (char *)v799 + v812;
    v815 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v815 - 8) + 32))(v813, v814, v815);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v801 + 56))(v798, 0, 1, v800);
    a3 = v804;
    v4 = v803;
    v5 = v1039;
    v8 = v1042;
  }
  v816 = v8[14];
  v817 = (void *)(v5 + v816);
  v818 = (const void *)(v4 + v816);
  v819 = sub_2408E5750();
  v820 = *(_QWORD *)(v819 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v820 + 48))(v818, 1, v819))
  {
    v821 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
    memcpy(v817, v818, *(_QWORD *)(*(_QWORD *)(v821 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v820 + 32))(v817, v818, v819);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v820 + 56))(v817, 0, 1, v819);
  }
  v822 = v8[15];
  v823 = (_OWORD *)(v5 + v822);
  v824 = (_OWORD *)(v4 + v822);
  v825 = type metadata accessor for TranscriptProtoParticipantID(0);
  v826 = *(_QWORD *)(v825 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v826 + 48))(v824, 1, v825))
  {
    v827 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
    memcpy(v823, v824, *(_QWORD *)(*(_QWORD *)(v827 - 8) + 64));
  }
  else
  {
    *v823 = *v824;
    v828 = *(int *)(v825 + 20);
    v829 = (char *)v823 + v828;
    v830 = (char *)v824 + v828;
    v831 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v831 - 8) + 32))(v829, v830, v831);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v826 + 56))(v823, 0, 1, v825);
  }
  v832 = v8[16];
  v833 = (_QWORD *)(v5 + v832);
  v834 = (_QWORD *)(v4 + v832);
  v835 = type metadata accessor for TranscriptProtoSpanID(0);
  v836 = *(_QWORD *)(v835 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v836 + 48))(v834, 1, v835))
  {
    v837 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
    memcpy(v833, v834, *(_QWORD *)(*(_QWORD *)(v837 - 8) + 64));
  }
  else
  {
    *v833 = *v834;
    v838 = *(int *)(v835 + 20);
    v839 = (char *)v833 + v838;
    v840 = (char *)v834 + v838;
    v841 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v841 - 8) + 32))(v839, v840, v841);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v836 + 56))(v833, 0, 1, v835);
  }
  v842 = v8[17];
  v843 = v5 + v842;
  v844 = v4 + v842;
  v845 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v845 - 8) + 32))(v843, v844, v845);
  *(_QWORD *)(v5 + *(int *)(a3 + 20)) = *(_QWORD *)(v4 + *(int *)(a3 + 20));
  return v5;
}

_QWORD *assignWithTake for IETranscriptEventWrapper(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_BYTE *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_BYTE *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  size_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  int *v53;
  _QWORD *v54;
  int *v55;
  uint64_t v56;
  _DWORD *v57;
  _DWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _QWORD *v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unsigned int (**v73)(const void *, uint64_t, uint64_t);
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _BYTE *v77;
  _QWORD *v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  int *v83;
  int *v84;
  uint64_t v85;
  _DWORD *v86;
  _DWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  _DWORD *v96;
  _DWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int *v101;
  uint64_t Step;
  uint64_t v103;
  _DWORD *v104;
  _DWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  int *v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  _BYTE *v121;
  _QWORD *v122;
  _BYTE *v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  __int128 v127;
  int *v128;
  uint64_t v129;
  _BYTE *v130;
  uint64_t v131;
  unsigned int (**v132)(_BYTE *, uint64_t, uint64_t);
  uint64_t v133;
  int *v134;
  uint64_t StepResults;
  uint64_t v136;
  _DWORD *v137;
  _DWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _BYTE *v151;
  _QWORD *v152;
  _BYTE *v153;
  uint64_t v154;
  _BYTE *v155;
  _BYTE *v156;
  uint64_t v157;
  uint64_t v158;
  _BYTE *v159;
  _QWORD *v160;
  _BYTE *v161;
  uint64_t v162;
  _BYTE *v163;
  _BYTE *v164;
  uint64_t v165;
  _BYTE *v166;
  _QWORD *v167;
  _BYTE *v168;
  uint64_t v169;
  _BYTE *v170;
  _BYTE *v171;
  uint64_t v172;
  _BYTE *v173;
  _QWORD *v174;
  _BYTE *v175;
  uint64_t v176;
  _BYTE *v177;
  _BYTE *v178;
  uint64_t v179;
  _BYTE *v180;
  _QWORD *v181;
  _BYTE *v182;
  uint64_t v183;
  _BYTE *v184;
  _BYTE *v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  unsigned int (*v189)(_BYTE *, uint64_t, uint64_t);
  uint64_t v190;
  __int128 v191;
  uint64_t v192;
  _BYTE *v193;
  _QWORD *v194;
  _BYTE *v195;
  uint64_t v196;
  _BYTE *v197;
  _BYTE *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  unsigned int (**v203)(const void *, uint64_t, uint64_t);
  uint64_t v204;
  __int128 v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  __int128 v210;
  uint64_t v211;
  _QWORD *v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _DWORD *v223;
  _DWORD *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _BYTE *v229;
  _QWORD *v230;
  _BYTE *v231;
  uint64_t v232;
  _BYTE *v233;
  _BYTE *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _DWORD *v240;
  _DWORD *v241;
  uint64_t v242;
  uint64_t v243;
  unsigned int (*v244)(_DWORD *, uint64_t, uint64_t);
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  _DWORD *v248;
  _DWORD *v249;
  uint64_t v250;
  uint64_t v251;
  unsigned int (*v252)(_DWORD *, uint64_t, uint64_t);
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  __int128 v261;
  uint64_t DecorationResult;
  uint64_t v263;
  _OWORD *v264;
  _OWORD *v265;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _DWORD *v270;
  _DWORD *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  int *v276;
  _QWORD *v277;
  int *v278;
  uint64_t v279;
  _DWORD *v280;
  _DWORD *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  _BYTE *v286;
  uint64_t v287;
  _QWORD *v288;
  _BYTE *v289;
  uint64_t v290;
  _BYTE *v291;
  int *v292;
  uint64_t v293;
  char *v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  __int128 v299;
  uint64_t v300;
  _BYTE *v301;
  uint64_t v302;
  _QWORD *v303;
  _BYTE *v304;
  uint64_t v305;
  _BYTE *v306;
  uint64_t v307;
  int *v308;
  int *v309;
  uint64_t v310;
  _DWORD *v311;
  _DWORD *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  int *v317;
  __int128 v318;
  __int128 v319;
  uint64_t v320;
  uint64_t v321;
  _DWORD *v322;
  _DWORD *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  int *v328;
  uint64_t v329;
  uint64_t v330;
  _DWORD *v331;
  _DWORD *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  _QWORD *v338;
  uint64_t v339;
  int *v340;
  _QWORD *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  __int128 v345;
  uint64_t v346;
  _BYTE *v347;
  uint64_t v348;
  _QWORD *v349;
  _BYTE *v350;
  uint64_t v351;
  _BYTE *v352;
  __int128 v353;
  uint64_t v354;
  uint64_t v355;
  _BYTE *v356;
  _BYTE *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  int *v362;
  uint64_t v363;
  uint64_t v364;
  _DWORD *v365;
  _DWORD *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  _QWORD *v370;
  uint64_t v371;
  uint64_t v372;
  _QWORD *v373;
  _QWORD *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  _BYTE *v379;
  uint64_t v380;
  _QWORD *v381;
  _BYTE *v382;
  uint64_t v383;
  _BYTE *v384;
  uint64_t v385;
  uint64_t v386;
  _BYTE *v387;
  uint64_t v388;
  _QWORD *v389;
  _BYTE *v390;
  uint64_t v391;
  _BYTE *v392;
  uint64_t v393;
  _BYTE *v394;
  uint64_t v395;
  _QWORD *v396;
  _BYTE *v397;
  uint64_t v398;
  _BYTE *v399;
  uint64_t v400;
  _BYTE *v401;
  uint64_t v402;
  _QWORD *v403;
  _BYTE *v404;
  uint64_t v405;
  _BYTE *v406;
  uint64_t v407;
  _BYTE *v408;
  uint64_t v409;
  _QWORD *v410;
  _BYTE *v411;
  uint64_t v412;
  _BYTE *v413;
  _QWORD *v414;
  uint64_t v415;
  uint64_t v416;
  unsigned int (*v417)(_BYTE *, uint64_t, uint64_t);
  uint64_t v418;
  __int128 v419;
  uint64_t v420;
  _BYTE *v421;
  uint64_t v422;
  _QWORD *v423;
  _BYTE *v424;
  uint64_t v425;
  _BYTE *v426;
  int *v427;
  uint64_t v428;
  char *v429;
  char *v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  __int128 v434;
  uint64_t v435;
  char *v436;
  char *v437;
  uint64_t v438;
  unsigned int (**v439)(const void *, uint64_t, uint64_t);
  uint64_t v440;
  __int128 v441;
  uint64_t v442;
  _QWORD *v443;
  _QWORD *v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  int *v449;
  uint64_t v450;
  uint64_t v451;
  _QWORD *v452;
  uint64_t v453;
  uint64_t v454;
  _DWORD *v455;
  _DWORD *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  _BYTE *v461;
  uint64_t v462;
  _QWORD *v463;
  _BYTE *v464;
  uint64_t v465;
  _BYTE *v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  _QWORD *v470;
  uint64_t v471;
  uint64_t v472;
  _DWORD *v473;
  _DWORD *v474;
  uint64_t v475;
  uint64_t v476;
  unsigned int (*v477)(_DWORD *, uint64_t, uint64_t);
  uint64_t v478;
  _QWORD *v479;
  uint64_t v480;
  uint64_t v481;
  _DWORD *v482;
  _DWORD *v483;
  uint64_t v484;
  uint64_t v485;
  unsigned int (*v486)(_DWORD *, uint64_t, uint64_t);
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  _QWORD *v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  _QWORD *v496;
  __int128 v497;
  uint64_t v498;
  uint64_t v499;
  _OWORD *v500;
  _OWORD *v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  _DWORD *v507;
  _DWORD *v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  __int128 v512;
  uint64_t v513;
  char *v514;
  char *v515;
  uint64_t v516;
  uint64_t v517;
  _OWORD *v518;
  _OWORD *v519;
  uint64_t v520;
  unsigned int (**v521)(_OWORD *, uint64_t, uint64_t);
  uint64_t v522;
  uint64_t v523;
  char *v524;
  uint64_t v525;
  uint64_t v526;
  _BYTE *v527;
  _BYTE *v528;
  uint64_t v529;
  uint64_t v530;
  _QWORD *v531;
  uint64_t v532;
  uint64_t v533;
  char *v534;
  uint64_t v535;
  uint64_t v536;
  _BYTE *v537;
  _BYTE *v538;
  uint64_t v539;
  uint64_t v540;
  char *v541;
  uint64_t v542;
  uint64_t v543;
  _BYTE *v544;
  _BYTE *v545;
  uint64_t v546;
  uint64_t v547;
  char *v548;
  uint64_t v549;
  uint64_t v550;
  _BYTE *v551;
  _BYTE *v552;
  uint64_t v553;
  char *v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  _QWORD *v560;
  uint64_t v561;
  _BYTE *v562;
  _BYTE *v563;
  uint64_t v564;
  uint64_t v565;
  char *v566;
  uint64_t v567;
  uint64_t v568;
  char *v569;
  char *v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  _DWORD *v574;
  _DWORD *v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  _BYTE *v580;
  _BYTE *v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  _DWORD *v585;
  _DWORD *v586;
  uint64_t v587;
  uint64_t v588;
  _QWORD *v589;
  uint64_t v590;
  uint64_t v591;
  unsigned int (**v592)(void *, uint64_t, uint64_t);
  uint64_t v593;
  char *v594;
  char *v595;
  uint64_t v596;
  char *v597;
  uint64_t v598;
  uint64_t v599;
  _BYTE *v600;
  _BYTE *v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  char *v606;
  char *v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  char *v611;
  _BYTE *v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  __int128 v616;
  uint64_t v617;
  _QWORD *v618;
  _QWORD *v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  char *v625;
  char *v626;
  uint64_t v627;
  char *v628;
  uint64_t v629;
  uint64_t v630;
  _DWORD *v631;
  _DWORD *v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  char *v636;
  char *v637;
  uint64_t v638;
  char *v639;
  uint64_t v640;
  uint64_t v641;
  _DWORD *v642;
  _DWORD *v643;
  uint64_t v644;
  uint64_t v645;
  _BYTE *v646;
  uint64_t v647;
  _QWORD *v648;
  _BYTE *v649;
  uint64_t v650;
  _BYTE *v651;
  uint64_t v652;
  uint64_t v653;
  _QWORD *v654;
  _QWORD *v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  _QWORD *v660;
  _BYTE *v661;
  _BYTE *v662;
  uint64_t v663;
  _BYTE *v664;
  uint64_t v665;
  uint64_t v666;
  _DWORD *v667;
  _DWORD *v668;
  uint64_t v669;
  uint64_t v670;
  unsigned int (*v671)(_DWORD *, uint64_t, uint64_t);
  uint64_t v672;
  __int128 v673;
  uint64_t v674;
  char *v675;
  uint64_t v676;
  uint64_t v677;
  _BYTE *v678;
  _BYTE *v679;
  uint64_t v680;
  uint64_t v681;
  char *v682;
  char *v683;
  uint64_t v684;
  uint64_t v685;
  char *v686;
  _BYTE *v687;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  _OWORD *v692;
  _DWORD *v693;
  _DWORD *v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  char *v699;
  char *v700;
  uint64_t v701;
  char *v702;
  uint64_t v703;
  _BYTE *v704;
  _BYTE *v705;
  uint64_t v706;
  uint64_t v707;
  char *v708;
  char *v709;
  uint64_t v710;
  uint64_t v711;
  _BYTE *v712;
  _BYTE *v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  _BYTE *v717;
  uint64_t v718;
  char *v719;
  char *v720;
  uint64_t v721;
  char *v722;
  _QWORD *v723;
  uint64_t v724;
  _BYTE *v725;
  _BYTE *v726;
  uint64_t v727;
  uint64_t v728;
  char *v729;
  char *v730;
  uint64_t v731;
  char *v732;
  uint64_t v733;
  _BYTE *v734;
  _BYTE *v735;
  uint64_t v736;
  uint64_t v737;
  char *v738;
  char *v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  _DWORD *v743;
  _DWORD *v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  char *v750;
  char *v751;
  uint64_t v752;
  char *v753;
  uint64_t v754;
  uint64_t v755;
  _DWORD *v756;
  _DWORD *v757;
  uint64_t v758;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v760;
  uint64_t v761;
  _BYTE *v762;
  uint64_t v763;
  char *v764;
  char *v765;
  uint64_t v766;
  char *v767;
  uint64_t v768;
  _BYTE *v769;
  _BYTE *v770;
  uint64_t v771;
  uint64_t v772;
  char *v773;
  char *v774;
  uint64_t v775;
  char *v776;
  uint64_t v777;
  _BYTE *v778;
  _BYTE *v779;
  uint64_t v780;
  __int128 v781;
  uint64_t v782;
  _QWORD *v783;
  char *v784;
  char *v785;
  uint64_t v786;
  char *v787;
  uint64_t v788;
  uint64_t v789;
  _OWORD *v790;
  _OWORD *v791;
  uint64_t v792;
  unsigned int (**v793)(_OWORD *, uint64_t, uint64_t);
  uint64_t v794;
  int *v795;
  int *v796;
  uint64_t v797;
  _DWORD *v798;
  _DWORD *v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  _BYTE *v804;
  _QWORD *v805;
  _BYTE *v806;
  uint64_t v807;
  _BYTE *v808;
  int *v809;
  uint64_t v810;
  char *v811;
  char *v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  __int128 v816;
  uint64_t v817;
  _BYTE *v818;
  _QWORD *v819;
  _BYTE *v820;
  uint64_t v821;
  _BYTE *v822;
  int *v823;
  int *v824;
  uint64_t v825;
  _DWORD *v826;
  _DWORD *v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  int *v831;
  __int128 v832;
  __int128 v833;
  uint64_t v834;
  uint64_t v835;
  _DWORD *v836;
  _DWORD *v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  int *v841;
  uint64_t v842;
  uint64_t v843;
  _DWORD *v844;
  _DWORD *v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  _QWORD *v850;
  uint64_t v851;
  _QWORD *v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  __int128 v857;
  uint64_t v858;
  _BYTE *v859;
  _QWORD *v860;
  _BYTE *v861;
  uint64_t v862;
  _BYTE *v863;
  __int128 v864;
  uint64_t v865;
  uint64_t v866;
  _BYTE *v867;
  _BYTE *v868;
  uint64_t v869;
  uint64_t v870;
  uint64_t v871;
  int *v872;
  uint64_t v873;
  uint64_t v874;
  _DWORD *v875;
  _DWORD *v876;
  uint64_t v877;
  uint64_t v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  _QWORD *v882;
  _QWORD *v883;
  uint64_t v884;
  uint64_t v885;
  _QWORD *v886;
  uint64_t v887;
  uint64_t v888;
  _BYTE *v889;
  _QWORD *v890;
  _BYTE *v891;
  uint64_t v892;
  _BYTE *v893;
  uint64_t v894;
  uint64_t v895;
  _BYTE *v896;
  _QWORD *v897;
  _BYTE *v898;
  uint64_t v899;
  _BYTE *v900;
  uint64_t v901;
  _BYTE *v902;
  _QWORD *v903;
  _BYTE *v904;
  uint64_t v905;
  _BYTE *v906;
  uint64_t v907;
  _BYTE *v908;
  _QWORD *v909;
  _BYTE *v910;
  uint64_t v911;
  _BYTE *v912;
  uint64_t v913;
  _BYTE *v914;
  _QWORD *v915;
  _BYTE *v916;
  uint64_t v917;
  _BYTE *v918;
  _QWORD *v919;
  uint64_t v920;
  uint64_t v921;
  unsigned int (*v922)(_BYTE *, uint64_t, uint64_t);
  uint64_t v923;
  __int128 v924;
  uint64_t v925;
  _BYTE *v926;
  _QWORD *v927;
  _BYTE *v928;
  uint64_t v929;
  _BYTE *v930;
  int *v931;
  uint64_t v932;
  char *v933;
  char *v934;
  uint64_t v935;
  uint64_t v936;
  uint64_t v937;
  __int128 v938;
  uint64_t v939;
  char *v940;
  char *v941;
  uint64_t v942;
  uint64_t v943;
  __int128 v944;
  uint64_t v945;
  _QWORD *v946;
  _QWORD *v947;
  uint64_t v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  _DWORD *v956;
  _DWORD *v957;
  uint64_t v958;
  uint64_t v959;
  _QWORD *v960;
  uint64_t v961;
  uint64_t v962;
  _BYTE *v963;
  _QWORD *v964;
  _BYTE *v965;
  uint64_t v966;
  _BYTE *v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  int *v971;
  uint64_t v972;
  _DWORD *v973;
  _DWORD *v974;
  uint64_t v975;
  uint64_t v976;
  unsigned int (*v977)(_DWORD *, uint64_t, uint64_t);
  uint64_t v978;
  int *v979;
  uint64_t v980;
  _DWORD *v981;
  _DWORD *v982;
  uint64_t v983;
  uint64_t v984;
  unsigned int (*v985)(_DWORD *, uint64_t, uint64_t);
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  int *v989;
  _QWORD *v990;
  uint64_t v991;
  uint64_t v992;
  uint64_t v993;
  _QWORD *v994;
  uint64_t v995;
  _QWORD *v996;
  __int128 v997;
  uint64_t v998;
  uint64_t v999;
  _OWORD *v1000;
  _OWORD *v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  _DWORD *v1006;
  _DWORD *v1007;
  uint64_t v1008;
  uint64_t v1009;
  uint64_t v1010;
  uint64_t v1011;
  char *v1012;
  uint64_t v1013;
  uint64_t v1014;
  _BYTE *v1015;
  _BYTE *v1016;
  uint64_t v1017;
  uint64_t v1018;
  _QWORD *v1019;
  uint64_t v1020;
  uint64_t v1021;
  char *v1022;
  uint64_t v1023;
  uint64_t v1024;
  _BYTE *v1025;
  _BYTE *v1026;
  uint64_t v1027;
  uint64_t v1028;
  char *v1029;
  uint64_t v1030;
  uint64_t v1031;
  _BYTE *v1032;
  _BYTE *v1033;
  uint64_t v1034;
  uint64_t v1035;
  char *v1036;
  uint64_t v1037;
  uint64_t v1038;
  _BYTE *v1039;
  _BYTE *v1040;
  uint64_t v1041;
  char *v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  _BYTE *v1046;
  uint64_t v1047;
  uint64_t v1048;
  _QWORD *v1049;
  uint64_t v1050;
  uint64_t v1051;
  char *v1052;
  uint64_t v1053;
  uint64_t v1054;
  char *v1055;
  char *v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  _DWORD *v1060;
  _DWORD *v1061;
  uint64_t v1062;
  uint64_t v1063;
  uint64_t v1064;
  uint64_t v1065;
  _BYTE *v1066;
  _BYTE *v1067;
  uint64_t v1068;
  uint64_t v1069;
  uint64_t v1070;
  _DWORD *v1071;
  _DWORD *v1072;
  uint64_t v1073;
  uint64_t v1074;
  _QWORD *v1075;
  uint64_t v1076;
  uint64_t v1077;
  uint64_t v1078;
  uint64_t v1079;
  uint64_t v1080;
  char *v1081;
  uint64_t v1082;
  uint64_t v1083;
  _BYTE *v1084;
  _BYTE *v1085;
  uint64_t v1086;
  uint64_t v1087;
  uint64_t v1088;
  uint64_t v1089;
  char *v1090;
  char *v1091;
  uint64_t v1092;
  uint64_t v1093;
  uint64_t v1094;
  char *v1095;
  char *v1096;
  uint64_t v1097;
  unsigned int (**v1098)(const void *, uint64_t, uint64_t);
  uint64_t v1099;
  __int128 v1100;
  uint64_t v1101;
  _QWORD *v1102;
  _QWORD *v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  uint64_t v1107;
  uint64_t v1108;
  char *v1109;
  char *v1110;
  uint64_t v1111;
  char *v1112;
  uint64_t v1113;
  uint64_t v1114;
  _DWORD *v1115;
  _DWORD *v1116;
  uint64_t v1117;
  uint64_t v1118;
  uint64_t v1119;
  char *v1120;
  char *v1121;
  uint64_t v1122;
  char *v1123;
  uint64_t v1124;
  uint64_t v1125;
  _DWORD *v1126;
  _DWORD *v1127;
  uint64_t v1128;
  uint64_t v1129;
  _BYTE *v1130;
  uint64_t v1131;
  _QWORD *v1132;
  _BYTE *v1133;
  uint64_t v1134;
  _BYTE *v1135;
  uint64_t v1136;
  uint64_t v1137;
  _QWORD *v1138;
  _QWORD *v1139;
  uint64_t v1140;
  uint64_t v1141;
  uint64_t v1142;
  uint64_t v1143;
  _QWORD *v1144;
  _BYTE *v1145;
  _BYTE *v1146;
  uint64_t v1147;
  _BYTE *v1148;
  uint64_t v1149;
  uint64_t v1150;
  _DWORD *v1151;
  _DWORD *v1152;
  uint64_t v1153;
  uint64_t v1154;
  unsigned int (*v1155)(_DWORD *, uint64_t, uint64_t);
  uint64_t v1156;
  __int128 v1157;
  uint64_t v1158;
  char *v1159;
  char *v1160;
  uint64_t v1161;
  uint64_t v1162;
  _BYTE *v1163;
  _BYTE *v1164;
  uint64_t v1165;
  uint64_t v1166;
  char *v1167;
  char *v1168;
  uint64_t v1169;
  uint64_t v1170;
  char *v1171;
  char *v1172;
  uint64_t v1173;
  uint64_t v1174;
  uint64_t v1175;
  char *v1176;
  __int128 v1177;
  uint64_t v1178;
  uint64_t v1179;
  uint64_t v1180;
  _BYTE *v1181;
  _BYTE *v1182;
  uint64_t v1183;
  uint64_t v1184;
  _BYTE *v1185;
  _BYTE *v1186;
  uint64_t v1187;
  int EnumCaseMultiPayload;
  uint64_t v1189;
  _BYTE *v1190;
  _BYTE *v1191;
  uint64_t v1192;
  void *v1193;
  char *v1194;
  uint64_t v1195;
  uint64_t v1196;
  char *v1197;
  uint64_t v1198;
  char *v1199;
  char *v1200;
  uint64_t v1201;
  int *v1202;
  uint64_t v1203;
  _OWORD *v1204;
  _OWORD *v1205;
  uint64_t v1206;
  unsigned int (**v1207)(_OWORD *, uint64_t, uint64_t);
  uint64_t v1208;
  uint64_t v1209;
  char *v1210;
  uint64_t v1211;
  uint64_t v1212;
  char *v1213;
  char *v1214;
  uint64_t v1215;
  uint64_t v1216;
  _BYTE *v1217;
  _BYTE *v1218;
  uint64_t v1219;
  char *v1220;
  char *v1221;
  uint64_t v1222;
  _DWORD *v1223;
  _DWORD *v1224;
  uint64_t v1225;
  uint64_t v1226;
  uint64_t v1227;
  uint64_t v1228;
  char *v1229;
  char *v1230;
  uint64_t v1231;
  char *v1232;
  uint64_t v1233;
  _BYTE *v1234;
  _BYTE *v1235;
  uint64_t v1236;
  uint64_t v1237;
  char *v1238;
  char *v1239;
  uint64_t v1240;
  uint64_t v1241;
  _BYTE *v1242;
  _BYTE *v1243;
  uint64_t v1244;
  uint64_t v1245;
  uint64_t v1246;
  uint64_t v1247;
  char *v1248;
  char *v1249;
  uint64_t v1250;
  char *v1251;
  uint64_t v1252;
  _BYTE *v1253;
  _BYTE *v1254;
  uint64_t v1255;
  uint64_t v1256;
  char *v1257;
  char *v1258;
  uint64_t v1259;
  char *v1260;
  uint64_t v1261;
  _BYTE *v1262;
  _BYTE *v1263;
  uint64_t v1264;
  uint64_t v1265;
  char *v1266;
  char *v1267;
  uint64_t v1268;
  uint64_t v1269;
  uint64_t v1270;
  _DWORD *v1271;
  _DWORD *v1272;
  uint64_t v1273;
  uint64_t v1274;
  uint64_t v1275;
  uint64_t v1276;
  uint64_t v1277;
  char *v1278;
  char *v1279;
  uint64_t v1280;
  char *v1281;
  uint64_t v1282;
  uint64_t v1283;
  _DWORD *v1284;
  _DWORD *v1285;
  uint64_t v1286;
  uint64_t v1287;
  uint64_t v1288;
  __int128 v1289;
  __int128 v1290;
  uint64_t v1291;
  _OWORD *v1292;
  uint64_t v1293;
  uint64_t v1294;
  uint64_t v1295;
  uint64_t v1296;
  char *v1297;
  char *v1298;
  uint64_t v1299;
  char *v1300;
  uint64_t v1301;
  _BYTE *v1302;
  _BYTE *v1303;
  uint64_t v1304;
  uint64_t v1305;
  char *v1306;
  char *v1307;
  uint64_t v1308;
  char *v1309;
  uint64_t v1310;
  _BYTE *v1311;
  _BYTE *v1312;
  uint64_t v1313;
  __int128 v1314;
  uint64_t v1315;
  char *v1316;
  char *v1317;
  uint64_t v1318;
  uint64_t v1319;
  uint64_t v1320;
  _OWORD *v1321;
  _OWORD *v1322;
  uint64_t v1323;
  uint64_t v1324;
  uint64_t v1325;
  uint64_t v1326;
  char *v1327;
  char *v1328;
  uint64_t v1329;
  uint64_t v1330;
  _BYTE *v1331;
  _BYTE *v1332;
  uint64_t v1333;
  _QWORD *v1334;
  uint64_t v1335;
  uint64_t v1336;
  uint64_t v1337;
  char *v1338;
  char *v1339;
  uint64_t v1340;
  uint64_t v1341;
  _BYTE *v1342;
  _BYTE *v1343;
  uint64_t v1344;
  uint64_t v1345;
  char *v1346;
  char *v1347;
  uint64_t v1348;
  uint64_t v1349;
  _BYTE *v1350;
  _BYTE *v1351;
  uint64_t v1352;
  uint64_t v1353;
  char *v1354;
  char *v1355;
  uint64_t v1356;
  uint64_t v1357;
  _BYTE *v1358;
  _BYTE *v1359;
  uint64_t v1360;
  char *v1361;
  _QWORD *v1362;
  uint64_t v1363;
  uint64_t v1364;
  uint64_t v1365;
  uint64_t v1366;
  _QWORD *v1367;
  uint64_t v1368;
  uint64_t v1369;
  uint64_t v1370;
  uint64_t v1371;
  char *v1372;
  char *v1373;
  uint64_t v1374;
  uint64_t v1375;
  char *v1376;
  char *v1377;
  uint64_t v1378;
  uint64_t v1379;
  uint64_t v1380;
  _DWORD *v1381;
  _DWORD *v1382;
  uint64_t v1383;
  uint64_t v1384;
  uint64_t v1385;
  uint64_t v1386;
  _BYTE *v1387;
  _BYTE *v1388;
  uint64_t v1389;
  uint64_t v1390;
  uint64_t v1391;
  _DWORD *v1392;
  _DWORD *v1393;
  uint64_t v1394;
  uint64_t v1395;
  _QWORD *v1396;
  uint64_t v1397;
  uint64_t v1398;
  uint64_t v1399;
  uint64_t v1400;
  uint64_t v1401;
  char *v1402;
  char *v1403;
  uint64_t v1404;
  uint64_t v1405;
  char *v1406;
  char *v1407;
  uint64_t v1408;
  uint64_t v1409;
  _BYTE *v1410;
  _BYTE *v1411;
  uint64_t v1412;
  _QWORD *v1413;
  uint64_t v1414;
  uint64_t v1415;
  uint64_t v1416;
  char *v1417;
  char *v1418;
  uint64_t v1419;
  uint64_t v1420;
  uint64_t v1421;
  char *v1422;
  char *v1423;
  uint64_t v1424;
  uint64_t v1425;
  uint64_t v1426;
  __int128 v1427;
  uint64_t v1428;
  _BYTE *v1429;
  _QWORD *v1430;
  _QWORD *v1431;
  uint64_t v1432;
  uint64_t v1433;
  uint64_t v1434;
  uint64_t v1435;
  char *v1436;
  char *v1437;
  uint64_t v1438;
  uint64_t v1439;
  _DWORD *v1440;
  _DWORD *v1441;
  uint64_t v1442;
  uint64_t v1443;
  char *v1444;
  char *v1445;
  uint64_t v1446;
  uint64_t v1447;
  _DWORD *v1448;
  _DWORD *v1449;
  uint64_t v1450;
  uint64_t v1451;
  _BYTE *v1452;
  _BYTE *v1453;
  uint64_t v1454;
  uint64_t v1455;
  uint64_t v1456;
  _QWORD *v1457;
  _QWORD *v1458;
  uint64_t v1459;
  uint64_t v1460;
  uint64_t v1461;
  uint64_t v1462;
  _BYTE *v1463;
  _BYTE *v1464;
  uint64_t v1465;
  int *v1466;
  uint64_t v1467;
  _DWORD *v1468;
  _DWORD *v1469;
  uint64_t v1470;
  uint64_t v1471;
  unsigned int (*v1472)(_DWORD *, uint64_t, uint64_t);
  uint64_t v1473;
  __int128 v1474;
  uint64_t v1475;
  char *v1476;
  char *v1477;
  uint64_t v1478;
  uint64_t v1479;
  _BYTE *v1480;
  _BYTE *v1481;
  uint64_t v1482;
  uint64_t v1483;
  char *v1484;
  char *v1485;
  uint64_t v1486;
  uint64_t v1487;
  char *v1488;
  char *v1489;
  uint64_t v1490;
  uint64_t v1491;
  uint64_t v1492;
  char *v1493;
  __int128 v1494;
  uint64_t v1495;
  _BYTE *v1496;
  uint64_t v1497;
  uint64_t v1498;
  _BYTE *v1499;
  _BYTE *v1500;
  uint64_t v1501;
  uint64_t v1502;
  _BYTE *v1503;
  _BYTE *v1504;
  uint64_t v1505;
  uint64_t v1506;
  _QWORD *v1507;
  int v1508;
  uint64_t v1509;
  _BYTE *v1510;
  uint64_t v1511;
  char *v1512;
  uint64_t v1513;
  uint64_t v1514;
  _QWORD *v1515;
  uint64_t v1516;
  uint64_t v1517;
  char *v1518;
  uint64_t v1519;
  char *v1520;
  char *v1521;
  uint64_t v1522;
  int *v1523;
  uint64_t v1524;
  _OWORD *v1525;
  _OWORD *v1526;
  uint64_t v1527;
  unsigned int (**v1528)(_OWORD *, uint64_t, uint64_t);
  uint64_t v1529;
  char *v1530;
  uint64_t v1531;
  char *v1532;
  uint64_t v1533;
  uint64_t v1534;
  char *v1535;
  char *v1536;
  uint64_t v1537;
  uint64_t v1538;
  _BYTE *v1539;
  _BYTE *v1540;
  uint64_t v1541;
  char *v1542;
  char *v1543;
  uint64_t v1544;
  char *v1545;
  uint64_t v1546;
  uint64_t v1547;
  char *v1548;
  char *v1549;
  uint64_t v1550;
  uint64_t v1551;
  _OWORD *v1552;
  _OWORD *v1553;
  uint64_t v1554;
  uint64_t v1555;
  uint64_t v1556;
  __int128 v1557;
  uint64_t v1558;
  char *v1559;
  char *v1560;
  uint64_t v1561;
  int *v1562;
  uint64_t v1563;
  _OWORD *v1564;
  _OWORD *v1565;
  uint64_t v1566;
  unsigned int (**v1567)(_OWORD *, uint64_t, uint64_t);
  uint64_t v1568;
  uint64_t v1569;
  uint64_t v1570;
  uint64_t v1571;
  uint64_t v1572;
  _OWORD *v1573;
  _DWORD *v1574;
  _DWORD *v1575;
  uint64_t v1576;
  uint64_t v1577;
  uint64_t v1578;
  uint64_t v1579;
  char *v1580;
  char *v1581;
  uint64_t v1582;
  char *v1583;
  uint64_t v1584;
  _BYTE *v1585;
  _BYTE *v1586;
  uint64_t v1587;
  uint64_t v1588;
  char *v1589;
  char *v1590;
  uint64_t v1591;
  uint64_t v1592;
  _BYTE *v1593;
  _BYTE *v1594;
  uint64_t v1595;
  uint64_t v1596;
  _QWORD *v1597;
  uint64_t v1598;
  uint64_t v1599;
  uint64_t v1600;
  char *v1601;
  char *v1602;
  uint64_t v1603;
  uint64_t v1604;
  _BYTE *v1605;
  _BYTE *v1606;
  uint64_t v1607;
  uint64_t v1608;
  char *v1609;
  char *v1610;
  uint64_t v1611;
  uint64_t v1612;
  _BYTE *v1613;
  _BYTE *v1614;
  uint64_t v1615;
  uint64_t v1616;
  char *v1617;
  char *v1618;
  uint64_t v1619;
  uint64_t v1620;
  uint64_t v1621;
  _DWORD *v1622;
  _DWORD *v1623;
  uint64_t v1624;
  uint64_t v1625;
  uint64_t v1626;
  uint64_t v1627;
  char *v1628;
  char *v1629;
  uint64_t v1630;
  uint64_t v1631;
  _DWORD *v1632;
  _DWORD *v1633;
  uint64_t v1634;
  uint64_t v1635;
  _QWORD *v1636;
  uint64_t v1637;
  uint64_t v1638;
  uint64_t v1639;
  __int128 v1640;
  __int128 v1641;
  uint64_t v1642;
  uint64_t v1643;
  _OWORD *v1644;
  _OWORD *v1645;
  uint64_t v1646;
  uint64_t v1647;
  uint64_t v1648;
  uint64_t v1649;
  uint64_t v1650;
  uint64_t v1651;
  char *v1652;
  uint64_t v1653;
  uint64_t v1654;
  char *v1655;
  char *v1656;
  uint64_t v1657;
  char *v1658;
  uint64_t v1659;
  _BYTE *v1660;
  _BYTE *v1661;
  uint64_t v1662;
  uint64_t v1663;
  char *v1664;
  char *v1665;
  uint64_t v1666;
  uint64_t v1667;
  _BYTE *v1668;
  _BYTE *v1669;
  uint64_t v1670;
  uint64_t v1671;
  uint64_t v1672;
  _BYTE *v1673;
  _BYTE *v1674;
  uint64_t v1675;
  void (**v1676)(_BYTE *, _QWORD, uint64_t, void *);
  uint64_t v1677;
  _BYTE *v1678;
  _BYTE *v1679;
  uint64_t v1680;
  uint64_t v1681;
  _DWORD *v1682;
  uint64_t v1683;
  uint64_t v1684;
  uint64_t v1685;
  uint64_t v1686;
  _QWORD *v1687;
  char *v1688;
  char *v1689;
  uint64_t v1690;
  char *v1691;
  uint64_t v1692;
  _BYTE *v1693;
  _BYTE *v1694;
  uint64_t v1695;
  uint64_t v1696;
  _QWORD *v1697;
  uint64_t v1698;
  uint64_t v1699;
  void *v1700;
  uint64_t v1701;
  _QWORD *v1702;
  _QWORD *v1703;
  _QWORD *v1704;
  int v1705;
  uint64_t v1706;
  _QWORD *v1707;
  uint64_t v1708;
  uint64_t v1709;
  _DWORD *v1710;
  _QWORD *v1711;
  _DWORD *v1712;
  uint64_t v1713;
  uint64_t v1714;
  uint64_t v1715;
  char *v1716;
  char *v1717;
  uint64_t v1718;
  char *v1719;
  uint64_t v1720;
  char *v1721;
  char *v1722;
  uint64_t v1723;
  uint64_t v1724;
  _OWORD *v1725;
  _OWORD *v1726;
  uint64_t v1727;
  _QWORD *v1728;
  unsigned int (*v1729)(_QWORD, _QWORD, _QWORD);
  uint64_t v1730;
  __int128 v1731;
  uint64_t v1732;
  _OWORD *v1733;
  _OWORD *v1734;
  uint64_t v1735;
  uint64_t v1736;
  uint64_t v1737;
  uint64_t v1738;
  char *v1739;
  uint64_t v1740;
  uint64_t v1741;
  char *v1742;
  char *v1743;
  uint64_t v1744;
  char *v1745;
  uint64_t v1746;
  _OWORD *v1747;
  _OWORD *v1748;
  uint64_t v1749;
  __int128 v1750;
  uint64_t v1751;
  _OWORD *v1752;
  _OWORD *v1753;
  uint64_t v1754;
  uint64_t v1755;
  uint64_t v1756;
  uint64_t v1757;
  char *v1758;
  uint64_t v1759;
  uint64_t v1760;
  char *v1761;
  char *v1762;
  uint64_t v1763;
  uint64_t v1764;
  _BYTE *v1765;
  _BYTE *v1766;
  uint64_t v1767;
  int *v1768;
  uint64_t v1769;
  _DWORD *v1770;
  _DWORD *v1771;
  uint64_t v1772;
  uint64_t v1773;
  uint64_t v1774;
  uint64_t v1775;
  char *v1776;
  char *v1777;
  uint64_t v1778;
  uint64_t v1779;
  _DWORD *v1780;
  _DWORD *v1781;
  uint64_t v1782;
  uint64_t v1783;
  char *v1784;
  char *v1785;
  uint64_t v1786;
  char *v1787;
  uint64_t v1788;
  _BYTE *v1789;
  _BYTE *v1790;
  uint64_t v1791;
  uint64_t v1792;
  char *v1793;
  char *v1794;
  _BYTE *v1795;
  uint64_t v1796;
  char *v1797;
  __int128 v1798;
  uint64_t v1799;
  _BYTE *v1800;
  uint64_t v1801;
  uint64_t v1802;
  _BYTE *v1803;
  _BYTE *v1804;
  uint64_t v1805;
  uint64_t v1806;
  _BYTE *v1807;
  _BYTE *v1808;
  uint64_t v1809;
  int v1810;
  uint64_t v1811;
  uint64_t v1812;
  char *v1813;
  uint64_t v1814;
  char *v1815;
  uint64_t v1816;
  char *v1817;
  char *v1818;
  uint64_t v1819;
  uint64_t v1820;
  _OWORD *v1821;
  _OWORD *v1822;
  uint64_t v1823;
  uint64_t v1824;
  uint64_t v1825;
  char *v1826;
  uint64_t v1827;
  char *v1828;
  uint64_t v1829;
  uint64_t v1830;
  char *v1831;
  char *v1832;
  uint64_t v1833;
  uint64_t v1834;
  _BYTE *v1835;
  _BYTE *v1836;
  uint64_t v1837;
  char *v1838;
  char *v1839;
  uint64_t v1840;
  char *v1841;
  uint64_t v1842;
  uint64_t v1843;
  char *v1844;
  char *v1845;
  uint64_t v1846;
  uint64_t v1847;
  _OWORD *v1848;
  _OWORD *v1849;
  uint64_t v1850;
  uint64_t v1851;
  uint64_t v1852;
  __int128 v1853;
  uint64_t v1854;
  char *v1855;
  char *v1856;
  uint64_t v1857;
  int *v1858;
  uint64_t v1859;
  _OWORD *v1860;
  _OWORD *v1861;
  uint64_t v1862;
  uint64_t v1863;
  uint64_t v1864;
  uint64_t v1865;
  uint64_t v1866;
  uint64_t v1867;
  uint64_t v1868;
  uint64_t v1869;
  __int128 v1870;
  __int128 v1871;
  uint64_t v1872;
  _OWORD *v1873;
  _OWORD *v1874;
  uint64_t v1875;
  uint64_t v1876;
  uint64_t v1877;
  uint64_t v1878;
  uint64_t v1879;
  uint64_t v1880;
  char *v1881;
  char *v1882;
  uint64_t v1883;
  uint64_t v1884;
  char *v1885;
  char *v1886;
  uint64_t v1887;
  uint64_t v1888;
  char *v1889;
  char *v1890;
  uint64_t v1891;
  uint64_t v1892;
  _BYTE *v1893;
  _BYTE *v1894;
  uint64_t v1895;
  uint64_t v1896;
  uint64_t v1897;
  _BYTE *v1898;
  uint64_t v1899;
  uint64_t v1900;
  _BYTE *v1901;
  _BYTE *v1902;
  uint64_t v1903;
  uint64_t v1904;
  _DWORD *v1905;
  _DWORD *v1906;
  uint64_t v1907;
  uint64_t v1908;
  uint64_t v1909;
  uint64_t v1910;
  _QWORD *v1911;
  char *v1912;
  char *v1913;
  uint64_t v1914;
  char *v1915;
  uint64_t v1916;
  uint64_t v1917;
  _QWORD *v1918;
  _QWORD *v1919;
  uint64_t v1920;
  unsigned int (**v1921)(_QWORD *, uint64_t, uint64_t);
  uint64_t v1922;
  uint64_t v1923;
  uint64_t v1924;
  char *v1925;
  uint64_t v1926;
  _QWORD *v1927;
  uint64_t v1928;
  _QWORD *v1929;
  int v1930;
  uint64_t v1931;
  _DWORD *v1932;
  char *v1933;
  uint64_t v1934;
  uint64_t v1935;
  char *v1936;
  char *v1937;
  uint64_t v1938;
  char *v1939;
  uint64_t v1940;
  _BYTE *v1941;
  _BYTE *v1942;
  uint64_t v1943;
  uint64_t v1944;
  char *v1945;
  _OWORD *v1946;
  char *v1947;
  uint64_t v1948;
  uint64_t v1949;
  _OWORD *v1950;
  _OWORD *v1951;
  uint64_t v1952;
  _QWORD *v1953;
  uint64_t v1954;
  uint64_t v1955;
  __int128 v1956;
  uint64_t v1957;
  uint64_t v1958;
  _OWORD *v1959;
  _OWORD *v1960;
  uint64_t v1961;
  uint64_t v1962;
  uint64_t v1963;
  uint64_t v1964;
  char *v1965;
  uint64_t v1966;
  uint64_t v1967;
  char *v1968;
  char *v1969;
  uint64_t v1970;
  char *v1971;
  uint64_t v1972;
  _OWORD *v1973;
  _OWORD *v1974;
  uint64_t v1975;
  uint64_t v1976;
  __int128 v1977;
  uint64_t v1978;
  uint64_t v1979;
  _OWORD *v1980;
  _OWORD *v1981;
  uint64_t v1982;
  uint64_t v1983;
  uint64_t v1984;
  uint64_t v1985;
  char *v1986;
  uint64_t v1987;
  uint64_t v1988;
  char *v1989;
  char *v1990;
  uint64_t v1991;
  uint64_t v1992;
  _BYTE *v1993;
  _BYTE *v1994;
  uint64_t v1995;
  uint64_t v1996;
  uint64_t v1997;
  _DWORD *v1998;
  _DWORD *v1999;
  uint64_t v2000;
  uint64_t v2001;
  unsigned int (*v2002)(_DWORD *, uint64_t, uint64_t);
  uint64_t v2003;
  uint64_t v2004;
  uint64_t v2005;
  char *v2006;
  char *v2007;
  uint64_t v2008;
  char *v2009;
  uint64_t v2010;
  uint64_t v2011;
  _DWORD *v2012;
  _DWORD *v2013;
  uint64_t v2014;
  uint64_t v2015;
  char *v2016;
  char *v2017;
  uint64_t v2018;
  char *v2019;
  uint64_t v2020;
  _BYTE *v2021;
  _BYTE *v2022;
  uint64_t v2023;
  uint64_t v2024;
  char *v2025;
  char *v2026;
  char *v2027;
  uint64_t v2028;
  char *v2029;
  uint64_t v2030;
  char *v2031;
  char *v2032;
  uint64_t v2033;
  uint64_t v2034;
  char *v2035;
  char *v2036;
  uint64_t v2037;
  uint64_t v2038;
  _OWORD *v2039;
  _OWORD *v2040;
  uint64_t v2041;
  uint64_t v2042;
  uint64_t v2043;
  __int128 v2044;
  uint64_t v2045;
  char *v2046;
  char *v2047;
  uint64_t v2048;
  uint64_t v2049;
  _OWORD *v2050;
  _OWORD *v2051;
  uint64_t v2052;
  uint64_t v2053;
  uint64_t v2054;
  uint64_t v2055;
  uint64_t v2056;
  uint64_t v2057;
  uint64_t v2058;
  char *v2059;
  char *v2060;
  uint64_t v2061;
  uint64_t v2062;
  char *v2063;
  uint64_t v2064;
  uint64_t v2065;
  char *v2066;
  char *v2067;
  uint64_t v2068;
  char *v2069;
  uint64_t v2070;
  char *v2071;
  char *v2072;
  uint64_t v2073;
  uint64_t v2074;
  _BYTE *v2075;
  _BYTE *v2076;
  uint64_t v2077;
  uint64_t v2078;
  uint64_t v2079;
  uint64_t v2080;
  uint64_t v2081;
  _BYTE *v2082;
  _BYTE *v2083;
  uint64_t v2084;
  uint64_t v2085;
  _DWORD *v2086;
  _DWORD *v2087;
  uint64_t v2088;
  uint64_t v2089;
  unsigned int (*v2090)(_DWORD *, uint64_t, uint64_t);
  _QWORD *v2091;
  uint64_t v2092;
  uint64_t v2093;
  char *v2094;
  char *v2095;
  uint64_t v2096;
  uint64_t v2097;
  uint64_t v2098;
  _QWORD *v2099;
  _QWORD *v2100;
  uint64_t v2101;
  uint64_t v2102;
  _QWORD *v2103;
  uint64_t v2104;
  uint64_t v2105;
  uint64_t v2106;
  int v2107;
  uint64_t v2108;
  _DWORD *v2109;
  _DWORD *v2110;
  uint64_t v2111;
  uint64_t v2112;
  char *v2113;
  char *v2114;
  uint64_t v2115;
  uint64_t v2116;
  _BYTE *v2117;
  _BYTE *v2118;
  uint64_t v2119;
  uint64_t v2120;
  char *v2121;
  char *v2122;
  uint64_t v2123;
  uint64_t v2124;
  _OWORD *v2125;
  _OWORD *v2126;
  uint64_t v2127;
  uint64_t v2128;
  unsigned int (*v2129)(_OWORD *, uint64_t, uint64_t);
  uint64_t v2130;
  __int128 v2131;
  uint64_t v2132;
  _OWORD *v2133;
  _OWORD *v2134;
  uint64_t v2135;
  uint64_t v2136;
  uint64_t v2137;
  uint64_t v2138;
  char *v2139;
  uint64_t v2140;
  uint64_t v2141;
  char *v2142;
  char *v2143;
  uint64_t v2144;
  uint64_t v2145;
  _OWORD *v2146;
  _OWORD *v2147;
  uint64_t v2148;
  __int128 v2149;
  uint64_t v2150;
  _OWORD *v2151;
  _OWORD *v2152;
  uint64_t v2153;
  uint64_t v2154;
  uint64_t v2155;
  uint64_t v2156;
  char *v2157;
  char *v2158;
  uint64_t v2159;
  uint64_t v2160;
  char *v2161;
  char *v2162;
  uint64_t v2163;
  uint64_t v2164;
  _BYTE *v2165;
  char *v2166;
  uint64_t v2167;
  int *v2168;
  uint64_t v2169;
  _DWORD *v2170;
  _DWORD *v2171;
  uint64_t v2172;
  uint64_t v2173;
  unsigned int (*v2174)(_DWORD *, uint64_t, uint64_t);
  uint64_t v2175;
  uint64_t v2176;
  char *v2177;
  char *v2178;
  uint64_t v2179;
  uint64_t v2180;
  _DWORD *v2181;
  _DWORD *v2182;
  uint64_t v2183;
  uint64_t v2184;
  char *v2185;
  char *v2186;
  uint64_t v2187;
  uint64_t v2188;
  _BYTE *v2189;
  _BYTE *v2190;
  uint64_t v2191;
  uint64_t v2192;
  char *v2193;
  char *v2194;
  char *v2195;
  uint64_t v2196;
  uint64_t v2197;
  char *v2198;
  char *v2199;
  uint64_t v2200;
  uint64_t v2201;
  char *v2202;
  char *v2203;
  uint64_t v2204;
  uint64_t v2205;
  char *v2206;
  _QWORD *v2207;
  char *v2208;
  uint64_t v2209;
  uint64_t v2210;
  _BYTE *v2211;
  _BYTE *v2212;
  uint64_t v2213;
  uint64_t v2214;
  _BYTE *v2215;
  _BYTE *v2216;
  uint64_t v2217;
  uint64_t v2218;
  char *v2219;
  char *v2220;
  uint64_t v2221;
  uint64_t v2222;
  char *v2223;
  char *v2224;
  uint64_t v2225;
  uint64_t v2226;
  uint64_t v2227;
  uint64_t v2228;
  _QWORD *v2229;
  uint64_t v2230;
  char *v2231;
  uint64_t v2232;
  char *v2233;
  char *v2234;
  uint64_t v2235;
  uint64_t v2236;
  _QWORD *v2237;
  _QWORD *v2238;
  uint64_t v2239;
  uint64_t v2240;
  uint64_t v2241;
  uint64_t v2242;
  char *v2243;
  char *v2244;
  uint64_t v2245;
  uint64_t v2246;
  _BYTE *v2247;
  _BYTE *v2248;
  uint64_t v2249;
  uint64_t v2250;
  _BYTE *v2251;
  _BYTE *v2252;
  uint64_t v2253;
  int *v2254;
  uint64_t v2255;
  _QWORD *v2256;
  _QWORD *v2257;
  uint64_t v2258;
  uint64_t v2259;
  uint64_t v2260;
  uint64_t v2261;
  char *v2262;
  uint64_t v2263;
  uint64_t v2264;
  _BYTE *v2265;
  _BYTE *v2266;
  uint64_t v2267;
  uint64_t v2268;
  uint64_t v2269;
  char *v2270;
  char *v2271;
  uint64_t v2272;
  uint64_t v2273;
  char *v2274;
  char *v2275;
  uint64_t v2276;
  uint64_t v2277;
  uint64_t v2278;
  uint64_t v2279;
  _QWORD *v2280;
  uint64_t v2281;
  char *v2282;
  uint64_t v2283;
  char *v2284;
  char *v2285;
  uint64_t v2286;
  int *v2287;
  uint64_t v2288;
  _QWORD *v2289;
  _QWORD *v2290;
  uint64_t v2291;
  uint64_t v2292;
  uint64_t v2293;
  uint64_t v2294;
  char *v2295;
  char *v2296;
  uint64_t v2297;
  uint64_t v2298;
  _BYTE *v2299;
  _BYTE *v2300;
  uint64_t v2301;
  uint64_t v2302;
  _BYTE *v2303;
  _BYTE *v2304;
  uint64_t v2305;
  int *v2306;
  uint64_t v2307;
  _QWORD *v2308;
  _QWORD *v2309;
  uint64_t v2310;
  uint64_t v2311;
  uint64_t v2312;
  uint64_t v2313;
  char *v2314;
  uint64_t v2315;
  uint64_t v2316;
  _BYTE *v2317;
  _BYTE *v2318;
  uint64_t v2319;
  uint64_t v2320;
  char *v2321;
  char *v2322;
  uint64_t v2323;
  uint64_t v2324;
  char *v2325;
  char *v2326;
  uint64_t v2327;
  uint64_t v2328;
  uint64_t v2329;
  uint64_t v2330;
  _QWORD *v2331;
  uint64_t v2332;
  uint64_t v2333;
  char *v2334;
  uint64_t v2335;
  char *v2336;
  char *v2337;
  uint64_t v2338;
  int *v2339;
  uint64_t v2340;
  _QWORD *v2341;
  _QWORD *v2342;
  uint64_t v2343;
  uint64_t v2344;
  uint64_t v2345;
  uint64_t v2346;
  char *v2347;
  char *v2348;
  uint64_t v2349;
  uint64_t v2350;
  _BYTE *v2351;
  _BYTE *v2352;
  uint64_t v2353;
  uint64_t v2354;
  _BYTE *v2355;
  _BYTE *v2356;
  uint64_t v2357;
  int *v2358;
  uint64_t v2359;
  _QWORD *v2360;
  _QWORD *v2361;
  uint64_t v2362;
  uint64_t v2363;
  uint64_t v2364;
  uint64_t v2365;
  char *v2366;
  char *v2367;
  uint64_t v2368;
  uint64_t v2369;
  _BYTE *v2370;
  _BYTE *v2371;
  uint64_t v2372;
  uint64_t v2373;
  char *v2374;
  char *v2375;
  uint64_t v2376;
  uint64_t v2377;
  _QWORD *v2378;
  uint64_t v2379;
  unsigned int (**v2380)(_QWORD *, uint64_t, uint64_t);
  uint64_t v2381;
  uint64_t v2382;
  char *v2383;
  uint64_t v2384;
  uint64_t v2385;
  char *v2386;
  _QWORD *v2387;
  uint64_t v2388;
  uint64_t v2389;
  char *v2390;
  uint64_t v2391;
  char *v2392;
  char *v2393;
  uint64_t v2394;
  uint64_t v2395;
  char *v2396;
  char *v2397;
  uint64_t v2398;
  uint64_t v2399;
  uint64_t v2400;
  char *v2401;
  uint64_t v2402;
  char *v2403;
  char *v2404;
  uint64_t v2405;
  uint64_t v2406;
  char *v2407;
  char *v2408;
  uint64_t v2409;
  uint64_t v2410;
  _DWORD *v2411;
  _DWORD *v2412;
  uint64_t v2413;
  uint64_t v2414;
  uint64_t v2415;
  uint64_t v2416;
  char *v2417;
  char *v2418;
  uint64_t v2419;
  uint64_t v2420;
  _BYTE *v2421;
  _BYTE *v2422;
  uint64_t v2423;
  uint64_t v2424;
  char *v2425;
  uint64_t v2426;
  _BYTE *v2427;
  uint64_t v2428;
  uint64_t v2429;
  _BYTE *v2430;
  _BYTE *v2431;
  uint64_t v2432;
  uint64_t v2433;
  uint64_t v2434;
  char *v2435;
  char *v2436;
  uint64_t v2437;
  uint64_t v2438;
  _QWORD *v2439;
  _QWORD *v2440;
  uint64_t v2441;
  unsigned int (**v2442)(_QWORD *, uint64_t, uint64_t);
  uint64_t v2443;
  uint64_t v2444;
  char *v2445;
  char *v2446;
  uint64_t v2447;
  uint64_t v2448;
  uint64_t v2449;
  _QWORD *v2450;
  uint64_t v2451;
  uint64_t v2452;
  char *v2453;
  uint64_t v2454;
  char *v2455;
  char *v2456;
  uint64_t v2457;
  int *v2458;
  char *v2459;
  uint64_t v2460;
  char *v2461;
  char *v2462;
  uint64_t v2463;
  char *v2464;
  uint64_t v2465;
  uint64_t v2466;
  char *v2467;
  uint64_t v2468;
  char *v2469;
  char *v2470;
  uint64_t v2471;
  uint64_t v2472;
  char *v2473;
  char *v2474;
  uint64_t v2475;
  int *v2476;
  uint64_t v2477;
  _DWORD *v2478;
  _DWORD *v2479;
  uint64_t v2480;
  uint64_t v2481;
  uint64_t v2482;
  uint64_t v2483;
  char *v2484;
  char *v2485;
  uint64_t v2486;
  uint64_t v2487;
  _BYTE *v2488;
  _BYTE *v2489;
  uint64_t v2490;
  uint64_t v2491;
  char *v2492;
  char *v2493;
  uint64_t v2494;
  uint64_t v2495;
  char *v2496;
  char *v2497;
  int *v2498;
  unsigned int (**v2499)(_QWORD *, uint64_t, int *);
  uint64_t v2500;
  uint64_t v2501;
  char *v2502;
  char *v2503;
  uint64_t v2504;
  uint64_t v2505;
  uint64_t v2506;
  __int128 v2507;
  __int128 v2508;
  uint64_t v2509;
  char *v2510;
  uint64_t v2511;
  uint64_t v2512;
  _OWORD *v2513;
  char *v2514;
  uint64_t v2515;
  uint64_t v2516;
  uint64_t v2517;
  uint64_t v2518;
  char *v2519;
  uint64_t v2520;
  uint64_t v2521;
  char *v2522;
  char *v2523;
  uint64_t v2524;
  uint64_t v2525;
  char *v2526;
  char *v2527;
  uint64_t v2528;
  int *v2529;
  uint64_t v2530;
  _DWORD *v2531;
  _DWORD *v2532;
  uint64_t v2533;
  uint64_t v2534;
  uint64_t v2535;
  uint64_t v2536;
  char *v2537;
  uint64_t v2538;
  uint64_t v2539;
  _DWORD *v2540;
  _DWORD *v2541;
  uint64_t v2542;
  uint64_t v2543;
  char *v2544;
  char *v2545;
  uint64_t v2546;
  char *v2547;
  uint64_t v2548;
  _DWORD *v2549;
  _DWORD *v2550;
  uint64_t v2551;
  uint64_t v2552;
  uint64_t v2553;
  uint64_t v2554;
  int *v2555;
  char *v2556;
  char *v2557;
  uint64_t v2558;
  char *v2559;
  uint64_t v2560;
  _BYTE *v2561;
  _BYTE *v2562;
  uint64_t v2563;
  uint64_t v2564;
  _BYTE *v2565;
  _BYTE *v2566;
  uint64_t v2567;
  uint64_t v2568;
  char *v2569;
  char *v2570;
  uint64_t v2571;
  uint64_t v2572;
  _BYTE *v2573;
  _BYTE *v2574;
  uint64_t v2575;
  uint64_t v2576;
  _BYTE *v2577;
  _BYTE *v2578;
  uint64_t v2579;
  uint64_t v2580;
  _QWORD *v2581;
  uint64_t *v2582;
  uint64_t v2583;
  uint64_t v2584;
  int *v2585;
  uint64_t v2586;
  _QWORD *v2587;
  _QWORD *v2588;
  uint64_t v2589;
  uint64_t v2590;
  uint64_t (*v2591)(_QWORD *, uint64_t, uint64_t);
  int v2592;
  int v2593;
  _QWORD *v2594;
  __int128 v2595;
  uint64_t v2596;
  char *v2597;
  char *v2598;
  uint64_t v2599;
  uint64_t v2600;
  uint64_t v2601;
  uint64_t v2602;
  uint64_t v2603;
  uint64_t v2604;
  char *v2605;
  char *v2606;
  uint64_t v2607;
  uint64_t v2608;
  uint64_t (*v2609)(char *, uint64_t, uint64_t);
  int v2610;
  int v2611;
  uint64_t v2612;
  char *v2613;
  char *v2614;
  uint64_t v2615;
  int *v2616;
  uint64_t v2617;
  char *v2618;
  char *v2619;
  uint64_t v2620;
  uint64_t v2621;
  uint64_t (*v2622)(char *, uint64_t, uint64_t);
  int v2623;
  int v2624;
  uint64_t v2625;
  uint64_t v2626;
  _QWORD *v2627;
  _QWORD *v2628;
  _QWORD *v2629;
  uint64_t v2630;
  uint64_t v2631;
  uint64_t (*v2632)(_QWORD *, uint64_t, uint64_t);
  int v2633;
  int v2634;
  uint64_t v2635;
  char *v2636;
  char *v2637;
  uint64_t v2638;
  uint64_t v2639;
  uint64_t v2640;
  _QWORD *v2641;
  _QWORD *v2642;
  uint64_t v2643;
  uint64_t v2644;
  uint64_t (*v2645)(_QWORD *, uint64_t, uint64_t);
  int v2646;
  int v2647;
  uint64_t v2648;
  char *v2649;
  char *v2650;
  uint64_t v2651;
  uint64_t v2652;
  uint64_t v2653;
  char *v2654;
  char *v2655;
  uint64_t v2656;
  uint64_t v2657;
  void *v2658;
  uint64_t v2660;
  uint64_t v2661;
  char *v2662;
  char *v2663;
  uint64_t v2664;
  uint64_t v2665;
  char *v2666;
  char *v2667;
  uint64_t v2668;
  uint64_t v2669;
  uint64_t v2670;
  char *v2671;
  char *v2672;
  uint64_t v2673;
  uint64_t v2674;
  char *v2675;
  char *v2676;
  uint64_t v2677;
  uint64_t v2678;
  _QWORD *v2679;
  _QWORD *v2680;
  int *v2681;
  uint64_t v2682;
  uint64_t v2683;
  uint64_t v2684;
  char *v2685;
  char *v2686;
  uint64_t v2687;
  uint64_t v2688;
  unsigned int (*v2689)(char *, uint64_t);
  uint64_t v2690;
  uint64_t v2691;
  char *v2692;
  uint64_t v2693;
  char *v2694;
  char *v2695;
  uint64_t v2696;
  uint64_t v2697;
  char *v2698;
  char *v2699;
  uint64_t v2700;
  uint64_t v2701;
  uint64_t v2702;
  char *v2703;
  uint64_t v2704;
  char *v2705;
  char *v2706;
  uint64_t v2707;
  uint64_t v2708;
  char *v2709;
  char *v2710;
  uint64_t v2711;
  int *v2712;
  uint64_t v2713;
  _DWORD *v2714;
  _DWORD *v2715;
  uint64_t v2716;
  uint64_t v2717;
  uint64_t v2718;
  uint64_t v2719;
  char *v2720;
  char *v2721;
  uint64_t v2722;
  uint64_t v2723;
  _BYTE *v2724;
  _BYTE *v2725;
  uint64_t v2726;
  uint64_t v2727;
  char *v2728;
  char *v2729;
  uint64_t v2730;
  char *v2731;
  char *v2732;
  uint64_t v2733;
  uint64_t v2734;
  char *v2735;
  char *v2736;
  int *v2737;
  char *v2738;
  _QWORD *v2739;
  uint64_t v2740;
  _QWORD *v2741;
  uint64_t v2742;
  _QWORD *v2743;
  char *v2744;
  char *v2745;
  uint64_t v2746;
  uint64_t v2747;
  uint64_t v2748;
  __int128 v2749;
  __int128 v2750;
  uint64_t v2751;
  char *v2752;
  char *v2753;
  uint64_t v2754;
  uint64_t v2755;
  _OWORD *v2756;
  char *v2757;
  uint64_t v2758;
  uint64_t v2759;
  uint64_t v2760;
  uint64_t v2761;
  char *v2762;
  char *v2763;
  uint64_t v2764;
  uint64_t v2765;
  char *v2766;
  char *v2767;
  uint64_t v2768;
  uint64_t v2769;
  char *v2770;
  char *v2771;
  char *v2772;
  uint64_t v2773;
  uint64_t v2774;
  _DWORD *v2775;
  _DWORD *v2776;
  uint64_t v2777;
  uint64_t v2778;
  unsigned int (*v2779)(_DWORD *, uint64_t, uint64_t);
  uint64_t v2780;
  uint64_t v2781;
  char *v2782;
  char *v2783;
  uint64_t v2784;
  uint64_t v2785;
  _DWORD *v2786;
  _DWORD *v2787;
  uint64_t v2788;
  uint64_t v2789;
  char *v2790;
  char *v2791;
  uint64_t v2792;
  char *v2793;
  uint64_t v2794;
  _DWORD *v2795;
  _DWORD *v2796;
  uint64_t v2797;
  uint64_t v2798;
  char *v2799;
  char *v2800;
  uint64_t v2801;
  char *v2802;
  uint64_t v2803;
  _BYTE *v2804;
  _BYTE *v2805;
  uint64_t v2806;
  uint64_t v2807;
  char *v2808;
  char *v2809;
  char *v2810;
  uint64_t v2811;
  uint64_t v2812;
  _BYTE *v2813;
  _BYTE *v2814;
  uint64_t v2815;
  uint64_t v2816;
  char *v2817;
  char *v2818;
  uint64_t v2819;
  char *v2820;
  uint64_t v2821;
  char *v2822;
  char *v2823;
  int *v2824;
  uint64_t v2825;
  uint64_t v2826;
  uint64_t v2827;
  _QWORD *v2828;
  char *v2829;
  char *v2830;
  uint64_t v2831;
  uint64_t v2832;
  uint64_t v2833;
  __int128 v2834;
  __int128 v2835;
  uint64_t v2836;
  char *v2837;
  uint64_t v2838;
  uint64_t v2839;
  _OWORD *v2840;
  char *v2841;
  uint64_t v2842;
  uint64_t v2843;
  uint64_t v2844;
  uint64_t v2845;
  char *v2846;
  uint64_t v2847;
  uint64_t v2848;
  char *v2849;
  char *v2850;
  uint64_t v2851;
  uint64_t v2852;
  char *v2853;
  char *v2854;
  uint64_t v2855;
  uint64_t v2856;
  _DWORD *v2857;
  _DWORD *v2858;
  uint64_t v2859;
  uint64_t v2860;
  unsigned int (*v2861)(_DWORD *, uint64_t, uint64_t);
  _QWORD *v2862;
  uint64_t v2863;
  uint64_t v2864;
  char *v2865;
  char *v2866;
  uint64_t v2867;
  uint64_t v2868;
  _DWORD *v2869;
  _DWORD *v2870;
  uint64_t v2871;
  uint64_t v2872;
  char *v2873;
  char *v2874;
  uint64_t v2875;
  uint64_t v2876;
  _DWORD *v2877;
  _DWORD *v2878;
  uint64_t v2879;
  uint64_t v2880;
  char *v2881;
  char *v2882;
  uint64_t v2883;
  uint64_t v2884;
  _BYTE *v2885;
  _BYTE *v2886;
  uint64_t v2887;
  unsigned int (**v2888)(void *, uint64_t, uint64_t);
  void *v2889;
  _QWORD *v2890;
  char *v2891;
  int *v2892;
  int *v2893;
  int *v2894;
  char *v2895;
  int *v2896;
  char *v2897;
  uint64_t v2898;
  uint64_t v2899;
  unsigned int (*v2900)(char *, uint64_t, uint64_t);
  uint64_t v2901;
  uint64_t v2902;
  void (**v2903)(void *, _QWORD, uint64_t, uint64_t);
  unsigned int (**v2904)(const void *, uint64_t, uint64_t);
  void *v2905;
  _QWORD *v2906;
  char *v2907;
  void *v2908;
  int *v2909;
  void *v2910;
  unsigned int (*v2911)(char *, uint64_t);
  void *v2912;
  _BYTE *v2913;
  _BYTE *v2914;
  void *v2915;
  char *v2916;
  void *v2917;
  void *v2918;
  char *v2919;
  char *v2920;
  int *v2921;
  char *v2922;
  void *v2923;
  void *v2924;
  void *v2925;
  _BYTE *v2926;
  _BYTE *v2927;
  char *__src;
  unsigned int (**__srca)(const void *, uint64_t, uint64_t);
  unsigned int (**__srcb)(const void *, uint64_t, uint64_t);
  char *__srcc;
  void *__srcd;
  char *__srco;
  void *__srce;
  char *__srcp;
  char *__srcq;
  unsigned int (*__srcf)(_DWORD *, uint64_t, uint64_t);
  int *__srcg;
  int *__srch;
  _QWORD *__srcr;
  char *__srcs;
  char *__srct;
  void *__srci;
  _QWORD *__srcj;
  void *__srck;
  _QWORD *__srcl;
  int *__srcm;
  char *__srcn;
  char *__srcu;
  char *__srcv;
  char *__srcw;
  char *__dst;
  char *__dsta;
  char *__dstb;
  void *__dstc;
  void *__dstd;
  char *__dste;
  _BYTE *__dstu;
  void *__dstf;
  unsigned int (**__dstg)(const void *, uint64_t, uint64_t);
  _OWORD *__dsth;
  int *__dsti;
  _BYTE *__dstv;
  void *__dstj;
  void *__dstk;
  int *__dstl;
  _QWORD *__dstm;
  void *__dstn;
  _BYTE *__dstw;
  _BYTE *__dstx;
  unsigned int (*__dsto)(char *, uint64_t, uint64_t);
  unsigned int (*__dstp)(_OWORD *, uint64_t, uint64_t);
  char *__dsty;
  char *__dstz;
  _BYTE *__dstba;
  unsigned int (**__dstq)(_QWORD *, uint64_t);
  char *__dstbb;
  char *__dstr;
  int *__dsts;
  void *__dstt;
  _QWORD *__dstbc;
  int *v2982;
  int *v2983;
  int *v2984;
  int *v2985;
  uint64_t v2986;
  int *v2987;
  uint64_t v2988;
  char *v2989;
  char *v2990;
  char *v2991;
  char *v2992;
  char *v2993;
  char *v2994;
  uint64_t v2995;
  uint64_t v2996;
  char *v2997;
  int *v2998;
  uint64_t v2999;
  uint64_t v3000;
  char *v3001;
  uint64_t v3002;
  char *v3003;
  char *v3004;
  char *v3005;
  uint64_t v3006;
  char *v3007;
  int *v3008;
  char *v3009;
  uint64_t v3010;
  _BYTE *v3011;
  _OWORD *v3012;
  uint64_t v3013;
  _BYTE *v3014;
  _BYTE *v3015;
  uint64_t v3016;
  _BYTE *v3017;
  uint64_t v3018;
  int *v3019;
  uint64_t v3020;
  _BYTE *v3021;
  _BYTE *v3022;
  _BYTE *v3023;
  _BYTE *v3024;
  _BYTE *v3025;
  _BYTE *v3026;
  _BYTE *v3027;
  _BYTE *v3028;
  uint64_t v3029;
  uint64_t v3030;
  uint64_t v3031;
  uint64_t v3032;
  uint64_t v3033;
  uint64_t v3034;
  uint64_t v3035;
  uint64_t v3036;
  uint64_t v3037;
  uint64_t v3038;
  uint64_t v3039;
  uint64_t v3040;
  uint64_t v3041;
  uint64_t v3042;
  uint64_t v3043;
  uint64_t v3044;
  uint64_t v3045;
  uint64_t v3046;
  uint64_t v3047;
  uint64_t v3048;
  uint64_t v3049;
  uint64_t v3050;
  uint64_t v3051;
  uint64_t v3052;
  uint64_t v3053;
  uint64_t v3054;
  uint64_t v3055;
  uint64_t v3056;
  uint64_t v3057;
  uint64_t v3058;
  uint64_t v3059;
  uint64_t v3060;
  int *v3061;
  int *v3062;
  int *v3063;
  int *v3064;
  int *v3065;
  int *v3066;
  int *v3067;
  int *v3068;
  int *v3069;
  int *v3070;
  int *v3071;
  int *v3072;
  int *v3073;
  int *v3074;
  int *v3075;
  int *v3076;
  int *v3077;
  int *v3078;
  int *v3079;
  int *v3080;
  int *v3081;
  int *v3082;
  int *v3083;
  int *v3084;
  int *v3085;
  int *v3086;
  int *v3087;
  int *v3088;
  int *v3089;
  int *v3090;
  int *v3091;
  int *v3092;
  int *v3093;
  int *v3094;
  int *v3095;
  uint64_t v3096;
  uint64_t v3097;
  uint64_t v3098;
  uint64_t v3099;
  _BYTE *v3100;
  uint64_t v3101;
  uint64_t v3102;
  uint64_t DecorationPrePlannerResult;
  uint64_t v3104;
  uint64_t v3105;
  uint64_t v3106;
  uint64_t v3107;
  uint64_t v3108;
  uint64_t v3109;
  int *v3110;
  uint64_t v3111;
  uint64_t v3112;
  uint64_t v3113;
  uint64_t v3114;
  int *v3115;
  uint64_t v3116;
  uint64_t v3117;
  uint64_t v3118;
  uint64_t v3119;
  uint64_t v3120;
  uint64_t v3121;
  _DWORD *v3122;
  uint64_t v3123;
  unsigned int (*v3124)(_DWORD *, uint64_t, uint64_t);
  uint64_t v3125;
  uint64_t v3126;
  char *v3127;
  uint64_t v3128;
  char *v3129;
  _QWORD *v3130;
  uint64_t v3131;
  _QWORD *v3132;
  unsigned int (*v3133)(_DWORD *, uint64_t, uint64_t);
  uint64_t v3134;
  uint64_t v3135;
  uint64_t v3136;
  uint64_t v3137;
  uint64_t v3138;
  uint64_t v3139;
  uint64_t v3140;
  uint64_t v3141;
  uint64_t v3142;
  uint64_t v3143;
  uint64_t v3144;
  uint64_t v3145;
  uint64_t v3146;
  uint64_t v3147;
  uint64_t v3148;
  uint64_t v3149;
  uint64_t v3150;
  uint64_t v3151;
  uint64_t v3152;
  int *v3153;
  uint64_t v3154;
  uint64_t v3155;
  int *v3156;
  int *v3157;
  int *v3158;
  _BYTE *v3159;
  char *v3160;
  int *v3161;
  int *v3162;
  _QWORD *v3163;
  _QWORD *v3164;
  _QWORD *v3165;
  _QWORD *v3166;
  _QWORD *v3167;
  _QWORD *v3168;
  _QWORD *v3169;
  _QWORD *v3170;
  _QWORD *v3171;
  _QWORD *v3172;
  _QWORD *v3173;
  _QWORD *v3174;
  _QWORD *v3175;
  _QWORD *v3176;
  _QWORD *v3177;
  _QWORD *v3178;
  _QWORD *v3179;
  _QWORD *v3180;
  _QWORD *v3181;
  _QWORD *v3182;
  _QWORD *v3183;
  _QWORD *v3184;
  _QWORD *v3185;
  _QWORD *v3186;
  _QWORD *v3187;
  _QWORD *v3188;
  _QWORD *v3189;
  _QWORD *v3190;
  _QWORD *v3191;
  _QWORD *v3192;
  _QWORD *v3193;
  _QWORD *v3194;
  _QWORD *v3195;
  _QWORD *v3196;
  _QWORD *v3197;
  _QWORD *v3198;
  _QWORD *v3199;
  _QWORD *v3200;
  _QWORD *v3201;
  _QWORD *v3202;
  _QWORD *v3203;
  _QWORD *v3204;
  _QWORD *v3205;
  _QWORD *v3206;
  _QWORD *v3207;
  _QWORD *v3208;
  _QWORD *v3209;
  _QWORD *v3210;
  _QWORD *v3211;
  _QWORD *v3212;
  _QWORD *v3213;
  _QWORD *v3214;

  v3 = a2;
  v4 = a1;
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  v6 = v3[3];
  v4[2] = v3[2];
  v4[3] = v6;
  swift_bridgeObjectRelease();
  v7 = v3[5];
  v4[4] = v3[4];
  v4[5] = v7;
  swift_bridgeObjectRelease();
  v8 = v3[7];
  v4[6] = v3[6];
  v4[7] = v8;
  swift_bridgeObjectRelease();
  v9 = v3[9];
  v4[8] = v3[8];
  v4[9] = v9;
  swift_bridgeObjectRelease();
  v4[10] = v3[10];
  swift_bridgeObjectRelease();
  v10 = v3[12];
  v4[11] = v3[11];
  v4[12] = v10;
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for TranscriptProtoEvent(0);
  v12 = v11[11];
  v13 = (char *)v4 + v12;
  v14 = (char *)v3 + v12;
  v15 = type metadata accessor for TranscriptProtoPayload(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      v20 = type metadata accessor for TranscriptProtoPayloadEnum(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_814:
        v2564 = *(int *)(v15 + 20);
        v2565 = &v13[v2564];
        v2566 = &v14[v2564];
        v2567 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2567 - 8) + 32))(v2565, v2566, v2567);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        goto LABEL_821;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v3097 = v15;
          v3137 = v21;
          v3191 = v4;
          v3062 = v11;
          v3164 = v3;
          *v13 = *v14;
          v37 = (int *)type metadata accessor for TranscriptProtoSessionStart(0);
          v38 = v37[5];
          v39 = &v13[v38];
          v40 = &v14[v38];
          v41 = type metadata accessor for TranscriptProtoLocaleSettings(0);
          v42 = *(_QWORD *)(v41 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
          {
            v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
            memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          }
          else
          {
            v512 = v40[1];
            *v39 = *v40;
            v39[1] = v512;
            v39[2] = v40[2];
            v513 = *(int *)(v41 + 28);
            v514 = (char *)v39 + v513;
            v515 = (char *)v40 + v513;
            v516 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v516 - 8) + 32))(v514, v515, v516);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
          }
          v517 = v37[6];
          v518 = &v13[v517];
          v519 = &v14[v517];
          v520 = type metadata accessor for TranscriptProtoDeviceDetails(0);
          v521 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v520 - 8);
          if (v521[6](v519, 1, v520))
          {
            v522 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
            memcpy(v518, v519, *(_QWORD *)(*(_QWORD *)(v522 - 8) + 64));
          }
          else
          {
            __dstd = v521;
            v2998 = v37;
            v3055 = v20;
            *v518 = *v519;
            v691 = *(int *)(v520 + 20);
            v692 = v518;
            v693 = (_DWORD *)((char *)v518 + v691);
            v694 = (_DWORD *)((char *)v519 + v691);
            v695 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
            v696 = *(_QWORD *)(v695 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v696 + 48))(v694, 1, v695))
            {
              v697 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
              memcpy(v693, v694, *(_QWORD *)(*(_QWORD *)(v697 - 8) + 64));
            }
            else
            {
              *v693 = *v694;
              v1209 = *(int *)(v695 + 20);
              __srco = (char *)v693 + v1209;
              v1210 = (char *)v694 + v1209;
              v1211 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1211 - 8) + 32))(__srco, v1210, v1211);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v696 + 56))(v693, 0, 1, v695);
            }
            v20 = v3055;
            v1212 = *(int *)(v520 + 24);
            v1213 = (char *)v692 + v1212;
            v1214 = (char *)v519 + v1212;
            v1215 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1215 - 8) + 32))(v1213, v1214, v1215);
            (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__dstd + 7))(v692, 0, 1, v520);
            v37 = v2998;
          }
          v1216 = v37[7];
          v1217 = &v13[v1216];
          v1218 = &v14[v1216];
          v1219 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1219 - 8) + 32))(v1217, v1218, v1219);
          goto LABEL_369;
        case 1u:
          v3138 = v21;
          v3029 = v20;
          v3099 = v15;
          v53 = v11;
          v3192 = v4;
          v54 = v3;
          *(_OWORD *)v13 = *(_OWORD *)v14;
          v13[16] = v14[16];
          v55 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
          v56 = v55[6];
          v57 = &v13[v56];
          v58 = &v14[v56];
          v59 = type metadata accessor for TranscriptProtoStatementID(0);
          v60 = *(_QWORD *)(v59 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
          {
            v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
          }
          else
          {
            *v57 = *v58;
            *(_OWORD *)(v57 + 2) = *(_OWORD *)(v58 + 2);
            v523 = *(int *)(v59 + 24);
            v2989 = (char *)v57 + v523;
            v524 = (char *)v58 + v523;
            v525 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v525 - 8) + 32))(v2989, v524, v525);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
          }
          v11 = v53;
          *(_OWORD *)&v13[v55[7]] = *(_OWORD *)&v14[v55[7]];
          v526 = v55[8];
          v527 = &v13[v526];
          v528 = &v14[v526];
          v529 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v529 - 8) + 32))(v527, v528, v529);
          v20 = v3029;
          goto LABEL_180;
        case 2u:
          *(_QWORD *)v13 = *(_QWORD *)v14;
          v13[8] = v14[8];
          *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
          v62 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
          v3139 = v21;
          v63 = &v13[v62];
          v64 = v4;
          v65 = &v14[v62];
          v66 = sub_2408E57A4();
          v67 = v63;
          v21 = v3139;
          v68 = v65;
          v4 = v64;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v67, v68, v66);
          swift_storeEnumTagMultiPayload();
          goto LABEL_813;
        case 3u:
          v3064 = v11;
          v3166 = v3;
          *v13 = *v14;
          v69 = type metadata accessor for TranscriptProtoRequest(0);
          v70 = *(int *)(v69 + 20);
          __dst = &v13[v70];
          v2982 = (int *)v69;
          v71 = &v14[v70];
          v72 = type metadata accessor for TranscriptProtoRequestContent(0);
          v73 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v72 - 8);
          v3030 = v20;
          v3137 = v21;
          if (v73[6](v71, 1, v72))
          {
            v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
            memcpy(__dst, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
          }
          else
          {
            __srca = v73;
            v530 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v530 - 8) + 48))(v71, 1, v530))
            {
              v1176 = (char *)&loc_2403968F8 + 4 * word_2408E87F2[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v531 = v4;
            v532 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
            memcpy(__dst, v71, *(_QWORD *)(*(_QWORD *)(v532 - 8) + 64));
            v2218 = *(int *)(v72 + 20);
            v2219 = &__dst[v2218];
            v2220 = &v71[v2218];
            v2221 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2221 - 8) + 32))(v2219, v2220, v2221);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srca[7])(__dst, 0, 1, v72);
            v4 = v531;
          }
          v2222 = v2982[6];
          v2223 = &v13[v2222];
          v2224 = &v14[v2222];
          v2225 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
          v2226 = *(_QWORD *)(v2225 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2226 + 48))(v2224, 1, v2225))
          {
            v2227 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
            memcpy(v2223, v2224, *(_QWORD *)(*(_QWORD *)(v2227 - 8) + 64));
          }
          else
          {
            v3126 = v2226;
            v2228 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2228 - 8) + 48))(v2224, 1, v2228))
            {
              v2231 = (char *)&loc_2403A13D8 + 4 * byte_2408E87FA[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v2229 = v4;
            v2230 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
            memcpy(v2223, v2224, *(_QWORD *)(*(_QWORD *)(v2230 - 8) + 64));
            v2232 = *(int *)(v2225 + 20);
            v2233 = &v2223[v2232];
            v2234 = &v2224[v2232];
            v2235 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2235 - 8) + 32))(v2233, v2234, v2235);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3126 + 56))(v2223, 0, 1, v2225);
            v4 = v2229;
          }
          v723 = v4;
          *(_OWORD *)&v13[v2982[7]] = *(_OWORD *)&v14[v2982[7]];
          v2236 = v2982[8];
          v2237 = &v13[v2236];
          v2238 = &v14[v2236];
          v2239 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v2240 = *(_QWORD *)(v2239 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v2240 + 48))(v2238, 1, v2239))
          {
            v2241 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v2237, v2238, *(_QWORD *)(*(_QWORD *)(v2241 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v2237 = *(_OWORD *)v2238;
            v2237[2] = v2238[2];
            v2242 = *(int *)(v2239 + 24);
            v2243 = (char *)v2237 + v2242;
            v2244 = (char *)v2238 + v2242;
            v2245 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2245 - 8) + 32))(v2243, v2244, v2245);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2240 + 56))(v2237, 0, 1, v2239);
          }
          v2246 = v2982[9];
          v2247 = &v13[v2246];
          v2248 = &v14[v2246];
          v2249 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2249 - 8) + 32))(v2247, v2248, v2249);
          v20 = v3030;
          goto LABEL_770;
        case 4u:
          v75 = *((_OWORD *)v14 + 1);
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = v75;
          *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
          *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
          v13[56] = v14[56];
          v76 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
          v3140 = v21;
          v77 = &v13[v76];
          v78 = v4;
          v79 = &v14[v76];
          v80 = sub_2408E57A4();
          v81 = v77;
          v21 = v3140;
          v82 = v79;
          v4 = v78;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v81, v82, v80);
          swift_storeEnumTagMultiPayload();
          goto LABEL_813;
        case 5u:
          v3138 = v21;
          v3031 = v20;
          v3099 = v15;
          v83 = v11;
          v3192 = v4;
          v54 = v3;
          *(_OWORD *)v13 = *(_OWORD *)v14;
          v13[16] = v14[16];
          *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
          v84 = (int *)type metadata accessor for TranscriptProtoAction(0);
          v85 = v84[7];
          v86 = &v13[v85];
          v87 = &v14[v85];
          v88 = type metadata accessor for TranscriptProtoStatementID(0);
          v89 = *(_QWORD *)(v88 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
          {
            v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
          }
          else
          {
            *v86 = *v87;
            *(_OWORD *)(v86 + 2) = *(_OWORD *)(v87 + 2);
            v533 = *(int *)(v88 + 24);
            v2990 = (char *)v86 + v533;
            v534 = (char *)v87 + v533;
            v535 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v535 - 8) + 32))(v2990, v534, v535);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
          }
          v11 = v83;
          *(_OWORD *)&v13[v84[8]] = *(_OWORD *)&v14[v84[8]];
          *(_OWORD *)&v13[v84[9]] = *(_OWORD *)&v14[v84[9]];
          *(_OWORD *)&v13[v84[10]] = *(_OWORD *)&v14[v84[10]];
          v536 = v84[11];
          v537 = &v13[v536];
          v538 = &v14[v536];
          v539 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v539 - 8) + 32))(v537, v538, v539);
          v20 = v3031;
          goto LABEL_180;
        case 6u:
          v3138 = v21;
          v3032 = v20;
          v3099 = v15;
          v91 = v11;
          v3192 = v4;
          v54 = v3;
          v92 = *((_OWORD *)v14 + 1);
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = v92;
          v93 = *((_OWORD *)v14 + 3);
          *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
          *((_OWORD *)v13 + 3) = v93;
          v94 = type metadata accessor for TranscriptProtoClientAction(0);
          v95 = *(int *)(v94 + 36);
          v96 = &v13[v95];
          v97 = &v14[v95];
          v98 = type metadata accessor for TranscriptProtoStatementID(0);
          v99 = *(_QWORD *)(v98 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
          {
            v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
          }
          else
          {
            *v96 = *v97;
            *(_OWORD *)(v96 + 2) = *(_OWORD *)(v97 + 2);
            v540 = *(int *)(v98 + 24);
            v2991 = (char *)v96 + v540;
            v541 = (char *)v97 + v540;
            v542 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v542 - 8) + 32))(v2991, v541, v542);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
          }
          v11 = v91;
          v543 = *(int *)(v94 + 40);
          v544 = &v13[v543];
          v545 = &v14[v543];
          v546 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v546 - 8) + 32))(v544, v545, v546);
          v20 = v3032;
          goto LABEL_180;
        case 7u:
          v3138 = v21;
          v3033 = v20;
          v3099 = v15;
          v101 = v11;
          v3192 = v4;
          v54 = v3;
          *(_QWORD *)v13 = *(_QWORD *)v14;
          Step = type metadata accessor for TranscriptProtoQueryStep(0);
          v103 = *(int *)(Step + 20);
          v104 = &v13[v103];
          v105 = &v14[v103];
          v106 = type metadata accessor for TranscriptProtoStatementID(0);
          v107 = *(_QWORD *)(v106 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
            goto LABEL_35;
          goto LABEL_159;
        case 8u:
          v3138 = v21;
          v3033 = v20;
          v3099 = v15;
          v101 = v11;
          v3192 = v4;
          v54 = v3;
          *(_QWORD *)v13 = *(_QWORD *)v14;
          Step = type metadata accessor for TranscriptProtoVariableStep(0);
          v109 = *(int *)(Step + 20);
          v104 = &v13[v109];
          v105 = &v14[v109];
          v106 = type metadata accessor for TranscriptProtoStatementID(0);
          v107 = *(_QWORD *)(v106 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
          {
LABEL_35:
            v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          }
          else
          {
LABEL_159:
            *v104 = *v105;
            *(_OWORD *)(v104 + 2) = *(_OWORD *)(v105 + 2);
            v547 = *(int *)(v106 + 24);
            v2992 = (char *)v104 + v547;
            v548 = (char *)v105 + v547;
            v549 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v549 - 8) + 32))(v2992, v548, v549);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
          }
          v11 = v101;
          v550 = *(int *)(Step + 24);
          v551 = &v13[v550];
          v552 = &v14[v550];
          v553 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v553 - 8) + 32))(v551, v552, v553);
          v20 = v3033;
          goto LABEL_180;
        case 0xAu:
          v110 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
          v3034 = v20;
          if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 48))(v14, 1, v110))
          {
            v554 = (char *)&loc_240393824 + 4 * word_2408E87EA[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v111 = v21;
          v112 = v4;
          v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
          v1940 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
          v1941 = &v13[v1940];
          v1942 = &v14[v1940];
          v1943 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1943 - 8) + 32))(v1941, v1942, v1943);
          swift_storeEnumTagMultiPayload();
          v4 = v112;
          v20 = v3034;
          v21 = v111;
          goto LABEL_813;
        case 0xBu:
          v3097 = v15;
          v3137 = v21;
          v3191 = v4;
          v114 = v11;
          v115 = v3;
          v116 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
          v117 = *(_QWORD *)(v116 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v117 + 48))(v14, 1, v116))
          {
            v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
          }
          else
          {
            v555 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
            v556 = *(_QWORD *)(v555 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v556 + 48))(v14, 1, v555))
            {
              v557 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
              memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v557 - 8) + 64));
            }
            else
            {
              v1177 = *((_OWORD *)v14 + 1);
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *((_OWORD *)v13 + 1) = v1177;
              *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
              v1178 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
              __dstu = &v14[v1178];
              v3011 = &v13[v1178];
              v1179 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1179 - 8) + 32))(v3011, __dstu, v1179);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v556 + 56))(v13, 0, 1, v555);
            }
            v1180 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
            v1181 = &v13[v1180];
            v1182 = &v14[v1180];
            v1183 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1183 - 8) + 32))(v1181, v1182, v1183);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v13, 0, 1, v116);
          }
          v1184 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
          v1185 = &v13[v1184];
          v1186 = &v14[v1184];
          v1187 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1187 - 8) + 32))(v1185, v1186, v1187);
          swift_storeEnumTagMultiPayload();
          v3 = v115;
          v11 = v114;
          goto LABEL_371;
        case 0xCu:
          v119 = *((_OWORD *)v14 + 1);
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = v119;
          *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
          v120 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
          v3141 = v21;
          v121 = &v13[v120];
          v122 = v4;
          v123 = &v14[v120];
          v124 = sub_2408E57A4();
          v125 = v121;
          v21 = v3141;
          v126 = v123;
          v4 = v122;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v125, v126, v124);
          swift_storeEnumTagMultiPayload();
          goto LABEL_813;
        case 0xDu:
          v3137 = v21;
          v3065 = v11;
          v3167 = v3;
          v127 = *((_OWORD *)v14 + 1);
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = v127;
          v128 = (int *)type metadata accessor for TranscriptProtoSystemPromptResolution(0);
          v129 = v128[6];
          v3100 = &v13[v129];
          v130 = &v14[v129];
          v131 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
          v132 = *(unsigned int (***)(_BYTE *, uint64_t, uint64_t))(v131 - 8);
          v2983 = v128;
          v3035 = v20;
          if (v132[6](v130, 1, v131))
          {
            v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
            memcpy(v3100, v130, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
            goto LABEL_526;
          }
          __dstc = v132;
          v558 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
          v559 = *(_QWORD *)(v558 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v559 + 48))(v130, 1, v558))
          {
            v560 = v4;
            v561 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
            v562 = v3100;
            memcpy(v3100, v130, *(_QWORD *)(*(_QWORD *)(v561 - 8) + 64));
            v563 = v130;
            v564 = v131;
            goto LABEL_525;
          }
          v2905 = (void *)v559;
          v2912 = (void *)v558;
          __srcd = v130;
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v564 = v131;
          v560 = v4;
          switch(EnumCaseMultiPayload)
          {
            case 6:
              v1671 = sub_2408E57A4();
              v562 = v3100;
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1671 - 8) + 32))(v3100, v130, v1671);
              v1193 = v2912;
              goto LABEL_522;
            case 5:
              v562 = v3100;
              *v3100 = *v130;
              v1672 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                             + 20);
              v1673 = &v3100[v1672];
              v1674 = &v130[v1672];
              v1675 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1675 - 8) + 32))(v1673, v1674, v1675);
              v1193 = v2912;
              goto LABEL_522;
            case 1:
              v562 = v3100;
              *(_QWORD *)v3100 = *(_QWORD *)v130;
              v1189 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
              v1190 = &v3100[v1189];
              v1191 = &v130[v1189];
              v1192 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1192 - 8) + 32))(v1190, v1191, v1192);
              v1193 = v2912;
LABEL_522:
              swift_storeEnumTagMultiPayload();
              v1676 = (void (**)(_BYTE *, _QWORD, uint64_t, void *))v2905;
              goto LABEL_524;
          }
          v1676 = (void (**)(_BYTE *, _QWORD, uint64_t, void *))v559;
          v562 = v3100;
          memcpy(v3100, __srcd, *(_QWORD *)(v559 + 64));
          v1193 = v2912;
LABEL_524:
          v1676[7](v562, 0, 1, v1193);
          v563 = __srcd;
LABEL_525:
          v1677 = *(int *)(v564 + 20);
          v1678 = &v562[v1677];
          v1679 = &v563[v1677];
          v1680 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1680 - 8) + 32))(v1678, v1679, v1680);
          (*((void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))__dstc + 7))(v562, 0, 1, v564);
          v4 = v560;
          v128 = v2983;
LABEL_526:
          v1681 = v128[7];
          v3122 = &v13[v1681];
          v1682 = &v14[v1681];
          v1683 = type metadata accessor for TranscriptProtoStatementID(0);
          v1684 = *(_QWORD *)(v1683 - 8);
          __srcf = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1684 + 48);
          __dstl = (int *)v1683;
          v2917 = (void *)v1684;
          if (__srcf(v1682, 1, v1683))
          {
            v1685 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v3122, v1682, *(_QWORD *)(*(_QWORD *)(v1685 - 8) + 64));
          }
          else
          {
            *v3122 = *v1682;
            *(_OWORD *)(v3122 + 2) = *(_OWORD *)(v1682 + 2);
            v1686 = *(int *)(v1683 + 24);
            v1687 = v4;
            v1688 = (char *)v3122 + v1686;
            v1689 = (char *)v1682 + v1686;
            v1690 = sub_2408E57A4();
            v1691 = v1688;
            v4 = v1687;
            v128 = v2983;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1690 - 8) + 32))(v1691, v1689, v1690);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1684 + 56))(v3122, 0, 1, v1683);
          }
          v1692 = v128[8];
          v1693 = &v13[v1692];
          v1694 = &v14[v1692];
          v1695 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
          v1696 = *(_QWORD *)(v1695 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v1696 + 48))(v1694, 1, v1695))
          {
            v1697 = v4;
            v1698 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
            memcpy(v1693, v1694, *(_QWORD *)(*(_QWORD *)(v1698 - 8) + 64));
            v3 = v3167;
            goto LABEL_602;
          }
          v2899 = v1696;
          v2906 = v1693;
          v1699 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
          v1700 = *(void **)(v1699 - 8);
          v2893 = (int *)v1695;
          if ((*((unsigned int (**)(_BYTE *, uint64_t, uint64_t))v1700 + 6))(v1694, 1, v1699))
          {
            v1697 = v4;
            v1701 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
            v1702 = v2906;
            memcpy(v2906, v1694, *(_QWORD *)(*(_QWORD *)(v1701 - 8) + 64));
            v1703 = v1694;
            v3 = v3167;
LABEL_601:
            v1888 = v2893[5];
            v1889 = (char *)v1702 + v1888;
            v1890 = (char *)v1703 + v1888;
            v1891 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1891 - 8) + 32))(v1889, v1890, v1891);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v2899 + 56))(v1702, 0, 1, v2893);
LABEL_602:
            v1892 = v2983[9];
            v1893 = &v13[v1892];
            v1894 = &v14[v1892];
            v1895 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1895 - 8) + 32))(v1893, v1894, v1895);
            swift_storeEnumTagMultiPayload();
            v11 = v3065;
            v4 = v1697;
            v20 = v3035;
LABEL_812:
            v21 = v3137;
LABEL_813:
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v20);
            goto LABEL_814;
          }
          v2889 = v1700;
          v1704 = v1694;
          v1705 = swift_getEnumCaseMultiPayload();
          v1706 = v1699;
          if (v1705 == 1)
          {
            v1697 = v4;
            v1702 = v2906;
            *v2906 = *v1704;
            v1714 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
            v1715 = v1699;
            v1716 = (char *)v2906 + v1714;
            v1717 = (char *)v1704 + v1714;
            v1718 = sub_2408E57A4();
            v1719 = v1716;
            v1706 = v1715;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1718 - 8) + 32))(v1719, v1717, v1718);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            if (v1705)
            {
              v1697 = v4;
              v1702 = v2906;
              memcpy(v2906, v1704, *((_QWORD *)v1700 + 8));
LABEL_600:
              (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v1700 + 7))(v1702, 0, 1, v1706);
              v3 = v3167;
              v1703 = v1704;
              goto LABEL_601;
            }
            v3026 = v13;
            v3123 = v15;
            v1707 = v4;
            *(_OWORD *)v2906 = *(_OWORD *)v1704;
            v1708 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
            v1709 = *(int *)(v1708 + 20);
            v1710 = (_DWORD *)((char *)v2906 + v1709);
            v1711 = v1704;
            v1712 = (_DWORD *)((char *)v1704 + v1709);
            if (__srcf((_QWORD *)((char *)v1704 + v1709), 1, (uint64_t)__dstl))
            {
              v1713 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1710, v1712, *(_QWORD *)(*(_QWORD *)(v1713 - 8) + 64));
            }
            else
            {
              *v1710 = *v1712;
              *(_OWORD *)(v1710 + 2) = *(_OWORD *)(v1712 + 2);
              v1880 = __dstl[6];
              v1881 = (char *)v1710 + v1880;
              v1882 = (char *)v1712 + v1880;
              v1883 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1883 - 8) + 32))(v1881, v1882, v1883);
              (*((void (**)(_DWORD *, _QWORD, uint64_t, int *))v2917 + 7))(v1710, 0, 1, __dstl);
            }
            v1884 = *(int *)(v1708 + 24);
            v1702 = v2906;
            v1885 = (char *)v2906 + v1884;
            v1704 = v1711;
            v1886 = (char *)v1711 + v1884;
            v1887 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1887 - 8) + 32))(v1885, v1886, v1887);
            v1706 = v1699;
            swift_storeEnumTagMultiPayload();
            v1697 = v1707;
            v15 = v3123;
            v13 = v3026;
          }
          v1700 = v2889;
          goto LABEL_600;
        case 0xEu:
        case 0x10u:
        case 0x13u:
        case 0x14u:
        case 0x15u:
        case 0x29u:
          v157 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v13, v14, v157);
          swift_storeEnumTagMultiPayload();
          goto LABEL_813;
        case 0xFu:
          v3138 = v21;
          v3036 = v20;
          v3099 = v15;
          v134 = v11;
          v3192 = v4;
          v54 = v3;
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
          StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
          v136 = *(int *)(StepResults + 24);
          v137 = &v13[v136];
          v138 = &v14[v136];
          v139 = type metadata accessor for TranscriptProtoStatementID(0);
          v140 = *(_QWORD *)(v139 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139))
          {
            v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
          }
          else
          {
            *v137 = *v138;
            *(_OWORD *)(v137 + 2) = *(_OWORD *)(v138 + 2);
            v565 = *(int *)(v139 + 24);
            v2993 = (char *)v137 + v565;
            v566 = (char *)v138 + v565;
            v567 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v567 - 8) + 32))(v2993, v566, v567);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
          }
          goto LABEL_179;
        case 0x11u:
          v3097 = v15;
          v3137 = v21;
          v142 = v20;
          v3191 = v4;
          v3062 = v11;
          v3164 = v3;
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
          v13[24] = v14[24];
          *(_WORD *)(v13 + 25) = *(_WORD *)(v14 + 25);
          v143 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
          v144 = *(int *)(v143 + 36);
          v145 = &v13[v144];
          v146 = &v14[v144];
          v147 = type metadata accessor for TranscriptProtoParameterSet(0);
          v148 = *(_QWORD *)(v147 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v148 + 48))(v146, 1, v147))
          {
            v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
            memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
          }
          else
          {
            *v145 = *v146;
            v568 = *(int *)(v147 + 20);
            v569 = (char *)v145 + v568;
            v570 = (char *)v146 + v568;
            v571 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v571 - 8) + 32))(v569, v570, v571);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v145, 0, 1, v147);
          }
          v572 = v143;
          v573 = *(int *)(v143 + 40);
          v574 = &v13[v573];
          v575 = &v14[v573];
          v576 = type metadata accessor for TranscriptProtoStatementID(0);
          v577 = *(_QWORD *)(v576 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v577 + 48))(v575, 1, v576))
          {
            v578 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v574, v575, *(_QWORD *)(*(_QWORD *)(v578 - 8) + 64));
          }
          else
          {
            *v574 = *v575;
            *(_OWORD *)(v574 + 2) = *(_OWORD *)(v575 + 2);
            v698 = *(int *)(v576 + 24);
            v699 = (char *)v574 + v698;
            v700 = (char *)v575 + v698;
            v701 = sub_2408E57A4();
            v702 = v699;
            v572 = v143;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v701 - 8) + 32))(v702, v700, v701);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v577 + 56))(v574, 0, 1, v576);
          }
          v703 = *(int *)(v572 + 44);
          v704 = &v13[v703];
          v705 = &v14[v703];
          v706 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v706 - 8) + 32))(v704, v705, v706);
          v20 = v142;
LABEL_369:
          swift_storeEnumTagMultiPayload();
          v3 = v3164;
          goto LABEL_370;
        case 0x12u:
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
          v150 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
          v3142 = v21;
          v151 = &v13[v150];
          v152 = v4;
          v153 = &v14[v150];
          v154 = sub_2408E57A4();
          v155 = v151;
          v21 = v3142;
          v156 = v153;
          v4 = v152;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v155, v156, v154);
          swift_storeEnumTagMultiPayload();
          goto LABEL_813;
        case 0x16u:
          *(_OWORD *)v13 = *(_OWORD *)v14;
          v158 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
          v3143 = v21;
          v159 = &v13[v158];
          v160 = v4;
          v161 = &v14[v158];
          v162 = sub_2408E57A4();
          v163 = v159;
          v21 = v3143;
          v164 = v161;
          v4 = v160;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v163, v164, v162);
          swift_storeEnumTagMultiPayload();
          goto LABEL_813;
        case 0x17u:
          *(_QWORD *)v13 = *(_QWORD *)v14;
          v165 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
          v3144 = v21;
          v166 = &v13[v165];
          v167 = v4;
          v168 = &v14[v165];
          v169 = sub_2408E57A4();
          v170 = v166;
          v21 = v3144;
          v171 = v168;
          v4 = v167;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v170, v171, v169);
          swift_storeEnumTagMultiPayload();
          goto LABEL_813;
        case 0x18u:
          *(_QWORD *)v13 = *(_QWORD *)v14;
          v172 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
          v3145 = v21;
          v173 = &v13[v172];
          v174 = v4;
          v175 = &v14[v172];
          v176 = sub_2408E57A4();
          v177 = v173;
          v21 = v3145;
          v178 = v175;
          v4 = v174;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(v177, v178, v176);
          swift_storeEnumTagMultiPayload();
          goto LABEL_813;
        case 0x19u:
          *(_OWORD *)v13 = *(_OWORD *)v14;
          v179 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
          v3146 = v21;
          v180 = &v13[v179];
          v181 = v4;
          v182 = &v14[v179];
          v183 = sub_2408E57A4();
          v184 = v180;
          v21 = v3146;
          v185 = v182;
          v4 = v181;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v184, v185, v183);
          swift_storeEnumTagMultiPayload();
          goto LABEL_813;
        case 0x1Au:
          v3137 = v21;
          v3037 = v20;
          v3191 = v4;
          v3097 = v15;
          v186 = v3;
          v187 = type metadata accessor for TranscriptProtoStatementID(0);
          v188 = *(_QWORD *)(v187 - 8);
          v189 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v188 + 48);
          v3062 = v11;
          if (v189(v14, 1, v187))
          {
            v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
          }
          else
          {
            *(_DWORD *)v13 = *(_DWORD *)v14;
            *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
            v579 = *(int *)(v187 + 24);
            v580 = &v13[v579];
            v581 = &v14[v579];
            v582 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v582 - 8) + 32))(v580, v581, v582);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v13, 0, 1, v187);
          }
          v583 = type metadata accessor for TranscriptProtoActionCancellation(0);
          v584 = *(int *)(v583 + 20);
          v585 = &v13[v584];
          v586 = &v14[v584];
          if (v189(&v14[v584], 1, v187))
          {
            v587 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v585, v586, *(_QWORD *)(*(_QWORD *)(v587 - 8) + 64));
          }
          else
          {
            *v585 = *v586;
            *(_OWORD *)(v585 + 2) = *(_OWORD *)(v586 + 2);
            v707 = *(int *)(v187 + 24);
            v708 = (char *)v585 + v707;
            v709 = (char *)v586 + v707;
            v710 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v710 - 8) + 32))(v708, v709, v710);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v585, 0, 1, v187);
          }
          v3 = v186;
          v711 = *(int *)(v583 + 24);
          v712 = &v13[v711];
          v713 = &v14[v711];
          v714 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v714 - 8) + 32))(v712, v713, v714);
          v20 = v3037;
          swift_storeEnumTagMultiPayload();
LABEL_370:
          v11 = v3062;
          goto LABEL_371;
        case 0x1Bu:
          v191 = *((_OWORD *)v14 + 1);
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = v191;
          *((_DWORD *)v13 + 8) = *((_DWORD *)v14 + 8);
          *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
          v192 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
          v3147 = v21;
          v193 = &v13[v192];
          v194 = v4;
          v195 = &v14[v192];
          v196 = sub_2408E57A4();
          v197 = v193;
          v21 = v3147;
          v198 = v195;
          v4 = v194;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v197, v198, v196);
          swift_storeEnumTagMultiPayload();
          goto LABEL_813;
        case 0x1Cu:
          v3064 = v11;
          v3166 = v3;
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
          *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
          v199 = type metadata accessor for TranscriptProtoSystemResponse(0);
          v200 = *(int *)(v199 + 28);
          __dsta = &v13[v200];
          v2984 = (int *)v199;
          v201 = &v14[v200];
          v202 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v203 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v202 - 8);
          v3038 = v20;
          v3137 = v21;
          if (v203[6](v201, 1, v202))
          {
            v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(__dsta, v201, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
          }
          else
          {
            __srcb = v203;
            v588 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v588 - 8) + 48))(v201, 1, v588))
            {
              v1194 = (char *)&loc_240396B34 + 4 * word_2408E87CA[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v589 = v4;
            v590 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(__dsta, v201, *(_QWORD *)(*(_QWORD *)(v590 - 8) + 64));
            v2373 = *(int *)(v202 + 20);
            v2374 = &__dsta[v2373];
            v2375 = &v201[v2373];
            v2376 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2376 - 8) + 32))(v2374, v2375, v2376);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srcb[7])(__dsta, 0, 1, v202);
            v4 = v589;
          }
          v2377 = v2984[8];
          v3130 = &v13[v2377];
          v2378 = &v14[v2377];
          v2379 = type metadata accessor for TranscriptProtoResponseOutput(0);
          v2380 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v2379 - 8);
          if (v2380[6](v2378, 1, v2379))
          {
            v2381 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
            memcpy(v3130, v2378, *(_QWORD *)(*(_QWORD *)(v2381 - 8) + 64));
          }
          else
          {
            v2910 = v2380;
            *v3130 = *v2378;
            *((_BYTE *)v3130 + 8) = *((_BYTE *)v2378 + 8);
            v3130[2] = v2378[2];
            v2382 = *(int *)(v2379 + 28);
            v2895 = (char *)v3130 + v2382;
            __dstr = (char *)v2378;
            v2383 = (char *)v2378 + v2382;
            v2384 = type metadata accessor for TranscriptProtoDialogType(0);
            v2890 = *(_QWORD **)(v2384 - 8);
            v2900 = (unsigned int (*)(char *, uint64_t, uint64_t))v2890[6];
            v3210 = v4;
            __srcm = (int *)v2379;
            if (v2900(v2383, 1, v2384))
            {
              v2385 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
              memcpy(v2895, v2383, *(_QWORD *)(*(_QWORD *)(v2385 - 8) + 64));
              v2386 = __dstr;
              v2387 = v3130;
            }
            else
            {
              v2388 = type metadata accessor for TranscriptProtoDialogFormat(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2388 - 8) + 48))(v2383, 1, v2388))
              {
                v2390 = (char *)&loc_2403A4BAC + 4 * byte_2408E87E0[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v2389 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
              memcpy(v2895, v2383, *(_QWORD *)(*(_QWORD *)(v2389 - 8) + 64));
              v2391 = *(int *)(v2384 + 20);
              v2392 = &v2895[v2391];
              v2393 = &v2383[v2391];
              v2394 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2394 - 8) + 32))(v2392, v2393, v2394);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v2890[7])(v2895, 0, 1, v2384);
              v2387 = v3130;
              v2386 = __dstr;
            }
            v2395 = *(int *)(v2379 + 32);
            v2396 = (char *)v2387 + v2395;
            v2397 = &v2386[v2395];
            if (v2900(&v2386[v2395], 1, v2384))
            {
              v2398 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
              memcpy(v2396, v2397, *(_QWORD *)(*(_QWORD *)(v2398 - 8) + 64));
            }
            else
            {
              v2399 = type metadata accessor for TranscriptProtoDialogFormat(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2399 - 8) + 48))(v2397, 1, v2399))
              {
                v2401 = (char *)&loc_2403A4DB8 + 4 * byte_2408E87E5[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v2400 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
              memcpy(v2396, v2397, *(_QWORD *)(*(_QWORD *)(v2400 - 8) + 64));
              v2402 = *(int *)(v2384 + 20);
              v2403 = &v2396[v2402];
              v2404 = &v2397[v2402];
              v2405 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2405 - 8) + 32))(v2403, v2404, v2405);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v2890[7])(v2396, 0, 1, v2384);
            }
            v2406 = __srcm[9];
            v2407 = (char *)v3130 + v2406;
            v2408 = &__dstr[v2406];
            v2409 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2409 - 8) + 32))(v2407, v2408, v2409);
            (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))v2910 + 7))(v3130, 0, 1, __srcm);
            v4 = v3210;
          }
          v723 = v4;
          v2410 = v2984[9];
          v2411 = &v13[v2410];
          v2412 = &v14[v2410];
          v2413 = type metadata accessor for TranscriptProtoStatementID(0);
          v2414 = *(_QWORD *)(v2413 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v2414 + 48))(v2412, 1, v2413))
          {
            v2415 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v2411, v2412, *(_QWORD *)(*(_QWORD *)(v2415 - 8) + 64));
          }
          else
          {
            *v2411 = *v2412;
            *(_OWORD *)(v2411 + 2) = *(_OWORD *)(v2412 + 2);
            v2416 = *(int *)(v2413 + 24);
            v2417 = (char *)v2411 + v2416;
            v2418 = (char *)v2412 + v2416;
            v2419 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2419 - 8) + 32))(v2417, v2418, v2419);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2414 + 56))(v2411, 0, 1, v2413);
          }
          *(_OWORD *)&v13[v2984[10]] = *(_OWORD *)&v14[v2984[10]];
          v2420 = v2984[11];
          v2421 = &v13[v2420];
          v2422 = &v14[v2420];
          v2423 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2423 - 8) + 32))(v2421, v2422, v2423);
          v20 = v3038;
LABEL_770:
          swift_storeEnumTagMultiPayload();
          v3 = v3166;
          v11 = v3064;
          goto LABEL_771;
        case 0x1Du:
          v205 = *((_OWORD *)v14 + 1);
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = v205;
          v2985 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
          v3021 = v13;
          v206 = v2985[6];
          __src = &v13[v206];
          v207 = &v14[v206];
          v208 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
          v2903 = *(void (***)(void *, _QWORD, uint64_t, uint64_t))(v208 - 8);
          __dstb = v207;
          v3191 = v4;
          v3066 = v11;
          v3137 = v21;
          v3168 = v3;
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v2903[6])(v207, 1, v208))
          {
            v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
            memcpy(__src, v207, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
            v13 = v3021;
          }
          else
          {
            v2898 = v208;
            v591 = type metadata accessor for TranscriptProtoStatementOutcome(0);
            v592 = *(unsigned int (***)(void *, uint64_t, uint64_t))(v591 - 8);
            if (v592[6](__dstb, 1, v591))
            {
              v593 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
              v594 = __src;
              memcpy(__src, __dstb, *(_QWORD *)(*(_QWORD *)(v593 - 8) + 64));
              v595 = __dstb;
              v13 = v3021;
            }
            else
            {
              v2888 = v592;
              v2892 = (int *)v591;
              v1195 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
              v13 = v3021;
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1195 - 8) + 48))(__dstb, 1, v1195))
              {
                v1530 = (char *)&loc_240398A80 + 4 * word_2408E87B4[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1196 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
              v594 = __src;
              memcpy(__src, __dstb, *(_QWORD *)(*(_QWORD *)(v1196 - 8) + 64));
              v2491 = v2892[5];
              v2492 = &__src[v2491];
              v2493 = &__dstb[v2491];
              v2494 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2494 - 8) + 32))(v2492, v2493, v2494);
              ((void (*)(char *, _QWORD, uint64_t, int *))v2888[7])(__src, 0, 1, v2892);
              v595 = __dstb;
            }
            v2495 = *(int *)(v208 + 20);
            v2496 = &v594[v2495];
            v2497 = &v595[v2495];
            v2498 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
            v2499 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v2498 - 1);
            if (((unsigned int (**)(char *, uint64_t, int *))v2499)[6](v2497, 1, v2498))
            {
              v2500 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
              memcpy(v2496, v2497, *(_QWORD *)(*(_QWORD *)(v2500 - 8) + 64));
            }
            else
            {
              v2925 = v2499;
              *(_QWORD *)v2496 = *(_QWORD *)v2497;
              v2501 = v2498[5];
              v3132 = v2496;
              v2502 = &v2496[v2501];
              v2503 = &v2497[v2501];
              v2504 = type metadata accessor for TranscriptProtoResponseDialog(0);
              v2505 = *(_QWORD *)(v2504 - 8);
              v2896 = (int *)v2504;
              v3059 = v20;
              if ((*(unsigned int (**)(char *, uint64_t))(v2505 + 48))(v2503, 1))
              {
                v2506 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
                memcpy(v2502, v2503, *(_QWORD *)(*(_QWORD *)(v2506 - 8) + 64));
              }
              else
              {
                v2507 = *((_OWORD *)v2503 + 1);
                *(_OWORD *)v2502 = *(_OWORD *)v2503;
                *((_OWORD *)v2502 + 1) = v2507;
                v2508 = *((_OWORD *)v2503 + 3);
                *((_OWORD *)v2502 + 2) = *((_OWORD *)v2503 + 2);
                *((_OWORD *)v2502 + 3) = v2508;
                v2509 = v2896[8];
                v2891 = &v2502[v2509];
                v2510 = &v2503[v2509];
                v2511 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2511 - 8) + 32))(v2891, v2510, v2511);
                (*(void (**)(char *, _QWORD, uint64_t, int *))(v2505 + 56))(v2502, 0, 1, v2896);
              }
              v2512 = v2498[6];
              v2513 = (_OWORD *)((char *)v3132 + v2512);
              v2514 = &v2497[v2512];
              v2515 = type metadata accessor for TranscriptProtoResponseVisual(0);
              v2516 = *(_QWORD *)(v2515 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2516 + 48))(v2514, 1, v2515))
              {
                v2517 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
                memcpy(v2513, v2514, *(_QWORD *)(*(_QWORD *)(v2517 - 8) + 64));
              }
              else
              {
                *v2513 = *(_OWORD *)v2514;
                v2518 = *(int *)(v2515 + 24);
                v2897 = (char *)v2513 + v2518;
                v2519 = &v2514[v2518];
                v2520 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2520 - 8) + 32))(v2897, v2519, v2520);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2516 + 56))(v2513, 0, 1, v2515);
              }
              v20 = v3059;
              *(_OWORD *)((char *)v3132 + v2498[7]) = *(_OWORD *)&v2497[v2498[7]];
              *(_OWORD *)((char *)v3132 + v2498[8]) = *(_OWORD *)&v2497[v2498[8]];
              *((_BYTE *)v3132 + v2498[9]) = v2497[v2498[9]];
              *((_BYTE *)v3132 + v2498[10]) = v2497[v2498[10]];
              v2521 = v2498[11];
              v2522 = (char *)v3132 + v2521;
              v2523 = &v2497[v2521];
              v2524 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2524 - 8) + 32))(v2522, v2523, v2524);
              (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))v2925 + 7))(v3132, 0, 1, v2498);
              v208 = v2898;
            }
            v2525 = *(int *)(v208 + 24);
            v2526 = &__src[v2525];
            v2527 = &__dstb[v2525];
            v2528 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2528 - 8) + 32))(v2526, v2527, v2528);
            v2903[7](__src, 0, 1, v208);
          }
          v2529 = v2985;
          v2530 = v2985[7];
          v2531 = &v13[v2530];
          v2532 = &v14[v2530];
          v2533 = type metadata accessor for TranscriptProtoStatementID(0);
          v2534 = *(_QWORD *)(v2533 - 8);
          v3133 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v2534 + 48);
          __dstt = (void *)v2534;
          if (v3133(v2532, 1, v2533))
          {
            v2535 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v2531, v2532, *(_QWORD *)(*(_QWORD *)(v2535 - 8) + 64));
          }
          else
          {
            *v2531 = *v2532;
            *(_OWORD *)(v2531 + 2) = *(_OWORD *)(v2532 + 2);
            v2536 = *(int *)(v2533 + 24);
            __srcu = (char *)v2531 + v2536;
            v2537 = (char *)v2532 + v2536;
            v2538 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2538 - 8) + 32))(__srcu, v2537, v2538);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2534 + 56))(v2531, 0, 1, v2533);
          }
          v2539 = v2985[8];
          v2540 = &v13[v2539];
          v2541 = &v14[v2539];
          v11 = v3066;
          if (v3133(&v14[v2539], 1, v2533))
          {
            v2542 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v2540, v2541, *(_QWORD *)(*(_QWORD *)(v2542 - 8) + 64));
          }
          else
          {
            *v2540 = *v2541;
            *(_OWORD *)(v2540 + 2) = *(_OWORD *)(v2541 + 2);
            v2543 = *(int *)(v2533 + 24);
            v2544 = (char *)v2540 + v2543;
            v2545 = (char *)v2541 + v2543;
            v2546 = sub_2408E57A4();
            v2547 = v2544;
            v11 = v3066;
            v2529 = v2985;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2546 - 8) + 32))(v2547, v2545, v2546);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstt + 7))(v2540, 0, 1, v2533);
          }
          v2548 = v2529[9];
          v2549 = &v13[v2548];
          v2550 = &v14[v2548];
          if (v3133(&v14[v2548], 1, v2533))
          {
            v2551 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v2549, v2550, *(_QWORD *)(*(_QWORD *)(v2551 - 8) + 64));
          }
          else
          {
            *v2549 = *v2550;
            *(_OWORD *)(v2549 + 2) = *(_OWORD *)(v2550 + 2);
            v2552 = *(int *)(v2533 + 24);
            v2553 = v20;
            v2554 = v15;
            v2555 = v11;
            v2556 = (char *)v2549 + v2552;
            v2557 = (char *)v2550 + v2552;
            v2558 = sub_2408E57A4();
            v2559 = v2556;
            v11 = v2555;
            v15 = v2554;
            v20 = v2553;
            v2529 = v2985;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2558 - 8) + 32))(v2559, v2557, v2558);
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstt + 7))(v2549, 0, 1, v2533);
          }
          v3 = v3168;
          v2560 = v2529[10];
          v2561 = &v13[v2560];
          v2562 = &v14[v2560];
          v2563 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2563 - 8) + 32))(v2561, v2562, v2563);
          goto LABEL_810;
        case 0x1Eu:
          v3138 = v21;
          v3036 = v20;
          v3099 = v15;
          v134 = v11;
          v3192 = v4;
          v54 = v3;
          v210 = *((_OWORD *)v14 + 1);
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = v210;
          StepResults = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
          v211 = *(int *)(StepResults + 24);
          v212 = &v13[v211];
          v213 = &v14[v211];
          v214 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v215 = *(_QWORD *)(v214 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v215 + 48))(v213, 1, v214))
            goto LABEL_66;
          goto LABEL_178;
        case 0x1Fu:
          v3138 = v21;
          v3036 = v20;
          v3099 = v15;
          v134 = v11;
          v3192 = v4;
          v54 = v3;
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
          StepResults = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
          v216 = *(int *)(StepResults + 24);
          v212 = &v13[v216];
          v213 = &v14[v216];
          v214 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v215 = *(_QWORD *)(v214 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v215 + 48))(v213, 1, v214))
          {
LABEL_66:
            v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
          }
          else
          {
LABEL_178:
            *(_OWORD *)v212 = *(_OWORD *)v213;
            v212[2] = v213[2];
            v596 = *(int *)(v214 + 24);
            v2994 = (char *)v212 + v596;
            v597 = (char *)v213 + v596;
            v598 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v598 - 8) + 32))(v2994, v597, v598);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
          }
LABEL_179:
          v11 = v134;
          v599 = *(int *)(StepResults + 28);
          v600 = &v13[v599];
          v601 = &v14[v599];
          v602 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v602 - 8) + 32))(v600, v601, v602);
          v20 = v3036;
LABEL_180:
          swift_storeEnumTagMultiPayload();
          v3 = v54;
          v4 = v3192;
          goto LABEL_181;
        case 0x20u:
          v3067 = v11;
          v3169 = v3;
          v218 = type metadata accessor for TranscriptProtoRequestContent(0);
          v219 = *(_QWORD *)(v218 - 8);
          v3191 = v4;
          v3137 = v21;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v219 + 48))(v14, 1, v218))
          {
            v220 = v20;
            v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
          }
          else
          {
            v2995 = v219;
            v603 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v603 - 8) + 48))(v14, 1, v603))
            {
              v1197 = (char *)&loc_240396C4C + 4 * word_2408E87AC[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v604 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v604 - 8) + 64));
            v220 = v20;
            v2250 = *(int *)(v218 + 20);
            v2251 = &v13[v2250];
            v2252 = &v14[v2250];
            v2253 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2253 - 8) + 32))(v2251, v2252, v2253);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v2995 + 56))(v13, 0, 1, v218);
          }
          v2254 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
          *(_OWORD *)&v13[v2254[5]] = *(_OWORD *)&v14[v2254[5]];
          v2255 = v2254[6];
          v2256 = &v13[v2255];
          v2257 = &v14[v2255];
          v2258 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
          v2259 = *(_QWORD *)(v2258 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v2259 + 48))(v2257, 1, v2258))
          {
            v2260 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
            memcpy(v2256, v2257, *(_QWORD *)(*(_QWORD *)(v2260 - 8) + 64));
          }
          else
          {
            *(_OWORD *)v2256 = *(_OWORD *)v2257;
            v2256[2] = v2257[2];
            v2261 = *(int *)(v2258 + 24);
            v3127 = (char *)v2256 + v2261;
            v2262 = (char *)v2257 + v2261;
            v2263 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2263 - 8) + 32))(v3127, v2262, v2263);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2259 + 56))(v2256, 0, 1, v2258);
          }
          v11 = v3067;
          v2264 = v2254[7];
          v2265 = &v13[v2264];
          v2266 = &v14[v2264];
          v2267 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2267 - 8) + 32))(v2265, v2266, v2267);
          v20 = v220;
          goto LABEL_725;
        case 0x21u:
          v3137 = v21;
          v3039 = v20;
          v3191 = v4;
          v3068 = v11;
          v3170 = v3;
          *(_QWORD *)v13 = *(_QWORD *)v14;
          v2986 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
          v222 = *(int *)(v2986 + 20);
          v223 = &v13[v222];
          v224 = &v14[v222];
          v225 = type metadata accessor for TranscriptProtoStatementID(0);
          v226 = *(_QWORD *)(v225 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v226 + 48))(v224, 1, v225))
          {
            v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v223, v224, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
          }
          else
          {
            *v223 = *v224;
            *(_OWORD *)(v223 + 2) = *(_OWORD *)(v224 + 2);
            v605 = *(int *)(v225 + 24);
            v606 = (char *)v223 + v605;
            v607 = (char *)v224 + v605;
            v608 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v608 - 8) + 32))(v606, v607, v608);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v226 + 56))(v223, 0, 1, v225);
          }
          v609 = v2986;
          v610 = *(int *)(v2986 + 24);
          v611 = &v13[v610];
          v612 = &v14[v610];
          v613 = type metadata accessor for TranscriptProtoStatementOutcome(0);
          v614 = *(_QWORD *)(v613 - 8);
          v20 = v3039;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v614 + 48))(v612, 1, v613))
          {
            v615 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
            memcpy(v611, v612, *(_QWORD *)(*(_QWORD *)(v615 - 8) + 64));
          }
          else
          {
            v715 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
            if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v715 - 8) + 48))(v612, 1, v715))
            {
              v1220 = (char *)&loc_240396EA8 + 4 * word_2408E8796[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v716 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
            memcpy(v611, v612, *(_QWORD *)(*(_QWORD *)(v716 - 8) + 64));
            v717 = v612;
            v2424 = *(int *)(v613 + 20);
            v2425 = &v611[v2424];
            v2426 = v613;
            v2427 = &v717[v2424];
            v2428 = sub_2408E57A4();
            (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v2428 - 8) + 32))(v2425, v2427, v2428);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v614 + 56))(v611, 0, 1, v2426);
            v609 = v2986;
          }
          goto LABEL_772;
        case 0x22u:
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
          v228 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
          v3148 = v21;
          v229 = &v13[v228];
          v230 = v4;
          v231 = &v14[v228];
          v232 = sub_2408E57A4();
          v233 = v229;
          v21 = v3148;
          v234 = v231;
          v4 = v230;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v232 - 8) + 32))(v233, v234, v232);
          swift_storeEnumTagMultiPayload();
          goto LABEL_813;
        case 0x23u:
          v3137 = v21;
          v3040 = v20;
          v3171 = v3;
          v235 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
          v236 = *(_QWORD *)(v235 - 8);
          v3191 = v4;
          v3069 = v11;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v236 + 48))(v14, 1, v235))
          {
            v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
          }
          else
          {
            v2996 = v236;
            v616 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_OWORD *)v13 + 1) = v616;
            v13[32] = v14[32];
            *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
            *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
            *((_QWORD *)v13 + 9) = *((_QWORD *)v14 + 9);
            v13[80] = v14[80];
            *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
            *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
            v3110 = (int *)v235;
            v617 = *(int *)(v235 + 68);
            v618 = &v13[v617];
            v619 = &v14[v617];
            v620 = type metadata accessor for ToolKitProtoTypeInstance(0);
            v621 = *(_QWORD *)(v620 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v621 + 48))(v619, 1, v620))
            {
              v622 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
              memcpy(v618, v619, *(_QWORD *)(*(_QWORD *)(v622 - 8) + 64));
            }
            else
            {
              *v618 = *v619;
              v1198 = *(int *)(v620 + 20);
              v1199 = (char *)v618 + v1198;
              v1200 = (char *)v619 + v1198;
              v1201 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1201 - 8) + 32))(v1199, v1200, v1201);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v621 + 56))(v618, 0, 1, v620);
            }
            v1202 = v3110;
            *(_OWORD *)&v13[v3110[18]] = *(_OWORD *)&v14[v3110[18]];
            v1203 = v3110[19];
            v1204 = &v13[v1203];
            v1205 = &v14[v1203];
            v1206 = type metadata accessor for ToolKitProtoAppDefinition(0);
            v1207 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v1206 - 8);
            if (v1207[6](v1205, 1, v1206))
            {
              v1208 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
              memcpy(v1204, v1205, *(_QWORD *)(*(_QWORD *)(v1208 - 8) + 64));
            }
            else
            {
              v1289 = v1205[1];
              *v1204 = *v1205;
              v1204[1] = v1289;
              v1290 = v1205[3];
              v1204[2] = v1205[2];
              v1204[3] = v1290;
              v1204[4] = v1205[4];
              *((_BYTE *)v1204 + 80) = *((_BYTE *)v1205 + 80);
              v1291 = *(int *)(v1206 + 40);
              __srce = v1207;
              __dsth = (_OWORD *)((char *)v1204 + v1291);
              v1292 = (_OWORD *)((char *)v1205 + v1291);
              v1293 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
              v1294 = *(_QWORD *)(v1293 - 8);
              if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1294 + 48))(v1292, 1, v1293))
              {
                v1295 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
                memcpy(__dsth, v1292, *(_QWORD *)(*(_QWORD *)(v1295 - 8) + 64));
              }
              else
              {
                *__dsth = *v1292;
                v1544 = *(int *)(v1293 + 20);
                v2916 = (char *)__dsth + v1544;
                v1545 = (char *)v1292 + v1544;
                v1546 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1546 - 8) + 32))(v2916, v1545, v1546);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1294 + 56))(__dsth, 0, 1, v1293);
              }
              v1547 = *(int *)(v1206 + 44);
              v1548 = (char *)v1204 + v1547;
              v1549 = (char *)v1205 + v1547;
              v1550 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1550 - 8) + 32))(v1548, v1549, v1550);
              (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__srce + 7))(v1204, 0, 1, v1206);
              v1202 = v3110;
            }
            *(_OWORD *)&v13[v1202[20]] = *(_OWORD *)&v14[v1202[20]];
            v1551 = v1202[21];
            v1552 = &v13[v1551];
            v1553 = &v14[v1551];
            v1554 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
            v1555 = *(_QWORD *)(v1554 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1555 + 48))(v1553, 1, v1554))
            {
              v1556 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
              memcpy(v1552, v1553, *(_QWORD *)(*(_QWORD *)(v1556 - 8) + 64));
            }
            else
            {
              v1557 = v1553[1];
              *v1552 = *v1553;
              v1552[1] = v1557;
              v1558 = *(int *)(v1554 + 24);
              v1559 = (char *)v1552 + v1558;
              v1560 = (char *)v1553 + v1558;
              v1561 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1561 - 8) + 32))(v1559, v1560, v1561);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1555 + 56))(v1552, 0, 1, v1554);
            }
            v1562 = v3110;
            v1563 = v3110[22];
            v1564 = &v13[v1563];
            v1565 = &v14[v1563];
            v1566 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
            v1567 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v1566 - 8);
            if (v1567[6](v1565, 1, v1566))
            {
              v1568 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
              memcpy(v1564, v1565, *(_QWORD *)(*(_QWORD *)(v1568 - 8) + 64));
            }
            else
            {
              __dstj = v1567;
              v1569 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
              v1570 = *(_QWORD *)(v1569 - 8);
              if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1570 + 48))(v1565, 1, v1569))
              {
                v1571 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
                memcpy(v1564, v1565, *(_QWORD *)(*(_QWORD *)(v1571 - 8) + 64));
              }
              else
              {
                v1649 = v15;
                v1650 = v1569;
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  *v1564 = *v1565;
                  *((_BYTE *)v1564 + 16) = *((_BYTE *)v1565 + 16);
                  *(_OWORD *)((char *)v1564 + 24) = *(_OWORD *)((char *)v1565 + 24);
                  *(_OWORD *)((char *)v1564 + 40) = *(_OWORD *)((char *)v1565 + 40);
                  v1651 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                 + 32);
                  __srcq = (char *)v1564 + v1651;
                  v1652 = (char *)v1565 + v1651;
                  v1653 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1653 - 8) + 32))(__srcq, v1652, v1653);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v1564, v1565, *(_QWORD *)(v1570 + 64));
                }
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1570 + 56))(v1564, 0, 1, v1650);
                v15 = v1649;
                v1562 = v3110;
              }
              v1720 = *(int *)(v1566 + 20);
              v1721 = (char *)v1564 + v1720;
              v1722 = (char *)v1565 + v1720;
              v1723 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1723 - 8) + 32))(v1721, v1722, v1723);
              (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__dstj + 7))(v1564, 0, 1, v1566);
            }
            v1724 = v1562[23];
            v1725 = &v13[v1724];
            v1726 = &v14[v1724];
            v1727 = type metadata accessor for ToolKitProtoContainerDefinition(0);
            v1728 = *(_QWORD **)(v1727 - 8);
            v1729 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v1728[6];
            if (v1729(v1726, 1, v1727))
            {
              v1730 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
              memcpy(v1725, v1726, *(_QWORD *)(*(_QWORD *)(v1730 - 8) + 64));
            }
            else
            {
              v2918 = v1729;
              __srcg = (int *)v1727;
              __dstm = v1728;
              v1731 = v1726[1];
              *v1725 = *v1726;
              v1725[1] = v1731;
              *((_WORD *)v1725 + 16) = *((_WORD *)v1726 + 16);
              *(_OWORD *)((char *)v1725 + 40) = *(_OWORD *)((char *)v1726 + 40);
              *(_OWORD *)((char *)v1725 + 56) = *(_OWORD *)((char *)v1726 + 56);
              v1732 = *(int *)(v1727 + 40);
              v1733 = (_OWORD *)((char *)v1725 + v1732);
              v1734 = (_OWORD *)((char *)v1726 + v1732);
              v1735 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
              v1736 = *(_QWORD *)(v1735 - 8);
              if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1736 + 48))(v1734, 1, v1735))
              {
                v1737 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                memcpy(v1733, v1734, *(_QWORD *)(*(_QWORD *)(v1737 - 8) + 64));
              }
              else
              {
                *v1733 = *v1734;
                v1738 = *(int *)(v1735 + 20);
                v2907 = (char *)v1733 + v1738;
                v1739 = (char *)v1734 + v1738;
                v1740 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1740 - 8) + 32))(v2907, v1739, v1740);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1736 + 56))(v1733, 0, 1, v1735);
              }
              v1741 = __srcg[11];
              v1742 = (char *)v1725 + v1741;
              v1743 = (char *)v1726 + v1741;
              v1744 = sub_2408E57A4();
              v1745 = v1742;
              v1727 = (uint64_t)__srcg;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1744 - 8) + 32))(v1745, v1743, v1744);
              v1728 = __dstm;
              ((void (*)(_OWORD *, _QWORD, uint64_t, int *))__dstm[7])(v1725, 0, 1, __srcg);
              v1562 = v3110;
              v1729 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v2918;
            }
            v1746 = v1562[24];
            v1747 = &v13[v1746];
            v1748 = &v14[v1746];
            if (v1729(&v14[v1746], 1, v1727))
            {
              v1749 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
              memcpy(v1747, v1748, *(_QWORD *)(*(_QWORD *)(v1749 - 8) + 64));
            }
            else
            {
              __srch = (int *)v1727;
              __dstn = v1728;
              v1750 = v1748[1];
              *v1747 = *v1748;
              v1747[1] = v1750;
              *((_WORD *)v1747 + 16) = *((_WORD *)v1748 + 16);
              *(_OWORD *)((char *)v1747 + 40) = *(_OWORD *)((char *)v1748 + 40);
              *(_OWORD *)((char *)v1747 + 56) = *(_OWORD *)((char *)v1748 + 56);
              v1751 = *(int *)(v1727 + 40);
              v1752 = (_OWORD *)((char *)v1747 + v1751);
              v1753 = (_OWORD *)((char *)v1748 + v1751);
              v1754 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
              v1755 = *(_QWORD *)(v1754 - 8);
              if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1755 + 48))(v1753, 1, v1754))
              {
                v1756 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                memcpy(v1752, v1753, *(_QWORD *)(*(_QWORD *)(v1756 - 8) + 64));
              }
              else
              {
                *v1752 = *v1753;
                v1757 = *(int *)(v1754 + 20);
                v2919 = (char *)v1752 + v1757;
                v1758 = (char *)v1753 + v1757;
                v1759 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1759 - 8) + 32))(v2919, v1758, v1759);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1755 + 56))(v1752, 0, 1, v1754);
              }
              v1760 = __srch[11];
              v1761 = (char *)v1747 + v1760;
              v1762 = (char *)v1748 + v1760;
              v1763 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1763 - 8) + 32))(v1761, v1762, v1763);
              (*((void (**)(_OWORD *, _QWORD, uint64_t, int *))__dstn + 7))(v1747, 0, 1, __srch);
              v1562 = v3110;
            }
            v1764 = v1562[25];
            v1765 = &v13[v1764];
            v1766 = &v14[v1764];
            v1767 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1767 - 8) + 32))(v1765, v1766, v1767);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v2996 + 56))(v13, 0, 1, v1562);
          }
          v1768 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
          v1769 = v1768[5];
          v1770 = &v13[v1769];
          v1771 = &v14[v1769];
          v1772 = type metadata accessor for TranscriptProtoStatementID(0);
          v1773 = *(_QWORD *)(v1772 - 8);
          v3124 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1773 + 48);
          if (v3124(v1771, 1, v1772))
          {
            v1774 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v1770, v1771, *(_QWORD *)(*(_QWORD *)(v1774 - 8) + 64));
          }
          else
          {
            *v1770 = *v1771;
            *(_OWORD *)(v1770 + 2) = *(_OWORD *)(v1771 + 2);
            v1775 = *(int *)(v1772 + 24);
            v1776 = (char *)v1770 + v1775;
            v1777 = (char *)v1771 + v1775;
            v1778 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1778 - 8) + 32))(v1776, v1777, v1778);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1773 + 56))(v1770, 0, 1, v1772);
          }
          v1779 = v1768[6];
          v1780 = &v13[v1779];
          v1781 = &v14[v1779];
          v3 = v3171;
          if (v3124(&v14[v1779], 1, v1772))
          {
            v1782 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v1780, v1781, *(_QWORD *)(*(_QWORD *)(v1782 - 8) + 64));
          }
          else
          {
            *v1780 = *v1781;
            *(_OWORD *)(v1780 + 2) = *(_OWORD *)(v1781 + 2);
            v1783 = *(int *)(v1772 + 24);
            v1784 = (char *)v1780 + v1783;
            v1785 = (char *)v1781 + v1783;
            v1786 = sub_2408E57A4();
            v1787 = v1784;
            v3 = v3171;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1786 - 8) + 32))(v1787, v1785, v1786);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1773 + 56))(v1780, 0, 1, v1772);
          }
          v11 = v3069;
          v1788 = v1768[7];
          v1789 = &v13[v1788];
          v1790 = &v14[v1788];
          v1791 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1791 - 8) + 32))(v1789, v1790, v1791);
          v20 = v3040;
LABEL_810:
          swift_storeEnumTagMultiPayload();
          goto LABEL_811;
        case 0x24u:
          v3137 = v21;
          v3041 = v20;
          v3101 = v15;
          v3070 = v11;
          v3172 = v3;
          v3193 = v4;
          *(_OWORD *)v13 = *(_OWORD *)v14;
          v13[16] = v14[16];
          *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
          v238 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
          v239 = *(int *)(v238 + 28);
          v240 = &v13[v239];
          v241 = &v14[v239];
          v242 = type metadata accessor for TranscriptProtoStatementID(0);
          v243 = *(_QWORD *)(v242 - 8);
          v244 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v243 + 48);
          if (v244(v241, 1, v242))
          {
            v245 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v240, v241, *(_QWORD *)(*(_QWORD *)(v245 - 8) + 64));
          }
          else
          {
            *v240 = *v241;
            *(_OWORD *)(v240 + 2) = *(_OWORD *)(v241 + 2);
            v623 = *(int *)(v242 + 24);
            v624 = v238;
            v625 = (char *)v240 + v623;
            v626 = (char *)v241 + v623;
            v627 = sub_2408E57A4();
            v628 = v625;
            v238 = v624;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v627 - 8) + 32))(v628, v626, v627);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v240, 0, 1, v242);
          }
          v629 = v238;
          v630 = *(int *)(v238 + 32);
          v631 = &v13[v630];
          v632 = &v14[v630];
          v3 = v3172;
          if (v244(&v14[v630], 1, v242))
          {
            v633 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v631, v632, *(_QWORD *)(*(_QWORD *)(v633 - 8) + 64));
          }
          else
          {
            *v631 = *v632;
            *(_OWORD *)(v631 + 2) = *(_OWORD *)(v632 + 2);
            v718 = *(int *)(v242 + 24);
            v719 = (char *)v631 + v718;
            v720 = (char *)v632 + v718;
            v721 = sub_2408E57A4();
            v722 = v719;
            v3 = v3172;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v721 - 8) + 32))(v722, v720, v721);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v631, 0, 1, v242);
          }
          v723 = v3193;
          v11 = v3070;
          v15 = v3101;
          v724 = *(int *)(v629 + 36);
          v725 = &v13[v724];
          v726 = &v14[v724];
          v727 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v727 - 8) + 32))(v725, v726, v727);
          v20 = v3041;
          goto LABEL_218;
        case 0x25u:
          v3137 = v21;
          v3042 = v20;
          v3102 = v15;
          v3071 = v11;
          v3173 = v3;
          v3194 = v4;
          *(_OWORD *)v13 = *(_OWORD *)v14;
          v13[16] = v14[16];
          v246 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
          v247 = *(int *)(v246 + 24);
          v248 = &v13[v247];
          v249 = &v14[v247];
          v250 = type metadata accessor for TranscriptProtoStatementID(0);
          v251 = *(_QWORD *)(v250 - 8);
          v252 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v251 + 48);
          if (v252(v249, 1, v250))
          {
            v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
          }
          else
          {
            *v248 = *v249;
            *(_OWORD *)(v248 + 2) = *(_OWORD *)(v249 + 2);
            v634 = *(int *)(v250 + 24);
            v635 = v246;
            v636 = (char *)v248 + v634;
            v637 = (char *)v249 + v634;
            v638 = sub_2408E57A4();
            v639 = v636;
            v246 = v635;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v638 - 8) + 32))(v639, v637, v638);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v248, 0, 1, v250);
          }
          v640 = v246;
          v641 = *(int *)(v246 + 28);
          v642 = &v13[v641];
          v643 = &v14[v641];
          v3 = v3173;
          if (v252(&v14[v641], 1, v250))
          {
            v644 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v642, v643, *(_QWORD *)(*(_QWORD *)(v644 - 8) + 64));
          }
          else
          {
            *v642 = *v643;
            *(_OWORD *)(v642 + 2) = *(_OWORD *)(v643 + 2);
            v728 = *(int *)(v250 + 24);
            v729 = (char *)v642 + v728;
            v730 = (char *)v643 + v728;
            v731 = sub_2408E57A4();
            v732 = v729;
            v3 = v3173;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v731 - 8) + 32))(v732, v730, v731);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v642, 0, 1, v250);
          }
          v723 = v3194;
          v11 = v3071;
          v15 = v3102;
          v733 = *(int *)(v640 + 32);
          v734 = &v13[v733];
          v735 = &v14[v733];
          v736 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v736 - 8) + 32))(v734, v735, v736);
          v20 = v3042;
LABEL_218:
          swift_storeEnumTagMultiPayload();
LABEL_771:
          v4 = v723;
          goto LABEL_812;
        case 0x26u:
          v3137 = v21;
          v3043 = v20;
          v3191 = v4;
          v254 = type metadata accessor for ToolKitProtoTypedValue(0);
          v255 = *(_QWORD *)(v254 - 8);
          v3072 = v11;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v255 + 48))(v14, 1, v254))
          {
            v256 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v256 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v13 = *(_QWORD *)v14;
            v645 = *(int *)(v254 + 20);
            v646 = &v13[v645];
            v647 = v15;
            v648 = v3;
            v649 = &v14[v645];
            v650 = sub_2408E57A4();
            v651 = v649;
            v3 = v648;
            v15 = v647;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v650 - 8) + 32))(v646, v651, v650);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v255 + 56))(v13, 0, 1, v254);
          }
          v3169 = v3;
          v652 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
          v653 = *(int *)(v652 + 20);
          v654 = &v13[v653];
          v655 = &v14[v653];
          v656 = type metadata accessor for ToolKitProtoTypeInstance(0);
          v657 = *(_QWORD *)(v656 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v657 + 48))(v655, 1, v656))
          {
            v658 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
            memcpy(v654, v655, *(_QWORD *)(*(_QWORD *)(v658 - 8) + 64));
          }
          else
          {
            *v654 = *v655;
            v737 = *(int *)(v656 + 20);
            v738 = (char *)v654 + v737;
            v739 = (char *)v655 + v737;
            v740 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v740 - 8) + 32))(v738, v739, v740);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v657 + 56))(v654, 0, 1, v656);
          }
          v741 = v652;
          v742 = *(int *)(v652 + 24);
          v743 = &v13[v742];
          v744 = &v14[v742];
          v745 = type metadata accessor for TranscriptProtoStatementID(0);
          v746 = *(_QWORD *)(v745 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v746 + 48))(v744, 1, v745))
          {
            v747 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v743, v744, *(_QWORD *)(*(_QWORD *)(v747 - 8) + 64));
          }
          else
          {
            *v743 = *v744;
            *(_OWORD *)(v743 + 2) = *(_OWORD *)(v744 + 2);
            v763 = *(int *)(v745 + 24);
            v764 = (char *)v743 + v763;
            v765 = (char *)v744 + v763;
            v766 = sub_2408E57A4();
            v767 = v764;
            v741 = v652;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v766 - 8) + 32))(v767, v765, v766);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v746 + 56))(v743, 0, 1, v745);
          }
          v11 = v3072;
          v768 = *(int *)(v741 + 28);
          v769 = &v13[v768];
          v770 = &v14[v768];
          v771 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v771 - 8) + 32))(v769, v770, v771);
          v20 = v3043;
LABEL_725:
          swift_storeEnumTagMultiPayload();
          v3 = v3169;
          goto LABEL_811;
        case 0x27u:
          v3137 = v21;
          v3044 = v20;
          v3097 = v15;
          v3174 = v3;
          v257 = type metadata accessor for ToolKitProtoTypedValue(0);
          v258 = *(_QWORD *)(v257 - 8);
          v3073 = v11;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v258 + 48))(v14, 1, v257))
          {
            v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v13 = *(_QWORD *)v14;
            v659 = *(int *)(v257 + 20);
            v660 = v4;
            v661 = &v13[v659];
            v662 = &v14[v659];
            v663 = sub_2408E57A4();
            v664 = v661;
            v4 = v660;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v663 - 8) + 32))(v664, v662, v663);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v258 + 56))(v13, 0, 1, v257);
          }
          v3191 = v4;
          v665 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
          v666 = *(int *)(v665 + 20);
          v667 = &v13[v666];
          v668 = &v14[v666];
          v669 = type metadata accessor for TranscriptProtoStatementID(0);
          v670 = *(_QWORD *)(v669 - 8);
          v671 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v670 + 48);
          if (v671(v668, 1, v669))
          {
            v672 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v667, v668, *(_QWORD *)(*(_QWORD *)(v672 - 8) + 64));
          }
          else
          {
            *v667 = *v668;
            *(_OWORD *)(v667 + 2) = *(_OWORD *)(v668 + 2);
            v748 = *(int *)(v669 + 24);
            v749 = v665;
            v750 = (char *)v667 + v748;
            v751 = (char *)v668 + v748;
            v752 = sub_2408E57A4();
            v753 = v750;
            v665 = v749;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v752 - 8) + 32))(v753, v751, v752);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v670 + 56))(v667, 0, 1, v669);
          }
          v754 = v665;
          v755 = *(int *)(v665 + 24);
          v756 = &v13[v755];
          v757 = &v14[v755];
          v3 = v3174;
          if (v671(&v14[v755], 1, v669))
          {
            v758 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v756, v757, *(_QWORD *)(*(_QWORD *)(v758 - 8) + 64));
          }
          else
          {
            *v756 = *v757;
            *(_OWORD *)(v756 + 2) = *(_OWORD *)(v757 + 2);
            v772 = *(int *)(v669 + 24);
            v773 = (char *)v756 + v772;
            v774 = (char *)v757 + v772;
            v775 = sub_2408E57A4();
            v776 = v773;
            v3 = v3174;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v775 - 8) + 32))(v776, v774, v775);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v670 + 56))(v756, 0, 1, v669);
          }
          v11 = v3073;
          v777 = *(int *)(v754 + 28);
          v778 = &v13[v777];
          v779 = &v14[v777];
          v780 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v780 - 8) + 32))(v778, v779, v780);
          v20 = v3044;
          swift_storeEnumTagMultiPayload();
LABEL_371:
          v15 = v3097;
          goto LABEL_811;
        case 0x28u:
          v3099 = v15;
          v3138 = v21;
          v3074 = v11;
          v3195 = v4;
          v260 = v3;
          v261 = *((_OWORD *)v14 + 1);
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = v261;
          DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
          v263 = *(int *)(DecorationResult + 32);
          v264 = &v13[v263];
          v265 = &v14[v263];
          DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
          v267 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v267 + 48))(v265, 1, DecorationToolRetrievalResponse))
          {
            v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
            memcpy(v264, v265, *(_QWORD *)(*(_QWORD *)(v268 - 8) + 64));
          }
          else
          {
            v673 = v265[1];
            *v264 = *v265;
            v264[1] = v673;
            *((_DWORD *)v264 + 8) = *((_DWORD *)v265 + 8);
            *(_OWORD *)((char *)v264 + 40) = *(_OWORD *)((char *)v265 + 40);
            v674 = *(int *)(DecorationToolRetrievalResponse + 36);
            v2997 = (char *)v264 + v674;
            v675 = (char *)v265 + v674;
            v676 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v676 - 8) + 32))(v2997, v675, v676);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v267 + 56))(v264, 0, 1, DecorationToolRetrievalResponse);
          }
          v677 = *(int *)(DecorationResult + 36);
          v678 = &v13[v677];
          v679 = &v14[v677];
          v680 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v680 - 8) + 32))(v678, v679, v680);
          swift_storeEnumTagMultiPayload();
          v3 = v260;
          v4 = v3195;
          v11 = v3074;
LABEL_181:
          v15 = v3099;
          v21 = v3138;
          goto LABEL_813;
        case 0x2Au:
          v3137 = v21;
          v3045 = v20;
          v3191 = v4;
          v3068 = v11;
          v3170 = v3;
          *(_OWORD *)v13 = *(_OWORD *)v14;
          DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
          v269 = *(int *)(DecorationPrePlannerResult + 20);
          v270 = &v13[v269];
          v271 = &v14[v269];
          v272 = type metadata accessor for TranscriptProtoStatementID(0);
          v273 = *(_QWORD *)(v272 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v273 + 48))(v271, 1, v272))
          {
            v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v270, v271, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
          }
          else
          {
            *v270 = *v271;
            *(_OWORD *)(v270 + 2) = *(_OWORD *)(v271 + 2);
            v681 = *(int *)(v272 + 24);
            v682 = (char *)v270 + v681;
            v683 = (char *)v271 + v681;
            v684 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v684 - 8) + 32))(v682, v683, v684);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v273 + 56))(v270, 0, 1, v272);
          }
          v609 = DecorationPrePlannerResult;
          v685 = *(int *)(DecorationPrePlannerResult + 24);
          v686 = &v13[v685];
          v687 = &v14[v685];
          DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
          v689 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
          v20 = v3045;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v689 + 48))(v687, 1, DecorationPrePlannerResultPayload))
          {
            v690 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
            memcpy(v686, v687, *(_QWORD *)(*(_QWORD *)(v690 - 8) + 64));
          }
          else
          {
            v2999 = v689;
            DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
            if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum
                                                                                        - 8)
                                                                            + 48))(v687, 1, DecorationPrePlannerPayloadEnum))
            {
              v1221 = (char *)&loc_240396F58 + 4 * word_2408E878A[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v760 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
            memcpy(v686, v687, *(_QWORD *)(*(_QWORD *)(v760 - 8) + 64));
            v761 = DecorationPrePlannerResultPayload;
            v762 = v687;
            v1792 = *(int *)(v761 + 20);
            v1793 = &v686[v1792];
            v1794 = v686;
            v1795 = &v762[v1792];
            v1796 = sub_2408E57A4();
            (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v1796 - 8) + 32))(v1793, v1795, v1796);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2999 + 56))(v1794, 0, 1, v761);
            v609 = DecorationPrePlannerResult;
          }
LABEL_772:
          v2429 = *(int *)(v609 + 28);
          v2430 = &v13[v2429];
          v2431 = &v14[v2429];
          v2432 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2432 - 8) + 32))(v2430, v2431, v2432);
          swift_storeEnumTagMultiPayload();
          v3 = v3170;
          v11 = v3068;
LABEL_811:
          v4 = v3191;
          goto LABEL_812;
        default:
          memcpy(v13, v14, *(_QWORD *)(v21 + 64));
          goto LABEL_813;
      }
    }
LABEL_7:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_821;
  }
  if (v19)
  {
    sub_240388AE4((uint64_t)v13, type metadata accessor for TranscriptProtoPayload);
    goto LABEL_7;
  }
  v24 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v13, 1, v24);
  v28 = v26(v14, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      if (v4 != v3)
      {
        sub_240388AE4((uint64_t)v13, type metadata accessor for TranscriptProtoPayloadEnum);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v3098 = v15;
            v3063 = v11;
            v3165 = v3;
            *v13 = *v14;
            v45 = type metadata accessor for TranscriptProtoSessionStart(0);
            v46 = *(int *)(v45 + 20);
            v47 = &v13[v46];
            v48 = &v14[v46];
            v49 = type metadata accessor for TranscriptProtoLocaleSettings(0);
            v50 = *(_QWORD *)(v49 - 8);
            v51 = v4;
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
            {
              v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
              memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
            }
            else
            {
              v1314 = v48[1];
              *v47 = *v48;
              v47[1] = v1314;
              v47[2] = v48[2];
              v1315 = *(int *)(v49 + 28);
              v1316 = (char *)v47 + v1315;
              v1317 = (char *)v48 + v1315;
              v1318 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1318 - 8) + 32))(v1316, v1317, v1318);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
            }
            v1319 = v45;
            v1320 = *(int *)(v45 + 24);
            v1321 = &v13[v1320];
            v1322 = &v14[v1320];
            v1323 = type metadata accessor for TranscriptProtoDeviceDetails(0);
            v1324 = *(_QWORD *)(v1323 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1324 + 48))(v1322, 1, v1323))
            {
              v1325 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
              memcpy(v1321, v1322, *(_QWORD *)(*(_QWORD *)(v1325 - 8) + 64));
            }
            else
            {
              v3025 = v13;
              v3207 = v51;
              *v1321 = *v1322;
              v1572 = *(int *)(v1323 + 20);
              v1573 = v1321;
              v1574 = (_DWORD *)((char *)v1321 + v1572);
              v1575 = (_DWORD *)((char *)v1322 + v1572);
              v1576 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
              v1577 = *(_QWORD *)(v1576 - 8);
              if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1577 + 48))(v1575, 1, v1576))
              {
                v1578 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
                memcpy(v1574, v1575, *(_QWORD *)(*(_QWORD *)(v1578 - 8) + 64));
              }
              else
              {
                *v1574 = *v1575;
                v1827 = *(int *)(v1576 + 20);
                v3160 = (char *)v1574 + v1827;
                v1828 = (char *)v1575 + v1827;
                v1829 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1829 - 8) + 32))(v3160, v1828, v1829);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1577 + 56))(v1574, 0, 1, v1576);
              }
              v1830 = *(int *)(v1323 + 24);
              v1831 = (char *)v1573 + v1830;
              v1832 = (char *)v1322 + v1830;
              v1833 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1833 - 8) + 32))(v1831, v1832, v1833);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1324 + 56))(v1573, 0, 1, v1323);
              v51 = v3207;
              v13 = v3025;
              v1319 = v45;
            }
            v1834 = *(int *)(v1319 + 28);
            v1835 = &v13[v1834];
            v1836 = &v14[v1834];
            v1837 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1837 - 8) + 32))(v1835, v1836, v1837);
            swift_storeEnumTagMultiPayload();
            v3 = v3165;
            v11 = v3063;
            goto LABEL_581;
          case 1u:
            v3111 = v15;
            v795 = v11;
            v3181 = v3;
            v3201 = v4;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v13[16] = v14[16];
            v796 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
            v797 = v796[6];
            v798 = &v13[v797];
            v799 = &v14[v797];
            v800 = type metadata accessor for TranscriptProtoStatementID(0);
            v801 = *(_QWORD *)(v800 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v801 + 48))(v799, 1, v800))
            {
              v802 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v798, v799, *(_QWORD *)(*(_QWORD *)(v802 - 8) + 64));
            }
            else
            {
              *v798 = *v799;
              *(_OWORD *)(v798 + 2) = *(_OWORD *)(v799 + 2);
              v1326 = *(int *)(v800 + 24);
              v1327 = (char *)v798 + v1326;
              v1328 = (char *)v799 + v1326;
              v1329 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1329 - 8) + 32))(v1327, v1328, v1329);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v801 + 56))(v798, 0, 1, v800);
            }
            v11 = v795;
            *(_OWORD *)&v13[v796[7]] = *(_OWORD *)&v14[v796[7]];
            v1330 = v796[8];
            v1331 = &v13[v1330];
            v1332 = &v14[v1330];
            v1333 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1333 - 8) + 32))(v1331, v1332, v1333);
            goto LABEL_433;
          case 2u:
            *(_QWORD *)v13 = *(_QWORD *)v14;
            v13[8] = v14[8];
            *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
            v803 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
            v804 = &v13[v803];
            v805 = v4;
            v806 = &v14[v803];
            v807 = sub_2408E57A4();
            v808 = v806;
            v4 = v805;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v807 - 8) + 32))(v804, v808, v807);
            swift_storeEnumTagMultiPayload();
            goto LABEL_820;
          case 3u:
            v3084 = v11;
            *v13 = *v14;
            v809 = (int *)type metadata accessor for TranscriptProtoRequest(0);
            v810 = v809[5];
            v811 = &v13[v810];
            v812 = &v14[v810];
            v813 = type metadata accessor for TranscriptProtoRequestContent(0);
            v814 = *(_QWORD *)(v813 - 8);
            v3182 = v3;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v814 + 48))(v812, 1, v813))
            {
              v815 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
              memcpy(v811, v812, *(_QWORD *)(*(_QWORD *)(v815 - 8) + 64));
            }
            else
            {
              v3117 = v15;
              v3156 = v809;
              v1334 = v4;
              v1335 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1335 - 8) + 48))(v812, 1, v1335))
              {
                v1797 = (char *)&loc_24039A4A4 + 4 * word_2408E898A[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1336 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
              memcpy(v811, v812, *(_QWORD *)(*(_QWORD *)(v1336 - 8) + 64));
              v2320 = *(int *)(v813 + 20);
              v2321 = &v811[v2320];
              v2322 = &v812[v2320];
              v2323 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2323 - 8) + 32))(v2321, v2322, v2323);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v814 + 56))(v811, 0, 1, v813);
              v4 = v1334;
              v15 = v3117;
              v809 = v3156;
            }
            v2324 = v809[6];
            v2325 = &v13[v2324];
            v2326 = &v14[v2324];
            v2327 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
            v2328 = *(_QWORD *)(v2327 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2328 + 48))(v2326, 1, v2327))
            {
              v2329 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
              memcpy(v2325, v2326, *(_QWORD *)(*(_QWORD *)(v2329 - 8) + 64));
            }
            else
            {
              v3161 = v809;
              v2330 = v15;
              v2331 = v4;
              v2332 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2332 - 8) + 48))(v2326, 1, v2332))
              {
                v2334 = (char *)&loc_2403A3FF4 + 4 * byte_2408E8992[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v2333 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
              memcpy(v2325, v2326, *(_QWORD *)(*(_QWORD *)(v2333 - 8) + 64));
              v2335 = *(int *)(v2327 + 20);
              v2336 = &v2325[v2335];
              v2337 = &v2326[v2335];
              v2338 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2338 - 8) + 32))(v2336, v2337, v2338);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2328 + 56))(v2325, 0, 1, v2327);
              v4 = v2331;
              v15 = v2330;
              v809 = v3161;
            }
            v3208 = v4;
            *(_OWORD *)&v13[v809[7]] = *(_OWORD *)&v14[v809[7]];
            v2339 = v809;
            v2340 = v809[8];
            v2341 = &v13[v2340];
            v2342 = &v14[v2340];
            v2343 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
            v2344 = *(_QWORD *)(v2343 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v2344 + 48))(v2342, 1, v2343))
            {
              v2345 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
              memcpy(v2341, v2342, *(_QWORD *)(*(_QWORD *)(v2345 - 8) + 64));
            }
            else
            {
              *(_OWORD *)v2341 = *(_OWORD *)v2342;
              v2341[2] = v2342[2];
              v2346 = *(int *)(v2343 + 24);
              v2347 = (char *)v2341 + v2346;
              v2348 = (char *)v2342 + v2346;
              v2349 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2349 - 8) + 32))(v2347, v2348, v2349);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2344 + 56))(v2341, 0, 1, v2343);
            }
            v2350 = v2339[9];
            v2351 = &v13[v2350];
            v2352 = &v14[v2350];
            v2353 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2353 - 8) + 32))(v2351, v2352, v2353);
            goto LABEL_878;
          case 4u:
            v816 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_OWORD *)v13 + 1) = v816;
            *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
            *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
            v13[56] = v14[56];
            v817 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
            v818 = &v13[v817];
            v819 = v4;
            v820 = &v14[v817];
            v821 = sub_2408E57A4();
            v822 = v820;
            v4 = v819;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v821 - 8) + 32))(v818, v822, v821);
            swift_storeEnumTagMultiPayload();
            goto LABEL_820;
          case 5u:
            v3111 = v15;
            v823 = v11;
            v3181 = v3;
            v3201 = v4;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v13[16] = v14[16];
            *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
            v824 = (int *)type metadata accessor for TranscriptProtoAction(0);
            v825 = v824[7];
            v826 = &v13[v825];
            v827 = &v14[v825];
            v828 = type metadata accessor for TranscriptProtoStatementID(0);
            v829 = *(_QWORD *)(v828 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v829 + 48))(v827, 1, v828))
            {
              v830 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v826, v827, *(_QWORD *)(*(_QWORD *)(v830 - 8) + 64));
            }
            else
            {
              *v826 = *v827;
              *(_OWORD *)(v826 + 2) = *(_OWORD *)(v827 + 2);
              v1337 = *(int *)(v828 + 24);
              v1338 = (char *)v826 + v1337;
              v1339 = (char *)v827 + v1337;
              v1340 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1340 - 8) + 32))(v1338, v1339, v1340);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v829 + 56))(v826, 0, 1, v828);
            }
            v11 = v823;
            *(_OWORD *)&v13[v824[8]] = *(_OWORD *)&v14[v824[8]];
            *(_OWORD *)&v13[v824[9]] = *(_OWORD *)&v14[v824[9]];
            *(_OWORD *)&v13[v824[10]] = *(_OWORD *)&v14[v824[10]];
            v1341 = v824[11];
            v1342 = &v13[v1341];
            v1343 = &v14[v1341];
            v1344 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1344 - 8) + 32))(v1342, v1343, v1344);
            goto LABEL_433;
          case 6u:
            v3111 = v15;
            v831 = v11;
            v3181 = v3;
            v3201 = v4;
            v832 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_OWORD *)v13 + 1) = v832;
            v833 = *((_OWORD *)v14 + 3);
            *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
            *((_OWORD *)v13 + 3) = v833;
            v834 = type metadata accessor for TranscriptProtoClientAction(0);
            v835 = *(int *)(v834 + 36);
            v836 = &v13[v835];
            v837 = &v14[v835];
            v838 = type metadata accessor for TranscriptProtoStatementID(0);
            v839 = *(_QWORD *)(v838 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v839 + 48))(v837, 1, v838))
            {
              v840 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v836, v837, *(_QWORD *)(*(_QWORD *)(v840 - 8) + 64));
            }
            else
            {
              *v836 = *v837;
              *(_OWORD *)(v836 + 2) = *(_OWORD *)(v837 + 2);
              v1345 = *(int *)(v838 + 24);
              v1346 = (char *)v836 + v1345;
              v1347 = (char *)v837 + v1345;
              v1348 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1348 - 8) + 32))(v1346, v1347, v1348);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v839 + 56))(v836, 0, 1, v838);
            }
            v11 = v831;
            v1349 = *(int *)(v834 + 40);
            v1350 = &v13[v1349];
            v1351 = &v14[v1349];
            v1352 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1352 - 8) + 32))(v1350, v1351, v1352);
            goto LABEL_433;
          case 7u:
            v3111 = v15;
            v841 = v11;
            v3181 = v3;
            v3201 = v4;
            *(_QWORD *)v13 = *(_QWORD *)v14;
            v842 = type metadata accessor for TranscriptProtoQueryStep(0);
            v843 = *(int *)(v842 + 20);
            v844 = &v13[v843];
            v845 = &v14[v843];
            v846 = type metadata accessor for TranscriptProtoStatementID(0);
            v847 = *(_QWORD *)(v846 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v847 + 48))(v845, 1, v846))
              goto LABEL_245;
            goto LABEL_412;
          case 8u:
            v3111 = v15;
            v841 = v11;
            v3181 = v3;
            v3201 = v4;
            *(_QWORD *)v13 = *(_QWORD *)v14;
            v842 = type metadata accessor for TranscriptProtoVariableStep(0);
            v849 = *(int *)(v842 + 20);
            v844 = &v13[v849];
            v845 = &v14[v849];
            v846 = type metadata accessor for TranscriptProtoStatementID(0);
            v847 = *(_QWORD *)(v846 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v847 + 48))(v845, 1, v846))
            {
LABEL_245:
              v848 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v844, v845, *(_QWORD *)(*(_QWORD *)(v848 - 8) + 64));
            }
            else
            {
LABEL_412:
              *v844 = *v845;
              *(_OWORD *)(v844 + 2) = *(_OWORD *)(v845 + 2);
              v1353 = *(int *)(v846 + 24);
              v1354 = (char *)v844 + v1353;
              v1355 = (char *)v845 + v1353;
              v1356 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1356 - 8) + 32))(v1354, v1355, v1356);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v847 + 56))(v844, 0, 1, v846);
            }
            v11 = v841;
            v1357 = *(int *)(v842 + 24);
            v1358 = &v13[v1357];
            v1359 = &v14[v1357];
            v1360 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1360 - 8) + 32))(v1358, v1359, v1360);
            goto LABEL_433;
          case 0xAu:
            v850 = v3;
            v851 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
            if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v851 - 8) + 48))(v14, 1, v851))
            {
              v1361 = (char *)&loc_240397B38 + 4 * word_2408E8982[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
            }
            v852 = v4;
            v853 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
            memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v853 - 8) + 64));
            v2214 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
            v2215 = &v13[v2214];
            v2216 = &v14[v2214];
            v2217 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2217 - 8) + 32))(v2215, v2216, v2217);
            goto LABEL_711;
          case 0xBu:
            v850 = v3;
            v854 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
            v855 = *(_QWORD *)(v854 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v855 + 48))(v14, 1, v854))
            {
              v852 = v4;
              v856 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
              memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v856 - 8) + 64));
            }
            else
            {
              v3118 = v15;
              v3095 = v11;
              v1362 = v4;
              v1363 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
              v1364 = *(_QWORD *)(v1363 - 8);
              if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v1364 + 48))(v14, 1, v1363))
              {
                v1365 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
                memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v1365 - 8) + 64));
              }
              else
              {
                v1798 = *((_OWORD *)v14 + 1);
                *(_OWORD *)v13 = *(_OWORD *)v14;
                *((_OWORD *)v13 + 1) = v1798;
                *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
                v1799 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
                v3159 = &v13[v1799];
                v1800 = &v14[v1799];
                v1801 = sub_2408E57A4();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1801 - 8) + 32))(v3159, v1800, v1801);
                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v1364 + 56))(v13, 0, 1, v1363);
              }
              v1802 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
              v1803 = &v13[v1802];
              v1804 = &v14[v1802];
              v1805 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1805 - 8) + 32))(v1803, v1804, v1805);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v855 + 56))(v13, 0, 1, v854);
              v852 = v1362;
              v11 = v3095;
              v15 = v3118;
            }
            v1806 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
            v1807 = &v13[v1806];
            v1808 = &v14[v1806];
            v1809 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1809 - 8) + 32))(v1807, v1808, v1809);
LABEL_711:
            swift_storeEnumTagMultiPayload();
            v3 = v850;
            v4 = v852;
            goto LABEL_820;
          case 0xCu:
            v857 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_OWORD *)v13 + 1) = v857;
            *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
            v858 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
            v859 = &v13[v858];
            v860 = v4;
            v861 = &v14[v858];
            v862 = sub_2408E57A4();
            v863 = v861;
            v4 = v860;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v862 - 8) + 32))(v859, v863, v862);
            swift_storeEnumTagMultiPayload();
            goto LABEL_820;
          case 0xDu:
            v3085 = v11;
            v3183 = v3;
            v864 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_OWORD *)v13 + 1) = v864;
            v865 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
            v866 = *(int *)(v865 + 24);
            v867 = &v13[v866];
            v868 = &v14[v866];
            v869 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
            v870 = *(_QWORD *)(v869 - 8);
            v3152 = v865;
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v870 + 48))(v868, 1, v869))
            {
              v871 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
              memcpy(v867, v868, *(_QWORD *)(*(_QWORD *)(v871 - 8) + 64));
            }
            else
            {
              v1366 = v15;
              v1367 = v4;
              v1368 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
              v1369 = *(_QWORD *)(v1368 - 8);
              if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v1369 + 48))(v868, 1, v1368))
              {
                v1370 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
                memcpy(v867, v868, *(_QWORD *)(*(_QWORD *)(v1370 - 8) + 64));
              }
              else
              {
                v1810 = swift_getEnumCaseMultiPayload();
                switch(v1810)
                {
                  case 6:
                    v2078 = sub_2408E57A4();
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2078 - 8) + 32))(v867, v868, v2078);
                    swift_storeEnumTagMultiPayload();
                    break;
                  case 5:
                    *v867 = *v868;
                    v2079 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                                   + 20);
                    __dstba = &v868[v2079];
                    v3017 = &v867[v2079];
                    v2080 = sub_2408E57A4();
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2080 - 8) + 32))(v3017, __dstba, v2080);
                    swift_storeEnumTagMultiPayload();
                    break;
                  case 1:
                    *(_QWORD *)v867 = *(_QWORD *)v868;
                    v1811 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
                    __dstw = &v868[v1811];
                    v3015 = &v867[v1811];
                    v1812 = sub_2408E57A4();
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1812 - 8) + 32))(v3015, __dstw, v1812);
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v867, v868, *(_QWORD *)(v1369 + 64));
                    break;
                }
                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v1369 + 56))(v867, 0, 1, v1368);
              }
              v2081 = *(int *)(v869 + 20);
              v2082 = &v867[v2081];
              v2083 = &v868[v2081];
              v2084 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2084 - 8) + 32))(v2082, v2083, v2084);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v870 + 56))(v867, 0, 1, v869);
              v4 = v1367;
              v15 = v1366;
              v865 = v3152;
            }
            v2085 = *(int *)(v865 + 28);
            v2086 = &v13[v2085];
            v2087 = &v14[v2085];
            v2088 = type metadata accessor for TranscriptProtoStatementID(0);
            v2089 = *(_QWORD *)(v2088 - 8);
            v2090 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v2089 + 48);
            v2091 = v4;
            if (v2090(v2087, 1, v2088))
            {
              v2092 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v2086, v2087, *(_QWORD *)(*(_QWORD *)(v2092 - 8) + 64));
            }
            else
            {
              *v2086 = *v2087;
              *(_OWORD *)(v2086 + 2) = *(_OWORD *)(v2087 + 2);
              v2093 = *(int *)(v2088 + 24);
              v2094 = (char *)v2086 + v2093;
              v2095 = (char *)v2087 + v2093;
              v2096 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2096 - 8) + 32))(v2094, v2095, v2096);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2089 + 56))(v2086, 0, 1, v2088);
            }
            v2097 = v3152;
            v2098 = *(int *)(v3152 + 32);
            v2099 = &v13[v2098];
            v2100 = &v14[v2098];
            v2101 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
            __dstq = *(unsigned int (***)(_QWORD *, uint64_t))(v2101 - 8);
            v3018 = v2101;
            if (__dstq[6](v2100, 1))
            {
              v2102 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
              memcpy(v2099, v2100, *(_QWORD *)(*(_QWORD *)(v2102 - 8) + 64));
              goto LABEL_710;
            }
            v3125 = v15;
            v2103 = v2091;
            v2104 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
            v2105 = *(_QWORD *)(v2104 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v2105 + 48))(v2100, 1, v2104))
            {
              v2106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
              memcpy(v2099, v2100, *(_QWORD *)(*(_QWORD *)(v2106 - 8) + 64));
              goto LABEL_709;
            }
            v2923 = (void *)v2104;
            __srcl = v2099;
            v2107 = swift_getEnumCaseMultiPayload();
            if (v2107 == 1)
            {
              *v2099 = *v2100;
              v2112 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
              v2113 = (char *)v2099 + v2112;
              v2114 = (char *)v2100 + v2112;
              v2115 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2115 - 8) + 32))(v2113, v2114, v2115);
            }
            else
            {
              if (v2107)
              {
                memcpy(v2099, v2100, *(_QWORD *)(v2105 + 64));
                goto LABEL_708;
              }
              *(_OWORD *)v2099 = *(_OWORD *)v2100;
              v2909 = (int *)type metadata accessor for TranscriptProtoRequestContentTextContent(0);
              v2108 = v2909[5];
              v2109 = (_DWORD *)((char *)v2099 + v2108);
              v2110 = (_DWORD *)((char *)v2100 + v2108);
              if (v2090((_QWORD *)((char *)v2100 + v2108), 1, v2088))
              {
                v2111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
                memcpy(v2109, v2110, *(_QWORD *)(*(_QWORD *)(v2111 - 8) + 64));
              }
              else
              {
                *v2109 = *v2110;
                *(_OWORD *)(v2109 + 2) = *(_OWORD *)(v2110 + 2);
                v2197 = *(int *)(v2088 + 24);
                v2198 = (char *)v2109 + v2197;
                v2199 = (char *)v2110 + v2197;
                v2200 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2200 - 8) + 32))(v2198, v2199, v2200);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2089 + 56))(v2109, 0, 1, v2088);
              }
              v2201 = v2909[6];
              v2202 = (char *)__srcl + v2201;
              v2203 = (char *)v2100 + v2201;
              v2204 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2204 - 8) + 32))(v2202, v2203, v2204);
            }
            swift_storeEnumTagMultiPayload();
LABEL_708:
            v2099 = __srcl;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, void *))(v2105 + 56))(__srcl, 0, 1, v2923);
LABEL_709:
            v2205 = *(int *)(v3018 + 20);
            v2206 = (char *)v2099 + v2205;
            v2207 = v2099;
            v2208 = (char *)v2100 + v2205;
            v2209 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2209 - 8) + 32))(v2206, v2208, v2209);
            ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstq[7])(v2207, 0, 1, v3018);
            v2091 = v2103;
            v15 = v3125;
            v2097 = v3152;
LABEL_710:
            v2210 = *(int *)(v2097 + 36);
            v2211 = &v13[v2210];
            v2212 = &v14[v2210];
            v2213 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2213 - 8) + 32))(v2211, v2212, v2213);
            swift_storeEnumTagMultiPayload();
            v3 = v3183;
            v11 = v3085;
            v4 = v2091;
            break;
          case 0xEu:
          case 0x10u:
          case 0x13u:
          case 0x14u:
          case 0x15u:
          case 0x29u:
            v894 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v894 - 8) + 32))(v13, v14, v894);
            swift_storeEnumTagMultiPayload();
            goto LABEL_820;
          case 0xFu:
            v3111 = v15;
            v872 = v11;
            v3181 = v3;
            v3201 = v4;
            *(_QWORD *)v13 = *(_QWORD *)v14;
            *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
            v873 = type metadata accessor for TranscriptProtoQueryStepResults(0);
            v874 = *(int *)(v873 + 24);
            v875 = &v13[v874];
            v876 = &v14[v874];
            v877 = type metadata accessor for TranscriptProtoStatementID(0);
            v878 = *(_QWORD *)(v877 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v878 + 48))(v876, 1, v877))
            {
              v879 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v875, v876, *(_QWORD *)(*(_QWORD *)(v879 - 8) + 64));
            }
            else
            {
              *v875 = *v876;
              *(_OWORD *)(v875 + 2) = *(_OWORD *)(v876 + 2);
              v1371 = *(int *)(v877 + 24);
              v1372 = (char *)v875 + v1371;
              v1373 = (char *)v876 + v1371;
              v1374 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1374 - 8) + 32))(v1372, v1373, v1374);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v878 + 56))(v875, 0, 1, v877);
            }
            goto LABEL_432;
          case 0x11u:
            v3202 = v4;
            v3112 = v15;
            v3086 = v11;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
            v13[24] = v14[24];
            *(_WORD *)(v13 + 25) = *(_WORD *)(v14 + 25);
            v880 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
            v881 = *(int *)(v880 + 36);
            v882 = &v13[v881];
            v883 = &v14[v881];
            v884 = type metadata accessor for TranscriptProtoParameterSet(0);
            v885 = *(_QWORD *)(v884 - 8);
            v886 = v3;
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v885 + 48))(v883, 1, v884))
            {
              v887 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
              memcpy(v882, v883, *(_QWORD *)(*(_QWORD *)(v887 - 8) + 64));
            }
            else
            {
              *v882 = *v883;
              v1375 = *(int *)(v884 + 20);
              v1376 = (char *)v882 + v1375;
              v1377 = (char *)v883 + v1375;
              v1378 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1378 - 8) + 32))(v1376, v1377, v1378);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v885 + 56))(v882, 0, 1, v884);
            }
            v1379 = v880;
            v1380 = *(int *)(v880 + 40);
            v1381 = &v13[v1380];
            v1382 = &v14[v1380];
            v1383 = type metadata accessor for TranscriptProtoStatementID(0);
            v1384 = *(_QWORD *)(v1383 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1384 + 48))(v1382, 1, v1383))
            {
              v1385 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1381, v1382, *(_QWORD *)(*(_QWORD *)(v1385 - 8) + 64));
            }
            else
            {
              *v1381 = *v1382;
              *(_OWORD *)(v1381 + 2) = *(_OWORD *)(v1382 + 2);
              v1579 = *(int *)(v1383 + 24);
              v1580 = (char *)v1381 + v1579;
              v1581 = (char *)v1382 + v1579;
              v1582 = sub_2408E57A4();
              v1583 = v1580;
              v1379 = v880;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1582 - 8) + 32))(v1583, v1581, v1582);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1384 + 56))(v1381, 0, 1, v1383);
            }
            v1584 = *(int *)(v1379 + 44);
            v1585 = &v13[v1584];
            v1586 = &v14[v1584];
            v1587 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1587 - 8) + 32))(v1585, v1586, v1587);
            swift_storeEnumTagMultiPayload();
            v3 = v886;
            goto LABEL_495;
          case 0x12u:
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
            v888 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
            v889 = &v13[v888];
            v890 = v4;
            v891 = &v14[v888];
            v892 = sub_2408E57A4();
            v893 = v891;
            v4 = v890;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v892 - 8) + 32))(v889, v893, v892);
            swift_storeEnumTagMultiPayload();
            goto LABEL_820;
          case 0x16u:
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v895 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
            v896 = &v13[v895];
            v897 = v4;
            v898 = &v14[v895];
            v899 = sub_2408E57A4();
            v900 = v898;
            v4 = v897;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v899 - 8) + 32))(v896, v900, v899);
            swift_storeEnumTagMultiPayload();
            goto LABEL_820;
          case 0x17u:
            *(_QWORD *)v13 = *(_QWORD *)v14;
            v901 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
            v902 = &v13[v901];
            v903 = v4;
            v904 = &v14[v901];
            v905 = sub_2408E57A4();
            v906 = v904;
            v4 = v903;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v905 - 8) + 32))(v902, v906, v905);
            swift_storeEnumTagMultiPayload();
            goto LABEL_820;
          case 0x18u:
            *(_QWORD *)v13 = *(_QWORD *)v14;
            v907 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
            v908 = &v13[v907];
            v909 = v4;
            v910 = &v14[v907];
            v911 = sub_2408E57A4();
            v912 = v910;
            v4 = v909;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v911 - 8) + 32))(v908, v912, v911);
            swift_storeEnumTagMultiPayload();
            goto LABEL_820;
          case 0x19u:
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v913 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
            v914 = &v13[v913];
            v915 = v4;
            v916 = &v14[v913];
            v917 = sub_2408E57A4();
            v918 = v916;
            v4 = v915;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v917 - 8) + 32))(v914, v918, v917);
            swift_storeEnumTagMultiPayload();
            goto LABEL_820;
          case 0x1Au:
            v3112 = v15;
            v919 = v3;
            v920 = type metadata accessor for TranscriptProtoStatementID(0);
            v921 = *(_QWORD *)(v920 - 8);
            v922 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v921 + 48);
            v3202 = v4;
            v3086 = v11;
            if (v922(v14, 1, v920))
            {
              v923 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v923 - 8) + 64));
            }
            else
            {
              *(_DWORD *)v13 = *(_DWORD *)v14;
              *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
              v1386 = *(int *)(v920 + 24);
              v1387 = &v13[v1386];
              v1388 = &v14[v1386];
              v1389 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1389 - 8) + 32))(v1387, v1388, v1389);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v921 + 56))(v13, 0, 1, v920);
            }
            v1390 = type metadata accessor for TranscriptProtoActionCancellation(0);
            v1391 = *(int *)(v1390 + 20);
            v1392 = &v13[v1391];
            v1393 = &v14[v1391];
            if (v922(&v14[v1391], 1, v920))
            {
              v1394 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1392, v1393, *(_QWORD *)(*(_QWORD *)(v1394 - 8) + 64));
            }
            else
            {
              *v1392 = *v1393;
              *(_OWORD *)(v1392 + 2) = *(_OWORD *)(v1393 + 2);
              v1588 = *(int *)(v920 + 24);
              v1589 = (char *)v1392 + v1588;
              v1590 = (char *)v1393 + v1588;
              v1591 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1591 - 8) + 32))(v1589, v1590, v1591);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v921 + 56))(v1392, 0, 1, v920);
            }
            v3 = v919;
            v1592 = *(int *)(v1390 + 24);
            v1593 = &v13[v1592];
            v1594 = &v14[v1592];
            v1595 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1595 - 8) + 32))(v1593, v1594, v1595);
            swift_storeEnumTagMultiPayload();
LABEL_495:
            v11 = v3086;
            goto LABEL_519;
          case 0x1Bu:
            v924 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_OWORD *)v13 + 1) = v924;
            *((_DWORD *)v13 + 8) = *((_DWORD *)v14 + 8);
            *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
            v925 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
            v926 = &v13[v925];
            v927 = v4;
            v928 = &v14[v925];
            v929 = sub_2408E57A4();
            v930 = v928;
            v4 = v927;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v929 - 8) + 32))(v926, v930, v929);
            swift_storeEnumTagMultiPayload();
            goto LABEL_820;
          case 0x1Cu:
            v3084 = v11;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
            *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
            v931 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
            v932 = v931[7];
            v933 = &v13[v932];
            v934 = &v14[v932];
            v935 = type metadata accessor for TranscriptProtoStatementOutcome(0);
            v936 = *(_QWORD *)(v935 - 8);
            v3182 = v3;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v936 + 48))(v934, 1, v935))
            {
              v937 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
              memcpy(v933, v934, *(_QWORD *)(*(_QWORD *)(v937 - 8) + 64));
            }
            else
            {
              v3022 = v13;
              v3157 = v931;
              v1395 = v15;
              v1396 = v4;
              v1397 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1397 - 8) + 48))(v934, 1, v1397))
              {
                v1813 = (char *)&loc_24039A6BC + 4 * word_2408E8962[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1398 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
              memcpy(v933, v934, *(_QWORD *)(*(_QWORD *)(v1398 - 8) + 64));
              v2674 = *(int *)(v935 + 20);
              v2675 = &v933[v2674];
              v2676 = &v934[v2674];
              v2677 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2677 - 8) + 32))(v2675, v2676, v2677);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v936 + 56))(v933, 0, 1, v935);
              v4 = v1396;
              v15 = v1395;
              v931 = v3157;
              v13 = v3022;
            }
            v2678 = v931[8];
            v2679 = &v13[v2678];
            v2680 = &v14[v2678];
            v2681 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
            v2682 = *((_QWORD *)v2681 - 1);
            v3208 = v4;
            if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v2682 + 48))(v2680, 1, v2681))
            {
              v2683 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
              memcpy(v2679, v2680, *(_QWORD *)(*(_QWORD *)(v2683 - 8) + 64));
            }
            else
            {
              v3027 = v13;
              v3162 = v931;
              v2926 = v14;
              v3134 = v15;
              *v2679 = *v2680;
              *((_BYTE *)v2679 + 8) = *((_BYTE *)v2680 + 8);
              v2679[2] = v2680[2];
              v2684 = v2681[7];
              v2685 = (char *)v2679 + v2684;
              v2686 = (char *)v2680 + v2684;
              v2687 = type metadata accessor for TranscriptProtoDialogType(0);
              v3020 = *(_QWORD *)(v2687 - 8);
              v2688 = v2687;
              v2689 = *(unsigned int (**)(char *, uint64_t))(v3020 + 48);
              if (v2689(v2686, 1))
              {
                v2690 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
                memcpy(v2685, v2686, *(_QWORD *)(*(_QWORD *)(v2690 - 8) + 64));
              }
              else
              {
                __dstbc = (_QWORD *)type metadata accessor for TranscriptProtoDialogFormat(0);
                if (!(*(unsigned int (**)(char *, uint64_t))(*(__dstbc - 1) + 48))(v2686, 1))
                {
                  v2692 = (char *)&loc_2403A6FC4 + 4 * byte_2408E8978[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v2691 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
                memcpy(v2685, v2686, *(_QWORD *)(*(_QWORD *)(v2691 - 8) + 64));
                v2693 = *(int *)(v2688 + 20);
                v2694 = &v2685[v2693];
                v2695 = &v2686[v2693];
                v2696 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2696 - 8) + 32))(v2694, v2695, v2696);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3020 + 56))(v2685, 0, 1, v2688);
              }
              v2697 = v2681[8];
              v2698 = (char *)v2679 + v2697;
              v2699 = (char *)v2680 + v2697;
              if (((unsigned int (*)(char *, uint64_t, uint64_t))v2689)((char *)v2680 + v2697, 1, v2688))
              {
                v2700 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
                memcpy(v2698, v2699, *(_QWORD *)(*(_QWORD *)(v2700 - 8) + 64));
              }
              else
              {
                v2701 = type metadata accessor for TranscriptProtoDialogFormat(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2701 - 8) + 48))(v2699, 1, v2701))
                {
                  v2703 = (char *)&loc_2403A7190 + 4 * byte_2408E897D[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v2702 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
                memcpy(v2698, v2699, *(_QWORD *)(*(_QWORD *)(v2702 - 8) + 64));
                v2704 = *(int *)(v2688 + 20);
                v2705 = &v2698[v2704];
                v2706 = &v2699[v2704];
                v2707 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2707 - 8) + 32))(v2705, v2706, v2707);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3020 + 56))(v2698, 0, 1, v2688);
              }
              v2708 = v2681[9];
              v2709 = (char *)v2679 + v2708;
              v2710 = (char *)v2680 + v2708;
              v2711 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2711 - 8) + 32))(v2709, v2710, v2711);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v2682 + 56))(v2679, 0, 1, v2681);
              v15 = v3134;
              v931 = v3162;
              v14 = v2926;
              v13 = v3027;
            }
            v2712 = v931;
            v2713 = v931[9];
            v2714 = &v13[v2713];
            v2715 = &v14[v2713];
            v2716 = type metadata accessor for TranscriptProtoStatementID(0);
            v2717 = *(_QWORD *)(v2716 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v2717 + 48))(v2715, 1, v2716))
            {
              v2718 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v2714, v2715, *(_QWORD *)(*(_QWORD *)(v2718 - 8) + 64));
            }
            else
            {
              *v2714 = *v2715;
              *(_OWORD *)(v2714 + 2) = *(_OWORD *)(v2715 + 2);
              v2719 = *(int *)(v2716 + 24);
              v2720 = (char *)v2714 + v2719;
              v2721 = (char *)v2715 + v2719;
              v2722 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2722 - 8) + 32))(v2720, v2721, v2722);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2717 + 56))(v2714, 0, 1, v2716);
            }
            *(_OWORD *)&v13[v2712[10]] = *(_OWORD *)&v14[v2712[10]];
            v2723 = v2712[11];
            v2724 = &v13[v2723];
            v2725 = &v14[v2723];
            v2726 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2726 - 8) + 32))(v2724, v2725, v2726);
LABEL_878:
            swift_storeEnumTagMultiPayload();
            v3 = v3182;
            v4 = v3208;
            v11 = v3084;
            goto LABEL_820;
          case 0x1Du:
            v938 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_OWORD *)v13 + 1) = v938;
            v3153 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
            v939 = v3153[6];
            v940 = &v13[v939];
            v941 = &v14[v939];
            v942 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
            v3000 = *(_QWORD *)(v942 - 8);
            v3087 = v11;
            v3184 = v3;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3000 + 48))(v941, 1, v942))
            {
              v943 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
              memcpy(v940, v941, *(_QWORD *)(*(_QWORD *)(v943 - 8) + 64));
            }
            else
            {
              v3023 = v13;
              __dsti = (int *)v942;
              v2913 = v14;
              v3119 = v15;
              v3206 = v4;
              v1399 = type metadata accessor for TranscriptProtoStatementOutcome(0);
              v1400 = *(_QWORD *)(v1399 - 8);
              v1401 = v1399;
              v1402 = v940;
              v1403 = v941;
              if ((*(unsigned int (**)(char *, uint64_t))(v1400 + 48))(v941, 1))
              {
                v1404 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
                memcpy(v940, v941, *(_QWORD *)(*(_QWORD *)(v1404 - 8) + 64));
              }
              else
              {
                __srcr = (_QWORD *)type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
                if (!(*(unsigned int (**)(char *, uint64_t))(*(__srcr - 1) + 48))(v941, 1))
                {
                  v2029 = (char *)&loc_24039C77C + 4 * word_2408E894C[swift_getEnumCaseMultiPayload()];
                  __asm { BR              X10 }
                }
                v1814 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
                memcpy(v940, v941, *(_QWORD *)(*(_QWORD *)(v1814 - 8) + 64));
                v2816 = *(int *)(v1401 + 20);
                v2817 = &v940[v2816];
                v2818 = &v1403[v2816];
                v2819 = sub_2408E57A4();
                v2820 = v2817;
                v941 = v1403;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2819 - 8) + 32))(v2820, v2818, v2819);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1400 + 56))(v940, 0, 1, v1401);
              }
              v2821 = *(int *)(v942 + 20);
              v2822 = &v940[v2821];
              v2823 = &v941[v2821];
              v2824 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
              v2825 = *((_QWORD *)v2824 - 1);
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v2825 + 48))(v2823, 1, v2824))
              {
                v2826 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
                memcpy(v2822, v2823, *(_QWORD *)(*(_QWORD *)(v2826 - 8) + 64));
              }
              else
              {
                *(_QWORD *)v2822 = *(_QWORD *)v2823;
                v2827 = v2824[5];
                v2828 = v2822;
                v2829 = &v2822[v2827];
                v2830 = &v2823[v2827];
                v2831 = type metadata accessor for TranscriptProtoResponseDialog(0);
                v2832 = *(_QWORD *)(v2831 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2832 + 48))(v2830, 1, v2831))
                {
                  v2833 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
                  memcpy(v2829, v2830, *(_QWORD *)(*(_QWORD *)(v2833 - 8) + 64));
                }
                else
                {
                  v2834 = *((_OWORD *)v2830 + 1);
                  *(_OWORD *)v2829 = *(_OWORD *)v2830;
                  *((_OWORD *)v2829 + 1) = v2834;
                  v2835 = *((_OWORD *)v2830 + 3);
                  *((_OWORD *)v2829 + 2) = *((_OWORD *)v2830 + 2);
                  *((_OWORD *)v2829 + 3) = v2835;
                  v2836 = *(int *)(v2831 + 32);
                  __srcv = &v2829[v2836];
                  v2837 = &v2830[v2836];
                  v2838 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2838 - 8) + 32))(__srcv, v2837, v2838);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2832 + 56))(v2829, 0, 1, v2831);
                }
                v2839 = v2824[6];
                v2840 = (_OWORD *)((char *)v2828 + v2839);
                v2841 = &v2823[v2839];
                v2842 = type metadata accessor for TranscriptProtoResponseVisual(0);
                v2843 = *(_QWORD *)(v2842 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2843 + 48))(v2841, 1, v2842))
                {
                  v2844 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
                  memcpy(v2840, v2841, *(_QWORD *)(*(_QWORD *)(v2844 - 8) + 64));
                }
                else
                {
                  *v2840 = *(_OWORD *)v2841;
                  v2845 = *(int *)(v2842 + 24);
                  __srcw = (char *)v2840 + v2845;
                  v2846 = &v2841[v2845];
                  v2847 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2847 - 8) + 32))(__srcw, v2846, v2847);
                  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2843 + 56))(v2840, 0, 1, v2842);
                }
                *(_OWORD *)((char *)v2828 + v2824[7]) = *(_OWORD *)&v2823[v2824[7]];
                *(_OWORD *)((char *)v2828 + v2824[8]) = *(_OWORD *)&v2823[v2824[8]];
                *((_BYTE *)v2828 + v2824[9]) = v2823[v2824[9]];
                *((_BYTE *)v2828 + v2824[10]) = v2823[v2824[10]];
                v2848 = v2824[11];
                v2849 = (char *)v2828 + v2848;
                v2850 = &v2823[v2848];
                v2851 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2851 - 8) + 32))(v2849, v2850, v2851);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v2825 + 56))(v2828, 0, 1, v2824);
              }
              v2852 = __dsti[6];
              v2853 = &v1402[v2852];
              v2854 = &v1403[v2852];
              v2855 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2855 - 8) + 32))(v2853, v2854, v2855);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v3000 + 56))(v1402, 0, 1, __dsti);
              v4 = v3206;
              v15 = v3119;
              v14 = v2913;
              v13 = v3023;
            }
            v2856 = v3153[7];
            v2857 = &v13[v2856];
            v2858 = &v14[v2856];
            v2859 = type metadata accessor for TranscriptProtoStatementID(0);
            v2860 = *(_QWORD *)(v2859 - 8);
            v2861 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v2860 + 48);
            v2862 = v4;
            if (v2861(v2858, 1, v2859))
            {
              v2863 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v2857, v2858, *(_QWORD *)(*(_QWORD *)(v2863 - 8) + 64));
            }
            else
            {
              *v2857 = *v2858;
              *(_OWORD *)(v2857 + 2) = *(_OWORD *)(v2858 + 2);
              v2864 = *(int *)(v2859 + 24);
              v2865 = (char *)v2857 + v2864;
              v2866 = (char *)v2858 + v2864;
              v2867 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2867 - 8) + 32))(v2865, v2866, v2867);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2860 + 56))(v2857, 0, 1, v2859);
            }
            v2868 = v3153[8];
            v2869 = &v13[v2868];
            v2870 = &v14[v2868];
            if (v2861(&v14[v2868], 1, v2859))
            {
              v2871 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v2869, v2870, *(_QWORD *)(*(_QWORD *)(v2871 - 8) + 64));
            }
            else
            {
              *v2869 = *v2870;
              *(_OWORD *)(v2869 + 2) = *(_OWORD *)(v2870 + 2);
              v2872 = *(int *)(v2859 + 24);
              v2873 = (char *)v2869 + v2872;
              v2874 = (char *)v2870 + v2872;
              v2875 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2875 - 8) + 32))(v2873, v2874, v2875);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2860 + 56))(v2869, 0, 1, v2859);
            }
            v2876 = v3153[9];
            v2877 = &v13[v2876];
            v2878 = &v14[v2876];
            if (v2861(&v14[v2876], 1, v2859))
            {
              v2879 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v2877, v2878, *(_QWORD *)(*(_QWORD *)(v2879 - 8) + 64));
            }
            else
            {
              *v2877 = *v2878;
              *(_OWORD *)(v2877 + 2) = *(_OWORD *)(v2878 + 2);
              v2880 = *(int *)(v2859 + 24);
              v2881 = (char *)v2877 + v2880;
              v2882 = (char *)v2878 + v2880;
              v2883 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2883 - 8) + 32))(v2881, v2882, v2883);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2860 + 56))(v2877, 0, 1, v2859);
            }
            v3 = v3184;
            v11 = v3087;
            v2884 = v3153[10];
            v2885 = &v13[v2884];
            v2886 = &v14[v2884];
            v2887 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2887 - 8) + 32))(v2885, v2886, v2887);
            swift_storeEnumTagMultiPayload();
            v4 = v2862;
            goto LABEL_820;
          case 0x1Eu:
            v3111 = v15;
            v872 = v11;
            v3181 = v3;
            v3201 = v4;
            v944 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_OWORD *)v13 + 1) = v944;
            v873 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
            v945 = *(int *)(v873 + 24);
            v946 = &v13[v945];
            v947 = &v14[v945];
            v948 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
            v949 = *(_QWORD *)(v948 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v949 + 48))(v947, 1, v948))
              goto LABEL_276;
            goto LABEL_431;
          case 0x1Fu:
            v3111 = v15;
            v872 = v11;
            v3181 = v3;
            v3201 = v4;
            *(_QWORD *)v13 = *(_QWORD *)v14;
            *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
            v873 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
            v950 = *(int *)(v873 + 24);
            v946 = &v13[v950];
            v947 = &v14[v950];
            v948 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
            v949 = *(_QWORD *)(v948 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v949 + 48))(v947, 1, v948))
            {
LABEL_276:
              v951 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
              memcpy(v946, v947, *(_QWORD *)(*(_QWORD *)(v951 - 8) + 64));
            }
            else
            {
LABEL_431:
              *(_OWORD *)v946 = *(_OWORD *)v947;
              v946[2] = v947[2];
              v1405 = *(int *)(v948 + 24);
              v1406 = (char *)v946 + v1405;
              v1407 = (char *)v947 + v1405;
              v1408 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1408 - 8) + 32))(v1406, v1407, v1408);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v949 + 56))(v946, 0, 1, v948);
            }
LABEL_432:
            v11 = v872;
            v1409 = *(int *)(v873 + 28);
            v1410 = &v13[v1409];
            v1411 = &v14[v1409];
            v1412 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1412 - 8) + 32))(v1410, v1411, v1412);
LABEL_433:
            swift_storeEnumTagMultiPayload();
            v3 = v3181;
            v4 = v3201;
            v15 = v3111;
            goto LABEL_820;
          case 0x20u:
            v3185 = v3;
            v952 = type metadata accessor for TranscriptProtoRequestContent(0);
            v953 = *(_QWORD *)(v952 - 8);
            v3088 = v11;
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v953 + 48))(v14, 1, v952))
            {
              v954 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
              memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v954 - 8) + 64));
            }
            else
            {
              v3120 = v15;
              v1413 = v4;
              v1414 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
              if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v1414 - 8) + 48))(v14, 1, v1414))
              {
                v1815 = (char *)&loc_24039A7B0 + 4 * word_2408E8944[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1415 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
              memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v1415 - 8) + 64));
              v2354 = *(int *)(v952 + 20);
              v2355 = &v13[v2354];
              v2356 = &v14[v2354];
              v2357 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2357 - 8) + 32))(v2355, v2356, v2357);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v953 + 56))(v13, 0, 1, v952);
              v4 = v1413;
              v15 = v3120;
            }
            v3209 = v4;
            v2358 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
            *(_OWORD *)&v13[v2358[5]] = *(_OWORD *)&v14[v2358[5]];
            v2359 = v2358[6];
            v2360 = &v13[v2359];
            v2361 = &v14[v2359];
            v2362 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
            v2363 = *(_QWORD *)(v2362 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v2363 + 48))(v2361, 1, v2362))
            {
              v2364 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
              memcpy(v2360, v2361, *(_QWORD *)(*(_QWORD *)(v2364 - 8) + 64));
            }
            else
            {
              *(_OWORD *)v2360 = *(_OWORD *)v2361;
              v2360[2] = v2361[2];
              v2365 = *(int *)(v2362 + 24);
              v2366 = (char *)v2360 + v2365;
              v2367 = (char *)v2361 + v2365;
              v2368 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2368 - 8) + 32))(v2366, v2367, v2368);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2363 + 56))(v2360, 0, 1, v2362);
            }
            v11 = v3088;
            v2369 = v2358[7];
            v2370 = &v13[v2369];
            v2371 = &v14[v2369];
            v2372 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2372 - 8) + 32))(v2370, v2371, v2372);
            swift_storeEnumTagMultiPayload();
            v3 = v3185;
            v4 = v3209;
            goto LABEL_820;
          case 0x21u:
            v3089 = v11;
            v3186 = v3;
            *(_QWORD *)v13 = *(_QWORD *)v14;
            v3154 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
            v955 = *(int *)(v3154 + 20);
            v956 = &v13[v955];
            v957 = &v14[v955];
            v958 = type metadata accessor for TranscriptProtoStatementID(0);
            v959 = *(_QWORD *)(v958 - 8);
            v960 = v4;
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v959 + 48))(v957, 1, v958))
            {
              v961 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v956, v957, *(_QWORD *)(*(_QWORD *)(v961 - 8) + 64));
            }
            else
            {
              *v956 = *v957;
              *(_OWORD *)(v956 + 2) = *(_OWORD *)(v957 + 2);
              v1416 = *(int *)(v958 + 24);
              v1417 = (char *)v956 + v1416;
              v1418 = (char *)v957 + v1416;
              v1419 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1419 - 8) + 32))(v1417, v1418, v1419);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v959 + 56))(v956, 0, 1, v958);
            }
            v1420 = v3154;
            v1421 = *(int *)(v3154 + 24);
            v1422 = &v13[v1421];
            v1423 = &v14[v1421];
            v1424 = type metadata accessor for TranscriptProtoStatementOutcome(0);
            v1425 = *(_QWORD *)(v1424 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1425 + 48))(v1423, 1, v1424))
            {
              v1426 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
              memcpy(v1422, v1423, *(_QWORD *)(*(_QWORD *)(v1426 - 8) + 64));
            }
            else
            {
              v1596 = v15;
              v1597 = v960;
              v1598 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1598 - 8) + 48))(v1423, 1, v1598))
              {
                v1838 = (char *)&loc_24039AAA0 + 4 * word_2408E892E[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1599 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
              memcpy(v1422, v1423, *(_QWORD *)(*(_QWORD *)(v1599 - 8) + 64));
              v2807 = *(int *)(v1424 + 20);
              v2808 = &v1422[v2807];
              v2809 = v1422;
              v2810 = &v1423[v2807];
              v2811 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2811 - 8) + 32))(v2808, v2810, v2811);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1425 + 56))(v2809, 0, 1, v1424);
              v960 = v1597;
              v15 = v1596;
              v1420 = v3154;
            }
            goto LABEL_899;
          case 0x22u:
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
            v962 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
            v963 = &v13[v962];
            v964 = v4;
            v965 = &v14[v962];
            v966 = sub_2408E57A4();
            v967 = v965;
            v4 = v964;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v966 - 8) + 32))(v963, v967, v966);
            swift_storeEnumTagMultiPayload();
            goto LABEL_820;
          case 0x23u:
            v968 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
            v969 = *(_QWORD *)(v968 - 8);
            v3203 = v4;
            v3090 = v11;
            v3187 = v3;
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v969 + 48))(v14, 1, v968))
            {
              v970 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
              memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v970 - 8) + 64));
            }
            else
            {
              v3013 = v969;
              v3121 = v15;
              v3158 = (int *)v968;
              v1427 = *((_OWORD *)v14 + 1);
              *(_OWORD *)v13 = *(_OWORD *)v14;
              *((_OWORD *)v13 + 1) = v1427;
              v13[32] = v14[32];
              *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
              *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
              *((_QWORD *)v13 + 9) = *((_QWORD *)v14 + 9);
              v13[80] = v14[80];
              *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
              *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
              v1428 = *(int *)(v968 + 68);
              v1429 = v13;
              v1430 = &v13[v1428];
              v2914 = v14;
              v1431 = &v14[v1428];
              v1432 = type metadata accessor for ToolKitProtoTypeInstance(0);
              v1433 = *(_QWORD *)(v1432 - 8);
              if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1433 + 48))(v1431, 1, v1432))
              {
                v1434 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
                memcpy(v1430, v1431, *(_QWORD *)(*(_QWORD *)(v1434 - 8) + 64));
              }
              else
              {
                *v1430 = *v1431;
                v1816 = *(int *)(v1432 + 20);
                v1817 = (char *)v1430 + v1816;
                v1818 = (char *)v1431 + v1816;
                v1819 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1819 - 8) + 32))(v1817, v1818, v1819);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1433 + 56))(v1430, 0, 1, v1432);
              }
              *(_OWORD *)&v13[v3158[18]] = *(_OWORD *)&v14[v3158[18]];
              v1820 = v3158[19];
              v1821 = &v13[v1820];
              v1822 = &v14[v1820];
              v1823 = type metadata accessor for ToolKitProtoAppDefinition(0);
              v1824 = *(_QWORD *)(v1823 - 8);
              if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1824 + 48))(v1822, 1, v1823))
              {
                v1825 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
                memcpy(v1821, v1822, *(_QWORD *)(*(_QWORD *)(v1825 - 8) + 64));
              }
              else
              {
                v1870 = v1822[1];
                *v1821 = *v1822;
                v1821[1] = v1870;
                v1871 = v1822[3];
                v1821[2] = v1822[2];
                v1821[3] = v1871;
                v1821[4] = v1822[4];
                *((_BYTE *)v1821 + 80) = *((_BYTE *)v1822 + 80);
                v1872 = *(int *)(v1823 + 40);
                v1873 = (_OWORD *)((char *)v1821 + v1872);
                v1874 = (_OWORD *)((char *)v1822 + v1872);
                v1875 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
                v1876 = *(_QWORD *)(v1875 - 8);
                if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1876 + 48))(v1874, 1, v1875))
                {
                  v1877 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
                  memcpy(v1873, v1874, *(_QWORD *)(*(_QWORD *)(v1877 - 8) + 64));
                }
                else
                {
                  *v1873 = *v1874;
                  v2030 = *(int *)(v1875 + 20);
                  v2031 = (char *)v1873 + v2030;
                  v2032 = (char *)v1874 + v2030;
                  v2033 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2033 - 8) + 32))(v2031, v2032, v2033);
                  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1876 + 56))(v1873, 0, 1, v1875);
                }
                v2034 = *(int *)(v1823 + 44);
                v2035 = (char *)v1821 + v2034;
                v2036 = (char *)v1822 + v2034;
                v2037 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2037 - 8) + 32))(v2035, v2036, v2037);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1824 + 56))(v1821, 0, 1, v1823);
              }
              *(_OWORD *)&v1429[v3158[20]] = *(_OWORD *)&v2914[v3158[20]];
              v2038 = v3158[21];
              v2039 = &v1429[v2038];
              v2040 = &v2914[v2038];
              v2041 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
              v2042 = *(_QWORD *)(v2041 - 8);
              if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v2042 + 48))(v2040, 1, v2041))
              {
                v2043 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
                memcpy(v2039, v2040, *(_QWORD *)(*(_QWORD *)(v2043 - 8) + 64));
              }
              else
              {
                v2044 = v2040[1];
                *v2039 = *v2040;
                v2039[1] = v2044;
                v2045 = *(int *)(v2041 + 24);
                v2046 = (char *)v2039 + v2045;
                v2047 = (char *)v2040 + v2045;
                v2048 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2048 - 8) + 32))(v2046, v2047, v2048);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2042 + 56))(v2039, 0, 1, v2041);
              }
              v2049 = v3158[22];
              v2050 = &v1429[v2049];
              v2051 = &v2914[v2049];
              v2052 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
              v2053 = *(_QWORD *)(v2052 - 8);
              if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v2053 + 48))(v2051, 1, v2052))
              {
                v2054 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
                memcpy(v2050, v2051, *(_QWORD *)(*(_QWORD *)(v2054 - 8) + 64));
              }
              else
              {
                v2055 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
                v2056 = *(_QWORD *)(v2055 - 8);
                if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v2056 + 48))(v2051, 1, v2055))
                {
                  v2057 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
                  memcpy(v2050, v2051, *(_QWORD *)(*(_QWORD *)(v2057 - 8) + 64));
                }
                else
                {
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    *v2050 = *v2051;
                    *((_BYTE *)v2050 + 16) = *((_BYTE *)v2051 + 16);
                    *(_OWORD *)((char *)v2050 + 24) = *(_OWORD *)((char *)v2051 + 24);
                    *(_OWORD *)((char *)v2050 + 40) = *(_OWORD *)((char *)v2051 + 40);
                    v2058 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                   + 32);
                    v2059 = (char *)v2050 + v2058;
                    v2060 = (char *)v2051 + v2058;
                    v2061 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2061 - 8) + 32))(v2059, v2060, v2061);
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(v2050, v2051, *(_QWORD *)(v2056 + 64));
                  }
                  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2056 + 56))(v2050, 0, 1, v2055);
                }
                v2120 = *(int *)(v2052 + 20);
                v2121 = (char *)v2050 + v2120;
                v2122 = (char *)v2051 + v2120;
                v2123 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2123 - 8) + 32))(v2121, v2122, v2123);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2053 + 56))(v2050, 0, 1, v2052);
              }
              v2124 = v3158[23];
              v2125 = &v1429[v2124];
              v2126 = &v2914[v2124];
              v2127 = type metadata accessor for ToolKitProtoContainerDefinition(0);
              v2128 = *(_QWORD *)(v2127 - 8);
              v2129 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v2128 + 48);
              if (v2129(v2126, 1, v2127))
              {
                v2130 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
                memcpy(v2125, v2126, *(_QWORD *)(*(_QWORD *)(v2130 - 8) + 64));
              }
              else
              {
                v2131 = v2126[1];
                *v2125 = *v2126;
                v2125[1] = v2131;
                *((_WORD *)v2125 + 16) = *((_WORD *)v2126 + 16);
                *(_OWORD *)((char *)v2125 + 40) = *(_OWORD *)((char *)v2126 + 40);
                *(_OWORD *)((char *)v2125 + 56) = *(_OWORD *)((char *)v2126 + 56);
                v2132 = *(int *)(v2127 + 40);
                v2133 = (_OWORD *)((char *)v2125 + v2132);
                v2134 = (_OWORD *)((char *)v2126 + v2132);
                v2135 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                v2136 = *(_QWORD *)(v2135 - 8);
                if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v2136 + 48))(v2134, 1, v2135))
                {
                  v2137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                  memcpy(v2133, v2134, *(_QWORD *)(*(_QWORD *)(v2137 - 8) + 64));
                }
                else
                {
                  *v2133 = *v2134;
                  v2138 = *(int *)(v2135 + 20);
                  __dstbb = (char *)v2133 + v2138;
                  v2139 = (char *)v2134 + v2138;
                  v2140 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2140 - 8) + 32))(__dstbb, v2139, v2140);
                  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2136 + 56))(v2133, 0, 1, v2135);
                }
                v2141 = *(int *)(v2127 + 44);
                v2142 = (char *)v2125 + v2141;
                v2143 = (char *)v2126 + v2141;
                v2144 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2144 - 8) + 32))(v2142, v2143, v2144);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2128 + 56))(v2125, 0, 1, v2127);
              }
              v2145 = v3158[24];
              v2146 = &v1429[v2145];
              v2147 = &v2914[v2145];
              if (v2129(&v2914[v2145], 1, v2127))
              {
                v2148 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
                memcpy(v2146, v2147, *(_QWORD *)(*(_QWORD *)(v2148 - 8) + 64));
              }
              else
              {
                v2149 = v2147[1];
                *v2146 = *v2147;
                v2146[1] = v2149;
                *((_WORD *)v2146 + 16) = *((_WORD *)v2147 + 16);
                *(_OWORD *)((char *)v2146 + 40) = *(_OWORD *)((char *)v2147 + 40);
                *(_OWORD *)((char *)v2146 + 56) = *(_OWORD *)((char *)v2147 + 56);
                v2150 = *(int *)(v2127 + 40);
                v2151 = (_OWORD *)((char *)v2146 + v2150);
                v2152 = (_OWORD *)((char *)v2147 + v2150);
                v2153 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                v2154 = *(_QWORD *)(v2153 - 8);
                if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v2154 + 48))(v2152, 1, v2153))
                {
                  v2155 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                  memcpy(v2151, v2152, *(_QWORD *)(*(_QWORD *)(v2155 - 8) + 64));
                }
                else
                {
                  *v2151 = *v2152;
                  v2156 = *(int *)(v2153 + 20);
                  v2157 = (char *)v2151 + v2156;
                  v2158 = (char *)v2152 + v2156;
                  v2159 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2159 - 8) + 32))(v2157, v2158, v2159);
                  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2154 + 56))(v2151, 0, 1, v2153);
                }
                v2160 = *(int *)(v2127 + 44);
                v2161 = (char *)v2146 + v2160;
                v2162 = (char *)v2147 + v2160;
                v2163 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2163 - 8) + 32))(v2161, v2162, v2163);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2128 + 56))(v2146, 0, 1, v2127);
              }
              v2164 = v3158[25];
              v13 = v1429;
              v2165 = &v1429[v2164];
              v14 = v2914;
              v2166 = &v2914[v2164];
              v2167 = sub_2408E57A4();
              (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v2167 - 8) + 32))(v2165, v2166, v2167);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v3013 + 56))(v1429, 0, 1, v3158);
              v15 = v3121;
            }
            v2168 = (int *)type metadata accessor for TranscriptProtoToolResolution(0);
            v2169 = v2168[5];
            v2170 = &v13[v2169];
            v2171 = &v14[v2169];
            v2172 = type metadata accessor for TranscriptProtoStatementID(0);
            v2173 = *(_QWORD *)(v2172 - 8);
            v2174 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v2173 + 48);
            if (v2174(v2171, 1, v2172))
            {
              v2175 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v2170, v2171, *(_QWORD *)(*(_QWORD *)(v2175 - 8) + 64));
            }
            else
            {
              *v2170 = *v2171;
              *(_OWORD *)(v2170 + 2) = *(_OWORD *)(v2171 + 2);
              v2176 = *(int *)(v2172 + 24);
              v2177 = (char *)v2170 + v2176;
              v2178 = (char *)v2171 + v2176;
              v2179 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2179 - 8) + 32))(v2177, v2178, v2179);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2173 + 56))(v2170, 0, 1, v2172);
            }
            v2180 = v2168[6];
            v2181 = &v13[v2180];
            v2182 = &v14[v2180];
            if (v2174(&v14[v2180], 1, v2172))
            {
              v2183 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v2181, v2182, *(_QWORD *)(*(_QWORD *)(v2183 - 8) + 64));
            }
            else
            {
              *v2181 = *v2182;
              *(_OWORD *)(v2181 + 2) = *(_OWORD *)(v2182 + 2);
              v2184 = *(int *)(v2172 + 24);
              v2185 = (char *)v2181 + v2184;
              v2186 = (char *)v2182 + v2184;
              v2187 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2187 - 8) + 32))(v2185, v2186, v2187);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2173 + 56))(v2181, 0, 1, v2172);
            }
            v3 = v3187;
            v11 = v3090;
            v2188 = v2168[7];
            v2189 = &v13[v2188];
            v2190 = &v14[v2188];
            v2191 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2191 - 8) + 32))(v2189, v2190, v2191);
            swift_storeEnumTagMultiPayload();
            v4 = v3203;
            goto LABEL_820;
          case 0x24u:
            v3098 = v15;
            v3091 = v11;
            v3188 = v3;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v13[16] = v14[16];
            *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
            v971 = (int *)type metadata accessor for TranscriptProtoUndoRedoRequest(0);
            v972 = v971[7];
            v973 = &v13[v972];
            v974 = &v14[v972];
            v975 = type metadata accessor for TranscriptProtoStatementID(0);
            v976 = *(_QWORD *)(v975 - 8);
            v977 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v976 + 48);
            v51 = v4;
            if (v977(v974, 1, v975))
            {
              v978 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v973, v974, *(_QWORD *)(*(_QWORD *)(v978 - 8) + 64));
            }
            else
            {
              *v973 = *v974;
              *(_OWORD *)(v973 + 2) = *(_OWORD *)(v974 + 2);
              v1435 = *(int *)(v975 + 24);
              v1436 = (char *)v973 + v1435;
              v1437 = (char *)v974 + v1435;
              v1438 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1438 - 8) + 32))(v1436, v1437, v1438);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v976 + 56))(v973, 0, 1, v975);
            }
            v1439 = v971[8];
            v1440 = &v13[v1439];
            v1441 = &v14[v1439];
            if (v977(&v14[v1439], 1, v975))
            {
              v1442 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1440, v1441, *(_QWORD *)(*(_QWORD *)(v1442 - 8) + 64));
            }
            else
            {
              *v1440 = *v1441;
              *(_OWORD *)(v1440 + 2) = *(_OWORD *)(v1441 + 2);
              v1600 = *(int *)(v975 + 24);
              v1601 = (char *)v1440 + v1600;
              v1602 = (char *)v1441 + v1600;
              v1603 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1603 - 8) + 32))(v1601, v1602, v1603);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v976 + 56))(v1440, 0, 1, v975);
            }
            v3 = v3188;
            v11 = v3091;
            v1604 = v971[9];
            v1605 = &v13[v1604];
            v1606 = &v14[v1604];
            v1607 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1607 - 8) + 32))(v1605, v1606, v1607);
            goto LABEL_502;
          case 0x25u:
            v3098 = v15;
            v3092 = v11;
            v3189 = v3;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v13[16] = v14[16];
            v979 = (int *)type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
            v980 = v979[6];
            v981 = &v13[v980];
            v982 = &v14[v980];
            v983 = type metadata accessor for TranscriptProtoStatementID(0);
            v984 = *(_QWORD *)(v983 - 8);
            v985 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v984 + 48);
            v51 = v4;
            if (v985(v982, 1, v983))
            {
              v986 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v981, v982, *(_QWORD *)(*(_QWORD *)(v986 - 8) + 64));
            }
            else
            {
              *v981 = *v982;
              *(_OWORD *)(v981 + 2) = *(_OWORD *)(v982 + 2);
              v1443 = *(int *)(v983 + 24);
              v1444 = (char *)v981 + v1443;
              v1445 = (char *)v982 + v1443;
              v1446 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1446 - 8) + 32))(v1444, v1445, v1446);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v984 + 56))(v981, 0, 1, v983);
            }
            v1447 = v979[7];
            v1448 = &v13[v1447];
            v1449 = &v14[v1447];
            if (v985(&v14[v1447], 1, v983))
            {
              v1450 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1448, v1449, *(_QWORD *)(*(_QWORD *)(v1450 - 8) + 64));
            }
            else
            {
              *v1448 = *v1449;
              *(_OWORD *)(v1448 + 2) = *(_OWORD *)(v1449 + 2);
              v1608 = *(int *)(v983 + 24);
              v1609 = (char *)v1448 + v1608;
              v1610 = (char *)v1449 + v1608;
              v1611 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1611 - 8) + 32))(v1609, v1610, v1611);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v984 + 56))(v1448, 0, 1, v983);
            }
            v3 = v3189;
            v11 = v3092;
            v1612 = v979[8];
            v1613 = &v13[v1612];
            v1614 = &v14[v1612];
            v1615 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1615 - 8) + 32))(v1613, v1614, v1615);
LABEL_502:
            swift_storeEnumTagMultiPayload();
LABEL_581:
            v15 = v3098;
            v4 = v51;
            goto LABEL_820;
          case 0x26u:
            v3112 = v15;
            v987 = type metadata accessor for ToolKitProtoTypedValue(0);
            v988 = *(_QWORD *)(v987 - 8);
            v3202 = v4;
            v989 = v11;
            v990 = v3;
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v988 + 48))(v14, 1, v987))
            {
              v991 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
              memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v991 - 8) + 64));
            }
            else
            {
              *(_QWORD *)v13 = *(_QWORD *)v14;
              v1451 = *(int *)(v987 + 20);
              v1452 = &v13[v1451];
              v1453 = &v14[v1451];
              v1454 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1454 - 8) + 32))(v1452, v1453, v1454);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v988 + 56))(v13, 0, 1, v987);
            }
            v1455 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
            v1456 = *(int *)(v1455 + 20);
            v1457 = &v13[v1456];
            v1458 = &v14[v1456];
            v1459 = type metadata accessor for ToolKitProtoTypeInstance(0);
            v1460 = *(_QWORD *)(v1459 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1460 + 48))(v1458, 1, v1459))
            {
              v1461 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
              memcpy(v1457, v1458, *(_QWORD *)(*(_QWORD *)(v1461 - 8) + 64));
            }
            else
            {
              *v1457 = *v1458;
              v1616 = *(int *)(v1459 + 20);
              v1617 = (char *)v1457 + v1616;
              v1618 = (char *)v1458 + v1616;
              v1619 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1619 - 8) + 32))(v1617, v1618, v1619);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1460 + 56))(v1457, 0, 1, v1459);
            }
            v1620 = v1455;
            v1621 = *(int *)(v1455 + 24);
            v1622 = &v13[v1621];
            v1623 = &v14[v1621];
            v1624 = type metadata accessor for TranscriptProtoStatementID(0);
            v1625 = *(_QWORD *)(v1624 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1625 + 48))(v1623, 1, v1624))
            {
              v1626 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1622, v1623, *(_QWORD *)(*(_QWORD *)(v1626 - 8) + 64));
            }
            else
            {
              *v1622 = *v1623;
              *(_OWORD *)(v1622 + 2) = *(_OWORD *)(v1623 + 2);
              v1654 = *(int *)(v1624 + 24);
              v1655 = (char *)v1622 + v1654;
              v1656 = (char *)v1623 + v1654;
              v1657 = sub_2408E57A4();
              v1658 = v1655;
              v1620 = v1455;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1657 - 8) + 32))(v1658, v1656, v1657);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1625 + 56))(v1622, 0, 1, v1624);
            }
            v1659 = *(int *)(v1620 + 28);
            v1660 = &v13[v1659];
            v1661 = &v14[v1659];
            v1662 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1662 - 8) + 32))(v1660, v1661, v1662);
            swift_storeEnumTagMultiPayload();
            v3 = v990;
            v11 = v989;
            goto LABEL_519;
          case 0x27u:
            v3112 = v15;
            v992 = type metadata accessor for ToolKitProtoTypedValue(0);
            v993 = *(_QWORD *)(v992 - 8);
            v3202 = v4;
            v3093 = v11;
            v994 = v3;
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v993 + 48))(v14, 1, v992))
            {
              v995 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
              memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v995 - 8) + 64));
            }
            else
            {
              *(_QWORD *)v13 = *(_QWORD *)v14;
              v1462 = *(int *)(v992 + 20);
              v1463 = &v13[v1462];
              v1464 = &v14[v1462];
              v1465 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1465 - 8) + 32))(v1463, v1464, v1465);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v993 + 56))(v13, 0, 1, v992);
            }
            v1466 = (int *)type metadata accessor for TranscriptProtoTypeConversionResult(0);
            v1467 = v1466[5];
            v1468 = &v13[v1467];
            v1469 = &v14[v1467];
            v1470 = type metadata accessor for TranscriptProtoStatementID(0);
            v1471 = *(_QWORD *)(v1470 - 8);
            v1472 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1471 + 48);
            if (v1472(v1469, 1, v1470))
            {
              v1473 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1468, v1469, *(_QWORD *)(*(_QWORD *)(v1473 - 8) + 64));
            }
            else
            {
              *v1468 = *v1469;
              *(_OWORD *)(v1468 + 2) = *(_OWORD *)(v1469 + 2);
              v1627 = *(int *)(v1470 + 24);
              v1628 = (char *)v1468 + v1627;
              v1629 = (char *)v1469 + v1627;
              v1630 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1630 - 8) + 32))(v1628, v1629, v1630);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1471 + 56))(v1468, 0, 1, v1470);
            }
            v1631 = v1466[6];
            v1632 = &v13[v1631];
            v1633 = &v14[v1631];
            if (v1472(&v14[v1631], 1, v1470))
            {
              v1634 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1632, v1633, *(_QWORD *)(*(_QWORD *)(v1634 - 8) + 64));
            }
            else
            {
              *v1632 = *v1633;
              *(_OWORD *)(v1632 + 2) = *(_OWORD *)(v1633 + 2);
              v1663 = *(int *)(v1470 + 24);
              v1664 = (char *)v1632 + v1663;
              v1665 = (char *)v1633 + v1663;
              v1666 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1666 - 8) + 32))(v1664, v1665, v1666);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1471 + 56))(v1632, 0, 1, v1470);
            }
            v3 = v994;
            v11 = v3093;
            v1667 = v1466[7];
            v1668 = &v13[v1667];
            v1669 = &v14[v1667];
            v1670 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1670 - 8) + 32))(v1668, v1669, v1670);
            swift_storeEnumTagMultiPayload();
LABEL_519:
            v15 = v3112;
            v4 = v3202;
            goto LABEL_820;
          case 0x28u:
            v3113 = v15;
            v3094 = v11;
            v3204 = v4;
            v996 = v3;
            v997 = *((_OWORD *)v14 + 1);
            *(_OWORD *)v13 = *(_OWORD *)v14;
            *((_OWORD *)v13 + 1) = v997;
            v998 = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
            v999 = *(int *)(v998 + 32);
            v1000 = &v13[v999];
            v1001 = &v14[v999];
            v1002 = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
            v1003 = *(_QWORD *)(v1002 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1003 + 48))(v1001, 1, v1002))
            {
              v1004 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
              memcpy(v1000, v1001, *(_QWORD *)(*(_QWORD *)(v1004 - 8) + 64));
            }
            else
            {
              v1474 = v1001[1];
              *v1000 = *v1001;
              v1000[1] = v1474;
              *((_DWORD *)v1000 + 8) = *((_DWORD *)v1001 + 8);
              *(_OWORD *)((char *)v1000 + 40) = *(_OWORD *)((char *)v1001 + 40);
              v1475 = *(int *)(v1002 + 36);
              v1476 = (char *)v1000 + v1475;
              v1477 = (char *)v1001 + v1475;
              v1478 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1478 - 8) + 32))(v1476, v1477, v1478);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1003 + 56))(v1000, 0, 1, v1002);
            }
            v1479 = *(int *)(v998 + 36);
            v1480 = &v13[v1479];
            v1481 = &v14[v1479];
            v1482 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1482 - 8) + 32))(v1480, v1481, v1482);
            swift_storeEnumTagMultiPayload();
            v3 = v996;
            v4 = v3204;
            v11 = v3094;
            v15 = v3113;
            goto LABEL_820;
          case 0x2Au:
            v3089 = v11;
            v3186 = v3;
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v3155 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
            v1005 = *(int *)(v3155 + 20);
            v1006 = &v13[v1005];
            v1007 = &v14[v1005];
            v1008 = type metadata accessor for TranscriptProtoStatementID(0);
            v1009 = *(_QWORD *)(v1008 - 8);
            v960 = v4;
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1009 + 48))(v1007, 1, v1008))
            {
              v1010 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
              memcpy(v1006, v1007, *(_QWORD *)(*(_QWORD *)(v1010 - 8) + 64));
            }
            else
            {
              *v1006 = *v1007;
              *(_OWORD *)(v1006 + 2) = *(_OWORD *)(v1007 + 2);
              v1483 = *(int *)(v1008 + 24);
              v1484 = (char *)v1006 + v1483;
              v1485 = (char *)v1007 + v1483;
              v1486 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1486 - 8) + 32))(v1484, v1485, v1486);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1009 + 56))(v1006, 0, 1, v1008);
            }
            v1420 = v3155;
            v1487 = *(int *)(v3155 + 24);
            v1488 = &v13[v1487];
            v1489 = &v14[v1487];
            v1490 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
            v1491 = *(_QWORD *)(v1490 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1491 + 48))(v1489, 1, v1490))
            {
              v1492 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
              memcpy(v1488, v1489, *(_QWORD *)(*(_QWORD *)(v1492 - 8) + 64));
            }
            else
            {
              v1635 = v15;
              v1636 = v960;
              v1637 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1637 - 8) + 48))(v1489, 1, v1637))
              {
                v1839 = (char *)&loc_24039AB48 + 4 * word_2408E8922[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
              v1638 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
              memcpy(v1488, v1489, *(_QWORD *)(*(_QWORD *)(v1638 - 8) + 64));
              v2192 = *(int *)(v1490 + 20);
              v2193 = &v1488[v2192];
              v2194 = v1488;
              v2195 = &v1489[v2192];
              v2196 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2196 - 8) + 32))(v2193, v2195, v2196);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1491 + 56))(v2194, 0, 1, v1490);
              v960 = v1636;
              v15 = v1635;
              v1420 = v3155;
            }
LABEL_899:
            v2812 = *(int *)(v1420 + 28);
            v2813 = &v13[v2812];
            v2814 = &v14[v2812];
            v2815 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2815 - 8) + 32))(v2813, v2814, v2815);
            swift_storeEnumTagMultiPayload();
            v3 = v3186;
            v11 = v3089;
            v4 = v960;
            goto LABEL_820;
          default:
            v44 = *(_QWORD *)(v25 + 64);
            goto LABEL_19;
        }
      }
      goto LABEL_820;
    }
    sub_240388AE4((uint64_t)v13, type metadata accessor for TranscriptProtoPayloadEnum);
    goto LABEL_18;
  }
  if (v28)
  {
LABEL_18:
    v44 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488) - 8) + 64);
LABEL_19:
    memcpy(v13, v14, v44);
    goto LABEL_820;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v3096 = v15;
      v3136 = v25;
      v29 = v24;
      v3061 = v11;
      v3163 = v3;
      *v13 = *v14;
      v30 = type metadata accessor for TranscriptProtoSessionStart(0);
      v31 = *(int *)(v30 + 20);
      v32 = &v13[v31];
      v33 = &v14[v31];
      v34 = type metadata accessor for TranscriptProtoLocaleSettings(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v781 = v33[1];
        *v32 = *v33;
        v32[1] = v781;
        v32[2] = v33[2];
        v782 = *(int *)(v34 + 28);
        v783 = v4;
        v784 = (char *)v32 + v782;
        v785 = (char *)v33 + v782;
        v786 = sub_2408E57A4();
        v787 = v784;
        v4 = v783;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v786 - 8) + 32))(v787, v785, v786);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v3197 = v4;
      v788 = v30;
      v789 = *(int *)(v30 + 24);
      v790 = &v13[v789];
      v791 = &v14[v789];
      v792 = type metadata accessor for TranscriptProtoDeviceDetails(0);
      v793 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v792 - 8);
      v24 = v29;
      if (v793[6](v791, 1, v792))
      {
        v794 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
        memcpy(v790, v791, *(_QWORD *)(*(_QWORD *)(v794 - 8) + 64));
      }
      else
      {
        __dstf = v793;
        v3012 = v790;
        *v790 = *v791;
        v1222 = *(int *)(v792 + 20);
        v1223 = (_DWORD *)((char *)v790 + v1222);
        v1224 = (_DWORD *)((char *)v791 + v1222);
        v1225 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
        v1226 = *(_QWORD *)(v1225 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1226 + 48))(v1224, 1, v1225))
        {
          v1227 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
          memcpy(v1223, v1224, *(_QWORD *)(*(_QWORD *)(v1227 - 8) + 64));
        }
        else
        {
          *v1223 = *v1224;
          v1531 = *(int *)(v1225 + 20);
          __srcp = (char *)v1223 + v1531;
          v1532 = (char *)v1224 + v1531;
          v1533 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1533 - 8) + 32))(__srcp, v1532, v1533);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1226 + 56))(v1223, 0, 1, v1225);
        }
        v1534 = *(int *)(v792 + 24);
        v1535 = (char *)v3012 + v1534;
        v1536 = (char *)v791 + v1534;
        v1537 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1537 - 8) + 32))(v1535, v1536, v1537);
        (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__dstf + 7))(v3012, 0, 1, v792);
        v788 = v30;
      }
      v1538 = *(int *)(v788 + 28);
      v1539 = &v13[v1538];
      v1540 = &v14[v1538];
      v1541 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1541 - 8) + 32))(v1539, v1540, v1541);
      swift_storeEnumTagMultiPayload();
      v3 = v3163;
      goto LABEL_477;
    case 1u:
      v3104 = v15;
      v3149 = v25;
      v275 = v24;
      v276 = v11;
      v3196 = v4;
      v277 = v3;
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v13[16] = v14[16];
      v278 = (int *)type metadata accessor for TranscriptProtoTextQuery(0);
      v279 = v278[6];
      v280 = &v13[v279];
      v281 = &v14[v279];
      v282 = type metadata accessor for TranscriptProtoStatementID(0);
      v283 = *(_QWORD *)(v282 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v283 + 48))(v281, 1, v282))
      {
        v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v280, v281, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
      }
      else
      {
        *v280 = *v281;
        *(_OWORD *)(v280 + 2) = *(_OWORD *)(v281 + 2);
        v1011 = *(int *)(v282 + 24);
        v3001 = (char *)v280 + v1011;
        v1012 = (char *)v281 + v1011;
        v1013 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1013 - 8) + 32))(v3001, v1012, v1013);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v280, 0, 1, v282);
      }
      v11 = v276;
      *(_OWORD *)&v13[v278[7]] = *(_OWORD *)&v14[v278[7]];
      v1014 = v278[8];
      v1015 = &v13[v1014];
      v1016 = &v14[v1014];
      v1017 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1017 - 8) + 32))(v1015, v1016, v1017);
      v24 = v275;
      goto LABEL_325;
    case 2u:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v13[8] = v14[8];
      *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
      v285 = *(int *)(type metadata accessor for TranscriptProtoSpeechQuery(0) + 28);
      v286 = &v13[v285];
      v287 = v25;
      v288 = v4;
      v289 = &v14[v285];
      v290 = sub_2408E57A4();
      v291 = v289;
      v4 = v288;
      v25 = v287;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v290 - 8) + 32))(v286, v291, v290);
      swift_storeEnumTagMultiPayload();
      goto LABEL_819;
    case 3u:
      v3046 = v24;
      v3075 = v11;
      v3175 = v3;
      *v13 = *v14;
      v292 = (int *)type metadata accessor for TranscriptProtoRequest(0);
      v293 = v292[5];
      v294 = &v13[v293];
      v295 = &v14[v293];
      v296 = type metadata accessor for TranscriptProtoRequestContent(0);
      v297 = *(_QWORD *)(v296 - 8);
      v3136 = v25;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v297 + 48))(v295, 1, v296))
      {
        v298 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
        memcpy(v294, v295, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
      }
      else
      {
        v1018 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
        v3002 = v297;
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1018 - 8) + 48))(v295, 1, v1018))
        {
          v1493 = (char *)&loc_2403985D0 + 4 * word_2408E88BE[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v1019 = v4;
        v1020 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
        memcpy(v294, v295, *(_QWORD *)(*(_QWORD *)(v1020 - 8) + 64));
        v2268 = *(int *)(v296 + 20);
        v2269 = v296;
        v2270 = &v294[v2268];
        v2271 = &v295[v2268];
        v2272 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2272 - 8) + 32))(v2270, v2271, v2272);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3002 + 56))(v294, 0, 1, v2269);
        v4 = v1019;
      }
      v2273 = v292[6];
      v2274 = &v13[v2273];
      v2275 = &v14[v2273];
      v2276 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
      v2277 = *(_QWORD *)(v2276 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2277 + 48))(v2275, 1, v2276))
      {
        v2278 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
        memcpy(v2274, v2275, *(_QWORD *)(*(_QWORD *)(v2278 - 8) + 64));
      }
      else
      {
        v3128 = v2277;
        v2279 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2279 - 8) + 48))(v2275, 1, v2279))
        {
          v2282 = (char *)&loc_2403A2AC4 + 4 * byte_2408E88C6[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v2280 = v4;
        v2281 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
        memcpy(v2274, v2275, *(_QWORD *)(*(_QWORD *)(v2281 - 8) + 64));
        v2283 = *(int *)(v2276 + 20);
        v2284 = &v2274[v2283];
        v2285 = &v2275[v2283];
        v2286 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2286 - 8) + 32))(v2284, v2285, v2286);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3128 + 56))(v2274, 0, 1, v2276);
        v4 = v2280;
      }
      v3197 = v4;
      *(_OWORD *)&v13[v292[7]] = *(_OWORD *)&v14[v292[7]];
      v2287 = v292;
      v2288 = v292[8];
      v2289 = &v13[v2288];
      v2290 = &v14[v2288];
      v2291 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
      v2292 = *(_QWORD *)(v2291 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v2292 + 48))(v2290, 1, v2291))
      {
        v2293 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
        memcpy(v2289, v2290, *(_QWORD *)(*(_QWORD *)(v2293 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v2289 = *(_OWORD *)v2290;
        v2289[2] = v2290[2];
        v2294 = *(int *)(v2291 + 24);
        v2295 = (char *)v2289 + v2294;
        v2296 = (char *)v2290 + v2294;
        v2297 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2297 - 8) + 32))(v2295, v2296, v2297);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2292 + 56))(v2289, 0, 1, v2291);
      }
      v2298 = v2287[9];
      v2299 = &v13[v2298];
      v2300 = &v14[v2298];
      v2301 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2301 - 8) + 32))(v2299, v2300, v2301);
      v24 = v3046;
      swift_storeEnumTagMultiPayload();
      v3 = v3175;
      v11 = v3075;
      goto LABEL_735;
    case 4u:
      v299 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v299;
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
      *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
      v13[56] = v14[56];
      v300 = *(int *)(type metadata accessor for TranscriptProtoPlan(0) + 36);
      v301 = &v13[v300];
      v302 = v25;
      v303 = v4;
      v304 = &v14[v300];
      v305 = sub_2408E57A4();
      v306 = v304;
      v4 = v303;
      v25 = v302;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v301, v306, v305);
      swift_storeEnumTagMultiPayload();
      goto LABEL_819;
    case 5u:
      v3104 = v15;
      v3149 = v25;
      v307 = v24;
      v308 = v11;
      v3196 = v4;
      v277 = v3;
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v13[16] = v14[16];
      *((_QWORD *)v13 + 3) = *((_QWORD *)v14 + 3);
      v309 = (int *)type metadata accessor for TranscriptProtoAction(0);
      v310 = v309[7];
      v311 = &v13[v310];
      v312 = &v14[v310];
      v313 = type metadata accessor for TranscriptProtoStatementID(0);
      v314 = *(_QWORD *)(v313 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v314 + 48))(v312, 1, v313))
      {
        v315 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v311, v312, *(_QWORD *)(*(_QWORD *)(v315 - 8) + 64));
      }
      else
      {
        *v311 = *v312;
        *(_OWORD *)(v311 + 2) = *(_OWORD *)(v312 + 2);
        v1021 = *(int *)(v313 + 24);
        v3003 = (char *)v311 + v1021;
        v1022 = (char *)v312 + v1021;
        v1023 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1023 - 8) + 32))(v3003, v1022, v1023);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v314 + 56))(v311, 0, 1, v313);
      }
      v11 = v308;
      *(_OWORD *)&v13[v309[8]] = *(_OWORD *)&v14[v309[8]];
      *(_OWORD *)&v13[v309[9]] = *(_OWORD *)&v14[v309[9]];
      *(_OWORD *)&v13[v309[10]] = *(_OWORD *)&v14[v309[10]];
      v1024 = v309[11];
      v1025 = &v13[v1024];
      v1026 = &v14[v1024];
      v1027 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1027 - 8) + 32))(v1025, v1026, v1027);
      v24 = v307;
      goto LABEL_325;
    case 6u:
      v3104 = v15;
      v3149 = v25;
      v316 = v24;
      v317 = v11;
      v3196 = v4;
      v277 = v3;
      v318 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v318;
      v319 = *((_OWORD *)v14 + 3);
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      *((_OWORD *)v13 + 3) = v319;
      v320 = type metadata accessor for TranscriptProtoClientAction(0);
      v321 = *(int *)(v320 + 36);
      v322 = &v13[v321];
      v323 = &v14[v321];
      v324 = type metadata accessor for TranscriptProtoStatementID(0);
      v325 = *(_QWORD *)(v324 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v325 + 48))(v323, 1, v324))
      {
        v326 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v322, v323, *(_QWORD *)(*(_QWORD *)(v326 - 8) + 64));
      }
      else
      {
        *v322 = *v323;
        *(_OWORD *)(v322 + 2) = *(_OWORD *)(v323 + 2);
        v1028 = *(int *)(v324 + 24);
        v3004 = (char *)v322 + v1028;
        v1029 = (char *)v323 + v1028;
        v1030 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1030 - 8) + 32))(v3004, v1029, v1030);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v325 + 56))(v322, 0, 1, v324);
      }
      v11 = v317;
      v1031 = *(int *)(v320 + 40);
      v1032 = &v13[v1031];
      v1033 = &v14[v1031];
      v1034 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1034 - 8) + 32))(v1032, v1033, v1034);
      v24 = v316;
      goto LABEL_325;
    case 7u:
      v3104 = v15;
      v3149 = v25;
      v327 = v24;
      v328 = v11;
      v3196 = v4;
      v277 = v3;
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v329 = type metadata accessor for TranscriptProtoQueryStep(0);
      v330 = *(int *)(v329 + 20);
      v331 = &v13[v330];
      v332 = &v14[v330];
      v333 = type metadata accessor for TranscriptProtoStatementID(0);
      v334 = *(_QWORD *)(v333 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v334 + 48))(v332, 1, v333))
        goto LABEL_97;
      goto LABEL_304;
    case 8u:
      v3104 = v15;
      v3149 = v25;
      v327 = v24;
      v328 = v11;
      v3196 = v4;
      v277 = v3;
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v329 = type metadata accessor for TranscriptProtoVariableStep(0);
      v336 = *(int *)(v329 + 20);
      v331 = &v13[v336];
      v332 = &v14[v336];
      v333 = type metadata accessor for TranscriptProtoStatementID(0);
      v334 = *(_QWORD *)(v333 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v334 + 48))(v332, 1, v333))
      {
LABEL_97:
        v335 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v331, v332, *(_QWORD *)(*(_QWORD *)(v335 - 8) + 64));
      }
      else
      {
LABEL_304:
        *v331 = *v332;
        *(_OWORD *)(v331 + 2) = *(_OWORD *)(v332 + 2);
        v1035 = *(int *)(v333 + 24);
        v3005 = (char *)v331 + v1035;
        v1036 = (char *)v332 + v1035;
        v1037 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1037 - 8) + 32))(v3005, v1036, v1037);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v334 + 56))(v331, 0, 1, v333);
      }
      v11 = v328;
      v1038 = *(int *)(v329 + 24);
      v1039 = &v13[v1038];
      v1040 = &v14[v1038];
      v1041 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1041 - 8) + 32))(v1039, v1040, v1041);
      v24 = v327;
      goto LABEL_325;
    case 0xAu:
      v3136 = v25;
      v3076 = v11;
      v337 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
      if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v337 - 8) + 48))(v14, 1, v337))
      {
        v1042 = (char *)&loc_240395E1C + 4 * word_2408E88B6[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v338 = v4;
      v339 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v339 - 8) + 64));
      v2116 = *(int *)(type metadata accessor for TranscriptProtoSessionError(0) + 20);
      v2117 = &v13[v2116];
      v2118 = &v14[v2116];
      v2119 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2119 - 8) + 32))(v2117, v2118, v2119);
      swift_storeEnumTagMultiPayload();
      goto LABEL_680;
    case 0xBu:
      v3105 = v15;
      v3136 = v25;
      v340 = v11;
      v341 = v3;
      v342 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
      v343 = *(_QWORD *)(v342 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v343 + 48))(v14, 1, v342))
      {
        v338 = v4;
        v344 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v344 - 8) + 64));
      }
      else
      {
        v3056 = v24;
        v1043 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
        v1044 = *(_QWORD *)(v1043 - 8);
        v338 = v4;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v1044 + 48))(v14, 1, v1043))
        {
          v1045 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v1045 - 8) + 64));
        }
        else
        {
          v1494 = *((_OWORD *)v14 + 1);
          *(_OWORD *)v13 = *(_OWORD *)v14;
          *((_OWORD *)v13 + 1) = v1494;
          *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
          v1495 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0) + 28);
          v1496 = &v13[v1495];
          v3014 = &v14[v1495];
          v1497 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1497 - 8) + 32))(v1496, v3014, v1497);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v1044 + 56))(v13, 0, 1, v1043);
        }
        v24 = v3056;
        v1498 = *(int *)(type metadata accessor for TranscriptProtoPlanGenerationError(0) + 20);
        v1499 = &v13[v1498];
        v1500 = &v14[v1498];
        v1501 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1501 - 8) + 32))(v1499, v1500, v1501);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v343 + 56))(v13, 0, 1, v342);
      }
      v1502 = *(int *)(type metadata accessor for TranscriptProtoRecoverableError(0) + 20);
      v1503 = &v13[v1502];
      v1504 = &v14[v1502];
      v1505 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1505 - 8) + 32))(v1503, v1504, v1505);
      swift_storeEnumTagMultiPayload();
      v3 = v341;
      v11 = v340;
      v15 = v3105;
      goto LABEL_681;
    case 0xCu:
      v345 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v345;
      *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
      v346 = *(int *)(type metadata accessor for TranscriptProtoClientCustom(0) + 28);
      v347 = &v13[v346];
      v348 = v25;
      v349 = v4;
      v350 = &v14[v346];
      v351 = sub_2408E57A4();
      v352 = v350;
      v4 = v349;
      v25 = v348;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v351 - 8) + 32))(v347, v352, v351);
      swift_storeEnumTagMultiPayload();
      goto LABEL_819;
    case 0xDu:
      v3136 = v25;
      v3076 = v11;
      v3176 = v3;
      v353 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v353;
      v354 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
      v355 = *(int *)(v354 + 24);
      v356 = &v13[v355];
      v357 = &v14[v355];
      v358 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
      v359 = *(_QWORD *)(v358 - 8);
      v3106 = v354;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v359 + 48))(v357, 1, v358))
      {
        v360 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
        memcpy(v356, v357, *(_QWORD *)(*(_QWORD *)(v360 - 8) + 64));
      }
      else
      {
        v3006 = v359;
        v1046 = v356;
        v1047 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
        v1048 = *(_QWORD *)(v1047 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v1048 + 48))(v357, 1, v1047))
        {
          v1049 = v4;
          v1050 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
          memcpy(v1046, v357, *(_QWORD *)(*(_QWORD *)(v1050 - 8) + 64));
        }
        else
        {
          v3057 = v24;
          v1506 = v15;
          v1507 = v4;
          v1508 = swift_getEnumCaseMultiPayload();
          switch(v1508)
          {
            case 6:
              v1896 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1896 - 8) + 32))(v1046, v357, v1896);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
              *v1046 = *v357;
              v1897 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0)
                             + 20);
              __dstx = &v1046[v1897];
              v1898 = &v357[v1897];
              v1899 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1899 - 8) + 32))(__dstx, v1898, v1899);
              swift_storeEnumTagMultiPayload();
              break;
            case 1:
              *(_QWORD *)v1046 = *(_QWORD *)v357;
              v1509 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
              __dstv = &v1046[v1509];
              v1510 = &v357[v1509];
              v1511 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1511 - 8) + 32))(__dstv, v1510, v1511);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v1046, v357, *(_QWORD *)(v1048 + 64));
              break;
          }
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v1048 + 56))(v1046, 0, 1, v1047);
          v1049 = v1507;
          v15 = v1506;
          v24 = v3057;
        }
        v1900 = *(int *)(v358 + 20);
        v1901 = &v1046[v1900];
        v1902 = &v357[v1900];
        v1903 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1903 - 8) + 32))(v1901, v1902, v1903);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v3006 + 56))(v1046, 0, 1, v358);
        v4 = v1049;
        v354 = v3106;
      }
      v1904 = *(int *)(v354 + 28);
      v1905 = &v13[v1904];
      v1906 = &v14[v1904];
      v1907 = type metadata accessor for TranscriptProtoStatementID(0);
      v1908 = *(_QWORD *)(v1907 - 8);
      __dsto = *(unsigned int (**)(char *, uint64_t, uint64_t))(v1908 + 48);
      v3016 = v1907;
      __srci = (void *)v1908;
      if (__dsto((char *)v1906, 1, v1907))
      {
        v1909 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v1905, v1906, *(_QWORD *)(*(_QWORD *)(v1909 - 8) + 64));
      }
      else
      {
        *v1905 = *v1906;
        *(_OWORD *)(v1905 + 2) = *(_OWORD *)(v1906 + 2);
        v1910 = *(int *)(v1907 + 24);
        v1911 = v4;
        v1912 = (char *)v1905 + v1910;
        v1913 = (char *)v1906 + v1910;
        v1914 = sub_2408E57A4();
        v1915 = v1912;
        v4 = v1911;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1914 - 8) + 32))(v1915, v1913, v1914);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1908 + 56))(v1905, 0, 1, v1907);
      }
      v1916 = v3106;
      v1917 = *(int *)(v3106 + 32);
      v1918 = &v13[v1917];
      v1919 = &v14[v1917];
      v1920 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
      v1921 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v1920 - 8);
      if (v1921[6](v1919, 1, v1920))
      {
        v338 = v4;
        v1922 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
        memcpy(v1918, v1919, *(_QWORD *)(*(_QWORD *)(v1922 - 8) + 64));
        v3 = v3176;
        goto LABEL_661;
      }
      v2908 = v1921;
      v2921 = (int *)v1920;
      v1923 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
      v1924 = *(_QWORD *)(v1923 - 8);
      v1925 = (char *)v1919;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1924 + 48))(v1919, 1, v1923))
      {
        v338 = v4;
        v1926 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
        v1927 = v1918;
        memcpy(v1918, v1925, *(_QWORD *)(*(_QWORD *)(v1926 - 8) + 64));
        goto LABEL_660;
      }
      v3058 = v24;
      v1928 = v15;
      v1929 = v4;
      v1930 = swift_getEnumCaseMultiPayload();
      if (v1930 == 1)
      {
        *v1918 = *v1919;
        v1935 = *(int *)(type metadata accessor for TranscriptProtoRequestContentSpeechContent(0) + 20);
        v1936 = (char *)v1918 + v1935;
        v1937 = &v1925[v1935];
        v1938 = sub_2408E57A4();
        v1939 = v1936;
        v1927 = v1918;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1938 - 8) + 32))(v1939, v1937, v1938);
      }
      else
      {
        if (v1930)
        {
          v1927 = v1918;
          memcpy(v1918, v1925, *(_QWORD *)(v1924 + 64));
          goto LABEL_659;
        }
        *(_OWORD *)v1918 = *(_OWORD *)v1919;
        v2894 = (int *)type metadata accessor for TranscriptProtoRequestContentTextContent(0);
        v1931 = v2894[5];
        v1932 = (_DWORD *)((char *)v1918 + v1931);
        v1933 = &v1925[v1931];
        if (__dsto(&v1925[v1931], 1, v3016))
        {
          v1934 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
          memcpy(v1932, v1933, *(_QWORD *)(*(_QWORD *)(v1934 - 8) + 64));
        }
        else
        {
          *v1932 = *(_DWORD *)v1933;
          *(_OWORD *)(v1932 + 2) = *(_OWORD *)(v1933 + 8);
          v2062 = *(int *)(v3016 + 24);
          __dstz = (char *)v1932 + v2062;
          v2063 = &v1933[v2062];
          v2064 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2064 - 8) + 32))(__dstz, v2063, v2064);
          (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__srci + 7))(v1932, 0, 1, v3016);
        }
        v2065 = v2894[6];
        v2066 = (char *)v1918 + v2065;
        v2067 = &v1925[v2065];
        v2068 = sub_2408E57A4();
        v2069 = v2066;
        v1927 = v1918;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2068 - 8) + 32))(v2069, v2067, v2068);
      }
      swift_storeEnumTagMultiPayload();
LABEL_659:
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1924 + 56))(v1927, 0, 1, v1923);
      v338 = v1929;
      v15 = v1928;
      v24 = v3058;
LABEL_660:
      v2070 = v2921[5];
      v2071 = (char *)v1927 + v2070;
      v2072 = &v1925[v2070];
      v2073 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2073 - 8) + 32))(v2071, v2072, v2073);
      (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))v2908 + 7))(v1927, 0, 1, v2921);
      v3 = v3176;
      v1916 = v3106;
LABEL_661:
      v2074 = *(int *)(v1916 + 36);
      v2075 = &v13[v2074];
      v2076 = &v14[v2074];
      v2077 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2077 - 8) + 32))(v2075, v2076, v2077);
      swift_storeEnumTagMultiPayload();
LABEL_680:
      v11 = v3076;
LABEL_681:
      v4 = v338;
LABEL_818:
      v25 = v3136;
LABEL_819:
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v13, 0, 1, v24);
      break;
    case 0xEu:
    case 0x10u:
    case 0x13u:
    case 0x14u:
    case 0x15u:
    case 0x29u:
      v385 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v385 - 8) + 32))(v13, v14, v385);
      swift_storeEnumTagMultiPayload();
      goto LABEL_819;
    case 0xFu:
      v3104 = v15;
      v3149 = v25;
      v361 = v24;
      v362 = v11;
      v3196 = v4;
      v277 = v3;
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
      v363 = type metadata accessor for TranscriptProtoQueryStepResults(0);
      v364 = *(int *)(v363 + 24);
      v365 = &v13[v364];
      v366 = &v14[v364];
      v367 = type metadata accessor for TranscriptProtoStatementID(0);
      v368 = *(_QWORD *)(v367 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v368 + 48))(v366, 1, v367))
      {
        v369 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v365, v366, *(_QWORD *)(*(_QWORD *)(v369 - 8) + 64));
      }
      else
      {
        *v365 = *v366;
        *(_OWORD *)(v365 + 2) = *(_OWORD *)(v366 + 2);
        v1051 = *(int *)(v367 + 24);
        v3007 = (char *)v365 + v1051;
        v1052 = (char *)v366 + v1051;
        v1053 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1053 - 8) + 32))(v3007, v1052, v1053);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v368 + 56))(v365, 0, 1, v367);
      }
      goto LABEL_324;
    case 0x11u:
      v3096 = v15;
      v3136 = v25;
      v3197 = v4;
      v3061 = v11;
      v370 = v3;
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      v13[24] = v14[24];
      *(_WORD *)(v13 + 25) = *(_WORD *)(v14 + 25);
      v371 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
      v372 = *(int *)(v371 + 36);
      v373 = &v13[v372];
      v374 = &v14[v372];
      v375 = type metadata accessor for TranscriptProtoParameterSet(0);
      v376 = *(_QWORD *)(v375 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v376 + 48))(v374, 1, v375))
      {
        v377 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
        memcpy(v373, v374, *(_QWORD *)(*(_QWORD *)(v377 - 8) + 64));
      }
      else
      {
        *v373 = *v374;
        v1054 = *(int *)(v375 + 20);
        v1055 = (char *)v373 + v1054;
        v1056 = (char *)v374 + v1054;
        v1057 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1057 - 8) + 32))(v1055, v1056, v1057);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v376 + 56))(v373, 0, 1, v375);
      }
      v1058 = v371;
      v1059 = *(int *)(v371 + 40);
      v1060 = &v13[v1059];
      v1061 = &v14[v1059];
      v1062 = type metadata accessor for TranscriptProtoStatementID(0);
      v1063 = *(_QWORD *)(v1062 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1063 + 48))(v1061, 1, v1062))
      {
        v1064 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v1060, v1061, *(_QWORD *)(*(_QWORD *)(v1064 - 8) + 64));
      }
      else
      {
        *v1060 = *v1061;
        *(_OWORD *)(v1060 + 2) = *(_OWORD *)(v1061 + 2);
        v1228 = *(int *)(v1062 + 24);
        v1229 = (char *)v1060 + v1228;
        v1230 = (char *)v1061 + v1228;
        v1231 = sub_2408E57A4();
        v1232 = v1229;
        v1058 = v371;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1231 - 8) + 32))(v1232, v1230, v1231);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1063 + 56))(v1060, 0, 1, v1062);
      }
      v1233 = *(int *)(v1058 + 44);
      v1234 = &v13[v1233];
      v1235 = &v14[v1233];
      v1236 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1236 - 8) + 32))(v1234, v1235, v1236);
      swift_storeEnumTagMultiPayload();
      v3 = v370;
      goto LABEL_477;
    case 0x12u:
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      v378 = *(int *)(type metadata accessor for TranscriptProtoClientInitiatedClientAction(0) + 24);
      v379 = &v13[v378];
      v380 = v25;
      v381 = v4;
      v382 = &v14[v378];
      v383 = sub_2408E57A4();
      v384 = v382;
      v4 = v381;
      v25 = v380;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v383 - 8) + 32))(v379, v384, v383);
      swift_storeEnumTagMultiPayload();
      goto LABEL_819;
    case 0x16u:
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v386 = *(int *)(type metadata accessor for TranscriptProtoSafetyModeException(0) + 20);
      v387 = &v13[v386];
      v388 = v25;
      v389 = v4;
      v390 = &v14[v386];
      v391 = sub_2408E57A4();
      v392 = v390;
      v4 = v389;
      v25 = v388;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v391 - 8) + 32))(v387, v392, v391);
      swift_storeEnumTagMultiPayload();
      goto LABEL_819;
    case 0x17u:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v393 = *(int *)(type metadata accessor for TranscriptProtoResponseGenerationRequest(0) + 20);
      v394 = &v13[v393];
      v395 = v25;
      v396 = v4;
      v397 = &v14[v393];
      v398 = sub_2408E57A4();
      v399 = v397;
      v4 = v396;
      v25 = v395;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v398 - 8) + 32))(v394, v399, v398);
      swift_storeEnumTagMultiPayload();
      goto LABEL_819;
    case 0x18u:
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v400 = *(int *)(type metadata accessor for TranscriptProtoEntitySpanMatchResult(0) + 20);
      v401 = &v13[v400];
      v402 = v25;
      v403 = v4;
      v404 = &v14[v400];
      v405 = sub_2408E57A4();
      v406 = v404;
      v4 = v403;
      v25 = v402;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v405 - 8) + 32))(v401, v406, v405);
      swift_storeEnumTagMultiPayload();
      goto LABEL_819;
    case 0x19u:
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v407 = *(int *)(type metadata accessor for TranscriptProtoContextRetrieved(0) + 24);
      v408 = &v13[v407];
      v409 = v25;
      v410 = v4;
      v411 = &v14[v407];
      v412 = sub_2408E57A4();
      v413 = v411;
      v4 = v410;
      v25 = v409;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v412 - 8) + 32))(v408, v413, v412);
      swift_storeEnumTagMultiPayload();
      goto LABEL_819;
    case 0x1Au:
      v3096 = v15;
      v3136 = v25;
      v3197 = v4;
      v414 = v3;
      v415 = type metadata accessor for TranscriptProtoStatementID(0);
      v416 = *(_QWORD *)(v415 - 8);
      v417 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v416 + 48);
      v3061 = v11;
      if (v417(v14, 1, v415))
      {
        v418 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v418 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v13 = *(_DWORD *)v14;
        *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
        v1065 = *(int *)(v415 + 24);
        v1066 = &v13[v1065];
        v1067 = &v14[v1065];
        v1068 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1068 - 8) + 32))(v1066, v1067, v1068);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v416 + 56))(v13, 0, 1, v415);
      }
      v1069 = type metadata accessor for TranscriptProtoActionCancellation(0);
      v1070 = *(int *)(v1069 + 20);
      v1071 = &v13[v1070];
      v1072 = &v14[v1070];
      if (v417(&v14[v1070], 1, v415))
      {
        v1073 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v1071, v1072, *(_QWORD *)(*(_QWORD *)(v1073 - 8) + 64));
      }
      else
      {
        *v1071 = *v1072;
        *(_OWORD *)(v1071 + 2) = *(_OWORD *)(v1072 + 2);
        v1237 = *(int *)(v415 + 24);
        v1238 = (char *)v1071 + v1237;
        v1239 = (char *)v1072 + v1237;
        v1240 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1240 - 8) + 32))(v1238, v1239, v1240);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v416 + 56))(v1071, 0, 1, v415);
      }
      v3 = v414;
      v1241 = *(int *)(v1069 + 24);
      v1242 = &v13[v1241];
      v1243 = &v14[v1241];
      v1244 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1244 - 8) + 32))(v1242, v1243, v1244);
      swift_storeEnumTagMultiPayload();
LABEL_477:
      v11 = v3061;
      v15 = v3096;
      goto LABEL_735;
    case 0x1Bu:
      v419 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v419;
      *((_DWORD *)v13 + 8) = *((_DWORD *)v14 + 8);
      *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
      v420 = *(int *)(type metadata accessor for TranscriptProtoToolRetrievalResponse(0) + 36);
      v421 = &v13[v420];
      v422 = v25;
      v423 = v4;
      v424 = &v14[v420];
      v425 = sub_2408E57A4();
      v426 = v424;
      v4 = v423;
      v25 = v422;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v425 - 8) + 32))(v421, v426, v425);
      swift_storeEnumTagMultiPayload();
      goto LABEL_819;
    case 0x1Cu:
      v3047 = v24;
      v3077 = v11;
      v3177 = v3;
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
      v427 = (int *)type metadata accessor for TranscriptProtoSystemResponse(0);
      v428 = v427[7];
      v429 = &v13[v428];
      v430 = &v14[v428];
      v431 = type metadata accessor for TranscriptProtoStatementOutcome(0);
      v432 = *(_QWORD *)(v431 - 8);
      v3136 = v25;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v432 + 48))(v430, 1, v431))
      {
        v433 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
        memcpy(v429, v430, *(_QWORD *)(*(_QWORD *)(v433 - 8) + 64));
      }
      else
      {
        v3008 = v427;
        v1074 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1074 - 8) + 48))(v430, 1, v1074))
        {
          v1512 = (char *)&loc_24039880C + 4 * word_2408E8896[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v1075 = v4;
        v1076 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
        memcpy(v429, v430, *(_QWORD *)(*(_QWORD *)(v1076 - 8) + 64));
        v2433 = *(int *)(v431 + 20);
        v2434 = v431;
        v2435 = &v429[v2433];
        v2436 = &v430[v2433];
        v2437 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2437 - 8) + 32))(v2435, v2436, v2437);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v432 + 56))(v429, 0, 1, v2434);
        v4 = v1075;
        v427 = v3008;
      }
      v2438 = v427[8];
      v2439 = &v13[v2438];
      v2440 = &v14[v2438];
      v2441 = type metadata accessor for TranscriptProtoResponseOutput(0);
      v2442 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v2441 - 8);
      if (v2442[6](v2440, 1, v2441))
      {
        v2443 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
        memcpy(v2439, v2440, *(_QWORD *)(*(_QWORD *)(v2443 - 8) + 64));
      }
      else
      {
        *v2439 = *v2440;
        *((_BYTE *)v2439 + 8) = *((_BYTE *)v2440 + 8);
        v2439[2] = v2440[2];
        __srcn = (char *)v2440;
        __dsts = (int *)v2441;
        v2444 = *(int *)(v2441 + 28);
        v2445 = (char *)v2439 + v2444;
        v2446 = (char *)v2440 + v2444;
        v2447 = type metadata accessor for TranscriptProtoDialogType(0);
        v2901 = *(_QWORD *)(v2447 - 8);
        v3131 = v2447;
        v2911 = *(unsigned int (**)(char *, uint64_t))(v2901 + 48);
        v2924 = v2442;
        if (v2911(v2446, 1))
        {
          v2448 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
          memcpy(v2445, v2446, *(_QWORD *)(*(_QWORD *)(v2448 - 8) + 64));
        }
        else
        {
          v3019 = v427;
          v2449 = v15;
          v2450 = v4;
          v2451 = type metadata accessor for TranscriptProtoDialogFormat(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2451 - 8) + 48))(v2446, 1, v2451))
          {
            v2453 = (char *)&loc_2403A57F8 + 4 * byte_2408E88AC[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v2452 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
          memcpy(v2445, v2446, *(_QWORD *)(*(_QWORD *)(v2452 - 8) + 64));
          v2454 = *(int *)(v3131 + 20);
          v2455 = &v2445[v2454];
          v2456 = &v2446[v2454];
          v2457 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2457 - 8) + 32))(v2455, v2456, v2457);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2901 + 56))(v2445, 0, 1, v3131);
          v4 = v2450;
          v15 = v2449;
          v427 = v3019;
        }
        v2459 = __srcn;
        v2458 = __dsts;
        v2460 = __dsts[8];
        v2461 = (char *)v2439 + v2460;
        v2462 = &__srcn[v2460];
        v3211 = v4;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v2911)(&__srcn[v2460], 1, v3131))
        {
          v2463 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
          memcpy(v2461, v2462, *(_QWORD *)(*(_QWORD *)(v2463 - 8) + 64));
        }
        else
        {
          v2464 = v2461;
          v2465 = type metadata accessor for TranscriptProtoDialogFormat(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2465 - 8) + 48))(v2462, 1, v2465))
          {
            v2467 = (char *)&loc_2403A5A04 + 4 * byte_2408E88B1[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v2466 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
          memcpy(v2461, v2462, *(_QWORD *)(*(_QWORD *)(v2466 - 8) + 64));
          v2468 = *(int *)(v3131 + 20);
          v2469 = &v2461[v2468];
          v2470 = &v2462[v2468];
          v2471 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2471 - 8) + 32))(v2469, v2470, v2471);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2901 + 56))(v2464, 0, 1, v3131);
          v2459 = __srcn;
          v2458 = __dsts;
        }
        v2472 = v2458[9];
        v2473 = (char *)v2439 + v2472;
        v2474 = &v2459[v2472];
        v2475 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2475 - 8) + 32))(v2473, v2474, v2475);
        (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))v2924 + 7))(v2439, 0, 1, v2458);
        v4 = v3211;
      }
      v452 = v4;
      v2476 = v427;
      v2477 = v427[9];
      v2478 = &v13[v2477];
      v2479 = &v14[v2477];
      v2480 = type metadata accessor for TranscriptProtoStatementID(0);
      v2481 = *(_QWORD *)(v2480 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v2481 + 48))(v2479, 1, v2480))
      {
        v2482 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v2478, v2479, *(_QWORD *)(*(_QWORD *)(v2482 - 8) + 64));
      }
      else
      {
        *v2478 = *v2479;
        *(_OWORD *)(v2478 + 2) = *(_OWORD *)(v2479 + 2);
        v2483 = *(int *)(v2480 + 24);
        v2484 = (char *)v2478 + v2483;
        v2485 = (char *)v2479 + v2483;
        v2486 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2486 - 8) + 32))(v2484, v2485, v2486);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2481 + 56))(v2478, 0, 1, v2480);
      }
      *(_OWORD *)&v13[v2476[10]] = *(_OWORD *)&v14[v2476[10]];
      v2487 = v2476[11];
      v2488 = &v13[v2487];
      v2489 = &v14[v2487];
      v2490 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2490 - 8) + 32))(v2488, v2489, v2490);
      v24 = v3047;
      goto LABEL_816;
    case 0x1Du:
      v3150 = v25;
      v3078 = v11;
      v434 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v434;
      v2987 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
      v435 = v2987[6];
      v436 = &v13[v435];
      v437 = &v14[v435];
      v438 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
      v439 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v438 - 8);
      v3178 = v3;
      if (v439[6](v437, 1, v438))
      {
        v440 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
        memcpy(v436, v437, *(_QWORD *)(*(_QWORD *)(v440 - 8) + 64));
      }
      else
      {
        v2904 = v439;
        v1077 = type metadata accessor for TranscriptProtoStatementOutcome(0);
        v1078 = *(_QWORD *)(v1077 - 8);
        v3114 = v1077;
        __srcc = v437;
        __dste = v436;
        if ((*(unsigned int (**)(char *, uint64_t))(v1078 + 48))(v437, 1))
        {
          v1079 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
          memcpy(v436, v437, *(_QWORD *)(*(_QWORD *)(v1079 - 8) + 64));
        }
        else
        {
          v2915 = (void *)v438;
          v1513 = v24;
          v1514 = v15;
          v1515 = v4;
          v1516 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1516 - 8) + 48))(v437, 1, v1516))
          {
            v1826 = (char *)&loc_24039A90C + 4 * word_2408E8880[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v1517 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
          memcpy(v436, v437, *(_QWORD *)(*(_QWORD *)(v1517 - 8) + 64));
          v2727 = *(int *)(v3114 + 20);
          v2728 = &v436[v2727];
          v2729 = &v437[v2727];
          v2730 = sub_2408E57A4();
          v2731 = v2728;
          v436 = __dste;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2730 - 8) + 32))(v2731, v2729, v2730);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1078 + 56))(__dste, 0, 1, v3114);
          v4 = v1515;
          v15 = v1514;
          v24 = v1513;
          v438 = (uint64_t)v2915;
        }
        v2732 = v437;
        v2733 = v438;
        v2734 = *(int *)(v438 + 20);
        v2735 = &v436[v2734];
        v2736 = &v2732[v2734];
        v2737 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
        v2902 = *((_QWORD *)v2737 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v2902 + 48))(v2736, 1, v2737))
        {
          v2738 = v2735;
          v2739 = v4;
          v2740 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
          memcpy(v2738, v2736, *(_QWORD *)(*(_QWORD *)(v2740 - 8) + 64));
        }
        else
        {
          v3028 = v13;
          v3060 = v24;
          v2927 = v14;
          v3135 = v15;
          v2741 = v4;
          *(_QWORD *)v2735 = *(_QWORD *)v2736;
          v2742 = v2737[5];
          v2743 = v2735;
          v2744 = &v2735[v2742];
          v2745 = &v2736[v2742];
          v2746 = type metadata accessor for TranscriptProtoResponseDialog(0);
          v2747 = *(_QWORD *)(v2746 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2747 + 48))(v2745, 1, v2746))
          {
            v2748 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
            memcpy(v2744, v2745, *(_QWORD *)(*(_QWORD *)(v2748 - 8) + 64));
          }
          else
          {
            v2749 = *((_OWORD *)v2745 + 1);
            *(_OWORD *)v2744 = *(_OWORD *)v2745;
            *((_OWORD *)v2744 + 1) = v2749;
            v2750 = *((_OWORD *)v2745 + 3);
            *((_OWORD *)v2744 + 2) = *((_OWORD *)v2745 + 2);
            *((_OWORD *)v2744 + 3) = v2750;
            v2751 = *(int *)(v2746 + 32);
            v2752 = &v2744[v2751];
            v2753 = &v2745[v2751];
            v2754 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2754 - 8) + 32))(v2752, v2753, v2754);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2747 + 56))(v2744, 0, 1, v2746);
          }
          v2755 = v2737[6];
          v2756 = (_OWORD *)((char *)v2743 + v2755);
          v2757 = &v2736[v2755];
          v2758 = type metadata accessor for TranscriptProtoResponseVisual(0);
          v2759 = *(_QWORD *)(v2758 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2759 + 48))(v2757, 1, v2758))
          {
            v2760 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
            memcpy(v2756, v2757, *(_QWORD *)(*(_QWORD *)(v2760 - 8) + 64));
          }
          else
          {
            *v2756 = *(_OWORD *)v2757;
            v2761 = *(int *)(v2758 + 24);
            v2762 = (char *)v2756 + v2761;
            v2763 = &v2757[v2761];
            v2764 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2764 - 8) + 32))(v2762, v2763, v2764);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v2759 + 56))(v2756, 0, 1, v2758);
          }
          *(_OWORD *)((char *)v2743 + v2737[7]) = *(_OWORD *)&v2736[v2737[7]];
          *(_OWORD *)((char *)v2743 + v2737[8]) = *(_OWORD *)&v2736[v2737[8]];
          *((_BYTE *)v2743 + v2737[9]) = v2736[v2737[9]];
          *((_BYTE *)v2743 + v2737[10]) = v2736[v2737[10]];
          v2765 = v2737[11];
          v2766 = (char *)v2743 + v2765;
          v2767 = &v2736[v2765];
          v2768 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2768 - 8) + 32))(v2766, v2767, v2768);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v2902 + 56))(v2743, 0, 1, v2737);
          v2739 = v2741;
          v15 = v3135;
          v13 = v3028;
          v24 = v3060;
          v14 = v2927;
          v436 = __dste;
        }
        v2769 = *(int *)(v2733 + 24);
        v2770 = v436;
        v2771 = &v436[v2769];
        v2772 = &__srcc[v2769];
        v2773 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2773 - 8) + 32))(v2771, v2772, v2773);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v2904[7])(v2770, 0, 1, v2733);
        v4 = v2739;
      }
      v3214 = v4;
      v2774 = v2987[7];
      v2775 = &v13[v2774];
      v2776 = &v14[v2774];
      v2777 = type metadata accessor for TranscriptProtoStatementID(0);
      v2778 = *(_QWORD *)(v2777 - 8);
      v2779 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v2778 + 48);
      if (v2779(v2776, 1, v2777))
      {
        v2780 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v2775, v2776, *(_QWORD *)(*(_QWORD *)(v2780 - 8) + 64));
      }
      else
      {
        *v2775 = *v2776;
        *(_OWORD *)(v2775 + 2) = *(_OWORD *)(v2776 + 2);
        v2781 = *(int *)(v2777 + 24);
        v2782 = (char *)v2775 + v2781;
        v2783 = (char *)v2776 + v2781;
        v2784 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2784 - 8) + 32))(v2782, v2783, v2784);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2778 + 56))(v2775, 0, 1, v2777);
      }
      v2785 = v2987[8];
      v2786 = &v13[v2785];
      v2787 = &v14[v2785];
      v11 = v3078;
      if (v2779(&v14[v2785], 1, v2777))
      {
        v2788 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v2786, v2787, *(_QWORD *)(*(_QWORD *)(v2788 - 8) + 64));
      }
      else
      {
        *v2786 = *v2787;
        *(_OWORD *)(v2786 + 2) = *(_OWORD *)(v2787 + 2);
        v2789 = *(int *)(v2777 + 24);
        v2790 = (char *)v2786 + v2789;
        v2791 = (char *)v2787 + v2789;
        v2792 = sub_2408E57A4();
        v2793 = v2790;
        v11 = v3078;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2792 - 8) + 32))(v2793, v2791, v2792);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2778 + 56))(v2786, 0, 1, v2777);
      }
      v2794 = v2987[9];
      v2795 = &v13[v2794];
      v2796 = &v14[v2794];
      if (v2779(&v14[v2794], 1, v2777))
      {
        v2797 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v2795, v2796, *(_QWORD *)(*(_QWORD *)(v2797 - 8) + 64));
      }
      else
      {
        *v2795 = *v2796;
        *(_OWORD *)(v2795 + 2) = *(_OWORD *)(v2796 + 2);
        v2798 = *(int *)(v2777 + 24);
        v2799 = (char *)v2795 + v2798;
        v2800 = (char *)v2796 + v2798;
        v2801 = sub_2408E57A4();
        v2802 = v2799;
        v11 = v3078;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2801 - 8) + 32))(v2802, v2800, v2801);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2778 + 56))(v2795, 0, 1, v2777);
      }
      v25 = v3150;
      v3 = v3178;
      v2803 = v2987[10];
      v2804 = &v13[v2803];
      v2805 = &v14[v2803];
      v2806 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2806 - 8) + 32))(v2804, v2805, v2806);
      swift_storeEnumTagMultiPayload();
      v4 = v3214;
      goto LABEL_819;
    case 0x1Eu:
      v3104 = v15;
      v3149 = v25;
      v361 = v24;
      v362 = v11;
      v3196 = v4;
      v277 = v3;
      v441 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v441;
      v363 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
      v442 = *(int *)(v363 + 24);
      v443 = &v13[v442];
      v444 = &v14[v442];
      v445 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
      v446 = *(_QWORD *)(v445 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v446 + 48))(v444, 1, v445))
        goto LABEL_128;
      goto LABEL_323;
    case 0x1Fu:
      v3104 = v15;
      v3149 = v25;
      v361 = v24;
      v362 = v11;
      v3196 = v4;
      v277 = v3;
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
      v363 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
      v447 = *(int *)(v363 + 24);
      v443 = &v13[v447];
      v444 = &v14[v447];
      v445 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
      v446 = *(_QWORD *)(v445 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v446 + 48))(v444, 1, v445))
      {
LABEL_128:
        v448 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
        memcpy(v443, v444, *(_QWORD *)(*(_QWORD *)(v448 - 8) + 64));
      }
      else
      {
LABEL_323:
        *(_OWORD *)v443 = *(_OWORD *)v444;
        v443[2] = v444[2];
        v1080 = *(int *)(v445 + 24);
        v3009 = (char *)v443 + v1080;
        v1081 = (char *)v444 + v1080;
        v1082 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1082 - 8) + 32))(v3009, v1081, v1082);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v446 + 56))(v443, 0, 1, v445);
      }
LABEL_324:
      v11 = v362;
      v1083 = *(int *)(v363 + 28);
      v1084 = &v13[v1083];
      v1085 = &v14[v1083];
      v1086 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1086 - 8) + 32))(v1084, v1085, v1086);
      v24 = v361;
LABEL_325:
      swift_storeEnumTagMultiPayload();
      v3 = v277;
      v4 = v3196;
      goto LABEL_326;
    case 0x20u:
      v3048 = v24;
      v449 = v11;
      v3179 = v3;
      v450 = type metadata accessor for TranscriptProtoRequestContent(0);
      v451 = *(_QWORD *)(v450 - 8);
      v3136 = v25;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v451 + 48))(v14, 1, v450))
      {
        v452 = v4;
        v453 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v453 - 8) + 64));
      }
      else
      {
        v1087 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
        if (!(*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v1087 - 8) + 48))(v14, 1, v1087))
        {
          v1518 = (char *)&loc_240398918 + 4 * word_2408E8878[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v452 = v4;
        v1088 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v1088 - 8) + 64));
        v2302 = *(int *)(v450 + 20);
        v2303 = &v13[v2302];
        v2304 = &v14[v2302];
        v2305 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2305 - 8) + 32))(v2303, v2304, v2305);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v451 + 56))(v13, 0, 1, v450);
      }
      v2306 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
      *(_OWORD *)&v13[v2306[5]] = *(_OWORD *)&v14[v2306[5]];
      v2307 = v2306[6];
      v2308 = &v13[v2307];
      v2309 = &v14[v2307];
      v2310 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
      v2311 = *(_QWORD *)(v2310 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v2311 + 48))(v2309, 1, v2310))
      {
        v2312 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
        memcpy(v2308, v2309, *(_QWORD *)(*(_QWORD *)(v2312 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v2308 = *(_OWORD *)v2309;
        v2308[2] = v2309[2];
        v2313 = *(int *)(v2310 + 24);
        v3129 = (char *)v2308 + v2313;
        v2314 = (char *)v2309 + v2313;
        v2315 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2315 - 8) + 32))(v3129, v2314, v2315);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2311 + 56))(v2308, 0, 1, v2310);
      }
      v11 = v449;
      v2316 = v2306[7];
      v2317 = &v13[v2316];
      v2318 = &v14[v2316];
      v2319 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2319 - 8) + 32))(v2317, v2318, v2319);
      v24 = v3048;
      swift_storeEnumTagMultiPayload();
      v3 = v3179;
      goto LABEL_817;
    case 0x21u:
      v3136 = v25;
      v452 = v4;
      v3049 = v24;
      v3077 = v11;
      v3177 = v3;
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v2988 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
      v454 = *(int *)(v2988 + 20);
      v455 = &v13[v454];
      v456 = &v14[v454];
      v457 = type metadata accessor for TranscriptProtoStatementID(0);
      v458 = *(_QWORD *)(v457 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v458 + 48))(v456, 1, v457))
      {
        v459 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v455, v456, *(_QWORD *)(*(_QWORD *)(v459 - 8) + 64));
      }
      else
      {
        *v455 = *v456;
        *(_OWORD *)(v455 + 2) = *(_OWORD *)(v456 + 2);
        v1089 = *(int *)(v457 + 24);
        v1090 = (char *)v455 + v1089;
        v1091 = (char *)v456 + v1089;
        v1092 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1092 - 8) + 32))(v1090, v1091, v1092);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v458 + 56))(v455, 0, 1, v457);
      }
      v1093 = v2988;
      v1094 = *(int *)(v2988 + 24);
      v1095 = &v13[v1094];
      v1096 = &v14[v1094];
      v1097 = type metadata accessor for TranscriptProtoStatementOutcome(0);
      v1098 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v1097 - 8);
      if (v1098[6](v1096, 1, v1097))
      {
        v1099 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
        memcpy(v1095, v1096, *(_QWORD *)(*(_QWORD *)(v1099 - 8) + 64));
      }
      else
      {
        v1245 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
        __dstg = v1098;
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1245 - 8) + 48))(v1096, 1, v1245))
        {
          v1542 = (char *)&loc_240398C1C + 4 * word_2408E8862[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v1246 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
        memcpy(v1095, v1096, *(_QWORD *)(*(_QWORD *)(v1246 - 8) + 64));
        v2568 = *(int *)(v1097 + 20);
        v2569 = &v1095[v2568];
        v2570 = &v1096[v2568];
        v2571 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2571 - 8) + 32))(v2569, v2570, v2571);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstg[7])(v1095, 0, 1, v1097);
      }
      goto LABEL_815;
    case 0x22u:
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_QWORD *)v13 + 2) = *((_QWORD *)v14 + 2);
      v460 = *(int *)(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0) + 24);
      v461 = &v13[v460];
      v462 = v25;
      v463 = v4;
      v464 = &v14[v460];
      v465 = sub_2408E57A4();
      v466 = v464;
      v4 = v463;
      v25 = v462;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v465 - 8) + 32))(v461, v466, v465);
      swift_storeEnumTagMultiPayload();
      goto LABEL_819;
    case 0x23u:
      v3180 = v3;
      v467 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
      v468 = *(_QWORD *)(v467 - 8);
      v3197 = v4;
      v3050 = v24;
      v3079 = v11;
      v3136 = v25;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v468 + 48))(v14, 1, v467))
      {
        v469 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v469 - 8) + 64));
      }
      else
      {
        v3010 = v468;
        v1100 = *((_OWORD *)v14 + 1);
        *(_OWORD *)v13 = *(_OWORD *)v14;
        *((_OWORD *)v13 + 1) = v1100;
        v13[32] = v14[32];
        *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
        *(_OWORD *)(v13 + 56) = *(_OWORD *)(v14 + 56);
        *((_QWORD *)v13 + 9) = *((_QWORD *)v14 + 9);
        v13[80] = v14[80];
        *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
        *(_OWORD *)(v13 + 104) = *(_OWORD *)(v14 + 104);
        v3115 = (int *)v467;
        v1101 = *(int *)(v467 + 68);
        v1102 = &v13[v1101];
        v1103 = &v14[v1101];
        v1104 = type metadata accessor for ToolKitProtoTypeInstance(0);
        v1105 = *(_QWORD *)(v1104 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1105 + 48))(v1103, 1, v1104))
        {
          v1106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
          memcpy(v1102, v1103, *(_QWORD *)(*(_QWORD *)(v1106 - 8) + 64));
        }
        else
        {
          *v1102 = *v1103;
          v1519 = *(int *)(v1104 + 20);
          v1520 = (char *)v1102 + v1519;
          v1521 = (char *)v1103 + v1519;
          v1522 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1522 - 8) + 32))(v1520, v1521, v1522);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1105 + 56))(v1102, 0, 1, v1104);
        }
        v1523 = v3115;
        *(_OWORD *)&v13[v3115[18]] = *(_OWORD *)&v14[v3115[18]];
        v1524 = v3115[19];
        v1525 = &v13[v1524];
        v1526 = &v14[v1524];
        v1527 = type metadata accessor for ToolKitProtoAppDefinition(0);
        v1528 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v1527 - 8);
        v3024 = v13;
        if (v1528[6](v1526, 1, v1527))
        {
          v1529 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
          memcpy(v1525, v1526, *(_QWORD *)(*(_QWORD *)(v1529 - 8) + 64));
        }
        else
        {
          __dstk = v1528;
          v1639 = v15;
          v1640 = v1526[1];
          *v1525 = *v1526;
          v1525[1] = v1640;
          v1641 = v1526[3];
          v1525[2] = v1526[2];
          v1525[3] = v1641;
          v1525[4] = v1526[4];
          *((_BYTE *)v1525 + 80) = *((_BYTE *)v1526 + 80);
          v1642 = v1527;
          v1643 = *(int *)(v1527 + 40);
          v1644 = (_OWORD *)((char *)v1525 + v1643);
          v1645 = (_OWORD *)((char *)v1526 + v1643);
          v1646 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
          v1647 = *(_QWORD *)(v1646 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1647 + 48))(v1645, 1, v1646))
          {
            v1648 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
            memcpy(v1644, v1645, *(_QWORD *)(*(_QWORD *)(v1648 - 8) + 64));
          }
          else
          {
            *v1644 = *v1645;
            v1840 = *(int *)(v1646 + 20);
            __srcs = (char *)v1644 + v1840;
            v1841 = (char *)v1645 + v1840;
            v1842 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1842 - 8) + 32))(__srcs, v1841, v1842);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1647 + 56))(v1644, 0, 1, v1646);
          }
          v1843 = *(int *)(v1642 + 44);
          v1844 = (char *)v1525 + v1843;
          v1845 = (char *)v1526 + v1843;
          v1846 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1846 - 8) + 32))(v1844, v1845, v1846);
          (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__dstk + 7))(v1525, 0, 1, v1642);
          v15 = v1639;
          v1523 = v3115;
        }
        *(_OWORD *)&v13[v1523[20]] = *(_OWORD *)&v14[v1523[20]];
        v1847 = v1523[21];
        v1848 = &v13[v1847];
        v1849 = &v14[v1847];
        v1850 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
        v1851 = *(_QWORD *)(v1850 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1851 + 48))(v1849, 1, v1850))
        {
          v1852 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
          memcpy(v1848, v1849, *(_QWORD *)(*(_QWORD *)(v1852 - 8) + 64));
        }
        else
        {
          v1853 = v1849[1];
          *v1848 = *v1849;
          v1848[1] = v1853;
          v1854 = *(int *)(v1850 + 24);
          v1855 = (char *)v1848 + v1854;
          v1856 = (char *)v1849 + v1854;
          v1857 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1857 - 8) + 32))(v1855, v1856, v1857);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1851 + 56))(v1848, 0, 1, v1850);
        }
        v1858 = v3115;
        v1859 = v3115[22];
        v1860 = &v13[v1859];
        v1861 = &v14[v1859];
        v1862 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
        v1863 = *(_QWORD *)(v1862 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1863 + 48))(v1861, 1, v1862))
        {
          v1864 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
          memcpy(v1860, v1861, *(_QWORD *)(*(_QWORD *)(v1864 - 8) + 64));
        }
        else
        {
          v1865 = v1863;
          v1866 = v15;
          v1867 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
          v1868 = *(_QWORD *)(v1867 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1868 + 48))(v1861, 1, v1867))
          {
            v1869 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
            memcpy(v1860, v1861, *(_QWORD *)(*(_QWORD *)(v1869 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *v1860 = *v1861;
              *((_BYTE *)v1860 + 16) = *((_BYTE *)v1861 + 16);
              *(_OWORD *)((char *)v1860 + 24) = *(_OWORD *)((char *)v1861 + 24);
              *(_OWORD *)((char *)v1860 + 40) = *(_OWORD *)((char *)v1861 + 40);
              v1878 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                             + 32);
              v2920 = (char *)v1861 + v1878;
              __srct = (char *)v1860 + v1878;
              v1879 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1879 - 8) + 32))(__srct, v2920, v1879);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v1860, v1861, *(_QWORD *)(v1868 + 64));
            }
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1868 + 56))(v1860, 0, 1, v1867);
          }
          v1944 = *(int *)(v1862 + 20);
          v1945 = (char *)v1860 + v1944;
          v1946 = v1860;
          v1947 = (char *)v1861 + v1944;
          v1948 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1948 - 8) + 32))(v1945, v1947, v1948);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1865 + 56))(v1946, 0, 1, v1862);
          v15 = v1866;
          v13 = v3024;
          v1858 = v3115;
        }
        v1949 = v1858[23];
        v1950 = &v13[v1949];
        v1951 = &v14[v1949];
        v1952 = type metadata accessor for ToolKitProtoContainerDefinition(0);
        v1953 = *(_QWORD **)(v1952 - 8);
        __dstp = (unsigned int (*)(_OWORD *, uint64_t, uint64_t))v1953[6];
        if (__dstp(v1951, 1, v1952))
        {
          v1954 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
          memcpy(v1950, v1951, *(_QWORD *)(*(_QWORD *)(v1954 - 8) + 64));
        }
        else
        {
          __srcj = v1953;
          v1955 = v15;
          v1956 = v1951[1];
          *v1950 = *v1951;
          v1950[1] = v1956;
          *((_WORD *)v1950 + 16) = *((_WORD *)v1951 + 16);
          *(_OWORD *)((char *)v1950 + 40) = *(_OWORD *)((char *)v1951 + 40);
          *(_OWORD *)((char *)v1950 + 56) = *(_OWORD *)((char *)v1951 + 56);
          v1957 = v1952;
          v1958 = *(int *)(v1952 + 40);
          v1959 = (_OWORD *)((char *)v1950 + v1958);
          v1960 = (_OWORD *)((char *)v1951 + v1958);
          v1961 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
          v1962 = *(_QWORD *)(v1961 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1962 + 48))(v1960, 1, v1961))
          {
            v1963 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
            memcpy(v1959, v1960, *(_QWORD *)(*(_QWORD *)(v1963 - 8) + 64));
          }
          else
          {
            *v1959 = *v1960;
            v1964 = *(int *)(v1961 + 20);
            v2922 = (char *)v1959 + v1964;
            v1965 = (char *)v1960 + v1964;
            v1966 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1966 - 8) + 32))(v2922, v1965, v1966);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1962 + 56))(v1959, 0, 1, v1961);
          }
          v1967 = *(int *)(v1957 + 44);
          v1968 = (char *)v1950 + v1967;
          v1969 = (char *)v1951 + v1967;
          v1970 = sub_2408E57A4();
          v1971 = v1968;
          v1952 = v1957;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1970 - 8) + 32))(v1971, v1969, v1970);
          v1953 = __srcj;
          ((void (*)(_OWORD *, _QWORD, uint64_t, uint64_t))__srcj[7])(v1950, 0, 1, v1957);
          v15 = v1955;
          v13 = v3024;
          v1858 = v3115;
        }
        v1972 = v1858[24];
        v1973 = &v13[v1972];
        v1974 = &v14[v1972];
        if (__dstp(&v14[v1972], 1, v1952))
        {
          v1975 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
          memcpy(v1973, v1974, *(_QWORD *)(*(_QWORD *)(v1975 - 8) + 64));
        }
        else
        {
          __srck = v1953;
          v1976 = v15;
          v1977 = v1974[1];
          *v1973 = *v1974;
          v1973[1] = v1977;
          *((_WORD *)v1973 + 16) = *((_WORD *)v1974 + 16);
          *(_OWORD *)((char *)v1973 + 40) = *(_OWORD *)((char *)v1974 + 40);
          *(_OWORD *)((char *)v1973 + 56) = *(_OWORD *)((char *)v1974 + 56);
          v1978 = v1952;
          v1979 = *(int *)(v1952 + 40);
          v1980 = (_OWORD *)((char *)v1973 + v1979);
          v1981 = (_OWORD *)((char *)v1974 + v1979);
          v1982 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
          v1983 = *(_QWORD *)(v1982 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v1983 + 48))(v1981, 1, v1982))
          {
            v1984 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
            memcpy(v1980, v1981, *(_QWORD *)(*(_QWORD *)(v1984 - 8) + 64));
          }
          else
          {
            *v1980 = *v1981;
            v1985 = *(int *)(v1982 + 20);
            __dsty = (char *)v1980 + v1985;
            v1986 = (char *)v1981 + v1985;
            v1987 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1987 - 8) + 32))(__dsty, v1986, v1987);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v1983 + 56))(v1980, 0, 1, v1982);
          }
          v1988 = *(int *)(v1978 + 44);
          v1989 = (char *)v1973 + v1988;
          v1990 = (char *)v1974 + v1988;
          v1991 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1991 - 8) + 32))(v1989, v1990, v1991);
          (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__srck + 7))(v1973, 0, 1, v1978);
          v15 = v1976;
          v1858 = v3115;
        }
        v1992 = v1858[25];
        v1993 = &v13[v1992];
        v1994 = &v14[v1992];
        v1995 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1995 - 8) + 32))(v1993, v1994, v1995);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v3010 + 56))(v13, 0, 1, v1858);
      }
      v1996 = type metadata accessor for TranscriptProtoToolResolution(0);
      v1997 = *(int *)(v1996 + 20);
      v1998 = &v13[v1997];
      v1999 = &v14[v1997];
      v2000 = type metadata accessor for TranscriptProtoStatementID(0);
      v2001 = *(_QWORD *)(v2000 - 8);
      v2002 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v2001 + 48);
      if (v2002(v1999, 1, v2000))
      {
        v2003 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v1998, v1999, *(_QWORD *)(*(_QWORD *)(v2003 - 8) + 64));
      }
      else
      {
        *v1998 = *v1999;
        *(_OWORD *)(v1998 + 2) = *(_OWORD *)(v1999 + 2);
        v2004 = *(int *)(v2000 + 24);
        v2005 = v1996;
        v2006 = (char *)v1998 + v2004;
        v2007 = (char *)v1999 + v2004;
        v2008 = sub_2408E57A4();
        v2009 = v2006;
        v1996 = v2005;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2008 - 8) + 32))(v2009, v2007, v2008);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2001 + 56))(v1998, 0, 1, v2000);
      }
      v2010 = v1996;
      v2011 = *(int *)(v1996 + 24);
      v2012 = &v13[v2011];
      v2013 = &v14[v2011];
      v3 = v3180;
      if (v2002(&v14[v2011], 1, v2000))
      {
        v2014 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v2012, v2013, *(_QWORD *)(*(_QWORD *)(v2014 - 8) + 64));
      }
      else
      {
        *v2012 = *v2013;
        *(_OWORD *)(v2012 + 2) = *(_OWORD *)(v2013 + 2);
        v2015 = *(int *)(v2000 + 24);
        v2016 = (char *)v2012 + v2015;
        v2017 = (char *)v2013 + v2015;
        v2018 = sub_2408E57A4();
        v2019 = v2016;
        v3 = v3180;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2018 - 8) + 32))(v2019, v2017, v2018);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v2001 + 56))(v2012, 0, 1, v2000);
      }
      v24 = v3050;
      v11 = v3079;
      v2020 = *(int *)(v2010 + 28);
      v2021 = &v13[v2020];
      v2022 = &v14[v2020];
      v2023 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2023 - 8) + 32))(v2021, v2022, v2023);
      swift_storeEnumTagMultiPayload();
LABEL_735:
      v4 = v3197;
      goto LABEL_818;
    case 0x24u:
      v3136 = v25;
      v3051 = v24;
      v3107 = v15;
      v3080 = v11;
      v3198 = v4;
      v470 = v3;
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v13[16] = v14[16];
      *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
      v471 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
      v472 = *(int *)(v471 + 28);
      v473 = &v13[v472];
      v474 = &v14[v472];
      v475 = type metadata accessor for TranscriptProtoStatementID(0);
      v476 = *(_QWORD *)(v475 - 8);
      v477 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v476 + 48);
      if (v477(v474, 1, v475))
      {
        v478 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v473, v474, *(_QWORD *)(*(_QWORD *)(v478 - 8) + 64));
      }
      else
      {
        *v473 = *v474;
        *(_OWORD *)(v473 + 2) = *(_OWORD *)(v474 + 2);
        v1107 = *(int *)(v475 + 24);
        v1108 = v471;
        v1109 = (char *)v473 + v1107;
        v1110 = (char *)v474 + v1107;
        v1111 = sub_2408E57A4();
        v1112 = v1109;
        v471 = v1108;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1111 - 8) + 32))(v1112, v1110, v1111);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v476 + 56))(v473, 0, 1, v475);
      }
      v1113 = v471;
      v1114 = *(int *)(v471 + 32);
      v1115 = &v13[v1114];
      v1116 = &v14[v1114];
      if (v477(&v14[v1114], 1, v475))
      {
        v3 = v470;
        v1117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v1115, v1116, *(_QWORD *)(*(_QWORD *)(v1117 - 8) + 64));
      }
      else
      {
        *v1115 = *v1116;
        *(_OWORD *)(v1115 + 2) = *(_OWORD *)(v1116 + 2);
        v1247 = *(int *)(v475 + 24);
        v1248 = (char *)v1115 + v1247;
        v1249 = (char *)v1116 + v1247;
        v1250 = sub_2408E57A4();
        v1251 = v1248;
        v3 = v470;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1250 - 8) + 32))(v1251, v1249, v1250);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v476 + 56))(v1115, 0, 1, v475);
      }
      v452 = v3198;
      v24 = v3051;
      v11 = v3080;
      v15 = v3107;
      v1252 = *(int *)(v1113 + 36);
      v1253 = &v13[v1252];
      v1254 = &v14[v1252];
      v1255 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1255 - 8) + 32))(v1253, v1254, v1255);
      goto LABEL_386;
    case 0x25u:
      v3136 = v25;
      v3052 = v24;
      v3108 = v15;
      v3081 = v11;
      v3199 = v4;
      v479 = v3;
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v13[16] = v14[16];
      v480 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
      v481 = *(int *)(v480 + 24);
      v482 = &v13[v481];
      v483 = &v14[v481];
      v484 = type metadata accessor for TranscriptProtoStatementID(0);
      v485 = *(_QWORD *)(v484 - 8);
      v486 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v485 + 48);
      if (v486(v483, 1, v484))
      {
        v487 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v482, v483, *(_QWORD *)(*(_QWORD *)(v487 - 8) + 64));
      }
      else
      {
        *v482 = *v483;
        *(_OWORD *)(v482 + 2) = *(_OWORD *)(v483 + 2);
        v1118 = *(int *)(v484 + 24);
        v1119 = v480;
        v1120 = (char *)v482 + v1118;
        v1121 = (char *)v483 + v1118;
        v1122 = sub_2408E57A4();
        v1123 = v1120;
        v480 = v1119;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1122 - 8) + 32))(v1123, v1121, v1122);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v485 + 56))(v482, 0, 1, v484);
      }
      v1124 = v480;
      v1125 = *(int *)(v480 + 28);
      v1126 = &v13[v1125];
      v1127 = &v14[v1125];
      if (v486(&v14[v1125], 1, v484))
      {
        v3 = v479;
        v1128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v1126, v1127, *(_QWORD *)(*(_QWORD *)(v1128 - 8) + 64));
      }
      else
      {
        *v1126 = *v1127;
        *(_OWORD *)(v1126 + 2) = *(_OWORD *)(v1127 + 2);
        v1256 = *(int *)(v484 + 24);
        v1257 = (char *)v1126 + v1256;
        v1258 = (char *)v1127 + v1256;
        v1259 = sub_2408E57A4();
        v1260 = v1257;
        v3 = v479;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1259 - 8) + 32))(v1260, v1258, v1259);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v485 + 56))(v1126, 0, 1, v484);
      }
      v452 = v3199;
      v24 = v3052;
      v11 = v3081;
      v15 = v3108;
      v1261 = *(int *)(v1124 + 32);
      v1262 = &v13[v1261];
      v1263 = &v14[v1261];
      v1264 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1264 - 8) + 32))(v1262, v1263, v1264);
LABEL_386:
      swift_storeEnumTagMultiPayload();
      goto LABEL_817;
    case 0x26u:
      v3136 = v25;
      v452 = v4;
      v3053 = v24;
      v488 = type metadata accessor for ToolKitProtoTypedValue(0);
      v489 = *(_QWORD *)(v488 - 8);
      v3077 = v11;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v489 + 48))(v14, 1, v488))
      {
        v490 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v490 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v1129 = *(int *)(v488 + 20);
        v1130 = &v13[v1129];
        v1131 = v15;
        v1132 = v3;
        v1133 = &v14[v1129];
        v1134 = sub_2408E57A4();
        v1135 = v1133;
        v3 = v1132;
        v15 = v1131;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1134 - 8) + 32))(v1130, v1135, v1134);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v489 + 56))(v13, 0, 1, v488);
      }
      v3177 = v3;
      v1136 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
      v1137 = *(int *)(v1136 + 20);
      v1138 = &v13[v1137];
      v1139 = &v14[v1137];
      v1140 = type metadata accessor for ToolKitProtoTypeInstance(0);
      v1141 = *(_QWORD *)(v1140 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v1141 + 48))(v1139, 1, v1140))
      {
        v1142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
        memcpy(v1138, v1139, *(_QWORD *)(*(_QWORD *)(v1142 - 8) + 64));
      }
      else
      {
        *v1138 = *v1139;
        v1265 = *(int *)(v1140 + 20);
        v1266 = (char *)v1138 + v1265;
        v1267 = (char *)v1139 + v1265;
        v1268 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1268 - 8) + 32))(v1266, v1267, v1268);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v1141 + 56))(v1138, 0, 1, v1140);
      }
      v1269 = v1136;
      v1270 = *(int *)(v1136 + 24);
      v1271 = &v13[v1270];
      v1272 = &v14[v1270];
      v1273 = type metadata accessor for TranscriptProtoStatementID(0);
      v1274 = *(_QWORD *)(v1273 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1274 + 48))(v1272, 1, v1273))
      {
        v1275 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v1271, v1272, *(_QWORD *)(*(_QWORD *)(v1275 - 8) + 64));
      }
      else
      {
        *v1271 = *v1272;
        *(_OWORD *)(v1271 + 2) = *(_OWORD *)(v1272 + 2);
        v1296 = *(int *)(v1273 + 24);
        v1297 = (char *)v1271 + v1296;
        v1298 = (char *)v1272 + v1296;
        v1299 = sub_2408E57A4();
        v1300 = v1297;
        v1269 = v1136;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1299 - 8) + 32))(v1300, v1298, v1299);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1274 + 56))(v1271, 0, 1, v1273);
      }
      v1301 = *(int *)(v1269 + 28);
      v1302 = &v13[v1301];
      v1303 = &v14[v1301];
      v1304 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1304 - 8) + 32))(v1302, v1303, v1304);
      v24 = v3053;
      goto LABEL_816;
    case 0x27u:
      v3109 = v15;
      v3151 = v25;
      v491 = v3;
      v492 = type metadata accessor for ToolKitProtoTypedValue(0);
      v493 = *(_QWORD *)(v492 - 8);
      v3054 = v24;
      v3082 = v11;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v493 + 48))(v14, 1, v492))
      {
        v494 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v494 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v1143 = *(int *)(v492 + 20);
        v1144 = v4;
        v1145 = &v13[v1143];
        v1146 = &v14[v1143];
        v1147 = sub_2408E57A4();
        v1148 = v1145;
        v4 = v1144;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1147 - 8) + 32))(v1148, v1146, v1147);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v493 + 56))(v13, 0, 1, v492);
      }
      v3205 = v4;
      v1149 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
      v1150 = *(int *)(v1149 + 20);
      v1151 = &v13[v1150];
      v1152 = &v14[v1150];
      v1153 = type metadata accessor for TranscriptProtoStatementID(0);
      v1154 = *(_QWORD *)(v1153 - 8);
      v1155 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v1154 + 48);
      if (v1155(v1152, 1, v1153))
      {
        v1156 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v1151, v1152, *(_QWORD *)(*(_QWORD *)(v1156 - 8) + 64));
      }
      else
      {
        *v1151 = *v1152;
        *(_OWORD *)(v1151 + 2) = *(_OWORD *)(v1152 + 2);
        v1276 = *(int *)(v1153 + 24);
        v1277 = v1149;
        v1278 = (char *)v1151 + v1276;
        v1279 = (char *)v1152 + v1276;
        v1280 = sub_2408E57A4();
        v1281 = v1278;
        v1149 = v1277;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1280 - 8) + 32))(v1281, v1279, v1280);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1154 + 56))(v1151, 0, 1, v1153);
      }
      v1282 = v1149;
      v1283 = *(int *)(v1149 + 24);
      v1284 = &v13[v1283];
      v1285 = &v14[v1283];
      if (v1155(&v14[v1283], 1, v1153))
      {
        v3 = v491;
        v1286 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v1284, v1285, *(_QWORD *)(*(_QWORD *)(v1286 - 8) + 64));
      }
      else
      {
        *v1284 = *v1285;
        *(_OWORD *)(v1284 + 2) = *(_OWORD *)(v1285 + 2);
        v1305 = *(int *)(v1153 + 24);
        v1306 = (char *)v1284 + v1305;
        v1307 = (char *)v1285 + v1305;
        v1308 = sub_2408E57A4();
        v1309 = v1306;
        v3 = v491;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1308 - 8) + 32))(v1309, v1307, v1308);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1154 + 56))(v1284, 0, 1, v1153);
      }
      v24 = v3054;
      v11 = v3082;
      v25 = v3151;
      v1310 = *(int *)(v1282 + 28);
      v1311 = &v13[v1310];
      v1312 = &v14[v1310];
      v1313 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1313 - 8) + 32))(v1311, v1312, v1313);
      swift_storeEnumTagMultiPayload();
      v15 = v3109;
      v4 = v3205;
      goto LABEL_819;
    case 0x28u:
      v3104 = v15;
      v3149 = v25;
      v495 = v24;
      v3083 = v11;
      v3200 = v4;
      v496 = v3;
      v497 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v497;
      v498 = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
      v499 = *(int *)(v498 + 32);
      v500 = &v13[v499];
      v501 = &v14[v499];
      v502 = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
      v503 = *(_QWORD *)(v502 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v503 + 48))(v501, 1, v502))
      {
        v504 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
        memcpy(v500, v501, *(_QWORD *)(*(_QWORD *)(v504 - 8) + 64));
      }
      else
      {
        v1157 = v501[1];
        *v500 = *v501;
        v500[1] = v1157;
        *((_DWORD *)v500 + 8) = *((_DWORD *)v501 + 8);
        *(_OWORD *)((char *)v500 + 40) = *(_OWORD *)((char *)v501 + 40);
        v1158 = *(int *)(v502 + 36);
        v1159 = (char *)v500 + v1158;
        v1160 = (char *)v501 + v1158;
        v1161 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1161 - 8) + 32))(v1159, v1160, v1161);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v503 + 56))(v500, 0, 1, v502);
      }
      v1162 = *(int *)(v498 + 36);
      v1163 = &v13[v1162];
      v1164 = &v14[v1162];
      v1165 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v1165 - 8) + 32))(v1163, v1164, v1165);
      v24 = v495;
      swift_storeEnumTagMultiPayload();
      v3 = v496;
      v4 = v3200;
      v11 = v3083;
LABEL_326:
      v15 = v3104;
      v25 = v3149;
      goto LABEL_819;
    case 0x2Au:
      v3136 = v25;
      v452 = v4;
      v3049 = v24;
      v3077 = v11;
      v3177 = v3;
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v505 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
      v506 = *(int *)(v505 + 20);
      v507 = &v13[v506];
      v508 = &v14[v506];
      v509 = type metadata accessor for TranscriptProtoStatementID(0);
      v510 = *(_QWORD *)(v509 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v510 + 48))(v508, 1, v509))
      {
        v511 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v507, v508, *(_QWORD *)(*(_QWORD *)(v511 - 8) + 64));
      }
      else
      {
        *v507 = *v508;
        *(_OWORD *)(v507 + 2) = *(_OWORD *)(v508 + 2);
        v1166 = *(int *)(v509 + 24);
        v1167 = (char *)v507 + v1166;
        v1168 = (char *)v508 + v1166;
        v1169 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v1169 - 8) + 32))(v1167, v1168, v1169);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v510 + 56))(v507, 0, 1, v509);
      }
      v1093 = v505;
      v1170 = *(int *)(v505 + 24);
      v1171 = &v13[v1170];
      v1172 = &v14[v1170];
      v1173 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
      v1174 = *(_QWORD *)(v1173 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1174 + 48))(v1172, 1, v1173))
      {
        v1175 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
        memcpy(v1171, v1172, *(_QWORD *)(*(_QWORD *)(v1175 - 8) + 64));
      }
      else
      {
        v3116 = v1174;
        v1287 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1287 - 8) + 48))(v1172, 1, v1287))
        {
          v1543 = (char *)&loc_240398CC8 + 4 * word_2408E8856[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v1288 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
        memcpy(v1171, v1172, *(_QWORD *)(*(_QWORD *)(v1288 - 8) + 64));
        v2024 = *(int *)(v1173 + 20);
        v2025 = &v1171[v2024];
        v2026 = v1171;
        v2027 = &v1172[v2024];
        v2028 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2028 - 8) + 32))(v2025, v2027, v2028);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3116 + 56))(v2026, 0, 1, v1173);
      }
LABEL_815:
      v2572 = *(int *)(v1093 + 28);
      v2573 = &v13[v2572];
      v2574 = &v14[v2572];
      v2575 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2575 - 8) + 32))(v2573, v2574, v2575);
      v24 = v3049;
LABEL_816:
      swift_storeEnumTagMultiPayload();
      v3 = v3177;
      v11 = v3077;
LABEL_817:
      v4 = v452;
      goto LABEL_818;
    default:
      memcpy(v13, v14, *(_QWORD *)(v25 + 64));
      goto LABEL_819;
  }
LABEL_820:
  v2576 = *(int *)(v15 + 20);
  v2577 = &v13[v2576];
  v2578 = &v14[v2576];
  v2579 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v2579 - 8) + 40))(v2577, v2578, v2579);
LABEL_821:
  v2580 = v11[12];
  v2581 = (_QWORD *)((char *)v4 + v2580);
  v2582 = (_QWORD *)((char *)v3 + v2580);
  v2584 = *v2582;
  v2583 = v2582[1];
  *v2581 = v2584;
  v2581[1] = v2583;
  swift_bridgeObjectRelease();
  v2585 = v11;
  v2586 = v11[13];
  v2587 = (_QWORD *)((char *)v4 + v2586);
  v2588 = (_QWORD *)((char *)v3 + v2586);
  v2589 = type metadata accessor for TranscriptProtoTimepoint(0);
  v2590 = *(_QWORD *)(v2589 - 8);
  v2591 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v2590 + 48);
  v2592 = v2591(v2587, 1, v2589);
  v2593 = v2591(v2588, 1, v2589);
  if (v2592)
  {
    if (!v2593)
    {
      v3212 = v4;
      v2594 = v3;
      v2595 = *((_OWORD *)v2588 + 1);
      *(_OWORD *)v2587 = *(_OWORD *)v2588;
      *((_OWORD *)v2587 + 1) = v2595;
      v2596 = *(int *)(v2589 + 28);
      v2597 = (char *)v2587 + v2596;
      v2598 = (char *)v2588 + v2596;
      v2599 = sub_2408E5750();
      v2600 = *(_QWORD *)(v2599 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2600 + 48))(v2598, 1, v2599))
      {
        v2601 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
        memcpy(v2597, v2598, *(_QWORD *)(*(_QWORD *)(v2601 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v2600 + 32))(v2597, v2598, v2599);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2600 + 56))(v2597, 0, 1, v2599);
      }
      v3 = v2594;
      v2612 = *(int *)(v2589 + 32);
      v2613 = (char *)v2587 + v2612;
      v2614 = (char *)v2588 + v2612;
      v2615 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2615 - 8) + 32))(v2613, v2614, v2615);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2590 + 56))(v2587, 0, 1, v2589);
      v4 = v3212;
      goto LABEL_833;
    }
LABEL_827:
    v2602 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
    memcpy(v2587, v2588, *(_QWORD *)(*(_QWORD *)(v2602 - 8) + 64));
LABEL_833:
    v2616 = v2585;
    goto LABEL_834;
  }
  if (v2593)
  {
    sub_240388AE4((uint64_t)v2587, type metadata accessor for TranscriptProtoTimepoint);
    goto LABEL_827;
  }
  v3190 = v3;
  v3213 = v4;
  *(_OWORD *)v2587 = *(_OWORD *)v2588;
  v2603 = v2588[3];
  v2587[2] = v2588[2];
  v2587[3] = v2603;
  swift_bridgeObjectRelease();
  v2604 = *(int *)(v2589 + 28);
  v2605 = (char *)v2587 + v2604;
  v2606 = (char *)v2588 + v2604;
  v2607 = sub_2408E5750();
  v2608 = *(_QWORD *)(v2607 - 8);
  v2609 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2608 + 48);
  v2610 = v2609(v2605, 1, v2607);
  v2611 = v2609(v2606, 1, v2607);
  if (!v2610)
  {
    if (!v2611)
    {
      (*(void (**)(char *, char *, uint64_t))(v2608 + 40))(v2605, v2606, v2607);
      goto LABEL_859;
    }
    (*(void (**)(char *, uint64_t))(v2608 + 8))(v2605, v2607);
    goto LABEL_858;
  }
  if (v2611)
  {
LABEL_858:
    v2669 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
    memcpy(v2605, v2606, *(_QWORD *)(*(_QWORD *)(v2669 - 8) + 64));
    goto LABEL_859;
  }
  (*(void (**)(char *, char *, uint64_t))(v2608 + 32))(v2605, v2606, v2607);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2608 + 56))(v2605, 0, 1, v2607);
LABEL_859:
  v2616 = v2585;
  v2670 = *(int *)(v2589 + 32);
  v2671 = (char *)v2587 + v2670;
  v2672 = (char *)v2588 + v2670;
  v2673 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2673 - 8) + 40))(v2671, v2672, v2673);
  v3 = v3190;
  v4 = v3213;
LABEL_834:
  v2617 = v2616[14];
  v2618 = (char *)v4 + v2617;
  v2619 = (char *)v3 + v2617;
  v2620 = sub_2408E5750();
  v2621 = *(_QWORD *)(v2620 - 8);
  v2622 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v2621 + 48);
  v2623 = v2622(v2618, 1, v2620);
  v2624 = v2622(v2619, 1, v2620);
  if (v2623)
  {
    if (!v2624)
    {
      (*(void (**)(char *, char *, uint64_t))(v2621 + 32))(v2618, v2619, v2620);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2621 + 56))(v2618, 0, 1, v2620);
      goto LABEL_840;
    }
    goto LABEL_839;
  }
  if (v2624)
  {
    (*(void (**)(char *, uint64_t))(v2621 + 8))(v2618, v2620);
LABEL_839:
    v2625 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
    memcpy(v2618, v2619, *(_QWORD *)(*(_QWORD *)(v2625 - 8) + 64));
    goto LABEL_840;
  }
  (*(void (**)(char *, char *, uint64_t))(v2621 + 40))(v2618, v2619, v2620);
LABEL_840:
  v2626 = v2616[15];
  v2627 = v4;
  v2628 = (_QWORD *)((char *)v4 + v2626);
  v2629 = (_QWORD *)((char *)v3 + v2626);
  v2630 = type metadata accessor for TranscriptProtoParticipantID(0);
  v2631 = *(_QWORD *)(v2630 - 8);
  v2632 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v2631 + 48);
  v2633 = v2632(v2628, 1, v2630);
  v2634 = v2632(v2629, 1, v2630);
  if (v2633)
  {
    if (!v2634)
    {
      *(_OWORD *)v2628 = *(_OWORD *)v2629;
      v2635 = *(int *)(v2630 + 20);
      v2636 = (char *)v2628 + v2635;
      v2637 = (char *)v2629 + v2635;
      v2638 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2638 - 8) + 32))(v2636, v2637, v2638);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2631 + 56))(v2628, 0, 1, v2630);
      goto LABEL_846;
    }
    goto LABEL_845;
  }
  if (v2634)
  {
    sub_240388AE4((uint64_t)v2628, type metadata accessor for TranscriptProtoParticipantID);
LABEL_845:
    v2639 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
    memcpy(v2628, v2629, *(_QWORD *)(*(_QWORD *)(v2639 - 8) + 64));
    goto LABEL_846;
  }
  v2660 = v2629[1];
  *v2628 = *v2629;
  v2628[1] = v2660;
  swift_bridgeObjectRelease();
  v2661 = *(int *)(v2630 + 20);
  v2662 = (char *)v2628 + v2661;
  v2663 = (char *)v2629 + v2661;
  v2664 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2664 - 8) + 40))(v2662, v2663, v2664);
LABEL_846:
  v2640 = v2616[16];
  v2641 = (_QWORD *)((char *)v2627 + v2640);
  v2642 = (_QWORD *)((char *)v3 + v2640);
  v2643 = type metadata accessor for TranscriptProtoSpanID(0);
  v2644 = *(_QWORD *)(v2643 - 8);
  v2645 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v2644 + 48);
  v2646 = v2645(v2641, 1, v2643);
  v2647 = v2645(v2642, 1, v2643);
  if (!v2646)
  {
    if (!v2647)
    {
      *v2641 = *v2642;
      v2665 = *(int *)(v2643 + 20);
      v2666 = (char *)v2641 + v2665;
      v2667 = (char *)v2642 + v2665;
      v2668 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2668 - 8) + 40))(v2666, v2667, v2668);
      goto LABEL_852;
    }
    sub_240388AE4((uint64_t)v2641, type metadata accessor for TranscriptProtoSpanID);
    goto LABEL_851;
  }
  if (v2647)
  {
LABEL_851:
    v2652 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
    memcpy(v2641, v2642, *(_QWORD *)(*(_QWORD *)(v2652 - 8) + 64));
    goto LABEL_852;
  }
  *v2641 = *v2642;
  v2648 = *(int *)(v2643 + 20);
  v2649 = (char *)v2641 + v2648;
  v2650 = (char *)v2642 + v2648;
  v2651 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2651 - 8) + 32))(v2649, v2650, v2651);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2644 + 56))(v2641, 0, 1, v2643);
LABEL_852:
  v2653 = v2616[17];
  v2654 = (char *)v2627 + v2653;
  v2655 = (char *)v3 + v2653;
  v2656 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2656 - 8) + 40))(v2654, v2655, v2656);
  v2657 = *(int *)(a3 + 20);
  v2658 = *(void **)((char *)v2627 + v2657);
  *(_QWORD *)((char *)v2627 + v2657) = *(_QWORD *)((char *)v3 + v2657);

  return v2627;
}

uint64_t getEnumTagSinglePayload for IETranscriptEventWrapper()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403A839C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for TranscriptProtoEvent(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for IETranscriptEventWrapper()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403A8430(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for TranscriptProtoEvent(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_2403A84A8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TranscriptProtoEvent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2403A8518(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA640);
  v2 = sub_2408E605C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2403A9210(v6, (uint64_t)&v15, &qword_256FFA648);
    v7 = v15;
    v8 = v16;
    result = sub_240509E28(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_2403A9254(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2403A864C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA638);
  v2 = (_QWORD *)sub_2408E605C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_240509E28(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2403A8764(uint64_t a1)
{
  return sub_2403A878C(a1, &qword_256FFA630, (uint64_t (*)(uint64_t))sub_240509EC0);
}

unint64_t sub_2403A8778(uint64_t a1)
{
  return sub_2403A878C(a1, &qword_256FFA628, (uint64_t (*)(uint64_t))sub_240509ECC);
}

unint64_t sub_2403A878C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = (_QWORD *)sub_2408E605C();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v8 = *(v7 - 1);
    v9 = *v7;
    v10 = swift_retain();
    result = a3(v10);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = 8 * result;
    *(_QWORD *)(v5[6] + v13) = v8;
    *(_QWORD *)(v5[7] + v13) = v9;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2403A8894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA558);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA560);
  v6 = sub_2408E605C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2403A9210(v12, (uint64_t)v5, &qword_256FFA558);
    result = sub_240509F84((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_2408E5AB0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
    result = sub_2403A91CC(v9, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2403A8A4C(uint64_t a1)
{
  return sub_2403A8A84(a1, &qword_256FFA608, &qword_256FFA610, type metadata accessor for TranscriptProtoActionParameterValue);
}

unint64_t sub_2403A8A68(uint64_t a1)
{
  return sub_2403A8A84(a1, &qword_256FFA5F8, &qword_256FFA600, type metadata accessor for TranscriptProtoParameterValue);
}

unint64_t sub_2403A8A84(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t *v31;

  v31 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (_QWORD *)((char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_2408E605C();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = (uint64_t)v10 + *(int *)(v7 + 48);
  v29[1] = a1;
  v30 = v14;
  v15 = v11 + 64;
  v16 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v17 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_2403A9210(v16, (uint64_t)v10, v31);
    v18 = *v10;
    v19 = v10[1];
    result = sub_240509E28(*v10, v19);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v23 = (uint64_t *)(v12[6] + 16 * result);
    *v23 = v18;
    v23[1] = v19;
    v24 = v12[7];
    v25 = a4(0);
    result = sub_2403A91CC(v30, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v22, a4);
    v26 = v12[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v12[2] = v28;
    v16 += v17;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2403A8C1C(uint64_t a1)
{
  return sub_2403A8A84(a1, &qword_256FFA5E8, &qword_256FFA5F0, type metadata accessor for ToolKitProtoTypedValue);
}

unint64_t sub_2403A8C38(uint64_t a1)
{
  return sub_2403A8A84(a1, &qword_256FFA5D8, &qword_256FFA5E0, type metadata accessor for TranscriptProtoShimParameterResolution);
}

unint64_t sub_2403A8C54(uint64_t a1)
{
  return sub_2403A8A84(a1, &qword_256FFA5B8, &qword_256FFA5C0, type metadata accessor for TranscriptProtoASTFlatValue);
}

unint64_t sub_2403A8C70(uint64_t a1)
{
  return sub_2403A8A84(a1, &qword_256FFA5A8, &qword_256FFA5B0, type metadata accessor for TranscriptProtoStatementID);
}

unint64_t sub_2403A8C8C(uint64_t a1)
{
  return sub_2403A8A84(a1, &qword_256FFA598, &qword_256FFA5A0, type metadata accessor for TranscriptProtoASTExpr);
}

unint64_t sub_2403A8CA8(uint64_t a1)
{
  return sub_2403A8A84(a1, &qword_256FFA588, &qword_256FFA590, type metadata accessor for TranscriptProtoASTUpdateExpr);
}

unint64_t sub_2403A8CC4(uint64_t a1)
{
  return sub_2403A8A84(a1, &qword_256FFA548, &qword_256FFA550, type metadata accessor for RequestData);
}

unint64_t sub_2403A8CE0(uint64_t a1)
{
  return sub_2403A8A84(a1, &qword_256FFA568, &qword_256FFA570, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
}

unint64_t sub_2403A8CFC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA620);
  v3 = (_QWORD *)sub_2408E605C();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_240509F54(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_bridgeObjectRetain();
    result = sub_240509F54(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2403A8DF8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA618);
  v3 = (_QWORD *)sub_2408E605C();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_240509F54(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_240509F54(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2403A8EF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA5C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (unsigned int *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA5D0);
    v7 = (_QWORD *)sub_2408E605C();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_2403A9210(v9, (uint64_t)v5, &qword_256FFA5C8);
      v11 = *v5;
      result = sub_240509E8C(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v7[6] + 4 * result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for ToolKitProtoTypedValue(0);
      result = sub_2403A91CC(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, type metadata accessor for ToolKitProtoTypedValue);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_2403A9060(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA578);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA580);
    v7 = (_QWORD *)sub_2408E605C();
    v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_2403A9210(v9, (uint64_t)v5, &qword_256FFA578);
      v11 = *v5;
      result = sub_240509F54(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = type metadata accessor for ParticipantInfo(0);
      result = sub_2403A91CC(v8, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, type metadata accessor for ParticipantInfo);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

uint64_t sub_2403A91CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2403A9210(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_OWORD *sub_2403A9254(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void *sub_2403A9264(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unsigned int (*v22)(unsigned int *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v40;
  char v41;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (unsigned int *)((char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v7 = (unsigned int *)((char *)&v40 - v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA658);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
  v12 = *((_QWORD *)v11 - 1);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v10, &qword_256FFA658);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2403A97FC((uint64_t)v10, &qword_256FFA658);
    return 0;
  }
  sub_2403A97A0((uint64_t)v10, (uint64_t)v14);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FE8]), sel_init);
  if (!v15)
  {
    if (qword_254355DF0 != -1)
      swift_once();
    v18 = sub_2408E5C48();
    __swift_project_value_buffer(v18, (uint64_t)qword_254356428);
    v41 = 96;
    sub_2408B4A24(0xD00000000000004BLL, 0x8000000240921740, &v41);
    sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoStatementResult);
    return 0;
  }
  v16 = v15;
  objc_msgSend(v15, sel_setExists_, 1);
  if (*((_QWORD *)v14 + 3))
  {
    swift_bridgeObjectRetain();
    v17 = (void *)sub_2408E5CE4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0;
  }
  objc_msgSend(v16, sel_setToolId_, v17);

  v19 = (uint64_t)&v14[v11[7]];
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FD8]), sel_init);
  sub_2403A9210(v19, (uint64_t)v7, &qword_256FFA300);
  v21 = type metadata accessor for TranscriptProtoStatementID(0);
  v22 = *(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
  if (v22(v7, 1, v21) == 1)
  {
    sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  }
  else
  {
    v23 = *v7;
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    objc_msgSend(v20, sel_setIndex_, v23);
  }
  objc_msgSend(v16, sel_setResultStatementId_, v20);

  v24 = (uint64_t)&v14[v11[8]];
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FD8]), sel_init);
  sub_2403A9210(v24, (uint64_t)v5, &qword_256FFA300);
  if (v22(v5, 1, v21) == 1)
  {
    sub_2403A97FC((uint64_t)v5, &qword_256FFA300);
  }
  else
  {
    v26 = *v5;
    sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoStatementID);
    objc_msgSend(v25, sel_setIndex_, v26);
  }
  objc_msgSend(v16, sel_setOriginProgramStatementId_, v25);

  v27 = sub_2408E566C();
  v40 = (uint64_t)&v40;
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v40 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v40 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  sub_24041DE64(v34, 4u, (uint64_t)v33);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v33, 1, v27) == 1)
  {
    sub_2403A97FC((uint64_t)v33, &qword_256FFA660);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v30, v33, v27);
    v35 = objc_allocWithZone(MEMORY[0x24BE95C78]);
    v36 = (void *)sub_2408E5648();
    v37 = objc_msgSend(v35, sel_initWithNSUUID_, v36);

    objc_msgSend(v16, sel_setActionEventId_, v37);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  }
  v38 = sub_24050D740((uint64_t)&v14[v11[6]]);
  objc_msgSend(v16, sel_setPayload_, v38);

  sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoStatementResult);
  return v16;
}

uint64_t sub_2403A97A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoStatementResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_2403A97FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t ExecutionGrainLatency.description.getter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = ExecutionGrainLatency.dictionary.getter();
  v1 = sub_2403AEB7C(v0, 1);
  v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
    return v1;
  else
    return 0xD00000000000002ALL;
}

unint64_t ExecutionGrainLatency.dictionary.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  id v30;
  unint64_t v31;
  id v32;
  id v33;
  unint64_t v34;
  char v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  unint64_t v45;
  char v46;
  id v47;
  unint64_t v48;
  char v49;
  id v50;
  unint64_t v51;
  char v52;
  id v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  unint64_t v57;
  char v58;
  id v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  unint64_t v80;
  unint64_t v81;

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v61 = v0[6];
  v62 = v0[14];
  v66 = v0[7];
  v67 = v0[15];
  v68 = v0[17];
  v8 = v0[21];
  v7 = v0[22];
  v63 = v0[16];
  v64 = v0[23];
  v65 = v0[24];
  v9 = v0[25];
  v10 = v0[27];
  v69 = *((_BYTE *)v0 + 208);
  v70 = *((_BYTE *)v0 + 224);
  v11 = v0[29];
  v12 = v0[31];
  v71 = *((_BYTE *)v0 + 240);
  v72 = *((_BYTE *)v0 + 256);
  v13 = v0[33];
  v14 = v0[35];
  v73 = *((_BYTE *)v0 + 272);
  v74 = *((_BYTE *)v0 + 288);
  v15 = v0[37];
  v75 = *((_BYTE *)v0 + 304);
  v76 = v0[39];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA668);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_2408E8A00;
  *(_QWORD *)(v16 + 32) = 0x496E6F6973736573;
  *(_QWORD *)(v16 + 40) = 0xE900000000000064;
  v17 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v16 + 48) = v2;
  *(_QWORD *)(v16 + 56) = v1;
  v18 = v17;
  *(_QWORD *)(v16 + 72) = v17;
  strcpy((char *)(v16 + 80), "rawSessionId");
  *(_BYTE *)(v16 + 93) = 0;
  *(_WORD *)(v16 + 94) = -5120;
  *(_QWORD *)(v16 + 96) = v3;
  *(_QWORD *)(v16 + 104) = v4;
  *(_QWORD *)(v16 + 120) = v17;
  *(_QWORD *)(v16 + 128) = 0x6552746E65696C63;
  *(_QWORD *)(v16 + 136) = 0xEF64497473657571;
  *(_QWORD *)(v16 + 144) = v5;
  *(_QWORD *)(v16 + 152) = v6;
  *(_QWORD *)(v16 + 168) = v17;
  *(_QWORD *)(v16 + 176) = 0x6D45646C756F6873;
  v19 = MEMORY[0x24BEE1328];
  *(_QWORD *)(v16 + 184) = 0xEA00000000007469;
  *(_BYTE *)(v16 + 192) = 1;
  *(_QWORD *)(v16 + 216) = v19;
  *(_QWORD *)(v16 + 224) = 0xD000000000000010;
  v20 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v16 + 232) = 0x80000002409217C0;
  *(_QWORD *)(v16 + 240) = v8;
  *(_QWORD *)(v16 + 264) = v20;
  *(_QWORD *)(v16 + 272) = 0xD000000000000011;
  *(_QWORD *)(v16 + 280) = 0x80000002409217E0;
  *(_QWORD *)(v16 + 288) = v7;
  *(_QWORD *)(v16 + 312) = v20;
  *(_QWORD *)(v16 + 320) = 0xD000000000000012;
  *(_QWORD *)(v16 + 328) = 0x8000000240921800;
  *(_QWORD *)(v16 + 336) = v64;
  *(_QWORD *)(v16 + 360) = v20;
  *(_QWORD *)(v16 + 368) = 0xD000000000000015;
  *(_QWORD *)(v16 + 408) = v20;
  *(_QWORD *)(v16 + 376) = 0x8000000240921820;
  *(_QWORD *)(v16 + 384) = v65;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = sub_2403A8518(v16);
  v81 = v21;
  if (v66)
  {
    v78 = v18;
    *(_QWORD *)&v77 = v61;
    *((_QWORD *)&v77 + 1) = v66;
    sub_2403A9254(&v77, &v79);
    v22 = v80;
  }
  else
  {
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v22 = sub_2403AD9FC();
    v80 = v22;
    *(_QWORD *)&v79 = v23;
  }
  if (v22)
  {
    sub_2403A9254(&v79, &v77);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v77, 0xD000000000000013, 0x8000000240921840, isUniquelyReferenced_nonNull_native);
    v81 = v21;
    swift_bridgeObjectRelease();
    v25 = v68;
    if (v67)
      goto LABEL_6;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2403ADA38((uint64_t)&v79);
    sub_2403AA648(0xD000000000000013, 0x8000000240921840, &v77);
    sub_2403ADA38((uint64_t)&v77);
    v25 = v68;
    if (v67)
    {
LABEL_6:
      v78 = v18;
      *(_QWORD *)&v77 = v62;
      *((_QWORD *)&v77 + 1) = v67;
      sub_2403A9254(&v77, &v79);
      if (v80)
        goto LABEL_7;
      goto LABEL_13;
    }
  }
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  v80 = sub_2403AD9FC();
  *(_QWORD *)&v79 = v32;
  if (v80)
  {
LABEL_7:
    sub_2403A9254(&v79, &v77);
    swift_bridgeObjectRetain();
    v26 = v81;
    v27 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v77, 0x64496C6F6F74, 0xE600000000000000, v27);
    v81 = v26;
    swift_bridgeObjectRelease();
    if (v25)
      goto LABEL_8;
    goto LABEL_14;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  sub_2403ADA38((uint64_t)&v79);
  sub_2403AA648(0x64496C6F6F74, 0xE600000000000000, &v77);
  sub_2403ADA38((uint64_t)&v77);
  if (v25)
  {
LABEL_8:
    v78 = v18;
    *(_QWORD *)&v77 = v63;
    *((_QWORD *)&v77 + 1) = v25;
    sub_2403A9254(&v77, &v79);
    if (v80)
      goto LABEL_9;
LABEL_15:
    swift_bridgeObjectRetain();
    sub_2403ADA38((uint64_t)&v79);
    sub_2403AA648(0x646E75426C6F6F74, 0xEC0000006449656CLL, &v77);
    sub_2403ADA38((uint64_t)&v77);
    if ((v69 & 1) != 0)
      goto LABEL_10;
    goto LABEL_16;
  }
LABEL_14:
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  v80 = sub_2403AD9FC();
  *(_QWORD *)&v79 = v33;
  if (!v80)
    goto LABEL_15;
LABEL_9:
  sub_2403A9254(&v79, &v77);
  swift_bridgeObjectRetain();
  v28 = v81;
  v29 = swift_isUniquelyReferenced_nonNull_native();
  sub_2403AC1CC(&v77, 0x646E75426C6F6F74, 0xEC0000006449656CLL, v29);
  v81 = v28;
  swift_bridgeObjectRelease();
  if ((v69 & 1) != 0)
  {
LABEL_10:
    v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v31 = sub_2403AD9FC();
    v80 = v31;
    *(_QWORD *)&v79 = v30;
    goto LABEL_17;
  }
LABEL_16:
  v78 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v77 = v9;
  sub_2403A9254(&v77, &v79);
  v31 = v80;
LABEL_17:
  if (v31)
  {
    sub_2403A9254(&v79, &v77);
    v34 = v81;
    v35 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v77, 0xD000000000000012, 0x8000000240921860, v35);
    v81 = v34;
    swift_bridgeObjectRelease();
    if ((v70 & 1) != 0)
    {
LABEL_19:
      v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v37 = sub_2403AD9FC();
      v80 = v37;
      *(_QWORD *)&v79 = v36;
      goto LABEL_22;
    }
  }
  else
  {
    sub_2403ADA38((uint64_t)&v79);
    sub_2403AA648(0xD000000000000012, 0x8000000240921860, &v77);
    sub_2403ADA38((uint64_t)&v77);
    if ((v70 & 1) != 0)
      goto LABEL_19;
  }
  v78 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v77 = v10;
  sub_2403A9254(&v77, &v79);
  v37 = v80;
LABEL_22:
  if (v37)
  {
    sub_2403A9254(&v79, &v77);
    v38 = v81;
    v39 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v77, 0xD00000000000001ALL, 0x8000000240921880, v39);
    v81 = v38;
    swift_bridgeObjectRelease();
    if ((v71 & 1) != 0)
    {
LABEL_24:
      v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v41 = sub_2403AD9FC();
      v80 = v41;
      *(_QWORD *)&v79 = v40;
      goto LABEL_27;
    }
  }
  else
  {
    sub_2403ADA38((uint64_t)&v79);
    sub_2403AA648(0xD00000000000001ALL, 0x8000000240921880, &v77);
    sub_2403ADA38((uint64_t)&v77);
    if ((v71 & 1) != 0)
      goto LABEL_24;
  }
  v78 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v77 = v11;
  sub_2403A9254(&v77, &v79);
  v41 = v80;
LABEL_27:
  if (v41)
  {
    sub_2403A9254(&v79, &v77);
    v42 = v81;
    v43 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v77, 0xD00000000000002CLL, 0x80000002409218A0, v43);
    v81 = v42;
    swift_bridgeObjectRelease();
    if ((v72 & 1) != 0)
      goto LABEL_29;
  }
  else
  {
    sub_2403ADA38((uint64_t)&v79);
    sub_2403AA648(0xD00000000000002CLL, 0x80000002409218A0, &v77);
    sub_2403ADA38((uint64_t)&v77);
    if ((v72 & 1) != 0)
    {
LABEL_29:
      v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v80 = sub_2403AD9FC();
      *(_QWORD *)&v79 = v44;
      if (v80)
        goto LABEL_30;
      goto LABEL_41;
    }
  }
  v78 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v77 = v12;
  sub_2403A9254(&v77, &v79);
  if (v80)
  {
LABEL_30:
    sub_2403A9254(&v79, &v77);
    v45 = v81;
    v46 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v77, 0xD00000000000002DLL, 0x80000002409218D0, v46);
    v81 = v45;
    swift_bridgeObjectRelease();
    if ((v73 & 1) != 0)
      goto LABEL_31;
    goto LABEL_42;
  }
LABEL_41:
  sub_2403ADA38((uint64_t)&v79);
  sub_2403AA648(0xD00000000000002DLL, 0x80000002409218D0, &v77);
  sub_2403ADA38((uint64_t)&v77);
  if ((v73 & 1) != 0)
  {
LABEL_31:
    v47 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v80 = sub_2403AD9FC();
    *(_QWORD *)&v79 = v47;
    if (v80)
      goto LABEL_32;
    goto LABEL_43;
  }
LABEL_42:
  v78 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v77 = v13;
  sub_2403A9254(&v77, &v79);
  if (v80)
  {
LABEL_32:
    sub_2403A9254(&v79, &v77);
    v48 = v81;
    v49 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v77, 0xD00000000000002ELL, 0x8000000240921900, v49);
    v81 = v48;
    swift_bridgeObjectRelease();
    if ((v74 & 1) != 0)
      goto LABEL_33;
    goto LABEL_44;
  }
LABEL_43:
  sub_2403ADA38((uint64_t)&v79);
  sub_2403AA648(0xD00000000000002ELL, 0x8000000240921900, &v77);
  sub_2403ADA38((uint64_t)&v77);
  if ((v74 & 1) != 0)
  {
LABEL_33:
    v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v80 = sub_2403AD9FC();
    *(_QWORD *)&v79 = v50;
    if (v80)
      goto LABEL_34;
    goto LABEL_45;
  }
LABEL_44:
  v78 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v77 = v14;
  sub_2403A9254(&v77, &v79);
  if (v80)
  {
LABEL_34:
    sub_2403A9254(&v79, &v77);
    v51 = v81;
    v52 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v77, 0xD00000000000002ELL, 0x8000000240921930, v52);
    v81 = v51;
    swift_bridgeObjectRelease();
    if ((v75 & 1) != 0)
      goto LABEL_35;
    goto LABEL_46;
  }
LABEL_45:
  sub_2403ADA38((uint64_t)&v79);
  sub_2403AA648(0xD00000000000002ELL, 0x8000000240921930, &v77);
  sub_2403ADA38((uint64_t)&v77);
  if ((v75 & 1) != 0)
  {
LABEL_35:
    v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v80 = sub_2403AD9FC();
    *(_QWORD *)&v79 = v53;
    if (v80)
      goto LABEL_36;
    goto LABEL_47;
  }
LABEL_46:
  v78 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v77 = v15;
  sub_2403A9254(&v77, &v79);
  if (v80)
  {
LABEL_36:
    sub_2403A9254(&v79, &v77);
    v54 = v81;
    v55 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v77, 0xD000000000000034, 0x8000000240921960, v55);
    v81 = v54;
    swift_bridgeObjectRelease();
    if (v76)
      goto LABEL_37;
LABEL_48:
    v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v80 = sub_2403AD9FC();
    *(_QWORD *)&v79 = v59;
    if (v80)
      goto LABEL_38;
LABEL_49:
    sub_2403ADA38((uint64_t)&v79);
    sub_2403AA648(0x496572756C696166, 0xEB000000006F666ELL, &v77);
    sub_2403ADA38((uint64_t)&v77);
    return v81;
  }
LABEL_47:
  sub_2403ADA38((uint64_t)&v79);
  sub_2403AA648(0xD000000000000034, 0x8000000240921960, &v77);
  sub_2403ADA38((uint64_t)&v77);
  if (!v76)
    goto LABEL_48;
LABEL_37:
  v56 = sub_240509730();
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA678);
  *(_QWORD *)&v77 = v56;
  sub_2403A9254(&v77, &v79);
  if (!v80)
    goto LABEL_49;
LABEL_38:
  sub_2403A9254(&v79, &v77);
  v57 = v81;
  v58 = swift_isUniquelyReferenced_nonNull_native();
  sub_2403AC1CC(&v77, 0x496572756C696166, 0xEB000000006F666ELL, v58);
  swift_bridgeObjectRelease();
  return v57;
}

unint64_t sub_2403AA528()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = ExecutionGrainLatency.dictionary.getter();
  v1 = sub_2403AEB7C(v0, 1);
  v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
    return v1;
  else
    return 0xD00000000000002ALL;
}

unint64_t static ExecutionGrainLatency.coreAnalyticsEventName.getter()
{
  return 0xD000000000000030;
}

unint64_t ExecutionGrainLatency.coreAnalyticsEventDictionary.getter()
{
  return sub_2403A864C(MEMORY[0x24BEE4AF8]);
}

uint64_t ExecutionGrainLatency.coreAnalyticsShouldEmit.getter()
{
  return 0;
}

unint64_t sub_2403AA5C0()
{
  return 0xD000000000000030;
}

unint64_t sub_2403AA5DC()
{
  return sub_2403A864C(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_2403AA5E8()
{
  return 0;
}

uint64_t ExecutionGrainLatency.SELFShouldEmit.getter()
{
  return 0;
}

uint64_t sub_2403AA600()
{
  return 0;
}

uint64_t static ExecutionGrainLatency.signpostEventName.getter()
{
  return sub_2408E5F9C();
}

uint64_t ExecutionGrainLatency.signpostShouldEmit.getter()
{
  return 1;
}

uint64_t sub_2403AA628()
{
  return sub_2408E5F9C();
}

uint64_t sub_2403AA63C()
{
  return 1;
}

double sub_2403AA648@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_240509E28(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2403ACBDC();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_2403A9254((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_2408DF218(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_2403AA738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_240509F84(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_2403AD2B0();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_2408E5AB0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
    v14 = *(_QWORD *)(v13 - 8);
    sub_2403A91CC(v12 + *(_QWORD *)(v14 + 72) * v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
    sub_2408DF580(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_2403AA874(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA640);
  v6 = sub_2408E6050();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_2403A9254(v24, v35);
      }
      else
      {
        sub_2403AE230((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_2408E6218();
      sub_2408E5D44();
      result = sub_2408E623C();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_2403A9254(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2403AAB70(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA638);
  v38 = a2;
  v6 = sub_2408E6050();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_2408E6218();
    sub_2408E5D44();
    result = sub_2408E623C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2403AAE7C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA618);
  result = sub_2408E6050();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_2408E620C();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2403AB130(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA620);
  result = sub_2408E6050();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_2408E620C();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2403AB3E4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  uint64_t v46;
  int v47;
  uint64_t v48;

  v3 = v2;
  v5 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v48 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2408E5AB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA560);
  v47 = a2;
  v12 = sub_2408E6050();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v44 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v42 = v2;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  for (i = v11; ; v11 = i)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v43)
      break;
    v25 = v44;
    v26 = v44[v24];
    ++v20;
    if (!v26)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v43)
        goto LABEL_34;
      v26 = v44[v20];
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v43)
        {
LABEL_34:
          swift_release();
          v3 = v42;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = v44[v27];
        if (!v26)
        {
          while (1)
          {
            v20 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v20 >= v43)
              goto LABEL_34;
            v26 = v44[v20];
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v20 = v27;
      }
    }
LABEL_21:
    v17 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    v28 = *(_QWORD *)(v8 + 72);
    v29 = *(_QWORD *)(v11 + 48) + v28 * v23;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v29, v7);
      v30 = *(_QWORD *)(v11 + 56);
      v31 = *(_QWORD *)(v46 + 72);
      sub_2403A91CC(v30 + v31 * v23, v48, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
      v32 = *(_QWORD *)(v11 + 56);
      v31 = *(_QWORD *)(v46 + 72);
      sub_2403AE1A4(v32 + v31 * v23, v48, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
    }
    sub_2403AE1E8();
    result = sub_2408E5CA8();
    v33 = -1 << *(_BYTE *)(v13 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v18 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v18 + 8 * v35);
      }
      while (v39 == -1);
      v21 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v28 * v21, v10, v7);
    result = sub_2403A91CC(v48, *(_QWORD *)(v13 + 56) + v31 * v21, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v42;
  v25 = v44;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v40 = 1 << *(_BYTE *)(v11 + 32);
  if (v40 >= 64)
    bzero(v25, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v40;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_2403AB7D8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;

  v3 = v2;
  v5 = type metadata accessor for ParticipantInfo(0);
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA580);
  v39 = a2;
  result = sub_2408E6050();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v3;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v37 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v36 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v20 >= v36)
          goto LABEL_34;
        v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v36)
            goto LABEL_34;
          v21 = v37[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v36)
                  goto LABEL_34;
                v21 = v37[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v38 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v39 & 1) != 0)
        sub_2403A91CC(v25, (uint64_t)v7, type metadata accessor for ParticipantInfo);
      else
        sub_2403AE1A4(v25, (uint64_t)v7, type metadata accessor for ParticipantInfo);
      result = sub_2408E620C();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_2403A91CC((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, type metadata accessor for ParticipantInfo);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_2403ABB08(uint64_t a1, int a2)
{
  return sub_2403ABB30(a1, a2, type metadata accessor for SessionData, &qword_256FFA680);
}

uint64_t sub_2403ABB1C(uint64_t a1, int a2)
{
  return sub_2403ABB30(a1, a2, type metadata accessor for RequestData, &qword_256FFA550);
}

uint64_t sub_2403ABB30(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  uint64_t (*v48)(_QWORD);

  v6 = v4;
  v48 = a3;
  v8 = a3(0);
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v42 - v9;
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v47 = a2;
  v12 = sub_2408E6050();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v4;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v6 = v43;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v20 >= v44)
              goto LABEL_34;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v24);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(v46 + 72);
    v33 = *(_QWORD *)(v11 + 56) + v32 * v24;
    if ((v47 & 1) != 0)
    {
      sub_2403A91CC(v33, (uint64_t)v10, v48);
    }
    else
    {
      sub_2403AE1A4(v33, (uint64_t)v10, v48);
      swift_bridgeObjectRetain();
    }
    sub_2408E6218();
    sub_2408E5D44();
    result = sub_2408E623C();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v21 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    *v22 = v31;
    v22[1] = v30;
    result = sub_2403A91CC((uint64_t)v10, *(_QWORD *)(v13 + 56) + v32 * v21, v48);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v6 = v43;
  v26 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v11 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v13;
  return result;
}

uint64_t sub_2403ABEA4(uint64_t a1, char a2)
{
  return sub_2403ABEBC(a1, a2, &qword_256FFA690);
}

uint64_t sub_2403ABEB0(uint64_t a1, char a2)
{
  return sub_2403ABEBC(a1, a2, &qword_256FFA688);
}

uint64_t sub_2403ABEBC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_2408E6050();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_2408E6218();
    sub_2408E5D44();
    result = sub_2408E623C();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

_OWORD *sub_2403AC1CC(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_240509E28(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
        return sub_2403A9254(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2403ACBDC();
      goto LABEL_7;
    }
    sub_2403AA874(v15, a4 & 1);
    v21 = sub_240509E28(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2403AC9C4(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_2408E61B8();
  __break(1u);
  return result;
}

void sub_2403AC2FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_240509E28(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2403ACDC0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_2403AAB70(v15, a4 & 1);
  v20 = sub_240509E28(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_2408E61B8();
  __break(1u);
}

uint64_t sub_2403AC458(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_240509F54(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_2403ACF70();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_2403AAE7C(result, a3 & 1);
  result = sub_240509F54(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2408E61B8();
  __break(1u);
  return result;
}

uint64_t sub_2403AC590(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_240509F54(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_2403AD110();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_2403AB130(result, a3 & 1);
  result = sub_240509F54(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_2408E61B8();
  __break(1u);
  return result;
}

uint64_t sub_2403AC6C8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_2408E5AB0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_240509F84(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      v22 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
      return sub_2403AE160(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_2403AD2B0();
    goto LABEL_7;
  }
  sub_2403AB3E4(v17, a3 & 1);
  v24 = sub_240509F84(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_2408E61B8();
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_2403ACA74(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_2403AC838(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_2403AC860(a1, a2, a3, a4, type metadata accessor for RequestData, &qword_256FFA550);
}

uint64_t sub_2403AC84C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_2403AC860(a1, a2, a3, a4, type metadata accessor for SessionData, &qword_256FFA680);
}

uint64_t sub_2403AC860(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  _QWORD *v6;
  _QWORD **v9;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v9 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_240509E28(a2, a3);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a4 & 1) != 0)
    {
LABEL_7:
      v22 = *v9;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7];
        v24 = a5(0);
        return sub_2403AE160(a1, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v16, a5);
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a4 & 1) == 0)
    {
      sub_2403AD7CC(a5, a6);
      goto LABEL_7;
    }
    sub_2403ABB30(v19, a4 & 1, a5, a6);
    v26 = sub_240509E28(a2, a3);
    if ((v20 & 1) == (v27 & 1))
    {
      v16 = v26;
      v22 = *v9;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2403ACB44(v16, a2, a3, a1, v22, a5);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_2408E61B8();
  __break(1u);
  return result;
}

_OWORD *sub_2403AC9C4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_2403A9254(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_2403ACA2C(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_2403ACA74(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_2408E5AB0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  result = sub_2403A91CC(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_2403ACB2C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_2403ACB44(a1, a2, a3, a4, a5, type metadata accessor for SessionData);
}

uint64_t sub_2403ACB38(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_2403ACB44(a1, a2, a3, a4, a5, type metadata accessor for RequestData);
}

uint64_t sub_2403ACB44(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a5[6] + 16 * a1);
  *v10 = a2;
  v10[1] = a3;
  v11 = a5[7];
  v12 = a6(0);
  result = sub_2403A91CC(a4, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a6);
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

void *sub_2403ACBDC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA640);
  v2 = *v0;
  v3 = sub_2408E6044();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_2403AE230(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_2403A9254(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2403ACDC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA638);
  v2 = *v0;
  v3 = sub_2408E6044();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2403ACF70()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA618);
  v2 = *v0;
  v3 = sub_2408E6044();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2403AD110()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA620);
  v2 = *v0;
  v3 = sub_2408E6044();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2403AD2B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_2408E5AB0();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA560);
  v30 = v0;
  v5 = *v0;
  v6 = sub_2408E6044();
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        result = (void *)sub_2403A91CC(v17, *(_QWORD *)(i + 56) + v23, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_2403AE1A4(*(_QWORD *)(v21 + 56) + v23, v17, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2403AD578()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for ParticipantInfo(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA580);
  v5 = *v0;
  v6 = sub_2408E6044();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_2403AE1A4(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, type metadata accessor for ParticipantInfo);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_2403A91CC((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, type metadata accessor for ParticipantInfo);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2403AD7A4()
{
  return sub_2403AD7CC(type metadata accessor for SessionData, &qword_256FFA680);
}

void *sub_2403AD7B8()
{
  return sub_2403AD7CC(type metadata accessor for RequestData, &qword_256FFA550);
}

void *sub_2403AD7CC(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v5 = a1(0);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v29 = v2;
  v8 = *v2;
  v9 = sub_2408E6044();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v30 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      v14 = v26 + 1;
      if (v26 + 1 >= v31)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v14);
      if (!v27)
        break;
    }
LABEL_25:
    v17 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    v23 = *v21;
    v22 = v21[1];
    v24 = *(_QWORD *)(v32 + 72) * v19;
    sub_2403AE1A4(*(_QWORD *)(v8 + 56) + v24, (uint64_t)v7, a1);
    v25 = (_QWORD *)(*(_QWORD *)(v10 + 48) + v20);
    *v25 = v23;
    v25[1] = v22;
    sub_2403A91CC((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24, a1);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v31)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v14 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v14);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_2403AD9FC()
{
  unint64_t result;

  result = qword_256FFA670;
  if (!qword_256FFA670)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FFA670);
  }
  return result;
}

uint64_t sub_2403ADA38(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543563F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for ExecutionGrainLatency(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_2403ADAA8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ExecutionGrainLatency(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2403ADB34(*(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_BYTE *)(a1 + 160));
  return swift_release();
}

uint64_t sub_2403ADB34(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for ExecutionGrainLatency(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  v15 = *(_QWORD *)(a2 + 152);
  v16 = *(_QWORD *)(a2 + 144);
  v14 = *(_BYTE *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2403ADAA8(v16, v15, v14);
  *(_QWORD *)(a1 + 144) = v16;
  *(_QWORD *)(a1 + 152) = v15;
  *(_BYTE *)(a1 + 160) = v14;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ExecutionGrainLatency(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 144);
  v5 = *(_QWORD *)(a2 + 152);
  v6 = *(_BYTE *)(a2 + 160);
  sub_2403ADAA8(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 144) = v4;
  *(_QWORD *)(a1 + 152) = v5;
  v9 = *(_BYTE *)(a1 + 160);
  *(_BYTE *)(a1 + 160) = v6;
  sub_2403ADB34(v7, v8, v9);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v10 = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = v10;
  v11 = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = v11;
  v12 = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v12;
  v13 = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v13;
  v14 = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v14;
  v15 = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = v15;
  v16 = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v16;
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy320_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x140uLL);
}

uint64_t assignWithTake for ExecutionGrainLatency(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_BYTE *)(a2 + 160);
  v14 = *(_QWORD *)(a1 + 144);
  v15 = *(_QWORD *)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v16 = *(_BYTE *)(a1 + 160);
  *(_BYTE *)(a1 + 160) = v13;
  sub_2403ADB34(v14, v15, v16);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExecutionGrainLatency(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 320))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExecutionGrainLatency(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 312) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 320) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 320) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExecutionGrainLatency()
{
  return &type metadata for ExecutionGrainLatency;
}

uint64_t sub_2403AE160(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_2403AE1A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_2403AE1E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FFA698;
  if (!qword_256FFA698)
  {
    v1 = sub_2408E5AB0();
    result = MEMORY[0x242684578](MEMORY[0x24BE586D8], v1);
    atomic_store(result, (unint64_t *)&qword_256FFA698);
  }
  return result;
}

uint64_t sub_2403AE230(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

Swift::Bool __swiftcall AnyDemand.meetsDemand()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v1)
  {
    v2 = *(_QWORD *)v0 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2403AE340(v2, (uint64_t)v6);
      v3 = v7;
      v4 = v8;
      __swift_project_boxed_opaque_existential_1(v6, v7);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) != 0)
        break;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
      v2 += 40;
      if (!--v1)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  }
  return 1;
}

uint64_t sub_2403AE340(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

ValueMetadata *type metadata accessor for AnyDemand()
{
  return &type metadata for AnyDemand;
}

uint64_t EventGroup.intelligenceFlowTranscriptEvent.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventGroup.intelligenceFlowTranscriptEvent.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*EventGroup.intelligenceFlowTranscriptEvent.modify())()
{
  return nullsub_1;
}

uint64_t EventGroup.intelligenceFlowTelemetryEvent.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventGroup.intelligenceFlowTelemetryEvent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*EventGroup.intelligenceFlowTelemetryEvent.modify())()
{
  return nullsub_1;
}

BOOL static EventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EventType.hash(into:)()
{
  return sub_2408E6224();
}

uint64_t EventType.hashValue.getter()
{
  sub_2408E6218();
  sub_2408E6224();
  return sub_2408E623C();
}

BOOL sub_2403AE4BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s23LighthouseDataProcessor33TranscriptProtoAppRequirementEnumO9hashValueSivg_0()
{
  sub_2408E6218();
  sub_2408E6224();
  return sub_2408E623C();
}

uint64_t sub_2403AE514()
{
  return sub_2408E6224();
}

uint64_t sub_2403AE53C()
{
  sub_2408E6218();
  sub_2408E6224();
  return sub_2408E623C();
}

unint64_t sub_2403AE580()
{
  unint64_t result;

  result = qword_256FFA6A0;
  if (!qword_256FFA6A0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for EventType, &type metadata for EventType);
    atomic_store(result, (unint64_t *)&qword_256FFA6A0);
  }
  return result;
}

uint64_t destroy for EventGroup()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s23LighthouseDataProcessor10EventGroupVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EventGroup(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for EventGroup(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventGroup(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventGroup()
{
  return &type metadata for EventGroup;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for EventType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2403AE848 + 4 * byte_2408E8AF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2403AE87C + 4 * asc_2408E8AF0[v4]))();
}

uint64_t sub_2403AE87C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403AE884(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2403AE88CLL);
  return result;
}

uint64_t sub_2403AE898(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2403AE8A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2403AE8A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403AE8AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403AE8B8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2403AE8C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for EventType()
{
  return &type metadata for EventType;
}

id sub_2403AE8D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95010]), sel_init);
  sub_2403AEAF0(a1, (uint64_t)v5);
  v7 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) != 1)
  {
    v8 = (char *)&loc_2403AE9D8 + 4 * byte_2408E8BAC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return v6;
}

uint64_t sub_2403AEAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2403AEB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2403AEB7C(uint64_t a1, char a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  id v28[2];

  v28[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (qword_256FFA0B8 != -1)
    swift_once();
  v3 = sub_2408E5C48();
  __swift_project_value_buffer(v3, (uint64_t)qword_2570724B0);
  v4 = sub_2408E5C3C();
  v5 = sub_2408E5EA0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (void *)swift_slowAlloc();
    v28[0] = v7;
    *(_DWORD *)v6 = 136315138;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA6A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA6B0);
    v8 = sub_2408E5D38();
    sub_2403B3ED0(v8, v9, (uint64_t *)v28);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240347000, v4, v5, "Converting %s metrics dictionary to json string", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v7, -1, -1);
    MEMORY[0x242684668](v6, -1, -1);
  }

  if ((a2 & 1) != 0)
    v10 = 3;
  else
    v10 = 2;
  v11 = (void *)objc_opt_self();
  v12 = (void *)sub_2408E5C90();
  v28[0] = 0;
  v13 = objc_msgSend(v11, sel_dataWithJSONObject_options_error_, v12, v10, v28);

  v14 = v28[0];
  if (v13)
  {
    v15 = sub_2408E5564();
    v17 = v16;

    sub_2408E5D2C();
    MEMORY[0x24BDAC7A8]();
    sub_2408E5D20();
    v18 = sub_2408E5D14();
    sub_240363D58(v15, v17);
  }
  else
  {
    v19 = v14;
    v20 = (void *)sub_2408E5534();

    swift_willThrow();
    v21 = sub_2408E5C3C();
    v22 = sub_2408E5EAC();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (void *)swift_slowAlloc();
      v28[0] = v24;
      *(_DWORD *)v23 = 136315138;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA6A8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA6B0);
      v25 = sub_2408E5D38();
      sub_2403B3ED0(v25, v26, (uint64_t *)v28);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v21, v22, "Failed to convert %s metrics dictionary to json string", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242684668](v24, -1, -1);
      MEMORY[0x242684668](v23, -1, -1);
    }

    return 0;
  }
  return v18;
}

ValueMetadata *type metadata accessor for IELatencyRecordHelper()
{
  return &type metadata for IELatencyRecordHelper;
}

LighthouseDataProcessor::ClientIdentifier_optional __swiftcall ClientIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  LighthouseDataProcessor::ClientIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2408E608C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t ClientIdentifier.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000012;
  else
    return 0x6E776F6E6B6E55;
}

uint64_t sub_2403AF038(char *a1, char *a2)
{
  return sub_24040CDB4(*a1, *a2);
}

uint64_t sub_2403AF044()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

uint64_t sub_2403AF0C8()
{
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2403AF128()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

LighthouseDataProcessor::ClientIdentifier_optional sub_2403AF1A8(Swift::String *a1)
{
  return ClientIdentifier.init(rawValue:)(*a1);
}

void sub_2403AF1B4(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x6E776F6E6B6E55;
  if (*v1)
    v2 = 0xD000000000000012;
  v3 = 0x8000000240921340;
  if (!*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

BOOL static AnalyticsType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AnalyticsType.hash(into:)()
{
  return sub_2408E6224();
}

uint64_t AnalyticsType.hashValue.getter()
{
  sub_2408E6218();
  sub_2408E6224();
  return sub_2408E623C();
}

BOOL sub_2403AF27C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

unint64_t sub_2403AF298()
{
  unint64_t result;

  result = qword_256FFA6B8;
  if (!qword_256FFA6B8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ClientIdentifier, &type metadata for ClientIdentifier);
    atomic_store(result, (unint64_t *)&qword_256FFA6B8);
  }
  return result;
}

unint64_t sub_2403AF2E0()
{
  unint64_t result;

  result = qword_256FFA6C0;
  if (!qword_256FFA6C0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for AnalyticsType, &type metadata for AnalyticsType);
    atomic_store(result, (unint64_t *)&qword_256FFA6C0);
  }
  return result;
}

uint64_t dispatch thunk of MetricsProducer.produceMetricsFor(results:reportTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of MetricsProducer.formulateMetrics(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of MetricsProducer.produce(from:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of MetricsDefinitions.clientId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MetricsDefinitions.dateStamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MetricsDefinitions.dateStamp.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MetricsDefinitions.dateStamp.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

ValueMetadata *type metadata accessor for ClientIdentifier()
{
  return &type metadata for ClientIdentifier;
}

uint64_t getEnumTagSinglePayload for IntelligenceFlowSessionIdSiriRequestIdMap.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s23LighthouseDataProcessor16ClientIdentifierOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2403AF450 + 4 * byte_2408E8C05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2403AF484 + 4 * asc_2408E8C00[v4]))();
}

uint64_t sub_2403AF484(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403AF48C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2403AF494);
  return result;
}

uint64_t sub_2403AF4A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2403AF4A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2403AF4AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403AF4B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_2403AF4C0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsType()
{
  return &type metadata for AnalyticsType;
}

void *sub_2403AF4E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v28;
  unsigned int (*v29)(unsigned int *, uint64_t, uint64_t);

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (unsigned int *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v7 = (unsigned int *)((char *)&v28 - v6);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA6C8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TranscriptProtoActionCancellation(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v10, &qword_256FFA6C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_2403A97FC((uint64_t)v10, &qword_256FFA6C8);
    return 0;
  }
  else
  {
    sub_2403AF808((uint64_t)v10, (uint64_t)v14);
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94DE0]), sel_init);
    v15 = v16;
    if (v16)
    {
      objc_msgSend(v16, sel_setExists_, 1);
      v17 = objc_allocWithZone(MEMORY[0x24BE94FD8]);
      v18 = v15;
      v19 = objc_msgSend(v17, sel_init);
      sub_2403A9210((uint64_t)v14, (uint64_t)v7, &qword_256FFA300);
      v20 = type metadata accessor for TranscriptProtoStatementID(0);
      v29 = *(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48);
      if (v29(v7, 1, v20) == 1)
      {
        sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
      }
      else
      {
        v21 = *v7;
        sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
        objc_msgSend(v19, sel_setIndex_, v21);
      }
      objc_msgSend(v18, sel_setCancelledActionStatementId_, v19);

      v22 = (uint64_t)&v14[*(int *)(v11 + 20)];
      v23 = objc_allocWithZone(MEMORY[0x24BE94FD8]);
      v24 = v18;
      v25 = objc_msgSend(v23, sel_init);
      sub_2403A9210(v22, (uint64_t)v5, &qword_256FFA300);
      if (v29(v5, 1, v20) == 1)
      {
        sub_2403A97FC((uint64_t)v5, &qword_256FFA300);
      }
      else
      {
        v26 = *v5;
        sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoStatementID);
        objc_msgSend(v25, sel_setIndex_, v26);
      }
      objc_msgSend(v24, sel_setStatementId_, v25);

    }
    sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoActionCancellation);
  }
  return v15;
}

uint64_t sub_2403AF808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoActionCancellation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2403AF84C()
{
  _BYTE *v0;

  if (*v0)
    return 0x4974736575716572;
  else
    return 0x496E6F6973736573;
}

uint64_t sub_2403AF884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2403B053C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2403AF8A8()
{
  return 0;
}

void sub_2403AF8B4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2403AF8C0()
{
  sub_2403AFA5C();
  return sub_2408E6278();
}

uint64_t sub_2403AF8E8()
{
  sub_2403AFA5C();
  return sub_2408E6284();
}

uint64_t IntelligenceFlowSessionIdSiriRequestIdMap.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA6D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2403AFA5C();
  sub_2408E626C();
  v8[15] = 0;
  sub_2408E566C();
  sub_2403AFD58(&qword_256FFA6E0, MEMORY[0x24BDCEA78]);
  sub_2408E6164();
  if (!v1)
  {
    type metadata accessor for IntelligenceFlowSessionIdSiriRequestIdMap();
    v8[14] = 1;
    sub_2408E6140();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2403AFA5C()
{
  unint64_t result;

  result = qword_256FFA6D8;
  if (!qword_256FFA6D8)
  {
    result = MEMORY[0x242684578](&unk_2408E8F6C, &type metadata for IntelligenceFlowSessionIdSiriRequestIdMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FFA6D8);
  }
  return result;
}

uint64_t type metadata accessor for IntelligenceFlowSessionIdSiriRequestIdMap()
{
  uint64_t result;

  result = qword_256FFA750;
  if (!qword_256FFA750)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t IntelligenceFlowSessionIdSiriRequestIdMap.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;

  v26 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA6E8);
  v4 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntelligenceFlowSessionIdSiriRequestIdMap();
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2403AFA5C();
  sub_2408E6254();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v25 = v4;
  v23 = v9;
  v10 = sub_2408E566C();
  v24 = &v22;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8]();
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 0;
  sub_2403AFD58(&qword_256FFA6F0, MEMORY[0x24BDCEAA0]);
  v14 = v27;
  sub_2408E60F8();
  v22 = v11;
  v15 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v16 = (uint64_t)v23;
  v15(v23, v13, v10);
  v28 = 1;
  v17 = sub_2408E60D4();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v14);
  v20 = (uint64_t *)(v16 + *(int *)(v7 + 20));
  *v20 = v17;
  v20[1] = v19;
  sub_2403AFD98(v16, v26);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_2403AFDDC(v16);
}

uint64_t sub_2403AFD58(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2408E566C();
    result = MEMORY[0x242684578](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2403AFD98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntelligenceFlowSessionIdSiriRequestIdMap();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2403AFDDC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IntelligenceFlowSessionIdSiriRequestIdMap();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2403AFE18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IntelligenceFlowSessionIdSiriRequestIdMap.init(from:)(a1, a2);
}

uint64_t sub_2403AFE2C(_QWORD *a1)
{
  return IntelligenceFlowSessionIdSiriRequestIdMap.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for IntelligenceFlowSessionIdSiriRequestIdMap(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2408E566C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for IntelligenceFlowSessionIdSiriRequestIdMap(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2408E566C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IntelligenceFlowSessionIdSiriRequestIdMap(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_2408E566C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IntelligenceFlowSessionIdSiriRequestIdMap(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_2408E566C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for IntelligenceFlowSessionIdSiriRequestIdMap(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2408E566C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for IntelligenceFlowSessionIdSiriRequestIdMap(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_2408E566C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceFlowSessionIdSiriRequestIdMap()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403B00D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2408E566C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for IntelligenceFlowSessionIdSiriRequestIdMap()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403B0160(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2408E566C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2403B01DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E566C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of SessionBuilder.buildSessionView()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2403B0644;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SessionBuilder.buildSessionView(streams:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2403B0350;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_2403B0350()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t storeEnumTagSinglePayload for IntelligenceFlowSessionIdSiriRequestIdMap.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2403B03E4 + 4 * byte_2408E8DD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2403B0418 + 4 * byte_2408E8DD0[v4]))();
}

uint64_t sub_2403B0418(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403B0420(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2403B0428);
  return result;
}

uint64_t sub_2403B0434(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2403B043CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2403B0440(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403B0448(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntelligenceFlowSessionIdSiriRequestIdMap.CodingKeys()
{
  return &type metadata for IntelligenceFlowSessionIdSiriRequestIdMap.CodingKeys;
}

unint64_t sub_2403B0468()
{
  unint64_t result;

  result = qword_256FFA798;
  if (!qword_256FFA798)
  {
    result = MEMORY[0x242684578](&unk_2408E8F44, &type metadata for IntelligenceFlowSessionIdSiriRequestIdMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FFA798);
  }
  return result;
}

unint64_t sub_2403B04B0()
{
  unint64_t result;

  result = qword_256FFA7A0;
  if (!qword_256FFA7A0)
  {
    result = MEMORY[0x242684578](&unk_2408E8EB4, &type metadata for IntelligenceFlowSessionIdSiriRequestIdMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FFA7A0);
  }
  return result;
}

unint64_t sub_2403B04F8()
{
  unint64_t result;

  result = qword_256FFA7A8;
  if (!qword_256FFA7A8)
  {
    result = MEMORY[0x242684578](&unk_2408E8EDC, &type metadata for IntelligenceFlowSessionIdSiriRequestIdMap.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FFA7A8);
  }
  return result;
}

uint64_t sub_2403B053C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4974736575716572 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_2403B0648(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94E90]), sel_init);
  if (v2)
  {
    v3 = a1 + *(int *)(type metadata accessor for ToolKitProtoTypedValue.EnumerationValue(0) + 20);
    v4 = v2;
    v5 = sub_2403B4C08(v3);
    objc_msgSend(v4, sel_setTypeIdentifier_, v5);

    v6 = objc_allocWithZone(MEMORY[0x24BE94E80]);
    v7 = v4;
    v8 = objc_msgSend(v6, sel_init);
    v9 = v8;
    if (v8)
      objc_msgSend(v8, sel_setExists_, 1);
    objc_msgSend(v7, sel_setDisplayRepresentation_, v9);

  }
  return v2;
}

id sub_2403B0734(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  id v36;
  char **v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  int *v50;
  unsigned int (*v51)(uint64_t, uint64_t, int *);
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  unsigned int *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  id v77;
  id v78;
  void *v79;
  uint64_t v80;
  id v81;
  void *v82;
  uint64_t v83;
  char v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  unint64_t v92;
  unsigned int *v93;
  uint64_t v94;
  unsigned __int8 *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  id v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;

  v108 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v1);
  v101 = (uint64_t)&v89 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  v99 = *(_QWORD *)(v3 - 8);
  v100 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v91 = (uint64_t)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v97 = (uint64_t)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v105 = (uint64_t)&v89 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v96 = (uint64_t)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v98 = (char *)&v89 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v95 = (unsigned __int8 *)&v89 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v102 = (char *)&v89 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v89 - v21;
  v23 = type metadata accessor for TranscriptProtoParameter(0);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for TranscriptProtoParameterSet(0);
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (uint64_t *)((char *)&v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2403A9210(v108, (uint64_t)v29, &qword_256FFA3A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v29, &qword_256FFA3A0);
    return 0;
  }
  v107 = v26;
  v93 = (unsigned int *)v20;
  v94 = v23;
  v104 = v22;
  sub_2403A91CC((uint64_t)v29, (uint64_t)v33, type metadata accessor for TranscriptProtoParameterSet);
  v35 = *v33;
  v36 = objc_allocWithZone(MEMORY[0x24BE94F00]);
  swift_bridgeObjectRetain();
  v37 = &selRef_setHasNumActionsExecuted_;
  v34 = objc_msgSend(v36, sel_init);
  if (!v34)
  {
    sub_240388AE4((uint64_t)v33, type metadata accessor for TranscriptProtoParameterSet);
    swift_bridgeObjectRelease();
    return v34;
  }
  v92 = sub_2403B11F0();
  v38 = (void *)sub_2408E5D8C();
  objc_msgSend(v34, sel_setParameters_, v38);

  v39 = *(_QWORD *)(v35 + 16);
  if (v39)
  {
    v103 = v34;
    v89 = v35;
    v90 = v33;
    v40 = v24;
    v41 = v35 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    v106 = *(_QWORD *)(v40 + 72);
    v42 = (uint64_t)v102;
    v43 = v94;
    v44 = (uint64_t)v107;
    while (1)
    {
      sub_2403B122C(v41, v44);
      v45 = objc_allocWithZone(MEMORY[0x24BE94EC8]);
      v46 = objc_msgSend(v45, v37[81], v89);
      if (v46)
      {
        v47 = v46;
        v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94E30]), v37[81]);
        if (v48)
        {
          v49 = v48;
          v108 = v44 + *(int *)(v43 + 24);
          sub_2403A9210(v108, v42, &qword_256FFA7B8);
          v50 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
          v51 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v50 - 1) + 48);
          if (v51(v42, 1, v50) == 1)
          {
            sub_2403A97FC(v42, &qword_256FFA7B8);
            v52 = type metadata accessor for TranscriptProtoStatementID(0);
            v53 = (uint64_t)v104;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v104, 1, 1, v52);
          }
          else
          {
            v53 = (uint64_t)v104;
            sub_2403A9210(v42 + v50[7], (uint64_t)v104, &qword_256FFA300);
            sub_240388AE4(v42, type metadata accessor for TranscriptProtoCandidate);
          }
          v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FD8]), v37[81]);
          v55 = v53;
          v56 = v93;
          sub_2403A9210(v55, (uint64_t)v93, &qword_256FFA300);
          v57 = type metadata accessor for TranscriptProtoStatementID(0);
          if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v56, 1, v57) == 1)
          {
            sub_2403A97FC((uint64_t)v56, &qword_256FFA300);
          }
          else
          {
            v58 = *v56;
            sub_240388AE4((uint64_t)v56, type metadata accessor for TranscriptProtoStatementID);
            objc_msgSend(v54, sel_setIndex_, v58);
          }
          sub_2403A97FC((uint64_t)v104, &qword_256FFA300);
          objc_msgSend(v49, sel_setStatementId_, v54);

          v59 = v95;
          sub_2403A9210(v108, (uint64_t)v95, &qword_256FFA7B8);
          if (v51((uint64_t)v59, 1, v50) == 1)
          {
            sub_2403A97FC((uint64_t)v59, &qword_256FFA7B8);
            v60 = 0;
          }
          else
          {
            v61 = *v59;
            sub_240388AE4((uint64_t)v59, type metadata accessor for TranscriptProtoCandidate);
            v60 = (v61 + 1);
          }
          v62 = (uint64_t)v98;
          objc_msgSend(v49, sel_setSource_, v60);
          sub_2403A9210(v108, v62, &qword_256FFA7B8);
          if (v51(v62, 1, v50) == 1)
          {
            sub_2403A97FC(v62, &qword_256FFA7B8);
            v63 = v99;
            v64 = v100;
            v65 = v105;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v105, 1, 1, v100);
          }
          else
          {
            v65 = v105;
            sub_2403A9210(v62 + v50[6], v105, &qword_256FFA7B0);
            sub_240388AE4(v62, type metadata accessor for TranscriptProtoCandidate);
            v63 = v99;
            v64 = v100;
          }
          v66 = v65;
          v67 = v97;
          sub_2403A9210(v66, v97, &qword_256FFA7B0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v67, 1, v64) == 1)
          {
            sub_2403A97FC(v67, &qword_256FFA7B0);
            goto LABEL_27;
          }
          v68 = v91;
          sub_2403A91CC(v67, v91, type metadata accessor for TranscriptProtoCandidatePromptStatus);
          if ((*(_BYTE *)(v68 + 9) & 1) != 0)
          {
            sub_240388AE4(v68, type metadata accessor for TranscriptProtoCandidatePromptStatus);
LABEL_27:
            v69 = 0;
LABEL_28:
            v70 = v105;
          }
          else
          {
            v83 = *(_QWORD *)v68;
            v84 = *(_BYTE *)(v68 + 8);
            v85 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94E38]), sel_init);
            v86 = v68;
            v69 = v85;
            if (!v85)
            {
              sub_240388AE4(v86, type metadata accessor for TranscriptProtoCandidatePromptStatus);
              goto LABEL_28;
            }
            if ((v84 & 1) != 0)
            {
              if (v83)
                objc_msgSend(v85, sel_setConfirmed_, 1);
              else
                objc_msgSend(v85, sel_setNotPrompted_, 1);
            }
            else
            {
              objc_msgSend(v85, sel_setPicked_, v83);
            }
            v87 = v105;
            sub_240388AE4(v91, type metadata accessor for TranscriptProtoCandidatePromptStatus);
            v70 = v87;
          }
          sub_2403A97FC(v70, &qword_256FFA7B0);
          objc_msgSend(v49, sel_setPromptStatus_, v69);

          v71 = v96;
          sub_2403A9210(v108, v96, &qword_256FFA7B8);
          if (v51(v71, 1, v50) == 1)
          {
            sub_2403A97FC(v71, &qword_256FFA7B8);
            v72 = type metadata accessor for ToolKitProtoTypedValue(0);
            v73 = v101;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v101, 1, 1, v72);
          }
          else
          {
            v73 = v101;
            sub_2403A9210(v71 + v50[5], v101, &qword_256FFA3A8);
            sub_240388AE4(v71, type metadata accessor for TranscriptProtoCandidate);
          }
          v42 = (uint64_t)v102;
          v74 = sub_240422570(v73);
          sub_2403A97FC(v73, &qword_256FFA3A8);
          objc_msgSend(v49, sel_setValue_, v74);

          objc_msgSend(v47, sel_setCandidate_, v49);
          swift_bridgeObjectRetain();
          v75 = (void *)sub_2408E5CE4();
          v44 = (uint64_t)v107;
          swift_bridgeObjectRelease();
          objc_msgSend(v47, sel_setKey_, v75);

          if (*(_BYTE *)(v44 + 24))
            v76 = -1;
          else
            v76 = *(_QWORD *)(v44 + 16);
          objc_msgSend(v47, sel_setCollectionIndex_, v76);
          v77 = v103;
          v78 = objc_msgSend(v103, sel_parameters);
          if (v78)
          {
            v79 = v78;
            v80 = sub_2408E5D98();

            v109 = v80;
            v81 = v47;
            MEMORY[0x242683B40]();
            if (*(_QWORD *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_2408E5DBC();
            sub_2408E5DD4();
            sub_2408E5DB0();
            v37 = &selRef_setHasNumActionsExecuted_;
            if (v109)
            {
              v82 = (void *)sub_2408E5D8C();
              swift_bridgeObjectRelease();
            }
            else
            {
              v82 = 0;
            }
            objc_msgSend(v103, sel_setParameters_, v82);

            v44 = (uint64_t)v107;
            sub_240388AE4((uint64_t)v107, type metadata accessor for TranscriptProtoParameter);
            v43 = v94;
          }
          else
          {
            objc_msgSend(v77, sel_setParameters_, 0);

            sub_240388AE4(v44, type metadata accessor for TranscriptProtoParameter);
            swift_bridgeObjectRelease();
            v43 = v94;
            v37 = &selRef_setHasNumActionsExecuted_;
          }
          goto LABEL_7;
        }
        sub_240388AE4(v44, type metadata accessor for TranscriptProtoParameter);

      }
      else
      {
        sub_240388AE4(v44, type metadata accessor for TranscriptProtoParameter);
      }
LABEL_7:
      v41 += v106;
      if (!--v39)
      {
        swift_bridgeObjectRelease();
        v33 = v90;
        v34 = v103;
        goto LABEL_54;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_54:
  sub_240388AE4((uint64_t)v33, type metadata accessor for TranscriptProtoParameterSet);
  return v34;
}

unint64_t sub_2403B11F0()
{
  unint64_t result;

  result = qword_256FFA7C0;
  if (!qword_256FFA7C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FFA7C0);
  }
  return result;
}

uint64_t sub_2403B122C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoParameter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_2403B1270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  _QWORD v35[2];
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v42 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7C8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v35 - v5;
  v7 = type metadata accessor for TranscriptProtoResponseParameter(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v35 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TranscriptProtoResponseManifest(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (_QWORD *)((char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2403A9210(v42, (uint64_t)v15, &qword_256FFA418);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_2403A97FC((uint64_t)v15, &qword_256FFA418);
    return 0;
  }
  else
  {
    sub_2403A91CC((uint64_t)v15, (uint64_t)v19, type metadata accessor for TranscriptProtoResponseManifest);
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FB8]), sel_init);
    v20 = v21;
    v22 = (uint64_t)v19;
    if (v21)
    {
      objc_msgSend(v21, sel_setUseTemplateAsFallback_, *((_BYTE *)v19 + *(int *)(v16 + 36)) & 1);
      v23 = *v19;
      v43 = MEMORY[0x24BEE4AF8];
      v24 = *(_QWORD *)(v23 + 16);
      if (v24)
      {
        v36 = v20;
        v37 = v22;
        v25 = v23 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v39 = v7;
        v42 = *(_QWORD *)(v8 + 72);
        v26 = v20;
        v27 = v39;
        v35[1] = v23;
        swift_bridgeObjectRetain();
        v28 = (uint64_t)v40;
        v38 = v4;
        v41 = v8;
        do
        {
          sub_2403B1700(v25, (uint64_t)v12);
          sub_2403B1700((uint64_t)v12, (uint64_t)v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v27);
          sub_2403A9210((uint64_t)v6, (uint64_t)v4, &qword_256FFA7C8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v27) == 1)
          {
            sub_2403A97FC((uint64_t)v4, &qword_256FFA7C8);
            sub_2403A97FC((uint64_t)v6, &qword_256FFA7C8);
            sub_240388AE4((uint64_t)v12, type metadata accessor for TranscriptProtoResponseParameter);
          }
          else
          {
            sub_2403A91CC((uint64_t)v4, v28, type metadata accessor for TranscriptProtoResponseParameter);
            v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FC0]), sel_init);
            if (v29)
            {
              v30 = v29;
              objc_msgSend(v29, sel_setProfanityFilter_, *(_BYTE *)(v28 + 72) & 1);
              objc_msgSend(v30, sel_setIsRequired_, *(_BYTE *)(v28 + 48) & 1);
              sub_240388AE4(v28, type metadata accessor for TranscriptProtoResponseParameter);
              sub_2403A97FC((uint64_t)v6, &qword_256FFA7C8);
              v31 = sub_240388AE4((uint64_t)v12, type metadata accessor for TranscriptProtoResponseParameter);
              MEMORY[0x242683B40](v31);
              if (*(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_2408E5DBC();
              sub_2408E5DD4();
              sub_2408E5DB0();
              v27 = v39;
              v28 = (uint64_t)v40;
              v4 = v38;
            }
            else
            {
              sub_240388AE4(v28, type metadata accessor for TranscriptProtoResponseParameter);
              sub_2403A97FC((uint64_t)v6, &qword_256FFA7C8);
              sub_240388AE4((uint64_t)v12, type metadata accessor for TranscriptProtoResponseParameter);
            }
            v8 = v41;
          }
          v25 += v42;
          --v24;
        }
        while (v24);
        v20 = v36;
        v22 = v37;
      }
      else
      {
        v32 = v20;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      sub_2403B1744();
      v33 = (void *)sub_2408E5D8C();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_setParameters_, v33);

    }
    sub_240388AE4(v22, type metadata accessor for TranscriptProtoResponseManifest);
  }
  return v20;
}

uint64_t sub_2403B1700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoResponseParameter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2403B1744()
{
  unint64_t result;

  result = qword_256FFA7D0;
  if (!qword_256FFA7D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FFA7D0);
  }
  return result;
}

unint64_t RequestGrainLatency.description.getter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = RequestGrainLatency.dictionary.getter();
  v1 = sub_2403AEB7C(v0, 1);
  v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
    return v1;
  else
    return 0xD00000000000002ALL;
}

unint64_t RequestGrainLatency.dictionary.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  id v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  id v30;
  unint64_t v31;
  char v32;
  id v33;
  unint64_t v34;
  char v35;
  id v36;
  unint64_t v37;
  char v38;
  id v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  id v45;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  unint64_t v68;
  unint64_t v69;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[9];
  v48 = v0[10];
  v49 = v0[11];
  v50 = v0[12];
  v51 = v0[13];
  v52 = v0[14];
  v53 = v0[15];
  v8 = v0[18];
  v54 = v0[16];
  v55 = v0[17];
  v47 = *((_OWORD *)v0 + 10);
  v56 = v0[19];
  v57 = v0[22];
  v58 = v0[23];
  v9 = v0[24];
  v10 = v0[26];
  v59 = *((_BYTE *)v0 + 200);
  v60 = *((_BYTE *)v0 + 216);
  v11 = v0[28];
  v12 = v0[30];
  v61 = *((_BYTE *)v0 + 232);
  v62 = *((_BYTE *)v0 + 248);
  v13 = v0[32];
  v63 = *((_BYTE *)v0 + 264);
  v64 = v0[34];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA668);
  v14 = swift_allocObject();
  v15 = (_QWORD *)v14;
  *(_OWORD *)(v14 + 16) = xmmword_2408E8FC0;
  *(_QWORD *)(v14 + 32) = 0x496E6F6973736573;
  *(_QWORD *)(v14 + 40) = 0xE900000000000064;
  v16 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v14 + 48) = v1;
  *(_QWORD *)(v14 + 56) = v2;
  *(_QWORD *)(v14 + 72) = v16;
  strcpy((char *)(v14 + 80), "rawSessionId");
  *(_BYTE *)(v14 + 93) = 0;
  *(_WORD *)(v14 + 94) = -5120;
  *(_QWORD *)(v14 + 96) = v4;
  *(_QWORD *)(v14 + 104) = v3;
  *(_QWORD *)(v14 + 120) = v16;
  *(_QWORD *)(v14 + 128) = 0x6552746E65696C63;
  *(_QWORD *)(v14 + 136) = 0xEF64497473657571;
  *(_QWORD *)(v14 + 144) = v5;
  *(_QWORD *)(v14 + 152) = v6;
  *(_QWORD *)(v14 + 168) = v16;
  *(_QWORD *)(v14 + 176) = 0x6D45646C756F6873;
  *(_QWORD *)(v14 + 184) = 0xEA00000000007469;
  v18 = v7 > 0 || v8 > 0;
  v19 = MEMORY[0x24BEE1328];
  *(_BYTE *)(v14 + 192) = v18;
  *(_QWORD *)(v14 + 216) = v19;
  *(_QWORD *)(v14 + 224) = 0x65757165526D756ELL;
  v20 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v14 + 232) = 0xEA00000000007473;
  *(_QWORD *)(v14 + 240) = v7;
  *(_QWORD *)(v14 + 264) = v20;
  strcpy((char *)(v14 + 272), "numPlanCreated");
  *(_BYTE *)(v14 + 287) = -18;
  *(_QWORD *)(v14 + 288) = v48;
  *(_QWORD *)(v14 + 312) = v20;
  *(_QWORD *)(v14 + 320) = 0xD000000000000019;
  *(_QWORD *)(v14 + 328) = 0x8000000240921A10;
  *(_QWORD *)(v14 + 336) = v49;
  *(_QWORD *)(v14 + 360) = v20;
  *(_QWORD *)(v14 + 368) = 0xD000000000000011;
  *(_QWORD *)(v14 + 376) = 0x80000002409217E0;
  *(_QWORD *)(v14 + 384) = v50;
  *(_QWORD *)(v14 + 408) = v20;
  *(_QWORD *)(v14 + 416) = 0xD000000000000010;
  *(_QWORD *)(v14 + 424) = 0x80000002409217C0;
  *(_QWORD *)(v14 + 432) = v51;
  *(_QWORD *)(v14 + 456) = v20;
  *(_QWORD *)(v14 + 464) = 0xD000000000000015;
  *(_QWORD *)(v14 + 472) = 0x8000000240921820;
  *(_QWORD *)(v14 + 480) = v52;
  *(_QWORD *)(v14 + 504) = v20;
  *(_QWORD *)(v14 + 512) = 0xD000000000000020;
  *(_QWORD *)(v14 + 520) = 0x8000000240921A30;
  *(_QWORD *)(v14 + 552) = v20;
  *(_QWORD *)(v14 + 528) = v53;
  *(_QWORD *)(v14 + 560) = 0xD00000000000001CLL;
  *(_QWORD *)(v14 + 568) = 0x8000000240921A60;
  *(_QWORD *)(v14 + 600) = v20;
  *(_QWORD *)(v14 + 576) = v54;
  *(_QWORD *)(v14 + 608) = 0xD00000000000001ALL;
  *(_QWORD *)(v14 + 616) = 0x8000000240921A80;
  *(_QWORD *)(v14 + 648) = v20;
  *(_QWORD *)(v14 + 624) = v55;
  *(_QWORD *)(v14 + 656) = 0xD000000000000017;
  *(_QWORD *)(v14 + 664) = 0x8000000240921AA0;
  *(_QWORD *)(v14 + 696) = v20;
  *(_QWORD *)(v14 + 672) = v8;
  *(_QWORD *)(v14 + 704) = 0xD000000000000010;
  *(_QWORD *)(v14 + 712) = 0x8000000240921AC0;
  *(_QWORD *)(v14 + 744) = v20;
  *(_QWORD *)(v14 + 720) = v56;
  *(_QWORD *)(v14 + 752) = 0x6449656C646E7562;
  *(_QWORD *)(v14 + 760) = 0xE900000000000073;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7D8);
  v15[99] = v21;
  v15[96] = v57;
  v15[100] = 0x7364496C6F6F74;
  v15[101] = 0xE700000000000000;
  v15[105] = v21;
  v15[102] = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_2403A8518((uint64_t)v15);
  v69 = v22;
  if (*((_QWORD *)&v47 + 1))
  {
    v66 = v16;
    v65 = v47;
    sub_2403A9254(&v65, &v67);
    v23 = v68;
  }
  else
  {
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v23 = sub_2403AD9FC();
    v68 = v23;
    *(_QWORD *)&v67 = v24;
  }
  if (v23)
  {
    sub_2403A9254(&v67, &v65);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v65, 0xD000000000000013, 0x8000000240921840, isUniquelyReferenced_nonNull_native);
    v69 = v22;
    swift_bridgeObjectRelease();
    if ((v59 & 1) != 0)
    {
LABEL_12:
      v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v27 = sub_2403AD9FC();
      v68 = v27;
      *(_QWORD *)&v67 = v26;
      goto LABEL_15;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_2403ADA38((uint64_t)&v67);
    sub_2403AA648(0xD000000000000013, 0x8000000240921840, &v65);
    sub_2403ADA38((uint64_t)&v65);
    if ((v59 & 1) != 0)
      goto LABEL_12;
  }
  v66 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v65 = v9;
  sub_2403A9254(&v65, &v67);
  v27 = v68;
LABEL_15:
  if (v27)
  {
    sub_2403A9254(&v67, &v65);
    v28 = v69;
    v29 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v65, 0xD000000000000013, 0x8000000240921AE0, v29);
    v69 = v28;
    swift_bridgeObjectRelease();
    if ((v60 & 1) != 0)
      goto LABEL_17;
  }
  else
  {
    sub_2403ADA38((uint64_t)&v67);
    sub_2403AA648(0xD000000000000013, 0x8000000240921AE0, &v65);
    sub_2403ADA38((uint64_t)&v65);
    if ((v60 & 1) != 0)
    {
LABEL_17:
      v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v68 = sub_2403AD9FC();
      *(_QWORD *)&v67 = v30;
      if (v68)
        goto LABEL_18;
      goto LABEL_29;
    }
  }
  v66 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v65 = v10;
  sub_2403A9254(&v65, &v67);
  if (v68)
  {
LABEL_18:
    sub_2403A9254(&v67, &v65);
    v31 = v69;
    v32 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v65, 0x676E696E6E616C70, 0xEC000000656D6954, v32);
    v69 = v31;
    swift_bridgeObjectRelease();
    if ((v61 & 1) != 0)
      goto LABEL_19;
    goto LABEL_30;
  }
LABEL_29:
  sub_2403ADA38((uint64_t)&v67);
  sub_2403AA648(0x676E696E6E616C70, 0xEC000000656D6954, &v65);
  sub_2403ADA38((uint64_t)&v65);
  if ((v61 & 1) != 0)
  {
LABEL_19:
    v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v68 = sub_2403AD9FC();
    *(_QWORD *)&v67 = v33;
    if (v68)
      goto LABEL_20;
    goto LABEL_31;
  }
LABEL_30:
  v66 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v65 = v11;
  sub_2403A9254(&v65, &v67);
  if (v68)
  {
LABEL_20:
    sub_2403A9254(&v67, &v65);
    v34 = v69;
    v35 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v65, 0x6D69547972657571, 0xE900000000000065, v35);
    v69 = v34;
    swift_bridgeObjectRelease();
    if ((v62 & 1) != 0)
      goto LABEL_21;
    goto LABEL_32;
  }
LABEL_31:
  sub_2403ADA38((uint64_t)&v67);
  sub_2403AA648(0x6D69547972657571, 0xE900000000000065, &v65);
  sub_2403ADA38((uint64_t)&v65);
  if ((v62 & 1) != 0)
  {
LABEL_21:
    v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v68 = sub_2403AD9FC();
    *(_QWORD *)&v67 = v36;
    if (v68)
      goto LABEL_22;
    goto LABEL_33;
  }
LABEL_32:
  v66 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v65 = v12;
  sub_2403A9254(&v65, &v67);
  if (v68)
  {
LABEL_22:
    sub_2403A9254(&v67, &v65);
    v37 = v69;
    v38 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v65, 0x6F69747563657865, 0xED0000656D69546ELL, v38);
    v69 = v37;
    swift_bridgeObjectRelease();
    if ((v63 & 1) != 0)
      goto LABEL_23;
    goto LABEL_34;
  }
LABEL_33:
  sub_2403ADA38((uint64_t)&v67);
  sub_2403AA648(0x6F69747563657865, 0xED0000656D69546ELL, &v65);
  sub_2403ADA38((uint64_t)&v65);
  if ((v63 & 1) != 0)
  {
LABEL_23:
    v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v68 = sub_2403AD9FC();
    *(_QWORD *)&v67 = v39;
    if (v68)
      goto LABEL_24;
    goto LABEL_35;
  }
LABEL_34:
  v66 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v65 = v13;
  sub_2403A9254(&v65, &v67);
  if (v68)
  {
LABEL_24:
    sub_2403A9254(&v67, &v65);
    v40 = v69;
    v41 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v65, 0xD000000000000017, 0x80000002408E8FE0, v41);
    v69 = v40;
    swift_bridgeObjectRelease();
    if (v64)
      goto LABEL_25;
LABEL_36:
    v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v68 = sub_2403AD9FC();
    *(_QWORD *)&v67 = v45;
    if (v68)
      goto LABEL_26;
LABEL_37:
    sub_2403ADA38((uint64_t)&v67);
    sub_2403AA648(0x496572756C696166, 0xEB000000006F666ELL, &v65);
    sub_2403ADA38((uint64_t)&v65);
    return v69;
  }
LABEL_35:
  sub_2403ADA38((uint64_t)&v67);
  sub_2403AA648(0xD000000000000017, 0x80000002408E8FE0, &v65);
  sub_2403ADA38((uint64_t)&v65);
  if (!v64)
    goto LABEL_36;
LABEL_25:
  v42 = sub_240509730();
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA678);
  *(_QWORD *)&v65 = v42;
  sub_2403A9254(&v65, &v67);
  if (!v68)
    goto LABEL_37;
LABEL_26:
  sub_2403A9254(&v67, &v65);
  v43 = v69;
  v44 = swift_isUniquelyReferenced_nonNull_native();
  sub_2403AC1CC(&v65, 0x496572756C696166, 0xEB000000006F666ELL, v44);
  swift_bridgeObjectRelease();
  return v43;
}

unint64_t sub_2403B2274()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = RequestGrainLatency.dictionary.getter();
  v1 = sub_2403AEB7C(v0, 1);
  v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
    return v1;
  else
    return 0xD00000000000002ALL;
}

unint64_t static RequestGrainLatency.coreAnalyticsEventName.getter()
{
  return 0xD00000000000002ELL;
}

unint64_t RequestGrainLatency.coreAnalyticsEventDictionary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t inited;
  unint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  id v15;
  char v16;
  unint64_t v17;
  id v18;
  char v19;
  id v20;
  char v21;
  unint64_t v22;
  id v23;
  char v24;
  id v25;
  char v26;
  unint64_t v27;
  id v28;
  char v29;
  id v31;
  char v32;
  unint64_t v33;
  id v34;
  char v35;
  id v36;
  char v37;
  unint64_t v38;
  id v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v45 = *(_QWORD *)(v0 + 112);
  v46 = *(_QWORD *)(v0 + 120);
  v47 = *(_QWORD *)(v0 + 136);
  v48 = *(_QWORD *)(v0 + 144);
  v49 = *(_QWORD *)(v0 + 152);
  v50 = *(_QWORD *)(v0 + 168);
  v6 = *(double *)(v0 + 192);
  v51 = *(_BYTE *)(v0 + 200);
  v7 = *(double *)(v0 + 208);
  v8 = *(double *)(v0 + 224);
  v41 = *(_BYTE *)(v0 + 216);
  v42 = *(_BYTE *)(v0 + 232);
  v9 = *(double *)(v0 + 240);
  v10 = *(double *)(v0 + 256);
  v43 = *(_BYTE *)(v0 + 248);
  v44 = *(_BYTE *)(v0 + 264);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2408E8FD0;
  *(_QWORD *)(inited + 32) = 0x6552746E65696C63;
  *(_QWORD *)(inited + 40) = 0xEF64497473657571;
  *(_QWORD *)(inited + 48) = sub_2408E5CE4();
  *(_QWORD *)(inited + 56) = 0x65757165526D756ELL;
  *(_QWORD *)(inited + 64) = 0xEA00000000007473;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v1);
  strcpy((char *)(inited + 80), "numPlanCreated");
  *(_BYTE *)(inited + 95) = -18;
  *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v2);
  *(_QWORD *)(inited + 104) = 0xD000000000000019;
  *(_QWORD *)(inited + 112) = 0x8000000240921A10;
  *(_QWORD *)(inited + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v3);
  *(_QWORD *)(inited + 128) = 0xD000000000000011;
  *(_QWORD *)(inited + 136) = 0x80000002409217E0;
  *(_QWORD *)(inited + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v4);
  *(_QWORD *)(inited + 152) = 0xD000000000000010;
  *(_QWORD *)(inited + 160) = 0x80000002409217C0;
  *(_QWORD *)(inited + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v5);
  *(_QWORD *)(inited + 176) = 0xD000000000000015;
  *(_QWORD *)(inited + 184) = 0x8000000240921820;
  *(_QWORD *)(inited + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v45);
  *(_QWORD *)(inited + 200) = 0xD000000000000020;
  *(_QWORD *)(inited + 208) = 0x8000000240921A30;
  *(_QWORD *)(inited + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v46);
  *(_QWORD *)(inited + 224) = 0xD00000000000001ALL;
  *(_QWORD *)(inited + 232) = 0x8000000240921A80;
  *(_QWORD *)(inited + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v47);
  *(_QWORD *)(inited + 248) = 0xD000000000000017;
  *(_QWORD *)(inited + 256) = 0x8000000240921AA0;
  *(_QWORD *)(inited + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v48);
  *(_QWORD *)(inited + 272) = 0xD000000000000010;
  *(_QWORD *)(inited + 280) = 0x8000000240921AC0;
  *(_QWORD *)(inited + 288) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, v49);
  *(_QWORD *)(inited + 296) = 0xD000000000000019;
  *(_QWORD *)(inited + 304) = 0x8000000240921B30;
  *(_QWORD *)(inited + 312) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 0);
  *(_QWORD *)(inited + 320) = 0xD000000000000012;
  *(_QWORD *)(inited + 328) = 0x8000000240921B50;
  *(_QWORD *)(inited + 336) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 0);
  *(_QWORD *)(inited + 344) = 0x6D69547972657571;
  *(_QWORD *)(inited + 352) = 0xEF746E756F635F65;
  *(_QWORD *)(inited + 360) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 0);
  *(_QWORD *)(inited + 368) = 0xD000000000000013;
  *(_QWORD *)(inited + 376) = 0x8000000240921B70;
  *(_QWORD *)(inited + 384) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 0);
  *(_QWORD *)(inited + 392) = 0xD00000000000001DLL;
  *(_QWORD *)(inited + 400) = 0x8000000240921B90;
  *(_QWORD *)(inited + 408) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 0);
  v12 = sub_2403A864C(inited);
  if (v50)
  {
    v13 = sub_2408E5CE4();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC2FC(v13, 0xD000000000000013, 0x8000000240921840, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  if ((v51 & 1) == 0)
  {
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, v6);
    v16 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC2FC((uint64_t)v15, 0xD000000000000013, 0x8000000240921AE0, v16);
    v17 = v12;
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC2FC((uint64_t)v18, 0xD000000000000019, 0x8000000240921B30, v19);
    v12 = v17;
    swift_bridgeObjectRelease();
    if ((v41 & 1) != 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  if ((v41 & 1) == 0)
  {
LABEL_7:
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), (SEL)&classRef_PNRProvisionalSageFailureInfo + 6, v7);
    v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC2FC((uint64_t)v20, 0x676E696E6E616C70, 0xEC000000656D6954, v21);
    v22 = v12;
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1);
    v24 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC2FC((uint64_t)v23, 0xD000000000000012, 0x8000000240921B50, v24);
    v12 = v22;
    swift_bridgeObjectRelease();
  }
LABEL_8:
  if ((v42 & 1) != 0)
  {
    if ((v43 & 1) != 0)
      goto LABEL_10;
LABEL_14:
    v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), (SEL)&classRef_PNRProvisionalSageFailureInfo + 6, v9);
    v37 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC2FC((uint64_t)v36, 0x6F69747563657865, 0xED0000656D69546ELL, v37);
    v38 = v12;
    swift_bridgeObjectRelease();
    v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1);
    v40 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC2FC((uint64_t)v39, 0xD000000000000013, 0x8000000240921B70, v40);
    v12 = v38;
    swift_bridgeObjectRelease();
    if ((v44 & 1) != 0)
      return v12;
    goto LABEL_11;
  }
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), (SEL)&classRef_PNRProvisionalSageFailureInfo + 6, v8);
  v32 = swift_isUniquelyReferenced_nonNull_native();
  sub_2403AC2FC((uint64_t)v31, 0x6D69547972657571, 0xE900000000000065, v32);
  v33 = v12;
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1);
  v35 = swift_isUniquelyReferenced_nonNull_native();
  sub_2403AC2FC((uint64_t)v34, 0x6D69547972657571, 0xEF746E756F635F65, v35);
  v12 = v33;
  swift_bridgeObjectRelease();
  if ((v43 & 1) == 0)
    goto LABEL_14;
LABEL_10:
  if ((v44 & 1) == 0)
  {
LABEL_11:
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), (SEL)&classRef_PNRProvisionalSageFailureInfo + 6, v10);
    v26 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC2FC((uint64_t)v25, 0xD000000000000017, 0x80000002408E8FE0, v26);
    v27 = v12;
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, 1);
    v29 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC2FC((uint64_t)v28, 0xD00000000000001DLL, 0x8000000240921B90, v29);
    v12 = v27;
    swift_bridgeObjectRelease();
  }
  return v12;
}

unint64_t sub_2403B2B18()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_2403B2B38()
{
  uint64_t v0;
  double v1;
  int v2;
  double v3;
  int v4;
  double v5;
  int v6;
  double v7;
  int v8;
  uint64_t inited;
  double v10;
  double v11;
  double v12;
  double v13;
  unint64_t v14;
  uint64_t v15;

  v1 = *(double *)(v0 + 192);
  v2 = *(unsigned __int8 *)(v0 + 200);
  v3 = *(double *)(v0 + 208);
  v4 = *(unsigned __int8 *)(v0 + 216);
  v5 = *(double *)(v0 + 240);
  v6 = *(unsigned __int8 *)(v0 + 248);
  v7 = *(double *)(v0 + 256);
  v8 = *(unsigned __int8 *)(v0 + 264);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2408E8FE0;
  *(_QWORD *)(inited + 32) = swift_getKeyPath();
  if (v4)
    v10 = 0.0;
  else
    v10 = v3;
  *(double *)(inited + 40) = v10;
  *(_QWORD *)(inited + 48) = swift_getKeyPath();
  if (v6)
    v11 = 0.0;
  else
    v11 = v5;
  *(double *)(inited + 56) = v11;
  *(_QWORD *)(inited + 64) = swift_getKeyPath();
  if (v2)
    v12 = 0.0;
  else
    v12 = v1;
  *(double *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = swift_getKeyPath();
  if (v8)
    v13 = 0.0;
  else
    v13 = v7;
  *(double *)(inited + 88) = v13;
  v14 = sub_2403A8764(inited);
  v15 = sub_24040E168(v14);
  swift_bridgeObjectRelease();
  return v15;
}

BOOL RequestGrainLatency.SELFShouldEmit.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BOOL8 result;

  v1 = v0[21];
  if (!v1)
    return 0;
  v2 = v0[9];
  v3 = v0[18];
  if (v0[20] == 0xD00000000000001ELL && v1 == 0x8000000240921BB0)
    return v2 > 0 || v3 > 0;
  v4 = sub_2408E617C();
  result = 0;
  if ((v4 & 1) != 0)
    return v2 > 0 || v3 > 0;
  return result;
}

void __swiftcall RequestGrainLatency.createSELFEvent()(PNRProvisionalSagePnRWrapper_optional *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  id v11;
  int64_t v12;
  id v13;
  id v14;
  __int128 *v15;
  __int128 *v16;
  void *v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  unint64_t i;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  double v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _DWORD *v68;
  uint64_t v69;
  void *v70;
  void *v71;
  id v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85[8];
  char v86;
  _BYTE v87[7];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  void *v104;
  id v105;

  v80 = *(_QWORD *)(v1 + 8);
  v81 = *(_QWORD *)v1;
  v82 = *(_QWORD *)(v1 + 24);
  v83 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 48);
  v78 = *(_QWORD *)(v1 + 40);
  v79 = *(_QWORD *)(v1 + 32);
  v84 = *(unsigned __int8 *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v75 = *(_QWORD *)(v1 + 56);
  v76 = *(_QWORD *)(v1 + 96);
  v6 = *(_QWORD *)(v1 + 104);
  v7 = *(_QWORD *)(v1 + 176);
  v77 = *(_QWORD *)(v1 + 184);
  v8 = *(void **)(v1 + 272);
  v9 = objc_msgSend(objc_allocWithZone((Class)PNRProvisionalSagePnRWrapper), sel_init);
  if (v9)
  {
    v10 = v9;
    v73 = v2;
    v74 = v8;
    v11 = objc_msgSend(objc_allocWithZone((Class)PNRProvisionalSagePnREvent), sel_init);
    if (v11)
    {
      v12 = (int64_t)v11;
      v72 = objc_msgSend(objc_allocWithZone((Class)PNRProvisionalSagePnRMetadata), sel_init);
      if (!v72)
      {
        if (qword_256FFA0B8 == -1)
        {
LABEL_38:
          v42 = sub_2408E5C48();
          __swift_project_value_buffer(v42, (uint64_t)qword_2570724B0);
          LOBYTE(v85[0]) = 16;
          sub_2408B4A30(0xD00000000000002ALL, 0x8000000240921C00, (char *)v85);
LABEL_42:

          return;
        }
LABEL_72:
        swift_once();
        goto LABEL_38;
      }
      v13 = objc_msgSend(objc_allocWithZone((Class)PNRProvisionalRequestGrainMetricsDimension), sel_init);
      if (!v13)
      {
        if (qword_256FFA0B8 != -1)
          swift_once();
        v43 = sub_2408E5C48();
        __swift_project_value_buffer(v43, (uint64_t)qword_2570724B0);
        LOBYTE(v85[0]) = 16;
        sub_2408B4A30(0xD00000000000002ALL, 0x8000000240921C00, (char *)v85);

        goto LABEL_42;
      }
      v105 = v13;
      if (v3 < (uint64_t)0xFFFFFFFF80000000)
        goto LABEL_64;
      if (v3 > 0x7FFFFFFF)
      {
LABEL_65:
        __break(1u);
      }
      else
      {
        v14 = v13;
        objc_msgSend(v14, sel_setNumQueries_, v3);
        if (v4 >= (uint64_t)0xFFFFFFFF80000000)
        {
          if (v4 <= 0x7FFFFFFF)
          {
            objc_msgSend(v14, sel_setNumPlansCreated_, v4);
            if (v6 >= (uint64_t)0xFFFFFFFF80000000)
            {
              if (v6 <= 0x7FFFFFFF)
              {
                objc_msgSend(v14, sel_setNumActionsCreated_, v6);
                if (v5 >= (uint64_t)0xFFFFFFFF80000000)
                {
                  v70 = (void *)v12;
                  v71 = v10;
                  if (v5 <= 0x7FFFFFFF)
                  {
                    v68 = (_DWORD *)(v1 + 65);
                    v15 = (__int128 *)(v1 + 112);
                    v16 = (__int128 *)(v1 + 192);
                    objc_msgSend(v14, sel_setNumResponsePlansCreated_, v5);
                    v69 = v7;
                    v17 = (void *)sub_2408E5D8C();
                    objc_msgSend(v14, sel_setBundleIds_, v17);

                    v18 = (void *)sub_2408E5D8C();
                    objc_msgSend(v14, sel_setToolIds_, v18);

                    v85[0] = v81;
                    v85[1] = v80;
                    v85[2] = v83;
                    v85[3] = v82;
                    v85[4] = v79;
                    v85[5] = v78;
                    v85[6] = v73;
                    v85[7] = v75;
                    v86 = v84;
                    *(_DWORD *)v87 = *v68;
                    *(_DWORD *)&v87[3] = *(_DWORD *)((char *)v68 + 3);
                    v88 = v3;
                    v89 = v4;
                    v90 = v5;
                    v91 = v76;
                    v92 = v6;
                    v19 = *v15;
                    v20 = v15[1];
                    v21 = v15[3];
                    v95 = v15[2];
                    v96 = v21;
                    v94 = v20;
                    v93 = v19;
                    v97 = v69;
                    v98 = v77;
                    v22 = v16[4];
                    v23 = v16[2];
                    v102 = v16[3];
                    v103 = v22;
                    v24 = v16[1];
                    v99 = *v16;
                    v100 = v24;
                    v101 = v23;
                    v104 = v74;
                    v25 = sub_2403B2B38();
                    v10 = (_QWORD *)v25;
                    v12 = 0;
                    v26 = v25 + 64;
                    v27 = 1 << *(_BYTE *)(v25 + 32);
                    v28 = -1;
                    if (v27 < 64)
                      v28 = ~(-1 << v27);
                    v29 = v28 & *(_QWORD *)(v25 + 64);
                    v30 = (unint64_t)(v27 + 63) >> 6;
                    if (!v29)
                      goto LABEL_17;
LABEL_16:
                    v31 = __clz(__rbit64(v29));
                    v29 &= v29 - 1;
                    for (i = v31 | (v12 << 6); ; i = __clz(__rbit64(v34)) + (v12 << 6))
                    {
                      v36 = *(double *)(v10[7] + 8 * i);
                      v37 = objc_allocWithZone((Class)PNRProvisionalMetrics);
                      swift_retain();
                      v38 = objc_msgSend(v37, sel_init);
                      if (!v38)
                      {
                        if (qword_256FFA0B8 != -1)
                          swift_once();
                        v44 = sub_2408E5C48();
                        __swift_project_value_buffer(v44, (uint64_t)qword_2570724B0);
                        LOBYTE(v85[0]) = 16;
                        sub_2408B4A30(0xD000000000000022, 0x8000000240921C30, (char *)v85);
                        swift_release();

                        swift_release();
                        return;
                      }
                      v39 = v38;
                      objc_msgSend(v38, sel_setMetricsValue_, v36);
                      v85[0] = (uint64_t)v39;
                      v40 = v39;
                      swift_setAtWritableKeyPath();

                      swift_release();
                      if (v29)
                        goto LABEL_16;
LABEL_17:
                      v33 = v12 + 1;
                      if (__OFADD__(v12, 1))
                      {
                        __break(1u);
                        goto LABEL_62;
                      }
                      if (v33 >= v30)
                      {
LABEL_46:
                        swift_release();
                        v45 = (void *)sub_2408E5CE4();
                        objc_msgSend(v72, sel_setClientRequestId_, v45);

                        v46 = (void *)sub_2408E5CE4();
                        objc_msgSend(v72, sel_setSessionId_, v46);

                        v47 = (void *)sub_2408E5CE4();
                        objc_msgSend(v72, sel_setRawSessionId_, v47);

                        if (v84)
                        {
                          v49 = v70;
                          v48 = v71;
                          v50 = v74;
                          if (v84 != 1)
                            __asm { BR              X9 }
                        }
                        else
                        {
                          v49 = v70;
                          v48 = v71;
                          v50 = v74;
                        }
                        v51 = (void *)sub_2408E5CE4();
                        swift_bridgeObjectRelease();
                        objc_msgSend(v72, sel_setRequestStatus_, v51);

                        v52 = v105;
                        if (v50)
                          v50 = (void *)sub_240509104();
                        objc_msgSend(v105, sel_setFailureInfo_, v50);

                        objc_msgSend(v49, sel_setSagePnRMetadata_, v72);
                        objc_msgSend(v49, sel_setRequestGrainMetricsDimension_, v105);
                        objc_msgSend(v48, sel_setSagePnR_, v49);
                        if (qword_256FFA0B8 != -1)
                          swift_once();
                        v53 = sub_2408E5C48();
                        __swift_project_value_buffer(v53, (uint64_t)qword_2570724B0);
                        v54 = v48;
                        v55 = sub_2408E5C3C();
                        v56 = sub_2408E5EA0();
                        if (os_log_type_enabled(v55, v56))
                        {
                          v57 = swift_slowAlloc();
                          v58 = swift_slowAlloc();
                          v85[0] = v58;
                          *(_DWORD *)v57 = 136315394;
                          v59 = objc_msgSend(v54, sel_qualifiedMessageName);
                          v60 = sub_2408E5D08();
                          v62 = v61;

                          sub_2403B3ED0(v60, v62, v85);
                          sub_2408E5F3C();

                          swift_bridgeObjectRelease();
                          *(_WORD *)(v57 + 12) = 2080;
                          v63 = objc_msgSend(v54, sel_formattedJsonBody);
                          if (v63)
                          {
                            v64 = v63;
                            v65 = sub_2408E5D08();
                            v67 = v66;

                          }
                          else
                          {
                            v67 = 0xE500000000000000;
                            v65 = 0x3E4C494E3CLL;
                          }
                          sub_2403B3ED0(v65, v67, v85);
                          sub_2408E5F3C();

                          swift_bridgeObjectRelease();
                          _os_log_impl(&dword_240347000, v55, v56, "Creating PnR provisional transcript events %s: %s", (uint8_t *)v57, 0x16u);
                          swift_arrayDestroy();
                          MEMORY[0x242684668](v58, -1, -1);
                          MEMORY[0x242684668](v57, -1, -1);

                        }
                        else
                        {

                        }
                        return;
                      }
                      v34 = *(_QWORD *)(v26 + 8 * v33);
                      ++v12;
                      if (!v34)
                      {
                        v12 = v33 + 1;
                        if (v33 + 1 >= v30)
                          goto LABEL_46;
                        v34 = *(_QWORD *)(v26 + 8 * v12);
                        if (!v34)
                        {
                          v12 = v33 + 2;
                          if (v33 + 2 >= v30)
                            goto LABEL_46;
                          v34 = *(_QWORD *)(v26 + 8 * v12);
                          if (!v34)
                          {
                            v35 = v33 + 3;
                            if (v35 >= v30)
                              goto LABEL_46;
                            v34 = *(_QWORD *)(v26 + 8 * v35);
                            if (!v34)
                            {
                              while (1)
                              {
                                v12 = v35 + 1;
                                if (__OFADD__(v35, 1))
                                  break;
                                if (v12 >= v30)
                                  goto LABEL_46;
                                v34 = *(_QWORD *)(v26 + 8 * v12);
                                ++v35;
                                if (v34)
                                  goto LABEL_30;
                              }
                              __break(1u);
LABEL_64:
                              __break(1u);
                              goto LABEL_65;
                            }
                            v12 = v35;
                          }
                        }
                      }
LABEL_30:
                      v29 = (v34 - 1) & v34;
                    }
                  }
                  goto LABEL_71;
                }
LABEL_70:
                __break(1u);
LABEL_71:
                __break(1u);
                goto LABEL_72;
              }
LABEL_69:
              __break(1u);
              goto LABEL_70;
            }
LABEL_68:
            __break(1u);
            goto LABEL_69;
          }
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
      }
      __break(1u);
      goto LABEL_67;
    }

  }
  if (qword_256FFA0B8 != -1)
LABEL_62:
    swift_once();
  v41 = sub_2408E5C48();
  __swift_project_value_buffer(v41, (uint64_t)qword_2570724B0);
  LOBYTE(v85[0]) = 16;
  sub_2408B4A30(0xD000000000000029, 0x8000000240921BD0, (char *)v85);
}

uint64_t static RequestGrainLatency.signpostEventName.getter()
{
  return sub_2408E5F9C();
}

BOOL RequestGrainLatency.signpostShouldEmit.getter()
{
  uint64_t v0;

  return *(uint64_t *)(v0 + 72) > 0 || *(_QWORD *)(v0 + 144) > 0;
}

Swift::Void __swiftcall RequestGrainLatency.emitSignpost()()
{
  const void *v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  char *v29;
  NSObject *v30;
  void (*v31)(char *, char *, uint64_t);
  uint8_t *v32;
  void *v33;
  void *v34;
  char *v35;
  os_signpost_id_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  void *v39;
  void *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  _BYTE v54[280];
  uint64_t v55;

  v1 = v0;
  v55 = *MEMORY[0x24BDAC8D0];
  v2 = sub_2408E5C0C();
  v51 = *(_QWORD *)(v2 - 8);
  v3 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v49 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)&v44 - v5;
  v6 = sub_2408E5C48();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2408E5C30();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v54, v1, sizeof(v54));
  if (qword_256FFA0B8 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v6, (uint64_t)qword_2570724B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
  sub_2408E5C18();
  v15 = (void *)objc_opt_self();
  RequestGrainLatency.dictionary.getter();
  v16 = (void *)sub_2408E5C90();
  swift_bridgeObjectRelease();
  v53 = 0;
  v17 = objc_msgSend(v15, sel_dataWithJSONObject_options_error_, v16, 0, &v53);

  v18 = v53;
  if (v17)
  {
    v19 = v2;
    v48 = v11;
    v20 = sub_2408E5564();
    v22 = v21;

    v23 = sub_2408E5D2C();
    MEMORY[0x24BDAC7A8](v23);
    sub_2408E5D20();
    v24 = sub_2408E5D14();
    if (v25)
    {
      v26 = v24;
      v27 = v25;
      v47 = v10;
      if (qword_256FFA0D8 != -1)
        swift_once();
      v28 = (id)qword_2570724D0;
      v29 = v50;
      sub_2408E5BF4();
      swift_bridgeObjectRetain();
      v30 = sub_2408E5C24();
      v46 = sub_2408E5ED0();
      if ((sub_2408E5F00() & 1) != 0)
      {
        v31 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
        v45 = v19;
        v31(v49, v29, v19);
        v32 = (uint8_t *)swift_slowAlloc();
        v33 = (void *)swift_slowAlloc();
        v44 = v22;
        v34 = v33;
        v53 = v33;
        *(_DWORD *)v32 = 136446210;
        swift_bridgeObjectRetain();
        v52 = sub_2403B3ED0(v26, v27, (uint64_t *)&v53);
        sub_2408E5F3C();
        swift_bridgeObjectRelease_n();
        v35 = v49;
        v36 = sub_2408E5C00();
        _os_signpost_emit_with_name_impl(&dword_240347000, v30, (os_signpost_type_t)v46, v36, "RequestGrain", "%{public, signpost.description=attribute,public}s", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242684668](v34, -1, -1);
        MEMORY[0x242684668](v32, -1, -1);
        sub_240363D58(v20, v44);

        v37 = *(void (**)(char *, uint64_t))(v51 + 8);
        v38 = v45;
        v37(v50, v45);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v47);
        v37(v35, v38);
      }
      else
      {
        sub_240363D58(v20, v22);
        swift_bridgeObjectRelease_n();

        (*(void (**)(char *, uint64_t))(v51 + 8))(v29, v19);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v47);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v10);
      sub_240363D58(v20, v22);
    }
  }
  else
  {
    v39 = v18;
    v40 = (void *)sub_2408E5534();

    swift_willThrow();
    v41 = sub_2408E5C3C();
    v42 = sub_2408E5EAC();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_240347000, v41, v42, "Failed to parse results as JSON String and emit OSSignposts for RequestGrain", v43, 2u);
      MEMORY[0x242684668](v43, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_2403B3D2C()
{
  return sub_2408E5F9C();
}

BOOL sub_2403B3D40()
{
  uint64_t v0;

  return *(uint64_t *)(v0 + 72) > 0 || *(_QWORD *)(v0 + 144) > 0;
}

uint64_t sub_2403B3D5C(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_2403B3D6C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_2403B3DA0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (result)
    *a2 = result;
  else
    __break(1u);
  return result;
}

void sub_2403B3DB0(uint8_t *a1, uint32_t a2, NSObject *a3, os_signpost_type_t a4, uint64_t a5, const char *a6, const char *a7)
{
  os_signpost_id_t v13;

  v13 = sub_2408E5C00();
  _os_signpost_emit_with_name_impl(&dword_240347000, a3, a4, v13, a6, a7, a1, a2);
}

uint64_t sub_2403B3E30(uint64_t (*a1)(void))
{
  return a1();
}

_BYTE **sub_2403B3E50(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_2403B3E60(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_2403B3ED0(v6, v7, a3);
  v8 = *a1 + 8;
  sub_2408E5F3C();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_2403B3ED0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_2403B3FA0(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_2403AE230((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_2403AE230((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_2403B3FA0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_2408E5F48();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_2403B4158(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_2408E5FCC();
  if (!v8)
  {
    sub_2408E6020();
    __break(1u);
LABEL_17:
    result = sub_2408E6068();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_2403B4158(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_2403B41EC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2403B43C4(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_2403B43C4(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2403B41EC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2403B4360(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_2408E5F90();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_2408E6020();
      __break(1u);
LABEL_10:
      v2 = sub_2408E5D5C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_2408E6068();
    __break(1u);
LABEL_14:
    result = sub_2408E6020();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2403B4360(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7E8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_2403B43C4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_2408E6068();
  __break(1u);
  return result;
}

uint64_t destroy for RequestGrainLatency(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2403ADB34(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for RequestGrainLatency(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2403ADAA8(v7, v8, v9);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v10 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v10;
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  v11 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v11;
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  v12 = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = v12;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RequestGrainLatency(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(_BYTE *)(a2 + 64);
  sub_2403ADAA8(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  v9 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v6;
  sub_2403ADB34(v7, v8, v9);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v10;
  v11 = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = v11;
  v12 = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = v12;
  v13 = *(_QWORD *)(a2 + 240);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = v13;
  v14 = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = v14;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy280_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t assignWithTake for RequestGrainLatency(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 64);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v7;
  sub_2403ADB34(v8, v9, v10);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  v11 = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = v11;
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestGrainLatency(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 280))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestGrainLatency(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 280) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 280) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestGrainLatency()
{
  return &type metadata for RequestGrainLatency;
}

char *keypath_get_selector_planningTime()
{
  return sel_planningTime;
}

id sub_2403B4A90@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_planningTime);
  *a2 = result;
  return result;
}

id sub_2403B4AC8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlanningTime_, *a1);
}

char *keypath_get_selector_executionTime()
{
  return sel_executionTime;
}

id sub_2403B4AE8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_executionTime);
  *a2 = result;
  return result;
}

id sub_2403B4B20(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setExecutionTime_, *a1);
}

char *keypath_get_selector_fullQueryResponseTime()
{
  return sel_fullQueryResponseTime;
}

id sub_2403B4B40@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_fullQueryResponseTime);
  *a2 = result;
  return result;
}

id sub_2403B4B78(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFullQueryResponseTime_, *a1);
}

char *keypath_get_selector_responsePreparationTime()
{
  return sel_responsePreparationTime;
}

id sub_2403B4B98@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_responsePreparationTime);
  *a2 = result;
  return result;
}

id sub_2403B4BD0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setResponsePreparationTime_, *a1);
}

uint64_t sub_2403B4BE8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2403B3D6C(a1, a2, a3, a4);
}

uint64_t dispatch thunk of IELatencyCalculator.extractLatencies(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

id sub_2403B4C08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v26;

  v2 = type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA800);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95048]), sel_init);
  sub_2403A9210(a1, (uint64_t)v7, &qword_256FFA7F8);
  v12 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12) == 1)
  {
    sub_2403B4F08((uint64_t)v7);
    v13 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  else
  {
    sub_2403A9210((uint64_t)v7, (uint64_t)v10, &qword_256FFA800);
    sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeIdentifier);
    v14 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v10, 1, v14) != 1)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_2403B4F48((uint64_t)v10, (uint64_t)v4);
        if (v11)
        {
          v15 = objc_allocWithZone(MEMORY[0x24BE94E70]);
          v16 = v11;
          v17 = objc_msgSend(v15, sel_init);
          v18 = v17;
          if (v17)
          {
            v19 = v17;
            v20 = (void *)sub_2408E5CE4();
            objc_msgSend(v19, sel_setBundleId_, v20);

            v21 = v19;
            v22 = (void *)sub_2408E5CE4();
            objc_msgSend(v21, sel_setCustomTypeName_, v22);

          }
          objc_msgSend(v16, sel_setCustom_, v18);

        }
        sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoTypeIdentifier.Custom);
      }
      else
      {
        sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypeIdentifierKind);
        v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94F48]), sel_init);
        v24 = v23;
        if (v23)
          objc_msgSend(v23, sel_setExists_, 1);
        objc_msgSend(v11, sel_setPrimitive_, v24);

      }
    }
  }
  return v11;
}

uint64_t sub_2403B4F08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2403B4F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RequestGrainLatencyCalculator.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t RequestGrainLatencyCalculator.init()()
{
  uint64_t v0;

  return v0;
}

void sub_2403B4FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _QWORD **a9)
{
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint8_t *v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _BYTE __src[288];

  if (qword_256FFA0A8 != -1)
    swift_once();
  v17 = sub_2408E5C48();
  __swift_project_value_buffer(v17, (uint64_t)qword_257072498);
  v18 = sub_2408E5C3C();
  v19 = sub_2408E5EC4();
  if (os_log_type_enabled(v18, v19))
  {
    v33 = a1;
    v20 = a2;
    v21 = a3;
    v22 = a4;
    v23 = a5;
    v24 = a6;
    v25 = a7;
    v26 = a8;
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_240347000, v18, v19, "RequestGrainLatencyCalculator - building latency record", v27, 2u);
    v28 = v27;
    a8 = v26;
    a7 = v25;
    a6 = v24;
    a5 = v23;
    a4 = v22;
    a3 = v21;
    a2 = v20;
    a1 = v33;
    MEMORY[0x242684668](v28, -1, -1);
  }

  if (a1)
  {
    sub_2403B5DB0(a2, a3, a4, a5, a6, a7, a8, (uint64_t)__src);
    swift_beginAccess();
    v29 = *a9;
    sub_2403B7F5C((uint64_t)__src);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a9 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v29 = sub_24050A410(0, v29[2] + 1, 1, v29);
      *a9 = v29;
    }
    v32 = v29[2];
    v31 = v29[3];
    if (v32 >= v31 >> 1)
    {
      v29 = sub_24050A410((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
      *a9 = v29;
    }
    v29[2] = v32 + 1;
    memcpy(&v29[35 * v32 + 4], __src, 0x118uLL);
    swift_endAccess();
    sub_2403B8000((uint64_t)__src);
  }
}

uint64_t RequestGrainLatencyCalculator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t RequestGrainLatencyCalculator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2403B51F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t EnumCaseMultiPayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;

  v2 = type metadata accessor for TranscriptProtoSessionError(0);
  MEMORY[0x24BDAC7A8](v2);
  v85 = (uint64_t)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x24BDAC7A8](v4);
  v86 = (uint64_t)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v82 - v10);
  v83 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x24BDAC7A8](v83);
  v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  MEMORY[0x24BDAC7A8](v17);
  v84 = (uint64_t)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TranscriptProtoRequest(0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (uint64_t)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v88 = (uint64_t)&v82 - v29;
  if (sub_2403B683C(a1))
  {
    v30 = *(_QWORD *)(a1 + 72);
    v31 = v87;
    v87[14] = *(_QWORD *)(a1 + 64);
    v31[15] = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  EnumCaseMultiPayload = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(EnumCaseMultiPayload + 44), (uint64_t)v24, &qword_256FFA490);
  v33 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v24, 1, v33) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA490);
    v34 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    v35 = v88;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v88, 1, 1, v34);
    v36 = v35;
    return sub_2403A97FC(v36, &qword_256FFA488);
  }
  v82 = v13;
  v37 = v88;
  sub_2403A9210((uint64_t)v24, v88, &qword_256FFA488);
  sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoPayload);
  v38 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v39 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38) == 1;
  v36 = v37;
  if (v39)
    return sub_2403A97FC(v36, &qword_256FFA488);
  sub_2403A9210(v37, v28, &qword_256FFA488);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      EnumCaseMultiPayload = (uint64_t)type metadata accessor for TranscriptProtoRequest;
      sub_2403A91CC(v28, v21, type metadata accessor for TranscriptProtoRequest);
      sub_2403A9210(v21 + *(int *)(v19 + 20), (uint64_t)v16, &qword_256FFA350);
      sub_240388AE4(v21, type metadata accessor for TranscriptProtoRequest);
      v40 = type metadata accessor for TranscriptProtoRequestContent(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v16, 1, v40) == 1)
      {
        sub_2403A97FC((uint64_t)v16, &qword_256FFA350);
        v41 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
        v28 = v84;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v84, 1, 1, v41);
LABEL_28:
        sub_2403A97FC(v28, &qword_256FFA348);
        v65 = v87;
        goto LABEL_29;
      }
      v28 = v84;
      sub_2403A9210((uint64_t)v16, v84, &qword_256FFA348);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoRequestContent);
      EnumCaseMultiPayload = type metadata accessor for TranscriptProtoRequestContentEnum(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(EnumCaseMultiPayload - 8) + 48))(v28, 1, EnumCaseMultiPayload) == 1)goto LABEL_28;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      sub_240388AE4(v28, type metadata accessor for TranscriptProtoRequestContentEnum);
      v65 = v87;
      if ((_DWORD)EnumCaseMultiPayload == 2)
      {
        v70 = v87[11];
        v43 = __OFADD__(v70, 1);
        v71 = v70 + 1;
        v36 = v88;
        if (v43)
        {
          __break(1u);
          JUMPOUT(0x2403B5B44);
        }
        v87[11] = v71;
        return sub_2403A97FC(v36, &qword_256FFA488);
      }
LABEL_29:
      v66 = v65[2];
      v43 = __OFADD__(v66, 1);
      v67 = v66 + 1;
      v36 = v88;
      if (v43)
        goto LABEL_63;
      v65[2] = v67;
      return sub_2403A97FC(v36, &qword_256FFA488);
    case 4u:
      v42 = v87[3];
      v43 = __OFADD__(v42, 1);
      v44 = v42 + 1;
      if (!v43)
      {
        v87[3] = v44;
        goto LABEL_22;
      }
      __break(1u);
      goto LABEL_57;
    case 5u:
      v38 = (uint64_t)v82;
      sub_2403A91CC(v28, (uint64_t)v82, type metadata accessor for TranscriptProtoAction);
      v45 = v87;
      v46 = v87[6];
      v43 = __OFADD__(v46, 1);
      v47 = v46 + 1;
      if (v43)
      {
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      v87[6] = v47;
      sub_2403A9210(a1 + *(int *)(EnumCaseMultiPayload + 60), (uint64_t)v11, &qword_256FFA4A8);
      v48 = type metadata accessor for TranscriptProtoParticipantID(0);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v11, 1, v48) == 1)
      {
        sub_2403A97FC((uint64_t)v11, &qword_256FFA4A8);
        goto LABEL_55;
      }
      v69 = *v11;
      v68 = v11[1];
      swift_bridgeObjectRetain();
      sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoParticipantID);
      if (v69 == 0x72656E6E616C70 && v68 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v72 = sub_2408E617C();
        swift_bridgeObjectRelease();
        if ((v72 & 1) == 0)
          goto LABEL_55;
      }
      v73 = (uint64_t *)(v38 + *(int *)(v83 + 32));
      if (v73[1])
      {
        v21 = *v73;
        a1 = v73[1];
      }
      else
      {
        a1 = 0xEB00000000646569;
        v21 = 0x6669636570736E75;
      }
      EnumCaseMultiPayload = (uint64_t)(v45 + 16);
      swift_beginAccess();
      v28 = v45[16];
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v45[16] = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        goto LABEL_52;
      goto LABEL_65;
    case 7u:
      v49 = v87[5];
      v43 = __OFADD__(v49, 1);
      v50 = v49 + 1;
      if (v43)
        goto LABEL_61;
      v87[5] = v50;
      goto LABEL_22;
    case 0xAu:
      v51 = v85;
      sub_2403A91CC(v28, v85, type metadata accessor for TranscriptProtoSessionError);
      v28 = (uint64_t)v87;
      v52 = v87[12];
      v43 = __OFADD__(v52, 1);
      v53 = v52 + 1;
      if (v43)
        goto LABEL_62;
      v87[12] = v53;
      v54 = getFailureInfo(from:)(v51);
      sub_240388AE4(v51, type metadata accessor for TranscriptProtoSessionError);
      *(_QWORD *)(v28 + 104) = v54;
      goto LABEL_47;
    case 0x17u:
      v55 = v87[9];
      v43 = __OFADD__(v55, 1);
      v56 = v55 + 1;
      if (v43)
        goto LABEL_58;
      v87[9] = v56;
      goto LABEL_22;
    case 0x1Cu:
      v57 = v87[10];
      v43 = __OFADD__(v57, 1);
      v58 = v57 + 1;
      if (v43)
        goto LABEL_59;
      v87[10] = v58;
LABEL_22:
      v59 = type metadata accessor for TranscriptProtoPayloadEnum;
      v60 = v28;
      goto LABEL_23;
    case 0x1Du:
      v61 = v86;
      sub_2403A91CC(v28, v86, type metadata accessor for TranscriptProtoStatementResult);
      v21 = (uint64_t)v87;
      v62 = v87[7];
      v43 = __OFADD__(v62, 1);
      v63 = v62 + 1;
      if (v43)
        goto LABEL_60;
      v87[7] = v63;
      sub_2403A9210(a1 + *(int *)(EnumCaseMultiPayload + 60), (uint64_t)v9, &qword_256FFA4A8);
      v64 = type metadata accessor for TranscriptProtoParticipantID(0);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v9, 1, v64) == 1)
      {
        sub_2403A97FC((uint64_t)v9, &qword_256FFA4A8);
        goto LABEL_46;
      }
      v28 = *v9;
      EnumCaseMultiPayload = v9[1];
      swift_bridgeObjectRetain();
      sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoParticipantID);
      if (v28 == 0x72656E6E616C70 && EnumCaseMultiPayload == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v28 = sub_2408E617C();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
          goto LABEL_46;
      }
      v74 = *(_QWORD *)(v21 + 64);
      v43 = __OFADD__(v74, 1);
      v75 = v74 + 1;
      if (!v43)
      {
        *(_QWORD *)(v21 + 64) = v75;
LABEL_46:
        v76 = getFailureInfo(from:)(v61);
        sub_240388AE4(v61, type metadata accessor for TranscriptProtoStatementResult);
        *(_QWORD *)(v21 + 104) = v76;
LABEL_47:
        swift_release();
        goto LABEL_48;
      }
LABEL_64:
      __break(1u);
LABEL_65:
      v28 = (uint64_t)sub_24050A538(0, *(_QWORD *)(v28 + 16) + 1, 1, (_QWORD *)v28);
      *(_QWORD *)EnumCaseMultiPayload = v28;
LABEL_52:
      v80 = *(_QWORD *)(v28 + 16);
      v79 = *(_QWORD *)(v28 + 24);
      if (v80 >= v79 >> 1)
      {
        v28 = (uint64_t)sub_24050A538((_QWORD *)(v79 > 1), v80 + 1, 1, (_QWORD *)v28);
        *(_QWORD *)EnumCaseMultiPayload = v28;
      }
      *(_QWORD *)(v28 + 16) = v80 + 1;
      v81 = v28 + 16 * v80;
      *(_QWORD *)(v81 + 32) = v21;
      *(_QWORD *)(v81 + 40) = a1;
      swift_endAccess();
LABEL_55:
      v59 = type metadata accessor for TranscriptProtoAction;
      v60 = v38;
LABEL_23:
      sub_240388AE4(v60, v59);
LABEL_48:
      v36 = v88;
      return sub_2403A97FC(v36, &qword_256FFA488);
    default:
      goto LABEL_22;
  }
}

uint64_t sub_2403B5BB0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2403B5BE4(uint64_t a1)
{
  return sub_2403B51F0(a1);
}

uint64_t sub_2403B5C04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC08);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2408E91D0;
  v2 = v0[2];
  *(_QWORD *)(v1 + 56) = type metadata accessor for RequestGrainDimensionsSpec();
  *(_QWORD *)(v1 + 64) = &off_2510A8598;
  *(_QWORD *)(v1 + 32) = v2;
  v3 = v0[3];
  v4 = type metadata accessor for LatencyIntervalSpec();
  *(_QWORD *)(v1 + 96) = v4;
  *(_QWORD *)(v1 + 104) = &off_2510A8600;
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 136) = v4;
  *(_QWORD *)(v1 + 144) = &off_2510A8600;
  v5 = v0[5];
  *(_QWORD *)(v1 + 112) = v0[4];
  *(_QWORD *)(v1 + 176) = v4;
  *(_QWORD *)(v1 + 184) = &off_2510A8600;
  *(_QWORD *)(v1 + 152) = v5;
  *(_QWORD *)(v1 + 216) = v4;
  *(_QWORD *)(v1 + 224) = &off_2510A8600;
  v7 = v0[6];
  v6 = v0[7];
  *(_QWORD *)(v1 + 192) = v7;
  *(_QWORD *)(v1 + 256) = v4;
  *(_QWORD *)(v1 + 264) = &off_2510A8600;
  *(_QWORD *)(v1 + 232) = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_2403B5CF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v2 = sub_2403B5C04();
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return swift_bridgeObjectRelease();
  v4 = v2 + 32;
  do
  {
    sub_2403AE340(v4, (uint64_t)v8);
    v5 = v9;
    v6 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, v5, v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
    v4 += 40;
    --v3;
  }
  while (v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2403B5DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;

  v9 = v8;
  v11 = a7 + *(int *)(type metadata accessor for RequestData(0) + 32);
  v12 = *(_QWORD *)(v11 + 40);
  v13 = *(_QWORD *)(v11 + 48);
  if (v12)
  {
    v46 = *(_QWORD *)(v11 + 8);
    v48 = *(_QWORD *)(v11 + 16);
    v47 = *(_BYTE *)(v11 + 24);
    sub_2403ADAA8(v46, v48, v47);
  }
  else
  {
    v48 = 0;
    v47 = 2;
    v46 = 3;
  }
  v14 = *(_QWORD **)(v9 + 16);
  v44 = v14[3];
  v45 = v14[2];
  v42 = v14[5];
  v43 = v14[4];
  v40 = v14[7];
  v41 = v14[6];
  v38 = v14[9];
  v39 = v14[8];
  v36 = v14[11];
  v37 = v14[10];
  v15 = v14[15];
  v34 = v14[14];
  v35 = v14[12];
  swift_beginAccess();
  v16 = v14[16];
  if (v12)
  {
    swift_bridgeObjectRetain();
    v33 = v13;
  }
  else
  {
    v33 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = sub_2403B8ABC();
  v31 = v17;
  v30 = sub_2403B8ABC();
  v29 = v18;
  v19 = sub_2403B8ABC();
  v21 = v20;
  v22 = sub_2403B8ABC();
  v24 = v23;
  v25 = sub_2403B8ABC();
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  v26 = v14[13];
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 32) = a5;
  *(_QWORD *)(a8 + 40) = a6;
  *(_QWORD *)(a8 + 48) = v46;
  *(_QWORD *)(a8 + 56) = v48;
  *(_BYTE *)(a8 + 64) = v47;
  *(_QWORD *)(a8 + 72) = v45;
  *(_QWORD *)(a8 + 80) = v44;
  *(_QWORD *)(a8 + 88) = v43;
  *(_QWORD *)(a8 + 96) = v42;
  *(_QWORD *)(a8 + 104) = v41;
  *(_QWORD *)(a8 + 112) = v40;
  *(_QWORD *)(a8 + 120) = v39;
  *(_QWORD *)(a8 + 128) = v38;
  *(_QWORD *)(a8 + 136) = v37;
  *(_QWORD *)(a8 + 144) = v36;
  *(_QWORD *)(a8 + 152) = v35;
  *(_QWORD *)(a8 + 160) = v34;
  *(_QWORD *)(a8 + 168) = v15;
  *(_QWORD *)(a8 + 176) = v16;
  *(_QWORD *)(a8 + 184) = v33;
  *(_QWORD *)(a8 + 192) = v32;
  *(_BYTE *)(a8 + 200) = v31 & 1;
  *(_QWORD *)(a8 + 208) = v30;
  *(_BYTE *)(a8 + 216) = v29 & 1;
  *(_QWORD *)(a8 + 224) = v19;
  *(_BYTE *)(a8 + 232) = v21 & 1;
  *(_QWORD *)(a8 + 240) = v22;
  *(_BYTE *)(a8 + 248) = v24 & 1;
  *(_QWORD *)(a8 + 256) = v25;
  *(_BYTE *)(a8 + 264) = v27 & 1;
  *(_QWORD *)(a8 + 272) = v26;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2403B6024()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

_QWORD *sub_2403B6070()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *result;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  _BYTE v26[40];
  _QWORD v27[3];
  uint64_t v28;
  _UNKNOWN **v29;

  type metadata accessor for RequestGrainDimensionsSpec();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_QWORD *)(v1 + 128) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = v1;
  type metadata accessor for LatencyIntervalSpec();
  v2 = (_OWORD *)swift_allocObject();
  v2[2] = 0u;
  v2[3] = 0u;
  v2[4] = 0u;
  v2[5] = 0u;
  v2[1] = 0u;
  type metadata accessor for Next(0);
  v3 = swift_allocObject();
  v4 = v3 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent;
  v5 = type metadata accessor for TranscriptProtoEvent(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A60A0;
  v7 = type metadata accessor for EventFilter(0);
  v28 = v7;
  v29 = &off_2510A85E8;
  v27[0] = v3;
  sub_2403B80A4((uint64_t)v27, (uint64_t)v26, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v26, (uint64_t)(v2 + 1));
  swift_endAccess();
  type metadata accessor for Last(0);
  v8 = swift_allocObject();
  v24 = v6;
  v6(v8 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A60C8;
  v28 = v7;
  v29 = &off_2510A85E8;
  v9 = v7;
  v27[0] = v8;
  sub_2403B80A4((uint64_t)v27, (uint64_t)v26, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v26, (uint64_t)v2 + 56);
  swift_endAccess();
  v25[3] = v2;
  v10 = (_OWORD *)swift_allocObject();
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  if (qword_256FF8FB0 != -1)
    swift_once();
  v11 = qword_257072460;
  v12 = swift_allocObject();
  v24(v12 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v11;
  v28 = v9;
  v29 = &off_2510A85E8;
  v27[0] = v12;
  sub_2403B80A4((uint64_t)v27, (uint64_t)v26, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v26, (uint64_t)(v10 + 1));
  swift_endAccess();
  v13 = swift_allocObject();
  v24(v13 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v13 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A60F0;
  v28 = v9;
  v29 = &off_2510A85E8;
  v27[0] = v13;
  sub_2403B80A4((uint64_t)v27, (uint64_t)v26, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v26, (uint64_t)v10 + 56);
  swift_endAccess();
  v25[4] = v10;
  v14 = (_OWORD *)swift_allocObject();
  v14[2] = 0u;
  v14[3] = 0u;
  v14[4] = 0u;
  v14[5] = 0u;
  v14[1] = 0u;
  v15 = swift_allocObject();
  v24(v15 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6118;
  v28 = v9;
  v29 = &off_2510A85E8;
  v27[0] = v15;
  sub_2403B80A4((uint64_t)v27, (uint64_t)v26, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v26, (uint64_t)(v14 + 1));
  swift_endAccess();
  v16 = swift_allocObject();
  v24(v16 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v16 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6140;
  v28 = v9;
  v29 = &off_2510A85E8;
  v27[0] = v16;
  sub_2403B80A4((uint64_t)v27, (uint64_t)v26, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v26, (uint64_t)v14 + 56);
  swift_endAccess();
  v25[5] = v14;
  v17 = (_OWORD *)swift_allocObject();
  v17[2] = 0u;
  v17[3] = 0u;
  v17[4] = 0u;
  v17[5] = 0u;
  v17[1] = 0u;
  v18 = swift_allocObject();
  v24(v18 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v18 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6168;
  v28 = v9;
  v29 = &off_2510A85E8;
  v27[0] = v18;
  sub_2403B80A4((uint64_t)v27, (uint64_t)v26, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v26, (uint64_t)(v17 + 1));
  swift_endAccess();
  v19 = swift_allocObject();
  v24(v19 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v19 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6190;
  v28 = v9;
  v29 = &off_2510A85E8;
  v27[0] = v19;
  sub_2403B80A4((uint64_t)v27, (uint64_t)v26, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v26, (uint64_t)v17 + 56);
  swift_endAccess();
  v25[6] = v17;
  v20 = (_OWORD *)swift_allocObject();
  v20[2] = 0u;
  v20[3] = 0u;
  v20[4] = 0u;
  v20[5] = 0u;
  v20[1] = 0u;
  v21 = swift_allocObject();
  v24(v21 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v21 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A61B8;
  v28 = v9;
  v29 = &off_2510A85E8;
  v27[0] = v21;
  sub_2403B80A4((uint64_t)v27, (uint64_t)v26, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v26, (uint64_t)(v20 + 1));
  swift_endAccess();
  v22 = swift_allocObject();
  v24(v22 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v5);
  *(_QWORD *)(v22 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A61E0;
  v28 = v9;
  v29 = &off_2510A85E8;
  v27[0] = v22;
  sub_2403B80A4((uint64_t)v27, (uint64_t)v26, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v26, (uint64_t)v20 + 56);
  swift_endAccess();
  result = v25;
  v25[7] = v20;
  return result;
}

uint64_t sub_2403B681C(uint64_t a1)
{
  return sub_2403B5CF0(a1);
}

BOOL sub_2403B683C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  v11 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v11 + 44), (uint64_t)v4, &qword_256FFA490);
  v12 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v4, 1, v12) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA490);
    v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  else
  {
    sub_2403A9210((uint64_t)v4, (uint64_t)v10, &qword_256FFA488);
    sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayload);
    v14 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v10, 1, v14) != 1)
    {
      sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_256FFA488);
      v15 = swift_getEnumCaseMultiPayload() == 3;
      sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoPayloadEnum);
      goto LABEL_6;
    }
  }
  v15 = 0;
LABEL_6:
  sub_2403A97FC((uint64_t)v10, &qword_256FFA488);
  return v15;
}

_QWORD *sub_2403B6A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  __int128 v33;
  _QWORD *v34;
  uint64_t inited;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  int EnumCaseMultiPayload;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD v86[2];
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118[3];
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121[2];

  v98 = a6;
  v99 = a7;
  v96 = a4;
  v97 = a5;
  v94 = a2;
  v95 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v91 = (uint64_t)v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v86 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v87 = (uint64_t)v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v100 = (uint64_t)v86 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v86 - v18;
  v106 = type metadata accessor for TranscriptProtoEvent(0);
  v20 = *(_QWORD *)(v106 - 8);
  v21 = MEMORY[0x24BDAC7A8](v106);
  v23 = (char *)v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v86 - v24;
  v26 = type metadata accessor for RequestData(0);
  MEMORY[0x24BDAC7A8](v26);
  v121[0] = (_QWORD *)MEMORY[0x24BEE4AF8];
  v93 = (uint64_t)v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(a1, v93, v28);
  v29 = *(_QWORD *)(a1 + *(int *)(v26 + 28));
  v30 = *(_QWORD *)(v29 + 16);
  if (v30)
  {
    v31 = v29 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v105 = *(_QWORD *)(v20 + 72);
    v90 = v118;
    v86[1] = v29;
    swift_bridgeObjectRetain();
    v32 = 0;
    v92 = v23;
    *((_QWORD *)&v33 + 1) = 12;
    v101 = xmmword_2408E91D0;
    *(_QWORD *)&v33 = 136315138;
    v89 = v33;
    v88 = MEMORY[0x24BEE4AD8] + 8;
    v103 = v12;
    v104 = v25;
    v102 = v19;
    while (1)
    {
      v34 = v32;
      v115 = v31;
      v116 = v30;
      sub_2403AE1A4(v31, (uint64_t)v25, type metadata accessor for TranscriptProtoEvent);
      sub_2403A9210((uint64_t)&v25[*(int *)(v106 + 44)], (uint64_t)v12, &qword_256FFA490);
      v58 = type metadata accessor for TranscriptProtoPayload(0);
      v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48);
      if (v59((uint64_t)v12, 1, v58) == 1)
      {
        sub_2403A97FC((uint64_t)v12, &qword_256FFA490);
        v60 = type metadata accessor for TranscriptProtoPayloadEnum(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v19, 1, 1, v60);
      }
      else
      {
        sub_2403A9210((uint64_t)v12, (uint64_t)v19, &qword_256FFA488);
        sub_240388AE4((uint64_t)v12, type metadata accessor for TranscriptProtoPayload);
        v61 = type metadata accessor for TranscriptProtoPayloadEnum(0);
        v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48);
        if (v62((uint64_t)v19, 1, v61) != 1)
        {
          v63 = v100;
          sub_2403A9210((uint64_t)v19, v100, &qword_256FFA488);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v65 = v63;
          v25 = v104;
          sub_240388AE4(v65, type metadata accessor for TranscriptProtoPayloadEnum);
          if (EnumCaseMultiPayload == 3)
          {
            sub_2403A97FC((uint64_t)v19, &qword_256FFA488);
            v66 = swift_retain();
            sub_2403B4FA8(v66, v94, v95, v96, v97, v98, v99, v93, v121);
            swift_release();
            type metadata accessor for RequestGrainSpec();
            swift_allocObject();
            v114 = sub_2403B6070();
            swift_release();
            if (qword_256FFA0A8 != -1)
              swift_once();
            v67 = sub_2408E5C48();
            __swift_project_value_buffer(v67, (uint64_t)qword_257072498);
            v68 = (uint64_t)v92;
            sub_2403AE1A4((uint64_t)v25, (uint64_t)v92, type metadata accessor for TranscriptProtoEvent);
            v69 = v68;
            v70 = sub_2408E5C3C();
            LODWORD(v113) = sub_2408E5EA0();
            if (os_log_type_enabled(v70, (os_log_type_t)v113))
            {
              v71 = (uint8_t *)swift_slowAlloc();
              v112 = swift_slowAlloc();
              v118[0] = v112;
              *(_DWORD *)v71 = v89;
              v72 = v69 + *(int *)(v106 + 44);
              v73 = v91;
              sub_2403A9210(v72, v91, &qword_256FFA490);
              if (v59(v73, 1, v58) == 1)
              {
                v74 = v73;
                v75 = &qword_256FFA490;
                goto LABEL_20;
              }
              v76 = v87;
              sub_2403A9210(v73, v87, &qword_256FFA488);
              sub_240388AE4(v73, type metadata accessor for TranscriptProtoPayload);
              if (v62(v76, 1, v61) == 1)
              {
                v74 = v76;
                v75 = &qword_256FFA488;
LABEL_20:
                sub_2403A97FC(v74, v75);
                v77 = 0xE300000000000000;
                v78 = 7104878;
              }
              else
              {
                TranscriptProtoPayloadEnum.eventTypeString.getter();
                v78 = v79;
                v77 = v80;
                sub_240388AE4(v76, type metadata accessor for TranscriptProtoPayloadEnum);
              }
              v117 = sub_2403B3ED0(v78, v77, v118);
              sub_2408E5F3C();
              swift_bridgeObjectRelease();
              sub_240388AE4((uint64_t)v92, type metadata accessor for TranscriptProtoEvent);
              _os_log_impl(&dword_240347000, v70, (os_log_type_t)v113, "RequestGrainLatencyCalculator - starting new latency record for event: %s", v71, 0xCu);
              v81 = v112;
              swift_arrayDestroy();
              MEMORY[0x242684668](v81, -1, -1);
              MEMORY[0x242684668](v71, -1, -1);
            }
            else
            {
              sub_240388AE4(v69, type metadata accessor for TranscriptProtoEvent);
            }

            v34 = v114;
            goto LABEL_5;
          }
        }
      }
      sub_2403A97FC((uint64_t)v19, &qword_256FFA488);
      if (!v34)
      {
        v32 = 0;
        goto LABEL_6;
      }
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC08);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v101;
      v110 = v34[2];
      v36 = v110;
      *(_QWORD *)(inited + 56) = type metadata accessor for RequestGrainDimensionsSpec();
      *(_QWORD *)(inited + 64) = &off_2510A8598;
      *(_QWORD *)(inited + 32) = v36;
      v109 = v34[3];
      v37 = v109;
      v38 = type metadata accessor for LatencyIntervalSpec();
      *(_QWORD *)(inited + 96) = v38;
      *(_QWORD *)(inited + 104) = &off_2510A8600;
      *(_QWORD *)(inited + 72) = v37;
      v32 = v34;
      v39 = v34[4];
      *(_QWORD *)(inited + 136) = v38;
      *(_QWORD *)(inited + 144) = &off_2510A8600;
      *(_QWORD *)(inited + 112) = v39;
      v111 = inited + 112;
      v40 = v34[5];
      *(_QWORD *)(inited + 176) = v38;
      *(_QWORD *)(inited + 184) = &off_2510A8600;
      *(_QWORD *)(inited + 152) = v40;
      v112 = inited + 152;
      v41 = v34[6];
      *(_QWORD *)(inited + 216) = v38;
      *(_QWORD *)(inited + 224) = &off_2510A8600;
      *(_QWORD *)(inited + 192) = v41;
      v42 = v34[7];
      *(_QWORD *)(inited + 256) = v38;
      *(_QWORD *)(inited + 264) = &off_2510A8600;
      *(_QWORD *)(inited + 232) = v42;
      v113 = inited + 192;
      v114 = (_QWORD *)(inited + 232);
      sub_2403AE340(inited + 32, (uint64_t)v118);
      v44 = v119;
      v43 = v120;
      v45 = __swift_project_boxed_opaque_existential_1(v118, v119);
      v46 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 8);
      v107 = v45;
      v108 = v46;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v25 = v104;
      swift_retain();
      swift_retain();
      v19 = v102;
      swift_retain();
      v47 = v44;
      v12 = v103;
      v108(v25, v47, v43);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v118);
      sub_2403AE340(inited + 72, (uint64_t)v118);
      v48 = v119;
      v49 = v120;
      __swift_project_boxed_opaque_existential_1(v118, v119);
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 8))(v25, v48, v49);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v118);
      sub_2403AE340(v111, (uint64_t)v118);
      v50 = v119;
      v51 = v120;
      __swift_project_boxed_opaque_existential_1(v118, v119);
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 8))(v25, v50, v51);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v118);
      sub_2403AE340(v112, (uint64_t)v118);
      v52 = v119;
      v53 = v120;
      __swift_project_boxed_opaque_existential_1(v118, v119);
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 8))(v25, v52, v53);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v118);
      sub_2403AE340(v113, (uint64_t)v118);
      v54 = v119;
      v55 = v120;
      __swift_project_boxed_opaque_existential_1(v118, v119);
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 8))(v25, v54, v55);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v118);
      sub_2403AE340((uint64_t)v114, (uint64_t)v118);
      v56 = v119;
      v57 = v120;
      __swift_project_boxed_opaque_existential_1(v118, v119);
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 8))(v25, v56, v57);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v118);
      swift_release();
      swift_bridgeObjectRelease();
LABEL_6:
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoEvent);
      v31 = v115 + v105;
      v30 = v116 - 1;
      if (v116 == 1)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  v82 = swift_retain();
  v83 = v93;
  sub_2403B4FA8(v82, v94, v95, v96, v97, v98, v99, v93, v121);
  swift_release();
  sub_240388AE4(v83, type metadata accessor for RequestData);
  swift_beginAccess();
  v84 = v121[0];
  swift_release();
  return v84;
}

uint64_t sub_2403B7374(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  int64_t v59;
  int64_t v60;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  os_log_t v92;
  uint64_t v93;
  uint64_t result;
  int64_t v95;
  uint64_t v96;
  int64_t v97;
  uint64_t v98;
  uint64_t v99;
  int64_t v100;
  _QWORD *v101;
  int64_t v102;
  uint64_t *v103;
  unint64_t v104;
  uint64_t v105;
  int64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  os_log_t v112;
  uint64_t v113;
  _BYTE v114[280];
  uint64_t v115;
  _QWORD v116[35];
  uint64_t v117;
  _QWORD *v118;

  v2 = type metadata accessor for RequestData(0);
  v107 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v113 = (uint64_t)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC10);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (int64_t *)((char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (int64_t *)((char *)&v95 - v8);
  v110 = type metadata accessor for SessionData(0);
  v98 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v112 = (os_log_t)((char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC18);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (int64_t *)((char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v16 = (int64_t *)((char *)&v95 - v15);
  v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v118 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v18 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for SessionView(0) + 28));
  v19 = *(_QWORD *)(v18 + 64);
  v96 = v18 + 64;
  v20 = 1 << *(_BYTE *)(v18 + 32);
  if (v20 < 64)
    v21 = ~(-1 << v20);
  else
    v21 = -1;
  v104 = v21 & v19;
  v97 = (unint64_t)(v20 + 63) >> 6;
  v95 = v97 - 1;
  v99 = v18;
  swift_bridgeObjectRetain();
  v102 = 0;
  v103 = v16;
  v101 = v14;
LABEL_6:
  if (!v104)
  {
    v29 = v102 + 1;
    if (__OFADD__(v102, 1))
      goto LABEL_99;
    if (v29 < v97)
    {
      v30 = *(_QWORD *)(v96 + 8 * v29);
      if (v30)
      {
LABEL_12:
        v104 = (v30 - 1) & v30;
        v23 = __clz(__rbit64(v30)) + (v29 << 6);
        v102 = v29;
        goto LABEL_8;
      }
      v31 = v102 + 2;
      ++v102;
      if (v29 + 1 < v97)
      {
        v30 = *(_QWORD *)(v96 + 8 * v31);
        if (v30)
        {
LABEL_15:
          v29 = v31;
          goto LABEL_12;
        }
        v102 = v29 + 1;
        if (v29 + 2 < v97)
        {
          v30 = *(_QWORD *)(v96 + 8 * (v29 + 2));
          if (v30)
          {
            v29 += 2;
            goto LABEL_12;
          }
          v31 = v29 + 3;
          v102 = v29 + 2;
          if (v29 + 3 < v97)
          {
            v30 = *(_QWORD *)(v96 + 8 * v31);
            if (v30)
              goto LABEL_15;
            while (1)
            {
              v29 = v31 + 1;
              if (__OFADD__(v31, 1))
              {
                __break(1u);
LABEL_103:
                result = sub_2408E6068();
                __break(1u);
                return result;
              }
              if (v29 >= v97)
                break;
              v30 = *(_QWORD *)(v96 + 8 * v29);
              ++v31;
              if (v30)
                goto LABEL_12;
            }
            v102 = v95;
          }
        }
      }
    }
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v14, 1, 1, v32);
    v104 = 0;
    goto LABEL_27;
  }
  v22 = __clz(__rbit64(v104));
  v104 &= v104 - 1;
  v23 = v22 | (v102 << 6);
LABEL_8:
  v24 = *(_QWORD *)(v99 + 56);
  v25 = (_QWORD *)(*(_QWORD *)(v99 + 48) + 16 * v23);
  v26 = v25[1];
  *v14 = *v25;
  v14[1] = v26;
  v27 = v24 + *(_QWORD *)(v98 + 72) * v23;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
  sub_2403AE1A4(v27, (uint64_t)v14 + *(int *)(v28 + 48), type metadata accessor for SessionData);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v14, 0, 1, v28);
  swift_bridgeObjectRetain();
  v16 = v103;
LABEL_27:
  sub_2403B80A4((uint64_t)v14, (uint64_t)v16, &qword_256FFAC18);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v16, 1, v33) == 1)
  {
    swift_release();
    if (qword_256FFA0A8 == -1)
      goto LABEL_74;
    goto LABEL_101;
  }
  v109 = *v16;
  *(_QWORD *)&v111 = v16[1];
  v34 = v112;
  sub_2403A91CC((uint64_t)v16 + *(int *)(v33 + 48), (uint64_t)v112, type metadata accessor for SessionData);
  v35 = *(uint64_t *)((char *)&v34->isa + *(int *)(v110 + 32));
  v36 = *(_QWORD *)(v35 + 64);
  v105 = v35 + 64;
  v37 = 1 << *(_BYTE *)(v35 + 32);
  if (v37 < 64)
    v38 = ~(-1 << v37);
  else
    v38 = -1;
  v39 = v38 & v36;
  v106 = (unint64_t)(v37 + 63) >> 6;
  v100 = v106 - 1;
  v108 = v35;
  swift_bridgeObjectRetain();
  v40 = 0;
  while (1)
  {
    if (v39)
    {
      v41 = __clz(__rbit64(v39));
      v39 &= v39 - 1;
      v42 = v41 | (v40 << 6);
LABEL_36:
      v43 = *(_QWORD *)(v108 + 56);
      v44 = (_QWORD *)(*(_QWORD *)(v108 + 48) + 16 * v42);
      v45 = v44[1];
      *v7 = *v44;
      v7[1] = v45;
      v46 = v43 + *(_QWORD *)(v107 + 72) * v42;
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC28);
      sub_2403AE1A4(v46, (uint64_t)v7 + *(int *)(v47 + 48), type metadata accessor for RequestData);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v7, 0, 1, v47);
      swift_bridgeObjectRetain();
      goto LABEL_55;
    }
    v48 = v40 + 1;
    if (__OFADD__(v40, 1))
      goto LABEL_97;
    if (v48 < v106)
    {
      v49 = *(_QWORD *)(v105 + 8 * v48);
      if (v49)
        goto LABEL_40;
      v50 = v40 + 2;
      ++v40;
      if (v48 + 1 < v106)
      {
        v49 = *(_QWORD *)(v105 + 8 * v50);
        if (v49)
          goto LABEL_43;
        v40 = v48 + 1;
        if (v48 + 2 < v106)
        {
          v49 = *(_QWORD *)(v105 + 8 * (v48 + 2));
          if (v49)
          {
            v48 += 2;
            goto LABEL_40;
          }
          v50 = v48 + 3;
          v40 = v48 + 2;
          if (v48 + 3 < v106)
          {
            v49 = *(_QWORD *)(v105 + 8 * v50);
            if (v49)
            {
LABEL_43:
              v48 = v50;
LABEL_40:
              v39 = (v49 - 1) & v49;
              v42 = __clz(__rbit64(v49)) + (v48 << 6);
              v40 = v48;
              goto LABEL_36;
            }
            while (1)
            {
              v48 = v50 + 1;
              if (__OFADD__(v50, 1))
                goto LABEL_100;
              if (v48 >= v106)
                break;
              v49 = *(_QWORD *)(v105 + 8 * v48);
              ++v50;
              if (v49)
                goto LABEL_40;
            }
            v40 = v100;
          }
        }
      }
    }
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC28);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v7, 1, 1, v51);
    v39 = 0;
LABEL_55:
    sub_2403B80A4((uint64_t)v7, (uint64_t)v9, &qword_256FFAC10);
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC28);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v9, 1, v52) == 1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_240388AE4((uint64_t)v112, type metadata accessor for SessionData);
      v14 = v101;
      v16 = v103;
      goto LABEL_6;
    }
    v54 = *v9;
    v53 = v9[1];
    v55 = (uint64_t)v9 + *(int *)(v52 + 48);
    v56 = v113;
    sub_2403A91CC(v55, v113, type metadata accessor for RequestData);
    v57 = sub_2403B6A1C(v56, v109, v111, *(uint64_t *)((char *)&v112->isa + *(int *)(v110 + 28)), *(uint64_t *)((char *)&v112[1].isa + *(int *)(v110 + 28)), v54, v53);
    swift_bridgeObjectRelease();
    v58 = v57[2];
    v59 = v17[2];
    v60 = v59 + v58;
    if (__OFADD__(v59, v58))
      break;
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if (!(_DWORD)isUniquelyReferenced_nonNull_native || v60 > v17[3] >> 1)
    {
      if (v59 <= v60)
        v62 = v59 + v58;
      else
        v62 = v59;
      v17 = sub_24050A410(isUniquelyReferenced_nonNull_native, v62, 1, v17);
    }
    if (v57[2])
    {
      v63 = v17[2];
      if ((v17[3] >> 1) - v63 < v58)
        goto LABEL_95;
      v64 = (unint64_t)&v17[35 * v63 + 4];
      if ((unint64_t)(v57 + 4) < v64 + 280 * v58 && v64 < (unint64_t)&v57[35 * v58 + 4])
        goto LABEL_103;
      swift_arrayInitWithCopy();
      if (v58)
      {
        v66 = v17[2];
        v67 = __OFADD__(v66, v58);
        v68 = v66 + v58;
        if (v67)
          goto LABEL_96;
        v17[2] = v68;
      }
    }
    else if (v58)
    {
      goto LABEL_94;
    }
    swift_bridgeObjectRelease();
    v118 = v17;
    sub_240388AE4(v113, type metadata accessor for RequestData);
  }
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
  while (1)
  {
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    swift_once();
LABEL_74:
    v69 = sub_2408E5C48();
    v70 = __swift_project_value_buffer(v69, (uint64_t)qword_257072498);
    v71 = v118;
    swift_bridgeObjectRetain();
    v72 = sub_2408E5C3C();
    v73 = sub_2408E5EC4();
    if (os_log_type_enabled(v72, v73))
    {
      v74 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v74 = 134217984;
      v116[0] = v71[2];
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v72, v73, "Found %ld RequestGrainLatency Results", v74, 0xCu);
      MEMORY[0x242684668](v74, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    v117 = 0;
    swift_beginAccess();
    v75 = v118;
    v76 = v118[2];
    if (!v76)
      break;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    memcpy(v116, v75 + 4, sizeof(v116));
    v77 = v76 - 1;
    v78 = 39;
    *(_QWORD *)&v79 = 134218242;
    v111 = v79;
    v110 = 0x80000002409219E0;
    v109 = MEMORY[0x24BEE4AD8] + 8;
    while (1)
    {
      sub_2403B7F5C((uint64_t)v116);
      sub_2403B7F5C((uint64_t)v116);
      sub_2403B7F5C((uint64_t)v116);
      v80 = sub_2408E5C3C();
      v81 = sub_2408E5EA0();
      if (os_log_type_enabled(v80, v81))
      {
        v82 = swift_slowAlloc();
        v113 = swift_slowAlloc();
        v115 = v113;
        *(_DWORD *)v82 = v111;
        *(_QWORD *)(v82 + 4) = v117;
        *(_WORD *)(v82 + 12) = 2080;
        memcpy(v114, v116, sizeof(v114));
        sub_2403B7F5C((uint64_t)v116);
        v112 = v80;
        v83 = RequestGrainLatency.dictionary.getter();
        v84 = sub_2403AEB7C(v83, 1);
        v85 = v77;
        v86 = v75;
        v87 = v70;
        v89 = v88;
        swift_bridgeObjectRelease();
        v90 = v89 ? v84 : 0xD00000000000002ALL;
        v91 = v89 ? v89 : v110;
        v70 = v87;
        v75 = v86;
        v77 = v85;
        sub_2403B8000((uint64_t)v116);
        *(_QWORD *)(v82 + 14) = sub_2403B3ED0(v90, v91, &v115);
        swift_bridgeObjectRelease();
        sub_2403B8000((uint64_t)v116);
        sub_2403B8000((uint64_t)v116);
        v92 = v112;
        _os_log_impl(&dword_240347000, v112, v81, "RequestGrainLatency Result %ld: %s", (uint8_t *)v82, 0x16u);
        v93 = v113;
        swift_arrayDestroy();
        MEMORY[0x242684668](v93, -1, -1);
        MEMORY[0x242684668](v82, -1, -1);

        sub_2403B8000((uint64_t)v116);
      }
      else
      {
        sub_2403B8000((uint64_t)v116);
        sub_2403B8000((uint64_t)v116);
        sub_2403B8000((uint64_t)v116);

      }
      if (__OFADD__(v117, 1))
        break;
      ++v117;
      if (!v77)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v118;
      }
      memcpy(v116, &v75[v78], sizeof(v116));
      v78 += 35;
      --v77;
    }
  }
  return (uint64_t)v75;
}

uint64_t type metadata accessor for RequestGrainLatencyCalculator()
{
  return objc_opt_self();
}

uint64_t method lookup function for RequestGrainLatencyCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RequestGrainLatencyCalculator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of RequestGrainLatencyCalculator.extractLatencies(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t type metadata accessor for RequestGrainDimensionsSpec()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RequestGrainSpec()
{
  return objc_opt_self();
}

uint64_t sub_2403B7F5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_BYTE *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2403ADAA8(v2, v3, v4);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2403B8000(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_BYTE *)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2403ADB34(v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_2403B80A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2403B80E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_2403B8130(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v20;
  uint64_t v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94E58]), sel_init);
  if (v5)
  {
    v6 = (uint64_t)a1 + *(int *)(type metadata accessor for ToolKitProtoTypedValue.CollectionValue(0) + 20);
    v7 = v5;
    v8 = sub_2403B4C08(v6);
    objc_msgSend(v7, sel_setTypeIdentifier_, v8);

  }
  v21 = MEMORY[0x24BEE4AF8];
  v9 = *a1;
  v10 = *(_QWORD *)(*a1 + 16);
  if (v10)
  {
    v20 = v5;
    v11 = type metadata accessor for ToolKitProtoTypedValue(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v14 = *(_QWORD *)(v12 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_2403B835C(v13, (uint64_t)v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v11);
      v15 = sub_240829B0C((uint64_t)v4);
      sub_2403B83A0((uint64_t)v4);
      if (v15)
      {
        v16 = v15;
        MEMORY[0x242683B40]();
        if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2408E5DBC();
        sub_2408E5DD4();
        sub_2408E5DB0();

      }
      v13 += v14;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    v5 = v20;
  }
  if (v5)
  {
    sub_2403B83E0();
    v17 = v5;
    v18 = (void *)sub_2408E5D8C();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setValues_, v18);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_2403B835C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2403B83A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2403B83E0()
{
  unint64_t result;

  result = qword_256FFAC38;
  if (!qword_256FFAC38)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FFAC38);
  }
  return result;
}

id sub_2403B841C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (unsigned int *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC40);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v7, &qword_256FFAC40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v7, &qword_256FFAC40);
    return 0;
  }
  else
  {
    sub_2403B8680((uint64_t)v7, (uint64_t)v11);
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FF8]), sel_init);
    if (v12)
    {
      v13 = (uint64_t)&v11[*(int *)(v8 + 28)];
      v14 = objc_allocWithZone(MEMORY[0x24BE94FD8]);
      v15 = v12;
      v16 = objc_msgSend(v14, sel_init);
      sub_2403A9210(v13, (uint64_t)v4, &qword_256FFA300);
      v17 = type metadata accessor for TranscriptProtoStatementID(0);
      if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v4, 1, v17) == 1)
      {
        sub_2403A97FC((uint64_t)v4, &qword_256FFA300);
      }
      else
      {
        v18 = *v4;
        sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementID);
        objc_msgSend(v16, sel_setIndex_, v18);
      }
      objc_msgSend(v15, sel_setStatementId_, v16);

      v19 = (uint64_t)&v11[*(int *)(v8 + 24)];
      v20 = v15;
      v21 = sub_24040C070(v19);
      objc_msgSend(v20, sel_setUserAction_, v21);

    }
    sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoSystemPromptResolution);
  }
  return v12;
}

uint64_t sub_2403B8680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for IELatencyConstantValue()
{
  return &type metadata for IELatencyConstantValue;
}

uint64_t dispatch thunk of IELatencyRecord.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of IELatencyDictionary.dictionary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of IELatencyCoreAnalyticsEvent.coreAnalyticsShouldEmit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static IELatencySignpostEvent.signpostEventName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of IELatencySignpostEvent.signpostShouldEmit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of IELatencySignpostEvent.emitSignpost()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of IELatencySELFEvent.SELFShouldEmit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of IELatencySELFEvent.createSELFEvent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2403B871C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_2403B8724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;

  swift_beginAccess();
  sub_2403A9210(v1 + 16, (uint64_t)v11, &qword_256FFAC30);
  if (v12)
  {
    sub_2403AE340((uint64_t)v11, (uint64_t)v8);
    sub_2403A97FC((uint64_t)v11, &qword_256FFAC30);
    v3 = v9;
    v4 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8) + 8))(a1, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  }
  else
  {
    sub_2403A97FC((uint64_t)v11, &qword_256FFAC30);
  }
  swift_beginAccess();
  sub_2403A9210(v1 + 56, (uint64_t)v11, &qword_256FFAC30);
  if (!v12)
    return sub_2403A97FC((uint64_t)v11, &qword_256FFAC30);
  sub_2403AE340((uint64_t)v11, (uint64_t)v8);
  sub_2403A97FC((uint64_t)v11, &qword_256FFAC30);
  v5 = v9;
  v6 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 + 8) + 8))(a1, v5);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
}

uint64_t sub_2403B8884(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v3 = v2;
  swift_beginAccess();
  sub_2403A9210(v3 + 16, (uint64_t)v22, &qword_256FFAC30);
  v6 = v23;
  if (v23)
  {
    v7 = v24;
    v8 = __swift_project_boxed_opaque_existential_1(v22, v23);
    v9 = *(_QWORD *)(v6 - 8);
    MEMORY[0x24BDAC7A8](v8);
    v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
    (*(void (**)(char *))(v9 + 16))(v11);
    sub_2403A97FC((uint64_t)v22, &qword_256FFAC30);
    (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v6);
  }
  else
  {
    sub_2403A97FC((uint64_t)v22, &qword_256FFAC30);
    v12 = type metadata accessor for TranscriptProtoEvent(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  swift_beginAccess();
  sub_2403A9210(v3 + 56, (uint64_t)v22, &qword_256FFAC30);
  v13 = v23;
  if (v23)
  {
    v14 = v24;
    v15 = __swift_project_boxed_opaque_existential_1(v22, v23);
    v16 = *(_QWORD *)(v13 - 8);
    MEMORY[0x24BDAC7A8](v15);
    v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
    (*(void (**)(char *))(v16 + 16))(v18);
    sub_2403A97FC((uint64_t)v22, &qword_256FFAC30);
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v13);
  }
  else
  {
    sub_2403A97FC((uint64_t)v22, &qword_256FFAC30);
    v20 = type metadata accessor for TranscriptProtoEvent(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a2, 1, 1, v20);
  }
}

uint64_t sub_2403B8ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unsigned int (**v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  unsigned int (**v152)(uint64_t, uint64_t, uint64_t);
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156[3];
  uint64_t v157;
  uint64_t v158;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v147 = (uint64_t)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v146 = (uint64_t)&v138 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v143 = (uint64_t)&v138 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v142 = (uint64_t)&v138 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v145 = (uint64_t)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v144 = (uint64_t)&v138 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v141 = (uint64_t)&v138 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v140 = (uint64_t)&v138 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAFF0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v151 = (char *)&v138 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v138 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v138 - v27;
  v29 = type metadata accessor for TranscriptProtoEvent(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v149 = (uint64_t)&v138 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v148 = (uint64_t)&v138 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v37 = (char *)&v138 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v138 - v38);
  v40 = v1 + 16;
  swift_beginAccess();
  sub_2403A9210(v1 + 16, (uint64_t)v156, &qword_256FFAC30);
  v41 = v157;
  if (v157)
  {
    v139 = v37;
    v152 = v39;
    v153 = v1;
    v150 = (uint64_t)v21;
    v42 = v158;
    v43 = __swift_project_boxed_opaque_existential_1(v156, v157);
    v44 = v29;
    v45 = *(_QWORD *)(v41 - 8);
    MEMORY[0x24BDAC7A8](v43);
    v47 = (char *)&v138 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v45 + 16))(v47);
    sub_2403A97FC((uint64_t)v156, &qword_256FFAC30);
    (*(void (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v41);
    v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    if (v48(v28, 1, v29) == 1)
    {
      v26 = v28;
      v1 = v153;
      v21 = (char *)v150;
      goto LABEL_14;
    }
    sub_2403BA83C((uint64_t)v28, (uint64_t)v152);
    v1 = v153;
    swift_beginAccess();
    sub_2403A9210(v1 + 56, (uint64_t)v156, &qword_256FFAC30);
    v49 = v157;
    if (v157)
    {
      v50 = v158;
      v51 = __swift_project_boxed_opaque_existential_1(v156, v157);
      v52 = *(_QWORD *)(v49 - 8);
      MEMORY[0x24BDAC7A8](v51);
      v54 = (char *)&v138 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v52 + 16))(v54);
      sub_2403A97FC((uint64_t)v156, &qword_256FFAC30);
      (*(void (**)(uint64_t, uint64_t))(v50 + 16))(v49, v50);
      v55 = *(void (**)(char *, uint64_t))(v52 + 8);
      v29 = v44;
      v55(v54, v49);
      v1 = v153;
      v56 = v48(v26, 1, v44);
      v21 = (char *)v150;
      if (v56 != 1)
      {
        v57 = (uint64_t)v139;
        sub_2403BA83C((uint64_t)v26, (uint64_t)v139);
        v58 = (uint64_t)v152;
        v59 = sub_2403BA880((uint64_t)v152, v57);
        v61 = v60;
        if (qword_256FFA0A8 != -1)
          swift_once();
        v62 = sub_2408E5C48();
        __swift_project_value_buffer(v62, (uint64_t)qword_257072498);
        v63 = v148;
        sub_2403BA768(v58, v148);
        v64 = v149;
        sub_2403BA768(v57, v149);
        v65 = sub_2408E5C3C();
        v66 = sub_2408E5EA0();
        if (!os_log_type_enabled(v65, (os_log_type_t)v66))
        {

          sub_240388AE4(v64, type metadata accessor for TranscriptProtoEvent);
          sub_240388AE4(v63, type metadata accessor for TranscriptProtoEvent);
          sub_240388AE4(v57, type metadata accessor for TranscriptProtoEvent);
          v114 = v58;
LABEL_53:
          sub_240388AE4(v114, type metadata accessor for TranscriptProtoEvent);
          return v59;
        }
        LODWORD(v151) = v66;
        LODWORD(v153) = v61;
        v67 = swift_slowAlloc();
        v150 = swift_slowAlloc();
        v156[0] = v150;
        *(_DWORD *)v67 = 136315650;
        v68 = v142;
        sub_2403A9210(v63 + *(int *)(v29 + 44), v142, &qword_256FFA490);
        v69 = type metadata accessor for TranscriptProtoPayload(0);
        v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48);
        if (v70(v68, 1, v69) == 1)
        {
          v71 = &qword_256FFA490;
          v72 = v68;
        }
        else
        {
          v119 = v140;
          sub_2403A9210(v68, v140, &qword_256FFA488);
          sub_240388AE4(v68, type metadata accessor for TranscriptProtoPayload);
          v120 = type metadata accessor for TranscriptProtoPayloadEnum(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 48))(v119, 1, v120) != 1)
          {
            TranscriptProtoPayloadEnum.eventTypeString.getter();
            v122 = v123;
            v121 = v124;
            sub_240388AE4(v119, type metadata accessor for TranscriptProtoPayloadEnum);
            goto LABEL_47;
          }
          v71 = &qword_256FFA488;
          v72 = v119;
        }
        sub_2403A97FC(v72, v71);
        v121 = 0xE300000000000000;
        v122 = 7104878;
LABEL_47:
        v154 = sub_2403B3ED0(v122, v121, v156);
        sub_2408E5F3C();
        swift_bridgeObjectRelease();
        sub_240388AE4(v148, type metadata accessor for TranscriptProtoEvent);
        *(_WORD *)(v67 + 12) = 2080;
        v125 = v143;
        sub_2403A9210(v149 + *(int *)(v29 + 44), v143, &qword_256FFA490);
        if (v70(v125, 1, v69) == 1)
        {
          sub_2403A97FC(v125, &qword_256FFA490);
          v126 = 0xE300000000000000;
          v127 = (uint64_t)v152;
          v128 = (uint64_t)v139;
          v129 = 7104878;
        }
        else
        {
          v130 = v141;
          sub_2403A9210(v125, v141, &qword_256FFA488);
          sub_240388AE4(v125, type metadata accessor for TranscriptProtoPayload);
          v131 = type metadata accessor for TranscriptProtoPayloadEnum(0);
          v132 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 48))(v130, 1, v131);
          v127 = (uint64_t)v152;
          v128 = (uint64_t)v139;
          v129 = 7104878;
          if (v132 == 1)
          {
            sub_2403A97FC(v130, &qword_256FFA488);
            v126 = 0xE300000000000000;
          }
          else
          {
            TranscriptProtoPayloadEnum.eventTypeString.getter();
            v129 = v133;
            v126 = v134;
            sub_240388AE4(v130, type metadata accessor for TranscriptProtoPayloadEnum);
          }
        }
        v154 = sub_2403B3ED0(v129, v126, v156);
        sub_2408E5F3C();
        swift_bridgeObjectRelease();
        sub_240388AE4(v149, type metadata accessor for TranscriptProtoEvent);
        *(_WORD *)(v67 + 22) = 2080;
        v135 = sub_2408E5E28();
        v154 = sub_2403B3ED0(v135, v136, v156);
        sub_2408E5F3C();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240347000, v65, (os_log_type_t)v151, "LatencyIntervalSpec - calculateInterval - begin: %s, end: %s, duration: %s", (uint8_t *)v67, 0x20u);
        v137 = v150;
        swift_arrayDestroy();
        MEMORY[0x242684668](v137, -1, -1);
        MEMORY[0x242684668](v67, -1, -1);

        sub_240388AE4(v128, type metadata accessor for TranscriptProtoEvent);
        v114 = v127;
        goto LABEL_53;
      }
    }
    else
    {
      sub_2403A97FC((uint64_t)v156, &qword_256FFAC30);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v26, 1, 1, v29);
      v21 = (char *)v150;
    }
    sub_240388AE4((uint64_t)v152, type metadata accessor for TranscriptProtoEvent);
  }
  else
  {
    sub_2403A97FC((uint64_t)v156, &qword_256FFAC30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v28, 1, 1, v29);
    v26 = v28;
  }
LABEL_14:
  sub_2403A97FC((uint64_t)v26, &qword_256FFAFF0);
  if (qword_256FFA0A8 != -1)
    swift_once();
  v73 = sub_2408E5C48();
  __swift_project_value_buffer(v73, (uint64_t)qword_257072498);
  swift_retain_n();
  v74 = sub_2408E5C3C();
  v75 = sub_2408E5EA0();
  if (os_log_type_enabled(v74, v75))
  {
    v152 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v30;
    v153 = v29;
    v76 = swift_slowAlloc();
    v150 = swift_slowAlloc();
    v155 = v150;
    *(_DWORD *)v76 = 136315394;
    sub_2403A9210(v40, (uint64_t)v156, &qword_256FFAC30);
    v77 = v157;
    if (v157)
    {
      v78 = v1;
      v79 = v158;
      v80 = __swift_project_boxed_opaque_existential_1(v156, v157);
      v81 = *(_QWORD *)(v77 - 8);
      MEMORY[0x24BDAC7A8](v80);
      v83 = (char *)&v138 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v81 + 16))(v83);
      sub_2403A97FC((uint64_t)v156, &qword_256FFAC30);
      v84 = *(void (**)(uint64_t, uint64_t))(v79 + 16);
      v85 = v79;
      v86 = (uint64_t)v151;
      v84(v77, v85);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v77);
      v87 = v153;
      if (v152[6](v86, 1, v153) == 1)
      {
        sub_2403A97FC(v86, &qword_256FFAFF0);
        v88 = 0xE300000000000000;
        v89 = 7104878;
        v1 = v78;
        goto LABEL_27;
      }
      v92 = v146;
      sub_2403A9210(v86 + *(int *)(v87 + 44), v146, &qword_256FFA490);
      sub_240388AE4(v86, type metadata accessor for TranscriptProtoEvent);
      v93 = type metadata accessor for TranscriptProtoPayload(0);
      v1 = v78;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 48))(v92, 1, v93) == 1)
      {
        v90 = &qword_256FFA490;
        v91 = (uint64_t *)v92;
      }
      else
      {
        v94 = v144;
        sub_2403A9210(v92, v144, &qword_256FFA488);
        sub_240388AE4(v92, type metadata accessor for TranscriptProtoPayload);
        v95 = type metadata accessor for TranscriptProtoPayloadEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 48))(v94, 1, v95) != 1)
        {
          TranscriptProtoPayloadEnum.eventTypeString.getter();
          v89 = v115;
          v88 = v116;
          sub_240388AE4(v94, type metadata accessor for TranscriptProtoPayloadEnum);
LABEL_27:
          v156[0] = sub_2403B3ED0(v89, v88, &v155);
          sub_2408E5F3C();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v76 + 12) = 2080;
          swift_beginAccess();
          sub_2403A9210(v1 + 56, (uint64_t)v156, &qword_256FFAC30);
          v96 = v157;
          if (v157)
          {
            v97 = v158;
            v98 = __swift_project_boxed_opaque_existential_1(v156, v157);
            v99 = *(_QWORD *)(v96 - 8);
            MEMORY[0x24BDAC7A8](v98);
            v101 = (char *)&v138 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v99 + 16))(v101);
            sub_2403A97FC((uint64_t)v156, &qword_256FFAC30);
            (*(void (**)(uint64_t, uint64_t))(v97 + 16))(v96, v97);
            (*(void (**)(char *, uint64_t))(v99 + 8))(v101, v96);
            v102 = v153;
            if (v152[6]((uint64_t)v21, 1, v153) == 1)
            {
              sub_2403A97FC((uint64_t)v21, &qword_256FFAFF0);
              v103 = 0xE300000000000000;
LABEL_34:
              v108 = v150;
              v109 = 7104878;
LABEL_35:
              v156[0] = sub_2403B3ED0(v109, v103, &v155);
              sub_2408E5F3C();
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_240347000, v74, v75, "LatencyIntervalSpec - calculateInterval - failed to calculate interval for begin: %s, end: %s", (uint8_t *)v76, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x242684668](v108, -1, -1);
              MEMORY[0x242684668](v76, -1, -1);

              return 0;
            }
            v106 = v147;
            sub_2403A9210((uint64_t)&v21[*(int *)(v102 + 44)], v147, &qword_256FFA490);
            sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoEvent);
            v107 = type metadata accessor for TranscriptProtoPayload(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48))(v106, 1, v107) != 1)
            {
              v111 = v145;
              sub_2403A9210(v106, v145, &qword_256FFA488);
              sub_240388AE4(v106, type metadata accessor for TranscriptProtoPayload);
              v112 = type metadata accessor for TranscriptProtoPayloadEnum(0);
              v113 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 48))(v111, 1, v112);
              v108 = v150;
              v109 = 7104878;
              if (v113 == 1)
              {
                sub_2403A97FC(v111, &qword_256FFA488);
                v103 = 0xE300000000000000;
              }
              else
              {
                TranscriptProtoPayloadEnum.eventTypeString.getter();
                v109 = v117;
                v103 = v118;
                sub_240388AE4(v111, type metadata accessor for TranscriptProtoPayloadEnum);
              }
              goto LABEL_35;
            }
            v104 = &qword_256FFA490;
            v105 = (uint64_t *)v106;
          }
          else
          {
            v104 = &qword_256FFAC30;
            v105 = v156;
          }
          sub_2403A97FC((uint64_t)v105, v104);
          v103 = 0xE300000000000000;
          goto LABEL_34;
        }
        v90 = &qword_256FFA488;
        v91 = (uint64_t *)v94;
      }
    }
    else
    {
      v90 = &qword_256FFAC30;
      v91 = v156;
    }
    sub_2403A97FC((uint64_t)v91, v90);
    v88 = 0xE300000000000000;
    v89 = 7104878;
    goto LABEL_27;
  }

  swift_release_n();
  return 0;
}

uint64_t sub_2403B9A74()
{
  uint64_t v0;

  sub_2403A97FC(v0 + 16, &qword_256FFAC30);
  sub_2403A97FC(v0 + 56, &qword_256FFAC30);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LatencyIntervalSpec()
{
  return objc_opt_self();
}

uint64_t sub_2403B9AD8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2403B9AE0(uint64_t a1)
{
  return sub_2403B8724(a1);
}

uint64_t sub_2403B9B04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  int v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  int v38;
  uint64_t v39;
  _BYTE v40[32];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAFF0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v40[-v8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)&v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v40[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v40[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v19 + 44), (uint64_t)v15, &qword_256FFA490);
  v20 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v15, 1, v20) == 1)
  {
    v21 = &qword_256FFA490;
    v22 = (uint64_t)v15;
    return sub_2403A97FC(v22, v21);
  }
  sub_2403A9210((uint64_t)v15, (uint64_t)v18, &qword_256FFA488);
  sub_240388AE4((uint64_t)v15, type metadata accessor for TranscriptProtoPayload);
  v23 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v18, 1, v23) == 1)
  {
    v21 = &qword_256FFA488;
    v22 = (uint64_t)v18;
    return sub_2403A97FC(v22, v21);
  }
  TranscriptProtoPayloadEnum.payloadType.getter();
  v24 = v40[8];
  result = sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
  if (v24 != 29)
    return result;
  sub_2403A9210(a1 + *(int *)(v19 + 60), (uint64_t)v12, &qword_256FFA4A8);
  v26 = type metadata accessor for TranscriptProtoParticipantID(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v12, 1, v26) == 1)
  {
    v21 = &qword_256FFA4A8;
    v22 = (uint64_t)v12;
    return sub_2403A97FC(v22, v21);
  }
  v28 = *v12;
  v27 = v12[1];
  swift_bridgeObjectRetain();
  sub_240388AE4((uint64_t)v12, type metadata accessor for TranscriptProtoParticipantID);
  if (v28 == 0x726F747563657865 && v27 == 0xE800000000000000 || (sub_2408E617C() & 1) != 0)
  {
    v29 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes);
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
    {
      v31 = (unsigned __int8 *)(v29 + 32);
      while (1)
      {
        v32 = *v31++;
        if (v32 == 41)
          break;
        if (!--v30)
          goto LABEL_19;
      }
      sub_2403BA768(a1, (uint64_t)v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 0, 1, v19);
      sub_2403BA7AC((uint64_t)v9, (uint64_t)v7);
      v33 = v2 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent;
      swift_beginAccess();
      sub_2403BA7F4((uint64_t)v7, v33);
      swift_endAccess();
    }
  }
LABEL_19:
  if (v28 == 0x72656E6E616C70 && v27 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v34 = sub_2408E617C();
    result = swift_bridgeObjectRelease();
    if ((v34 & 1) == 0)
      return result;
  }
  v35 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes);
  v36 = *(_QWORD *)(v35 + 16);
  if (v36)
  {
    v37 = (unsigned __int8 *)(v35 + 32);
    while (1)
    {
      v38 = *v37++;
      if (v38 == 42)
        break;
      if (!--v36)
        return result;
    }
    sub_2403BA768(a1, (uint64_t)v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v9, 0, 1, v19);
    sub_2403BA7AC((uint64_t)v9, (uint64_t)v7);
    v39 = v2 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent;
    swift_beginAccess();
    sub_2403BA7F4((uint64_t)v7, v39);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_2403B9F70()
{
  uint64_t v0;

  sub_2403A97FC(v0 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, &qword_256FFAFF0);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2403B9FB8()
{
  return type metadata accessor for EventFilter(0);
}

uint64_t type metadata accessor for EventFilter(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFAD70);
}

void sub_2403B9FD4()
{
  unint64_t v0;

  sub_2403BA04C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_2403BA04C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256FFAD80)
  {
    type metadata accessor for TranscriptProtoEvent(255);
    v0 = sub_2408E5F24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256FFAD80);
  }
}

uint64_t sub_2403BA0A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent;
  swift_beginAccess();
  return sub_2403A9210(v3, a1, &qword_256FFAFF0);
}

uint64_t sub_2403BA0FC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 128))();
}

uint64_t sub_2403BA124(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;

  v41 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAFF0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v36 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v36 - v15;
  v40 = v1;
  v17 = v1 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent;
  swift_beginAccess();
  sub_2403A9210(v17, (uint64_t)v16, &qword_256FFAFF0);
  v18 = type metadata accessor for TranscriptProtoEvent(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18);
  result = sub_2403A97FC((uint64_t)v16, &qword_256FFAFF0);
  if (v20 == 1)
  {
    v37 = v19;
    v38 = v14;
    v39 = v11;
    v22 = v40;
    v23 = v41;
    sub_2403A9210(v41 + *(int *)(v18 + 44), (uint64_t)v4, &qword_256FFA490);
    v24 = type metadata accessor for TranscriptProtoPayload(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v4, 1, v24) == 1)
    {
      v25 = &qword_256FFA490;
      v26 = (uint64_t)v4;
    }
    else
    {
      sub_2403A9210((uint64_t)v4, (uint64_t)v7, &qword_256FFA488);
      sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayload);
      v27 = type metadata accessor for TranscriptProtoPayloadEnum(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v7, 1, v27) != 1)
      {
        TranscriptProtoPayloadEnum.payloadType.getter();
        v28 = v42;
        sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPayloadEnum);
        v29 = *(_QWORD *)(v22 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes);
        v30 = *(_QWORD *)(v29 + 16);
        v31 = (uint64_t)v38;
        v32 = (uint64_t)v39;
        v33 = v37;
        if (v30)
        {
          v34 = (unsigned __int8 *)(v29 + 32);
          while (1)
          {
            v35 = *v34++;
            if (v35 == v28)
              break;
            if (!--v30)
              return sub_2403B9B04(v23);
          }
          sub_2403BA768(v23, (uint64_t)v38);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v31, 0, 1, v18);
          sub_2403BA7AC(v31, v32);
          swift_beginAccess();
          sub_2403BA7F4(v32, v17);
          swift_endAccess();
        }
        return sub_2403B9B04(v23);
      }
      v25 = &qword_256FFA488;
      v26 = (uint64_t)v7;
    }
    sub_2403A97FC(v26, v25);
    return sub_2403B9B04(v23);
  }
  return result;
}

uint64_t sub_2403BA440()
{
  return type metadata accessor for Next(0);
}

uint64_t type metadata accessor for Next(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFAE58);
}

uint64_t sub_2403BA460(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  int v23;
  uint64_t v24;
  _BYTE v26[32];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAFF0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v26[-v8];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v16 + 44), (uint64_t)v12, &qword_256FFA490);
  v17 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v12, 1, v17) == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA490);
  }
  else
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v15, &qword_256FFA488);
    sub_240388AE4((uint64_t)v12, type metadata accessor for TranscriptProtoPayload);
    v18 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v15, 1, v18) == 1)
    {
      sub_2403A97FC((uint64_t)v15, &qword_256FFA488);
    }
    else
    {
      TranscriptProtoPayloadEnum.payloadType.getter();
      v19 = v26[8];
      sub_240388AE4((uint64_t)v15, type metadata accessor for TranscriptProtoPayloadEnum);
      v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes);
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        v22 = (unsigned __int8 *)(v20 + 32);
        while (1)
        {
          v23 = *v22++;
          if (v23 == v19)
            break;
          if (!--v21)
            return sub_2403B9B04(a1);
        }
        sub_2403BA768(a1, (uint64_t)v9);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 0, 1, v16);
        sub_2403BA7AC((uint64_t)v9, (uint64_t)v7);
        v24 = v2 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent;
        swift_beginAccess();
        sub_2403BA7F4((uint64_t)v7, v24);
        swift_endAccess();
      }
    }
  }
  return sub_2403B9B04(a1);
}

uint64_t sub_2403BA6E4()
{
  return type metadata accessor for Last(0);
}

uint64_t type metadata accessor for Last(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFAF38);
}

uint64_t sub_2403BA700(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2403BA734()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_2403BA768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2403BA7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2403BA7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2403BA83C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2403BA880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  double v15;
  double v16;
  void (*v17)(char *, uint64_t);
  uint64_t result;
  double v19;
  double v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v21 - v8;
  v10 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v10 + 56), (uint64_t)v9, &qword_256FFA498);
  v11 = sub_2408E5750();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v9, 1, v11) == 1)
  {
    v14 = (uint64_t)v9;
LABEL_5:
    sub_2403A97FC(v14, &qword_256FFA498);
    *(double *)&result = 0.0;
    return result;
  }
  sub_2408E5720();
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v12 + 8);
  v17(v9, v11);
  sub_2403A9210(a2 + *(int *)(v10 + 56), (uint64_t)v7, &qword_256FFA498);
  if (v13(v7, 1, v11) == 1)
  {
    v14 = (uint64_t)v7;
    goto LABEL_5;
  }
  sub_2408E5720();
  v20 = v19;
  v17(v7, v11);
  *(double *)&result = v20 - v16;
  return result;
}

uint64_t sub_2403BAA00(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  id v22;
  BOOL v23;
  BOOL v24;
  uint64_t v26;
  char v27;
  uint64_t v28;

  v28 = MEMORY[0x24BEE4AF8];
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94EA8]), sel_init);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    if (qword_254355DF0 != -1)
      goto LABEL_57;
    goto LABEL_54;
  }
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 80);
  v5 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(v4 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  if (!v8)
    goto LABEL_6;
LABEL_5:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * i);
    v20 = *v16 == 0x616E6964726F6F63 && v17 == 0xEB00000000726F74;
    if (v20 || (sub_2408E617C() & 1) != 0)
    {
      v21 = 1;
    }
    else
    {
      v23 = v18 == 0x746E65696C63 && v17 == 0xE600000000000000;
      if (v23 || (sub_2408E617C() & 1) != 0)
      {
        v21 = 2;
      }
      else
      {
        v24 = v18 == 0x726F747563657865 && v17 == 0xE800000000000000;
        if (v24 || (sub_2408E617C() & 1) != 0)
        {
          v21 = 3;
        }
        else if (v18 == 0x72656E6E616C70 && v17 == 0xE700000000000000 || (sub_2408E617C() & 1) != 0)
        {
          v21 = 4;
        }
        else if (v18 == 0x624F6E6F69746361 && v17 == 0xEE00726576726573)
        {
          v21 = 6;
        }
        else if ((sub_2408E617C() & 1) != 0)
        {
          v21 = 6;
        }
        else
        {
          v21 = 0;
        }
      }
    }
    objc_msgSend(v3, sel_setParticipant_, v21);
    objc_msgSend(v3, sel_setSpanId_, v19);
    v22 = v3;
    MEMORY[0x242683B40]();
    if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2408E5DBC();
    sub_2408E5DD4();
    sub_2408E5DB0();
    if (v8)
      goto LABEL_5;
LABEL_6:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v13 >= v9)
      goto LABEL_52;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v9)
        goto LABEL_52;
      v14 = *(_QWORD *)(v5 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v9)
          goto LABEL_52;
        v14 = *(_QWORD *)(v5 + 8 * v10);
        if (!v14)
          break;
      }
    }
LABEL_19:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
  {
LABEL_52:

    swift_release();
    return v28;
  }
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v9)
      goto LABEL_52;
    v14 = *(_QWORD *)(v5 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  swift_once();
LABEL_54:
  v26 = sub_2408E5C48();
  __swift_project_value_buffer(v26, (uint64_t)qword_254356428);
  v27 = 96;
  sub_2408B4A24(0xD000000000000045, 0x8000000240922170, &v27);
  return MEMORY[0x24BEE4AF8];
}

void *sub_2403BAE48(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94ED8]), sel_init);
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, sel_setExists_, 1);
    v4 = v3;
    v5 = (void *)sub_2408E5CE4();
    objc_msgSend(v4, sel_setParameterId_, v5);

  }
  if ((*(_BYTE *)(a1 + 24) & 1) == 0)
    objc_msgSend(v3, sel_setParameterIndex_, *(_QWORD *)(a1 + 16));
  if (v3)
  {
    v6 = a1 + *(int *)(type metadata accessor for TranscriptProtoParameterConfirmation(0) + 24);
    v7 = v3;
    v8 = sub_240422570(v6);
    objc_msgSend(v7, sel_setItem_, v8);

  }
  return v3;
}

uint64_t sub_2403BAF44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;

  v2 = type metadata accessor for TranscriptProtoActionFailure(0);
  MEMORY[0x24BDAC7A8](v2);
  v54 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
  MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TranscriptProtoToolDisambiguation(0);
  MEMORY[0x24BDAC7A8](v6);
  v50 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoActionRequirement(0);
  MEMORY[0x24BDAC7A8](v8);
  v49 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  MEMORY[0x24BDAC7A8](v46);
  v55 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  MEMORY[0x24BDAC7A8](v45);
  v53 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  MEMORY[0x24BDAC7A8](v12);
  v51 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  MEMORY[0x24BDAC7A8](v14);
  v15 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  MEMORY[0x24BDAC7A8](v15);
  v48 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TranscriptProtoActionSuccess(0);
  MEMORY[0x24BDAC7A8](v17);
  v47 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v44 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v44 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v27, &qword_256FFA3E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    v32 = &qword_256FFA3E8;
    v33 = (uint64_t)v27;
  }
  else
  {
    sub_2403A91CC((uint64_t)v27, (uint64_t)v31, type metadata accessor for TranscriptProtoStatementOutcome);
    v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FE0]), sel_init);
    sub_2403A9210((uint64_t)v31, (uint64_t)v24, &qword_256FFA3E0);
    v35 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v36 = (uint64_t)v31;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v24, 1, v35) != 1)
    {
      sub_2403A9210((uint64_t)v24, (uint64_t)v22, &qword_256FFA3E0);
      v42 = (char *)&loc_2403BB41C + 4 * word_2408E94DC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v37 = v24;
    if (qword_254355DF0 != -1)
      swift_once();
    v38 = sub_2408E5C48();
    __swift_project_value_buffer(v38, (uint64_t)qword_254356428);
    v39 = sub_2408E5C3C();
    v40 = sub_2408E5EAC();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_240347000, v39, v40, "IFTStatementOutcomeConverter.convert returns nil", v41, 2u);
      MEMORY[0x242684668](v41, -1, -1);
    }

    sub_240388AE4(v36, type metadata accessor for TranscriptProtoStatementOutcome);
    v32 = &qword_256FFA3E0;
    v33 = (uint64_t)v37;
  }
  sub_2403A97FC(v33, v32);
  return 0;
}

uint64_t sub_2403BBBE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  unsigned int (*v37)(_QWORD, _QWORD, _QWORD);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  char *v49;
  id v50;
  void *v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  unsigned int *v58;
  id v59;
  void *v60;
  unsigned int *v61;
  id v62;
  void *v63;
  _QWORD v64[2];
  __int128 v65;
  uint64_t *v66;
  uint8_t *v67;
  uint64_t v68;
  unint64_t v69;
  uint8_t *v70;
  NSObject *v71;
  unsigned int *v72;
  unsigned int (*v73)(_QWORD, _QWORD, _QWORD);
  unsigned int *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  uint64_t v85;
  int *v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v64 - v6;
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v82 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v74 = (unsigned int *)((char *)v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v12 = (unsigned int *)((char *)v64 - v11);
  v13 = sub_2408E5C48();
  v76 = *(_QWORD *)(v13 - 8);
  v77 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v75 = (char *)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    result = MEMORY[0x24BEE4AF8];
    v92 = MEMORY[0x24BEE4AF8];
    v20 = *(_QWORD *)(a1 + 16);
    if (!v20)
      return result;
    v72 = v12;
    v21 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v85 = *(_QWORD *)(v16 + 72);
    v66 = &v90;
    v64[0] = a1;
    swift_bridgeObjectRetain();
    v69 = 0x80000002409221C0;
    *(_QWORD *)&v22 = 136315138;
    v65 = v22;
    v64[1] = MEMORY[0x24BEE4AD8] + 8;
    v86 = v15;
    v79 = v5;
    v80 = v8;
    v81 = v7;
    v88 = v18;
    while (1)
    {
      sub_2403BC500(v21, (uint64_t)v18);
      v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94EB8]), sel_init);
      if (v26)
        break;
LABEL_8:
      sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoInterpretedStatementResult);
      v21 += v85;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        return v92;
      }
    }
    v27 = v26;
    v28 = sub_2408E566C();
    v29 = *(_QWORD *)(v28 - 8);
    MEMORY[0x24BDAC7A8](v28);
    v83 = (char *)v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    v87 = v64;
    v32 = MEMORY[0x24BDAC7A8](v31);
    v34 = (char *)v64 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (*(_QWORD *)&v18[v15[7] + 8])
    {
      v84 = v64;
      MEMORY[0x24BDAC7A8](v32);
      v36 = (char *)v64 - v35;
      swift_bridgeObjectRetain();
      sub_2408E5630();
      v37 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v29 + 48);
      if (v37(v36, 1, v28) == 1)
      {
        v73 = v37;
        sub_2403A97FC((uint64_t)v36, &qword_256FFA660);
        if (qword_254355DF0 != -1)
          swift_once();
        v38 = v77;
        v39 = __swift_project_value_buffer(v77, (uint64_t)qword_254356428);
        (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v39, v38);
        v90 = 0;
        v91 = 0xE000000000000000;
        sub_2408E5F84();
        sub_2408E5D50();
        sub_2408E5D50();
        v40 = v91;
        v78 = v90;
        swift_bridgeObjectRetain_n();
        v41 = sub_2408E5C3C();
        v42 = sub_2408E5EA0();
        if (os_log_type_enabled(v41, v42))
        {
          v70 = (uint8_t *)swift_slowAlloc();
          v68 = swift_slowAlloc();
          v90 = v68;
          v71 = v41;
          v43 = v70;
          *(_DWORD *)v70 = v65;
          v67 = v43 + 4;
          swift_bridgeObjectRetain();
          v89 = sub_2403B3ED0(v78, v40, &v90);
          sub_2408E5F3C();
          swift_bridgeObjectRelease_n();
          v44 = v42;
          v45 = v70;
          _os_log_impl(&dword_240347000, v71, v44, "%s", v70, 0xCu);
          v46 = v68;
          swift_arrayDestroy();
          MEMORY[0x242684668](v46, -1, -1);
          MEMORY[0x242684668](v45, -1, -1);

        }
        else
        {
          swift_bridgeObjectRelease_n();

        }
        v5 = v79;
        LOBYTE(v90) = 97;
        _s23LighthouseDataProcessor20CoreAnalyticsServiceO017submitReliabilityE08category6reasonyAA0H8CategoryO_SStFZ_0((uint64_t)&v90);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
        v47 = 1;
        v37 = v73;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v34, v36, v28);
        v47 = 0;
        v5 = v79;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v34, v47, 1, v28);
      swift_bridgeObjectRelease();
      v48 = v37(v34, 1, v28);
      v15 = v86;
      if (v48 != 1)
      {
        v49 = v83;
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v83, v34, v28);
        v50 = objc_allocWithZone(MEMORY[0x24BE95C78]);
        v51 = (void *)sub_2408E5648();
        v52 = objc_msgSend(v50, sel_initWithNSUUID_, v51);

        objc_msgSend(v27, sel_setActionEventId_, v52);
        v53 = v49;
        v5 = v79;
        (*(void (**)(char *, uint64_t))(v29 + 8))(v53, v28);
        goto LABEL_23;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v34, 1, 1, v28);
    }
    sub_2403A97FC((uint64_t)v34, &qword_256FFA660);
LABEL_23:
    v54 = (uint64_t)v88;
    v55 = (uint64_t)v81;
    sub_240356D7C((uint64_t)&v88[v15[5]], (uint64_t)v81);
    v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
    v57 = v80;
    if (v56(v55, 1, v80) == 1)
    {
      sub_2403A97FC(v55, &qword_256FFA300);
    }
    else
    {
      v58 = v72;
      sub_2403BC544(v55, (uint64_t)v72);
      v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FD8]), sel_init);
      v60 = v59;
      if (v59)
        objc_msgSend(v59, sel_setIndex_, *v58);
      objc_msgSend(v27, sel_setResultStatementId_, v60);

      sub_240388AE4((uint64_t)v58, type metadata accessor for TranscriptProtoStatementID);
      v54 = (uint64_t)v88;
    }
    sub_240356D7C(v54 + v15[6], (uint64_t)v5);
    if (v56((uint64_t)v5, 1, v57) == 1)
    {
      sub_2403A97FC((uint64_t)v5, &qword_256FFA300);
    }
    else
    {
      v61 = v74;
      sub_2403BC544((uint64_t)v5, (uint64_t)v74);
      v62 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FD8]), sel_init);
      v63 = v62;
      if (v62)
        objc_msgSend(v62, sel_setIndex_, *v61);
      objc_msgSend(v27, sel_setOriginProgramStatementId_, v63);

      sub_240388AE4((uint64_t)v61, type metadata accessor for TranscriptProtoStatementID);
    }
    if (*(_QWORD *)(v54 + v15[8] + 8))
    {
      swift_bridgeObjectRetain();
      v23 = (void *)sub_2408E5CE4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = 0;
    }
    objc_msgSend(v27, sel_setToolId_, v23);

    v24 = (void *)sub_2403BAF44((uint64_t)v88);
    objc_msgSend(v27, sel_setOutcome_, v24);

    v25 = v27;
    MEMORY[0x242683B40]();
    if (*(_QWORD *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2408E5DBC();
    sub_2408E5DD4();
    sub_2408E5DB0();

    v15 = v86;
    v18 = v88;
    goto LABEL_8;
  }
  return 0;
}

uint64_t sub_2403BC500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2403BC544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_2403BC588(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Step;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAFF8);
  MEMORY[0x24BDAC7A8](v2);
  v51 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  v49 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v52 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for TranscriptProtoParameterQuery(0);
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v50 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (unsigned int *)((char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB000);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Step = type metadata accessor for TranscriptProtoQueryStep(0);
  v14 = *(_QWORD *)(Step - 8);
  MEMORY[0x24BDAC7A8](Step);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFB000);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, Step) == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFB000);
    return 0;
  }
  else
  {
    sub_2403A91CC((uint64_t)v12, (uint64_t)v16, type metadata accessor for TranscriptProtoQueryStep);
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94F70]), sel_init);
    v19 = v18;
    if (v18)
      objc_msgSend(v18, sel_setExists_, 1);
    v48 = v19;
    v20 = (uint64_t)&v16[*(int *)(Step + 20)];
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FD8]), sel_init);
    sub_2403A9210(v20, (uint64_t)v9, &qword_256FFA300);
    v22 = type metadata accessor for TranscriptProtoStatementID(0);
    v23 = (*(uint64_t (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v9, 1, v22);
    v24 = (uint64_t)v51;
    if (v23 == 1)
    {
      sub_2403A97FC((uint64_t)v9, &qword_256FFA300);
    }
    else
    {
      v25 = *v9;
      sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoStatementID);
      objc_msgSend(v21, sel_setIndex_, v25);
    }
    objc_msgSend(v48, sel_setStatementId_, v21);
    v26 = *(_QWORD *)v16;
    v27 = *(_QWORD *)(*(_QWORD *)v16 + 16);
    v28 = v49;
    if (v27)
    {
      v46 = v21;
      v44 = v16;
      v29 = (uint64_t)v50;
      v30 = (uint64_t)&v50[*(int *)(v45 + 20)];
      v31 = v26 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v32 = *(_QWORD *)(v5 + 72);
      v45 = v26;
      swift_bridgeObjectRetain();
      v33 = v47;
      do
      {
        sub_2403BCAAC(v31, v29);
        sub_2403A9210(v30, v24, &qword_256FFAFF8);
        sub_240388AE4(v29, type metadata accessor for TranscriptProtoParameterQuery);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v24, 1, v33) == 1)
        {
          sub_2403A97FC(v24, &qword_256FFAFF8);
        }
        else
        {
          v34 = v30;
          v35 = v52;
          sub_2403A91CC(v24, v52, type metadata accessor for TranscriptProtoActionParameterContext);
          v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94EF8]), sel_init);
          if (v36)
          {
            v37 = v36;
            v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94E00]), sel_init);
            if (v38)
            {
              v39 = v38;
              objc_msgSend(v38, sel_setStatementId_, v46);
              v40 = v52;
              swift_bridgeObjectRetain();
              v41 = (void *)sub_2408E5CE4();
              swift_bridgeObjectRelease();
              objc_msgSend(v39, sel_setToolId_, v41);

              objc_msgSend(v37, sel_setContext_, v39);
              if (v48)
              {
                v42 = v48;
                objc_msgSend(v42, sel_addQueries_, v37);

                sub_240388AE4(v40, type metadata accessor for TranscriptProtoActionParameterContext);
              }
              else
              {
                sub_240388AE4(v40, type metadata accessor for TranscriptProtoActionParameterContext);

              }
              v33 = v47;
              v28 = v49;
            }
            else
            {
              sub_240388AE4(v52, type metadata accessor for TranscriptProtoActionParameterContext);

            }
            v30 = v34;
            v29 = (uint64_t)v50;
            v24 = (uint64_t)v51;
          }
          else
          {
            sub_240388AE4(v35, type metadata accessor for TranscriptProtoActionParameterContext);
            v29 = (uint64_t)v50;
            v24 = (uint64_t)v51;
          }
        }
        v31 += v32;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      v16 = v44;
      v21 = v46;
    }

    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoQueryStep);
    return v48;
  }
}

uint64_t sub_2403BCAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoParameterQuery(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

LighthouseDataProcessor::ContextProtoContextType __swiftcall ContextProtoContextType.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::ContextProtoContextType result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::ContextProtoContextType_optional __swiftcall ContextProtoContextType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;

  v2 = 0;
  v3 = 8;
  switch(rawValue)
  {
    case 0:
      goto LABEL_10;
    case 1:
      v2 = 1;
      goto LABEL_10;
    case 2:
      v2 = 2;
      goto LABEL_10;
    case 3:
      v2 = 3;
      goto LABEL_10;
    case 4:
      v2 = 4;
      goto LABEL_10;
    case 5:
      v2 = 5;
      goto LABEL_10;
    case 6:
      v2 = 6;
      goto LABEL_10;
    case 7:
      v2 = 7;
LABEL_10:
      v3 = v2;
      goto LABEL_11;
    case 8:
LABEL_11:
      *v1 = v3;
      break;
    case 9:
      *v1 = 9;
      break;
    case 10:
      *v1 = 10;
      break;
    case 11:
      *v1 = 11;
      break;
    case 12:
      *v1 = 12;
      break;
    case 13:
      *v1 = 13;
      break;
    case 14:
      *v1 = 14;
      break;
    case 15:
      *v1 = 15;
      break;
    case 16:
      *v1 = 16;
      break;
    case 17:
      *v1 = 17;
      break;
    case 18:
      *v1 = 18;
      break;
    case 19:
      *v1 = 19;
      break;
    case 20:
      *v1 = 20;
      break;
    case 21:
      *v1 = 21;
      break;
    case 22:
      *v1 = 22;
      break;
    case 23:
      *v1 = 23;
      break;
    case 24:
      *v1 = 24;
      break;
    case 25:
      *v1 = 25;
      break;
    default:
      *v1 = 26;
      break;
  }
  return (LighthouseDataProcessor::ContextProtoContextType_optional)rawValue;
}

void *static ContextProtoContextType.allCases.getter()
{
  return &unk_2510A6208;
}

uint64_t ContextProtoContextType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

LighthouseDataProcessor::ContextProtoContextType_optional sub_2403BCC4C(Swift::Int *a1)
{
  return ContextProtoContextType.init(rawValue:)(*a1);
}

void sub_2403BCC54(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_2403BCC64()
{
  sub_24040B3F4();
  return sub_2408E5834();
}

void sub_2403BCCA0(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6208;
}

LighthouseDataProcessor::ContextProtoStructuredContextSiriRequestContextUserClassification __swiftcall ContextProtoStructuredContextSiriRequestContextUserClassification.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::ContextProtoStructuredContextSiriRequestContextUserClassification result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::ContextProtoStructuredContextSiriRequestContextUserClassification_optional __swiftcall ContextProtoStructuredContextSiriRequestContextUserClassification.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (LighthouseDataProcessor::ContextProtoStructuredContextSiriRequestContextUserClassification_optional)rawValue;
}

void *static ContextProtoStructuredContextSiriRequestContextUserClassification.allCases.getter()
{
  return &unk_2510A6248;
}

LighthouseDataProcessor::ContextProtoStructuredContextSiriRequestContextUserClassification_optional sub_2403BCCD8(Swift::Int *a1)
{
  return ContextProtoStructuredContextSiriRequestContextUserClassification.init(rawValue:)(*a1);
}

uint64_t sub_2403BCCE0()
{
  sub_24040B3B0();
  return sub_2408E5834();
}

void sub_2403BCD18(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6270;
}

LighthouseDataProcessor::ContextProtoConfidenceBucket __swiftcall ContextProtoConfidenceBucket.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::ContextProtoConfidenceBucket result;

  *v0 = 0;
  return result;
}

void *static ContextProtoConfidenceBucket.allCases.getter()
{
  return &unk_2510A6298;
}

uint64_t sub_2403BCD3C()
{
  sub_24040B36C();
  return sub_2408E5834();
}

void sub_2403BCD74(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A62C0;
}

LighthouseDataProcessor::ContextProtoQueryDecorationCaller __swiftcall ContextProtoQueryDecorationCaller.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::ContextProtoQueryDecorationCaller result;

  *v0 = 0;
  return result;
}

void *static ContextProtoQueryDecorationCaller.allCases.getter()
{
  return &unk_2510A62E8;
}

uint64_t sub_2403BCD98()
{
  sub_24040B328();
  return sub_2408E5834();
}

void sub_2403BCDD0(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6310;
}

LighthouseDataProcessor::ContextProtoEntityMatcherType __swiftcall ContextProtoEntityMatcherType.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::ContextProtoEntityMatcherType result;

  *v0 = 0;
  return result;
}

void *static ContextProtoEntityMatcherType.allCases.getter()
{
  return &unk_2510A6338;
}

uint64_t sub_2403BCDF4()
{
  sub_24040B2E4();
  return sub_2408E5834();
}

void sub_2403BCE2C(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6360;
}

LighthouseDataProcessor::ContextProtoAliasTypesOptions __swiftcall ContextProtoAliasTypesOptions.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::ContextProtoAliasTypesOptions result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::ContextProtoAliasTypesOptions_optional __swiftcall ContextProtoAliasTypesOptions.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 7;
  if ((unint64_t)rawValue < 7)
    v2 = rawValue;
  *v1 = v2;
  return (LighthouseDataProcessor::ContextProtoAliasTypesOptions_optional)rawValue;
}

void *static ContextProtoAliasTypesOptions.allCases.getter()
{
  return &unk_2510A6388;
}

LighthouseDataProcessor::ContextProtoAliasTypesOptions_optional sub_2403BCE64(Swift::Int *a1)
{
  return ContextProtoAliasTypesOptions.init(rawValue:)(*a1);
}

uint64_t sub_2403BCE6C()
{
  sub_24040B2A0();
  return sub_2408E5834();
}

void sub_2403BCEA4(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6388;
}

void ContextProtoRetrievedContext.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ContextProtoRetrievedContext.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ContextProtoRetrievedContext.type.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for ContextProtoRetrievedContext, &qword_256FFA3A8, a1);
}

uint64_t type metadata accessor for ContextProtoRetrievedContext(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFB178);
}

uint64_t ContextProtoRetrievedContext.value.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for ContextProtoRetrievedContext, &qword_256FFA3A8);
}

uint64_t (*ContextProtoRetrievedContext.value.modify())()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.relevance.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for ContextProtoRetrievedContext, &qword_256FFB008, a1);
}

uint64_t ContextProtoRetrievedContext.relevance.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for ContextProtoRetrievedContext, &qword_256FFB008);
}

uint64_t (*ContextProtoRetrievedContext.relevance.modify())()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for ContextProtoRetrievedContext, &qword_256FFB010, a1);
}

uint64_t ContextProtoRetrievedContext.metadata.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for ContextProtoRetrievedContext, &qword_256FFB010);
}

uint64_t (*ContextProtoRetrievedContext.metadata.modify())()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.typedValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD630(type metadata accessor for ContextProtoRetrievedContext, &qword_256FFA3A8, a1);
}

uint64_t ContextProtoRetrievedContext.typedValue.setter(uint64_t a1)
{
  return sub_2403BD68C(a1, type metadata accessor for ContextProtoRetrievedContext, &qword_256FFA3A8);
}

uint64_t (*ContextProtoRetrievedContext.typedValue.modify())()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.structuredContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ContextProtoRetrievedContext(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 36), a1, &qword_256FFB018);
}

uint64_t ContextProtoRetrievedContext.structuredContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ContextProtoRetrievedContext(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 36), &qword_256FFB018);
}

uint64_t (*ContextProtoRetrievedContext.structuredContext.modify())()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.identifier.getter()
{
  return sub_2403BD798(type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t ContextProtoRetrievedContext.identifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_2403BD7E4(a1, a2, type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t (*ContextProtoRetrievedContext.identifier.modify())()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD85C(type metadata accessor for ContextProtoRetrievedContext, a1);
}

uint64_t ContextProtoRetrievedContext.unknownFields.setter(uint64_t a1)
{
  return sub_2403BD8B4(a1, type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t (*ContextProtoRetrievedContext.unknownFields.modify())()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  return nullsub_1;
}

uint64_t ContextProtoRetrievedContext.init()@<X0>(_BYTE *a1@<X8>)
{
  int *v2;
  _BYTE *v3;
  uint64_t v4;
  void (*v5)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;

  v2 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  v3 = &a1[v2[5]];
  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  v5 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v6 = &a1[v2[6]];
  v7 = type metadata accessor for ContextProtoConfidence(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = &a1[v2[7]];
  v9 = type metadata accessor for ContextProtoContextMetadata(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v5(&a1[v2[8]], 1, 1, v4);
  v10 = &a1[v2[9]];
  v11 = type metadata accessor for ContextProtoStructuredContext(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = &a1[v2[10]];
  *v12 = 0;
  v12[1] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  return result;
}

uint64_t type metadata accessor for ContextProtoConfidence(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFB428);
}

uint64_t type metadata accessor for ContextProtoContextMetadata(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFB240);
}

uint64_t type metadata accessor for ContextProtoStructuredContext(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFB4C0);
}

uint64_t ContextProtoRetrievedContext.init(value:relevance:type:metadata:typedValue:structuredContext:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t result;
  char v25;

  v25 = *a3;
  v12 = (int *)type metadata accessor for ContextProtoRetrievedContext(0);
  v13 = (uint64_t)&a9[v12[5]];
  v14 = type metadata accessor for ToolKitProtoTypedValue(0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v16 = (uint64_t)&a9[v12[6]];
  v17 = type metadata accessor for ContextProtoConfidence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = (uint64_t)&a9[v12[7]];
  v19 = type metadata accessor for ContextProtoContextMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (uint64_t)&a9[v12[8]];
  v15(v20, 1, 1, v14);
  v21 = (uint64_t)&a9[v12[9]];
  v22 = type metadata accessor for ContextProtoStructuredContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  v23 = &a9[v12[10]];
  *v23 = 0;
  v23[1] = 0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, v13, &qword_256FFA3A8);
  sub_2403C25A0(a2, v16, &qword_256FFB008);
  *a9 = v25;
  sub_2403C25A0(a4, v18, &qword_256FFB010);
  sub_2403C25A0(a5, v20, &qword_256FFA3A8);
  sub_2403C25A0(a6, v21, &qword_256FFB018);
  result = swift_bridgeObjectRelease();
  *v23 = a7;
  v23[1] = a8;
  return result;
}

uint64_t ContextProtoContextMetadata.onScreenSurroundingText.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoContextMetadata.onScreenSurroundingText.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*ContextProtoContextMetadata.onScreenSurroundingText.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.entityID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*ContextProtoContextMetadata.entityID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.appBundleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*ContextProtoContextMetadata.appBundleID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.saliency.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for ContextProtoContextMetadata, &qword_256FFB008, a1);
}

uint64_t sub_2403BD554@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_2403A9210(v3 + *(int *)(v6 + 28), a3, a2);
}

uint64_t ContextProtoContextMetadata.saliency.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for ContextProtoContextMetadata, &qword_256FFB008);
}

uint64_t sub_2403BD5B0(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_2403C25A0(a1, v3 + *(int *)(v6 + 28), a3);
}

uint64_t (*ContextProtoContextMetadata.saliency.modify())()
{
  type metadata accessor for ContextProtoContextMetadata(0);
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.onScreenBoundingBox.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD630(type metadata accessor for ContextProtoContextMetadata, &qword_256FFB020, a1);
}

uint64_t sub_2403BD630@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_2403A9210(v3 + *(int *)(v6 + 32), a3, a2);
}

uint64_t ContextProtoContextMetadata.onScreenBoundingBox.setter(uint64_t a1)
{
  return sub_2403BD68C(a1, type metadata accessor for ContextProtoContextMetadata, &qword_256FFB020);
}

uint64_t sub_2403BD68C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_2403C25A0(a1, v3 + *(int *)(v6 + 32), a3);
}

uint64_t (*ContextProtoContextMetadata.onScreenBoundingBox.modify())()
{
  type metadata accessor for ContextProtoContextMetadata(0);
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.seq.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContextProtoContextMetadata(0) + 36));
}

uint64_t ContextProtoContextMetadata.seq.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for ContextProtoContextMetadata(0);
  v6 = v2 + *(int *)(result + 36);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoContextMetadata.seq.modify())()
{
  type metadata accessor for ContextProtoContextMetadata(0);
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.groupID.getter()
{
  return sub_2403BD798(type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_2403BD798(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ContextProtoContextMetadata.groupID.setter(uint64_t a1, uint64_t a2)
{
  return sub_2403BD7E4(a1, a2, type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_2403BD7E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3(0) + 40));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*ContextProtoContextMetadata.groupID.modify())()
{
  type metadata accessor for ContextProtoContextMetadata(0);
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD85C(type metadata accessor for ContextProtoContextMetadata, a1);
}

uint64_t sub_2403BD85C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 44);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ContextProtoContextMetadata.unknownFields.setter(uint64_t a1)
{
  return sub_2403BD8B4(a1, type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_2403BD8B4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 44);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*ContextProtoContextMetadata.unknownFields.modify())()
{
  type metadata accessor for ContextProtoContextMetadata(0);
  return nullsub_1;
}

uint64_t ContextProtoContextMetadata.init()@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;

  v2 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  v3 = a1 + v2[7];
  v4 = type metadata accessor for ContextProtoConfidence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = a1 + v2[8];
  v6 = type metadata accessor for ContextProtoBoundingBox(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = a1 + v2[9];
  *(_QWORD *)v7 = 0;
  *(_BYTE *)(v7 + 8) = 1;
  v8 = (_QWORD *)(a1 + v2[10]);
  *v8 = 0;
  v8[1] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t type metadata accessor for ContextProtoBoundingBox(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFB2F0);
}

uint64_t ContextProtoContextMetadata.init(entityID:appBundleID:saliency:onScreenSurroundingText:onScreenBoundingBox:seq:groupID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, char a10, uint64_t a11, uint64_t a12)
{
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t result;

  v17 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  v18 = (uint64_t)a9 + v17[7];
  v19 = type metadata accessor for ContextProtoConfidence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (uint64_t)a9 + v17[8];
  v21 = type metadata accessor for ContextProtoBoundingBox(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = (char *)a9 + v17[9];
  *(_QWORD *)v22 = 0;
  v22[8] = 1;
  v23 = (_QWORD *)((char *)a9 + v17[10]);
  *v23 = 0;
  v23[1] = 0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  a9[1] = a1;
  a9[2] = a2;
  a9[3] = a3;
  a9[4] = a4;
  sub_2403C25A0(a5, v18, &qword_256FFB008);
  *a9 = a6;
  sub_2403C25A0(a7, v20, &qword_256FFB020);
  *(_QWORD *)v22 = a8;
  v22[8] = a10 & 1;
  result = swift_bridgeObjectRelease();
  *v23 = a11;
  v23[1] = a12;
  return result;
}

unint64_t ContextProtoBoundingBox.xCoordinate.getter()
{
  unsigned int *v0;

  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t ContextProtoBoundingBox.xCoordinate.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)v1 = result;
  *(_BYTE *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoBoundingBox.xCoordinate.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoBoundingBox.yCoordinate.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t ContextProtoBoundingBox.yCoordinate.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  *(_BYTE *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoBoundingBox.yCoordinate.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoBoundingBox.width.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
}

uint64_t ContextProtoBoundingBox.width.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  *(_BYTE *)(v1 + 20) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoBoundingBox.width.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoBoundingBox.height.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
}

uint64_t ContextProtoBoundingBox.height.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  *(_BYTE *)(v1 + 28) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoBoundingBox.height.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoBoundingBox.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF140(type metadata accessor for ContextProtoBoundingBox, a1);
}

uint64_t ContextProtoBoundingBox.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF198(a1, type metadata accessor for ContextProtoBoundingBox);
}

uint64_t (*ContextProtoBoundingBox.unknownFields.modify())()
{
  type metadata accessor for ContextProtoBoundingBox(0);
  return nullsub_1;
}

uint64_t ContextProtoBoundingBox.init()@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 1;
  *(_DWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 12) = 1;
  *(_DWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 20) = 1;
  *(_DWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 28) = 1;
  type metadata accessor for ContextProtoBoundingBox(0);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t ContextProtoBoundingBox.init(xCoordinate:yCoordinate:width:height:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  type metadata accessor for ContextProtoBoundingBox(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_DWORD *)a5 = a1;
  *(_BYTE *)(a5 + 4) = BYTE4(a1) & 1;
  *(_DWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 12) = BYTE4(a2) & 1;
  *(_DWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 20) = BYTE4(a3) & 1;
  *(_DWORD *)(a5 + 24) = a4;
  *(_BYTE *)(a5 + 28) = BYTE4(a4) & 1;
  return result;
}

uint64_t (*ContextProtoSurroundingText.text.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoSurroundingText.onScreenBoundingBox.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for ContextProtoSurroundingText, &qword_256FFB020, a1);
}

uint64_t sub_2403BDDA0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_2403A9210(v3 + *(int *)(v6 + 20), a3, a2);
}

uint64_t type metadata accessor for ContextProtoSurroundingText(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFB390);
}

uint64_t ContextProtoSurroundingText.onScreenBoundingBox.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for ContextProtoSurroundingText, &qword_256FFB020);
}

uint64_t sub_2403BDE10(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_2403C25A0(a1, v3 + *(int *)(v6 + 20), a3);
}

uint64_t (*ContextProtoSurroundingText.onScreenBoundingBox.modify())()
{
  type metadata accessor for ContextProtoSurroundingText(0);
  return nullsub_1;
}

uint64_t ContextProtoSurroundingText.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for ContextProtoSurroundingText, a1);
}

uint64_t ContextProtoSurroundingText.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for ContextProtoSurroundingText);
}

uint64_t (*ContextProtoSurroundingText.unknownFields.modify())()
{
  type metadata accessor for ContextProtoSurroundingText(0);
  return nullsub_1;
}

uint64_t ContextProtoSurroundingText.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v2 = type metadata accessor for ContextProtoSurroundingText(0);
  *a1 = 0;
  a1[1] = 0;
  v3 = (char *)a1 + *(int *)(v2 + 20);
  v4 = type metadata accessor for ContextProtoBoundingBox(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t ContextProtoSurroundingText.init(text:onScreenBoundingBox:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  v8 = (uint64_t)a4 + *(int *)(type metadata accessor for ContextProtoSurroundingText(0) + 20);
  v9 = type metadata accessor for ContextProtoBoundingBox(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a4 = a1;
  a4[1] = a2;
  return sub_2403C25A0(a3, v8, &qword_256FFB020);
}

float ContextProtoConfidence.score.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void ContextProtoConfidence.score.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*ContextProtoConfidence.score.modify())()
{
  return nullsub_1;
}

void ContextProtoConfidence.bucket.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 4);
}

_BYTE *ContextProtoConfidence.bucket.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = *result;
  return result;
}

uint64_t (*ContextProtoConfidence.bucket.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoConfidence.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for ContextProtoConfidence, a1);
}

uint64_t sub_2403BE010@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 24);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ContextProtoConfidence.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_2403BE068(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 24);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*ContextProtoConfidence.unknownFields.modify())()
{
  type metadata accessor for ContextProtoConfidence(0);
  return nullsub_1;
}

uint64_t ContextProtoConfidence.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ContextProtoConfidence(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_DWORD *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 0;
  return result;
}

uint64_t ContextProtoConfidence.init(score:bucket:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  char v5;
  uint64_t result;

  v5 = *a1;
  type metadata accessor for ContextProtoConfidence(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(float *)a2 = a3;
  *(_BYTE *)(a2 + 4) = v5;
  return result;
}

uint64_t ContextProtoStructuredContext.structuredContextKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFB028);
}

uint64_t ContextProtoStructuredContext.structuredContextKind.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFB028);
}

uint64_t (*ContextProtoStructuredContext.structuredContextKind.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContext.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for ContextProtoStructuredContext, a1);
}

uint64_t ContextProtoStructuredContext.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for ContextProtoStructuredContext);
}

uint64_t (*ContextProtoStructuredContext.unknownFields.modify())()
{
  type metadata accessor for ContextProtoStructuredContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContext.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for ContextProtoStructuredContextKind, (void (*)(_QWORD))type metadata accessor for ContextProtoStructuredContext, a1);
}

uint64_t type metadata accessor for ContextProtoStructuredContextKind(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFB570);
}

uint64_t static ContextProtoStructuredContextKind.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB030);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_2403AE1A4(a1, (uint64_t)v10, type metadata accessor for ContextProtoStructuredContextKind);
  sub_2403AE1A4(a2, v11, type metadata accessor for ContextProtoStructuredContextKind);
  sub_2403A91CC((uint64_t)v10, (uint64_t)v6, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  LOBYTE(a2) = _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD0V2eeoiySbAC_ACtFZ_0((uint64_t)v6, v11);
  sub_240388AE4(v11, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  sub_240388AE4((uint64_t)v6, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  return a2 & 1;
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContext(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFB5D8);
}

uint64_t sub_2403BE344(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v4 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB030);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_2403AE1A4(a1, (uint64_t)v10, type metadata accessor for ContextProtoStructuredContextKind);
  sub_2403AE1A4(a2, v11, type metadata accessor for ContextProtoStructuredContextKind);
  sub_2403A91CC((uint64_t)v10, (uint64_t)v6, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  LOBYTE(a2) = static ContextProtoStructuredContextSiriRequestContext.== infix(_:_:)((uint64_t)v6, v11);
  sub_240388AE4(v11, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  sub_240388AE4((uint64_t)v6, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  return a2 & 1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.deviceRestrictions.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.bargeInModes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoStructuredContextSiriRequestContext.bargeInModes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.bargeInModes.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.sessionID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.sessionID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.requestID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.requestID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.inputOrigin.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.inputOrigin.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.responseMode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.responseMode.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isEyesFree.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isEyesFree.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isEyesFree.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isMultiUser.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isMultiUser.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 81) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isMultiUser.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isVoiceTriggerEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 82);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isVoiceTriggerEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 82) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isVoiceTriggerEnabled.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTextToSpeechEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 83);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTextToSpeechEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 83) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isTextToSpeechEnabled.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTriggerlessFollowup.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 84);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.isTriggerlessFollowup.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 84) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.isTriggerlessFollowup.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.identifiedUser.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 60), a1, &qword_256FFB038);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.identifiedUser.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 60), &qword_256FFB038);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.identifiedUser.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.encodedLocation.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0) + 64);
  v2 = *(_QWORD *)v1;
  sub_2403C2410(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.encodedLocation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0) + 64);
  result = sub_2403C2424(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.encodedLocation.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.countryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0) + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0) + 68));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.countryCode.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.siriLocale.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0) + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.siriLocale.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0) + 72));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.siriLocale.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.contentRestrictions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 76), a1, &qword_256FFB040);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.contentRestrictions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 76), &qword_256FFB040);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.contentRestrictions.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.uiScale.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0) + 80));
}

uint64_t ContextProtoStructuredContextSiriRequestContext.uiScale.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v6 = v2 + *(int *)(result + 80);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.uiScale.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.temperatureUnit.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0) + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.temperatureUnit.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0) + 84));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.temperatureUnit.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.allowUserGeneratedContent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0)
                                     + 88));
}

uint64_t ContextProtoStructuredContextSiriRequestContext.allowUserGeneratedContent.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  *(_BYTE *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.allowUserGeneratedContent.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.censorSpeech.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0)
                                     + 92));
}

uint64_t ContextProtoStructuredContextSiriRequestContext.censorSpeech.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  *(_BYTE *)(v1 + *(int *)(result + 92)) = a1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.censorSpeech.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.meCard.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BFE20(type metadata accessor for ContextProtoStructuredContextSiriRequestContext, &qword_256FFB048, a1);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.meCard.setter(uint64_t a1)
{
  return sub_2403BFE7C(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, &qword_256FFB048);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.meCard.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BFEF4(type metadata accessor for ContextProtoStructuredContextSiriRequestContext, a1);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.unknownFields.setter(uint64_t a1)
{
  return sub_2403BFF4C(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContext.unknownFields.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.init()@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  v2 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  *(_DWORD *)(a1 + 80) = 33686018;
  *(_BYTE *)(a1 + 84) = 2;
  v3 = a1 + v2[15];
  v4 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_OWORD *)(a1 + v2[16]) = xmmword_2408EA6D0;
  v5 = (_QWORD *)(a1 + v2[17]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(a1 + v2[18]);
  *v6 = 0;
  v6[1] = 0;
  v7 = a1 + v2[19];
  v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = a1 + v2[20];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = (_QWORD *)(a1 + v2[21]);
  *v10 = 0;
  v10[1] = 0;
  *(_BYTE *)(a1 + v2[22]) = 2;
  *(_BYTE *)(a1 + v2[23]) = 2;
  v11 = a1 + v2[24];
  v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  v14 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 8) = v14;
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContext.init(sessionID:requestID:inputOrigin:responseMode:isEyesFree:isMultiUser:isVoiceTriggerEnabled:isTextToSpeechEnabled:isTriggerlessFollowup:deviceRestrictions:bargeInModes:identifiedUser:encodedLocation:countryCode:siriLocale:contentRestrictions:uiScale:temperatureUnit:allowUserGeneratedContent:censorSpeech:meCard:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,char a26,uint64_t a27)
{
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;

  v28 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v29 = a9 + v28[15];
  v43 = v29;
  v30 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v31 = a9 + v28[16];
  *(_OWORD *)v31 = xmmword_2408EA6D0;
  v32 = (_QWORD *)(a9 + v28[17]);
  *v32 = 0;
  v32[1] = 0;
  v33 = (_QWORD *)(a9 + v28[18]);
  *v33 = 0;
  v33[1] = 0;
  v34 = a9 + v28[19];
  v44 = v34;
  v35 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v34, 1, 1, v35);
  v36 = a9 + v28[20];
  *(_QWORD *)v36 = 0;
  *(_BYTE *)(v36 + 8) = 1;
  v37 = (_QWORD *)(a9 + v28[21]);
  *v37 = 0;
  v37[1] = 0;
  v38 = v28[22];
  *(_BYTE *)(a9 + v38) = 2;
  v39 = v28[23];
  *(_BYTE *)(a9 + v39) = 2;
  v40 = a9 + v28[24];
  v41 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = a8;
  *(_BYTE *)(a9 + 80) = a10;
  *(_DWORD *)(a9 + 81) = *(_DWORD *)((char *)&a10 + 1);
  *(_QWORD *)a9 = a11;
  *(_QWORD *)(a9 + 8) = a12;
  sub_2403C25A0(a13, v43, &qword_256FFB038);
  sub_2403C2424(*(_QWORD *)v31, *(_QWORD *)(v31 + 8));
  *(_QWORD *)v31 = a14;
  *(_QWORD *)(v31 + 8) = a15;
  swift_bridgeObjectRelease();
  *v32 = a16;
  v32[1] = a17;
  swift_bridgeObjectRelease();
  *v33 = a18;
  v33[1] = a19;
  sub_2403C25A0(a20, v44, &qword_256FFB040);
  *(_QWORD *)v36 = a21;
  *(_BYTE *)(v36 + 8) = a22 & 1;
  swift_bridgeObjectRelease();
  *v37 = a23;
  v37[1] = a24;
  *(_BYTE *)(a9 + v38) = a25;
  *(_BYTE *)(a9 + v39) = a26;
  return sub_2403C25A0(a27, v40, &qword_256FFB048);
}

unint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.appRestriction.getter()
{
  unsigned int *v0;

  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.appRestriction.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)v1 = result;
  *(_BYTE *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.appRestriction.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.countryCode.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.movieRestriction.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.movieRestriction.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = result;
  *(_BYTE *)(v1 + 28) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.movieRestriction.modify())()
{
  return nullsub_1;
}

unint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.tvRestriction.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32);
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.tvRestriction.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 32) = result;
  *(_BYTE *)(v1 + 36) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.tvRestriction.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF140(type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, a1);
}

uint64_t sub_2403BF140@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 32);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF198(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_2403BF198(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 32);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextContentRestriction.unknownFields.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.init()@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 28) = 1;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = 1;
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.init(appRestriction:countryCode:movieRestriction:tvRestriction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t result;

  type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_DWORD *)a6 = a1;
  *(_BYTE *)(a6 + 4) = BYTE4(a1) & 1;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = a3;
  *(_DWORD *)(a6 + 24) = a4;
  *(_BYTE *)(a6 + 28) = BYTE4(a4) & 1;
  *(_DWORD *)(a6 + 32) = a5;
  *(_BYTE *)(a6 + 36) = BYTE4(a5) & 1;
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.userID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.userID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.userID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.isOnlyUserInHome.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.isOnlyUserInHome.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.isOnlyUserInHome.modify())()
{
  return nullsub_1;
}

void ContextProtoStructuredContextSiriRequestContextUser.classification.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

_BYTE *ContextProtoStructuredContextSiriRequestContextUser.classification.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.classification.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, a1);
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextUser.unknownFields.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.init()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1282;
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.init(userID:isOnlyUserInHome:classification:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v9;
  uint64_t result;

  v9 = *a4;
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 17) = v9;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.addresses.modify())()
{
  return nullsub_1;
}

uint64_t _s23LighthouseDataProcessor012ContextProtoD8MetadataV8entityIDSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.givenName.modify())()
{
  return nullsub_1;
}

uint64_t _s23LighthouseDataProcessor012ContextProtoD8MetadataV11appBundleIDSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.middleName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.familyName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.familyName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.nickName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.nickName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.nickName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.fullName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.fullName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.fullName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF900(type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, a1);
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF958(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextMeCard.unknownFields.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.init(givenName:middleName:familyName:nickName:fullName:addresses:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  a9[2] = a2;
  a9[3] = a3;
  a9[4] = a4;
  a9[5] = a5;
  a9[6] = a6;
  a9[7] = a7;
  a9[8] = a8;
  a9[9] = a10;
  a9[10] = a11;
  *a9 = a12;
  a9[1] = a1;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.label.modify())()
{
  return nullsub_1;
}

uint64_t _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD0V9sessionIDSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.street.modify())()
{
  return nullsub_1;
}

uint64_t _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD0V9requestIDSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.city.modify())()
{
  return nullsub_1;
}

uint64_t _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD0V11inputOriginSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.state.modify())()
{
  return nullsub_1;
}

uint64_t _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD0V12responseModeSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.postalCode.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.countryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.countryCode.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF900(type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, a1);
}

uint64_t sub_2403BF900@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 40);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF958(a1, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_2403BF958(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 40);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*ContextProtoStructuredContextSiriRequestContextAddress.unknownFields.modify())()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
  return nullsub_1;
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.init()@<X0>(_OWORD *a1@<X8>)
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
  *a1 = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

__n128 ContextProtoStructuredContextSiriRequestContextAddress.init(label:street:city:state:postalCode:countryCode:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11, unint64_t a12)
{
  __n128 result;

  type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  result = a10;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  a9[5].n128_u64[1] = a12;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.spans.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.spansIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t ContextProtoQueryDecorationOutput.spansIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.spansIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationOutput.requiredContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.requiredContextIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t ContextProtoQueryDecorationOutput.requiredContextIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.requiredContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.utteranceContext.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.utteranceContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.utteranceContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.utteranceContextIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t ContextProtoQueryDecorationOutput.utteranceContextIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.utteranceContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedTools.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedTools.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedTools.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedToolsIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedToolsIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedToolsIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedTools.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedTools.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedTools.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedToolsIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedToolsIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedToolsIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedSpans.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedSpans.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedSpans.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedSpansIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedSpansIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 88) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedSpansIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedSpans.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedSpans.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedSpans.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedSpansIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedSpansIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 104) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedSpansIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedUtteranceContext.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedUtteranceContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 112) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedUtteranceContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedUtteranceContextIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t ContextProtoQueryDecorationOutput.originalRankedUtteranceContextIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 120) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.originalRankedUtteranceContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContext.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContext.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 128) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContext.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContextIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContextIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 136) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.adjustedRankedUtteranceContextIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.dynamicEnumerationEntities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationOutput.dynamicEnumerationEntities.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 144) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.dynamicEnumerationEntities.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.dynamicEnumerationEntitiesIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 152);
}

uint64_t ContextProtoQueryDecorationOutput.dynamicEnumerationEntitiesIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 152) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationOutput.dynamicEnumerationEntitiesIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.toolRetrievalResponse.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BFE20(type metadata accessor for ContextProtoQueryDecorationOutput, &qword_256FFA470, a1);
}

uint64_t sub_2403BFE20@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_2403A9210(v3 + *(int *)(v6 + 96), a3, a2);
}

uint64_t ContextProtoQueryDecorationOutput.toolRetrievalResponse.setter(uint64_t a1)
{
  return sub_2403BFE7C(a1, type metadata accessor for ContextProtoQueryDecorationOutput, &qword_256FFA470);
}

uint64_t sub_2403BFE7C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_2403C25A0(a1, v3 + *(int *)(v6 + 96), a3);
}

uint64_t (*ContextProtoQueryDecorationOutput.toolRetrievalResponse.modify())()
{
  type metadata accessor for ContextProtoQueryDecorationOutput(0);
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BFEF4(type metadata accessor for ContextProtoQueryDecorationOutput, a1);
}

uint64_t sub_2403BFEF4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 100);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ContextProtoQueryDecorationOutput.unknownFields.setter(uint64_t a1)
{
  return sub_2403BFF4C(a1, type metadata accessor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_2403BFF4C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 100);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*ContextProtoQueryDecorationOutput.unknownFields.modify())()
{
  type metadata accessor for ContextProtoQueryDecorationOutput(0);
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationOutput.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t result;
  uint64_t v5;

  v2 = a1 + *(int *)(type metadata accessor for ContextProtoQueryDecorationOutput(0) + 96);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationToolRetrievalResponse - 8) + 56))(v2, 1, 1, DecorationToolRetrievalResponse);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = v5;
  *(_BYTE *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = v5;
  *(_BYTE *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = v5;
  *(_BYTE *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = v5;
  *(_BYTE *)(a1 + 136) = 0;
  *(_QWORD *)(a1 + 144) = v5;
  *(_BYTE *)(a1 + 152) = 0;
  return result;
}

uint64_t ContextProtoQueryDecorationOutput.init(spans:spansIsPresent:requiredContext:requiredContextIsPresent:utteranceContext:utteranceContextIsPresent:originalRankedTools:originalRankedToolsIsPresent:adjustedRankedTools:adjustedRankedToolsIsPresent:originalRankedSpans:originalRankedSpansIsPresent:adjustedRankedSpans:adjustedRankedSpansIsPresent:originalRankedUtteranceContext:originalRankedUtteranceContextIsPresent:adjustedRankedUtteranceContext:adjustedRankedUtteranceContextIsPresent:toolRetrievalResponse:dynamicEnumerationEntities:dynamicEnumerationEntitiesIsPresent:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22)
{
  uint64_t v25;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t result;

  v25 = a9 + *(int *)(type metadata accessor for ContextProtoQueryDecorationOutput(0) + 96);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationToolRetrievalResponse - 8) + 56))(v25, 1, 1, DecorationToolRetrievalResponse);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_BYTE *)(a9 + 72) = a11;
  *(_QWORD *)(a9 + 80) = a12;
  *(_BYTE *)(a9 + 88) = a13;
  *(_QWORD *)(a9 + 96) = a14;
  *(_BYTE *)(a9 + 104) = a15;
  *(_QWORD *)(a9 + 112) = a16;
  *(_BYTE *)(a9 + 120) = a17;
  *(_QWORD *)(a9 + 128) = a18;
  *(_BYTE *)(a9 + 136) = a19;
  result = sub_2403C25A0(a20, v25, &qword_256FFA470);
  *(_QWORD *)(a9 + 144) = a21;
  *(_BYTE *)(a9 + 152) = a22;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.query.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationInput.caller.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.spanTypeFilters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationInput.spanTypeFilters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.spanTypeFilters.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.spanTypeFiltersIsPresent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t ContextProtoQueryDecorationInput.spanTypeFiltersIsPresent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.spanTypeFiltersIsPresent.modify())()
{
  return nullsub_1;
}

uint64_t _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD6MeCardV10familyNameSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.requestID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.maxToolsReturned.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t ContextProtoQueryDecorationInput.maxToolsReturned.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = result;
  *(_BYTE *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.maxToolsReturned.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.maxSpansReturned.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t ContextProtoQueryDecorationInput.maxSpansReturned.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = result;
  *(_BYTE *)(v2 + 80) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.maxSpansReturned.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.maxContextReturned.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t ContextProtoQueryDecorationInput.maxContextReturned.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = result;
  *(_BYTE *)(v2 + 96) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.maxContextReturned.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.requiredContextReturned.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t ContextProtoQueryDecorationInput.requiredContextReturned.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 97) = result;
  return result;
}

uint64_t (*ContextProtoQueryDecorationInput.requiredContextReturned.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ContextProtoQueryDecorationInput(0) + 52);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ContextProtoQueryDecorationInput.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ContextProtoQueryDecorationInput(0) + 52);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ContextProtoQueryDecorationInput.unknownFields.modify())()
{
  type metadata accessor for ContextProtoQueryDecorationInput(0);
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationInput.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 1;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 1;
  *(_QWORD *)(a1 + 88) = 0;
  *(_WORD *)(a1 + 96) = 513;
  type metadata accessor for ContextProtoQueryDecorationInput(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 32) = 0;
  return result;
}

uint64_t ContextProtoQueryDecorationInput.init(query:requestID:caller:maxToolsReturned:maxSpansReturned:maxContextReturned:spanTypeFilters:spanTypeFiltersIsPresent:requiredContextReturned:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, char a12, uint64_t a13, char a14, char a15)
{
  char v21;
  uint64_t result;

  v21 = *a5;
  type metadata accessor for ContextProtoQueryDecorationInput(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 40) = a3;
  *(_QWORD *)(a9 + 48) = a4;
  *(_BYTE *)(a9 + 16) = v21;
  *(_QWORD *)(a9 + 56) = a6;
  *(_BYTE *)(a9 + 64) = a7 & 1;
  *(_QWORD *)(a9 + 72) = a8;
  *(_BYTE *)(a9 + 80) = a10 & 1;
  *(_QWORD *)(a9 + 88) = a11;
  *(_BYTE *)(a9 + 96) = a12 & 1;
  *(_QWORD *)(a9 + 24) = a13;
  *(_BYTE *)(a9 + 32) = a14;
  *(_BYTE *)(a9 + 97) = a15;
  return result;
}

uint64_t (*ContextProtoDynamicEnumerationEntity.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoDynamicEnumerationEntity.parameterTypeInstance.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for ContextProtoDynamicEnumerationEntity, &qword_256FFA428, a1);
}

uint64_t ContextProtoDynamicEnumerationEntity.parameterTypeInstance.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for ContextProtoDynamicEnumerationEntity, &qword_256FFA428);
}

uint64_t (*ContextProtoDynamicEnumerationEntity.parameterTypeInstance.modify())()
{
  type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  return nullsub_1;
}

uint64_t ContextProtoDynamicEnumerationEntity.typedValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for ContextProtoDynamicEnumerationEntity, &qword_256FFA3A8, a1);
}

uint64_t sub_2403C0604@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_2403A9210(v3 + *(int *)(v6 + 24), a3, a2);
}

uint64_t ContextProtoDynamicEnumerationEntity.typedValue.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for ContextProtoDynamicEnumerationEntity, &qword_256FFA3A8);
}

uint64_t sub_2403C0660(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_2403C25A0(a1, v3 + *(int *)(v6 + 24), a3);
}

uint64_t (*ContextProtoDynamicEnumerationEntity.typedValue.modify())()
{
  type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  return nullsub_1;
}

uint64_t ContextProtoDynamicEnumerationEntity.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for ContextProtoDynamicEnumerationEntity, a1);
}

uint64_t sub_2403C06D8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 28);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ContextProtoDynamicEnumerationEntity.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_2403C0730(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 28);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*ContextProtoDynamicEnumerationEntity.unknownFields.modify())()
{
  type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  return nullsub_1;
}

uint64_t ContextProtoDynamicEnumerationEntity.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;

  v2 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  v3 = (char *)a1 + *(int *)(v2 + 20);
  v4 = type metadata accessor for ToolKitProtoTypeInstance(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = (char *)a1 + *(int *)(v2 + 24);
  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t ContextProtoDynamicEnumerationEntity.init(identifier:parameterTypeInstance:typedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v10 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  v11 = (uint64_t)a5 + *(int *)(v10 + 20);
  v12 = type metadata accessor for ToolKitProtoTypeInstance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (uint64_t)a5 + *(int *)(v10 + 24);
  v14 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a5 = a1;
  a5[1] = a2;
  sub_2403C25A0(a3, v11, &qword_256FFA428);
  return sub_2403C25A0(a4, v13, &qword_256FFA3A8);
}

float ContextProtoRetrievedTool.similarityScore.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void ContextProtoRetrievedTool.similarityScore.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*ContextProtoRetrievedTool.similarityScore.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoRetrievedTool.sampleInvocations.modify())()
{
  return nullsub_1;
}

void ContextProtoRetrievedTool.stage.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

_BYTE *ContextProtoRetrievedTool.stage.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = *result;
  return result;
}

uint64_t (*ContextProtoRetrievedTool.stage.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedTool.definition.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BD554(type metadata accessor for ContextProtoRetrievedTool, &qword_256FFB050, a1);
}

uint64_t ContextProtoRetrievedTool.definition.setter(uint64_t a1)
{
  return sub_2403BD5B0(a1, type metadata accessor for ContextProtoRetrievedTool, &qword_256FFB050);
}

uint64_t (*ContextProtoRetrievedTool.definition.modify())()
{
  type metadata accessor for ContextProtoRetrievedTool(0);
  return nullsub_1;
}

LighthouseDataProcessor::ContextProtoRetrievedTool::Stage __swiftcall ContextProtoRetrievedTool.Stage.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::ContextProtoRetrievedTool::Stage result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::ContextProtoRetrievedTool::Stage_optional __swiftcall ContextProtoRetrievedTool.Stage.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (LighthouseDataProcessor::ContextProtoRetrievedTool::Stage_optional)rawValue;
}

void *static ContextProtoRetrievedTool.Stage.allCases.getter()
{
  return &unk_2510A63B0;
}

LighthouseDataProcessor::ContextProtoRetrievedTool::Stage_optional sub_2403C09EC(Swift::Int *a1)
{
  return ContextProtoRetrievedTool.Stage.init(rawValue:)(*a1);
}

uint64_t sub_2403C09F4()
{
  sub_2408E6218();
  sub_2408E5CB4();
  return sub_2408E623C();
}

uint64_t sub_2403C0A54()
{
  sub_24040B25C();
  return sub_2408E5834();
}

uint64_t sub_2403C0A8C()
{
  sub_2408E6218();
  sub_2408E5CB4();
  return sub_2408E623C();
}

void sub_2403C0AE8(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A63D8;
}

uint64_t ContextProtoRetrievedTool.Definition.definitionValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFB058);
}

uint64_t ContextProtoRetrievedTool.Definition.definitionValues.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFB058);
}

uint64_t (*ContextProtoRetrievedTool.Definition.definitionValues.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoRetrievedTool.Definition.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for ContextProtoRetrievedTool.Definition, a1);
}

uint64_t sub_2403C0B58@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 20);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ContextProtoRetrievedTool.Definition.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_2403C0BB0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 20);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*ContextProtoRetrievedTool.Definition.unknownFields.modify())()
{
  type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  return nullsub_1;
}

uint64_t ContextProtoRetrievedTool.Definition.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum, (void (*)(_QWORD))type metadata accessor for ContextProtoRetrievedTool.Definition, a1);
}

uint64_t sub_2403C0C34@<X0>(uint64_t (*a1)(_QWORD)@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  v5 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a3, 1, 1, v5);
  a2(0);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t ContextProtoRetrievedTool.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BF140(type metadata accessor for ContextProtoRetrievedTool, a1);
}

uint64_t ContextProtoRetrievedTool.unknownFields.setter(uint64_t a1)
{
  return sub_2403BF198(a1, type metadata accessor for ContextProtoRetrievedTool);
}

uint64_t (*ContextProtoRetrievedTool.unknownFields.modify())()
{
  type metadata accessor for ContextProtoRetrievedTool(0);
  return nullsub_1;
}

uint64_t ContextProtoRetrievedTool.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = a1 + *(int *)(type metadata accessor for ContextProtoRetrievedTool(0) + 28);
  v3 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

uint64_t ContextProtoRetrievedTool.init(definition:similarityScore:sampleInvocations:stage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v9 = *a3;
  v10 = a4 + *(int *)(type metadata accessor for ContextProtoRetrievedTool(0) + 28);
  v11 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = sub_2403C25A0(a1, v10, &qword_256FFB050);
  *(float *)a4 = a5;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = v9;
  return result;
}

uint64_t (*ContextProtoSampleInvocation.invocationString.modify())()
{
  return nullsub_1;
}

float ContextProtoSampleInvocation.score.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void ContextProtoSampleInvocation.score.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 16) = a1;
}

uint64_t (*ContextProtoSampleInvocation.score.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoSampleInvocation.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for ContextProtoSampleInvocation, a1);
}

uint64_t ContextProtoSampleInvocation.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for ContextProtoSampleInvocation);
}

uint64_t (*ContextProtoSampleInvocation.unknownFields.modify())()
{
  type metadata accessor for ContextProtoSampleInvocation(0);
  return nullsub_1;
}

uint64_t ContextProtoSampleInvocation.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ContextProtoSampleInvocation(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  return result;
}

uint64_t ContextProtoSampleInvocation.init(invocationString:score:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, float a4@<S0>)
{
  uint64_t result;

  type metadata accessor for ContextProtoSampleInvocation(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(float *)(a3 + 16) = a4;
  return result;
}

uint64_t ContextProtoToolRetrievalType.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA7F8);
}

uint64_t ContextProtoToolRetrievalType.identifier.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA7F8);
}

uint64_t (*ContextProtoToolRetrievalType.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoToolRetrievalType.definition.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for ContextProtoToolRetrievalType, &qword_256FFB060, a1);
}

uint64_t ContextProtoToolRetrievalType.definition.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for ContextProtoToolRetrievalType, &qword_256FFB060);
}

uint64_t (*ContextProtoToolRetrievalType.definition.modify())()
{
  type metadata accessor for ContextProtoToolRetrievalType(0);
  return nullsub_1;
}

uint64_t ContextProtoToolRetrievalType.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for ContextProtoToolRetrievalType, a1);
}

uint64_t ContextProtoToolRetrievalType.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for ContextProtoToolRetrievalType);
}

uint64_t (*ContextProtoToolRetrievalType.unknownFields.modify())()
{
  type metadata accessor for ContextProtoToolRetrievalType(0);
  return nullsub_1;
}

uint64_t ContextProtoToolRetrievalType.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  v3 = a1 + *(int *)(type metadata accessor for ContextProtoToolRetrievalType(0) + 20);
  v4 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t ContextProtoToolRetrievalType.init(identifier:definition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 1, 1, v6);
  v7 = a3 + *(int *)(type metadata accessor for ContextProtoToolRetrievalType(0) + 20);
  v8 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a3, &qword_256FFA7F8);
  return sub_2403C25A0(a2, v7, &qword_256FFB060);
}

uint64_t ContextProtoToolQuery.query.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoToolQuery.query.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ContextProtoToolQuery.query.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoToolQuery.appBundleIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoToolQuery.appBundleIds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ContextProtoToolQuery.appBundleIds.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoToolQuery.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for ContextProtoToolQuery, a1);
}

uint64_t ContextProtoToolQuery.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for ContextProtoToolQuery);
}

uint64_t (*ContextProtoToolQuery.unknownFields.modify())()
{
  type metadata accessor for ContextProtoToolQuery(0);
  return nullsub_1;
}

uint64_t ContextProtoToolQuery.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ContextProtoToolQuery(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t ContextProtoToolQuery.init(query:appBundleIds:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;

  type metadata accessor for ContextProtoToolQuery(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t ContextProtoToolQueryOutput.definition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFB050);
}

uint64_t ContextProtoToolQueryOutput.definition.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFB050);
}

uint64_t (*ContextProtoToolQueryOutput.definition.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoToolQueryOutput.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for ContextProtoToolQueryOutput, a1);
}

uint64_t ContextProtoToolQueryOutput.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for ContextProtoToolQueryOutput);
}

uint64_t (*ContextProtoToolQueryOutput.unknownFields.modify())()
{
  type metadata accessor for ContextProtoToolQueryOutput(0);
  return nullsub_1;
}

uint64_t ContextProtoToolQueryOutput.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0C34(type metadata accessor for ContextProtoRetrievedTool.Definition, (void (*)(_QWORD))type metadata accessor for ContextProtoToolQueryOutput, a1);
}

uint64_t ContextProtoToolQueryOutput.init(definition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  type metadata accessor for ContextProtoToolQueryOutput(0);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  return sub_2403C25A0(a1, a2, &qword_256FFB050);
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.originalSubQuery.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.rewrittenQuery.modify())()
{
  return nullsub_1;
}

float ContextProtoQueryDecorationToolRetrievalResponse.confidence.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 32);
}

void ContextProtoQueryDecorationToolRetrievalResponse.confidence.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 32) = a1;
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.confidence.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.retrievedTools.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.retrievedTools.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.retrievedTools.modify())()
{
  return nullsub_1;
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.types.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0) + 36);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0) + 36);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ContextProtoQueryDecorationToolRetrievalResponse.unknownFields.modify())()
{
  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  return nullsub_1;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_DWORD *)(a1 + 32) = 0;
  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 40) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = v3;
  return result;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.init(originalSubQuery:rewrittenQuery:confidence:retrievedTools:types:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, float a8@<S0>)
{
  uint64_t result;

  type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(float *)(a7 + 32) = a8;
  *(_QWORD *)(a7 + 40) = a5;
  *(_QWORD *)(a7 + 48) = a6;
  return result;
}

uint64_t (*ContextProtoSpanMatchedEntity.matchMetadata.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoSpanMatchedEntity.typedValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BDDA0(type metadata accessor for ContextProtoSpanMatchedEntity, &qword_256FFA3A8, a1);
}

uint64_t ContextProtoSpanMatchedEntity.typedValue.setter(uint64_t a1)
{
  return sub_2403BDE10(a1, type metadata accessor for ContextProtoSpanMatchedEntity, &qword_256FFA3A8);
}

uint64_t (*ContextProtoSpanMatchedEntity.typedValue.modify())()
{
  type metadata accessor for ContextProtoSpanMatchedEntity(0);
  return nullsub_1;
}

uint64_t ContextProtoSpanMatchedEntity.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403BE010(type metadata accessor for ContextProtoSpanMatchedEntity, a1);
}

uint64_t ContextProtoSpanMatchedEntity.unknownFields.setter(uint64_t a1)
{
  return sub_2403BE068(a1, type metadata accessor for ContextProtoSpanMatchedEntity);
}

uint64_t (*ContextProtoSpanMatchedEntity.unknownFields.modify())()
{
  type metadata accessor for ContextProtoSpanMatchedEntity(0);
  return nullsub_1;
}

uint64_t ContextProtoSpanMatchedEntity.init()@<X0>(_QWORD *a1@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t result;

  v2 = (char *)a1 + *(int *)(type metadata accessor for ContextProtoSpanMatchedEntity(0) + 20);
  v3 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t ContextProtoSpanMatchedEntity.init(typedValue:matchMetadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v6 = (uint64_t)a3 + *(int *)(type metadata accessor for ContextProtoSpanMatchedEntity(0) + 20);
  v7 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = sub_2403C25A0(a1, v6, &qword_256FFA3A8);
  *a3 = a2;
  return result;
}

uint64_t (*ContextProtoEntityMatch.sourceItemIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.entityName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoEntityMatch.entityName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ContextProtoEntityMatch.entityName.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.startIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t ContextProtoEntityMatch.startIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*ContextProtoEntityMatch.startIndex.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.endIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ContextProtoEntityMatch.endIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*ContextProtoEntityMatch.endIndex.modify())()
{
  return nullsub_1;
}

float ContextProtoEntityMatch.matchScore.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 48);
}

void ContextProtoEntityMatch.matchScore.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 48) = a1;
}

uint64_t (*ContextProtoEntityMatch.matchScore.modify())()
{
  return nullsub_1;
}

void ContextProtoEntityMatch.matcherType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 52);
}

_BYTE *ContextProtoEntityMatch.matcherType.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 52) = *result;
  return result;
}

uint64_t (*ContextProtoEntityMatch.matcherType.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.originAppBundleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoEntityMatch.originAppBundleID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*ContextProtoEntityMatch.originAppBundleID.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.userUtterance.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoEntityMatch.userUtterance.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*ContextProtoEntityMatch.userUtterance.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.matchProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ContextProtoEntityMatch(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 48), a1, &qword_256FFB068);
}

uint64_t ContextProtoEntityMatch.matchProperties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ContextProtoEntityMatch(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 48), &qword_256FFB068);
}

uint64_t (*ContextProtoEntityMatch.matchProperties.modify())()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContextProtoEntityMatch(0) + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContextProtoEntityMatch.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ContextProtoEntityMatch(0) + 52));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ContextProtoEntityMatch.identifier.modify())()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ContextProtoEntityMatch(0) + 56);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ContextProtoEntityMatch.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ContextProtoEntityMatch(0) + 56);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ContextProtoEntityMatch.unknownFields.modify())()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  return nullsub_1;
}

uint64_t ContextProtoEntityMatch.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t matched;
  _QWORD *v5;
  uint64_t result;

  v2 = type metadata accessor for ContextProtoEntityMatch(0);
  v3 = (char *)a1 + *(int *)(v2 + 48);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 56))(v3, 1, 1, matched);
  v5 = (_QWORD *)((char *)a1 + *(int *)(v2 + 52));
  *v5 = 0;
  v5[1] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0;
  *(_QWORD *)((char *)a1 + 45) = 0;
  a1[7] = 0;
  a1[8] = 0xE000000000000000;
  a1[9] = 0;
  a1[10] = 0xE000000000000000;
  return result;
}

uint64_t ContextProtoEntityMatch.init(sourceItemIdentifier:entityName:startIndex:endIndex:matchScore:matchProperties:matcherType:originAppBundleID:userUtterance:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, __int128 a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t matched;
  _QWORD *v26;
  uint64_t result;

  v22 = *a8;
  v23 = type metadata accessor for ContextProtoEntityMatch(0);
  v24 = a9 + *(int *)(v23 + 48);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 56))(v24, 1, 1, matched);
  v26 = (_QWORD *)(a9 + *(int *)(v23 + 52));
  *v26 = 0;
  v26[1] = 0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(float *)(a9 + 48) = a10;
  sub_2403C25A0(a7, v24, &qword_256FFB068);
  *(_BYTE *)(a9 + 52) = v22;
  *(_OWORD *)(a9 + 56) = a11;
  *(_QWORD *)(a9 + 72) = a12;
  *(_QWORD *)(a9 + 80) = a13;
  result = swift_bridgeObjectRelease();
  *v26 = a14;
  v26[1] = a15;
  return result;
}

uint64_t ContextProtoMatchProperties.maxTokenCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ContextProtoMatchProperties.maxTokenCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoMatchProperties.maxTokenCount.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoMatchProperties.matchedTokenCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ContextProtoMatchProperties.matchedTokenCount.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*ContextProtoMatchProperties.matchedTokenCount.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoMatchProperties.matchedAliasTypes.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0604(type metadata accessor for ContextProtoMatchProperties, &qword_256FFB070, a1);
}

uint64_t ContextProtoMatchProperties.matchedAliasTypes.setter(uint64_t a1)
{
  return sub_2403C0660(a1, type metadata accessor for ContextProtoMatchProperties, &qword_256FFB070);
}

uint64_t (*ContextProtoMatchProperties.matchedAliasTypes.modify())()
{
  type metadata accessor for ContextProtoMatchProperties(0);
  return nullsub_1;
}

uint64_t ContextProtoMatchProperties.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C06D8(type metadata accessor for ContextProtoMatchProperties, a1);
}

uint64_t ContextProtoMatchProperties.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0730(a1, type metadata accessor for ContextProtoMatchProperties);
}

uint64_t (*ContextProtoMatchProperties.unknownFields.modify())()
{
  type metadata accessor for ContextProtoMatchProperties(0);
  return nullsub_1;
}

uint64_t ContextProtoMatchProperties.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  v1 = a1 + *(int *)(type metadata accessor for ContextProtoMatchProperties(0) + 24);
  v2 = type metadata accessor for ContextProtoAliasTypes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t ContextProtoMatchProperties.init(maxTokenCount:matchedTokenCount:matchedAliasTypes:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;

  v12 = a6 + *(int *)(type metadata accessor for ContextProtoMatchProperties(0) + 24);
  v13 = type metadata accessor for ContextProtoAliasTypes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a6 = a1;
  *(_BYTE *)(a6 + 8) = a2 & 1;
  *(_QWORD *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 24) = a4 & 1;
  return sub_2403C25A0(a5, v12, &qword_256FFB070);
}

uint64_t (*ContextProtoAliasTypes.options.modify())()
{
  return nullsub_1;
}

uint64_t ContextProtoAliasTypes.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2403C0B58(type metadata accessor for ContextProtoAliasTypes, a1);
}

uint64_t ContextProtoAliasTypes.unknownFields.setter(uint64_t a1)
{
  return sub_2403C0BB0(a1, type metadata accessor for ContextProtoAliasTypes);
}

uint64_t (*ContextProtoAliasTypes.unknownFields.modify())()
{
  type metadata accessor for ContextProtoAliasTypes(0);
  return nullsub_1;
}

uint64_t ContextProtoAliasTypes.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ContextProtoAliasTypes(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t ContextProtoAliasTypes.init(options:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  type metadata accessor for ContextProtoAliasTypes(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = a1;
  return result;
}

void _s23LighthouseDataProcessor25ContextProtoRetrievedToolV0dE14DefinitionEnumO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;

  v18 = a1;
  v19 = a2;
  v2 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  MEMORY[0x24BDAC7A8](v2);
  v17[1] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v17[0] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v7);
  v8 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC338);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v17 + *(int *)(v13 + 48) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(v18, (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  sub_2403AE1A4(v19, (uint64_t)v15, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  v16 = (char *)sub_2403C21F4 + 4 * byte_2408E951A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2403C21F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  sub_2403AE1A4(v0, v3, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_240388AE4(v3, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    sub_24040B438(v0);
    v4 = 0;
  }
  else
  {
    sub_2403A91CC(v1, v2, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    v4 = ((uint64_t (*)(uint64_t, uint64_t))static ToolKitProtoToolDefinition.Version1.== infix(_:_:))(v3, v2);
    sub_240388AE4(v2, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    sub_240388AE4(v3, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    sub_240388AE4(v0, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  }
  return v4 & 1;
}

uint64_t sub_2403C2410(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_240360070(a1, a2);
  return a1;
}

uint64_t sub_2403C2424(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_240363D58(a1, a2);
  return a1;
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFB770);
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFB6D0);
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFB808);
}

uint64_t type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFB8B0);
}

uint64_t type metadata accessor for ContextProtoQueryDecorationOutput(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFB958);
}

uint64_t type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFC030);
}

uint64_t type metadata accessor for ContextProtoQueryDecorationInput(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFBA40);
}

uint64_t type metadata accessor for ContextProtoDynamicEnumerationEntity(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFBAF0);
}

uint64_t type metadata accessor for ContextProtoRetrievedTool(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFBB98);
}

uint64_t type metadata accessor for ContextProtoRetrievedTool.Definition(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFBC40);
}

uint64_t type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFBCF0);
}

uint64_t type metadata accessor for ContextProtoSampleInvocation(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFBD80);
}

uint64_t type metadata accessor for ContextProtoToolRetrievalType(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFBE60);
}

uint64_t type metadata accessor for ContextProtoToolQuery(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFBF08);
}

uint64_t type metadata accessor for ContextProtoToolQueryOutput(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFBFA0);
}

uint64_t type metadata accessor for ContextProtoSpanMatchedEntity(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFC0D0);
}

uint64_t type metadata accessor for ContextProtoEntityMatch(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFC168);
}

uint64_t type metadata accessor for ContextProtoMatchProperties(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFC228);
}

uint64_t sub_2403C25A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for ContextProtoAliasTypes(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFC2C8);
}

unint64_t sub_2403C25FC()
{
  unint64_t result;

  result = qword_256FFB078;
  if (!qword_256FFB078)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoContextType, &type metadata for ContextProtoContextType);
    atomic_store(result, (unint64_t *)&qword_256FFB078);
  }
  return result;
}

uint64_t sub_2403C2640()
{
  return sub_2403C2930(&qword_256FFB080, &qword_256FFB088);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24268456C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_2403C26AC()
{
  unint64_t result;

  result = qword_256FFB090;
  if (!qword_256FFB090)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUserClassification, &type metadata for ContextProtoStructuredContextSiriRequestContextUserClassification);
    atomic_store(result, (unint64_t *)&qword_256FFB090);
  }
  return result;
}

uint64_t sub_2403C26F0()
{
  return sub_2403C2930(&qword_256FFB098, &qword_256FFB0A0);
}

unint64_t sub_2403C2718()
{
  unint64_t result;

  result = qword_256FFB0A8;
  if (!qword_256FFB0A8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoConfidenceBucket, &type metadata for ContextProtoConfidenceBucket);
    atomic_store(result, (unint64_t *)&qword_256FFB0A8);
  }
  return result;
}

uint64_t sub_2403C275C()
{
  return sub_2403C2930(&qword_256FFB0B0, &qword_256FFB0B8);
}

unint64_t sub_2403C2784()
{
  unint64_t result;

  result = qword_256FFB0C0;
  if (!qword_256FFB0C0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoQueryDecorationCaller, &type metadata for ContextProtoQueryDecorationCaller);
    atomic_store(result, (unint64_t *)&qword_256FFB0C0);
  }
  return result;
}

uint64_t sub_2403C27C8()
{
  return sub_2403C2930(&qword_256FFB0C8, &qword_256FFB0D0);
}

unint64_t sub_2403C27F0()
{
  unint64_t result;

  result = qword_256FFB0D8;
  if (!qword_256FFB0D8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoEntityMatcherType, &type metadata for ContextProtoEntityMatcherType);
    atomic_store(result, (unint64_t *)&qword_256FFB0D8);
  }
  return result;
}

uint64_t sub_2403C2834()
{
  return sub_2403C2930(&qword_256FFB0E0, &qword_256FFB0E8);
}

unint64_t sub_2403C285C()
{
  unint64_t result;

  result = qword_256FFB0F0;
  if (!qword_256FFB0F0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoAliasTypesOptions, &type metadata for ContextProtoAliasTypesOptions);
    atomic_store(result, (unint64_t *)&qword_256FFB0F0);
  }
  return result;
}

uint64_t sub_2403C28A0()
{
  return sub_2403C2930(&qword_256FFB0F8, &qword_256FFB100);
}

unint64_t sub_2403C28C8()
{
  unint64_t result;

  result = qword_256FFB108;
  if (!qword_256FFB108)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoRetrievedTool.Stage, &type metadata for ContextProtoRetrievedTool.Stage);
    atomic_store(result, (unint64_t *)&qword_256FFB108);
  }
  return result;
}

uint64_t sub_2403C290C()
{
  return sub_2403C2930(&qword_256FFB110, &qword_256FFB118);
}

uint64_t sub_2403C2930(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x242684578](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContextProtoContextType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextProtoContextType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_2403C2A4C + 4 * byte_2408E9523[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_2403C2A80 + 4 * byte_2408E951E[v4]))();
}

uint64_t sub_2403C2A80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403C2A88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2403C2A90);
  return result;
}

uint64_t sub_2403C2A9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2403C2AA4);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_2403C2AA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403C2AB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextProtoContextType()
{
  return &type metadata for ContextProtoContextType;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRestrictionContext.PersonReachableAs(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextUserClassification(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2403C2BA8 + 4 * byte_2408E952D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2403C2BDC + 4 * byte_2408E9528[v4]))();
}

uint64_t sub_2403C2BDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403C2BE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2403C2BECLL);
  return result;
}

uint64_t sub_2403C2BF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2403C2C00);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2403C2C04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403C2C0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextProtoStructuredContextSiriRequestContextUserClassification()
{
  return &type metadata for ContextProtoStructuredContextSiriRequestContextUserClassification;
}

ValueMetadata *type metadata accessor for ContextProtoConfidenceBucket()
{
  return &type metadata for ContextProtoConfidenceBucket;
}

ValueMetadata *type metadata accessor for ContextProtoQueryDecorationCaller()
{
  return &type metadata for ContextProtoQueryDecorationCaller;
}

ValueMetadata *type metadata accessor for ContextProtoEntityMatcherType()
{
  return &type metadata for ContextProtoEntityMatcherType;
}

uint64_t getEnumTagSinglePayload for ToolKitProtoRuntimePlatform(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextProtoAliasTypesOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2403C2D3C + 4 * byte_2408E9537[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2403C2D70 + 4 * byte_2408E9532[v4]))();
}

uint64_t sub_2403C2D70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403C2D78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2403C2D80);
  return result;
}

uint64_t sub_2403C2D8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2403C2D94);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2403C2D98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403C2DA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextProtoAliasTypesOptions()
{
  return &type metadata for ContextProtoAliasTypesOptions;
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoRetrievedContext(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(_BYTE *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  _DWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  _QWORD *v69;
  uint64_t *v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  char *v104;
  char *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _DWORD *v117;
  _DWORD *v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int (*v121)(_DWORD *, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  void (*v127)(char *, char *, uint64_t);
  int *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  unsigned int (*v141)(_QWORD *, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  void (*v166)(char *, char *, uint64_t);
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;
  _QWORD *__dst;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unsigned int (*v174)(_QWORD *, uint64_t, uint64_t);
  char *v175;
  _QWORD *v176;
  _QWORD *v177;
  _QWORD *v178;
  _QWORD *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  int *v185;
  int *v186;
  unsigned int (*v187)(uint64_t *, uint64_t, uint64_t);
  int *v188;

  v3 = a2;
  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (_QWORD *)((char *)a2 + v7);
    v10 = type metadata accessor for ToolKitProtoTypedValue(0);
    v11 = *(_QWORD *)(v10 - 8);
    v183 = v11;
    v187 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
    if (v187(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = *v9;
      if ((~*v9 & 0xF000000000000007) != 0)
        swift_retain();
      *v8 = v14;
      v15 = *(int *)(v10 + 20);
      v16 = (char *)v8 + v15;
      v17 = (char *)v9 + v15;
      v18 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v19 = v6[6];
    v20 = (char *)v4 + v19;
    v21 = (char *)v3 + v19;
    v22 = type metadata accessor for ContextProtoConfidence(0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48);
    v180 = v23;
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      v26 = *(int *)(v22 + 24);
      v27 = &v20[v26];
      v28 = &v21[v26];
      v29 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v30 = v6[7];
    v31 = (_QWORD *)((char *)v4 + v30);
    v32 = (_QWORD *)((char *)v3 + v30);
    v33 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
    v34 = *((_QWORD *)v33 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB010);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v173 = v10;
      v185 = v6;
      v176 = v3;
      v178 = v4;
      v36 = v32[1];
      *v31 = *v32;
      v31[1] = v36;
      v37 = v32[3];
      v31[2] = v32[2];
      v31[3] = v37;
      v31[4] = v32[4];
      v38 = v33[7];
      v39 = (char *)v31 + v38;
      v40 = (char *)v32 + v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v24(v40, 1, v22))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v39 = *(_DWORD *)v40;
        v39[4] = v40[4];
        v42 = *(int *)(v22 + 24);
        v43 = &v39[v42];
        v44 = &v40[v42];
        v45 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v180 + 56))(v39, 0, 1, v22);
      }
      v46 = v33[8];
      v47 = (_DWORD *)((char *)v31 + v46);
      v48 = (_DWORD *)((char *)v32 + v46);
      v49 = type metadata accessor for ContextProtoBoundingBox(0);
      v50 = *(_QWORD *)(v49 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        *v47 = *v48;
        *((_BYTE *)v47 + 4) = *((_BYTE *)v48 + 4);
        v47[2] = v48[2];
        *((_BYTE *)v47 + 12) = *((_BYTE *)v48 + 12);
        v47[4] = v48[4];
        *((_BYTE *)v47 + 20) = *((_BYTE *)v48 + 20);
        *((_BYTE *)v47 + 28) = *((_BYTE *)v48 + 28);
        v47[6] = v48[6];
        v52 = *(int *)(v49 + 32);
        v53 = (char *)v47 + v52;
        v54 = (char *)v48 + v52;
        v55 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
      }
      v4 = v178;
      v56 = v33[9];
      v57 = (char *)v31 + v56;
      v58 = (char *)v32 + v56;
      *(_QWORD *)v57 = *(_QWORD *)v58;
      v57[8] = v58[8];
      v59 = v33[10];
      v60 = (_QWORD *)((char *)v31 + v59);
      v61 = (_QWORD *)((char *)v32 + v59);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      v63 = v33[11];
      v64 = (char *)v31 + v63;
      v65 = (char *)v32 + v63;
      v66 = sub_2408E57A4();
      v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
      swift_bridgeObjectRetain();
      v67(v64, v65, v66);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v34 + 56))(v31, 0, 1, v33);
      v10 = v173;
      v3 = v176;
      v6 = v185;
    }
    v68 = v6[8];
    v69 = (_QWORD *)((char *)v4 + v68);
    v70 = (_QWORD *)((char *)v3 + v68);
    if (v187((_QWORD *)((char *)v3 + v68), 1, v10))
    {
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      v72 = v6;
      v73 = *v70;
      if ((~*v70 & 0xF000000000000007) != 0)
        swift_retain();
      *v69 = v73;
      v74 = *(int *)(v10 + 20);
      v75 = (char *)v69 + v74;
      v76 = v10;
      v77 = (char *)v70 + v74;
      v78 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v75, v77, v78);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v183 + 56))(v69, 0, 1, v76);
      v6 = v72;
    }
    v79 = v6[9];
    v80 = (_QWORD *)((char *)v4 + v79);
    v81 = (_QWORD *)((char *)v3 + v79);
    v82 = type metadata accessor for ContextProtoStructuredContext(0);
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
    {
      v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB018);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      v186 = v6;
      v85 = type metadata accessor for ContextProtoStructuredContextKind(0);
      v86 = *(_QWORD *)(v85 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v86 + 48))(v81, 1, v85))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        v184 = v86;
        v171 = v85;
        v172 = v83;
        v177 = v3;
        v179 = v4;
        v88 = v81[1];
        *v80 = *v81;
        v80[1] = v88;
        v89 = v81[3];
        v80[2] = v81[2];
        v80[3] = v89;
        v90 = v81[5];
        v80[4] = v81[4];
        v80[5] = v90;
        v91 = v81[7];
        v80[6] = v81[6];
        v80[7] = v91;
        v92 = v81[9];
        v80[8] = v81[8];
        v80[9] = v92;
        *((_DWORD *)v80 + 20) = *((_DWORD *)v81 + 20);
        *((_BYTE *)v80 + 84) = *((_BYTE *)v81 + 84);
        v188 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        v93 = v188[15];
        __dst = (_QWORD *)((char *)v80 + v93);
        v94 = (_QWORD *)((char *)v81 + v93);
        v95 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        v169 = *(_QWORD *)(v95 - 8);
        v174 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v169 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v174(v94, 1, v95))
        {
          v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
          memcpy(__dst, v94, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
        }
        else
        {
          v97 = v94[1];
          *__dst = *v94;
          __dst[1] = v97;
          *((_WORD *)__dst + 8) = *((_WORD *)v94 + 8);
          v98 = *(int *)(v95 + 28);
          v99 = (char *)__dst + v98;
          v100 = (char *)v94 + v98;
          v101 = sub_2408E57A4();
          v102 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16);
          swift_bridgeObjectRetain();
          v102(v99, v100, v101);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v169 + 56))(__dst, 0, 1, v95);
        }
        v103 = v188[16];
        v104 = (char *)v80 + v103;
        v105 = (char *)v81 + v103;
        v106 = *((_QWORD *)v105 + 1);
        if (v106 >> 60 == 15)
        {
          *(_OWORD *)v104 = *(_OWORD *)v105;
        }
        else
        {
          v107 = *(_QWORD *)v105;
          sub_240360070(*(_QWORD *)v105, *((_QWORD *)v105 + 1));
          *(_QWORD *)v104 = v107;
          *((_QWORD *)v104 + 1) = v106;
        }
        v108 = v188[17];
        v109 = (_QWORD *)((char *)v80 + v108);
        v110 = (_QWORD *)((char *)v81 + v108);
        v111 = v110[1];
        *v109 = *v110;
        v109[1] = v111;
        v112 = v188[18];
        v113 = (_QWORD *)((char *)v80 + v112);
        v114 = (_QWORD *)((char *)v81 + v112);
        v115 = v114[1];
        *v113 = *v114;
        v113[1] = v115;
        v116 = v188[19];
        v117 = (_DWORD *)((char *)v80 + v116);
        v118 = (_DWORD *)((char *)v81 + v116);
        v119 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        v120 = *(_QWORD *)(v119 - 8);
        v121 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v120 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v121(v118, 1, v119))
        {
          v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
          memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
        }
        else
        {
          *v117 = *v118;
          *((_BYTE *)v117 + 4) = *((_BYTE *)v118 + 4);
          v123 = *((_QWORD *)v118 + 2);
          *((_QWORD *)v117 + 1) = *((_QWORD *)v118 + 1);
          *((_QWORD *)v117 + 2) = v123;
          v117[6] = v118[6];
          *((_BYTE *)v117 + 28) = *((_BYTE *)v118 + 28);
          v117[8] = v118[8];
          *((_BYTE *)v117 + 36) = *((_BYTE *)v118 + 36);
          v124 = *(int *)(v119 + 32);
          v181 = (char *)v117 + v124;
          v125 = (char *)v118 + v124;
          v126 = sub_2408E57A4();
          v127 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16);
          swift_bridgeObjectRetain();
          v127(v181, v125, v126);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
        }
        v128 = v188;
        v129 = v188[20];
        v130 = (char *)v80 + v129;
        v131 = (char *)v81 + v129;
        *(_QWORD *)v130 = *(_QWORD *)v131;
        v130[8] = v131[8];
        v132 = v188[21];
        v133 = (_QWORD *)((char *)v80 + v132);
        v134 = (_QWORD *)((char *)v81 + v132);
        v135 = v134[1];
        *v133 = *v134;
        v133[1] = v135;
        *((_BYTE *)v80 + v188[22]) = *((_BYTE *)v81 + v188[22]);
        *((_BYTE *)v80 + v188[23]) = *((_BYTE *)v81 + v188[23]);
        v136 = v188[24];
        v137 = (_QWORD *)((char *)v80 + v136);
        v138 = (_QWORD *)((char *)v81 + v136);
        v139 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        v140 = *(_QWORD *)(v139 - 8);
        v141 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v140 + 48);
        swift_bridgeObjectRetain();
        if (v141(v138, 1, v139))
        {
          v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
          memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
        }
        else
        {
          v143 = v138[1];
          *v137 = *v138;
          v137[1] = v143;
          v144 = v138[3];
          v137[2] = v138[2];
          v137[3] = v144;
          v145 = v138[5];
          v137[4] = v138[4];
          v137[5] = v145;
          v146 = v138[7];
          v137[6] = v138[6];
          v137[7] = v146;
          v147 = v138[9];
          v137[8] = v138[8];
          v137[9] = v147;
          v137[10] = v138[10];
          v148 = *(int *)(v139 + 40);
          v182 = (char *)v137 + v148;
          v175 = (char *)v138 + v148;
          v149 = sub_2408E57A4();
          v168 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v128 = v188;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v168(v182, v175, v149);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
        }
        v3 = v177;
        v4 = v179;
        v83 = v172;
        v150 = v128[25];
        v151 = (char *)v80 + v150;
        v152 = (char *)v81 + v150;
        v153 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 16))(v151, v152, v153);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v184 + 56))(v80, 0, 1, v171);
      }
      v154 = *(int *)(v82 + 20);
      v155 = (char *)v80 + v154;
      v156 = (char *)v81 + v154;
      v157 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v155, v156, v157);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
      v6 = v186;
    }
    v158 = v6[10];
    v159 = v6[11];
    v160 = (_QWORD *)((char *)v4 + v158);
    v161 = (_QWORD *)((char *)v3 + v158);
    v162 = v161[1];
    *v160 = *v161;
    v160[1] = v162;
    v163 = (char *)v4 + v159;
    v164 = (char *)v3 + v159;
    v165 = sub_2408E57A4();
    v166 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 16);
    swift_bridgeObjectRetain();
    v166(v163, v164, v165);
  }
  return v4;
}

uint64_t destroy for ContextProtoRetrievedContext(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  unsigned int (*v6)(_QWORD *, uint64_t, uint64_t);
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = (_QWORD *)(a1 + a2[5]);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v7 = (char *)v4 + *(int *)(v5 + 20);
    v8 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + a2[6];
  v10 = type metadata accessor for ContextProtoConfidence(0);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  if (!v11(v9, 1, v10))
  {
    v12 = v9 + *(int *)(v10 + 24);
    v13 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  v14 = a1 + a2[7];
  v15 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v15 - 1) + 48))(v14, 1, v15))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v14 + v15[7];
    if (!v11(v16, 1, v10))
    {
      v17 = v16 + *(int *)(v10 + 24);
      v18 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    }
    v19 = v14 + v15[8];
    v20 = type metadata accessor for ContextProtoBoundingBox(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
    {
      v21 = v19 + *(int *)(v20 + 32);
      v22 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
    }
    swift_bridgeObjectRelease();
    v23 = v14 + v15[11];
    v24 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
  }
  v25 = (_QWORD *)(a1 + a2[8]);
  if (!v6(v25, 1, v5))
  {
    if ((~*v25 & 0xF000000000000007) != 0)
      swift_release();
    v26 = (char *)v25 + *(int *)(v5 + 20);
    v27 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
  }
  v28 = a1 + a2[9];
  v29 = type metadata accessor for ContextProtoStructuredContext(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
  {
    v30 = type metadata accessor for ContextProtoStructuredContextKind(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v28, 1, v30))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v31 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      v32 = v28 + v31[15];
      v33 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
      {
        swift_bridgeObjectRelease();
        v34 = v32 + *(int *)(v33 + 28);
        v35 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
      }
      v36 = (uint64_t *)(v28 + v31[16]);
      v37 = v36[1];
      if (v37 >> 60 != 15)
        sub_240363D58(*v36, v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = v28 + v31[19];
      v39 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39))
      {
        swift_bridgeObjectRelease();
        v40 = v38 + *(int *)(v39 + 32);
        v41 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
      }
      swift_bridgeObjectRelease();
      v42 = v28 + v31[24];
      v43 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v42, 1, v43))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v44 = v42 + *(int *)(v43 + 40);
        v45 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
      }
      v46 = v28 + v31[25];
      v47 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
    }
    v48 = v28 + *(int *)(v29 + 20);
    v49 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
  }
  swift_bridgeObjectRelease();
  v50 = a1 + a2[11];
  v51 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
}

_BYTE *initializeWithCopy for ContextProtoRetrievedContext(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  int *v31;
  unsigned int (**v32)(_QWORD *, uint64_t, int *);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _DWORD *v45;
  _DWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  void (*v100)(char *, char *, uint64_t);
  uint64_t v101;
  char *v102;
  char *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _DWORD *v115;
  _DWORD *v116;
  uint64_t v117;
  uint64_t v118;
  unsigned int (*v119)(_DWORD *, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  int *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  unsigned int (*v139)(_QWORD *, uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t v160;
  _BYTE *v161;
  _BYTE *v162;
  uint64_t v163;
  void (*v164)(_BYTE *, _BYTE *, uint64_t);
  void (*v166)(char *, char *, uint64_t);
  uint64_t v167;
  unsigned int (*v168)(_QWORD *, uint64_t, uint64_t);
  char *v169;
  void *__dst;
  _QWORD *__dsta;
  char *__dstb;
  char *__dstc;
  uint64_t v174;
  uint64_t v175;
  _BYTE *v176;
  _BYTE *v177;
  _BYTE *v178;
  _BYTE *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  int *v184;
  int *v185;
  unsigned int (*v186)(uint64_t *, uint64_t, uint64_t);
  int *v187;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for ToolKitProtoTypedValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v182 = v10;
  v186 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  if (v186(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = *v8;
    if ((~*v8 & 0xF000000000000007) != 0)
      swift_retain();
    *v7 = v12;
    v13 = *(int *)(v9 + 20);
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = v3[6];
  v18 = &v5[v17];
  v19 = &v4[v17];
  v20 = type metadata accessor for ContextProtoConfidence(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48);
  v180 = v21;
  if (v22(v19, 1, v20))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v24 = *(int *)(v20 + 24);
    v25 = &v18[v24];
    v26 = &v19[v24];
    v27 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v28 = v3[7];
  v29 = &v5[v28];
  v30 = &v4[v28];
  v31 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  v32 = (unsigned int (**)(_QWORD *, uint64_t, int *))*((_QWORD *)v31 - 1);
  if (v32[6](v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB010);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    __dst = v32;
    v174 = v9;
    v184 = v3;
    v176 = v4;
    v178 = v5;
    v34 = v30[1];
    *v29 = *v30;
    v29[1] = v34;
    v35 = v30[3];
    v29[2] = v30[2];
    v29[3] = v35;
    v29[4] = v30[4];
    v36 = v31[7];
    v37 = (char *)v29 + v36;
    v38 = (char *)v30 + v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v38, 1, v20))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v37 = *(_DWORD *)v38;
      v37[4] = v38[4];
      v40 = *(int *)(v20 + 24);
      v41 = &v37[v40];
      v42 = &v38[v40];
      v43 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v180 + 56))(v37, 0, 1, v20);
    }
    v44 = v31[8];
    v45 = (_DWORD *)((char *)v29 + v44);
    v46 = (_DWORD *)((char *)v30 + v44);
    v47 = type metadata accessor for ContextProtoBoundingBox(0);
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      *v45 = *v46;
      *((_BYTE *)v45 + 4) = *((_BYTE *)v46 + 4);
      v45[2] = v46[2];
      *((_BYTE *)v45 + 12) = *((_BYTE *)v46 + 12);
      v45[4] = v46[4];
      *((_BYTE *)v45 + 20) = *((_BYTE *)v46 + 20);
      *((_BYTE *)v45 + 28) = *((_BYTE *)v46 + 28);
      v45[6] = v46[6];
      v50 = *(int *)(v47 + 32);
      v51 = (char *)v45 + v50;
      v52 = (char *)v46 + v50;
      v53 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    v5 = v178;
    v54 = v31[9];
    v55 = (char *)v29 + v54;
    v56 = (char *)v30 + v54;
    *(_QWORD *)v55 = *(_QWORD *)v56;
    v55[8] = v56[8];
    v57 = v31[10];
    v58 = (_QWORD *)((char *)v29 + v57);
    v59 = (_QWORD *)((char *)v30 + v57);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    v61 = v31[11];
    v62 = (char *)v29 + v61;
    v63 = (char *)v30 + v61;
    v64 = sub_2408E57A4();
    v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
    swift_bridgeObjectRetain();
    v65(v62, v63, v64);
    (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))__dst + 7))(v29, 0, 1, v31);
    v9 = v174;
    v4 = v176;
    v3 = v184;
  }
  v66 = v3[8];
  v67 = &v5[v66];
  v68 = (uint64_t *)&v4[v66];
  if (v186((uint64_t *)&v4[v66], 1, v9))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    v70 = v3;
    v71 = *v68;
    if ((~*v68 & 0xF000000000000007) != 0)
      swift_retain();
    *v67 = v71;
    v72 = *(int *)(v9 + 20);
    v73 = (char *)v67 + v72;
    v74 = v9;
    v75 = (char *)v68 + v72;
    v76 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v73, v75, v76);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v67, 0, 1, v74);
    v3 = v70;
  }
  v77 = v3[9];
  v78 = &v5[v77];
  v79 = &v4[v77];
  v80 = type metadata accessor for ContextProtoStructuredContext(0);
  v81 = *(_QWORD *)(v80 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB018);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    v185 = v3;
    v83 = type metadata accessor for ContextProtoStructuredContextKind(0);
    v84 = *(_QWORD *)(v83 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v84 + 48))(v79, 1, v83))
    {
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      v175 = v84;
      v177 = v4;
      v181 = v83;
      v183 = v81;
      v179 = v5;
      v86 = v79[1];
      *v78 = *v79;
      v78[1] = v86;
      v87 = v79[3];
      v78[2] = v79[2];
      v78[3] = v87;
      v88 = v79[5];
      v78[4] = v79[4];
      v78[5] = v88;
      v89 = v79[7];
      v78[6] = v79[6];
      v78[7] = v89;
      v90 = v79[9];
      v78[8] = v79[8];
      v78[9] = v90;
      *((_DWORD *)v78 + 20) = *((_DWORD *)v79 + 20);
      *((_BYTE *)v78 + 84) = *((_BYTE *)v79 + 84);
      v187 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      v91 = v187[15];
      __dsta = (_QWORD *)((char *)v78 + v91);
      v92 = (_QWORD *)((char *)v79 + v91);
      v93 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      v167 = *(_QWORD *)(v93 - 8);
      v168 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v167 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v168(v92, 1, v93))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
        memcpy(__dsta, v92, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        v95 = v92[1];
        *__dsta = *v92;
        __dsta[1] = v95;
        *((_WORD *)__dsta + 8) = *((_WORD *)v92 + 8);
        v96 = *(int *)(v93 + 28);
        v97 = (char *)__dsta + v96;
        v98 = (char *)v92 + v96;
        v99 = sub_2408E57A4();
        v100 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16);
        swift_bridgeObjectRetain();
        v100(v97, v98, v99);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v167 + 56))(__dsta, 0, 1, v93);
      }
      v101 = v187[16];
      v102 = (char *)v78 + v101;
      v103 = (char *)v79 + v101;
      v104 = *((_QWORD *)v103 + 1);
      if (v104 >> 60 == 15)
      {
        *(_OWORD *)v102 = *(_OWORD *)v103;
      }
      else
      {
        v105 = *(_QWORD *)v103;
        sub_240360070(*(_QWORD *)v103, *((_QWORD *)v103 + 1));
        *(_QWORD *)v102 = v105;
        *((_QWORD *)v102 + 1) = v104;
      }
      v106 = v187[17];
      v107 = (_QWORD *)((char *)v78 + v106);
      v108 = (_QWORD *)((char *)v79 + v106);
      v109 = v108[1];
      *v107 = *v108;
      v107[1] = v109;
      v110 = v187[18];
      v111 = (_QWORD *)((char *)v78 + v110);
      v112 = (_QWORD *)((char *)v79 + v110);
      v113 = v112[1];
      *v111 = *v112;
      v111[1] = v113;
      v114 = v187[19];
      v115 = (_DWORD *)((char *)v78 + v114);
      v116 = (_DWORD *)((char *)v79 + v114);
      v117 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      v118 = *(_QWORD *)(v117 - 8);
      v119 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v118 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v119(v116, 1, v117))
      {
        v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
      }
      else
      {
        *v115 = *v116;
        *((_BYTE *)v115 + 4) = *((_BYTE *)v116 + 4);
        v121 = *((_QWORD *)v116 + 2);
        *((_QWORD *)v115 + 1) = *((_QWORD *)v116 + 1);
        *((_QWORD *)v115 + 2) = v121;
        v115[6] = v116[6];
        *((_BYTE *)v115 + 28) = *((_BYTE *)v116 + 28);
        v115[8] = v116[8];
        *((_BYTE *)v115 + 36) = *((_BYTE *)v116 + 36);
        v122 = *(int *)(v117 + 32);
        __dstb = (char *)v115 + v122;
        v123 = (char *)v116 + v122;
        v124 = sub_2408E57A4();
        v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16);
        swift_bridgeObjectRetain();
        v125(__dstb, v123, v124);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
      }
      v126 = v187;
      v127 = v187[20];
      v128 = (char *)v78 + v127;
      v129 = (char *)v79 + v127;
      *(_QWORD *)v128 = *(_QWORD *)v129;
      v128[8] = v129[8];
      v130 = v187[21];
      v131 = (_QWORD *)((char *)v78 + v130);
      v132 = (_QWORD *)((char *)v79 + v130);
      v133 = v132[1];
      *v131 = *v132;
      v131[1] = v133;
      *((_BYTE *)v78 + v187[22]) = *((_BYTE *)v79 + v187[22]);
      *((_BYTE *)v78 + v187[23]) = *((_BYTE *)v79 + v187[23]);
      v134 = v187[24];
      v135 = (_QWORD *)((char *)v78 + v134);
      v136 = (_QWORD *)((char *)v79 + v134);
      v137 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      v138 = *(_QWORD *)(v137 - 8);
      v139 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v138 + 48);
      swift_bridgeObjectRetain();
      if (v139(v136, 1, v137))
      {
        v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
        memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
      }
      else
      {
        v141 = v136[1];
        *v135 = *v136;
        v135[1] = v141;
        v142 = v136[3];
        v135[2] = v136[2];
        v135[3] = v142;
        v143 = v136[5];
        v135[4] = v136[4];
        v135[5] = v143;
        v144 = v136[7];
        v135[6] = v136[6];
        v135[7] = v144;
        v145 = v136[9];
        v135[8] = v136[8];
        v135[9] = v145;
        v135[10] = v136[10];
        v146 = *(int *)(v137 + 40);
        v169 = (char *)v136 + v146;
        __dstc = (char *)v135 + v146;
        v147 = sub_2408E57A4();
        v166 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v126 = v187;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v166(__dstc, v169, v147);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v135, 0, 1, v137);
      }
      v4 = v177;
      v81 = v183;
      v148 = v126[25];
      v149 = (char *)v78 + v148;
      v150 = (char *)v79 + v148;
      v151 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v149, v150, v151);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v78, 0, 1, v181);
      v5 = v179;
    }
    v152 = *(int *)(v80 + 20);
    v153 = (char *)v78 + v152;
    v154 = (char *)v79 + v152;
    v155 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v153, v154, v155);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
    v3 = v185;
  }
  v156 = v3[10];
  v157 = v3[11];
  v158 = &v5[v156];
  v159 = &v4[v156];
  v160 = v159[1];
  *v158 = *v159;
  v158[1] = v160;
  v161 = &v5[v157];
  v162 = &v4[v157];
  v163 = sub_2408E57A4();
  v164 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v163 - 8) + 16);
  swift_bridgeObjectRetain();
  v164(v161, v162, v163);
  return v5;
}

_BYTE *assignWithCopy for ContextProtoRetrievedContext(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v3;
  _BYTE *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_BYTE *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  int *v36;
  uint64_t v37;
  uint64_t (*v38)(_QWORD *, uint64_t, int *);
  int v39;
  int v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  int v56;
  int v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  _DWORD *v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  int v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t (*v92)(uint64_t *, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t *v96;
  int v97;
  int v98;
  int *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(uint64_t, uint64_t, uint64_t);
  int v112;
  int v113;
  uint64_t v114;
  unsigned int (**v115)(_QWORD, uint64_t, uint64_t);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t, uint64_t);
  int v124;
  int v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  unsigned int (*v129)(_QWORD *, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t (*v141)(uint64_t, uint64_t, uint64_t);
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  void (*v177)(char *, char *, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD *v185;
  uint64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  uint64_t v189;
  _DWORD *v190;
  int *v191;
  uint64_t v192;
  uint64_t v193;
  unsigned int (*v194)(int *, uint64_t, uint64_t);
  uint64_t v195;
  int v196;
  int v197;
  int v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  void (*v202)(char *, char *, uint64_t);
  int *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  _QWORD *v210;
  uint64_t v211;
  _QWORD *v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  unsigned int (*v216)(_QWORD *, uint64_t, uint64_t);
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _BYTE *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _BYTE *v226;
  uint64_t v227;
  uint64_t v228;
  _BYTE *v229;
  _BYTE *v230;
  uint64_t v231;
  int *v232;
  uint64_t v233;
  _QWORD *v234;
  _QWORD *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t (*v238)(_QWORD *, uint64_t, uint64_t);
  int v239;
  int v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  void (*v244)(char *, char *, uint64_t);
  int v245;
  int v246;
  int v247;
  int v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  void (*v257)(char *, char *, uint64_t);
  int *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t *v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  _QWORD *v265;
  _QWORD *v266;
  uint64_t v267;
  _QWORD *v268;
  _QWORD *v269;
  uint64_t v270;
  _DWORD *v271;
  int *v272;
  uint64_t v273;
  uint64_t v274;
  unsigned int (*v275)(int *, uint64_t, uint64_t);
  uint64_t v276;
  int v277;
  int v278;
  int v279;
  uint64_t v280;
  char *v281;
  char *v282;
  uint64_t v283;
  void (*v284)(char *, char *, uint64_t);
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t *v288;
  uint64_t v289;
  uint64_t v290;
  _QWORD *v291;
  _QWORD *v292;
  uint64_t v293;
  _QWORD *v294;
  _QWORD *v295;
  uint64_t v296;
  uint64_t v297;
  unsigned int (*v298)(_QWORD *, uint64_t, uint64_t);
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  void (*v302)(char *, char *, uint64_t);
  uint64_t v303;
  uint64_t v304;
  _BYTE *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t *v309;
  uint64_t *v310;
  unint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  unint64_t v315;
  uint64_t v316;
  _QWORD *v317;
  _QWORD *v318;
  uint64_t v319;
  _QWORD *v320;
  _QWORD *v321;
  uint64_t v322;
  char *v323;
  char *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t (*v327)(char *, uint64_t, uint64_t);
  int v328;
  int v329;
  int v330;
  int v331;
  int v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  void (*v336)(char *, char *, uint64_t);
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t *v340;
  uint64_t v341;
  uint64_t v342;
  _QWORD *v343;
  _QWORD *v344;
  uint64_t v345;
  _QWORD *v346;
  _QWORD *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t (*v350)(_QWORD *, uint64_t, uint64_t);
  int v351;
  int v352;
  uint64_t v353;
  uint64_t v354;
  void (*v355)(char *, char *, uint64_t);
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  _BYTE *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  _BYTE *v363;
  uint64_t v364;
  uint64_t v365;
  _QWORD *v366;
  _QWORD *v367;
  uint64_t v368;
  _BYTE *v369;
  _BYTE *v370;
  uint64_t v371;
  uint64_t v373;
  char *v374;
  char *v375;
  uint64_t v376;
  int v377;
  int v378;
  int v379;
  uint64_t v380;
  char *v381;
  char *v382;
  uint64_t v383;
  uint64_t v384;
  char *v385;
  char *v386;
  uint64_t v387;
  void (*v388)(char *, char *, uint64_t);
  uint64_t v389;
  uint64_t v390;
  unsigned int (*v391)(_QWORD *, uint64_t, uint64_t);
  char *v392;
  char *v393;
  _QWORD *__dst;
  void (**__dsta)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *__dstb;
  _BYTE *v397;
  _BYTE *v398;
  _BYTE *v399;
  _BYTE *v400;
  _BYTE *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  void *v405;
  void *v406;
  _QWORD *v407;
  char *v408;
  char *v409;
  char *v410;
  uint64_t (*v411)(uint64_t *, uint64_t, uint64_t);
  uint64_t v412;
  uint64_t v413;
  char *v414;
  char *v415;
  uint64_t v416;
  uint64_t v417;
  int *v418;
  int *v419;
  char *v420;
  char *v421;
  char *v422;
  _BYTE *v423;
  int *v424;

  v3 = a3;
  v5 = a1;
  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for ToolKitProtoTypedValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v411 = v11;
  v13 = v11(v8, 1, v9);
  v417 = v9;
  v405 = (void *)v10;
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
      goto LABEL_8;
    }
    v47 = *v8;
    v48 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v48 != 0xF000000000000007)
      {
        *v7 = v47;
        swift_retain();
        swift_release();
        goto LABEL_79;
      }
      sub_2403C66E0((uint64_t)v7);
      v47 = *v8;
    }
    else if (v48 != 0xF000000000000007)
    {
      *v7 = v47;
      swift_retain();
LABEL_79:
      v165 = *(int *)(v9 + 20);
      v166 = (char *)v7 + v165;
      v167 = (char *)v8 + v165;
      v168 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 24))(v166, v167, v168);
      goto LABEL_9;
    }
    *v7 = v47;
    goto LABEL_79;
  }
  if (v13)
  {
LABEL_8:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_9;
  }
  v14 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v14;
  v15 = *(int *)(v9 + 20);
  v16 = (char *)v7 + v15;
  v17 = (char *)v8 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_9:
  v20 = v3[6];
  v21 = &v5[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for ContextProtoConfidence(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  v402 = v24;
  if (v26)
  {
    if (!v27)
    {
      *(_DWORD *)v21 = *(_DWORD *)v22;
      v21[4] = v22[4];
      v28 = *(int *)(v23 + 24);
      v29 = &v21[v28];
      v30 = &v22[v28];
      v31 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v27)
  {
    sub_240388AE4((uint64_t)v21, type metadata accessor for ContextProtoConfidence);
LABEL_14:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_15;
  }
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[4] = v22[4];
  v49 = *(int *)(v23 + 24);
  v50 = &v21[v49];
  v51 = &v22[v49];
  v52 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v52 - 8) + 24))(v50, v51, v52);
LABEL_15:
  v33 = v3[7];
  v34 = &v5[v33];
  v423 = a2;
  v35 = &a2[v33];
  v36 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  v37 = *((_QWORD *)v36 - 1);
  v38 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  v424 = v3;
  if (v39)
  {
    if (!v40)
    {
      v397 = v5;
      *v34 = *v35;
      v34[1] = v35[1];
      v34[2] = v35[2];
      v34[3] = v35[3];
      v34[4] = v35[4];
      v41 = v36[7];
      v42 = (char *)v34 + v41;
      v43 = (char *)v35 + v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v25(v43, 1, v23))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v42 = *(_DWORD *)v43;
        v42[4] = v43[4];
        v62 = *(int *)(v23 + 24);
        v63 = &v42[v62];
        v64 = &v43[v62];
        v65 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v402 + 56))(v42, 0, 1, v23);
      }
      v66 = v36[8];
      v67 = (_DWORD *)((char *)v34 + v66);
      v68 = (int *)((char *)v35 + v66);
      v69 = type metadata accessor for ContextProtoBoundingBox(0);
      v70 = *(_QWORD *)(v69 - 8);
      if ((*(unsigned int (**)(int *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      {
        v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
      }
      else
      {
        v72 = *v68;
        *((_BYTE *)v67 + 4) = *((_BYTE *)v68 + 4);
        *v67 = v72;
        v73 = v68[2];
        *((_BYTE *)v67 + 12) = *((_BYTE *)v68 + 12);
        v67[2] = v73;
        v74 = v68[4];
        *((_BYTE *)v67 + 20) = *((_BYTE *)v68 + 20);
        v67[4] = v74;
        v75 = v68[6];
        *((_BYTE *)v67 + 28) = *((_BYTE *)v68 + 28);
        v67[6] = v75;
        v76 = *(int *)(v69 + 32);
        v77 = (char *)v67 + v76;
        v78 = (char *)v68 + v76;
        v79 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      v5 = v397;
      v46 = v423;
      v80 = v36[9];
      v81 = (char *)v34 + v80;
      v82 = (char *)v35 + v80;
      v83 = *(_QWORD *)v82;
      v81[8] = v82[8];
      *(_QWORD *)v81 = v83;
      v84 = v36[10];
      v85 = (_QWORD *)((char *)v34 + v84);
      v86 = (_QWORD *)((char *)v35 + v84);
      *v85 = *v86;
      v85[1] = v86[1];
      v87 = v36[11];
      v88 = (char *)v34 + v87;
      v89 = (char *)v35 + v87;
      v90 = sub_2408E57A4();
      v91 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16);
      swift_bridgeObjectRetain();
      v91(v88, v89, v90);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v37 + 56))(v34, 0, 1, v36);
      v3 = v424;
      goto LABEL_34;
    }
LABEL_21:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB010);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    v46 = v423;
LABEL_34:
    v92 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v411;
    v93 = v417;
    goto LABEL_35;
  }
  if (v40)
  {
    sub_240388AE4((uint64_t)v34, type metadata accessor for ContextProtoContextMetadata);
    goto LABEL_21;
  }
  v398 = v5;
  *v34 = *v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34[1] = v35[1];
  v34[2] = v35[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34[3] = v35[3];
  v34[4] = v35[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = v36[7];
  v54 = (char *)v34 + v53;
  v55 = (char *)v35 + v53;
  v56 = v25((_BYTE *)v34 + v53, 1, v23);
  v57 = v25(v55, 1, v23);
  if (v56)
  {
    if (!v57)
    {
      *(_DWORD *)v54 = *(_DWORD *)v55;
      v54[4] = v55[4];
      v58 = *(int *)(v23 + 24);
      v59 = &v54[v58];
      v60 = &v55[v58];
      v61 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v402 + 56))(v54, 0, 1, v23);
      goto LABEL_68;
    }
    goto LABEL_67;
  }
  if (v57)
  {
    sub_240388AE4((uint64_t)v54, type metadata accessor for ContextProtoConfidence);
LABEL_67:
    v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
    goto LABEL_68;
  }
  *(_DWORD *)v54 = *(_DWORD *)v55;
  v54[4] = v55[4];
  v228 = *(int *)(v23 + 24);
  v229 = &v54[v228];
  v230 = &v55[v228];
  v231 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v231 - 8) + 24))(v229, v230, v231);
LABEL_68:
  v92 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v411;
  v136 = v36[8];
  v137 = (uint64_t)v34 + v136;
  v138 = (char *)v35 + v136;
  v139 = type metadata accessor for ContextProtoBoundingBox(0);
  v140 = *(_QWORD *)(v139 - 8);
  v141 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
  v142 = v141(v137, 1, v139);
  v143 = v141((uint64_t)v138, 1, v139);
  if (!v142)
  {
    if (!v143)
    {
      v245 = *(_DWORD *)v138;
      *(_BYTE *)(v137 + 4) = v138[4];
      *(_DWORD *)v137 = v245;
      v246 = *((_DWORD *)v138 + 2);
      *(_BYTE *)(v137 + 12) = v138[12];
      *(_DWORD *)(v137 + 8) = v246;
      v247 = *((_DWORD *)v138 + 4);
      *(_BYTE *)(v137 + 20) = v138[20];
      *(_DWORD *)(v137 + 16) = v247;
      v248 = *((_DWORD *)v138 + 6);
      *(_BYTE *)(v137 + 28) = v138[28];
      *(_DWORD *)(v137 + 24) = v248;
      v249 = *(int *)(v139 + 32);
      v250 = v137 + v249;
      v251 = &v138[v249];
      v252 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 24))(v250, v251, v252);
      goto LABEL_77;
    }
    sub_240388AE4(v137, type metadata accessor for ContextProtoBoundingBox);
    goto LABEL_76;
  }
  if (v143)
  {
LABEL_76:
    v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    memcpy((void *)v137, v138, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
    goto LABEL_77;
  }
  v144 = *(_DWORD *)v138;
  *(_BYTE *)(v137 + 4) = v138[4];
  *(_DWORD *)v137 = v144;
  v145 = *((_DWORD *)v138 + 2);
  *(_BYTE *)(v137 + 12) = v138[12];
  *(_DWORD *)(v137 + 8) = v145;
  v146 = *((_DWORD *)v138 + 4);
  *(_BYTE *)(v137 + 20) = v138[20];
  *(_DWORD *)(v137 + 16) = v146;
  v147 = *((_DWORD *)v138 + 6);
  *(_BYTE *)(v137 + 28) = v138[28];
  *(_DWORD *)(v137 + 24) = v147;
  v148 = *(int *)(v139 + 32);
  v149 = v137 + v148;
  v150 = &v138[v148];
  v151 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v149, v150, v151);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v139);
LABEL_77:
  v5 = v398;
  v93 = v417;
  v46 = v423;
  v154 = v36[9];
  v155 = (char *)v34 + v154;
  v156 = (char *)v35 + v154;
  v157 = *(_QWORD *)v156;
  v155[8] = v156[8];
  *(_QWORD *)v155 = v157;
  v158 = v36[10];
  v159 = (_QWORD *)((char *)v34 + v158);
  v160 = (_QWORD *)((char *)v35 + v158);
  *v159 = *v160;
  v159[1] = v160[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v161 = v36[11];
  v162 = (char *)v34 + v161;
  v163 = (char *)v35 + v161;
  v164 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 24))(v162, v163, v164);
  v3 = v424;
LABEL_35:
  v94 = v3[8];
  v95 = &v5[v94];
  v96 = (uint64_t *)&v46[v94];
  v97 = v92((uint64_t *)&v5[v94], 1, v93);
  v98 = v92(v96, 1, v93);
  if (!v97)
  {
    if (v98)
    {
      sub_240388AE4((uint64_t)v95, type metadata accessor for ToolKitProtoTypedValue);
      goto LABEL_42;
    }
    v118 = *v96;
    v119 = *v96 & 0xF000000000000007;
    v120 = v3;
    if ((~*v95 & 0xF000000000000007) != 0)
    {
      if (v119 != 0xF000000000000007)
      {
        *v95 = v118;
        swift_retain();
        swift_release();
        goto LABEL_81;
      }
      sub_2403C66E0((uint64_t)v95);
      v118 = *v96;
    }
    else if (v119 != 0xF000000000000007)
    {
      *v95 = v118;
      swift_retain();
LABEL_81:
      v169 = *(int *)(v93 + 20);
      v170 = (char *)v95 + v169;
      v171 = (char *)v96 + v169;
      v172 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 24))(v170, v171, v172);
      v3 = v120;
      goto LABEL_43;
    }
    *v95 = v118;
    goto LABEL_81;
  }
  if (v98)
  {
LABEL_42:
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    goto LABEL_43;
  }
  v99 = v3;
  v100 = *v96;
  if ((~*v96 & 0xF000000000000007) != 0)
    swift_retain();
  *v95 = v100;
  v101 = *(int *)(v93 + 20);
  v102 = (char *)v95 + v101;
  v103 = (char *)v96 + v101;
  v104 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v102, v103, v104);
  (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v405 + 7))(v95, 0, 1, v93);
  v3 = v99;
LABEL_43:
  v106 = v3[9];
  v107 = (uint64_t)&v5[v106];
  v108 = &v46[v106];
  v109 = type metadata accessor for ContextProtoStructuredContext(0);
  v110 = *(_QWORD *)(v109 - 8);
  v111 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
  v112 = v111(v107, 1, v109);
  v113 = v111((uint64_t)v108, 1, v109);
  if (!v112)
  {
    if (v113)
    {
      sub_240388AE4(v107, type metadata accessor for ContextProtoStructuredContext);
      goto LABEL_49;
    }
    v121 = type metadata accessor for ContextProtoStructuredContextKind(0);
    v122 = *(_QWORD *)(v121 - 8);
    v123 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
    v124 = v123(v107, 1, v121);
    v125 = v123((uint64_t)v108, 1, v121);
    if (v124)
    {
      if (!v125)
      {
        v403 = v122;
        v406 = (void *)v121;
        v412 = v109;
        v399 = v5;
        *(_QWORD *)v107 = *(_QWORD *)v108;
        *(_QWORD *)(v107 + 8) = *((_QWORD *)v108 + 1);
        *(_QWORD *)(v107 + 16) = *((_QWORD *)v108 + 2);
        *(_QWORD *)(v107 + 24) = *((_QWORD *)v108 + 3);
        *(_QWORD *)(v107 + 32) = *((_QWORD *)v108 + 4);
        *(_QWORD *)(v107 + 40) = *((_QWORD *)v108 + 5);
        *(_QWORD *)(v107 + 48) = *((_QWORD *)v108 + 6);
        *(_QWORD *)(v107 + 56) = *((_QWORD *)v108 + 7);
        *(_QWORD *)(v107 + 64) = *((_QWORD *)v108 + 8);
        *(_QWORD *)(v107 + 72) = *((_QWORD *)v108 + 9);
        *(_BYTE *)(v107 + 80) = v108[80];
        *(_BYTE *)(v107 + 81) = v108[81];
        *(_BYTE *)(v107 + 82) = v108[82];
        *(_BYTE *)(v107 + 83) = v108[83];
        *(_BYTE *)(v107 + 84) = v108[84];
        v418 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        v126 = v418[15];
        __dst = (_QWORD *)(v107 + v126);
        v127 = &v108[v126];
        v128 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        v390 = *(_QWORD *)(v128 - 8);
        v129 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v390 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v129(v127, 1, v128))
        {
          v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
          memcpy(__dst, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        }
        else
        {
          *__dst = *v127;
          __dst[1] = v127[1];
          *((_BYTE *)__dst + 16) = *((_BYTE *)v127 + 16);
          *((_BYTE *)__dst + 17) = *((_BYTE *)v127 + 17);
          v253 = *(int *)(v128 + 28);
          v254 = (char *)__dst + v253;
          v255 = (char *)v127 + v253;
          v256 = sub_2408E57A4();
          v257 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v256 - 8) + 16);
          swift_bridgeObjectRetain();
          v257(v254, v255, v256);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v390 + 56))(__dst, 0, 1, v128);
        }
        v258 = v418;
        v259 = v418[16];
        v260 = v107 + v259;
        v261 = (uint64_t *)&v108[v259];
        v262 = v261[1];
        if (v262 >> 60 == 15)
        {
          *(_OWORD *)v260 = *(_OWORD *)v261;
        }
        else
        {
          v263 = *v261;
          sub_240360070(*v261, v261[1]);
          *(_QWORD *)v260 = v263;
          *(_QWORD *)(v260 + 8) = v262;
        }
        v264 = v418[17];
        v265 = (_QWORD *)(v107 + v264);
        v266 = &v108[v264];
        *v265 = *v266;
        v265[1] = v266[1];
        v267 = v418[18];
        v268 = (_QWORD *)(v107 + v267);
        v269 = &v108[v267];
        *v268 = *v269;
        v268[1] = v269[1];
        v270 = v418[19];
        v271 = (_DWORD *)(v107 + v270);
        v272 = (int *)&v108[v270];
        v273 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        v274 = *(_QWORD *)(v273 - 8);
        v275 = *(unsigned int (**)(int *, uint64_t, uint64_t))(v274 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v275(v272, 1, v273))
        {
          v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
          memcpy(v271, v272, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
        }
        else
        {
          v277 = *v272;
          *((_BYTE *)v271 + 4) = *((_BYTE *)v272 + 4);
          *v271 = v277;
          *((_QWORD *)v271 + 1) = *((_QWORD *)v272 + 1);
          *((_QWORD *)v271 + 2) = *((_QWORD *)v272 + 2);
          v278 = v272[6];
          *((_BYTE *)v271 + 28) = *((_BYTE *)v272 + 28);
          v271[6] = v278;
          v279 = v272[8];
          *((_BYTE *)v271 + 36) = *((_BYTE *)v272 + 36);
          v271[8] = v279;
          v280 = *(int *)(v273 + 32);
          v281 = (char *)v271 + v280;
          v282 = (char *)v272 + v280;
          v283 = sub_2408E57A4();
          v284 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v283 - 8) + 16);
          swift_bridgeObjectRetain();
          v285 = v282;
          v258 = v418;
          v284(v281, v285, v283);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v274 + 56))(v271, 0, 1, v273);
        }
        v286 = v258[20];
        v287 = v107 + v286;
        v288 = (uint64_t *)&v108[v286];
        v289 = *v288;
        *(_BYTE *)(v287 + 8) = *((_BYTE *)v288 + 8);
        *(_QWORD *)v287 = v289;
        v290 = v258[21];
        v291 = (_QWORD *)(v107 + v290);
        v292 = &v108[v290];
        *v291 = *v292;
        v291[1] = v292[1];
        *(_BYTE *)(v107 + v258[22]) = v108[v258[22]];
        *(_BYTE *)(v107 + v258[23]) = v108[v258[23]];
        v293 = v258[24];
        v294 = (_QWORD *)(v107 + v293);
        v295 = &v108[v293];
        v296 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        v297 = *(_QWORD *)(v296 - 8);
        v298 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v297 + 48);
        swift_bridgeObjectRetain();
        if (v298(v295, 1, v296))
        {
          v299 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
          memcpy(v294, v295, *(_QWORD *)(*(_QWORD *)(v299 - 8) + 64));
        }
        else
        {
          *v294 = *v295;
          v294[1] = v295[1];
          v294[2] = v295[2];
          v294[3] = v295[3];
          v294[4] = v295[4];
          v294[5] = v295[5];
          v294[6] = v295[6];
          v294[7] = v295[7];
          v294[8] = v295[8];
          v294[9] = v295[9];
          v294[10] = v295[10];
          v300 = *(int *)(v296 + 40);
          v393 = (char *)v295 + v300;
          __dstb = (char *)v294 + v300;
          v301 = sub_2408E57A4();
          v302 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v301 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v258 = v418;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v302(__dstb, v393, v301);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v297 + 56))(v294, 0, 1, v296);
        }
        v5 = v399;
        v109 = v412;
        v303 = v258[25];
        v304 = v107 + v303;
        v305 = &v108[v303];
        v306 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v306 - 8) + 16))(v304, v305, v306);
        (*(void (**)(uint64_t, _QWORD, uint64_t, void *))(v403 + 56))(v107, 0, 1, v406);
        v46 = v423;
        goto LABEL_133;
      }
      goto LABEL_73;
    }
    if (v125)
    {
      sub_240388AE4(v107, type metadata accessor for ContextProtoStructuredContextKind);
LABEL_73:
      v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
      memcpy((void *)v107, v108, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
LABEL_133:
      v361 = *(int *)(v109 + 20);
      v362 = v107 + v361;
      v363 = &v108[v361];
      v364 = sub_2408E57A4();
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v364 - 8) + 24))(v362, v363, v364);
      goto LABEL_134;
    }
    v401 = v5;
    *(_QWORD *)v107 = *(_QWORD *)v108;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v107 + 8) = *((_QWORD *)v108 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v107 + 16) = *((_QWORD *)v108 + 2);
    *(_QWORD *)(v107 + 24) = *((_QWORD *)v108 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v107 + 32) = *((_QWORD *)v108 + 4);
    *(_QWORD *)(v107 + 40) = *((_QWORD *)v108 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v107 + 48) = *((_QWORD *)v108 + 6);
    *(_QWORD *)(v107 + 56) = *((_QWORD *)v108 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v107 + 64) = *((_QWORD *)v108 + 8);
    *(_QWORD *)(v107 + 72) = *((_QWORD *)v108 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v107 + 80) = v108[80];
    *(_BYTE *)(v107 + 81) = v108[81];
    *(_BYTE *)(v107 + 82) = v108[82];
    *(_BYTE *)(v107 + 83) = v108[83];
    *(_BYTE *)(v107 + 84) = v108[84];
    v232 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v233 = v232[15];
    v234 = (_QWORD *)(v107 + v233);
    v235 = &v108[v233];
    v236 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v237 = *(_QWORD *)(v236 - 8);
    v238 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v237 + 48);
    v239 = v238(v234, 1, v236);
    v240 = v238(v235, 1, v236);
    if (v239)
    {
      if (!v240)
      {
        *v234 = *v235;
        v234[1] = v235[1];
        *((_BYTE *)v234 + 16) = *((_BYTE *)v235 + 16);
        *((_BYTE *)v234 + 17) = *((_BYTE *)v235 + 17);
        v241 = *(int *)(v236 + 28);
        v414 = (char *)v235 + v241;
        v420 = (char *)v234 + v241;
        v242 = sub_2408E57A4();
        v243 = v109;
        v244 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 16);
        swift_bridgeObjectRetain();
        v244(v420, v414, v242);
        v109 = v243;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v234, 0, 1, v236);
        goto LABEL_113;
      }
    }
    else
    {
      if (!v240)
      {
        *v234 = *v235;
        v234[1] = v235[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_BYTE *)v234 + 16) = *((_BYTE *)v235 + 16);
        *((_BYTE *)v234 + 17) = *((_BYTE *)v235 + 17);
        v373 = *(int *)(v236 + 28);
        v374 = (char *)v234 + v373;
        v375 = (char *)v235 + v373;
        v376 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v376 - 8) + 24))(v374, v375, v376);
LABEL_113:
        v308 = v232[16];
        v309 = (uint64_t *)(v107 + v308);
        v310 = (uint64_t *)&v108[v308];
        v311 = *(_QWORD *)&v108[v308 + 8];
        if (*(_QWORD *)(v107 + v308 + 8) >> 60 == 15)
        {
          if (v311 >> 60 != 15)
          {
            v312 = *v310;
            sub_240360070(*v310, v311);
            *v309 = v312;
            v309[1] = v311;
            goto LABEL_120;
          }
        }
        else
        {
          if (v311 >> 60 != 15)
          {
            v313 = *v310;
            sub_240360070(*v310, v311);
            v314 = *v309;
            v315 = v309[1];
            *v309 = v313;
            v309[1] = v311;
            sub_240363D58(v314, v315);
LABEL_120:
            v316 = v232[17];
            v317 = (_QWORD *)(v107 + v316);
            v318 = &v108[v316];
            *v317 = *v318;
            v317[1] = v318[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v319 = v232[18];
            v320 = (_QWORD *)(v107 + v319);
            v321 = &v108[v319];
            *v320 = *v321;
            v320[1] = v321[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v322 = v232[19];
            v323 = (_BYTE *)(v107 + v322);
            v324 = &v108[v322];
            v325 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            v326 = *(_QWORD *)(v325 - 8);
            v327 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v326 + 48);
            v328 = v327(v323, 1, v325);
            v329 = v327(v324, 1, v325);
            if (v328)
            {
              if (!v329)
              {
                v330 = *(_DWORD *)v324;
                v323[4] = v324[4];
                *(_DWORD *)v323 = v330;
                *((_QWORD *)v323 + 1) = *((_QWORD *)v324 + 1);
                *((_QWORD *)v323 + 2) = *((_QWORD *)v324 + 2);
                v331 = *((_DWORD *)v324 + 6);
                v323[28] = v324[28];
                *((_DWORD *)v323 + 6) = v331;
                v332 = *((_DWORD *)v324 + 8);
                v323[36] = v324[36];
                *((_DWORD *)v323 + 8) = v332;
                v333 = *(int *)(v325 + 32);
                v415 = &v324[v333];
                v421 = &v323[v333];
                v334 = sub_2408E57A4();
                v335 = v109;
                v336 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v334 - 8) + 16);
                swift_bridgeObjectRetain();
                v336(v421, v415, v334);
                v109 = v335;
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v326 + 56))(v323, 0, 1, v325);
                goto LABEL_126;
              }
            }
            else
            {
              if (!v329)
              {
                v377 = *(_DWORD *)v324;
                v323[4] = v324[4];
                *(_DWORD *)v323 = v377;
                *((_QWORD *)v323 + 1) = *((_QWORD *)v324 + 1);
                *((_QWORD *)v323 + 2) = *((_QWORD *)v324 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v378 = *((_DWORD *)v324 + 6);
                v323[28] = v324[28];
                *((_DWORD *)v323 + 6) = v378;
                v379 = *((_DWORD *)v324 + 8);
                v323[36] = v324[36];
                *((_DWORD *)v323 + 8) = v379;
                v380 = *(int *)(v325 + 32);
                v381 = &v323[v380];
                v382 = &v324[v380];
                v383 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v383 - 8) + 24))(v381, v382, v383);
LABEL_126:
                v338 = v232[20];
                v339 = v107 + v338;
                v340 = (uint64_t *)&v108[v338];
                v341 = *v340;
                *(_BYTE *)(v339 + 8) = *((_BYTE *)v340 + 8);
                *(_QWORD *)v339 = v341;
                v342 = v232[21];
                v343 = (_QWORD *)(v107 + v342);
                v344 = &v108[v342];
                *v343 = *v344;
                v343[1] = v344[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_BYTE *)(v107 + v232[22]) = v108[v232[22]];
                *(_BYTE *)(v107 + v232[23]) = v108[v232[23]];
                v345 = v232[24];
                v346 = (_QWORD *)(v107 + v345);
                v347 = &v108[v345];
                v348 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                v349 = *(_QWORD *)(v348 - 8);
                v350 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v349 + 48);
                v351 = v350(v346, 1, v348);
                v352 = v350(v347, 1, v348);
                if (v351)
                {
                  if (!v352)
                  {
                    *v346 = *v347;
                    v346[1] = v347[1];
                    v346[2] = v347[2];
                    v346[3] = v347[3];
                    v346[4] = v347[4];
                    v346[5] = v347[5];
                    v346[6] = v347[6];
                    v346[7] = v347[7];
                    v346[8] = v347[8];
                    v346[9] = v347[9];
                    v346[10] = v347[10];
                    v353 = *(int *)(v348 + 40);
                    v422 = (char *)v346 + v353;
                    v410 = (char *)v347 + v353;
                    v354 = sub_2408E57A4();
                    v416 = v109;
                    v355 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v354 - 8) + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v355(v422, v410, v354);
                    v109 = v416;
                    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v349 + 56))(v346, 0, 1, v348);
LABEL_132:
                    v46 = v423;
                    v357 = v232[25];
                    v358 = v107 + v357;
                    v359 = &v108[v357];
                    v360 = sub_2408E57A4();
                    (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v360 - 8) + 24))(v358, v359, v360);
                    v5 = v401;
                    goto LABEL_133;
                  }
                }
                else
                {
                  if (!v352)
                  {
                    *v346 = *v347;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v346[1] = v347[1];
                    v346[2] = v347[2];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v346[3] = v347[3];
                    v346[4] = v347[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v346[5] = v347[5];
                    v346[6] = v347[6];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v346[7] = v347[7];
                    v346[8] = v347[8];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v346[9] = v347[9];
                    v346[10] = v347[10];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v384 = *(int *)(v348 + 40);
                    v385 = (char *)v346 + v384;
                    v386 = (char *)v347 + v384;
                    v387 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v387 - 8) + 24))(v385, v386, v387);
                    goto LABEL_132;
                  }
                  sub_240388AE4((uint64_t)v346, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                }
                v356 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
                memcpy(v346, v347, *(_QWORD *)(*(_QWORD *)(v356 - 8) + 64));
                goto LABEL_132;
              }
              sub_240388AE4((uint64_t)v323, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
            }
            v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
            memcpy(v323, v324, *(_QWORD *)(*(_QWORD *)(v337 - 8) + 64));
            goto LABEL_126;
          }
          sub_2403C6714((uint64_t)v309);
        }
        *(_OWORD *)v309 = *(_OWORD *)v310;
        goto LABEL_120;
      }
      sub_240388AE4((uint64_t)v234, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    }
    v307 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy(v234, v235, *(_QWORD *)(*(_QWORD *)(v307 - 8) + 64));
    goto LABEL_113;
  }
  if (v113)
  {
LABEL_49:
    v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB018);
    memcpy((void *)v107, v108, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    goto LABEL_134;
  }
  v114 = type metadata accessor for ContextProtoStructuredContextKind(0);
  v115 = *(unsigned int (***)(_QWORD, uint64_t, uint64_t))(v114 - 8);
  if (((unsigned int (**)(_BYTE *, uint64_t, uint64_t))v115)[6](v108, 1, v114))
  {
    v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
    memcpy((void *)v107, v108, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
  }
  else
  {
    __dsta = (void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v115;
    v400 = v5;
    v404 = v114;
    v413 = v109;
    *(_QWORD *)v107 = *(_QWORD *)v108;
    *(_QWORD *)(v107 + 8) = *((_QWORD *)v108 + 1);
    *(_QWORD *)(v107 + 16) = *((_QWORD *)v108 + 2);
    *(_QWORD *)(v107 + 24) = *((_QWORD *)v108 + 3);
    *(_QWORD *)(v107 + 32) = *((_QWORD *)v108 + 4);
    *(_QWORD *)(v107 + 40) = *((_QWORD *)v108 + 5);
    *(_QWORD *)(v107 + 48) = *((_QWORD *)v108 + 6);
    *(_QWORD *)(v107 + 56) = *((_QWORD *)v108 + 7);
    *(_QWORD *)(v107 + 64) = *((_QWORD *)v108 + 8);
    *(_QWORD *)(v107 + 72) = *((_QWORD *)v108 + 9);
    *(_BYTE *)(v107 + 80) = v108[80];
    *(_BYTE *)(v107 + 81) = v108[81];
    *(_BYTE *)(v107 + 82) = v108[82];
    *(_BYTE *)(v107 + 83) = v108[83];
    *(_BYTE *)(v107 + 84) = v108[84];
    v419 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v131 = v419[15];
    v407 = (_QWORD *)(v107 + v131);
    v132 = &v108[v131];
    v133 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v389 = *(_QWORD *)(v133 - 8);
    v391 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v389 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v391(v132, 1, v133))
    {
      v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
      memcpy(v407, v132, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
    }
    else
    {
      *v407 = *v132;
      v407[1] = v132[1];
      *((_BYTE *)v407 + 16) = *((_BYTE *)v132 + 16);
      *((_BYTE *)v407 + 17) = *((_BYTE *)v132 + 17);
      v173 = *(int *)(v133 + 28);
      v174 = (char *)v407 + v173;
      v175 = (char *)v132 + v173;
      v176 = sub_2408E57A4();
      v177 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 16);
      swift_bridgeObjectRetain();
      v177(v174, v175, v176);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v389 + 56))(v407, 0, 1, v133);
    }
    v178 = v419[16];
    v179 = v107 + v178;
    v180 = (uint64_t *)&v108[v178];
    v181 = v180[1];
    if (v181 >> 60 == 15)
    {
      *(_OWORD *)v179 = *(_OWORD *)v180;
    }
    else
    {
      v182 = *v180;
      sub_240360070(*v180, v180[1]);
      *(_QWORD *)v179 = v182;
      *(_QWORD *)(v179 + 8) = v181;
    }
    v183 = v419[17];
    v184 = (_QWORD *)(v107 + v183);
    v185 = &v108[v183];
    *v184 = *v185;
    v184[1] = v185[1];
    v186 = v419[18];
    v187 = (_QWORD *)(v107 + v186);
    v188 = &v108[v186];
    *v187 = *v188;
    v187[1] = v188[1];
    v189 = v419[19];
    v190 = (_DWORD *)(v107 + v189);
    v191 = (int *)&v108[v189];
    v192 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    v193 = *(_QWORD *)(v192 - 8);
    v194 = *(unsigned int (**)(int *, uint64_t, uint64_t))(v193 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v194(v191, 1, v192))
    {
      v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
      memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
    }
    else
    {
      v196 = *v191;
      *((_BYTE *)v190 + 4) = *((_BYTE *)v191 + 4);
      *v190 = v196;
      *((_QWORD *)v190 + 1) = *((_QWORD *)v191 + 1);
      *((_QWORD *)v190 + 2) = *((_QWORD *)v191 + 2);
      v197 = v191[6];
      *((_BYTE *)v190 + 28) = *((_BYTE *)v191 + 28);
      v190[6] = v197;
      v198 = v191[8];
      *((_BYTE *)v190 + 36) = *((_BYTE *)v191 + 36);
      v190[8] = v198;
      v199 = *(int *)(v192 + 32);
      v408 = (char *)v190 + v199;
      v200 = (char *)v191 + v199;
      v201 = sub_2408E57A4();
      v202 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 16);
      swift_bridgeObjectRetain();
      v202(v408, v200, v201);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
    }
    v203 = v419;
    v204 = v419[20];
    v205 = v107 + v204;
    v206 = (uint64_t *)&v108[v204];
    v207 = *v206;
    *(_BYTE *)(v205 + 8) = *((_BYTE *)v206 + 8);
    *(_QWORD *)v205 = v207;
    v208 = v419[21];
    v209 = (_QWORD *)(v107 + v208);
    v210 = &v108[v208];
    *v209 = *v210;
    v209[1] = v210[1];
    *(_BYTE *)(v107 + v419[22]) = v108[v419[22]];
    *(_BYTE *)(v107 + v419[23]) = v108[v419[23]];
    v211 = v419[24];
    v212 = (_QWORD *)(v107 + v211);
    v213 = &v108[v211];
    v214 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    v215 = *(_QWORD *)(v214 - 8);
    v216 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v215 + 48);
    swift_bridgeObjectRetain();
    if (v216(v213, 1, v214))
    {
      v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
      memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
    }
    else
    {
      *v212 = *v213;
      v212[1] = v213[1];
      v212[2] = v213[2];
      v212[3] = v213[3];
      v212[4] = v213[4];
      v212[5] = v213[5];
      v212[6] = v213[6];
      v212[7] = v213[7];
      v212[8] = v213[8];
      v212[9] = v213[9];
      v212[10] = v213[10];
      v218 = *(int *)(v214 + 40);
      v409 = (char *)v212 + v218;
      v392 = (char *)v213 + v218;
      v219 = sub_2408E57A4();
      v388 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v203 = v419;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v388(v409, v392, v219);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
    }
    v5 = v400;
    v220 = v203[25];
    v221 = v107 + v220;
    v222 = &v108[v220];
    v223 = sub_2408E57A4();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v223 - 8) + 16))(v221, v222, v223);
    __dsta[7](v107, 0, 1, v404);
    v46 = v423;
    v109 = v413;
  }
  v224 = *(int *)(v109 + 20);
  v225 = v107 + v224;
  v226 = &v108[v224];
  v227 = sub_2408E57A4();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v227 - 8) + 16))(v225, v226, v227);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
LABEL_134:
  v365 = v424[10];
  v366 = &v5[v365];
  v367 = &v46[v365];
  *v366 = *v367;
  v366[1] = v367[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v368 = v424[11];
  v369 = &v5[v368];
  v370 = &v46[v368];
  v371 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v371 - 8) + 24))(v369, v370, v371);
  return v5;
}

uint64_t sub_2403C66E0(uint64_t a1)
{
  destroy for ToolKitProtoTypedValueKind();
  return a1;
}

uint64_t sub_2403C6714(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDCDDF0] - 8) + 8))();
  return a1;
}

_BYTE *initializeWithTake for ContextProtoRetrievedContext(_BYTE *a1, _BYTE *a2, int *a3)
{
  int *v3;
  _BYTE *v4;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(_BYTE *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _QWORD *v29;
  _QWORD *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  _DWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD *v71;
  _OWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  __int128 v80;
  __int128 v81;
  int *v82;
  uint64_t v83;
  _WORD *v84;
  _WORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _DWORD *v93;
  _DWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  char *v126;
  uint64_t v127;
  int *v128;
  char *v129;
  char *v130;
  char *v131;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;
  unsigned int (*v136)(_BYTE *, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v3 = a3;
  v4 = a2;
  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ToolKitProtoTypedValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v136 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v138 = v10;
  if (v136(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = v3[6];
  v17 = &a1[v16];
  v18 = &v4[v16];
  v19 = type metadata accessor for ContextProtoConfidence(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48);
  v134 = v9;
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v17[4] = v18[4];
    v23 = *(int *)(v19 + 24);
    v24 = &v17[v23];
    v25 = &v18[v23];
    v26 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v27 = v3[7];
  v28 = a1;
  v29 = &a1[v27];
  v30 = &v4[v27];
  v31 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  v32 = *((_QWORD *)v31 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB010);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    v35 = v136;
    v34 = v138;
    v36 = v28;
    v37 = v134;
  }
  else
  {
    v127 = v32;
    v128 = v3;
    v132 = v4;
    *v29 = *v30;
    *(_OWORD *)(v29 + 1) = *(_OWORD *)(v30 + 1);
    *(_OWORD *)(v29 + 3) = *(_OWORD *)(v30 + 3);
    v38 = v31[7];
    v39 = (char *)v29 + v38;
    v40 = (char *)v30 + v38;
    if (v21((_BYTE *)v30 + v38, 1, v19))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v39 = *(_DWORD *)v40;
      v39[4] = v40[4];
      v42 = *(int *)(v19 + 24);
      v43 = &v39[v42];
      v44 = &v40[v42];
      v45 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v39, 0, 1, v19);
    }
    v36 = v28;
    v46 = v31[8];
    v47 = (_DWORD *)((char *)v29 + v46);
    v48 = (_DWORD *)((char *)v30 + v46);
    v49 = type metadata accessor for ContextProtoBoundingBox(0);
    v50 = *(_QWORD *)(v49 - 8);
    v37 = v134;
    v35 = v136;
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      *v47 = *v48;
      *((_BYTE *)v47 + 4) = *((_BYTE *)v48 + 4);
      v47[2] = v48[2];
      *((_BYTE *)v47 + 12) = *((_BYTE *)v48 + 12);
      v47[4] = v48[4];
      *((_BYTE *)v47 + 20) = *((_BYTE *)v48 + 20);
      *((_BYTE *)v47 + 28) = *((_BYTE *)v48 + 28);
      v47[6] = v48[6];
      v52 = *(int *)(v49 + 32);
      v126 = (char *)v47 + v52;
      v53 = (char *)v48 + v52;
      v54 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v126, v53, v54);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v4 = v132;
    v34 = v138;
    v55 = v31[9];
    v56 = (char *)v29 + v55;
    v57 = (char *)v30 + v55;
    *(_QWORD *)v56 = *(_QWORD *)v57;
    v56[8] = v57[8];
    *(_OWORD *)((char *)v29 + v31[10]) = *(_OWORD *)((char *)v30 + v31[10]);
    v58 = v31[11];
    v59 = (char *)v29 + v58;
    v60 = (char *)v30 + v58;
    v61 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v127 + 56))(v29, 0, 1, v31);
    v3 = v128;
  }
  v62 = v3[8];
  v63 = &v36[v62];
  v64 = &v4[v62];
  if (v35(&v4[v62], 1, v37))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    *v63 = *v64;
    v66 = *(int *)(v37 + 20);
    v67 = (char *)v63 + v66;
    v68 = (char *)v64 + v66;
    v69 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v63, 0, 1, v37);
  }
  v70 = v3[9];
  v71 = &v36[v70];
  v72 = &v4[v70];
  v73 = type metadata accessor for ContextProtoStructuredContext(0);
  v74 = *(_QWORD *)(v73 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
  {
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB018);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    v76 = type metadata accessor for ContextProtoStructuredContextKind(0);
    v77 = *(_QWORD *)(v76 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v77 + 48))(v72, 1, v76))
    {
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      v135 = v77;
      v137 = v76;
      v139 = v74;
      v79 = v3;
      v133 = v4;
      v80 = v72[1];
      *v71 = *v72;
      v71[1] = v80;
      v81 = v72[3];
      v71[2] = v72[2];
      v71[3] = v81;
      v71[4] = v72[4];
      *((_DWORD *)v71 + 20) = *((_DWORD *)v72 + 20);
      *((_BYTE *)v71 + 84) = *((_BYTE *)v72 + 84);
      v82 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      v83 = v82[15];
      v84 = (_WORD *)((char *)v71 + v83);
      v85 = (_WORD *)((char *)v72 + v83);
      v86 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      v87 = *(_QWORD *)(v86 - 8);
      if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
      {
        v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v84 = *(_OWORD *)v85;
        v84[8] = v85[8];
        v89 = *(int *)(v86 + 28);
        v129 = (char *)v84 + v89;
        v90 = (char *)v85 + v89;
        v91 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v129, v90, v91);
        (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      }
      *(_OWORD *)((char *)v71 + v82[16]) = *(_OWORD *)((char *)v72 + v82[16]);
      *(_OWORD *)((char *)v71 + v82[17]) = *(_OWORD *)((char *)v72 + v82[17]);
      *(_OWORD *)((char *)v71 + v82[18]) = *(_OWORD *)((char *)v72 + v82[18]);
      v92 = v82[19];
      v93 = (_DWORD *)((char *)v71 + v92);
      v94 = (_DWORD *)((char *)v72 + v92);
      v95 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      v96 = *(_QWORD *)(v95 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
      {
        v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        *v93 = *v94;
        *((_BYTE *)v93 + 4) = *((_BYTE *)v94 + 4);
        *(_OWORD *)(v93 + 2) = *(_OWORD *)(v94 + 2);
        v93[6] = v94[6];
        *((_BYTE *)v93 + 28) = *((_BYTE *)v94 + 28);
        v93[8] = v94[8];
        *((_BYTE *)v93 + 36) = *((_BYTE *)v94 + 36);
        v98 = *(int *)(v95 + 32);
        v130 = (char *)v93 + v98;
        v99 = (char *)v94 + v98;
        v100 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v130, v99, v100);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
      }
      v101 = v82[20];
      v102 = (char *)v71 + v101;
      v103 = (char *)v72 + v101;
      *(_QWORD *)v102 = *(_QWORD *)v103;
      v102[8] = v103[8];
      *(_OWORD *)((char *)v71 + v82[21]) = *(_OWORD *)((char *)v72 + v82[21]);
      *((_BYTE *)v71 + v82[22]) = *((_BYTE *)v72 + v82[22]);
      *((_BYTE *)v71 + v82[23]) = *((_BYTE *)v72 + v82[23]);
      v104 = v82[24];
      v105 = (_QWORD *)((char *)v71 + v104);
      v106 = (_QWORD *)((char *)v72 + v104);
      v107 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      v108 = *(_QWORD *)(v107 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
      {
        v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
        memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
      }
      else
      {
        *v105 = *v106;
        *(_OWORD *)(v105 + 1) = *(_OWORD *)(v106 + 1);
        *(_OWORD *)(v105 + 3) = *(_OWORD *)(v106 + 3);
        *(_OWORD *)(v105 + 5) = *(_OWORD *)(v106 + 5);
        *(_OWORD *)(v105 + 7) = *(_OWORD *)(v106 + 7);
        *(_OWORD *)(v105 + 9) = *(_OWORD *)(v106 + 9);
        v110 = *(int *)(v107 + 40);
        v131 = (char *)v105 + v110;
        v111 = (char *)v106 + v110;
        v112 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v131, v111, v112);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
      }
      v3 = v79;
      v74 = v139;
      v113 = v82[25];
      v114 = (char *)v71 + v113;
      v115 = (char *)v72 + v113;
      v116 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v71, 0, 1, v137);
      v4 = v133;
    }
    v117 = *(int *)(v73 + 20);
    v118 = (char *)v71 + v117;
    v119 = (char *)v72 + v117;
    v120 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v118, v119, v120);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  v121 = v3[11];
  *(_OWORD *)&v36[v3[10]] = *(_OWORD *)&v4[v3[10]];
  v122 = &v36[v121];
  v123 = &v4[v121];
  v124 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v122, v123, v124);
  return v36;
}

_BYTE *assignWithTake for ContextProtoRetrievedContext(_BYTE *a1, _BYTE *a2, int *a3)
{
  _BYTE *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  int *v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD *, uint64_t, int *);
  int v38;
  int v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  int *v46;
  uint64_t v47;
  uint64_t (*v48)(_BYTE *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  int v60;
  int v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  _DWORD *v71;
  _DWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(char *, uint64_t, uint64_t);
  int v94;
  int v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  int v116;
  int v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t, uint64_t, uint64_t);
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t (*v138)(uint64_t, uint64_t, uint64_t);
  int v139;
  int v140;
  __int128 v141;
  __int128 v142;
  int *v143;
  uint64_t v144;
  _WORD *v145;
  _WORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  __int128 v151;
  int *v152;
  uint64_t v153;
  _WORD *v154;
  _WORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  _DWORD *v173;
  _DWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _BYTE *v184;
  uint64_t v185;
  _QWORD *v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  _BYTE *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _BYTE *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  int *v215;
  uint64_t v216;
  _WORD *v217;
  _WORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t (*v221)(_WORD *, uint64_t, uint64_t);
  int v222;
  int v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  _DWORD *v234;
  _DWORD *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  _BYTE *v246;
  uint64_t v247;
  _QWORD *v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  _BYTE *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t *v264;
  uint64_t *v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  _QWORD *v270;
  uint64_t *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t (*v284)(char *, uint64_t, uint64_t);
  int v285;
  int v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  _BYTE *v294;
  uint64_t v295;
  _QWORD *v296;
  uint64_t *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  char *v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t (*v305)(char *, uint64_t, uint64_t);
  int v306;
  int v307;
  uint64_t v308;
  char *v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  _BYTE *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  _BYTE *v319;
  uint64_t v320;
  uint64_t v321;
  _QWORD *v322;
  uint64_t *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  _BYTE *v327;
  _BYTE *v328;
  uint64_t v329;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  char *v347;
  char *v348;
  uint64_t v349;
  _BYTE *v350;
  _BYTE *v351;
  _BYTE *v352;
  _BYTE *v353;
  uint64_t v354;
  uint64_t (*v355)(_BYTE *, uint64_t, uint64_t);
  uint64_t v356;
  uint64_t v357;
  int *v358;
  uint64_t v359;
  int *v360;
  _BYTE *v361;

  v5 = a1;
  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for ToolKitProtoTypedValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v355 = v11;
  v13 = v11(v8, 1, v9);
  v357 = v9;
  v354 = v10;
  if (v12)
  {
    if (!v13)
    {
      *v7 = *v8;
      v14 = *(int *)(v9 + 20);
      v15 = (char *)v7 + v14;
      v16 = (char *)v8 + v14;
      v17 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v49 = *v8;
  if ((~*v7 & 0xF000000000000007) != 0)
  {
    if ((~v49 & 0xF000000000000007) != 0)
    {
      *v7 = v49;
      swift_release();
    }
    else
    {
      sub_2403C66E0((uint64_t)v7);
      *v7 = *v8;
    }
  }
  else
  {
    *v7 = v49;
  }
  v160 = *(int *)(v9 + 20);
  v161 = (char *)v7 + v160;
  v162 = (char *)v8 + v160;
  v163 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 40))(v161, v162, v163);
LABEL_7:
  v19 = a3[6];
  v20 = &v5[v19];
  v21 = &a2[v19];
  v22 = type metadata accessor for ContextProtoConfidence(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      v27 = *(int *)(v22 + 24);
      v28 = &v20[v27];
      v29 = &v21[v27];
      v30 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    sub_240388AE4((uint64_t)v20, type metadata accessor for ContextProtoConfidence);
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  v50 = *(int *)(v22 + 24);
  v51 = &v20[v50];
  v52 = &v21[v50];
  v53 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v51, v52, v53);
LABEL_13:
  v360 = a3;
  v361 = a2;
  v32 = a3[7];
  v33 = &v5[v32];
  v34 = &a2[v32];
  v35 = (int *)type metadata accessor for ContextProtoContextMetadata(0);
  v36 = *((_QWORD *)v35 - 1);
  v37 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (v39)
    {
      sub_240388AE4((uint64_t)v33, type metadata accessor for ContextProtoContextMetadata);
      goto LABEL_19;
    }
    v54 = v5;
    *v33 = *v34;
    swift_bridgeObjectRelease();
    v55 = v34[2];
    v33[1] = v34[1];
    v33[2] = v55;
    swift_bridgeObjectRelease();
    v56 = v34[4];
    v33[3] = v34[3];
    v33[4] = v56;
    swift_bridgeObjectRelease();
    v57 = v35[7];
    v58 = (char *)v33 + v57;
    v59 = (char *)v34 + v57;
    v60 = v24((char *)v33 + v57, 1, v22);
    v61 = v24(v59, 1, v22);
    if (v60)
    {
      if (!v61)
      {
        *(_DWORD *)v58 = *(_DWORD *)v59;
        v58[4] = v59[4];
        v62 = *(int *)(v22 + 24);
        v63 = &v58[v62];
        v64 = &v59[v62];
        v65 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v58, 0, 1, v22);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v61)
      {
        *(_DWORD *)v58 = *(_DWORD *)v59;
        v58[4] = v59[4];
        v203 = *(int *)(v22 + 24);
        v204 = &v58[v203];
        v205 = &v59[v203];
        v206 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 40))(v204, v205, v206);
LABEL_36:
        v88 = v35[8];
        v89 = (char *)v33 + v88;
        v90 = (char *)v34 + v88;
        v91 = type metadata accessor for ContextProtoBoundingBox(0);
        v92 = *(_QWORD *)(v91 - 8);
        v93 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48);
        v94 = v93(v89, 1, v91);
        v95 = v93(v90, 1, v91);
        if (v94)
        {
          if (!v95)
          {
            *(_DWORD *)v89 = *(_DWORD *)v90;
            v89[4] = v90[4];
            *((_DWORD *)v89 + 2) = *((_DWORD *)v90 + 2);
            v89[12] = v90[12];
            *((_DWORD *)v89 + 4) = *((_DWORD *)v90 + 4);
            v89[20] = v90[20];
            v89[28] = v90[28];
            *((_DWORD *)v89 + 6) = *((_DWORD *)v90 + 6);
            v96 = *(int *)(v91 + 32);
            v97 = &v89[v96];
            v98 = &v90[v96];
            v99 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v97, v98, v99);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
LABEL_42:
            v5 = v54;
            v46 = v360;
            v45 = v361;
            v48 = v355;
            v47 = v357;
            v101 = v35[9];
            v102 = (char *)v33 + v101;
            v103 = (char *)v34 + v101;
            *(_QWORD *)v102 = *(_QWORD *)v103;
            v102[8] = v103[8];
            v104 = v35[10];
            v105 = (_QWORD *)((char *)v33 + v104);
            v106 = (_QWORD *)((char *)v34 + v104);
            v108 = *v106;
            v107 = v106[1];
            *v105 = v108;
            v105[1] = v107;
            swift_bridgeObjectRelease();
            v109 = v35[11];
            v110 = (char *)v33 + v109;
            v111 = (char *)v34 + v109;
            v112 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 40))(v110, v111, v112);
            goto LABEL_43;
          }
        }
        else
        {
          if (!v95)
          {
            *(_DWORD *)v89 = *(_DWORD *)v90;
            v89[4] = v90[4];
            *((_DWORD *)v89 + 2) = *((_DWORD *)v90 + 2);
            v89[12] = v90[12];
            *((_DWORD *)v89 + 4) = *((_DWORD *)v90 + 4);
            v89[20] = v90[20];
            v89[28] = v90[28];
            *((_DWORD *)v89 + 6) = *((_DWORD *)v90 + 6);
            v207 = *(int *)(v91 + 32);
            v208 = &v89[v207];
            v209 = &v90[v207];
            v210 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 40))(v208, v209, v210);
            goto LABEL_42;
          }
          sub_240388AE4((uint64_t)v89, type metadata accessor for ContextProtoBoundingBox);
        }
        v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        goto LABEL_42;
      }
      sub_240388AE4((uint64_t)v58, type metadata accessor for ContextProtoConfidence);
    }
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_36;
  }
  if (v39)
  {
LABEL_19:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB010);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    v46 = v360;
    v45 = v361;
    v48 = v355;
    v47 = v357;
    goto LABEL_43;
  }
  v350 = v5;
  *v33 = *v34;
  *(_OWORD *)(v33 + 1) = *(_OWORD *)(v34 + 1);
  *(_OWORD *)(v33 + 3) = *(_OWORD *)(v34 + 3);
  v40 = v35[7];
  v41 = (char *)v33 + v40;
  v42 = (char *)v34 + v40;
  if (v24((char *)v34 + v40, 1, v22))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v41 = *(_DWORD *)v42;
    v41[4] = v42[4];
    v66 = *(int *)(v22 + 24);
    v67 = &v41[v66];
    v68 = &v42[v66];
    v69 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v41, 0, 1, v22);
  }
  v48 = v355;
  v70 = v35[8];
  v71 = (_DWORD *)((char *)v33 + v70);
  v72 = (_DWORD *)((char *)v34 + v70);
  v73 = type metadata accessor for ContextProtoBoundingBox(0);
  v74 = *(_QWORD *)(v73 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
  {
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    *v71 = *v72;
    *((_BYTE *)v71 + 4) = *((_BYTE *)v72 + 4);
    v71[2] = v72[2];
    *((_BYTE *)v71 + 12) = *((_BYTE *)v72 + 12);
    v71[4] = v72[4];
    *((_BYTE *)v71 + 20) = *((_BYTE *)v72 + 20);
    *((_BYTE *)v71 + 28) = *((_BYTE *)v72 + 28);
    v71[6] = v72[6];
    v76 = *(int *)(v73 + 32);
    v77 = (char *)v71 + v76;
    v78 = (char *)v72 + v76;
    v79 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  v5 = v350;
  v46 = v360;
  v45 = v361;
  v47 = v357;
  v80 = v35[9];
  v81 = (char *)v33 + v80;
  v82 = (char *)v34 + v80;
  *(_QWORD *)v81 = *(_QWORD *)v82;
  v81[8] = v82[8];
  *(_OWORD *)((char *)v33 + v35[10]) = *(_OWORD *)((char *)v34 + v35[10]);
  v83 = v35[11];
  v84 = (char *)v33 + v83;
  v85 = (char *)v34 + v83;
  v86 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v84, v85, v86);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v36 + 56))(v33, 0, 1, v35);
LABEL_43:
  v113 = v46[8];
  v114 = &v5[v113];
  v115 = &v45[v113];
  v116 = v48(&v5[v113], 1, v47);
  v117 = v48(v115, 1, v47);
  if (v116)
  {
    if (!v117)
    {
      *v114 = *v115;
      v118 = *(int *)(v47 + 20);
      v119 = (char *)v114 + v118;
      v120 = (char *)v115 + v118;
      v121 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v354 + 56))(v114, 0, 1, v47);
      goto LABEL_49;
    }
    goto LABEL_48;
  }
  if (v117)
  {
    sub_240388AE4((uint64_t)v114, type metadata accessor for ToolKitProtoTypedValue);
LABEL_48:
    v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
    goto LABEL_49;
  }
  v135 = *v115;
  if ((~*v114 & 0xF000000000000007) != 0)
  {
    if ((~v135 & 0xF000000000000007) != 0)
    {
      *v114 = v135;
      swift_release();
    }
    else
    {
      sub_2403C66E0((uint64_t)v114);
      *v114 = *v115;
    }
  }
  else
  {
    *v114 = v135;
  }
  v164 = *(int *)(v47 + 20);
  v165 = (char *)v114 + v164;
  v166 = (char *)v115 + v164;
  v167 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 40))(v165, v166, v167);
LABEL_49:
  v123 = v46[9];
  v124 = (uint64_t)&v5[v123];
  v125 = &v45[v123];
  v126 = type metadata accessor for ContextProtoStructuredContext(0);
  v127 = *(_QWORD *)(v126 - 8);
  v128 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
  v129 = v128(v124, 1, v126);
  v130 = v128((uint64_t)v125, 1, v126);
  if (!v129)
  {
    if (v130)
    {
      sub_240388AE4(v124, type metadata accessor for ContextProtoStructuredContext);
      goto LABEL_55;
    }
    v136 = type metadata accessor for ContextProtoStructuredContextKind(0);
    v137 = *(_QWORD *)(v136 - 8);
    v138 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v137 + 48);
    v139 = v138(v124, 1, v136);
    v140 = v138((uint64_t)v125, 1, v136);
    if (v139)
    {
      if (!v140)
      {
        v351 = v5;
        v141 = *((_OWORD *)v125 + 1);
        *(_OWORD *)v124 = *(_OWORD *)v125;
        *(_OWORD *)(v124 + 16) = v141;
        v142 = *((_OWORD *)v125 + 3);
        *(_OWORD *)(v124 + 32) = *((_OWORD *)v125 + 2);
        *(_OWORD *)(v124 + 48) = v142;
        *(_OWORD *)(v124 + 64) = *((_OWORD *)v125 + 4);
        *(_DWORD *)(v124 + 80) = *((_DWORD *)v125 + 20);
        *(_BYTE *)(v124 + 84) = v125[84];
        v143 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
        v144 = v143[15];
        v145 = (_WORD *)(v124 + v144);
        v146 = &v125[v144];
        v147 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
        v148 = *(_QWORD *)(v147 - 8);
        v358 = v143;
        if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v148 + 48))(v146, 1, v147))
        {
          v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
          memcpy(v145, v146, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v145 = *(_OWORD *)v146;
          v145[8] = v146[8];
          v228 = *(int *)(v147 + 28);
          v229 = (char *)v145 + v228;
          v230 = (char *)v146 + v228;
          v231 = sub_2408E57A4();
          v232 = v229;
          v143 = v358;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 32))(v232, v230, v231);
          (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v145, 0, 1, v147);
        }
        *(_OWORD *)(v124 + v143[16]) = *(_OWORD *)&v125[v143[16]];
        *(_OWORD *)(v124 + v143[17]) = *(_OWORD *)&v125[v143[17]];
        *(_OWORD *)(v124 + v143[18]) = *(_OWORD *)&v125[v143[18]];
        v233 = v143[19];
        v234 = (_DWORD *)(v124 + v233);
        v235 = &v125[v233];
        v236 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
        v237 = *(_QWORD *)(v236 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v237 + 48))(v235, 1, v236))
        {
          v238 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
          memcpy(v234, v235, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
        }
        else
        {
          *v234 = *v235;
          *((_BYTE *)v234 + 4) = *((_BYTE *)v235 + 4);
          *(_OWORD *)(v234 + 2) = *(_OWORD *)(v235 + 2);
          v234[6] = v235[6];
          *((_BYTE *)v234 + 28) = *((_BYTE *)v235 + 28);
          v234[8] = v235[8];
          *((_BYTE *)v234 + 36) = *((_BYTE *)v235 + 36);
          v239 = *(int *)(v236 + 32);
          v240 = (char *)v234 + v239;
          v241 = (char *)v235 + v239;
          v242 = sub_2408E57A4();
          v243 = v240;
          v143 = v358;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 32))(v243, v241, v242);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v234, 0, 1, v236);
        }
        v244 = v143[20];
        v245 = v124 + v244;
        v246 = &v125[v244];
        *(_QWORD *)v245 = *(_QWORD *)v246;
        *(_BYTE *)(v245 + 8) = v246[8];
        *(_OWORD *)(v124 + v143[21]) = *(_OWORD *)&v125[v143[21]];
        *(_BYTE *)(v124 + v143[22]) = v125[v143[22]];
        *(_BYTE *)(v124 + v143[23]) = v125[v143[23]];
        v247 = v143[24];
        v248 = (_QWORD *)(v124 + v247);
        v249 = &v125[v247];
        v250 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
        v251 = *(_QWORD *)(v250 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v251 + 48))(v249, 1, v250))
        {
          v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
          memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
        }
        else
        {
          *v248 = *v249;
          *(_OWORD *)(v248 + 1) = *(_OWORD *)(v249 + 1);
          *(_OWORD *)(v248 + 3) = *(_OWORD *)(v249 + 3);
          *(_OWORD *)(v248 + 5) = *(_OWORD *)(v249 + 5);
          *(_OWORD *)(v248 + 7) = *(_OWORD *)(v249 + 7);
          *(_OWORD *)(v248 + 9) = *(_OWORD *)(v249 + 9);
          v253 = *(int *)(v250 + 40);
          v254 = (char *)v248 + v253;
          v255 = (char *)v249 + v253;
          v256 = sub_2408E57A4();
          v257 = v254;
          v143 = v358;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v256 - 8) + 32))(v257, v255, v256);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v248, 0, 1, v250);
        }
        v5 = v351;
        v258 = v143[25];
        v259 = v124 + v258;
        v260 = &v125[v258];
        v261 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v261 - 8) + 32))(v259, v260, v261);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v137 + 56))(v124, 0, 1, v136);
        goto LABEL_116;
      }
LABEL_68:
      v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
      memcpy((void *)v124, v125, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
LABEL_117:
      v317 = *(int *)(v126 + 20);
      v318 = v124 + v317;
      v319 = &v125[v317];
      v320 = sub_2408E57A4();
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v320 - 8) + 40))(v318, v319, v320);
      goto LABEL_118;
    }
    if (v140)
    {
      sub_240388AE4(v124, type metadata accessor for ContextProtoStructuredContextKind);
      goto LABEL_68;
    }
    v353 = v5;
    *(_QWORD *)v124 = *(_QWORD *)v125;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v124 + 8) = *((_QWORD *)v125 + 1);
    swift_bridgeObjectRelease();
    v211 = *((_QWORD *)v125 + 3);
    *(_QWORD *)(v124 + 16) = *((_QWORD *)v125 + 2);
    *(_QWORD *)(v124 + 24) = v211;
    swift_bridgeObjectRelease();
    v212 = *((_QWORD *)v125 + 5);
    *(_QWORD *)(v124 + 32) = *((_QWORD *)v125 + 4);
    *(_QWORD *)(v124 + 40) = v212;
    swift_bridgeObjectRelease();
    v213 = *((_QWORD *)v125 + 7);
    *(_QWORD *)(v124 + 48) = *((_QWORD *)v125 + 6);
    *(_QWORD *)(v124 + 56) = v213;
    swift_bridgeObjectRelease();
    v214 = *((_QWORD *)v125 + 9);
    *(_QWORD *)(v124 + 64) = *((_QWORD *)v125 + 8);
    *(_QWORD *)(v124 + 72) = v214;
    swift_bridgeObjectRelease();
    *(_DWORD *)(v124 + 80) = *((_DWORD *)v125 + 20);
    *(_BYTE *)(v124 + 84) = v125[84];
    v215 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v216 = v215[15];
    v217 = (_WORD *)(v124 + v216);
    v218 = &v125[v216];
    v219 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v220 = *(_QWORD *)(v219 - 8);
    v221 = *(uint64_t (**)(_WORD *, uint64_t, uint64_t))(v220 + 48);
    v222 = v221(v217, 1, v219);
    v223 = v221(v218, 1, v219);
    if (v222)
    {
      if (!v223)
      {
        *(_OWORD *)v217 = *(_OWORD *)v218;
        v217[8] = v218[8];
        v224 = *(int *)(v219 + 28);
        v225 = (char *)v217 + v224;
        v226 = (char *)v218 + v224;
        v227 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v225, v226, v227);
        (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v220 + 56))(v217, 0, 1, v219);
        goto LABEL_98;
      }
    }
    else
    {
      if (!v223)
      {
        v331 = *((_QWORD *)v218 + 1);
        *(_QWORD *)v217 = *(_QWORD *)v218;
        *((_QWORD *)v217 + 1) = v331;
        swift_bridgeObjectRelease();
        v217[8] = v218[8];
        v332 = *(int *)(v219 + 28);
        v333 = (char *)v217 + v332;
        v334 = (char *)v218 + v332;
        v335 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v335 - 8) + 40))(v333, v334, v335);
LABEL_98:
        v263 = v215[16];
        v264 = (uint64_t *)(v124 + v263);
        v265 = (uint64_t *)&v125[v263];
        v266 = *(_QWORD *)(v124 + v263 + 8);
        if (v266 >> 60 != 15)
        {
          v267 = v265[1];
          if (v267 >> 60 != 15)
          {
            v268 = *v264;
            *v264 = *v265;
            v264[1] = v267;
            sub_240363D58(v268, v266);
LABEL_103:
            v269 = v215[17];
            v270 = (_QWORD *)(v124 + v269);
            v271 = (uint64_t *)&v125[v269];
            v273 = *v271;
            v272 = v271[1];
            *v270 = v273;
            v270[1] = v272;
            swift_bridgeObjectRelease();
            v274 = v215[18];
            v275 = (_QWORD *)(v124 + v274);
            v276 = (uint64_t *)&v125[v274];
            v278 = *v276;
            v277 = v276[1];
            *v275 = v278;
            v275[1] = v277;
            swift_bridgeObjectRelease();
            v279 = v215[19];
            v280 = (char *)(v124 + v279);
            v281 = &v125[v279];
            v282 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            v283 = *(_QWORD *)(v282 - 8);
            v284 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v283 + 48);
            v285 = v284(v280, 1, v282);
            v286 = v284(v281, 1, v282);
            if (v285)
            {
              if (!v286)
              {
                *(_DWORD *)v280 = *(_DWORD *)v281;
                v280[4] = v281[4];
                *(_OWORD *)(v280 + 8) = *(_OWORD *)(v281 + 8);
                *((_DWORD *)v280 + 6) = *((_DWORD *)v281 + 6);
                v280[28] = v281[28];
                *((_DWORD *)v280 + 8) = *((_DWORD *)v281 + 8);
                v280[36] = v281[36];
                v287 = *(int *)(v282 + 32);
                v288 = &v280[v287];
                v289 = &v281[v287];
                v290 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v290 - 8) + 32))(v288, v289, v290);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v280, 0, 1, v282);
                goto LABEL_109;
              }
            }
            else
            {
              if (!v286)
              {
                *(_DWORD *)v280 = *(_DWORD *)v281;
                v280[4] = v281[4];
                v336 = *((_QWORD *)v281 + 2);
                *((_QWORD *)v280 + 1) = *((_QWORD *)v281 + 1);
                *((_QWORD *)v280 + 2) = v336;
                swift_bridgeObjectRelease();
                *((_DWORD *)v280 + 6) = *((_DWORD *)v281 + 6);
                v280[28] = v281[28];
                *((_DWORD *)v280 + 8) = *((_DWORD *)v281 + 8);
                v280[36] = v281[36];
                v337 = *(int *)(v282 + 32);
                v338 = &v280[v337];
                v339 = &v281[v337];
                v340 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v340 - 8) + 40))(v338, v339, v340);
LABEL_109:
                v292 = v215[20];
                v293 = v124 + v292;
                v294 = &v125[v292];
                *(_QWORD *)v293 = *(_QWORD *)v294;
                *(_BYTE *)(v293 + 8) = v294[8];
                v295 = v215[21];
                v296 = (_QWORD *)(v124 + v295);
                v297 = (uint64_t *)&v125[v295];
                v299 = *v297;
                v298 = v297[1];
                *v296 = v299;
                v296[1] = v298;
                swift_bridgeObjectRelease();
                *(_BYTE *)(v124 + v215[22]) = v125[v215[22]];
                *(_BYTE *)(v124 + v215[23]) = v125[v215[23]];
                v300 = v215[24];
                v301 = (char *)(v124 + v300);
                v302 = &v125[v300];
                v303 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                v304 = *(_QWORD *)(v303 - 8);
                v305 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v304 + 48);
                v306 = v305(v301, 1, v303);
                v307 = v305(v302, 1, v303);
                if (v306)
                {
                  if (!v307)
                  {
                    *(_QWORD *)v301 = *(_QWORD *)v302;
                    *(_OWORD *)(v301 + 8) = *(_OWORD *)(v302 + 8);
                    *(_OWORD *)(v301 + 24) = *(_OWORD *)(v302 + 24);
                    *(_OWORD *)(v301 + 40) = *(_OWORD *)(v302 + 40);
                    *(_OWORD *)(v301 + 56) = *(_OWORD *)(v302 + 56);
                    *(_OWORD *)(v301 + 72) = *(_OWORD *)(v302 + 72);
                    v308 = *(int *)(v303 + 40);
                    v309 = &v301[v308];
                    v310 = &v302[v308];
                    v311 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v311 - 8) + 32))(v309, v310, v311);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v304 + 56))(v301, 0, 1, v303);
LABEL_115:
                    v5 = v353;
                    v313 = v215[25];
                    v314 = v124 + v313;
                    v315 = &v125[v313];
                    v316 = sub_2408E57A4();
                    (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v316 - 8) + 40))(v314, v315, v316);
LABEL_116:
                    v46 = v360;
                    v45 = v361;
                    goto LABEL_117;
                  }
                }
                else
                {
                  if (!v307)
                  {
                    *(_QWORD *)v301 = *(_QWORD *)v302;
                    swift_bridgeObjectRelease();
                    v341 = *((_QWORD *)v302 + 2);
                    *((_QWORD *)v301 + 1) = *((_QWORD *)v302 + 1);
                    *((_QWORD *)v301 + 2) = v341;
                    swift_bridgeObjectRelease();
                    v342 = *((_QWORD *)v302 + 4);
                    *((_QWORD *)v301 + 3) = *((_QWORD *)v302 + 3);
                    *((_QWORD *)v301 + 4) = v342;
                    swift_bridgeObjectRelease();
                    v343 = *((_QWORD *)v302 + 6);
                    *((_QWORD *)v301 + 5) = *((_QWORD *)v302 + 5);
                    *((_QWORD *)v301 + 6) = v343;
                    swift_bridgeObjectRelease();
                    v344 = *((_QWORD *)v302 + 8);
                    *((_QWORD *)v301 + 7) = *((_QWORD *)v302 + 7);
                    *((_QWORD *)v301 + 8) = v344;
                    swift_bridgeObjectRelease();
                    v345 = *((_QWORD *)v302 + 10);
                    *((_QWORD *)v301 + 9) = *((_QWORD *)v302 + 9);
                    *((_QWORD *)v301 + 10) = v345;
                    swift_bridgeObjectRelease();
                    v346 = *(int *)(v303 + 40);
                    v347 = &v301[v346];
                    v348 = &v302[v346];
                    v349 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v349 - 8) + 40))(v347, v348, v349);
                    goto LABEL_115;
                  }
                  sub_240388AE4((uint64_t)v301, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                }
                v312 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
                memcpy(v301, v302, *(_QWORD *)(*(_QWORD *)(v312 - 8) + 64));
                goto LABEL_115;
              }
              sub_240388AE4((uint64_t)v280, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
            }
            v291 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
            memcpy(v280, v281, *(_QWORD *)(*(_QWORD *)(v291 - 8) + 64));
            goto LABEL_109;
          }
          sub_2403C6714((uint64_t)v264);
        }
        *(_OWORD *)v264 = *(_OWORD *)v265;
        goto LABEL_103;
      }
      sub_240388AE4((uint64_t)v217, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    }
    v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy(v217, v218, *(_QWORD *)(*(_QWORD *)(v262 - 8) + 64));
    goto LABEL_98;
  }
  if (v130)
  {
LABEL_55:
    v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB018);
    memcpy((void *)v124, v125, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
    goto LABEL_118;
  }
  v131 = type metadata accessor for ContextProtoStructuredContextKind(0);
  v132 = *(_QWORD *)(v131 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v132 + 48))(v125, 1, v131))
  {
    v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
    memcpy((void *)v124, v125, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
  }
  else
  {
    v356 = v132;
    v359 = v131;
    v352 = v5;
    v150 = *((_OWORD *)v125 + 1);
    *(_OWORD *)v124 = *(_OWORD *)v125;
    *(_OWORD *)(v124 + 16) = v150;
    v151 = *((_OWORD *)v125 + 3);
    *(_OWORD *)(v124 + 32) = *((_OWORD *)v125 + 2);
    *(_OWORD *)(v124 + 48) = v151;
    *(_OWORD *)(v124 + 64) = *((_OWORD *)v125 + 4);
    *(_DWORD *)(v124 + 80) = *((_DWORD *)v125 + 20);
    *(_BYTE *)(v124 + 84) = v125[84];
    v152 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v153 = v152[15];
    v154 = (_WORD *)(v124 + v153);
    v155 = &v125[v153];
    v156 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v157 = *(_QWORD *)(v156 - 8);
    if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v157 + 48))(v155, 1, v156))
    {
      v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
      memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v154 = *(_OWORD *)v155;
      v154[8] = v155[8];
      v168 = *(int *)(v156 + 28);
      v169 = (char *)v154 + v168;
      v170 = (char *)v155 + v168;
      v171 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v169, v170, v171);
      (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
    }
    *(_OWORD *)(v124 + v152[16]) = *(_OWORD *)&v125[v152[16]];
    *(_OWORD *)(v124 + v152[17]) = *(_OWORD *)&v125[v152[17]];
    *(_OWORD *)(v124 + v152[18]) = *(_OWORD *)&v125[v152[18]];
    v172 = v152[19];
    v173 = (_DWORD *)(v124 + v172);
    v174 = &v125[v172];
    v175 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    v176 = *(_QWORD *)(v175 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v176 + 48))(v174, 1, v175))
    {
      v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
      memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
    }
    else
    {
      *v173 = *v174;
      *((_BYTE *)v173 + 4) = *((_BYTE *)v174 + 4);
      *(_OWORD *)(v173 + 2) = *(_OWORD *)(v174 + 2);
      v173[6] = v174[6];
      *((_BYTE *)v173 + 28) = *((_BYTE *)v174 + 28);
      v173[8] = v174[8];
      *((_BYTE *)v173 + 36) = *((_BYTE *)v174 + 36);
      v178 = *(int *)(v175 + 32);
      v179 = (char *)v173 + v178;
      v180 = (char *)v174 + v178;
      v181 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v179, v180, v181);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v173, 0, 1, v175);
    }
    v182 = v152[20];
    v183 = v124 + v182;
    v184 = &v125[v182];
    *(_QWORD *)v183 = *(_QWORD *)v184;
    *(_BYTE *)(v183 + 8) = v184[8];
    *(_OWORD *)(v124 + v152[21]) = *(_OWORD *)&v125[v152[21]];
    *(_BYTE *)(v124 + v152[22]) = v125[v152[22]];
    *(_BYTE *)(v124 + v152[23]) = v125[v152[23]];
    v185 = v152[24];
    v186 = (_QWORD *)(v124 + v185);
    v187 = &v125[v185];
    v188 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    v189 = *(_QWORD *)(v188 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v189 + 48))(v187, 1, v188))
    {
      v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
      memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
    }
    else
    {
      *v186 = *v187;
      *(_OWORD *)(v186 + 1) = *(_OWORD *)(v187 + 1);
      *(_OWORD *)(v186 + 3) = *(_OWORD *)(v187 + 3);
      *(_OWORD *)(v186 + 5) = *(_OWORD *)(v187 + 5);
      *(_OWORD *)(v186 + 7) = *(_OWORD *)(v187 + 7);
      *(_OWORD *)(v186 + 9) = *(_OWORD *)(v187 + 9);
      v191 = *(int *)(v188 + 40);
      v192 = (char *)v186 + v191;
      v193 = (char *)v187 + v191;
      v194 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v192, v193, v194);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v189 + 56))(v186, 0, 1, v188);
    }
    v5 = v352;
    v195 = v152[25];
    v196 = v124 + v195;
    v197 = &v125[v195];
    v198 = sub_2408E57A4();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v198 - 8) + 32))(v196, v197, v198);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v356 + 56))(v124, 0, 1, v359);
    v46 = v360;
    v45 = v361;
  }
  v199 = *(int *)(v126 + 20);
  v200 = v124 + v199;
  v201 = &v125[v199];
  v202 = sub_2408E57A4();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v202 - 8) + 32))(v200, v201, v202);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
LABEL_118:
  v321 = v46[10];
  v322 = &v5[v321];
  v323 = (uint64_t *)&v45[v321];
  v325 = *v323;
  v324 = v323[1];
  *v322 = v325;
  v322[1] = v324;
  swift_bridgeObjectRelease();
  v326 = v46[11];
  v327 = &v5[v326];
  v328 = &v45[v326];
  v329 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v329 - 8) + 40))(v327, v328, v329);
  return v5;
}

uint64_t getEnumTagSinglePayload for ContextProtoRetrievedContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403C885C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB010);
  v7 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB018);
  v7 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v12;
    v9 = a3[9];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v8 = sub_2408E57A4();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[11];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v13 = *(_QWORD *)(a1 + a3[10] + 8);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for ContextProtoRetrievedContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403C8998(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
  }
  else
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[6];
    }
    else
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB010);
      v9 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v13;
        v11 = a4[7];
      }
      else
      {
        result = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB018);
        v9 = *(_QWORD *)(result - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = result;
          v11 = a4[9];
        }
        else
        {
          if (a3 == 2147483646)
          {
            *(_QWORD *)(a1 + a4[10] + 8) = a2;
            return result;
          }
          v10 = sub_2408E57A4();
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[11];
        }
      }
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_2403C8AB8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_2403C8BE4(319, &qword_256FFB188, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, &qword_256FFB190, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
    if (v1 <= 0x3F)
    {
      sub_2403C8BE4(319, &qword_256FFB198, (void (*)(uint64_t))type metadata accessor for ContextProtoContextMetadata);
      if (v2 <= 0x3F)
      {
        sub_2403C8BE4(319, qword_256FFB1A0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContext);
        if (v3 <= 0x3F)
        {
          sub_2408E57A4();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_2403C8BE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_2408E5F24();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoContextMetadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  unsigned int (*v14)(_BYTE *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v43;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = a2[4];
    a1[3] = a2[3];
    a1[4] = v9;
    v10 = a3[7];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for ContextProtoConfidence(0);
    v43 = *(_QWORD *)(v13 - 8);
    v14 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v43 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v11 = *(_DWORD *)v12;
      v11[4] = v12[4];
      v16 = *(int *)(v13 + 24);
      v17 = &v11[v16];
      v18 = &v12[v16];
      v19 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v11, 0, 1, v13);
    }
    v20 = a3[8];
    v21 = (_DWORD *)((char *)v7 + v20);
    v22 = (_DWORD *)((char *)a2 + v20);
    v23 = type metadata accessor for ContextProtoBoundingBox(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      *v21 = *v22;
      *((_BYTE *)v21 + 4) = *((_BYTE *)v22 + 4);
      v21[2] = v22[2];
      *((_BYTE *)v21 + 12) = *((_BYTE *)v22 + 12);
      v21[4] = v22[4];
      *((_BYTE *)v21 + 20) = *((_BYTE *)v22 + 20);
      *((_BYTE *)v21 + 28) = *((_BYTE *)v22 + 28);
      v21[6] = v22[6];
      v26 = *(int *)(v23 + 32);
      v27 = (char *)v21 + v26;
      v28 = (char *)v22 + v26;
      v29 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v30 = a3[9];
    v31 = a3[10];
    v32 = (char *)v7 + v30;
    v33 = (char *)a2 + v30;
    *(_QWORD *)v32 = *(_QWORD *)v33;
    v32[8] = v33[8];
    v34 = (uint64_t *)((char *)v7 + v31);
    v35 = (uint64_t *)((char *)a2 + v31);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = a3[11];
    v38 = (char *)v7 + v37;
    v39 = (char *)a2 + v37;
    v40 = sub_2408E57A4();
    v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
    swift_bridgeObjectRetain();
    v41(v38, v39, v40);
  }
  return v7;
}

uint64_t destroy for ContextProtoContextMetadata(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for ContextProtoConfidence(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[8];
  v9 = type metadata accessor for ContextProtoBoundingBox(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = v8 + *(int *)(v9 + 32);
    v11 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  v12 = a1 + a2[11];
  v13 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *initializeWithCopy for ContextProtoContextMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_BYTE *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ContextProtoConfidence(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v8[4] = v9[4];
    v14 = *(int *)(v10 + 24);
    v15 = &v8[v14];
    v16 = &v9[v14];
    v17 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v18 = a3[8];
  v19 = (_DWORD *)((char *)a1 + v18);
  v20 = (_DWORD *)((char *)a2 + v18);
  v21 = type metadata accessor for ContextProtoBoundingBox(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    *((_BYTE *)v19 + 4) = *((_BYTE *)v20 + 4);
    v19[2] = v20[2];
    *((_BYTE *)v19 + 12) = *((_BYTE *)v20 + 12);
    v19[4] = v20[4];
    *((_BYTE *)v19 + 20) = *((_BYTE *)v20 + 20);
    *((_BYTE *)v19 + 28) = *((_BYTE *)v20 + 28);
    v19[6] = v20[6];
    v24 = *(int *)(v21 + 32);
    v25 = (char *)v19 + v24;
    v26 = (char *)v20 + v24;
    v27 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v28 = a3[9];
  v29 = a3[10];
  v30 = (char *)a1 + v28;
  v31 = (char *)a2 + v28;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v31[8];
  v32 = (_QWORD *)((char *)a1 + v29);
  v33 = (_QWORD *)((char *)a2 + v29);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = a3[11];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_2408E57A4();
  v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
  swift_bridgeObjectRetain();
  v39(v36, v37, v38);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoContextMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ContextProtoConfidence(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[4] = v8[4];
      v14 = *(int *)(v9 + 24);
      v15 = &v7[v14];
      v16 = &v8[v14];
      v17 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoConfidence);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[4] = v8[4];
  v48 = *(int *)(v9 + 24);
  v49 = &v7[v48];
  v50 = &v8[v48];
  v51 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v49, v50, v51);
LABEL_7:
  v19 = a3[8];
  v20 = (uint64_t)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for ContextProtoBoundingBox(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24((uint64_t)v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      v52 = *(_DWORD *)v21;
      *(_BYTE *)(v20 + 4) = v21[4];
      *(_DWORD *)v20 = v52;
      v53 = *((_DWORD *)v21 + 2);
      *(_BYTE *)(v20 + 12) = v21[12];
      *(_DWORD *)(v20 + 8) = v53;
      v54 = *((_DWORD *)v21 + 4);
      *(_BYTE *)(v20 + 20) = v21[20];
      *(_DWORD *)(v20 + 16) = v54;
      v55 = *((_DWORD *)v21 + 6);
      *(_BYTE *)(v20 + 28) = v21[28];
      *(_DWORD *)(v20 + 24) = v55;
      v56 = *(int *)(v22 + 32);
      v57 = v20 + v56;
      v58 = &v21[v56];
      v59 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 24))(v57, v58, v59);
      goto LABEL_13;
    }
    sub_240388AE4(v20, type metadata accessor for ContextProtoBoundingBox);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    memcpy((void *)v20, v21, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_13;
  }
  v27 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v21[4];
  *(_DWORD *)v20 = v27;
  v28 = *((_DWORD *)v21 + 2);
  *(_BYTE *)(v20 + 12) = v21[12];
  *(_DWORD *)(v20 + 8) = v28;
  v29 = *((_DWORD *)v21 + 4);
  *(_BYTE *)(v20 + 20) = v21[20];
  *(_DWORD *)(v20 + 16) = v29;
  v30 = *((_DWORD *)v21 + 6);
  *(_BYTE *)(v20 + 28) = v21[28];
  *(_DWORD *)(v20 + 24) = v30;
  v31 = *(int *)(v22 + 32);
  v32 = v20 + v31;
  v33 = &v21[v31];
  v34 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  v36 = a3[9];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *(_QWORD *)v38;
  v37[8] = v38[8];
  *(_QWORD *)v37 = v39;
  v40 = a3[10];
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (_QWORD *)((char *)a2 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = a3[11];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t initializeWithTake for ContextProtoContextMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (_BYTE *)(a1 + v6);
  v8 = (_BYTE *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoConfidence(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v7 = *(_DWORD *)v8;
    v7[4] = v8[4];
    v12 = *(int *)(v9 + 24);
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = a3[8];
  v17 = (_DWORD *)(a1 + v16);
  v18 = (_DWORD *)(a2 + v16);
  v19 = type metadata accessor for ContextProtoBoundingBox(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v17 = *v18;
    *((_BYTE *)v17 + 4) = *((_BYTE *)v18 + 4);
    v17[2] = v18[2];
    *((_BYTE *)v17 + 12) = *((_BYTE *)v18 + 12);
    v17[4] = v18[4];
    *((_BYTE *)v17 + 20) = *((_BYTE *)v18 + 20);
    *((_BYTE *)v17 + 28) = *((_BYTE *)v18 + 28);
    v17[6] = v18[6];
    v22 = *(int *)(v19 + 32);
    v23 = (char *)v17 + v22;
    v24 = (char *)v18 + v22;
    v25 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v26 = a3[9];
  v27 = a3[10];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v30 = *(_OWORD *)(a2 + v27);
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  *(_OWORD *)(a1 + v27) = v30;
  v31 = a3[11];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  return a1;
}

_QWORD *assignWithTake for ContextProtoContextMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_BYTE *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for ContextProtoConfidence(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v9[4] = v10[4];
      v16 = *(int *)(v11 + 24);
      v17 = &v9[v16];
      v18 = &v10[v16];
      v19 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_240388AE4((uint64_t)v9, type metadata accessor for ContextProtoConfidence);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v9 = *(_DWORD *)v10;
  v9[4] = v10[4];
  v47 = *(int *)(v11 + 24);
  v48 = &v9[v47];
  v49 = &v10[v47];
  v50 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
LABEL_7:
  v21 = a3[8];
  v22 = (uint64_t)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for ContextProtoBoundingBox(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26((uint64_t)v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      *(_DWORD *)v22 = *(_DWORD *)v23;
      *(_BYTE *)(v22 + 4) = v23[4];
      *(_DWORD *)(v22 + 8) = *((_DWORD *)v23 + 2);
      *(_BYTE *)(v22 + 12) = v23[12];
      *(_DWORD *)(v22 + 16) = *((_DWORD *)v23 + 4);
      *(_BYTE *)(v22 + 20) = v23[20];
      *(_BYTE *)(v22 + 28) = v23[28];
      *(_DWORD *)(v22 + 24) = *((_DWORD *)v23 + 6);
      v51 = *(int *)(v24 + 32);
      v52 = v22 + v51;
      v53 = &v23[v51];
      v54 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
      goto LABEL_13;
    }
    sub_240388AE4(v22, type metadata accessor for ContextProtoBoundingBox);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    memcpy((void *)v22, v23, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = v23[4];
  *(_DWORD *)(v22 + 8) = *((_DWORD *)v23 + 2);
  *(_BYTE *)(v22 + 12) = v23[12];
  *(_DWORD *)(v22 + 16) = *((_DWORD *)v23 + 4);
  *(_BYTE *)(v22 + 20) = v23[20];
  *(_BYTE *)(v22 + 28) = v23[28];
  *(_DWORD *)(v22 + 24) = *((_DWORD *)v23 + 6);
  v29 = *(int *)(v24 + 32);
  v30 = v22 + v29;
  v31 = &v23[v29];
  v32 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_13:
  v34 = a3[9];
  v35 = a3[10];
  v36 = (char *)a1 + v34;
  v37 = (char *)a2 + v34;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v37[8];
  v38 = (_QWORD *)((char *)a1 + v35);
  v39 = (_QWORD *)((char *)a2 + v35);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  v42 = a3[11];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoContextMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403C9B9C(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[7];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        v10 = sub_2408E57A4();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[11];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoContextMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2403C9C74(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        v10 = sub_2408E57A4();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[11];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_2403C9D3C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2403C8BE4(319, &qword_256FFB190, (void (*)(uint64_t))type metadata accessor for ContextProtoConfidence);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, qword_256FFB250, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
    if (v1 <= 0x3F)
    {
      sub_2408E57A4();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoBoundingBox(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
    *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
    v5 = *(int *)(a3 + 32);
    v6 = (uint64_t)a2 + v5;
    v7 = a1 + v5;
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    v8 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v6, v8);
  }
  return v3;
}

uint64_t destroy for ToolKitProtoRuntimePlatformVersion(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for ContextProtoBoundingBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v4 = *(int *)(a3 + 32);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, v5, v7);
  return a1;
}

uint64_t assignWithCopy for ContextProtoBoundingBox(uint64_t a1, int *a2, uint64_t a3)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v5;
  v6 = a2[4];
  *(_BYTE *)(a1 + 20) = *((_BYTE *)a2 + 20);
  *(_DWORD *)(a1 + 16) = v6;
  v7 = a2[6];
  *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
  *(_DWORD *)(a1 + 24) = v7;
  v8 = *(int *)(a3 + 32);
  v9 = a1 + v8;
  v10 = (uint64_t)a2 + v8;
  v11 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t initializeWithTake for ContextProtoBoundingBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v4 = *(int *)(a3 + 32);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoBoundingBox(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  v4 = *(int *)(a3 + 32);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v6, v5, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoBoundingBox()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403CA178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 32);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for ContextProtoBoundingBox()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403CA1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 32);
  v6 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_2403CA208()
{
  return sub_2403D18D8();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoSurroundingText(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_DWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (_DWORD *)((char *)a1 + v8);
    v10 = (_DWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for ContextProtoBoundingBox(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *v9 = *v10;
      *((_BYTE *)v9 + 4) = *((_BYTE *)v10 + 4);
      v9[2] = v10[2];
      *((_BYTE *)v9 + 12) = *((_BYTE *)v10 + 12);
      v9[4] = v10[4];
      *((_BYTE *)v9 + 20) = *((_BYTE *)v10 + 20);
      *((_BYTE *)v9 + 28) = *((_BYTE *)v10 + 28);
      v9[6] = v10[6];
      v16 = *(int *)(v11 + 32);
      v17 = (char *)v9 + v16;
      v18 = (char *)v10 + v16;
      v19 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v20 = *(int *)(a3 + 24);
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v4;
}

uint64_t destroy for ContextProtoSurroundingText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for ContextProtoBoundingBox(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 32);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for ContextProtoSurroundingText(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_DWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_DWORD *)((char *)a1 + v7);
  v9 = (_DWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ContextProtoBoundingBox(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    *((_BYTE *)v8 + 4) = *((_BYTE *)v9 + 4);
    v8[2] = v9[2];
    *((_BYTE *)v8 + 12) = *((_BYTE *)v9 + 12);
    v8[4] = v9[4];
    *((_BYTE *)v8 + 20) = *((_BYTE *)v9 + 20);
    *((_BYTE *)v8 + 28) = *((_BYTE *)v9 + 28);
    v8[6] = v9[6];
    v14 = *(int *)(v10 + 32);
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoSurroundingText(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ContextProtoBoundingBox(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v28 = *(_DWORD *)v8;
      *(_BYTE *)(v7 + 4) = v8[4];
      *(_DWORD *)v7 = v28;
      v29 = *((_DWORD *)v8 + 2);
      *(_BYTE *)(v7 + 12) = v8[12];
      *(_DWORD *)(v7 + 8) = v29;
      v30 = *((_DWORD *)v8 + 4);
      *(_BYTE *)(v7 + 20) = v8[20];
      *(_DWORD *)(v7 + 16) = v30;
      v31 = *((_DWORD *)v8 + 6);
      *(_BYTE *)(v7 + 28) = v8[28];
      *(_DWORD *)(v7 + 24) = v31;
      v32 = *(int *)(v9 + 32);
      v33 = v7 + v32;
      v34 = &v8[v32];
      v35 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v33, v34, v35);
      goto LABEL_7;
    }
    sub_240388AE4(v7, type metadata accessor for ContextProtoBoundingBox);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v14 = *(_DWORD *)v8;
  *(_BYTE *)(v7 + 4) = v8[4];
  *(_DWORD *)v7 = v14;
  v15 = *((_DWORD *)v8 + 2);
  *(_BYTE *)(v7 + 12) = v8[12];
  *(_DWORD *)(v7 + 8) = v15;
  v16 = *((_DWORD *)v8 + 4);
  *(_BYTE *)(v7 + 20) = v8[20];
  *(_DWORD *)(v7 + 16) = v16;
  v17 = *((_DWORD *)v8 + 6);
  *(_BYTE *)(v7 + 28) = v8[28];
  *(_DWORD *)(v7 + 24) = v17;
  v18 = *(int *)(v9 + 32);
  v19 = v7 + v18;
  v20 = &v8[v18];
  v21 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v23 = *(int *)(a3 + 24);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoSurroundingText(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ContextProtoBoundingBox(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *((_BYTE *)v7 + 4) = *((_BYTE *)v8 + 4);
    v7[2] = v8[2];
    *((_BYTE *)v7 + 12) = *((_BYTE *)v8 + 12);
    v7[4] = v8[4];
    *((_BYTE *)v7 + 20) = *((_BYTE *)v8 + 20);
    *((_BYTE *)v7 + 28) = *((_BYTE *)v8 + 28);
    v7[6] = v8[6];
    v12 = *(int *)(v9 + 32);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithTake for ContextProtoSurroundingText(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ContextProtoBoundingBox(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12((uint64_t)v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      *(_BYTE *)(v8 + 4) = v9[4];
      *(_DWORD *)(v8 + 8) = *((_DWORD *)v9 + 2);
      *(_BYTE *)(v8 + 12) = v9[12];
      *(_DWORD *)(v8 + 16) = *((_DWORD *)v9 + 4);
      *(_BYTE *)(v8 + 20) = v9[20];
      *(_BYTE *)(v8 + 28) = v9[28];
      *(_DWORD *)(v8 + 24) = *((_DWORD *)v9 + 6);
      v25 = *(int *)(v10 + 32);
      v26 = v8 + v25;
      v27 = &v9[v25];
      v28 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_240388AE4(v8, type metadata accessor for ContextProtoBoundingBox);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    memcpy((void *)v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v9[4];
  *(_DWORD *)(v8 + 8) = *((_DWORD *)v9 + 2);
  *(_BYTE *)(v8 + 12) = v9[12];
  *(_DWORD *)(v8 + 16) = *((_DWORD *)v9 + 4);
  *(_BYTE *)(v8 + 20) = v9[20];
  *(_BYTE *)(v8 + 28) = v9[28];
  *(_DWORD *)(v8 + 24) = *((_DWORD *)v9 + 6);
  v15 = *(int *)(v10 + 32);
  v16 = v8 + v15;
  v17 = &v9[v15];
  v18 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoSurroundingText()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403CAB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoSurroundingText()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403CABC4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2403CAC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, (uint64_t)&unk_2408EA1D8, qword_256FFB250, (void (*)(uint64_t))type metadata accessor for ContextProtoBoundingBox);
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoConfidence(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    v5 = *(int *)(a3 + 24);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for ContextProtoConfidence(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoConfidence(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoConfidence()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403CAEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 253)
  {
    v4 = *(unsigned __int8 *)(a1 + 4);
    if (v4 >= 3)
      return v4 - 2;
    else
      return 0;
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoConfidence()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403CAF64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 253)
  {
    *(_BYTE *)(result + 4) = a2 + 2;
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2403CAFD4()
{
  return sub_2403FD2F0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContext(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(_DWORD *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(_QWORD *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  _QWORD *__dst;
  char *__dsta;
  unsigned int (*v87)(_QWORD *, uint64_t, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for ContextProtoStructuredContextKind(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v89 = v8;
      v90 = v7;
      v91 = v6;
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      v14 = a2[7];
      a1[6] = a2[6];
      a1[7] = v14;
      v15 = a2[9];
      a1[8] = a2[8];
      a1[9] = v15;
      *((_DWORD *)a1 + 20) = *((_DWORD *)a2 + 20);
      *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
      v92 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
      v16 = v92[15];
      __dst = (uint64_t *)((char *)a1 + v16);
      v17 = (uint64_t *)((char *)a2 + v16);
      v18 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
      v84 = *(_QWORD *)(v18 - 8);
      v87 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v84 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v87(v17, 1, v18))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        v20 = v17[1];
        *__dst = *v17;
        __dst[1] = v20;
        *((_WORD *)__dst + 8) = *((_WORD *)v17 + 8);
        v21 = *(int *)(v18 + 28);
        v22 = (char *)__dst + v21;
        v23 = (char *)v17 + v21;
        v24 = sub_2408E57A4();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v84 + 56))(__dst, 0, 1, v18);
      }
      v26 = v92;
      v27 = v92[16];
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = *((_QWORD *)v29 + 1);
      if (v30 >> 60 == 15)
      {
        *(_OWORD *)v28 = *(_OWORD *)v29;
      }
      else
      {
        v31 = *(_QWORD *)v29;
        sub_240360070(*(_QWORD *)v29, *((_QWORD *)v29 + 1));
        *(_QWORD *)v28 = v31;
        *((_QWORD *)v28 + 1) = v30;
      }
      v32 = v92[17];
      v33 = (uint64_t *)((char *)a1 + v32);
      v34 = (uint64_t *)((char *)a2 + v32);
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      v36 = v92[18];
      v37 = (uint64_t *)((char *)a1 + v36);
      v38 = (uint64_t *)((char *)a2 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      v40 = v92[19];
      v41 = (_DWORD *)((char *)a1 + v40);
      v42 = (_DWORD *)((char *)a2 + v40);
      v43 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v44 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v45(v42, 1, v43))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        *v41 = *v42;
        *((_BYTE *)v41 + 4) = *((_BYTE *)v42 + 4);
        v47 = *((_QWORD *)v42 + 2);
        *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
        *((_QWORD *)v41 + 2) = v47;
        v41[6] = v42[6];
        *((_BYTE *)v41 + 28) = *((_BYTE *)v42 + 28);
        v41[8] = v42[8];
        *((_BYTE *)v41 + 36) = *((_BYTE *)v42 + 36);
        v48 = *(int *)(v43 + 32);
        v49 = (char *)v41 + v48;
        v50 = (char *)v42 + v48;
        v51 = sub_2408E57A4();
        v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        v52(v49, v50, v51);
        v26 = v92;
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      v53 = v26[20];
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      *(_QWORD *)v54 = *(_QWORD *)v55;
      v54[8] = v55[8];
      v56 = v26[21];
      v57 = (uint64_t *)((char *)a1 + v56);
      v58 = (uint64_t *)((char *)a2 + v56);
      v59 = v58[1];
      *v57 = *v58;
      v57[1] = v59;
      *((_BYTE *)a1 + v26[22]) = *((_BYTE *)a2 + v26[22]);
      *((_BYTE *)a1 + v26[23]) = *((_BYTE *)a2 + v26[23]);
      v60 = v26[24];
      v61 = (uint64_t *)((char *)a1 + v60);
      v62 = (uint64_t *)((char *)a2 + v60);
      v63 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      v64 = *(_QWORD *)(v63 - 8);
      v65 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v64 + 48);
      swift_bridgeObjectRetain();
      if (v65(v62, 1, v63))
      {
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        v67 = v62[1];
        *v61 = *v62;
        v61[1] = v67;
        v68 = v62[3];
        v61[2] = v62[2];
        v61[3] = v68;
        v69 = v62[5];
        v61[4] = v62[4];
        v61[5] = v69;
        v70 = v62[7];
        v61[6] = v62[6];
        v61[7] = v70;
        v71 = v62[9];
        v61[8] = v62[8];
        v61[9] = v71;
        v61[10] = v62[10];
        v72 = *(int *)(v63 + 40);
        __dsta = (char *)v62 + v72;
        v88 = (char *)v61 + v72;
        v73 = sub_2408E57A4();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = v92;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v83(v88, __dsta, v73);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      }
      v74 = v26[25];
      v75 = (char *)a1 + v74;
      v76 = (char *)a2 + v74;
      v77 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16))(v75, v76, v77);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v89 + 56))(a1, 0, 1, v90);
      v6 = v91;
    }
    v78 = *(int *)(v6 + 20);
    v79 = (char *)a1 + v78;
    v80 = (char *)a2 + v78;
    v81 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v79, v80, v81);
  }
  return a1;
}

uint64_t destroy for ContextProtoStructuredContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v6 = a1 + v5[15];
    v7 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      v8 = v6 + *(int *)(v7 + 28);
      v9 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = (uint64_t *)(a1 + v5[16]);
    v11 = v10[1];
    if (v11 >> 60 != 15)
      sub_240363D58(*v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = a1 + v5[19];
    v13 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      v14 = v12 + *(int *)(v13 + 32);
      v15 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    }
    swift_bridgeObjectRelease();
    v16 = a1 + v5[24];
    v17 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v16 + *(int *)(v17 + 40);
      v19 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    }
    v20 = a1 + v5[25];
    v21 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
  }
  v22 = a1 + *(int *)(a2 + 20);
  v23 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
}

_QWORD *initializeWithCopy for ContextProtoStructuredContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD *v39;
  _DWORD *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(_DWORD *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(_QWORD *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  unsigned int (*v83)(_QWORD *, uint64_t, uint64_t);
  char *v84;
  _QWORD *__dst;
  char *__dsta;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int *v90;

  v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v87 = v7;
    v88 = v6;
    v89 = a3;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    v12 = a2[7];
    a1[6] = a2[6];
    a1[7] = v12;
    v13 = a2[9];
    a1[8] = a2[8];
    a1[9] = v13;
    *((_DWORD *)a1 + 20) = *((_DWORD *)a2 + 20);
    *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
    v90 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v14 = v90[15];
    __dst = (_QWORD *)((char *)a1 + v14);
    v15 = (_QWORD *)((char *)a2 + v14);
    v16 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v82 = *(_QWORD *)(v16 - 8);
    v83 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v82 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v83(v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = v15[1];
      *__dst = *v15;
      __dst[1] = v18;
      *((_WORD *)__dst + 8) = *((_WORD *)v15 + 8);
      v19 = *(int *)(v16 + 28);
      v20 = (char *)__dst + v19;
      v21 = (char *)v15 + v19;
      v22 = sub_2408E57A4();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(__dst, 0, 1, v16);
    }
    v24 = v90;
    v25 = v90[16];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = *((_QWORD *)v27 + 1);
    if (v28 >> 60 == 15)
    {
      *(_OWORD *)v26 = *(_OWORD *)v27;
    }
    else
    {
      v29 = *(_QWORD *)v27;
      sub_240360070(*(_QWORD *)v27, *((_QWORD *)v27 + 1));
      *(_QWORD *)v26 = v29;
      *((_QWORD *)v26 + 1) = v28;
    }
    v30 = v90[17];
    v31 = (_QWORD *)((char *)a1 + v30);
    v32 = (_QWORD *)((char *)a2 + v30);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = v90[18];
    v35 = (_QWORD *)((char *)a1 + v34);
    v36 = (_QWORD *)((char *)a2 + v34);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = v90[19];
    v39 = (_DWORD *)((char *)a1 + v38);
    v40 = (_DWORD *)((char *)a2 + v38);
    v41 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    v42 = *(_QWORD *)(v41 - 8);
    v43 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v42 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v43(v40, 1, v41))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      *v39 = *v40;
      *((_BYTE *)v39 + 4) = *((_BYTE *)v40 + 4);
      v45 = *((_QWORD *)v40 + 2);
      *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
      *((_QWORD *)v39 + 2) = v45;
      v39[6] = v40[6];
      *((_BYTE *)v39 + 28) = *((_BYTE *)v40 + 28);
      v39[8] = v40[8];
      *((_BYTE *)v39 + 36) = *((_BYTE *)v40 + 36);
      v46 = *(int *)(v41 + 32);
      v47 = (char *)v39 + v46;
      v48 = (char *)v40 + v46;
      v49 = sub_2408E57A4();
      v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      v50(v47, v48, v49);
      v24 = v90;
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v51 = v24[20];
    v52 = (char *)a1 + v51;
    v53 = (char *)a2 + v51;
    *(_QWORD *)v52 = *(_QWORD *)v53;
    v52[8] = v53[8];
    v54 = v24[21];
    v55 = (_QWORD *)((char *)a1 + v54);
    v56 = (_QWORD *)((char *)a2 + v54);
    v57 = v56[1];
    *v55 = *v56;
    v55[1] = v57;
    *((_BYTE *)a1 + v24[22]) = *((_BYTE *)a2 + v24[22]);
    *((_BYTE *)a1 + v24[23]) = *((_BYTE *)a2 + v24[23]);
    v58 = v24[24];
    v59 = (_QWORD *)((char *)a1 + v58);
    v60 = (_QWORD *)((char *)a2 + v58);
    v61 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    v62 = *(_QWORD *)(v61 - 8);
    v63 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v62 + 48);
    swift_bridgeObjectRetain();
    if (v63(v60, 1, v61))
    {
      v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      v65 = v60[1];
      *v59 = *v60;
      v59[1] = v65;
      v66 = v60[3];
      v59[2] = v60[2];
      v59[3] = v66;
      v67 = v60[5];
      v59[4] = v60[4];
      v59[5] = v67;
      v68 = v60[7];
      v59[6] = v60[6];
      v59[7] = v68;
      v69 = v60[9];
      v59[8] = v60[8];
      v59[9] = v69;
      v59[10] = v60[10];
      v70 = *(int *)(v61 + 40);
      v84 = (char *)v60 + v70;
      __dsta = (char *)v59 + v70;
      v71 = sub_2408E57A4();
      v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = v90;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v81(__dsta, v84, v71);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
    }
    v72 = v24[25];
    v73 = (char *)a1 + v72;
    v74 = (char *)a2 + v72;
    v75 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v87 + 56))(a1, 0, 1, v88);
    a3 = v89;
  }
  v76 = *(int *)(a3 + 20);
  v77 = (char *)a1 + v76;
  v78 = (char *)a2 + v76;
  v79 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v77, v78, v79);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoStructuredContext(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _DWORD *v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(int *, uint64_t, uint64_t);
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(_QWORD *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t (*v101)(char *, uint64_t, uint64_t);
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  void (*v110)(char *, char *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(_QWORD *, uint64_t, uint64_t);
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  int v143;
  int v144;
  int v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  void (*v154)(char *, char *, uint64_t);
  uint64_t v155;
  void (*v156)(char *, char *, uint64_t);
  unsigned int (*v157)(_QWORD *, uint64_t, uint64_t);
  char *v158;
  _QWORD *__dst;
  char *__dsta;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  int *v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;

  v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for ContextProtoStructuredContextKind);
      goto LABEL_7;
    }
    v168 = a3;
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[6] = a2[6];
    a1[7] = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    a1[8] = a2[8];
    a1[9] = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    *((_BYTE *)a1 + 81) = *((_BYTE *)a2 + 81);
    *((_BYTE *)a1 + 82) = *((_BYTE *)a2 + 82);
    *((_BYTE *)a1 + 83) = *((_BYTE *)a2 + 83);
    *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
    v16 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v17 = v16[15];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
    v23 = v22(v18, 1, v20);
    v24 = v22(v19, 1, v20);
    if (v23)
    {
      if (!v24)
      {
        *(_QWORD *)v18 = *(_QWORD *)v19;
        *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
        v18[16] = v19[16];
        v18[17] = v19[17];
        v25 = *(int *)(v20 + 28);
        v26 = &v18[v25];
        v165 = &v19[v25];
        v27 = sub_2408E57A4();
        v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v26, v165, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        goto LABEL_25;
      }
    }
    else
    {
      if (!v24)
      {
        *(_QWORD *)v18 = *(_QWORD *)v19;
        *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v18[16] = v19[16];
        v18[17] = v19[17];
        v139 = *(int *)(v20 + 28);
        v140 = &v18[v139];
        v141 = &v19[v139];
        v142 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 24))(v140, v141, v142);
LABEL_25:
        v82 = v16[16];
        v83 = (_QWORD *)((char *)a1 + v82);
        v84 = (_QWORD *)((char *)a2 + v82);
        v85 = *(_QWORD *)((char *)a2 + v82 + 8);
        if (*(_QWORD *)((char *)a1 + v82 + 8) >> 60 == 15)
        {
          if (v85 >> 60 != 15)
          {
            v86 = *v84;
            sub_240360070(*v84, v85);
            *v83 = v86;
            v83[1] = v85;
            goto LABEL_32;
          }
        }
        else
        {
          if (v85 >> 60 != 15)
          {
            v87 = *v84;
            sub_240360070(*v84, v85);
            v88 = *v83;
            v89 = v83[1];
            *v83 = v87;
            v83[1] = v85;
            sub_240363D58(v88, v89);
LABEL_32:
            v90 = v16[17];
            v91 = (_QWORD *)((char *)a1 + v90);
            v92 = (_QWORD *)((char *)a2 + v90);
            *v91 = *v92;
            v91[1] = v92[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v93 = v16[18];
            v94 = (_QWORD *)((char *)a1 + v93);
            v95 = (_QWORD *)((char *)a2 + v93);
            *v94 = *v95;
            v94[1] = v95[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v96 = v16[19];
            v97 = (char *)a1 + v96;
            v98 = (char *)a2 + v96;
            v99 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            v100 = *(_QWORD *)(v99 - 8);
            v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v100 + 48);
            v102 = v101(v97, 1, v99);
            v103 = v101(v98, 1, v99);
            if (v102)
            {
              if (!v103)
              {
                v104 = *(_DWORD *)v98;
                v97[4] = v98[4];
                *(_DWORD *)v97 = v104;
                *((_QWORD *)v97 + 1) = *((_QWORD *)v98 + 1);
                *((_QWORD *)v97 + 2) = *((_QWORD *)v98 + 2);
                v105 = *((_DWORD *)v98 + 6);
                v97[28] = v98[28];
                *((_DWORD *)v97 + 6) = v105;
                v106 = *((_DWORD *)v98 + 8);
                v97[36] = v98[36];
                *((_DWORD *)v97 + 8) = v106;
                v107 = *(int *)(v99 + 32);
                v108 = &v97[v107];
                v166 = &v98[v107];
                v109 = sub_2408E57A4();
                v110 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 16);
                swift_bridgeObjectRetain();
                v110(v108, v166, v109);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
                goto LABEL_38;
              }
            }
            else
            {
              if (!v103)
              {
                v143 = *(_DWORD *)v98;
                v97[4] = v98[4];
                *(_DWORD *)v97 = v143;
                *((_QWORD *)v97 + 1) = *((_QWORD *)v98 + 1);
                *((_QWORD *)v97 + 2) = *((_QWORD *)v98 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v144 = *((_DWORD *)v98 + 6);
                v97[28] = v98[28];
                *((_DWORD *)v97 + 6) = v144;
                v145 = *((_DWORD *)v98 + 8);
                v97[36] = v98[36];
                *((_DWORD *)v97 + 8) = v145;
                v146 = *(int *)(v99 + 32);
                v147 = &v97[v146];
                v148 = &v98[v146];
                v149 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 24))(v147, v148, v149);
LABEL_38:
                v112 = v16[20];
                v113 = (char *)a1 + v112;
                v114 = (char *)a2 + v112;
                v115 = *(_QWORD *)v114;
                v113[8] = v114[8];
                *(_QWORD *)v113 = v115;
                v116 = v16[21];
                v117 = (_QWORD *)((char *)a1 + v116);
                v118 = (_QWORD *)((char *)a2 + v116);
                *v117 = *v118;
                v117[1] = v118[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *((_BYTE *)a1 + v16[22]) = *((_BYTE *)a2 + v16[22]);
                *((_BYTE *)a1 + v16[23]) = *((_BYTE *)a2 + v16[23]);
                v119 = v16[24];
                v120 = (_QWORD *)((char *)a1 + v119);
                v121 = (_QWORD *)((char *)a2 + v119);
                v122 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                v123 = *(_QWORD *)(v122 - 8);
                v124 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v123 + 48);
                v125 = v124(v120, 1, v122);
                v126 = v124(v121, 1, v122);
                if (v125)
                {
                  if (!v126)
                  {
                    *v120 = *v121;
                    v120[1] = v121[1];
                    v120[2] = v121[2];
                    v120[3] = v121[3];
                    v120[4] = v121[4];
                    v120[5] = v121[5];
                    v120[6] = v121[6];
                    v120[7] = v121[7];
                    v120[8] = v121[8];
                    v120[9] = v121[9];
                    v120[10] = v121[10];
                    v127 = *(int *)(v122 + 40);
                    v163 = (char *)v121 + v127;
                    v167 = (char *)v120 + v127;
                    v128 = sub_2408E57A4();
                    v156 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v156(v167, v163, v128);
                    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
LABEL_44:
                    v130 = v16[25];
                    v131 = (char *)a1 + v130;
                    v132 = (char *)a2 + v130;
                    v133 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 24))(v131, v132, v133);
LABEL_45:
                    a3 = v168;
                    goto LABEL_46;
                  }
                }
                else
                {
                  if (!v126)
                  {
                    *v120 = *v121;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v120[1] = v121[1];
                    v120[2] = v121[2];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v120[3] = v121[3];
                    v120[4] = v121[4];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v120[5] = v121[5];
                    v120[6] = v121[6];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v120[7] = v121[7];
                    v120[8] = v121[8];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v120[9] = v121[9];
                    v120[10] = v121[10];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v150 = *(int *)(v122 + 40);
                    v151 = (char *)v120 + v150;
                    v152 = (char *)v121 + v150;
                    v153 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 24))(v151, v152, v153);
                    goto LABEL_44;
                  }
                  sub_240388AE4((uint64_t)v120, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                }
                v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
                memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
                goto LABEL_44;
              }
              sub_240388AE4((uint64_t)v97, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
            }
            v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
            memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
            goto LABEL_38;
          }
          sub_2403C6714((uint64_t)v83);
        }
        *(_OWORD *)v83 = *(_OWORD *)v84;
        goto LABEL_32;
      }
      sub_240388AE4((uint64_t)v18, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    }
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_25;
  }
  if (!v10)
  {
    v161 = v7;
    v162 = v6;
    v168 = a3;
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    *((_BYTE *)a1 + 81) = *((_BYTE *)a2 + 81);
    *((_BYTE *)a1 + 82) = *((_BYTE *)a2 + 82);
    *((_BYTE *)a1 + 83) = *((_BYTE *)a2 + 83);
    *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
    v164 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v11 = v164[15];
    __dst = (_QWORD *)((char *)a1 + v11);
    v12 = (_QWORD *)((char *)a2 + v11);
    v13 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v155 = *(_QWORD *)(v13 - 8);
    v157 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v155 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v157(v12, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *__dst = *v12;
      __dst[1] = v12[1];
      *((_BYTE *)__dst + 16) = *((_BYTE *)v12 + 16);
      *((_BYTE *)__dst + 17) = *((_BYTE *)v12 + 17);
      v29 = *(int *)(v13 + 28);
      v30 = (char *)__dst + v29;
      v31 = (char *)v12 + v29;
      v32 = sub_2408E57A4();
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
      swift_bridgeObjectRetain();
      v33(v30, v31, v32);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v155 + 56))(__dst, 0, 1, v13);
    }
    v34 = v164;
    v35 = v164[16];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = *((_QWORD *)v37 + 1);
    if (v38 >> 60 == 15)
    {
      *(_OWORD *)v36 = *(_OWORD *)v37;
    }
    else
    {
      v39 = *(_QWORD *)v37;
      sub_240360070(*(_QWORD *)v37, *((_QWORD *)v37 + 1));
      *(_QWORD *)v36 = v39;
      *((_QWORD *)v36 + 1) = v38;
    }
    v40 = v164[17];
    v41 = (_QWORD *)((char *)a1 + v40);
    v42 = (_QWORD *)((char *)a2 + v40);
    *v41 = *v42;
    v41[1] = v42[1];
    v43 = v164[18];
    v44 = (_QWORD *)((char *)a1 + v43);
    v45 = (_QWORD *)((char *)a2 + v43);
    *v44 = *v45;
    v44[1] = v45[1];
    v46 = v164[19];
    v47 = (_DWORD *)((char *)a1 + v46);
    v48 = (int *)((char *)a2 + v46);
    v49 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    v50 = *(_QWORD *)(v49 - 8);
    v51 = *(unsigned int (**)(int *, uint64_t, uint64_t))(v50 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v51(v48, 1, v49))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v53 = *v48;
      *((_BYTE *)v47 + 4) = *((_BYTE *)v48 + 4);
      *v47 = v53;
      *((_QWORD *)v47 + 1) = *((_QWORD *)v48 + 1);
      *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
      v54 = v48[6];
      *((_BYTE *)v47 + 28) = *((_BYTE *)v48 + 28);
      v47[6] = v54;
      v55 = v48[8];
      *((_BYTE *)v47 + 36) = *((_BYTE *)v48 + 36);
      v47[8] = v55;
      v56 = *(int *)(v49 + 32);
      v57 = (char *)v47 + v56;
      v58 = (char *)v48 + v56;
      v59 = sub_2408E57A4();
      v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
      swift_bridgeObjectRetain();
      v60(v57, v58, v59);
      v34 = v164;
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v61 = v34[20];
    v62 = (char *)a1 + v61;
    v63 = (char *)a2 + v61;
    v64 = *(_QWORD *)v63;
    v62[8] = v63[8];
    *(_QWORD *)v62 = v64;
    v65 = v34[21];
    v66 = (_QWORD *)((char *)a1 + v65);
    v67 = (_QWORD *)((char *)a2 + v65);
    *v66 = *v67;
    v66[1] = v67[1];
    *((_BYTE *)a1 + v34[22]) = *((_BYTE *)a2 + v34[22]);
    *((_BYTE *)a1 + v34[23]) = *((_BYTE *)a2 + v34[23]);
    v68 = v34[24];
    v69 = (_QWORD *)((char *)a1 + v68);
    v70 = (_QWORD *)((char *)a2 + v68);
    v71 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    v72 = *(_QWORD *)(v71 - 8);
    v73 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v72 + 48);
    swift_bridgeObjectRetain();
    if (v73(v70, 1, v71))
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      *v69 = *v70;
      v69[1] = v70[1];
      v69[2] = v70[2];
      v69[3] = v70[3];
      v69[4] = v70[4];
      v69[5] = v70[5];
      v69[6] = v70[6];
      v69[7] = v70[7];
      v69[8] = v70[8];
      v69[9] = v70[9];
      v69[10] = v70[10];
      v75 = *(int *)(v71 + 40);
      v158 = (char *)v70 + v75;
      __dsta = (char *)v69 + v75;
      v76 = sub_2408E57A4();
      v154 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34 = v164;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v154(__dsta, v158, v76);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    v77 = v34[25];
    v78 = (char *)a1 + v77;
    v79 = (char *)a2 + v77;
    v80 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v78, v79, v80);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v161 + 56))(a1, 0, 1, v162);
    goto LABEL_45;
  }
LABEL_7:
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
LABEL_46:
  v134 = *(int *)(a3 + 20);
  v135 = (char *)a1 + v134;
  v136 = (char *)a2 + v134;
  v137 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 24))(v135, v136, v137);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoStructuredContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  _WORD *v13;
  _WORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v54;

  v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v54 = a3;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    a1[4] = a2[4];
    *((_DWORD *)a1 + 20) = *((_DWORD *)a2 + 20);
    *((_BYTE *)a1 + 84) = *((_BYTE *)a2 + 84);
    v11 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v12 = v11[15];
    v13 = (_WORD *)((char *)a1 + v12);
    v14 = (_WORD *)((char *)a2 + v12);
    v15 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v13[8] = v14[8];
      v18 = *(int *)(v15 + 28);
      v19 = (char *)v13 + v18;
      v20 = (char *)v14 + v18;
      v21 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    *(_OWORD *)((char *)a1 + v11[16]) = *(_OWORD *)((char *)a2 + v11[16]);
    *(_OWORD *)((char *)a1 + v11[17]) = *(_OWORD *)((char *)a2 + v11[17]);
    *(_OWORD *)((char *)a1 + v11[18]) = *(_OWORD *)((char *)a2 + v11[18]);
    v22 = v11[19];
    v23 = (_DWORD *)((char *)a1 + v22);
    v24 = (_DWORD *)((char *)a2 + v22);
    v25 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      *v23 = *v24;
      *((_BYTE *)v23 + 4) = *((_BYTE *)v24 + 4);
      *(_OWORD *)(v23 + 2) = *(_OWORD *)(v24 + 2);
      v23[6] = v24[6];
      *((_BYTE *)v23 + 28) = *((_BYTE *)v24 + 28);
      v23[8] = v24[8];
      *((_BYTE *)v23 + 36) = *((_BYTE *)v24 + 36);
      v28 = *(int *)(v25 + 32);
      v29 = (char *)v23 + v28;
      v30 = (char *)v24 + v28;
      v31 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    v32 = v11[20];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    *(_QWORD *)v33 = *(_QWORD *)v34;
    v33[8] = v34[8];
    *(_OWORD *)((char *)a1 + v11[21]) = *(_OWORD *)((char *)a2 + v11[21]);
    *((_BYTE *)a1 + v11[22]) = *((_BYTE *)a2 + v11[22]);
    *((_BYTE *)a1 + v11[23]) = *((_BYTE *)a2 + v11[23]);
    v35 = v11[24];
    v36 = (_QWORD *)((char *)a1 + v35);
    v37 = (_QWORD *)((char *)a2 + v35);
    v38 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      *v36 = *v37;
      *(_OWORD *)(v36 + 1) = *(_OWORD *)(v37 + 1);
      *(_OWORD *)(v36 + 3) = *(_OWORD *)(v37 + 3);
      *(_OWORD *)(v36 + 5) = *(_OWORD *)(v37 + 5);
      *(_OWORD *)(v36 + 7) = *(_OWORD *)(v37 + 7);
      *(_OWORD *)(v36 + 9) = *(_OWORD *)(v37 + 9);
      v41 = *(int *)(v38 + 40);
      v42 = (char *)v36 + v41;
      v43 = (char *)v37 + v41;
      v44 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    a3 = v54;
    v45 = v11[25];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v49 = *(int *)(a3 + 20);
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  __int128 v11;
  __int128 v12;
  int *v13;
  uint64_t v14;
  _WORD *v15;
  _WORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _WORD *v28;
  _WORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_WORD *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _DWORD *v44;
  _DWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(char *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(char *, uint64_t, uint64_t);
  int v114;
  int v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;

  v6 = type metadata accessor for ContextProtoStructuredContextKind(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4(a1, type metadata accessor for ContextProtoStructuredContextKind);
      goto LABEL_7;
    }
    v21 = a3;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRelease();
    v22 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v22;
    swift_bridgeObjectRelease();
    v23 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v23;
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v24;
    swift_bridgeObjectRelease();
    v25 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v25;
    swift_bridgeObjectRelease();
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
    v26 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v27 = v26[15];
    v28 = (_WORD *)(a1 + v27);
    v29 = (_WORD *)(a2 + v27);
    v30 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(uint64_t (**)(_WORD *, uint64_t, uint64_t))(v31 + 48);
    v33 = v32(v28, 1, v30);
    v34 = v32(v29, 1, v30);
    if (v33)
    {
      if (!v34)
      {
        *(_OWORD *)v28 = *(_OWORD *)v29;
        v28[8] = v29[8];
        v35 = *(int *)(v30 + 28);
        v36 = (char *)v28 + v35;
        v37 = (char *)v29 + v35;
        v38 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
        (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v34)
      {
        v130 = *((_QWORD *)v29 + 1);
        *(_QWORD *)v28 = *(_QWORD *)v29;
        *((_QWORD *)v28 + 1) = v130;
        swift_bridgeObjectRelease();
        v28[8] = v29[8];
        v131 = *(int *)(v30 + 28);
        v132 = (char *)v28 + v131;
        v133 = (char *)v29 + v131;
        v134 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 40))(v132, v133, v134);
LABEL_22:
        v71 = v26[16];
        v72 = (uint64_t *)(a1 + v71);
        v73 = (uint64_t *)(a2 + v71);
        v74 = *(_QWORD *)(a1 + v71 + 8);
        if (v74 >> 60 != 15)
        {
          v75 = v73[1];
          if (v75 >> 60 != 15)
          {
            v76 = *v72;
            *v72 = *v73;
            v72[1] = v75;
            sub_240363D58(v76, v74);
LABEL_27:
            v77 = v26[17];
            v78 = (_QWORD *)(a1 + v77);
            v79 = (uint64_t *)(a2 + v77);
            v81 = *v79;
            v80 = v79[1];
            *v78 = v81;
            v78[1] = v80;
            swift_bridgeObjectRelease();
            v82 = v26[18];
            v83 = (_QWORD *)(a1 + v82);
            v84 = (uint64_t *)(a2 + v82);
            v86 = *v84;
            v85 = v84[1];
            *v83 = v86;
            v83[1] = v85;
            swift_bridgeObjectRelease();
            v87 = v26[19];
            v88 = (char *)(a1 + v87);
            v89 = (char *)(a2 + v87);
            v90 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
            v91 = *(_QWORD *)(v90 - 8);
            v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 48);
            v93 = v92(v88, 1, v90);
            v94 = v92(v89, 1, v90);
            if (v93)
            {
              if (!v94)
              {
                *(_DWORD *)v88 = *(_DWORD *)v89;
                v88[4] = v89[4];
                *(_OWORD *)(v88 + 8) = *(_OWORD *)(v89 + 8);
                *((_DWORD *)v88 + 6) = *((_DWORD *)v89 + 6);
                v88[28] = v89[28];
                *((_DWORD *)v88 + 8) = *((_DWORD *)v89 + 8);
                v88[36] = v89[36];
                v95 = *(int *)(v90 + 32);
                v96 = &v88[v95];
                v97 = &v89[v95];
                v98 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
                goto LABEL_33;
              }
            }
            else
            {
              if (!v94)
              {
                *(_DWORD *)v88 = *(_DWORD *)v89;
                v88[4] = v89[4];
                v135 = *((_QWORD *)v89 + 2);
                *((_QWORD *)v88 + 1) = *((_QWORD *)v89 + 1);
                *((_QWORD *)v88 + 2) = v135;
                swift_bridgeObjectRelease();
                *((_DWORD *)v88 + 6) = *((_DWORD *)v89 + 6);
                v88[28] = v89[28];
                *((_DWORD *)v88 + 8) = *((_DWORD *)v89 + 8);
                v88[36] = v89[36];
                v136 = *(int *)(v90 + 32);
                v137 = &v88[v136];
                v138 = &v89[v136];
                v139 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 40))(v137, v138, v139);
LABEL_33:
                v100 = v26[20];
                v101 = a1 + v100;
                v102 = a2 + v100;
                *(_QWORD *)v101 = *(_QWORD *)v102;
                *(_BYTE *)(v101 + 8) = *(_BYTE *)(v102 + 8);
                v103 = v26[21];
                v104 = (_QWORD *)(a1 + v103);
                v105 = (uint64_t *)(a2 + v103);
                v107 = *v105;
                v106 = v105[1];
                *v104 = v107;
                v104[1] = v106;
                swift_bridgeObjectRelease();
                *(_BYTE *)(a1 + v26[22]) = *(_BYTE *)(a2 + v26[22]);
                *(_BYTE *)(a1 + v26[23]) = *(_BYTE *)(a2 + v26[23]);
                v108 = v26[24];
                v109 = (char *)(a1 + v108);
                v110 = (char *)(a2 + v108);
                v111 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
                v112 = *(_QWORD *)(v111 - 8);
                v113 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v112 + 48);
                v114 = v113(v109, 1, v111);
                v115 = v113(v110, 1, v111);
                if (v114)
                {
                  if (!v115)
                  {
                    *(_QWORD *)v109 = *(_QWORD *)v110;
                    *(_OWORD *)(v109 + 8) = *(_OWORD *)(v110 + 8);
                    *(_OWORD *)(v109 + 24) = *(_OWORD *)(v110 + 24);
                    *(_OWORD *)(v109 + 40) = *(_OWORD *)(v110 + 40);
                    *(_OWORD *)(v109 + 56) = *(_OWORD *)(v110 + 56);
                    *(_OWORD *)(v109 + 72) = *(_OWORD *)(v110 + 72);
                    v116 = *(int *)(v111 + 40);
                    v117 = &v109[v116];
                    v118 = &v110[v116];
                    v119 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v117, v118, v119);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
LABEL_39:
                    v121 = v26[25];
                    v122 = a1 + v121;
                    v123 = a2 + v121;
                    v124 = sub_2408E57A4();
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 40))(v122, v123, v124);
                    a3 = v21;
                    goto LABEL_40;
                  }
                }
                else
                {
                  if (!v115)
                  {
                    *(_QWORD *)v109 = *(_QWORD *)v110;
                    swift_bridgeObjectRelease();
                    v140 = *((_QWORD *)v110 + 2);
                    *((_QWORD *)v109 + 1) = *((_QWORD *)v110 + 1);
                    *((_QWORD *)v109 + 2) = v140;
                    swift_bridgeObjectRelease();
                    v141 = *((_QWORD *)v110 + 4);
                    *((_QWORD *)v109 + 3) = *((_QWORD *)v110 + 3);
                    *((_QWORD *)v109 + 4) = v141;
                    swift_bridgeObjectRelease();
                    v142 = *((_QWORD *)v110 + 6);
                    *((_QWORD *)v109 + 5) = *((_QWORD *)v110 + 5);
                    *((_QWORD *)v109 + 6) = v142;
                    swift_bridgeObjectRelease();
                    v143 = *((_QWORD *)v110 + 8);
                    *((_QWORD *)v109 + 7) = *((_QWORD *)v110 + 7);
                    *((_QWORD *)v109 + 8) = v143;
                    swift_bridgeObjectRelease();
                    v144 = *((_QWORD *)v110 + 10);
                    *((_QWORD *)v109 + 9) = *((_QWORD *)v110 + 9);
                    *((_QWORD *)v109 + 10) = v144;
                    swift_bridgeObjectRelease();
                    v145 = *(int *)(v111 + 40);
                    v146 = &v109[v145];
                    v147 = &v110[v145];
                    v148 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 40))(v146, v147, v148);
                    goto LABEL_39;
                  }
                  sub_240388AE4((uint64_t)v109, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                }
                v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
                memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
                goto LABEL_39;
              }
              sub_240388AE4((uint64_t)v88, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
            }
            v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
            memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
            goto LABEL_33;
          }
          sub_2403C6714((uint64_t)v72);
        }
        *(_OWORD *)v72 = *(_OWORD *)v73;
        goto LABEL_27;
      }
      sub_240388AE4((uint64_t)v28, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    }
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_40;
  }
  v149 = a3;
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v12;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v13 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v14 = v13[15];
  v15 = (_WORD *)(a1 + v14);
  v16 = (_WORD *)(a2 + v14);
  v17 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
    v15[8] = v16[8];
    v39 = *(int *)(v17 + 28);
    v40 = (char *)v15 + v39;
    v41 = (char *)v16 + v39;
    v42 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
    (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(_OWORD *)(a1 + v13[16]) = *(_OWORD *)(a2 + v13[16]);
  *(_OWORD *)(a1 + v13[17]) = *(_OWORD *)(a2 + v13[17]);
  *(_OWORD *)(a1 + v13[18]) = *(_OWORD *)(a2 + v13[18]);
  v43 = v13[19];
  v44 = (_DWORD *)(a1 + v43);
  v45 = (_DWORD *)(a2 + v43);
  v46 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    *v44 = *v45;
    *((_BYTE *)v44 + 4) = *((_BYTE *)v45 + 4);
    *(_OWORD *)(v44 + 2) = *(_OWORD *)(v45 + 2);
    v44[6] = v45[6];
    *((_BYTE *)v44 + 28) = *((_BYTE *)v45 + 28);
    v44[8] = v45[8];
    *((_BYTE *)v44 + 36) = *((_BYTE *)v45 + 36);
    v49 = *(int *)(v46 + 32);
    v50 = (char *)v44 + v49;
    v51 = (char *)v45 + v49;
    v52 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  v53 = v13[20];
  v54 = a1 + v53;
  v55 = a2 + v53;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
  *(_OWORD *)(a1 + v13[21]) = *(_OWORD *)(a2 + v13[21]);
  *(_BYTE *)(a1 + v13[22]) = *(_BYTE *)(a2 + v13[22]);
  *(_BYTE *)(a1 + v13[23]) = *(_BYTE *)(a2 + v13[23]);
  v56 = v13[24];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (_QWORD *)(a2 + v56);
  v59 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v60 = *(_QWORD *)(v59 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
  {
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    *v57 = *v58;
    *(_OWORD *)(v57 + 1) = *(_OWORD *)(v58 + 1);
    *(_OWORD *)(v57 + 3) = *(_OWORD *)(v58 + 3);
    *(_OWORD *)(v57 + 5) = *(_OWORD *)(v58 + 5);
    *(_OWORD *)(v57 + 7) = *(_OWORD *)(v58 + 7);
    *(_OWORD *)(v57 + 9) = *(_OWORD *)(v58 + 9);
    v62 = *(int *)(v59 + 40);
    v63 = (char *)v57 + v62;
    v64 = (char *)v58 + v62;
    v65 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
  }
  v66 = v13[25];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  a3 = v149;
LABEL_40:
  v125 = *(int *)(a3 + 20);
  v126 = a1 + v125;
  v127 = a2 + v125;
  v128 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 40))(v126, v127, v128);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403CD7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFB028);
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403CD7FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFB028);
}

void sub_2403CD808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_256FFB4D0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextKind);
}

uint64_t initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextKind(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _DWORD *v37;
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(_DWORD *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(_QWORD *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  unsigned int (*v77)(_QWORD *, uint64_t, uint64_t);
  char *v78;
  _QWORD *__dst;
  char *__dsta;
  int *v81;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v6 = a1;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    v10 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(_BYTE *)(a1 + 84) = *((_BYTE *)a2 + 84);
    v11 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    v12 = *(int *)(v11 + 60);
    __dst = (_QWORD *)(v6 + v12);
    v81 = (int *)v11;
    v13 = (uint64_t *)((char *)a2 + v12);
    v14 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v76 = *(_QWORD *)(v14 - 8);
    v77 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v76 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v77(v13, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = v13[1];
      *__dst = *v13;
      __dst[1] = v16;
      *((_WORD *)__dst + 8) = *((_WORD *)v13 + 8);
      v17 = *(int *)(v14 + 28);
      v18 = (char *)__dst + v17;
      v19 = (char *)v13 + v17;
      v20 = sub_2408E57A4();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v14);
    }
    v22 = v81;
    v23 = v81[16];
    v24 = v6 + v23;
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    else
    {
      v27 = *v25;
      sub_240360070(*v25, v25[1]);
      *(_QWORD *)v24 = v27;
      *(_QWORD *)(v24 + 8) = v26;
    }
    v28 = v81[17];
    v29 = (_QWORD *)(v6 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = v81[18];
    v33 = (_QWORD *)(v6 + v32);
    v34 = (uint64_t *)((char *)a2 + v32);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = v81[19];
    v37 = (_DWORD *)(v6 + v36);
    v38 = (_DWORD *)((char *)a2 + v36);
    v39 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v40 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v41(v38, 1, v39))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      *v37 = *v38;
      *((_BYTE *)v37 + 4) = *((_BYTE *)v38 + 4);
      v43 = *((_QWORD *)v38 + 2);
      *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
      *((_QWORD *)v37 + 2) = v43;
      v37[6] = v38[6];
      *((_BYTE *)v37 + 28) = *((_BYTE *)v38 + 28);
      v37[8] = v38[8];
      *((_BYTE *)v37 + 36) = *((_BYTE *)v38 + 36);
      v44 = *(int *)(v39 + 32);
      v45 = (char *)v37 + v44;
      v46 = (char *)v38 + v44;
      v47 = sub_2408E57A4();
      v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
      swift_bridgeObjectRetain();
      v48(v45, v46, v47);
      v22 = v81;
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v49 = v22[20];
    v50 = v6 + v49;
    v51 = (uint64_t)a2 + v49;
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *(_BYTE *)(v50 + 8) = *(_BYTE *)(v51 + 8);
    v52 = v22[21];
    v53 = (_QWORD *)(v6 + v52);
    v54 = (uint64_t *)((char *)a2 + v52);
    v55 = v54[1];
    *v53 = *v54;
    v53[1] = v55;
    *(_BYTE *)(v6 + v22[22]) = *((_BYTE *)a2 + v22[22]);
    *(_BYTE *)(v6 + v22[23]) = *((_BYTE *)a2 + v22[23]);
    v56 = v22[24];
    v57 = (_QWORD *)(v6 + v56);
    v58 = (uint64_t *)((char *)a2 + v56);
    v59 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    v60 = *(_QWORD *)(v59 - 8);
    v61 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v60 + 48);
    swift_bridgeObjectRetain();
    if (v61(v58, 1, v59))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v63 = v58[1];
      *v57 = *v58;
      v57[1] = v63;
      v64 = v58[3];
      v57[2] = v58[2];
      v57[3] = v64;
      v65 = v58[5];
      v57[4] = v58[4];
      v57[5] = v65;
      v66 = v58[7];
      v57[6] = v58[6];
      v57[7] = v66;
      v67 = v58[9];
      v57[8] = v58[8];
      v57[9] = v67;
      v57[10] = v58[10];
      v68 = *(int *)(v59 + 40);
      v78 = (char *)v58 + v68;
      __dsta = (char *)v57 + v68;
      v69 = sub_2408E57A4();
      v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22 = v81;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v75(__dsta, v78, v69);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    v70 = v22[25];
    v71 = v6 + v70;
    v72 = (uint64_t)a2 + v70;
    v73 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
  }
  return v6;
}

uint64_t destroy for ContextProtoStructuredContextKind(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v3 = a1 + v2[15];
  v4 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = v3 + *(int *)(v4 + 28);
    v6 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (uint64_t *)(a1 + v2[16]);
  v8 = v7[1];
  if (v8 >> 60 != 15)
    sub_240363D58(*v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + v2[19];
  v10 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    v11 = v9 + *(int *)(v10 + 32);
    v12 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();
  v13 = a1 + v2[24];
  v14 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v13 + *(int *)(v14 + 40);
    v16 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  }
  v17 = a1 + v2[25];
  v18 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(_DWORD *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(_QWORD *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  unsigned int (*v75)(_QWORD *, uint64_t, uint64_t);
  char *v76;
  _QWORD *__dst;
  char *__dsta;
  int *v79;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v9 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v10 = *(int *)(v9 + 60);
  __dst = (_QWORD *)(a1 + v10);
  v79 = (int *)v9;
  v11 = (_QWORD *)(a2 + v10);
  v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v74 = *(_QWORD *)(v12 - 8);
  v75 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v74 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v75(v11, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v11[1];
    *__dst = *v11;
    __dst[1] = v14;
    *((_WORD *)__dst + 8) = *((_WORD *)v11 + 8);
    v15 = *(int *)(v12 + 28);
    v16 = (char *)__dst + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_2408E57A4();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v74 + 56))(__dst, 0, 1, v12);
  }
  v20 = v79;
  v21 = v79[16];
  v22 = a1 + v21;
  v23 = (uint64_t *)(a2 + v21);
  v24 = v23[1];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  else
  {
    v25 = *v23;
    sub_240360070(*v23, v23[1]);
    *(_QWORD *)v22 = v25;
    *(_QWORD *)(v22 + 8) = v24;
  }
  v26 = v79[17];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = v79[18];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = v79[19];
  v35 = (_DWORD *)(a1 + v34);
  v36 = (_DWORD *)(a2 + v34);
  v37 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v38 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39(v36, 1, v37))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    *v35 = *v36;
    *((_BYTE *)v35 + 4) = *((_BYTE *)v36 + 4);
    v41 = *((_QWORD *)v36 + 2);
    *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
    *((_QWORD *)v35 + 2) = v41;
    v35[6] = v36[6];
    *((_BYTE *)v35 + 28) = *((_BYTE *)v36 + 28);
    v35[8] = v36[8];
    *((_BYTE *)v35 + 36) = *((_BYTE *)v36 + 36);
    v42 = *(int *)(v37 + 32);
    v43 = (char *)v35 + v42;
    v44 = (char *)v36 + v42;
    v45 = sub_2408E57A4();
    v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
    swift_bridgeObjectRetain();
    v46(v43, v44, v45);
    v20 = v79;
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v47 = v20[20];
  v48 = a1 + v47;
  v49 = a2 + v47;
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
  v50 = v20[21];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  *(_BYTE *)(a1 + v20[22]) = *(_BYTE *)(a2 + v20[22]);
  *(_BYTE *)(a1 + v20[23]) = *(_BYTE *)(a2 + v20[23]);
  v54 = v20[24];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (_QWORD *)(a2 + v54);
  v57 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v58 + 48);
  swift_bridgeObjectRetain();
  if (v59(v56, 1, v57))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v61 = v56[1];
    *v55 = *v56;
    v55[1] = v61;
    v62 = v56[3];
    v55[2] = v56[2];
    v55[3] = v62;
    v63 = v56[5];
    v55[4] = v56[4];
    v55[5] = v63;
    v64 = v56[7];
    v55[6] = v56[6];
    v55[7] = v64;
    v65 = v56[9];
    v55[8] = v56[8];
    v55[9] = v65;
    v55[10] = v56[10];
    v66 = *(int *)(v57 + 40);
    v76 = (char *)v56 + v66;
    __dsta = (char *)v55 + v66;
    v67 = sub_2408E57A4();
    v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v73(__dsta, v76, v67);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v68 = v20[25];
  v69 = a1 + v68;
  v70 = a2 + v68;
  v71 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(_QWORD *, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_BYTE *)(a1 + 83) = *(_BYTE *)(a2 + 83);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v4 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v5 = v4[15];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (v11)
  {
    if (!v12)
    {
      *(_QWORD *)v6 = *(_QWORD *)v7;
      *(_QWORD *)(v6 + 8) = *(_QWORD *)(v7 + 8);
      *(_BYTE *)(v6 + 16) = *(_BYTE *)(v7 + 16);
      *(_BYTE *)(v6 + 17) = *(_BYTE *)(v7 + 17);
      v13 = *(int *)(v8 + 28);
      v14 = v6 + v13;
      v88 = v7 + v13;
      v15 = sub_2408E57A4();
      v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v14, v88, v15);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_240388AE4(v6, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy((void *)v6, (const void *)v7, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v6 = *(_QWORD *)v7;
  *(_QWORD *)(v6 + 8) = *(_QWORD *)(v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v6 + 16) = *(_BYTE *)(v7 + 16);
  *(_BYTE *)(v6 + 17) = *(_BYTE *)(v7 + 17);
  v71 = *(int *)(v8 + 28);
  v72 = v6 + v71;
  v73 = v7 + v71;
  v74 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 24))(v72, v73, v74);
LABEL_7:
  v18 = v4[16];
  v19 = (uint64_t *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v21 = *(_QWORD *)(a2 + v18 + 8);
  if (*(_QWORD *)(a1 + v18 + 8) >> 60 == 15)
  {
    if (v21 >> 60 != 15)
    {
      v22 = *v20;
      sub_240360070(v22, v21);
      *v19 = v22;
      v19[1] = v21;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v21 >> 60 == 15)
  {
    sub_2403C6714((uint64_t)v19);
LABEL_12:
    *(_OWORD *)v19 = *(_OWORD *)v20;
    goto LABEL_14;
  }
  v23 = *v20;
  sub_240360070(v23, v21);
  v24 = *v19;
  v25 = v19[1];
  *v19 = v23;
  v19[1] = v21;
  sub_240363D58(v24, v25);
LABEL_14:
  v26 = v4[17];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = v4[18];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = v4[19];
  v33 = a1 + v32;
  v34 = (int *)(a2 + v32);
  v35 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37((uint64_t)v34, 1, v35);
  if (v38)
  {
    if (!v39)
    {
      v40 = *v34;
      *(_BYTE *)(v33 + 4) = *((_BYTE *)v34 + 4);
      *(_DWORD *)v33 = v40;
      *(_QWORD *)(v33 + 8) = *((_QWORD *)v34 + 1);
      *(_QWORD *)(v33 + 16) = *((_QWORD *)v34 + 2);
      v41 = v34[6];
      *(_BYTE *)(v33 + 28) = *((_BYTE *)v34 + 28);
      *(_DWORD *)(v33 + 24) = v41;
      v42 = v34[8];
      *(_BYTE *)(v33 + 36) = *((_BYTE *)v34 + 36);
      *(_DWORD *)(v33 + 32) = v42;
      v43 = *(int *)(v35 + 32);
      v44 = v33 + v43;
      v89 = (uint64_t)v34 + v43;
      v45 = sub_2408E57A4();
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
      swift_bridgeObjectRetain();
      v46(v44, v89, v45);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v39)
  {
    sub_240388AE4(v33, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
LABEL_19:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
    memcpy((void *)v33, v34, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_20;
  }
  v75 = *v34;
  *(_BYTE *)(v33 + 4) = *((_BYTE *)v34 + 4);
  *(_DWORD *)v33 = v75;
  *(_QWORD *)(v33 + 8) = *((_QWORD *)v34 + 1);
  *(_QWORD *)(v33 + 16) = *((_QWORD *)v34 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v76 = v34[6];
  *(_BYTE *)(v33 + 28) = *((_BYTE *)v34 + 28);
  *(_DWORD *)(v33 + 24) = v76;
  v77 = v34[8];
  *(_BYTE *)(v33 + 36) = *((_BYTE *)v34 + 36);
  *(_DWORD *)(v33 + 32) = v77;
  v78 = *(int *)(v35 + 32);
  v79 = v33 + v78;
  v80 = (uint64_t)v34 + v78;
  v81 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 24))(v79, v80, v81);
LABEL_20:
  v48 = v4[20];
  v49 = a1 + v48;
  v50 = (uint64_t *)(a2 + v48);
  v51 = *v50;
  *(_BYTE *)(v49 + 8) = *((_BYTE *)v50 + 8);
  *(_QWORD *)v49 = v51;
  v52 = v4[21];
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  *v53 = *v54;
  v53[1] = v54[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v4[22]) = *(_BYTE *)(a2 + v4[22]);
  *(_BYTE *)(a1 + v4[23]) = *(_BYTE *)(a2 + v4[23]);
  v55 = v4[24];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  v58 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v59 + 48);
  v61 = v60(v56, 1, v58);
  v62 = v60(v57, 1, v58);
  if (!v61)
  {
    if (!v62)
    {
      *v56 = *v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v56[1] = v57[1];
      v56[2] = v57[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v56[3] = v57[3];
      v56[4] = v57[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v56[5] = v57[5];
      v56[6] = v57[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v56[7] = v57[7];
      v56[8] = v57[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v56[9] = v57[9];
      v56[10] = v57[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v82 = *(int *)(v58 + 40);
      v83 = (char *)v56 + v82;
      v84 = (char *)v57 + v82;
      v85 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 24))(v83, v84, v85);
      goto LABEL_26;
    }
    sub_240388AE4((uint64_t)v56, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
    goto LABEL_25;
  }
  if (v62)
  {
LABEL_25:
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_26;
  }
  *v56 = *v57;
  v56[1] = v57[1];
  v56[2] = v57[2];
  v56[3] = v57[3];
  v56[4] = v57[4];
  v56[5] = v57[5];
  v56[6] = v57[6];
  v56[7] = v57[7];
  v56[8] = v57[8];
  v56[9] = v57[9];
  v56[10] = v57[10];
  v63 = *(int *)(v58 + 40);
  v87 = (char *)v57 + v63;
  v90 = (char *)v56 + v63;
  v64 = sub_2408E57A4();
  v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v86(v90, v87, v64);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
LABEL_26:
  v66 = v4[25];
  v67 = a1 + v66;
  v68 = a2 + v66;
  v69 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 24))(v67, v68, v69);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  int *v6;
  uint64_t v7;
  _WORD *v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v6 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v7 = v6[15];
  v8 = (_WORD *)(a1 + v7);
  v9 = (_WORD *)(a2 + v7);
  v10 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v8[8] = v9[8];
    v13 = *(int *)(v10 + 28);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
  *(_OWORD *)(a1 + v6[17]) = *(_OWORD *)(a2 + v6[17]);
  *(_OWORD *)(a1 + v6[18]) = *(_OWORD *)(a2 + v6[18]);
  v17 = v6[19];
  v18 = (_DWORD *)(a1 + v17);
  v19 = (_DWORD *)(a2 + v17);
  v20 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    *((_BYTE *)v18 + 4) = *((_BYTE *)v19 + 4);
    *(_OWORD *)(v18 + 2) = *(_OWORD *)(v19 + 2);
    v18[6] = v19[6];
    *((_BYTE *)v18 + 28) = *((_BYTE *)v19 + 28);
    v18[8] = v19[8];
    *((_BYTE *)v18 + 36) = *((_BYTE *)v19 + 36);
    v23 = *(int *)(v20 + 32);
    v24 = (char *)v18 + v23;
    v25 = (char *)v19 + v23;
    v26 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v27 = v6[20];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  *(_OWORD *)(a1 + v6[21]) = *(_OWORD *)(a2 + v6[21]);
  *(_BYTE *)(a1 + v6[22]) = *(_BYTE *)(a2 + v6[22]);
  *(_BYTE *)(a1 + v6[23]) = *(_BYTE *)(a2 + v6[23]);
  v30 = v6[24];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  v33 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    *v31 = *v32;
    *(_OWORD *)(v31 + 1) = *(_OWORD *)(v32 + 1);
    *(_OWORD *)(v31 + 3) = *(_OWORD *)(v32 + 3);
    *(_OWORD *)(v31 + 5) = *(_OWORD *)(v32 + 5);
    *(_OWORD *)(v31 + 7) = *(_OWORD *)(v32 + 7);
    *(_OWORD *)(v31 + 9) = *(_OWORD *)(v32 + 9);
    v36 = *(int *)(v33 + 40);
    v37 = (char *)v31 + v36;
    v38 = (char *)v32 + v36;
    v39 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v40 = v6[25];
  v41 = a1 + v40;
  v42 = a2 + v40;
  v43 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextKind(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t);
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(_QWORD *, uint64_t, uint64_t);
  int v65;
  int v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v8 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v9 = v8[15];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *(_WORD *)(v10 + 16) = *(_WORD *)(v11 + 16);
      v17 = *(int *)(v12 + 28);
      v18 = v10 + v17;
      v19 = v11 + v17;
      v20 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_240388AE4(v10, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy((void *)v10, (const void *)v11, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v77 = *(_QWORD *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_QWORD *)(v10 + 8) = v77;
  swift_bridgeObjectRelease();
  *(_WORD *)(v10 + 16) = *(_WORD *)(v11 + 16);
  v78 = *(int *)(v12 + 28);
  v79 = v10 + v78;
  v80 = v11 + v78;
  v81 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 40))(v79, v80, v81);
LABEL_7:
  v22 = v8[16];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_QWORD *)(a1 + v22 + 8);
  if (v25 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    goto LABEL_12;
  }
  v26 = *(_QWORD *)(v24 + 8);
  if (v26 >> 60 == 15)
  {
    sub_2403C6714(v23);
    goto LABEL_10;
  }
  v27 = *(_QWORD *)v23;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(v23 + 8) = v26;
  sub_240363D58(v27, v25);
LABEL_12:
  v28 = v8[17];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (uint64_t *)(a2 + v28);
  v32 = *v30;
  v31 = v30[1];
  *v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  v33 = v8[18];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (uint64_t *)(a2 + v33);
  v37 = *v35;
  v36 = v35[1];
  *v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  v38 = v8[19];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
  v44 = v43(v39, 1, v41);
  v45 = v43(v40, 1, v41);
  if (v44)
  {
    if (!v45)
    {
      *(_DWORD *)v39 = *(_DWORD *)v40;
      *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
      *(_OWORD *)(v39 + 8) = *(_OWORD *)(v40 + 8);
      *(_DWORD *)(v39 + 24) = *(_DWORD *)(v40 + 24);
      *(_BYTE *)(v39 + 28) = *(_BYTE *)(v40 + 28);
      *(_DWORD *)(v39 + 32) = *(_DWORD *)(v40 + 32);
      *(_BYTE *)(v39 + 36) = *(_BYTE *)(v40 + 36);
      v46 = *(int *)(v41 + 32);
      v47 = v39 + v46;
      v48 = v40 + v46;
      v49 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v45)
  {
    sub_240388AE4(v39, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
LABEL_17:
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
    memcpy((void *)v39, (const void *)v40, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_18;
  }
  *(_DWORD *)v39 = *(_DWORD *)v40;
  *(_BYTE *)(v39 + 4) = *(_BYTE *)(v40 + 4);
  v82 = *(_QWORD *)(v40 + 16);
  *(_QWORD *)(v39 + 8) = *(_QWORD *)(v40 + 8);
  *(_QWORD *)(v39 + 16) = v82;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v39 + 24) = *(_DWORD *)(v40 + 24);
  *(_BYTE *)(v39 + 28) = *(_BYTE *)(v40 + 28);
  *(_DWORD *)(v39 + 32) = *(_DWORD *)(v40 + 32);
  *(_BYTE *)(v39 + 36) = *(_BYTE *)(v40 + 36);
  v83 = *(int *)(v41 + 32);
  v84 = v39 + v83;
  v85 = v40 + v83;
  v86 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 40))(v84, v85, v86);
LABEL_18:
  v51 = v8[20];
  v52 = a1 + v51;
  v53 = a2 + v51;
  *(_QWORD *)v52 = *(_QWORD *)v53;
  *(_BYTE *)(v52 + 8) = *(_BYTE *)(v53 + 8);
  v54 = v8[21];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (uint64_t *)(a2 + v54);
  v58 = *v56;
  v57 = v56[1];
  *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v8[22]) = *(_BYTE *)(a2 + v8[22]);
  *(_BYTE *)(a1 + v8[23]) = *(_BYTE *)(a2 + v8[23]);
  v59 = v8[24];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (_QWORD *)(a2 + v59);
  v62 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v63 + 48);
  v65 = v64(v60, 1, v62);
  v66 = v64(v61, 1, v62);
  if (!v65)
  {
    if (!v66)
    {
      *v60 = *v61;
      swift_bridgeObjectRelease();
      v87 = v61[2];
      v60[1] = v61[1];
      v60[2] = v87;
      swift_bridgeObjectRelease();
      v88 = v61[4];
      v60[3] = v61[3];
      v60[4] = v88;
      swift_bridgeObjectRelease();
      v89 = v61[6];
      v60[5] = v61[5];
      v60[6] = v89;
      swift_bridgeObjectRelease();
      v90 = v61[8];
      v60[7] = v61[7];
      v60[8] = v90;
      swift_bridgeObjectRelease();
      v91 = v61[10];
      v60[9] = v61[9];
      v60[10] = v91;
      swift_bridgeObjectRelease();
      v92 = *(int *)(v62 + 40);
      v93 = (char *)v60 + v92;
      v94 = (char *)v61 + v92;
      v95 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 40))(v93, v94, v95);
      goto LABEL_24;
    }
    sub_240388AE4((uint64_t)v60, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
    goto LABEL_23;
  }
  if (v66)
  {
LABEL_23:
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_24;
  }
  *v60 = *v61;
  *(_OWORD *)(v60 + 1) = *(_OWORD *)(v61 + 1);
  *(_OWORD *)(v60 + 3) = *(_OWORD *)(v61 + 3);
  *(_OWORD *)(v60 + 5) = *(_OWORD *)(v61 + 5);
  *(_OWORD *)(v60 + 7) = *(_OWORD *)(v61 + 7);
  *(_OWORD *)(v60 + 9) = *(_OWORD *)(v61 + 9);
  v67 = *(int *)(v62 + 40);
  v68 = (char *)v60 + v67;
  v69 = (char *)v61 + v67;
  v70 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_24:
  v72 = v8[25];
  v73 = a1 + v72;
  v74 = a2 + v72;
  v75 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 40))(v73, v74, v75);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextKind()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextKind()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403CF4CC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(_DWORD *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(_QWORD *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  unsigned int (*v77)(_QWORD *, uint64_t, uint64_t);
  char *v78;
  _QWORD *__dst;
  char *__dsta;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v6 = a1;
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v9 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v9;
    v10 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(_BYTE *)(a1 + 84) = *((_BYTE *)a2 + 84);
    v11 = a3[15];
    __dst = (_QWORD *)(a1 + v11);
    v12 = (uint64_t *)((char *)a2 + v11);
    v13 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v76 = *(_QWORD *)(v13 - 8);
    v77 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v76 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v77(v12, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = v12[1];
      *__dst = *v12;
      __dst[1] = v15;
      *((_WORD *)__dst + 8) = *((_WORD *)v12 + 8);
      v16 = *(int *)(v13 + 28);
      v17 = (char *)__dst + v16;
      v18 = (char *)v12 + v16;
      v19 = sub_2408E57A4();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v76 + 56))(__dst, 0, 1, v13);
    }
    v21 = a3;
    v22 = a3[16];
    v23 = v6 + v22;
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = v24[1];
    if (v25 >> 60 == 15)
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
    }
    else
    {
      v26 = *v24;
      sub_240360070(*v24, v24[1]);
      *(_QWORD *)v23 = v26;
      *(_QWORD *)(v23 + 8) = v25;
    }
    v27 = a3[17];
    v28 = a3[18];
    v29 = (_QWORD *)(v6 + v27);
    v30 = (uint64_t *)((char *)a2 + v27);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = (_QWORD *)(v6 + v28);
    v33 = (uint64_t *)((char *)a2 + v28);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = a3[19];
    v36 = (_DWORD *)(v6 + v35);
    v37 = (_DWORD *)((char *)a2 + v35);
    v38 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40(v37, 1, v38))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      *v36 = *v37;
      *((_BYTE *)v36 + 4) = *((_BYTE *)v37 + 4);
      v42 = *((_QWORD *)v37 + 2);
      *((_QWORD *)v36 + 1) = *((_QWORD *)v37 + 1);
      *((_QWORD *)v36 + 2) = v42;
      v36[6] = v37[6];
      *((_BYTE *)v36 + 28) = *((_BYTE *)v37 + 28);
      v36[8] = v37[8];
      *((_BYTE *)v36 + 36) = *((_BYTE *)v37 + 36);
      v43 = *(int *)(v38 + 32);
      v44 = (char *)v36 + v43;
      v45 = (char *)v37 + v43;
      v46 = sub_2408E57A4();
      v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
      swift_bridgeObjectRetain();
      v47(v44, v45, v46);
      v21 = a3;
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v48 = v21[20];
    v49 = v21[21];
    v50 = v6 + v48;
    v51 = (uint64_t)a2 + v48;
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *(_BYTE *)(v50 + 8) = *(_BYTE *)(v51 + 8);
    v52 = (_QWORD *)(v6 + v49);
    v53 = (uint64_t *)((char *)a2 + v49);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    v55 = v21[23];
    *(_BYTE *)(v6 + v21[22]) = *((_BYTE *)a2 + v21[22]);
    *(_BYTE *)(v6 + v55) = *((_BYTE *)a2 + v55);
    v56 = v21[24];
    v57 = (_QWORD *)(v6 + v56);
    v58 = (uint64_t *)((char *)a2 + v56);
    v59 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    v60 = *(_QWORD *)(v59 - 8);
    v61 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v60 + 48);
    swift_bridgeObjectRetain();
    if (v61(v58, 1, v59))
    {
      v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v63 = v58[1];
      *v57 = *v58;
      v57[1] = v63;
      v64 = v58[3];
      v57[2] = v58[2];
      v57[3] = v64;
      v65 = v58[5];
      v57[4] = v58[4];
      v57[5] = v65;
      v66 = v58[7];
      v57[6] = v58[6];
      v57[7] = v66;
      v67 = v58[9];
      v57[8] = v58[8];
      v57[9] = v67;
      v57[10] = v58[10];
      v68 = *(int *)(v59 + 40);
      v78 = (char *)v58 + v68;
      __dsta = (char *)v57 + v68;
      v69 = sub_2408E57A4();
      v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v75(__dsta, v78, v69);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    v70 = v21[25];
    v71 = v6 + v70;
    v72 = (uint64_t)a2 + v70;
    v73 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
  }
  return v6;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[15];
  v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 28);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = (uint64_t *)(a1 + a2[16]);
  v9 = v8[1];
  if (v9 >> 60 != 15)
    sub_240363D58(*v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = a1 + a2[19];
  v11 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    swift_bridgeObjectRelease();
    v12 = v10 + *(int *)(v11 + 32);
    v13 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  }
  swift_bridgeObjectRelease();
  v14 = a1 + a2[24];
  v15 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v14 + *(int *)(v15 + 40);
    v17 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
  }
  v18 = a1 + a2[25];
  v19 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _DWORD *v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(_DWORD *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(_QWORD *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  unsigned int (*v76)(_QWORD *, uint64_t, uint64_t);
  char *v77;
  _QWORD *__dst;
  char *__dsta;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v10 = a3[15];
  __dst = (_QWORD *)(a1 + v10);
  v11 = (_QWORD *)(a2 + v10);
  v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v75 = *(_QWORD *)(v12 - 8);
  v76 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v75 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v76(v11, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v11[1];
    *__dst = *v11;
    __dst[1] = v14;
    *((_WORD *)__dst + 8) = *((_WORD *)v11 + 8);
    v15 = *(int *)(v12 + 28);
    v16 = (char *)__dst + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_2408E57A4();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v75 + 56))(__dst, 0, 1, v12);
  }
  v20 = a3;
  v21 = a3[16];
  v22 = a1 + v21;
  v23 = (uint64_t *)(a2 + v21);
  v24 = v23[1];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  else
  {
    v25 = *v23;
    sub_240360070(*v23, v23[1]);
    *(_QWORD *)v22 = v25;
    *(_QWORD *)(v22 + 8) = v24;
  }
  v26 = a3[17];
  v27 = a3[18];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = (_QWORD *)(a1 + v27);
  v32 = (_QWORD *)(a2 + v27);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = a3[19];
  v35 = (_DWORD *)(a1 + v34);
  v36 = (_DWORD *)(a2 + v34);
  v37 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v38 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39(v36, 1, v37))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    *v35 = *v36;
    *((_BYTE *)v35 + 4) = *((_BYTE *)v36 + 4);
    v41 = *((_QWORD *)v36 + 2);
    *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
    *((_QWORD *)v35 + 2) = v41;
    v35[6] = v36[6];
    *((_BYTE *)v35 + 28) = *((_BYTE *)v36 + 28);
    v35[8] = v36[8];
    *((_BYTE *)v35 + 36) = *((_BYTE *)v36 + 36);
    v42 = *(int *)(v37 + 32);
    v43 = (char *)v35 + v42;
    v44 = (char *)v36 + v42;
    v45 = sub_2408E57A4();
    v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
    swift_bridgeObjectRetain();
    v46(v43, v44, v45);
    v20 = a3;
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v47 = v20[20];
  v48 = v20[21];
  v49 = a1 + v47;
  v50 = a2 + v47;
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = *(_BYTE *)(v50 + 8);
  v51 = (_QWORD *)(a1 + v48);
  v52 = (_QWORD *)(a2 + v48);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  v54 = v20[23];
  *(_BYTE *)(a1 + v20[22]) = *(_BYTE *)(a2 + v20[22]);
  *(_BYTE *)(a1 + v54) = *(_BYTE *)(a2 + v54);
  v55 = v20[24];
  v56 = (_QWORD *)(a1 + v55);
  v57 = (_QWORD *)(a2 + v55);
  v58 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v59 + 48);
  swift_bridgeObjectRetain();
  if (v60(v57, 1, v58))
  {
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
  }
  else
  {
    v62 = v57[1];
    *v56 = *v57;
    v56[1] = v62;
    v63 = v57[3];
    v56[2] = v57[2];
    v56[3] = v63;
    v64 = v57[5];
    v56[4] = v57[4];
    v56[5] = v64;
    v65 = v57[7];
    v56[6] = v57[6];
    v56[7] = v65;
    v66 = v57[9];
    v56[8] = v57[8];
    v56[9] = v66;
    v56[10] = v57[10];
    v67 = *(int *)(v58 + 40);
    v77 = (char *)v57 + v67;
    __dsta = (char *)v56 + v67;
    v68 = sub_2408E57A4();
    v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v74(__dsta, v77, v68);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  v69 = v20[25];
  v70 = a1 + v69;
  v71 = a2 + v69;
  v72 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(_QWORD *, uint64_t, uint64_t);
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_BYTE *)(a1 + 83) = *(_BYTE *)(a2 + 83);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v6 = a3[15];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
      *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
      *(_BYTE *)(v7 + 17) = *(_BYTE *)(v8 + 17);
      v14 = *(int *)(v9 + 28);
      v15 = v7 + v14;
      v89 = v8 + v14;
      v16 = sub_2408E57A4();
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v15, v89, v16);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_240388AE4(v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v7 + 16) = *(_BYTE *)(v8 + 16);
  *(_BYTE *)(v7 + 17) = *(_BYTE *)(v8 + 17);
  v72 = *(int *)(v9 + 28);
  v73 = v7 + v72;
  v74 = v8 + v72;
  v75 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 24))(v73, v74, v75);
LABEL_7:
  v19 = a3[16];
  v20 = (uint64_t *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *(_QWORD *)(a2 + v19 + 8);
  if (*(_QWORD *)(a1 + v19 + 8) >> 60 == 15)
  {
    if (v22 >> 60 != 15)
    {
      v23 = *v21;
      sub_240360070(v23, v22);
      *v20 = v23;
      v20[1] = v22;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (v22 >> 60 == 15)
  {
    sub_2403C6714((uint64_t)v20);
LABEL_12:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    goto LABEL_14;
  }
  v24 = *v21;
  sub_240360070(v24, v22);
  v25 = *v20;
  v26 = v20[1];
  *v20 = v24;
  v20[1] = v22;
  sub_240363D58(v25, v26);
LABEL_14:
  v27 = a3[17];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = a3[18];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (_QWORD *)(a2 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = a3[19];
  v34 = a1 + v33;
  v35 = (int *)(a2 + v33);
  v36 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38((uint64_t)v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      v41 = *v35;
      *(_BYTE *)(v34 + 4) = *((_BYTE *)v35 + 4);
      *(_DWORD *)v34 = v41;
      *(_QWORD *)(v34 + 8) = *((_QWORD *)v35 + 1);
      *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
      v42 = v35[6];
      *(_BYTE *)(v34 + 28) = *((_BYTE *)v35 + 28);
      *(_DWORD *)(v34 + 24) = v42;
      v43 = v35[8];
      *(_BYTE *)(v34 + 36) = *((_BYTE *)v35 + 36);
      *(_DWORD *)(v34 + 32) = v43;
      v44 = *(int *)(v36 + 32);
      v45 = v34 + v44;
      v90 = (uint64_t)v35 + v44;
      v46 = sub_2408E57A4();
      v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
      swift_bridgeObjectRetain();
      v47(v45, v90, v46);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v40)
  {
    sub_240388AE4(v34, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
LABEL_19:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
    memcpy((void *)v34, v35, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_20;
  }
  v76 = *v35;
  *(_BYTE *)(v34 + 4) = *((_BYTE *)v35 + 4);
  *(_DWORD *)v34 = v76;
  *(_QWORD *)(v34 + 8) = *((_QWORD *)v35 + 1);
  *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v77 = v35[6];
  *(_BYTE *)(v34 + 28) = *((_BYTE *)v35 + 28);
  *(_DWORD *)(v34 + 24) = v77;
  v78 = v35[8];
  *(_BYTE *)(v34 + 36) = *((_BYTE *)v35 + 36);
  *(_DWORD *)(v34 + 32) = v78;
  v79 = *(int *)(v36 + 32);
  v80 = v34 + v79;
  v81 = (uint64_t)v35 + v79;
  v82 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 24))(v80, v81, v82);
LABEL_20:
  v49 = a3[20];
  v50 = a1 + v49;
  v51 = (uint64_t *)(a2 + v49);
  v52 = *v51;
  *(_BYTE *)(v50 + 8) = *((_BYTE *)v51 + 8);
  *(_QWORD *)v50 = v52;
  v53 = a3[21];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (_QWORD *)(a2 + v53);
  *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  v56 = a3[24];
  v57 = (_QWORD *)(a1 + v56);
  v58 = (_QWORD *)(a2 + v56);
  v59 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v60 + 48);
  v62 = v61(v57, 1, v59);
  v63 = v61(v58, 1, v59);
  if (!v62)
  {
    if (!v63)
    {
      *v57 = *v58;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v57[1] = v58[1];
      v57[2] = v58[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v57[3] = v58[3];
      v57[4] = v58[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v57[5] = v58[5];
      v57[6] = v58[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v57[7] = v58[7];
      v57[8] = v58[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v57[9] = v58[9];
      v57[10] = v58[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v83 = *(int *)(v59 + 40);
      v84 = (char *)v57 + v83;
      v85 = (char *)v58 + v83;
      v86 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v84, v85, v86);
      goto LABEL_26;
    }
    sub_240388AE4((uint64_t)v57, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
    goto LABEL_25;
  }
  if (v63)
  {
LABEL_25:
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_26;
  }
  *v57 = *v58;
  v57[1] = v58[1];
  v57[2] = v58[2];
  v57[3] = v58[3];
  v57[4] = v58[4];
  v57[5] = v58[5];
  v57[6] = v58[6];
  v57[7] = v58[7];
  v57[8] = v58[8];
  v57[9] = v58[9];
  v57[10] = v58[10];
  v64 = *(int *)(v59 + 40);
  v88 = (char *)v58 + v64;
  v91 = (char *)v57 + v64;
  v65 = sub_2408E57A4();
  v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v87(v91, v88, v65);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
LABEL_26:
  v67 = a3[25];
  v68 = a1 + v67;
  v69 = a2 + v67;
  v70 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 24))(v68, v69, v70);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _WORD *v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v8 = a3[15];
  v9 = (_WORD *)(a1 + v8);
  v10 = (_WORD *)(a2 + v8);
  v11 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v9 = *(_OWORD *)v10;
    v9[8] = v10[8];
    v14 = *(int *)(v11 + 28);
    v15 = (char *)v9 + v14;
    v16 = (char *)v10 + v14;
    v17 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v18 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  v19 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  v20 = (_DWORD *)(a1 + v19);
  v21 = (_DWORD *)(a2 + v19);
  v22 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *v20 = *v21;
    *((_BYTE *)v20 + 4) = *((_BYTE *)v21 + 4);
    *(_OWORD *)(v20 + 2) = *(_OWORD *)(v21 + 2);
    v20[6] = v21[6];
    *((_BYTE *)v20 + 28) = *((_BYTE *)v21 + 28);
    v20[8] = v21[8];
    *((_BYTE *)v20 + 36) = *((_BYTE *)v21 + 36);
    v25 = *(int *)(v22 + 32);
    v26 = (char *)v20 + v25;
    v27 = (char *)v21 + v25;
    v28 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v29 = a3[20];
  v30 = a3[21];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  *(_OWORD *)(a1 + v30) = *(_OWORD *)(a2 + v30);
  v33 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v34 = a3[24];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  v37 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    *v35 = *v36;
    *(_OWORD *)(v35 + 1) = *(_OWORD *)(v36 + 1);
    *(_OWORD *)(v35 + 3) = *(_OWORD *)(v36 + 3);
    *(_OWORD *)(v35 + 5) = *(_OWORD *)(v36 + 5);
    *(_OWORD *)(v35 + 7) = *(_OWORD *)(v36 + 7);
    *(_OWORD *)(v35 + 9) = *(_OWORD *)(v36 + 9);
    v40 = *(int *)(v37 + 40);
    v41 = (char *)v35 + v40;
    v42 = (char *)v36 + v40;
    v43 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v44 = a3[25];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextSiriRequestContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(_QWORD *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  v10 = a3[15];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      *(_OWORD *)v11 = *(_OWORD *)v12;
      *(_WORD *)(v11 + 16) = *(_WORD *)(v12 + 16);
      v18 = *(int *)(v13 + 28);
      v19 = v11 + v18;
      v20 = v12 + v18;
      v21 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_240388AE4(v11, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    memcpy((void *)v11, (const void *)v12, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v79 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = v79;
  swift_bridgeObjectRelease();
  *(_WORD *)(v11 + 16) = *(_WORD *)(v12 + 16);
  v80 = *(int *)(v13 + 28);
  v81 = v11 + v80;
  v82 = v12 + v80;
  v83 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 40))(v81, v82, v83);
LABEL_7:
  v23 = a3[16];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_QWORD *)(a1 + v23 + 8);
  if (v26 >> 60 == 15)
  {
LABEL_10:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    goto LABEL_12;
  }
  v27 = *(_QWORD *)(v25 + 8);
  if (v27 >> 60 == 15)
  {
    sub_2403C6714(v24);
    goto LABEL_10;
  }
  v28 = *(_QWORD *)v24;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_QWORD *)(v24 + 8) = v27;
  sub_240363D58(v28, v26);
LABEL_12:
  v29 = a3[17];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[18];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = a3[19];
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v40, 1, v42);
  v46 = v44(v41, 1, v42);
  if (v45)
  {
    if (!v46)
    {
      *(_DWORD *)v40 = *(_DWORD *)v41;
      *(_BYTE *)(v40 + 4) = *(_BYTE *)(v41 + 4);
      *(_OWORD *)(v40 + 8) = *(_OWORD *)(v41 + 8);
      *(_DWORD *)(v40 + 24) = *(_DWORD *)(v41 + 24);
      *(_BYTE *)(v40 + 28) = *(_BYTE *)(v41 + 28);
      *(_DWORD *)(v40 + 32) = *(_DWORD *)(v41 + 32);
      *(_BYTE *)(v40 + 36) = *(_BYTE *)(v41 + 36);
      v47 = *(int *)(v42 + 32);
      v48 = v40 + v47;
      v49 = v41 + v47;
      v50 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v46)
  {
    sub_240388AE4(v40, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
LABEL_17:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
    memcpy((void *)v40, (const void *)v41, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_18;
  }
  *(_DWORD *)v40 = *(_DWORD *)v41;
  *(_BYTE *)(v40 + 4) = *(_BYTE *)(v41 + 4);
  v84 = *(_QWORD *)(v41 + 16);
  *(_QWORD *)(v40 + 8) = *(_QWORD *)(v41 + 8);
  *(_QWORD *)(v40 + 16) = v84;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v40 + 24) = *(_DWORD *)(v41 + 24);
  *(_BYTE *)(v40 + 28) = *(_BYTE *)(v41 + 28);
  *(_DWORD *)(v40 + 32) = *(_DWORD *)(v41 + 32);
  *(_BYTE *)(v40 + 36) = *(_BYTE *)(v41 + 36);
  v85 = *(int *)(v42 + 32);
  v86 = v40 + v85;
  v87 = v41 + v85;
  v88 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 40))(v86, v87, v88);
LABEL_18:
  v52 = a3[20];
  v53 = a3[21];
  v54 = a1 + v52;
  v55 = a2 + v52;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
  v56 = (_QWORD *)(a1 + v53);
  v57 = (uint64_t *)(a2 + v53);
  v59 = *v57;
  v58 = v57[1];
  *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  v60 = a3[23];
  *(_BYTE *)(a1 + a3[22]) = *(_BYTE *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v60) = *(_BYTE *)(a2 + v60);
  v61 = a3[24];
  v62 = (_QWORD *)(a1 + v61);
  v63 = (_QWORD *)(a2 + v61);
  v64 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (!v68)
    {
      *v62 = *v63;
      swift_bridgeObjectRelease();
      v89 = v63[2];
      v62[1] = v63[1];
      v62[2] = v89;
      swift_bridgeObjectRelease();
      v90 = v63[4];
      v62[3] = v63[3];
      v62[4] = v90;
      swift_bridgeObjectRelease();
      v91 = v63[6];
      v62[5] = v63[5];
      v62[6] = v91;
      swift_bridgeObjectRelease();
      v92 = v63[8];
      v62[7] = v63[7];
      v62[8] = v92;
      swift_bridgeObjectRelease();
      v93 = v63[10];
      v62[9] = v63[9];
      v62[10] = v93;
      swift_bridgeObjectRelease();
      v94 = *(int *)(v64 + 40);
      v95 = (char *)v62 + v94;
      v96 = (char *)v63 + v94;
      v97 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 40))(v95, v96, v97);
      goto LABEL_24;
    }
    sub_240388AE4((uint64_t)v62, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
    goto LABEL_23;
  }
  if (v68)
  {
LABEL_23:
    v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_24;
  }
  *v62 = *v63;
  *(_OWORD *)(v62 + 1) = *(_OWORD *)(v63 + 1);
  *(_OWORD *)(v62 + 3) = *(_OWORD *)(v63 + 3);
  *(_OWORD *)(v62 + 5) = *(_OWORD *)(v63 + 5);
  *(_OWORD *)(v62 + 7) = *(_OWORD *)(v63 + 7);
  *(_OWORD *)(v62 + 9) = *(_OWORD *)(v63 + 9);
  v69 = *(int *)(v64 + 40);
  v70 = (char *)v62 + v69;
  v71 = (char *)v63 + v69;
  v72 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v70, v71, v72);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
LABEL_24:
  v74 = a3[25];
  v75 = a1 + v74;
  v76 = a2 + v74;
  v77 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 40))(v75, v76, v77);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_11Tm(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[15];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[19];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[24];
        }
        else
        {
          v10 = sub_2408E57A4();
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[25];
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_12Tm(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[15];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[19];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[24];
        }
        else
        {
          v10 = sub_2408E57A4();
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[25];
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_2403D12EC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2403C8BE4(319, &qword_256FFB5E8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, &qword_256FFB5F0, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
    if (v1 <= 0x3F)
    {
      sub_2403C8BE4(319, qword_256FFB5F8, (void (*)(uint64_t))type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
      if (v2 <= 0x3F)
      {
        sub_2408E57A4();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    v5 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v5;
    *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
    *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    v6 = *(int *)(a3 + 32);
    v7 = (uint64_t)a2 + v6;
    v8 = a1 + v6;
    *(_BYTE *)(a1 + 36) = *((_BYTE *)a2 + 36);
    v9 = sub_2408E57A4();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v8, v7, v9);
  }
  return v3;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = a2 + v5;
  v7 = a1 + v5;
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v8 = sub_2408E57A4();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v7, v6, v8);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, int *a2, uint64_t a3)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a2[6];
  *(_BYTE *)(a1 + 28) = *((_BYTE *)a2 + 28);
  *(_DWORD *)(a1 + 24) = v7;
  v8 = a2[8];
  *(_BYTE *)(a1 + 36) = *((_BYTE *)a2 + 36);
  *(_DWORD *)(a1 + 32) = v8;
  v9 = *(int *)(a3 + 32);
  v10 = a1 + v9;
  v11 = (uint64_t)a2 + v9;
  v12 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v4 = *(int *)(a3 + 32);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextSiriRequestContextContentRestriction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  v7 = *(int *)(a3 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextContentRestriction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D17C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextContentRestriction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D1858(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 16) = a2;
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2403D18CC()
{
  return sub_2403D18D8();
}

uint64_t sub_2403D18D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v6 = *(int *)(a3 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_2408E57A4();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ToolKitProtoTypedValue.PrimitiveValue.Measurement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_2408E57A4();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoStructuredContextSiriRequestContextUser(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextUser()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D1C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextUser()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D1CB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2403D1D2C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    v8 = a2[6];
    a1[5] = a2[5];
    a1[6] = v8;
    v9 = a2[8];
    a1[7] = a2[7];
    a1[8] = v9;
    v10 = a2[10];
    v11 = *(int *)(a3 + 40);
    v16 = (char *)a2 + v11;
    v12 = (char *)a1 + v11;
    a1[9] = a2[9];
    a1[10] = v10;
    v13 = sub_2408E57A4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v16, v13);
  }
  return v5;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ContextProtoStructuredContextSiriRequestContextMeCard(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = *(int *)(a3 + 40);
  v14 = (char *)a1 + v9;
  v10 = (char *)a2 + v9;
  a1[10] = a2[10];
  v11 = sub_2408E57A4();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v14, v10, v11);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoStructuredContextSiriRequestContextMeCard(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoStructuredContextSiriRequestContextMeCard(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v4 = *(int *)(a3 + 40);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ContextProtoStructuredContextSiriRequestContextMeCard(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[6];
  a1[5] = a2[5];
  a1[6] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[10];
  a1[9] = a2[9];
  a1[10] = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 40);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextMeCard()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D2264(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 40)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextMeCard()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2403D22EC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E57A4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 40)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2403D2360()
{
  return sub_2403D2928();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoStructuredContextSiriRequestContextAddress(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v17;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    v10 = a2[11];
    v11 = *(int *)(a3 + 40);
    v17 = (char *)a2 + v11;
    v12 = (char *)a1 + v11;
    a1[10] = a2[10];
    a1[11] = v10;
    v13 = sub_2408E57A4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v12, v17, v13);
  }
  return v3;
}

uint64_t destroy for ContextProtoStructuredContextSiriRequestContextAddress(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ContextProtoStructuredContextSiriRequestContextAddress(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  char *v15;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[11];
  v10 = *(int *)(a3 + 40);
  v15 = (char *)a2 + v10;
  v11 = (char *)a1 + v10;
  a1[10] = a2[10];
  a1[11] = v9;
  v12 = sub_2408E57A4();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v11, v15, v12);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoStructuredContextSiriRequestContextAddress(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 40);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoStructuredContextSiriRequestContextAddress(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 40);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

_QWORD *assignWithTake for ContextProtoStructuredContextSiriRequestContextAddress(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 40);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextAddress()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D2814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoStructuredContextSiriRequestContextAddress()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D28A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2403D291C()
{
  return sub_2403D2928();
}

uint64_t sub_2403D2928()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  unsigned int (*v25)(_QWORD *, uint64_t, uint64_t);
  char *v26;
  char *v27;
  _QWORD *__dst;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v6 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
    v7 = a2[18];
    *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
    v8 = *(int *)(a3 + 96);
    __dst = (_QWORD *)(a1 + v8);
    v9 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 144) = v7;
    DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
    v24 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
    v25 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = DecorationToolRetrievalResponse;
    if (v25(v9, 1, DecorationToolRetrievalResponse))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
      memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = v9[1];
      *__dst = *v9;
      __dst[1] = v13;
      v14 = v9[3];
      __dst[2] = v9[2];
      __dst[3] = v14;
      *((_DWORD *)__dst + 8) = *((_DWORD *)v9 + 8);
      v15 = v9[6];
      __dst[5] = v9[5];
      __dst[6] = v15;
      v16 = *(int *)(v11 + 36);
      v26 = (char *)v9 + v16;
      v27 = (char *)__dst + v16;
      v17 = sub_2408E57A4();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v27, v26, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v11);
    }
    v19 = *(int *)(a3 + 100);
    v20 = v6 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v6;
}

uint64_t destroy for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 96);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationToolRetrievalResponse - 8)
                                                                  + 48))(v4, 1, DecorationToolRetrievalResponse))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(DecorationToolRetrievalResponse + 36);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 100);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  unsigned int (*v23)(_QWORD *, uint64_t, uint64_t);
  char *v24;
  char *v25;
  _QWORD *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v5 = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v6 = *(int *)(a3 + 96);
  __dst = (_QWORD *)(a1 + v6);
  v7 = (_QWORD *)(a2 + v6);
  *(_QWORD *)(a1 + 144) = v5;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v22 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  v23 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = DecorationToolRetrievalResponse;
  if (v23(v7, 1, DecorationToolRetrievalResponse))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    memcpy(__dst, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v7[1];
    *__dst = *v7;
    __dst[1] = v11;
    v12 = v7[3];
    __dst[2] = v7[2];
    __dst[3] = v12;
    *((_DWORD *)__dst + 8) = *((_DWORD *)v7 + 8);
    v13 = v7[6];
    __dst[5] = v7[5];
    __dst[6] = v13;
    v14 = *(int *)(v9 + 36);
    v24 = (char *)v7 + v14;
    v25 = (char *)__dst + v14;
    v15 = sub_2408E57A4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v25, v24, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v9);
  }
  v17 = *(int *)(a3 + 100);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

uint64_t assignWithCopy for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v6 = *(int *)(a3 + 96);
  v7 = a1 + v6;
  v8 = a2 + v6;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v10 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, DecorationToolRetrievalResponse);
  v13 = v11(v8, 1, DecorationToolRetrievalResponse);
  if (!v12)
  {
    if (!v13)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
      *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
      *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(int *)(DecorationToolRetrievalResponse + 36);
      v24 = v7 + v23;
      v25 = v8 + v23;
      v26 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_240388AE4(v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v8 + 8);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(v8 + 24);
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
  v14 = *(int *)(DecorationToolRetrievalResponse + 36);
  v27 = v8 + v14;
  v28 = v7 + v14;
  v15 = sub_2408E57A4();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v28, v27, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  v18 = *(int *)(a3 + 100);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

uint64_t initializeWithTake for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v6 = *(int *)(a3 + 96);
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v10 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, DecorationToolRetrievalResponse))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    *((_DWORD *)v7 + 8) = *((_DWORD *)v8 + 8);
    *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
    v13 = *(int *)(DecorationToolRetrievalResponse + 36);
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, DecorationToolRetrievalResponse);
  }
  v17 = *(int *)(a3 + 100);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for ContextProtoQueryDecorationOutput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v6 = *(int *)(a3 + 96);
  v7 = a1 + v6;
  v8 = a2 + v6;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v10 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, DecorationToolRetrievalResponse);
  v13 = v11(v8, 1, DecorationToolRetrievalResponse);
  if (!v12)
  {
    if (!v13)
    {
      v25 = *(_QWORD *)(v8 + 8);
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = v25;
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(v8 + 24);
      *(_QWORD *)(v7 + 16) = *(_QWORD *)(v8 + 16);
      *(_QWORD *)(v7 + 24) = v26;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
      *(_QWORD *)(v7 + 40) = *(_QWORD *)(v8 + 40);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 48) = *(_QWORD *)(v8 + 48);
      swift_bridgeObjectRelease();
      v27 = *(int *)(DecorationToolRetrievalResponse + 36);
      v28 = v7 + v27;
      v29 = v8 + v27;
      v30 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
      goto LABEL_7;
    }
    sub_240388AE4(v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v14 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v14;
  *(_DWORD *)(v7 + 32) = *(_DWORD *)(v8 + 32);
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
  v15 = *(int *)(DecorationToolRetrievalResponse + 36);
  v16 = v7 + v15;
  v17 = v8 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  v20 = *(int *)(a3 + 100);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoQueryDecorationOutput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D37E4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 96);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 100);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoQueryDecorationOutput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2403D3894(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 96);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 100);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_2403D3934()
{
  unint64_t v0;
  unint64_t v1;

  sub_2403C8BE4(319, qword_256FFB968, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  if (v0 <= 0x3F)
  {
    sub_2408E57A4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v6 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    *(_QWORD *)(a1 + 88) = a2[11];
    v7 = *(int *)(a3 + 52);
    v8 = (uint64_t)a2 + v7;
    v9 = a1 + v7;
    *(_WORD *)(a1 + 96) = *((_WORD *)a2 + 48);
    v10 = sub_2408E57A4();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v9, v8, v10);
  }
  return v3;
}

uint64_t destroy for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v6 = *(int *)(a3 + 52);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v9 = sub_2408E57A4();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v8, v7, v9);
  return a1;
}

uint64_t assignWithCopy for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v8;
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  v9 = *(int *)(a3 + 52);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v4 = *(int *)(a3 + 52);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoQueryDecorationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v8 = *(_WORD *)(a2 + 96);
  v9 = *(int *)(a3 + 52);
  v10 = a2 + v9;
  v11 = a1 + v9;
  *(_WORD *)(a1 + 96) = v8;
  v12 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v11, v10, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoQueryDecorationInput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D3EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 52), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoQueryDecorationInput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D3F40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 52), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2403D3FB4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoDynamicEnumerationEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = *v10;
      if ((~*v10 & 0xF000000000000007) != 0)
        swift_retain();
      *v9 = v16;
      v17 = *(int *)(v11 + 20);
      v18 = (char *)v9 + v17;
      v19 = (char *)v10 + v17;
      v20 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v21 = a3[6];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = type metadata accessor for ToolKitProtoTypedValue(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v27 = *v23;
      if ((~*v23 & 0xF000000000000007) != 0)
        swift_retain();
      *v22 = v27;
      v28 = *(int *)(v24 + 20);
      v29 = (char *)v22 + v28;
      v30 = (char *)v23 + v28;
      v31 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v32 = a3[7];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    v35 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  }
  return v4;
}

uint64_t destroy for ContextProtoDynamicEnumerationEntity(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + a2[5]);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)v4 + *(int *)(v5 + 20);
    v7 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = (_QWORD *)(a1 + a2[6]);
  v9 = type metadata accessor for ToolKitProtoTypedValue(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    if ((~*v8 & 0xF000000000000007) != 0)
      swift_release();
    v10 = (char *)v8 + *(int *)(v9 + 20);
    v11 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[7];
  v13 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *initializeWithCopy for ContextProtoDynamicEnumerationEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = *v9;
    if ((~*v9 & 0xF000000000000007) != 0)
      swift_retain();
    *v8 = v14;
    v15 = *(int *)(v10 + 20);
    v16 = (char *)v8 + v15;
    v17 = (char *)v9 + v15;
    v18 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = a3[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = type metadata accessor for ToolKitProtoTypedValue(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = *v21;
    if ((~*v21 & 0xF000000000000007) != 0)
      swift_retain();
    *v20 = v25;
    v26 = *(int *)(v22 + 20);
    v27 = (char *)v20 + v26;
    v28 = (char *)v21 + v26;
    v29 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v30 = a3[7];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoDynamicEnumerationEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
      goto LABEL_8;
    }
    v39 = *v8;
    v40 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v40 != 0xF000000000000007)
      {
        *v7 = v39;
        swift_retain();
        swift_release();
        goto LABEL_31;
      }
      sub_2403D4924((uint64_t)v7);
      v39 = *v8;
    }
    else if (v40 != 0xF000000000000007)
    {
      *v7 = v39;
      swift_retain();
LABEL_31:
      v43 = *(int *)(v9 + 20);
      v44 = (char *)v7 + v43;
      v45 = (char *)v8 + v43;
      v46 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
      goto LABEL_9;
    }
    *v7 = v39;
    goto LABEL_31;
  }
  if (v13)
  {
LABEL_8:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_9;
  }
  v14 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v14;
  v15 = *(int *)(v9 + 20);
  v16 = (char *)v7 + v15;
  v17 = (char *)v8 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_9:
  v20 = a3[6];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = type metadata accessor for ToolKitProtoTypedValue(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (v27)
    {
      sub_240388AE4((uint64_t)v21, type metadata accessor for ToolKitProtoTypedValue);
      goto LABEL_16;
    }
    v41 = *v22;
    v42 = *v22 & 0xF000000000000007;
    if ((~*v21 & 0xF000000000000007) != 0)
    {
      if (v42 != 0xF000000000000007)
      {
        *v21 = v41;
        swift_retain();
        swift_release();
        goto LABEL_33;
      }
      sub_2403C66E0((uint64_t)v21);
      v41 = *v22;
    }
    else if (v42 != 0xF000000000000007)
    {
      *v21 = v41;
      swift_retain();
LABEL_33:
      v47 = *(int *)(v23 + 20);
      v48 = (char *)v21 + v47;
      v49 = (char *)v22 + v47;
      v50 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
      goto LABEL_17;
    }
    *v21 = v41;
    goto LABEL_33;
  }
  if (v27)
  {
LABEL_16:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_17;
  }
  v28 = *v22;
  if ((~*v22 & 0xF000000000000007) != 0)
    swift_retain();
  *v21 = v28;
  v29 = *(int *)(v23 + 20);
  v30 = (char *)v21 + v29;
  v31 = (char *)v22 + v29;
  v32 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_17:
  v34 = a3[7];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  return a1;
}

uint64_t sub_2403D4924(uint64_t a1)
{
  destroy for ToolKitProtoRestrictionContextKind();
  return a1;
}

_OWORD *initializeWithTake for ContextProtoDynamicEnumerationEntity(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = a3[6];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = type metadata accessor for ToolKitProtoTypedValue(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v17 = *v18;
    v22 = *(int *)(v19 + 20);
    v23 = (char *)v17 + v22;
    v24 = (char *)v18 + v22;
    v25 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v26 = a3[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

_QWORD *assignWithTake for ContextProtoDynamicEnumerationEntity(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *v8 = *v9;
      v15 = *(int *)(v10 + 20);
      v16 = (char *)v8 + v15;
      v17 = (char *)v9 + v15;
      v18 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_240388AE4((uint64_t)v8, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v38 = *v9;
  if ((~*v8 & 0xF000000000000007) != 0)
  {
    if ((~v38 & 0xF000000000000007) != 0)
    {
      *v8 = v38;
      swift_release();
    }
    else
    {
      sub_2403D4924((uint64_t)v8);
      *v8 = *v9;
    }
  }
  else
  {
    *v8 = v38;
  }
  v40 = *(int *)(v10 + 20);
  v41 = (char *)v8 + v40;
  v42 = (char *)v9 + v40;
  v43 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
LABEL_7:
  v20 = a3[6];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = type metadata accessor for ToolKitProtoTypedValue(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      *v21 = *v22;
      v28 = *(int *)(v23 + 20);
      v29 = (char *)v21 + v28;
      v30 = (char *)v22 + v28;
      v31 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_13;
    }
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  if (v27)
  {
    sub_240388AE4((uint64_t)v21, type metadata accessor for ToolKitProtoTypedValue);
    goto LABEL_12;
  }
  v39 = *v22;
  if ((~*v21 & 0xF000000000000007) != 0)
  {
    if ((~v39 & 0xF000000000000007) != 0)
    {
      *v21 = v39;
      swift_release();
    }
    else
    {
      sub_2403C66E0((uint64_t)v21);
      *v21 = *v22;
    }
  }
  else
  {
    *v21 = v39;
  }
  v44 = *(int *)(v23 + 20);
  v45 = (char *)v21 + v44;
  v46 = (char *)v22 + v44;
  v47 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 40))(v45, v46, v47);
LABEL_13:
  v33 = a3[7];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoDynamicEnumerationEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D4E2C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = sub_2408E57A4();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoDynamicEnumerationEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403D4F04(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = sub_2408E57A4();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2403D4FCC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2403C8BE4(319, qword_256FFBB00, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, &qword_256FFB188, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue);
    if (v1 <= 0x3F)
    {
      sub_2408E57A4();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoRetrievedTool(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v7 = *(int *)(a3 + 28);
    v8 = (char *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v9, 1, v15))
      {
        v17 = (char *)&loc_2403D51EC + 4 * byte_2408E953C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v18 = *(int *)(v10 + 20);
      v19 = &v8[v18];
      v20 = &v9[v18];
      v21 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v22 = *(int *)(a3 + 32);
    v23 = (char *)v4 + v22;
    v24 = (uint64_t)a2 + v22;
    v25 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return v4;
}

uint64_t destroy for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v7 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
          v8 = (_QWORD *)(v4 + v7[17]);
          v9 = type metadata accessor for ToolKitProtoTypeInstance(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
          {
            if ((~*v8 & 0xF000000000000007) != 0)
              swift_release();
            v10 = (char *)v8 + *(int *)(v9 + 20);
            v11 = sub_2408E57A4();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
          }
          swift_bridgeObjectRelease();
          v12 = v4 + v7[19];
          v13 = type metadata accessor for ToolKitProtoAppDefinition(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v14 = v12 + *(int *)(v13 + 40);
            v15 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
            {
              if (*(_QWORD *)(v14 + 8) != 1)
                swift_bridgeObjectRelease();
              v16 = v14 + *(int *)(v15 + 20);
              v17 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
            }
            v18 = v12 + *(int *)(v13 + 44);
            v19 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
          }
          swift_bridgeObjectRelease();
          v20 = v4 + v7[21];
          v21 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v22 = v20 + *(int *)(v21 + 24);
            v23 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
          }
          v24 = v4 + v7[22];
          v25 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
          {
            v26 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v24, 1, v26))
            {
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              swift_bridgeObjectRelease();
              if (EnumCaseMultiPayload == 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v28 = v24
                    + *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                             + 32);
                v29 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
              }
            }
            v30 = v24 + *(int *)(v25 + 20);
            v31 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
          }
          v32 = v4 + v7[23];
          v33 = type metadata accessor for ToolKitProtoContainerDefinition(0);
          v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48);
          if (!v34(v32, 1, v33))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v35 = v32 + *(int *)(v33 + 40);
            v36 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v35, 1, v36))
            {
              if (*(_QWORD *)(v35 + 8) != 1)
                swift_bridgeObjectRelease();
              v37 = v35 + *(int *)(v36 + 20);
              v38 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
            }
            v39 = v32 + *(int *)(v33 + 44);
            v40 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
          }
          v41 = v4 + v7[24];
          if (!v34(v41, 1, v33))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v42 = v41 + *(int *)(v33 + 40);
            v43 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v42, 1, v43))
            {
              if (*(_QWORD *)(v42 + 8) != 1)
                swift_bridgeObjectRelease();
              v44 = v42 + *(int *)(v43 + 20);
              v45 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
            }
            v46 = v41 + *(int *)(v33 + 44);
            v47 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
          }
          v48 = v7[25];
          goto LABEL_37;
        case 1u:
          swift_bridgeObjectRelease();
          v49 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
          v50 = v4 + *(int *)(v49 + 20);
          v51 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v50, 1, v51))
          {
            v52 = v50 + *(int *)(v51 + 28);
            v53 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
          }
          v48 = *(int *)(v49 + 24);
LABEL_37:
          v54 = v4 + v48;
          v55 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
          break;
        default:
          break;
      }
    }
    v56 = v4 + *(int *)(v5 + 20);
    v57 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
  }
  v58 = a1 + *(int *)(a2 + 32);
  v59 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
}

uint64_t initializeWithCopy for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v8, 1, v13))
    {
      v15 = (char *)&loc_2403D79F0 + 4 * byte_2408E9548[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    v16 = *(int *)(v9 + 20);
    v17 = &v7[v16];
    v18 = &v8[v16];
    v19 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v20 = *(int *)(a3 + 32);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

uint64_t assignWithCopy for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.Definition);
      goto LABEL_7;
    }
    v17 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
    v19 = v18(v7, 1, v17);
    v20 = v18(v8, 1, v17);
    if (v19)
    {
      if (!v20)
      {
        v21 = (char *)&loc_2403D91CC + 4 * word_2408E9550[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v20)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
          v24 = (char *)&loc_2403D972C + 4 * word_2408E9558[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
LABEL_17:
    v29 = *(int *)(v9 + 20);
    v30 = &v7[v29];
    v31 = &v8[v29];
    v32 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
    goto LABEL_18;
  }
  if (v13)
  {
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_18;
  }
  v14 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v8, 1, v14))
  {
    v22 = (char *)&loc_2403D936C + 4 * byte_2408E954C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  v25 = *(int *)(v9 + 20);
  v26 = &v7[v25];
  v27 = &v8[v25];
  v28 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_18:
  v33 = *(int *)(a3 + 32);
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
  return a1;
}

uint64_t initializeWithTake for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v8, 1, v12))
    {
      v14 = (char *)&loc_2403DDD20 + 4 * byte_2408E9560[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    v15 = *(int *)(v9 + 20);
    v16 = &v7[v15];
    v17 = &v8[v15];
    v18 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v19 = *(int *)(a3 + 32);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t assignWithTake for ContextProtoRetrievedTool(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.Definition);
      goto LABEL_7;
    }
    v17 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
    v19 = v18(v7, 1, v17);
    v20 = v18(v8, 1, v17);
    if (v19)
    {
      if (!v20)
      {
        v21 = (char *)&loc_2403DF08C + 4 * word_2408E9568[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v20)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
          v24 = (char *)&loc_2403DF3CC + 4 * word_2408E9570[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
LABEL_17:
    v29 = *(int *)(v9 + 20);
    v30 = &v7[v29];
    v31 = &v8[v29];
    v32 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
    goto LABEL_18;
  }
  if (v13)
  {
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_18;
  }
  v14 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v8, 1, v14))
  {
    v22 = (char *)&loc_2403DF194 + 4 * byte_2408E9564[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  v25 = *(int *)(v9 + 20);
  v26 = &v7[v25];
  v27 = &v8[v25];
  v28 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_18:
  v33 = *(int *)(a3 + 32);
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoRetrievedTool()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403E20A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoRetrievedTool()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403E2154(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2403E21F4()
{
  unint64_t v0;
  unint64_t v1;

  sub_2403C8BE4(319, qword_256FFBBA8, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
  if (v0 <= 0x3F)
  {
    sub_2408E57A4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t _s23LighthouseDataProcessor29ContextProtoEntityMatcherTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2403E22FC + 4 * byte_2408E957D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2403E2330 + 4 * byte_2408E9578[v4]))();
}

uint64_t sub_2403E2330(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403E2338(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2403E2340);
  return result;
}

uint64_t sub_2403E234C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2403E2354);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2403E2358(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2403E2360(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContextProtoRetrievedTool.Stage()
{
  return &type metadata for ContextProtoRetrievedTool.Stage;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoRetrievedTool.Definition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a2, 1, v7))
    {
      v10 = (char *)&loc_2403E2454 + 4 * byte_2408E9582[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for ContextProtoRetrievedTool.Definition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v4 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
        v6 = (_QWORD *)(a1 + v5[17]);
        v7 = type metadata accessor for ToolKitProtoTypeInstance(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
        {
          if ((~*v6 & 0xF000000000000007) != 0)
            swift_release();
          v8 = (char *)v6 + *(int *)(v7 + 20);
          v9 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        }
        swift_bridgeObjectRelease();
        v10 = a1 + v5[19];
        v11 = type metadata accessor for ToolKitProtoAppDefinition(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v12 = v10 + *(int *)(v11 + 40);
          v13 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
          {
            if (*(_QWORD *)(v12 + 8) != 1)
              swift_bridgeObjectRelease();
            v14 = v12 + *(int *)(v13 + 20);
            v15 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
          }
          v16 = v10 + *(int *)(v11 + 44);
          v17 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        }
        swift_bridgeObjectRelease();
        v18 = a1 + v5[21];
        v19 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v20 = v18 + *(int *)(v19 + 24);
          v21 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
        }
        v22 = a1 + v5[22];
        v23 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
        {
          v24 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v22, 1, v24))
          {
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            swift_bridgeObjectRelease();
            if (EnumCaseMultiPayload == 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v26 = v22
                  + *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                           + 32);
              v27 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
            }
          }
          v28 = v22 + *(int *)(v23 + 20);
          v29 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
        }
        v30 = a1 + v5[23];
        v31 = type metadata accessor for ToolKitProtoContainerDefinition(0);
        v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48);
        if (!v32(v30, 1, v31))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v33 = v30 + *(int *)(v31 + 40);
          v34 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v33, 1, v34))
          {
            if (*(_QWORD *)(v33 + 8) != 1)
              swift_bridgeObjectRelease();
            v35 = v33 + *(int *)(v34 + 20);
            v36 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
          }
          v37 = v30 + *(int *)(v31 + 44);
          v38 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
        }
        v39 = a1 + v5[24];
        if (!v32(v39, 1, v31))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v40 = v39 + *(int *)(v31 + 40);
          v41 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
          {
            if (*(_QWORD *)(v40 + 8) != 1)
              swift_bridgeObjectRelease();
            v42 = v40 + *(int *)(v41 + 20);
            v43 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
          }
          v44 = v39 + *(int *)(v31 + 44);
          v45 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
        }
        v46 = v5[25];
        goto LABEL_36;
      case 1u:
        swift_bridgeObjectRelease();
        v47 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
        v48 = a1 + *(int *)(v47 + 20);
        v49 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v48, 1, v49))
        {
          v50 = v48 + *(int *)(v49 + 28);
          v51 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
        }
        v46 = *(int *)(v47 + 24);
LABEL_36:
        v52 = a1 + v46;
        v53 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
        break;
      default:
        break;
    }
  }
  v54 = a1 + *(int *)(a2 + 20);
  v55 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
}

char *initializeWithCopy for ContextProtoRetrievedTool.Definition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a2, 1, v6))
  {
    v8 = (char *)&loc_2403E4020 + 4 * byte_2408E958E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for ContextProtoRetrievedTool.Definition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  v8 = v7(a1, 1, v6);
  v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_2403E5614 + 4 * word_2408E9592[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v12 = (char *)&loc_2403E57E8 + 4 * word_2408E959A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

char *initializeWithTake for ContextProtoRetrievedTool.Definition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a2, 1, v6))
  {
    v8 = (char *)&loc_2403E8804 + 4 * byte_2408E95A2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for ContextProtoRetrievedTool.Definition(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  v8 = v7(a1, 1, v6);
  v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_2403E9964 + 4 * byte_2408E95A6[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v12 = (char *)&loc_2403E9AB0 + 4 * word_2408E95AA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoRetrievedTool.Definition()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403EBC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFB058);
}

uint64_t storeEnumTagSinglePayload for ContextProtoRetrievedTool.Definition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403EBC64(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFB058);
}

void sub_2403EBC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_256FFBC50, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
}

uint64_t initializeBufferWithCopyOfBuffer for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_2403EBCE8 + 4 * byte_2408E95B2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t a1)
{
  uint64_t result;
  int *v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
      v4 = (_QWORD *)(a1 + v3[17]);
      v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
      {
        if ((~*v4 & 0xF000000000000007) != 0)
          swift_release();
        v6 = (char *)v4 + *(int *)(v5 + 20);
        v7 = sub_2408E57A4();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      }
      swift_bridgeObjectRelease();
      v8 = a1 + v3[19];
      v9 = type metadata accessor for ToolKitProtoAppDefinition(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v10 = v8 + *(int *)(v9 + 40);
        v11 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
        {
          if (*(_QWORD *)(v10 + 8) != 1)
            swift_bridgeObjectRelease();
          v12 = v10 + *(int *)(v11 + 20);
          v13 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        }
        v14 = v8 + *(int *)(v9 + 44);
        v15 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      }
      swift_bridgeObjectRelease();
      v16 = a1 + v3[21];
      v17 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v18 = v16 + *(int *)(v17 + 24);
        v19 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
      }
      v20 = a1 + v3[22];
      v21 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
      {
        v22 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v20, 1, v22))
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          swift_bridgeObjectRelease();
          if (EnumCaseMultiPayload == 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v24 = v20
                + *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                         + 32);
            v25 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
          }
        }
        v26 = v20 + *(int *)(v21 + 20);
        v27 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
      }
      v28 = a1 + v3[23];
      v29 = type metadata accessor for ToolKitProtoContainerDefinition(0);
      v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48);
      if (!v30(v28, 1, v29))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = v28 + *(int *)(v29 + 40);
        v32 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32))
        {
          if (*(_QWORD *)(v31 + 8) != 1)
            swift_bridgeObjectRelease();
          v33 = v31 + *(int *)(v32 + 20);
          v34 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        }
        v35 = v28 + *(int *)(v29 + 44);
        v36 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
      }
      v37 = a1 + v3[24];
      if (!v30(v37, 1, v29))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = v37 + *(int *)(v29 + 40);
        v39 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39))
        {
          if (*(_QWORD *)(v38 + 8) != 1)
            swift_bridgeObjectRelease();
          v40 = v38 + *(int *)(v39 + 20);
          v41 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
        }
        v42 = v37 + *(int *)(v29 + 44);
        v43 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
      }
      v44 = v3[25];
      goto LABEL_35;
    case 1:
      swift_bridgeObjectRelease();
      v45 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
      v46 = a1 + *(int *)(v45 + 20);
      v47 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47))
      {
        v48 = v46 + *(int *)(v47 + 28);
        v49 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
      }
      v44 = *(int *)(v45 + 24);
LABEL_35:
      v50 = a1 + v44;
      v51 = sub_2408E57A4();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for ContextProtoRetrievedTool.ContextProtoDefinitionEnum()
{
  char *v0;

  v0 = (char *)sub_2403EE228 + 4 * byte_2408E95BE[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2403EE228(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *__dst, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(_QWORD *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int (*v96)(_QWORD *, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, char *, uint64_t);
  char *v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int EnumCaseMultiPayload;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int (*v131)(_QWORD, _QWORD, _QWORD);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  unsigned int (*v141)(_QWORD *, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  unsigned int (*v165)(_QWORD *, uint64_t, uint64_t);
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unsigned int (*v184)(uint64_t *, uint64_t, uint64_t);
  uint64_t v185;
  uint64_t v186;
  unsigned int (*v187)(_QWORD *, uint64_t, uint64_t);
  uint64_t v188;
  void (*v189)(char *, char *, uint64_t);
  unsigned int (*v190)(_QWORD, _QWORD, _QWORD);
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  char *v194;
  _QWORD *v195;
  _QWORD *v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  int *v203;
  uint64_t v204;
  uint64_t v205;

  v35 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)v34 = *(_QWORD *)v33;
  *(_QWORD *)(v34 + 8) = v35;
  v36 = *(_QWORD *)(v33 + 24);
  *(_QWORD *)(v34 + 16) = *(_QWORD *)(v33 + 16);
  *(_QWORD *)(v34 + 24) = v36;
  *(_BYTE *)(v34 + 32) = *(_BYTE *)(v33 + 32);
  v37 = *(_QWORD *)(v33 + 48);
  *(_QWORD *)(v34 + 40) = *(_QWORD *)(v33 + 40);
  *(_QWORD *)(v34 + 48) = v37;
  v38 = *(_QWORD *)(v33 + 64);
  *(_QWORD *)(v34 + 56) = *(_QWORD *)(v33 + 56);
  *(_QWORD *)(v34 + 64) = v38;
  *(_QWORD *)(v34 + 72) = *(_QWORD *)(v33 + 72);
  *(_BYTE *)(v34 + 80) = *(_BYTE *)(v33 + 80);
  v185 = *(_QWORD *)(v33 + 96);
  *(_QWORD *)(v34 + 88) = *(_QWORD *)(v33 + 88);
  *(_QWORD *)(v34 + 96) = v185;
  v192 = *(_QWORD *)(v33 + 112);
  *(_QWORD *)(v34 + 104) = *(_QWORD *)(v33 + 104);
  *(_QWORD *)(v34 + 112) = v192;
  v39 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v40 = *(int *)(v39 + 68);
  v197 = (_QWORD *)(v34 + v40);
  v203 = (int *)v39;
  v41 = (uint64_t *)(v33 + v40);
  v42 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v43 = *(_QWORD *)(v42 - 8);
  v184 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v43 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v184(v41, 1, v42))
  {
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v197, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v45 = *v41;
    if ((~*v41 & 0xF000000000000007) != 0)
      swift_retain();
    *v197 = v45;
    v46 = *(int *)(v42 + 20);
    v47 = (char *)v197 + v46;
    v48 = v42;
    v49 = (char *)v41 + v46;
    v50 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v47, v49, v50);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v197, 0, 1, v48);
  }
  v52 = v204;
  v51 = v205;
  v53 = v203;
  v54 = v203[18];
  v55 = (_QWORD *)(v204 + v54);
  v56 = (_QWORD *)(v205 + v54);
  v57 = v56[1];
  *v55 = *v56;
  v55[1] = v57;
  v58 = v203[19];
  v59 = (_QWORD *)(v204 + v58);
  v60 = (_QWORD *)(v205 + v58);
  v61 = type metadata accessor for ToolKitProtoAppDefinition(0);
  v62 = *(_QWORD *)(v61 - 8);
  v63 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v62 + 48);
  swift_bridgeObjectRetain();
  if (v63(v60, 1, v61))
  {
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
    memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  else
  {
    v198 = v62;
    v65 = v60[1];
    *v59 = *v60;
    v59[1] = v65;
    v66 = v60[3];
    v59[2] = v60[2];
    v59[3] = v66;
    v67 = v60[5];
    v59[4] = v60[4];
    v59[5] = v67;
    v68 = v60[7];
    v59[6] = v60[6];
    v59[7] = v68;
    v69 = v60[9];
    v59[8] = v60[8];
    v59[9] = v69;
    *((_BYTE *)v59 + 80) = *((_BYTE *)v60 + 80);
    v70 = *(int *)(v61 + 40);
    v193 = (_QWORD *)((char *)v59 + v70);
    v71 = (_QWORD *)((char *)v60 + v70);
    v72 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    v73 = *(_QWORD *)(v72 - 8);
    v187 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v73 + 48);
    v74 = v72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v187(v71, 1, v74))
    {
      v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
      memcpy(v193, v71, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      v52 = v204;
      v51 = v205;
      v76 = v198;
      v53 = v203;
    }
    else
    {
      v188 = v73;
      v77 = v71[1];
      v78 = v71;
      if (v77 == 1)
      {
        *(_OWORD *)v193 = *(_OWORD *)v71;
      }
      else
      {
        *v193 = *v71;
        v193[1] = v77;
        swift_bridgeObjectRetain();
      }
      v52 = v204;
      v51 = v205;
      v76 = v198;
      v53 = v203;
      v79 = *(int *)(v74 + 20);
      v199 = v74;
      v80 = (char *)v193 + v79;
      v81 = (char *)v78 + v79;
      v82 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v193, 0, 1, v199);
    }
    v83 = *(int *)(v61 + 44);
    v84 = (char *)v59 + v83;
    v85 = (char *)v60 + v83;
    v86 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v59, 0, 1, v61);
  }
  v87 = v53[20];
  v88 = (_QWORD *)(v52 + v87);
  v89 = (_QWORD *)(v51 + v87);
  v90 = v89[1];
  *v88 = *v89;
  v88[1] = v90;
  v91 = v53[21];
  v92 = (_QWORD *)(v52 + v91);
  v93 = (_QWORD *)(v51 + v91);
  v94 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v95 + 48);
  swift_bridgeObjectRetain();
  if (v96(v93, 1, v94))
  {
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    v98 = v93[1];
    *v92 = *v93;
    v92[1] = v98;
    v99 = v93[3];
    v92[2] = v93[2];
    v92[3] = v99;
    v100 = *(int *)(v94 + 24);
    v101 = (char *)v92 + v100;
    v102 = (char *)v93 + v100;
    v103 = sub_2408E57A4();
    v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v105 = v102;
    v51 = v205;
    v104(v101, v105, v103);
    v53 = v203;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
  }
  v106 = v53[22];
  v107 = (_QWORD *)(v52 + v106);
  v108 = (_QWORD *)(v51 + v106);
  v109 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  v110 = *(_QWORD *)(v109 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
  {
    v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
    memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
  }
  else
  {
    v112 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    v113 = *(_QWORD *)(v112 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v113 + 48))(v108, 1, v112))
    {
      v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
      memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v116 = v108[1];
      *v107 = *v108;
      v107[1] = v116;
      if (EnumCaseMultiPayload == 1)
      {
        *((_BYTE *)v107 + 16) = *((_BYTE *)v108 + 16);
        v117 = v108[4];
        v107[3] = v108[3];
        v107[4] = v117;
        v118 = v108[6];
        v107[5] = v108[5];
        v107[6] = v118;
        v119 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v194 = (char *)v108 + v119;
        v200 = (char *)v107 + v119;
        v120 = sub_2408E57A4();
        v189 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v121 = v120;
        v52 = v204;
        v189(v200, v194, v121);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v107, 0, 1, v112);
    }
    v122 = *(int *)(v109 + 20);
    v123 = (char *)v107 + v122;
    v124 = (char *)v108 + v122;
    v125 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(v123, v124, v125);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
    v51 = v205;
    v53 = v203;
  }
  v126 = v53[23];
  v127 = (_QWORD *)(v52 + v126);
  v128 = (_QWORD *)(v51 + v126);
  v129 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  v130 = *(_QWORD *)(v129 - 8);
  v131 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v130 + 48);
  if (v131(v128, 1, v129))
  {
    v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
  }
  else
  {
    v190 = v131;
    v201 = v130;
    v133 = v128[1];
    *v127 = *v128;
    v127[1] = v133;
    v134 = v128[3];
    v127[2] = v128[2];
    v127[3] = v134;
    *((_WORD *)v127 + 16) = *((_WORD *)v128 + 16);
    v135 = v128[6];
    v127[5] = v128[5];
    v127[6] = v135;
    v136 = v128[8];
    v127[7] = v128[7];
    v127[8] = v136;
    v137 = *(int *)(v129 + 40);
    v195 = (_QWORD *)((char *)v127 + v137);
    v138 = (_QWORD *)((char *)v128 + v137);
    v139 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v140 = *(_QWORD *)(v139 - 8);
    v141 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v140 + 48);
    v142 = v139;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v141(v138, 1, v142))
    {
      v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
      memcpy(v195, v138, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      v51 = v205;
      v53 = v203;
    }
    else
    {
      v186 = v140;
      v144 = v138[1];
      if (v144 == 1)
      {
        *(_OWORD *)v195 = *(_OWORD *)v138;
      }
      else
      {
        *v195 = *v138;
        v195[1] = v144;
        swift_bridgeObjectRetain();
      }
      v51 = v205;
      v53 = v203;
      v145 = *(int *)(v142 + 20);
      v146 = v142;
      v147 = (char *)v195 + v145;
      v148 = (char *)v138 + v145;
      v149 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(v147, v148, v149);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v186 + 56))(v195, 0, 1, v146);
    }
    v150 = *(int *)(v129 + 44);
    v151 = (char *)v127 + v150;
    v152 = (char *)v128 + v150;
    v153 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 16))(v151, v152, v153);
    v130 = v201;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v201 + 56))(v127, 0, 1, v129);
    v52 = v204;
    v131 = v190;
  }
  v154 = v53[24];
  v155 = (_QWORD *)(v52 + v154);
  v156 = (_QWORD *)(v51 + v154);
  if (v131(v51 + v154, 1, v129))
  {
    v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
    memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
  }
  else
  {
    v202 = v130;
    v157 = v156[1];
    *v155 = *v156;
    v155[1] = v157;
    v158 = v156[3];
    v155[2] = v156[2];
    v155[3] = v158;
    *((_WORD *)v155 + 16) = *((_WORD *)v156 + 16);
    v159 = v156[6];
    v155[5] = v156[5];
    v155[6] = v159;
    v160 = v156[8];
    v155[7] = v156[7];
    v155[8] = v160;
    v161 = *(int *)(v129 + 40);
    v196 = (_QWORD *)((char *)v155 + v161);
    v162 = (_QWORD *)((char *)v156 + v161);
    v163 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v164 = *(_QWORD *)(v163 - 8);
    v165 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v164 + 48);
    v166 = v163;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v165(v162, 1, v166))
    {
      v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
      memcpy(v196, v162, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
      v51 = v205;
      v53 = v203;
    }
    else
    {
      v191 = v164;
      v168 = v162[1];
      if (v168 == 1)
      {
        *(_OWORD *)v196 = *(_OWORD *)v162;
      }
      else
      {
        *v196 = *v162;
        v196[1] = v168;
        swift_bridgeObjectRetain();
      }
      v51 = v205;
      v53 = v203;
      v169 = *(int *)(v166 + 20);
      v170 = v166;
      v171 = (char *)v196 + v169;
      v172 = (char *)v162 + v169;
      v173 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v171, v172, v173);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v196, 0, 1, v170);
    }
    v174 = *(int *)(v129 + 44);
    v175 = (char *)v155 + v174;
    v176 = (char *)v156 + v174;
    v177 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 16))(v175, v176, v177);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v202 + 56))(v155, 0, 1, v129);
    v52 = v204;
  }
  v179 = v53[25];
  v180 = v52 + v179;
  v181 = v51 + v179;
  v182 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v180, v181, v182);
  swift_storeEnumTagMultiPayload();
  return v52;
}

uint64_t assignWithCopy for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240388AE4(result, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v2 = (char *)&loc_2403EF7A4 + 4 * byte_2408E95C2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for ContextProtoRetrievedTool.ContextProtoDefinitionEnum()
{
  char *v0;

  v0 = (char *)sub_2403F0F0C + 4 * byte_2408E95C6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2403F0F0C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *__dst, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  int *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD *v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int (*v93)(_OWORD *, uint64_t, uint64_t);
  uint64_t v94;
  __int128 v95;
  uint64_t v96;
  _OWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  _OWORD *v109;
  _OWORD *v110;
  __int128 v111;
  uint64_t v112;
  _OWORD *v113;
  _OWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v131;
  char *v132;
  _OWORD *v133;
  char *v134;
  _OWORD *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;

  v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(_BYTE *)(v27 + 32) = *(_BYTE *)(v28 + 32);
  *(_OWORD *)(v27 + 40) = *(_OWORD *)(v28 + 40);
  *(_OWORD *)(v27 + 56) = *(_OWORD *)(v28 + 56);
  *(_QWORD *)(v27 + 72) = *(_QWORD *)(v28 + 72);
  *(_BYTE *)(v27 + 80) = *(_BYTE *)(v28 + 80);
  *(_OWORD *)(v27 + 88) = *(_OWORD *)(v28 + 88);
  *(_OWORD *)(v27 + 104) = *(_OWORD *)(v28 + 104);
  v30 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v31 = v30[17];
  v32 = (_QWORD *)(v27 + v31);
  v33 = (_QWORD *)(v28 + v31);
  v34 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    *v32 = *v33;
    v37 = *(int *)(v34 + 20);
    v38 = (char *)v32 + v37;
    v39 = (char *)v33 + v37;
    v40 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  *(_OWORD *)(v27 + v30[18]) = *(_OWORD *)(v28 + v30[18]);
  v41 = v30[19];
  v42 = (_OWORD *)(v27 + v41);
  v43 = (_OWORD *)(v28 + v41);
  v44 = type metadata accessor for ToolKitProtoAppDefinition(0);
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v47 = v43[1];
    *v42 = *v43;
    v42[1] = v47;
    v48 = v43[3];
    v42[2] = v43[2];
    v42[3] = v48;
    v42[4] = v43[4];
    *((_BYTE *)v42 + 80) = *((_BYTE *)v43 + 80);
    v49 = *(int *)(v44 + 40);
    v135 = (_OWORD *)((char *)v42 + v49);
    v50 = (_OWORD *)((char *)v43 + v49);
    v51 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    v52 = *(_QWORD *)(v51 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
      memcpy(v135, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      *v135 = *v50;
      v54 = *(int *)(v51 + 20);
      v132 = (char *)v135 + v54;
      v55 = (char *)v50 + v54;
      v56 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v132, v55, v56);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v135, 0, 1, v51);
    }
    v57 = *(int *)(v44 + 44);
    v58 = (char *)v42 + v57;
    v59 = (char *)v43 + v57;
    v60 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  *(_OWORD *)(v27 + v30[20]) = *(_OWORD *)(v28 + v30[20]);
  v61 = v30[21];
  v62 = (_OWORD *)(v27 + v61);
  v63 = (_OWORD *)(v28 + v61);
  v64 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
  {
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    v67 = v63[1];
    *v62 = *v63;
    v62[1] = v67;
    v68 = *(int *)(v64 + 24);
    v69 = (char *)v62 + v68;
    v70 = (char *)v63 + v68;
    v71 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  }
  v72 = v30[22];
  v73 = (_OWORD *)(v27 + v72);
  v74 = (_OWORD *)(v28 + v72);
  v75 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  v76 = *(_QWORD *)(v75 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
  {
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    v78 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    v79 = *(_QWORD *)(v78 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v79 + 48))(v74, 1, v78))
    {
      v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v73 = *v74;
        *((_BYTE *)v73 + 16) = *((_BYTE *)v74 + 16);
        *(_OWORD *)((char *)v73 + 24) = *(_OWORD *)((char *)v74 + 24);
        *(_OWORD *)((char *)v73 + 40) = *(_OWORD *)((char *)v74 + 40);
        v81 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v136 = (char *)v73 + v81;
        v82 = (char *)v74 + v81;
        v83 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v136, v82, v83);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v73, v74, *(_QWORD *)(v79 + 64));
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v73, 0, 1, v78);
    }
    v84 = *(int *)(v75 + 20);
    v85 = (char *)v73 + v84;
    v86 = (char *)v74 + v84;
    v87 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
  }
  v88 = v30[23];
  v89 = (_OWORD *)(v27 + v88);
  v90 = (_OWORD *)(v28 + v88);
  v91 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  v92 = *(_QWORD *)(v91 - 8);
  v93 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v92 + 48);
  if (v93(v90, 1, v91))
  {
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
    memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
  }
  else
  {
    v95 = v90[1];
    *v89 = *v90;
    v89[1] = v95;
    *((_WORD *)v89 + 16) = *((_WORD *)v90 + 16);
    *(_OWORD *)((char *)v89 + 40) = *(_OWORD *)((char *)v90 + 40);
    *(_OWORD *)((char *)v89 + 56) = *(_OWORD *)((char *)v90 + 56);
    v96 = *(int *)(v91 + 40);
    v133 = (_OWORD *)((char *)v89 + v96);
    v137 = v92;
    v97 = (_OWORD *)((char *)v90 + v96);
    v98 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v99 = *(_QWORD *)(v98 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
    {
      v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
      memcpy(v133, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
    else
    {
      *v133 = *v97;
      v101 = *(int *)(v98 + 20);
      v131 = (char *)v133 + v101;
      v102 = (char *)v97 + v101;
      v103 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v131, v102, v103);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v133, 0, 1, v98);
    }
    v104 = *(int *)(v91 + 44);
    v105 = (char *)v89 + v104;
    v106 = (char *)v90 + v104;
    v107 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 32))(v105, v106, v107);
    v92 = v137;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v89, 0, 1, v91);
  }
  v108 = v30[24];
  v109 = (_OWORD *)(v27 + v108);
  v110 = (_OWORD *)(v28 + v108);
  if (v93((_OWORD *)(v28 + v108), 1, v91))
  {
    v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
  }
  else
  {
    v138 = v92;
    v111 = v110[1];
    *v109 = *v110;
    v109[1] = v111;
    *((_WORD *)v109 + 16) = *((_WORD *)v110 + 16);
    *(_OWORD *)((char *)v109 + 40) = *(_OWORD *)((char *)v110 + 40);
    *(_OWORD *)((char *)v109 + 56) = *(_OWORD *)((char *)v110 + 56);
    v112 = *(int *)(v91 + 40);
    v113 = (_OWORD *)((char *)v109 + v112);
    v114 = (_OWORD *)((char *)v110 + v112);
    v115 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v116 = *(_QWORD *)(v115 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v116 + 48))(v114, 1, v115))
    {
      v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
      memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    }
    else
    {
      *v113 = *v114;
      v118 = *(int *)(v115 + 20);
      v134 = (char *)v113 + v118;
      v119 = (char *)v114 + v118;
      v120 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v134, v119, v120);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v113, 0, 1, v115);
    }
    v121 = *(int *)(v91 + 44);
    v122 = (char *)v109 + v121;
    v123 = (char *)v110 + v121;
    v124 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v122, v123, v124);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v109, 0, 1, v91);
  }
  v126 = v30[25];
  v127 = v27 + v126;
  v128 = v28 + v126;
  v129 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v127, v128, v129);
  swift_storeEnumTagMultiPayload();
  return v27;
}

uint64_t assignWithTake for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240388AE4(result, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v2 = (char *)&loc_2403F1F78 + 4 * byte_2408E95CA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDataEnum(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDataEnum(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_2403F2F90()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2403F2FA0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for ToolKitProtoToolDefinition.Version1(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoSampleInvocation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_2408E57A4();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_2408E57A4();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for ContextProtoSampleInvocation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoSampleInvocation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ContextProtoSampleInvocation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403F3304()
{
  return sub_2403FD2F0();
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoToolRetrievalType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = v6;
      v49 = v8;
      v12 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA800);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v15 = a2[1];
          *a1 = *a2;
          a1[1] = v15;
          v16 = a2[3];
          a1[2] = a2[2];
          a1[3] = v16;
          v17 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
          v46 = (char *)a2 + v17;
          v47 = (char *)a1 + v17;
          v18 = sub_2408E57A4();
          v48 = v11;
          v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v19(v47, v46, v18);
          v11 = v48;
        }
        else
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v20 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
          v21 = (char *)a1 + v20;
          v22 = (char *)a2 + v20;
          v23 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
      v24 = *(int *)(v7 + 20);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v49 + 56))(a1, 0, 1, v7);
      v6 = v11;
    }
    v28 = *(int *)(v6 + 20);
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB060);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v30, 1, v34))
      {
        v36 = (char *)&loc_2403F362C + 4 * byte_2408E95CE[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBE00);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      v37 = *(int *)(v31 + 20);
      v38 = &v29[v37];
      v39 = &v30[v37];
      v40 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v41 = *(int *)(v6 + 24);
    v42 = (char *)a1 + v41;
    v43 = (char *)a2 + v41;
    v44 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
  }
  return a1;
}

uint64_t destroy for ContextProtoToolRetrievalType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t valid;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v4 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    v6 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
      }
      else
      {
        v7 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
      }
      v8 = a1 + v7;
      v9 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = a1 + *(int *)(v4 + 20);
    v11 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + *(int *)(a2 + 20);
  v13 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v15 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
          goto LABEL_54;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v16 = (int *)type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity(0);
          v17 = v12 + v16[10];
          if (!v5(v17, 1, v4))
          {
            v18 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v19 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
              }
              else
              {
                v19 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
              }
              v26 = v17 + v19;
              v27 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
            }
            v28 = v17 + *(int *)(v4 + 20);
            v29 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
          }
          v30 = v12 + v16[11];
          v31 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v32 = v30 + *(int *)(v31 + 28);
            v33 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
          }
          v15 = v16[12];
          goto LABEL_54;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v20 = (int *)type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration(0);
          v21 = v12 + v20[8];
          if (!v5(v21, 1, v4))
          {
            v22 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v23 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
              }
              else
              {
                v23 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
              }
              v34 = v21 + v23;
              v35 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
            }
            v36 = v21 + *(int *)(v4 + 20);
            v37 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
          }
          v38 = v12 + v20[9];
          v39 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v40 = v38 + *(int *)(v39 + 28);
            v41 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
          }
          v15 = v20[10];
          goto LABEL_54;
        case 3u:
          if (!v5(v12, 1, v4))
          {
            v24 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v12, 1, v24))
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v25 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
              }
              else
              {
                v25 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
              }
              v42 = v12 + v25;
              v43 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
            }
            v44 = v12 + *(int *)(v4 + 20);
            v45 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
          }
          v46 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query(0);
          v47 = v12 + *(int *)(v46 + 20);
          v48 = (int *)type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v48 - 1) + 48))(v47, 1, v48))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v49 = v47 + v48[6];
            v50 = type metadata accessor for ToolKitProtoStringSearchPredicate.Template(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50))
            {
              v51 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v49, v51);
            }
            v52 = v47 + v48[7];
            v53 = type metadata accessor for ToolKitProtoIdSearchPredicate.Template(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v52, 1, v53))
            {
              v54 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v52, v54);
            }
            v55 = v47 + v48[8];
            v56 = type metadata accessor for ToolKitProtoAllPredicate(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56))
            {
              v57 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v55, v57);
            }
            v58 = v47 + v48[9];
            v59 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59))
            {
              v60 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v58, v60);
            }
            v61 = v47 + v48[10];
            v62 = type metadata accessor for ToolKitProtoSearchableItemPredicate.Template(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 1, v62))
            {
              v63 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v61, v63);
            }
            v64 = v47 + v48[11];
            valid = type metadata accessor for ToolKitProtoValidPredicate(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(valid - 8) + 48))(v64, 1, valid))
            {
              v66 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v64, v66);
            }
            v67 = v47 + v48[12];
            v68 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
          }
          v15 = *(int *)(v46 + 24);
LABEL_54:
          v69 = v12 + v15;
          v70 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
          break;
        default:
          break;
      }
    }
    v71 = v12 + *(int *)(v13 + 20);
    v72 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v71, v72);
  }
  v73 = a1 + *(int *)(a2 + 24);
  v74 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v73, v74);
}

_QWORD *initializeWithCopy for ContextProtoToolRetrievalType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v46;
  char *v47;
  _QWORD *v48;
  _QWORD *v49;

  v6 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA800);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        v13 = a2[3];
        a1[2] = a2[2];
        a1[3] = v13;
        v14 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
        v46 = (char *)a2 + v14;
        v47 = (char *)a1 + v14;
        v49 = a2;
        v15 = a3;
        v16 = sub_2408E57A4();
        v48 = a1;
        v17 = v7;
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = v16;
        a3 = v15;
        a2 = v49;
        v18(v47, v46, v19);
        v7 = v17;
        a1 = v48;
      }
      else
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v20 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v24 = *(int *)(v6 + 20);
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v28 = *(int *)(a3 + 20);
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB060);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v34 = type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v30, 1, v34))
    {
      v36 = (char *)&loc_2403F4F0C + 4 * byte_2408E95D6[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBE00);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    v37 = *(int *)(v31 + 20);
    v38 = &v29[v37];
    v39 = &v30[v37];
    v40 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v41 = *(int *)(a3 + 24);
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoToolRetrievalType(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(char *, uint64_t, uint64_t);
  int v73;
  int v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *__src;
  char *__srca;
  char *__srcb;
  uint64_t v108;
  uint64_t v109;

  v6 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v108 = v7;
  v109 = v6;
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for ToolKitProtoTypeIdentifier);
      goto LABEL_7;
    }
    v15 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48);
    v18 = v17(a1, 1, v15);
    v19 = v17(a2, 1, v15);
    if (v18)
    {
      if (!v19)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          v20 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
          v101 = a3;
          __src = (char *)a1 + v20;
          v21 = (char *)a2 + v20;
          v22 = a1;
          v23 = sub_2408E57A4();
          v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v25 = v21;
          a3 = v101;
          v26 = v23;
          a1 = v22;
          v6 = v109;
          v24(__src, v25, v26);
        }
        else
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v52 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
          v53 = (char *)a1 + v52;
          v54 = (char *)a2 + v52;
          v55 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v19)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)a1, type metadata accessor for ToolKitProtoTypeIdentifierKind);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            v44 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
            v103 = a3;
            __srcb = (char *)a1 + v44;
            v45 = (char *)a2 + v44;
            v46 = v6;
            v47 = a1;
            v48 = sub_2408E57A4();
            v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v50 = v45;
            a3 = v103;
            v51 = v48;
            a1 = v47;
            v6 = v46;
            v49(__srcb, v50, v51);
          }
          else
          {
            *(_BYTE *)a1 = *(_BYTE *)a2;
            v82 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
            v83 = (char *)a1 + v82;
            v84 = (char *)a2 + v82;
            v85 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v83, v84, v85);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_26;
      }
      sub_240388AE4((uint64_t)a1, type metadata accessor for ToolKitProtoTypeIdentifierKind);
    }
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA800);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
LABEL_26:
    v56 = *(int *)(v6 + 20);
    v57 = (char *)a1 + v56;
    v58 = (char *)a2 + v56;
    v59 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 24))(v57, v58, v59);
    goto LABEL_27;
  }
  if (v10)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_27;
  }
  v11 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA800);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v27 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
      v102 = a3;
      __srca = (char *)a1 + v27;
      v28 = (char *)a2 + v27;
      v100 = a2;
      v29 = a1;
      v30 = sub_2408E57A4();
      v31 = v6;
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33 = v28;
      a3 = v102;
      v34 = v30;
      a1 = v29;
      a2 = v100;
      v32(__srca, v33, v34);
      v6 = v31;
      v7 = v108;
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v36 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v40 = *(int *)(v6 + 20);
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_27:
  v60 = *(int *)(a3 + 20);
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v66 = v61;
  LODWORD(v61) = v65(v61, 1, v63);
  v67 = v65(v62, 1, v63);
  if ((_DWORD)v61)
  {
    if (!v67)
    {
      v68 = type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 48))(v62, 1, v68))
      {
        v78 = (char *)&loc_2403F6398 + 4 * byte_2408E95DA[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBE00);
      memcpy(v66, v62, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      v86 = *(int *)(v63 + 20);
      v87 = v63;
      v88 = &v66[v86];
      v89 = &v62[v86];
      v90 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v66, 0, 1, v87);
      goto LABEL_45;
    }
LABEL_33:
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB060);
    memcpy(v66, v62, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_45;
  }
  if (v67)
  {
    sub_240388AE4((uint64_t)v66, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
    goto LABEL_33;
  }
  v104 = a3;
  v71 = type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind(0);
  v72 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48);
  v73 = v72(v66, 1, v71);
  v74 = v72(v62, 1, v71);
  if (v73)
  {
    if (!v74)
    {
      v80 = (char *)&loc_2403F646C + 4 * word_2408E95DE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBE00);
    v76 = v66;
    v77 = v62;
    memcpy(v66, v62, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    a3 = v104;
  }
  else if (v74)
  {
    v76 = v66;
    sub_240388AE4((uint64_t)v66, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBE00);
    v77 = v62;
    memcpy(v66, v62, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    a3 = v104;
  }
  else
  {
    a3 = v104;
    v77 = v62;
    v76 = v66;
    if (a1 != a2)
    {
      sub_240388AE4((uint64_t)v66, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
      v81 = (char *)&loc_2403F66D8 + 4 * word_2408E95E6[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
  }
  v91 = *(int *)(v63 + 20);
  v92 = &v76[v91];
  v93 = &v77[v91];
  v94 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 24))(v92, v93, v94);
LABEL_45:
  v95 = *(int *)(a3 + 24);
  v96 = (char *)a1 + v95;
  v97 = (char *)a2 + v95;
  v98 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 24))(v96, v97, v98);
  return a1;
}

_OWORD *initializeWithTake for ContextProtoToolRetrievalType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v42;

  v6 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA800);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        v13 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
      }
      else
      {
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v13 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
      }
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    v17 = *(int *)(v6 + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v21 = *(int *)(a3 + 20);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB060);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v42 = v24;
    v27 = v22;
    v28 = a3;
    v29 = type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v23, 1, v29))
    {
      v32 = (char *)&loc_2403F9334 + 4 * byte_2408E95EE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBE00);
    memcpy(v27, v23, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    a3 = v28;
    v31 = v27;
    v33 = *(int *)(v42 + 20);
    v34 = &v27[v33];
    v35 = &v23[v33];
    v36 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v31, 0, 1, v42);
  }
  v37 = *(int *)(a3 + 24);
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
  return a1;
}

_OWORD *assignWithTake for ContextProtoToolRetrievalType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_OWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_OWORD *, uint64_t, uint64_t);
  int v18;
  int v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  int v57;
  int v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v76;

  v6 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for ToolKitProtoTypeIdentifier);
      goto LABEL_7;
    }
    v15 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48);
    v18 = v17(a1, 1, v15);
    v19 = v17(a2, 1, v15);
    if (v18)
    {
      if (!v19)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v20 = a2[1];
          *a1 = *a2;
          a1[1] = v20;
          v21 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
        }
        else
        {
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v21 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
        }
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v19)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)a1, type metadata accessor for ToolKitProtoTypeIdentifierKind);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v35 = a2[1];
            *a1 = *a2;
            a1[1] = v35;
            v36 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
          }
          else
          {
            *(_BYTE *)a1 = *(_BYTE *)a2;
            v36 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
          }
          v37 = (char *)a1 + v36;
          v38 = (char *)a2 + v36;
          v39 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_26;
      }
      sub_240388AE4((uint64_t)a1, type metadata accessor for ToolKitProtoTypeIdentifierKind);
    }
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA800);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
LABEL_26:
    v40 = *(int *)(v6 + 20);
    v41 = (char *)a1 + v40;
    v42 = (char *)a2 + v40;
    v43 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
    goto LABEL_27;
  }
  if (v10)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_27;
  }
  v11 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA800);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = a2[1];
      *a1 = *a2;
      a1[1] = v25;
      v26 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0) + 24);
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v26 = *(int *)(type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0) + 20);
    }
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v31 = *(int *)(v6 + 20);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_27:
  v76 = a3;
  v44 = *(int *)(a3 + 20);
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  v50 = v49(v45, 1, v47);
  v51 = v49(v46, 1, v47);
  if (!v50)
  {
    if (v51)
    {
      sub_240388AE4((uint64_t)v45, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
      goto LABEL_33;
    }
    v55 = type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind(0);
    v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48);
    v57 = v56(v45, 1, v55);
    v58 = v56(v46, 1, v55);
    if (v57)
    {
      if (!v58)
      {
        v59 = (char *)&loc_2403FA5BC + 4 * byte_2408E95F6[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v58)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v45, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
          v62 = (char *)&loc_2403FA800 + 4 * byte_2408E95FA[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_44;
      }
      sub_240388AE4((uint64_t)v45, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
    }
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBE00);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
LABEL_44:
    v67 = *(int *)(v47 + 20);
    v68 = &v45[v67];
    v69 = &v46[v67];
    v70 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v68, v69, v70);
    goto LABEL_45;
  }
  if (v51)
  {
LABEL_33:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB060);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_45;
  }
  v52 = type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v46, 1, v52))
  {
    v60 = (char *)&loc_2403FA634 + 4 * byte_2408E95F2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBE00);
  memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  v63 = *(int *)(v47 + 20);
  v64 = &v45[v63];
  v65 = &v46[v63];
  v66 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
LABEL_45:
  v71 = *(int *)(v76 + 24);
  v72 = (char *)a1 + v71;
  v73 = (char *)a2 + v71;
  v74 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoToolRetrievalType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403FCCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB060);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = sub_2408E57A4();
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ContextProtoToolRetrievalType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2403FCD60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB060);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_2408E57A4();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2403FCE08()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2403C8BE4(319, &qword_256FFBE70, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeIdentifier);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, qword_256FFBE78, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeDefinition.Version1);
    if (v1 <= 0x3F)
    {
      sub_2408E57A4();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoToolQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2408E57A4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ContextProtoToolQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ContextProtoToolQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2408E57A4();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoToolQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ContextProtoToolQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ContextProtoToolQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoToolQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_33Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoToolQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_34Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2403FD2D8()
{
  return sub_2403FD2F0();
}

uint64_t sub_2403FD2F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoToolQueryOutput(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
      if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a2, 1, v11))
      {
        v13 = (char *)&loc_2403FD480 + 4 * byte_2408E95FE[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v14 = *(int *)(v7 + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = *(int *)(a3 + 20);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return a1;
}

uint64_t destroy for ContextProtoToolQueryOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v4 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(a1, 1, v5))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 2u:
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
          v7 = (_QWORD *)(a1 + v6[17]);
          v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
          {
            if ((~*v7 & 0xF000000000000007) != 0)
              swift_release();
            v9 = (char *)v7 + *(int *)(v8 + 20);
            v10 = sub_2408E57A4();
            (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          }
          swift_bridgeObjectRelease();
          v11 = a1 + v6[19];
          v12 = type metadata accessor for ToolKitProtoAppDefinition(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v13 = v11 + *(int *)(v12 + 40);
            v14 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
            {
              if (*(_QWORD *)(v13 + 8) != 1)
                swift_bridgeObjectRelease();
              v15 = v13 + *(int *)(v14 + 20);
              v16 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
            }
            v17 = v11 + *(int *)(v12 + 44);
            v18 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
          }
          swift_bridgeObjectRelease();
          v19 = a1 + v6[21];
          v20 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v21 = v19 + *(int *)(v20 + 24);
            v22 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
          }
          v23 = a1 + v6[22];
          v24 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24))
          {
            v25 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v23, 1, v25))
            {
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              swift_bridgeObjectRelease();
              if (EnumCaseMultiPayload == 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v27 = v23
                    + *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                             + 32);
                v28 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
              }
            }
            v29 = v23 + *(int *)(v24 + 20);
            v30 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
          }
          v31 = a1 + v6[23];
          v32 = type metadata accessor for ToolKitProtoContainerDefinition(0);
          v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48);
          if (!v33(v31, 1, v32))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v34 = v31 + *(int *)(v32 + 40);
            v35 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35))
            {
              if (*(_QWORD *)(v34 + 8) != 1)
                swift_bridgeObjectRelease();
              v36 = v34 + *(int *)(v35 + 20);
              v37 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
            }
            v38 = v31 + *(int *)(v32 + 44);
            v39 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
          }
          v40 = a1 + v6[24];
          if (!v33(v40, 1, v32))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v41 = v40 + *(int *)(v32 + 40);
            v42 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42))
            {
              if (*(_QWORD *)(v41 + 8) != 1)
                swift_bridgeObjectRelease();
              v43 = v41 + *(int *)(v42 + 20);
              v44 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
            }
            v45 = v40 + *(int *)(v32 + 44);
            v46 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
          }
          v47 = v6[25];
          goto LABEL_37;
        case 1u:
          swift_bridgeObjectRelease();
          v48 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
          v49 = a1 + *(int *)(v48 + 20);
          v50 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50))
          {
            v51 = v49 + *(int *)(v50 + 28);
            v52 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
          }
          v47 = *(int *)(v48 + 24);
LABEL_37:
          v53 = a1 + v47;
          v54 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
          break;
        default:
          break;
      }
    }
    v55 = a1 + *(int *)(v4 + 20);
    v56 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
  }
  v57 = a1 + *(int *)(a2 + 20);
  v58 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
}

char *initializeWithCopy for ContextProtoToolQueryOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a2, 1, v9))
    {
      v11 = (char *)&loc_2403FF150 + 4 * byte_2408E960A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    v12 = *(int *)(v6 + 20);
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

char *assignWithCopy for ContextProtoToolQueryOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.Definition);
      goto LABEL_7;
    }
    v14 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
    v16 = v15(a1, 1, v14);
    v17 = v15(a2, 1, v14);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_24040082C + 4 * word_2408E9616[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
          v21 = (char *)&loc_240400F08 + 4 * word_2408E961E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_240388AE4((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v6 + 20);
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v10)
  {
LABEL_7:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_18;
  }
  v11 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a2, 1, v11))
  {
    v19 = (char *)&loc_2404009C4 + 4 * word_2408E960E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  v22 = *(int *)(v6 + 20);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  v30 = *(int *)(a3 + 20);
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

char *initializeWithTake for ContextProtoToolQueryOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a2, 1, v9))
    {
      v11 = (char *)&loc_24040472C + 4 * byte_2408E9626[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    v12 = *(int *)(v6 + 20);
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

char *assignWithTake for ContextProtoToolQueryOutput(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  v6 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.Definition);
      goto LABEL_7;
    }
    v14 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
    v16 = v15(a1, 1, v14);
    v17 = v15(a2, 1, v14);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_24040521C + 4 * word_2408E962E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
          v21 = (char *)&loc_240405534 + 4 * word_2408E9636[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_240388AE4((uint64_t)a1, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v6 + 20);
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v10)
  {
LABEL_7:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_18;
  }
  v11 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a2, 1, v11))
  {
    v19 = (char *)&loc_2404052FC + 4 * byte_2408E962A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  v22 = *(int *)(v6 + 20);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  v30 = *(int *)(a3 + 20);
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoToolQueryOutput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240407FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFB050);
}

uint64_t __swift_get_extra_inhabitant_index_9Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
  {
    v9 = v7;
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v11 = a1;
  }
  else
  {
    v9 = sub_2408E57A4();
    v11 = a1 + *(int *)(a3 + 20);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  }
  return v10(v11, a2, v9);
}

uint64_t storeEnumTagSinglePayload for ContextProtoToolQueryOutput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240408064(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFB050);
}

uint64_t __swift_store_extra_inhabitant_index_10Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    v11 = v9;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v13 = a1;
  }
  else
  {
    v11 = sub_2408E57A4();
    v13 = a1 + *(int *)(a4 + 20);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  }
  return v12(v13, a2, a2, v11);
}

void sub_2404080EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_256FFBBA8, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedTool.Definition);
}

void sub_240408100(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_2403C8BE4(319, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_2408E57A4();
    if (v6 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoToolRetrievalResponse(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 8);
    v7 = a2[6];
    v8 = *(int *)(a3 + 36);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    v11 = sub_2408E57A4();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoToolRetrievalResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v10 = sub_2408E57A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoToolRetrievalResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoQueryDecorationToolRetrievalResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240408568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoQueryDecorationToolRetrievalResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2404085F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_240408664()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoSpanMatchedEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for ToolKitProtoTypedValue(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = *v10;
      if ((~*v10 & 0xF000000000000007) != 0)
        swift_retain();
      *v9 = v15;
      v16 = *(int *)(v11 + 20);
      v17 = (char *)v9 + v16;
      v18 = (char *)v10 + v16;
      v19 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v20 = *(int *)(a3 + 24);
    v21 = (char *)v7 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v7;
}

uint64_t destroy for ContextProtoSpanMatchedEntity(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)v4 + *(int *)(v5 + 20);
    v7 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for ContextProtoSpanMatchedEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoTypedValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = *v8;
    if ((~*v8 & 0xF000000000000007) != 0)
      swift_retain();
    *v7 = v13;
    v14 = *(int *)(v9 + 20);
    v15 = (char *)v7 + v14;
    v16 = (char *)v8 + v14;
    v17 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoSpanMatchedEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoTypedValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
      goto LABEL_8;
    }
    v25 = *v8;
    v26 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v26 != 0xF000000000000007)
      {
        *v7 = v25;
        swift_retain();
        swift_release();
        goto LABEL_17;
      }
      sub_2403C66E0((uint64_t)v7);
      v25 = *v8;
    }
    else if (v26 != 0xF000000000000007)
    {
      *v7 = v25;
      swift_retain();
LABEL_17:
      v27 = *(int *)(v9 + 20);
      v28 = (char *)v7 + v27;
      v29 = (char *)v8 + v27;
      v30 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
      goto LABEL_9;
    }
    *v7 = v25;
    goto LABEL_17;
  }
  if (v13)
  {
LABEL_8:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_9;
  }
  v14 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v14;
  v15 = *(int *)(v9 + 20);
  v16 = (char *)v7 + v15;
  v17 = (char *)v8 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_9:
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_QWORD *initializeWithTake for ContextProtoSpanMatchedEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoTypedValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithTake for ContextProtoSpanMatchedEntity(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for ToolKitProtoTypedValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *v7 = *v8;
      v14 = *(int *)(v9 + 20);
      v15 = (char *)v7 + v14;
      v16 = (char *)v8 + v14;
      v17 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  if (v13)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    goto LABEL_6;
  }
  v24 = *v8;
  if ((~*v7 & 0xF000000000000007) != 0)
  {
    if ((~v24 & 0xF000000000000007) != 0)
    {
      *v7 = v24;
      swift_release();
    }
    else
    {
      sub_2403C66E0((uint64_t)v7);
      *v7 = *v8;
    }
  }
  else
  {
    *v7 = v24;
  }
  v25 = *(int *)(v9 + 20);
  v26 = (char *)v7 + v25;
  v27 = (char *)v8 + v25;
  v28 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoSpanMatchedEntity()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240408F44(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoSpanMatchedEntity()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_240408FF4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_240409094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, MEMORY[0x24BEE0158] + 64, &qword_256FFB188, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue);
}

void sub_2404090B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v6;
  unint64_t v7;

  sub_2403C8BE4(319, a5, a6);
  if (v6 <= 0x3F)
  {
    sub_2408E57A4();
    if (v7 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoEntityMatch(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t matched;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v43;
  char *v44;
  char *v45;
  _QWORD *__dst;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_DWORD *)(a1 + 48) = *((_DWORD *)a2 + 12);
    *(_BYTE *)(a1 + 52) = *((_BYTE *)a2 + 52);
    v8 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v8;
    v9 = a2[10];
    v10 = a3[12];
    __dst = (_QWORD *)(a1 + v10);
    v11 = (char *)a2 + v10;
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v9;
    matched = type metadata accessor for ContextProtoMatchProperties(0);
    v13 = *(_QWORD *)(matched - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    v15 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, matched))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB068);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = __dst;
      *__dst = *(_QWORD *)v15;
      *((_BYTE *)__dst + 8) = v15[8];
      __dst[2] = *((_QWORD *)v15 + 2);
      *((_BYTE *)__dst + 24) = v15[24];
      v19 = *(int *)(matched + 24);
      v20 = (_QWORD *)((char *)__dst + v19);
      v45 = v15;
      v21 = &v15[v19];
      v22 = type metadata accessor for ContextProtoAliasTypes(0);
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        *v20 = *(_QWORD *)v21;
        v25 = *(int *)(v22 + 20);
        v43 = &v21[v25];
        v44 = (char *)v20 + v25;
        v26 = sub_2408E57A4();
        v27 = matched;
        v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v44, v43, v26);
        matched = v27;
        v18 = __dst;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
      v29 = *(int *)(matched + 28);
      v30 = (char *)v18 + v29;
      v31 = &v45[v29];
      v32 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, matched);
    }
    v33 = a3[13];
    v34 = a3[14];
    v35 = (_QWORD *)((char *)v4 + v33);
    v36 = (uint64_t *)((char *)a2 + v33);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = (char *)v4 + v34;
    v39 = (uint64_t)a2 + v34;
    v40 = sub_2408E57A4();
    v41 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
    swift_bridgeObjectRetain();
    v41(v38, v39, v40);
  }
  return v4;
}

uint64_t destroy for ContextProtoEntityMatch(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t matched;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 48))(v4, 1, matched))
  {
    v6 = v4 + *(int *)(matched + 24);
    v7 = type metadata accessor for ContextProtoAliasTypes(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_bridgeObjectRelease();
      v8 = v6 + *(int *)(v7 + 20);
      v9 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = v4 + *(int *)(matched + 28);
    v11 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  v12 = a1 + *(int *)(a2 + 56);
  v13 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

uint64_t initializeWithCopy for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t matched;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *__dst;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  v9 = a3[12];
  __dst = (_QWORD *)(a1 + v9);
  v10 = (_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  v12 = *(_QWORD *)(matched - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, matched))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB068);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v41 = v12;
    *__dst = *v10;
    *((_BYTE *)__dst + 8) = *((_BYTE *)v10 + 8);
    __dst[2] = v10[2];
    *((_BYTE *)__dst + 24) = *((_BYTE *)v10 + 24);
    v15 = *(int *)(matched + 24);
    v16 = (_QWORD *)((char *)__dst + v15);
    v17 = (_QWORD *)((char *)v10 + v15);
    v18 = type metadata accessor for ContextProtoAliasTypes(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = matched;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      *v16 = *v17;
      v22 = *(int *)(v18 + 20);
      v39 = (char *)v16 + v22;
      v40 = (char *)v17 + v22;
      v23 = sub_2408E57A4();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v39, v40, v23);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v25 = *(int *)(matched + 28);
    v26 = (char *)__dst + v25;
    v27 = (char *)v10 + v25;
    v28 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v20);
  }
  v29 = a3[13];
  v30 = a3[14];
  v31 = (_QWORD *)(a1 + v29);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = a1 + v30;
  v35 = a2 + v30;
  v36 = sub_2408E57A4();
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
  swift_bridgeObjectRetain();
  v37(v34, v35, v36);
  return a1;
}

uint64_t assignWithCopy for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t matched;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD *, uint64_t, uint64_t);
  int v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  _QWORD *__dst;
  _QWORD *__dsta;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[12];
  v7 = a1 + v6;
  v8 = (uint64_t *)(a2 + v6);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  v10 = *(_QWORD *)(matched - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, matched);
  v13 = v11((uint64_t)v8, 1, matched);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4(v7, type metadata accessor for ContextProtoMatchProperties);
      goto LABEL_7;
    }
    v22 = *v8;
    *(_BYTE *)(v7 + 8) = *((_BYTE *)v8 + 8);
    *(_QWORD *)v7 = v22;
    v23 = v8[2];
    *(_BYTE *)(v7 + 24) = *((_BYTE *)v8 + 24);
    *(_QWORD *)(v7 + 16) = v23;
    v24 = *(int *)(matched + 24);
    v25 = (_QWORD *)(v7 + v24);
    v26 = (uint64_t *)((char *)v8 + v24);
    v27 = type metadata accessor for ContextProtoAliasTypes(0);
    v61 = *(_QWORD *)(v27 - 8);
    __dsta = v25;
    v28 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v61 + 48);
    LODWORD(v25) = v28(v25, 1, v27);
    v29 = v28(v26, 1, v27);
    if ((_DWORD)v25)
    {
      if (!v29)
      {
        *__dsta = *v26;
        v38 = *(int *)(v27 + 20);
        v58 = (char *)v26 + v38;
        v60 = (char *)__dsta + v38;
        v39 = sub_2408E57A4();
        v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v57(v60, v58, v39);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v61 + 56))(__dsta, 0, 1, v27);
        goto LABEL_18;
      }
      v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070) - 8) + 64);
      v31 = __dsta;
    }
    else
    {
      if (!v29)
      {
        *__dsta = *v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v40 = *(int *)(v27 + 20);
        v41 = (char *)__dsta + v40;
        v42 = (char *)v26 + v40;
        v43 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
        goto LABEL_18;
      }
      sub_240388AE4((uint64_t)__dsta, type metadata accessor for ContextProtoAliasTypes);
      v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070) - 8) + 64);
      v31 = __dsta;
    }
    memcpy(v31, v26, v30);
LABEL_18:
    v44 = *(int *)(matched + 28);
    v45 = v7 + v44;
    v46 = (uint64_t)v8 + v44;
    v47 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB068);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  v14 = *v8;
  *(_BYTE *)(v7 + 8) = *((_BYTE *)v8 + 8);
  *(_QWORD *)v7 = v14;
  v15 = v8[2];
  *(_BYTE *)(v7 + 24) = *((_BYTE *)v8 + 24);
  *(_QWORD *)(v7 + 16) = v15;
  v16 = *(int *)(matched + 24);
  __dst = (_QWORD *)(v7 + v16);
  v17 = (uint64_t *)((char *)v8 + v16);
  v18 = type metadata accessor for ContextProtoAliasTypes(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *__dst = *v17;
    v32 = *(int *)(v18 + 20);
    v59 = (char *)v17 + v32;
    v62 = (char *)__dst + v32;
    v33 = sub_2408E57A4();
    v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
    swift_bridgeObjectRetain();
    v56(v62, v59, v33);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  v34 = *(int *)(matched + 28);
  v35 = v7 + v34;
  v36 = (uint64_t)v8 + v34;
  v37 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, matched);
LABEL_19:
  v48 = a3[13];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = a3[14];
  v52 = a1 + v51;
  v53 = a2 + v51;
  v54 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

uint64_t initializeWithTake for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t matched;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v30;
  _QWORD *__dst;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = a3[12];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  v11 = *(_QWORD *)(matched - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, matched))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB068);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    *((_BYTE *)v8 + 8) = *((_BYTE *)v9 + 8);
    v8[2] = v9[2];
    *((_BYTE *)v8 + 24) = *((_BYTE *)v9 + 24);
    v13 = *(int *)(matched + 24);
    __dst = (_QWORD *)((char *)v8 + v13);
    v14 = (_QWORD *)((char *)v9 + v13);
    v15 = type metadata accessor for ContextProtoAliasTypes(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *__dst = *v14;
      v18 = *(int *)(v15 + 20);
      v30 = (char *)__dst + v18;
      v19 = (char *)v14 + v18;
      v20 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v30, v19, v20);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    v21 = *(int *)(matched + 28);
    v22 = (char *)v8 + v21;
    v23 = (char *)v9 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, matched);
  }
  v25 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  return a1;
}

uint64_t assignWithTake for ContextProtoEntityMatch(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t matched;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  _QWORD *__dst;
  char *__dsta;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  v10 = a3[12];
  v11 = a1 + v10;
  v12 = a2 + v10;
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  v14 = *(_QWORD *)(matched - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, matched);
  v17 = v15(v12, 1, matched);
  if (!v16)
  {
    if (v17)
    {
      sub_240388AE4(v11, type metadata accessor for ContextProtoMatchProperties);
      goto LABEL_7;
    }
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
    *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
    *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
    v24 = *(int *)(matched + 24);
    v25 = (_QWORD *)(v11 + v24);
    v26 = (char *)(v12 + v24);
    v27 = type metadata accessor for ContextProtoAliasTypes(0);
    v61 = *(_QWORD *)(v27 - 8);
    v62 = v25;
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48);
    LODWORD(v25) = v28((char *)v25, 1, v27);
    __dsta = v26;
    v29 = v28(v26, 1, v27);
    if ((_DWORD)v25)
    {
      if (!v29)
      {
        *v62 = *(_QWORD *)v26;
        v39 = *(int *)(v27 + 20);
        v40 = (char *)v62 + v39;
        v41 = &v26[v39];
        v42 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v62, 0, 1, v27);
        goto LABEL_18;
      }
      v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070) - 8) + 64);
      v31 = v62;
    }
    else
    {
      if (!v29)
      {
        *v62 = *(_QWORD *)v26;
        swift_bridgeObjectRelease();
        v43 = *(int *)(v27 + 20);
        v44 = (char *)v62 + v43;
        v45 = &__dsta[v43];
        v46 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
        goto LABEL_18;
      }
      sub_240388AE4((uint64_t)v62, type metadata accessor for ContextProtoAliasTypes);
      v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070) - 8) + 64);
      v31 = v62;
    }
    memcpy(v31, v26, v30);
LABEL_18:
    v47 = *(int *)(matched + 28);
    v48 = v11 + v47;
    v49 = v12 + v47;
    v50 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 40))(v48, v49, v50);
    goto LABEL_19;
  }
  if (v17)
  {
LABEL_7:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB068);
    memcpy((void *)v11, (const void *)v12, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_19;
  }
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  *(_BYTE *)(v11 + 24) = *(_BYTE *)(v12 + 24);
  v18 = *(int *)(matched + 24);
  __dst = (_QWORD *)(v11 + v18);
  v19 = (_QWORD *)(v12 + v18);
  v20 = type metadata accessor for ContextProtoAliasTypes(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
    memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *__dst = *v19;
    v32 = *(int *)(v20 + 20);
    v63 = (char *)__dst + v32;
    v33 = (char *)v19 + v32;
    v34 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v63, v33, v34);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
  }
  v35 = *(int *)(matched + 28);
  v36 = v11 + v35;
  v37 = v12 + v35;
  v38 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, matched);
LABEL_19:
  v51 = a3[13];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (uint64_t *)(a2 + v51);
  v55 = *v53;
  v54 = v53[1];
  *v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  v56 = a3[14];
  v57 = a1 + v56;
  v58 = a2 + v56;
  v59 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoEntityMatch()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24040A27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB068);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 48);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 56);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoEntityMatch()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24040A32C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB068);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 48);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 56);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_24040A3CC()
{
  unint64_t v0;
  unint64_t v1;

  sub_2403C8BE4(319, qword_256FFC178, (void (*)(uint64_t))type metadata accessor for ContextProtoMatchProperties);
  if (v0 <= 0x3F)
  {
    sub_2408E57A4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for ContextProtoMatchProperties(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for ContextProtoAliasTypes(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *v8 = *v9;
      v14 = *(int *)(v10 + 20);
      v15 = (char *)v8 + v14;
      v23 = (char *)v9 + v14;
      v16 = sub_2408E57A4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v15, v23, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v18 = *(int *)(a3 + 28);
    v19 = (char *)v4 + v18;
    v20 = (uint64_t)a2 + v18;
    v21 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return v4;
}

uint64_t destroy for ContextProtoMatchProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for ContextProtoAliasTypes(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for ContextProtoMatchProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v21;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoAliasTypes(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v21 = (char *)v8 + v12;
    v14 = sub_2408E57A4();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v13, v21, v14);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 28);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

uint64_t assignWithCopy for ContextProtoMatchProperties(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)((char *)a2 + v8);
  v11 = type metadata accessor for ContextProtoAliasTypes(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      *v9 = *v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v26 = *(int *)(v11 + 20);
      v27 = (char *)v9 + v26;
      v28 = (char *)v10 + v26;
      v29 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v9, type metadata accessor for ContextProtoAliasTypes);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *v9 = *v10;
  v16 = *(int *)(v11 + 20);
  v17 = (char *)v9 + v16;
  v30 = (char *)v10 + v16;
  v18 = sub_2408E57A4();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v17, v30, v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v21 = *(int *)(a3 + 28);
  v22 = a1 + v21;
  v23 = (uint64_t)a2 + v21;
  v24 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t initializeWithTake for ContextProtoMatchProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoAliasTypes(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 28);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for ContextProtoMatchProperties(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for ContextProtoAliasTypes(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *v7 = *v8;
      swift_bridgeObjectRelease();
      v24 = *(int *)(v9 + 20);
      v25 = (char *)v7 + v24;
      v26 = (char *)v8 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoAliasTypes);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v14 = *(int *)(v9 + 20);
  v15 = (char *)v7 + v14;
  v16 = (char *)v8 + v14;
  v17 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v19 = *(int *)(a3 + 28);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoMatchProperties()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24040ACB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 24);
  }
  else
  {
    v8 = sub_2408E57A4();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 28);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ContextProtoMatchProperties()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24040AD34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 24);
  }
  else
  {
    v10 = sub_2408E57A4();
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 28);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_24040ADB0()
{
  unint64_t v0;
  unint64_t v1;

  sub_2403C8BE4(319, qword_256FFC238, (void (*)(uint64_t))type metadata accessor for ContextProtoAliasTypes);
  if (v0 <= 0x3F)
  {
    sub_2408E57A4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ContextProtoAliasTypes(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2408E57A4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for ContextProtoAliasTypes(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ContextProtoAliasTypes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2408E57A4();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for ContextProtoAliasTypes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *initializeWithTake for ContextProtoAliasTypes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ContextProtoAliasTypes(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContextProtoAliasTypes()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24040B0E8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ContextProtoAliasTypes()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24040B170(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E57A4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_24040B1E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24040B25C()
{
  unint64_t result;

  result = qword_256FFC300;
  if (!qword_256FFC300)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoRetrievedTool.Stage, &type metadata for ContextProtoRetrievedTool.Stage);
    atomic_store(result, (unint64_t *)&qword_256FFC300);
  }
  return result;
}

unint64_t sub_24040B2A0()
{
  unint64_t result;

  result = qword_256FFC308;
  if (!qword_256FFC308)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoAliasTypesOptions, &type metadata for ContextProtoAliasTypesOptions);
    atomic_store(result, (unint64_t *)&qword_256FFC308);
  }
  return result;
}

unint64_t sub_24040B2E4()
{
  unint64_t result;

  result = qword_256FFC310;
  if (!qword_256FFC310)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoEntityMatcherType, &type metadata for ContextProtoEntityMatcherType);
    atomic_store(result, (unint64_t *)&qword_256FFC310);
  }
  return result;
}

unint64_t sub_24040B328()
{
  unint64_t result;

  result = qword_256FFC318;
  if (!qword_256FFC318)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoQueryDecorationCaller, &type metadata for ContextProtoQueryDecorationCaller);
    atomic_store(result, (unint64_t *)&qword_256FFC318);
  }
  return result;
}

unint64_t sub_24040B36C()
{
  unint64_t result;

  result = qword_256FFC320;
  if (!qword_256FFC320)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoConfidenceBucket, &type metadata for ContextProtoConfidenceBucket);
    atomic_store(result, (unint64_t *)&qword_256FFC320);
  }
  return result;
}

unint64_t sub_24040B3B0()
{
  unint64_t result;

  result = qword_256FFC328;
  if (!qword_256FFC328)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUserClassification, &type metadata for ContextProtoStructuredContextSiriRequestContextUserClassification);
    atomic_store(result, (unint64_t *)&qword_256FFC328);
  }
  return result;
}

unint64_t sub_24040B3F4()
{
  unint64_t result;

  result = qword_256FFC330;
  if (!qword_256FFC330)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoContextType, &type metadata for ContextProtoContextType);
    atomic_store(result, (unint64_t *)&qword_256FFC330);
  }
  return result;
}

uint64_t sub_24040B438(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC338);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24040B554(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0;
  result = MEMORY[0x24BEE4AF8];
  v14 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = type metadata accessor for TranscriptProtoParameterSet(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_24040B6C4(v9, (uint64_t)v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
      v11 = sub_2403B0734((uint64_t)v4);
      sub_24040B708((uint64_t)v4);
      if (v11)
      {
        v12 = v11;
        MEMORY[0x242683B40]();
        if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2408E5DBC();
        sub_2408E5DD4();
        sub_2408E5DB0();

      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

uint64_t sub_24040B6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoParameterSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24040B708(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_24040B748(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC348);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94E88]), sel_init);
  if (v14)
  {
    sub_2403A9210(a1, (uint64_t)v10, &qword_256FFC348);
    v15 = type metadata accessor for ToolKitProtoTypedValue.EntityValue(0);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
    if (v16(v10, 1, v15) == 1)
    {
      v17 = v14;
      sub_2403A97FC((uint64_t)v10, &qword_256FFC348);
      v18 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 1, 1, v18);
    }
    else
    {
      sub_2403A9210((uint64_t)&v10[*(int *)(v15 + 24)], (uint64_t)v13, &qword_256FFA7F8);
      v19 = v14;
      sub_24040BA30((uint64_t)v10);
    }
    v20 = sub_2403B4C08((uint64_t)v13);
    sub_2403A97FC((uint64_t)v13, &qword_256FFA7F8);
    objc_msgSend(v14, sel_setTypeIdentifier_, v20);

    sub_2403A9210(a1, (uint64_t)v8, &qword_256FFC348);
    if (v16(v8, 1, v15) == 1)
    {
      v21 = v14;
      sub_2403A97FC((uint64_t)v8, &qword_256FFC348);
      v22 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v4, 1, 1, v22);
    }
    else
    {
      sub_2403A9210((uint64_t)&v8[*(int *)(v15 + 28)], (uint64_t)v4, &qword_256FFC340);
      v23 = v14;
      sub_24040BA30((uint64_t)v8);
    }
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94E80]), sel_init);
    v25 = v24;
    if (v24)
      objc_msgSend(v24, sel_setExists_, 1);
    sub_2403A97FC((uint64_t)v4, &qword_256FFC340);
    objc_msgSend(v14, sel_setDisplayRepresentation_, v25);

  }
  return v14;
}

uint64_t sub_24040BA30(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ToolKitProtoTypedValue.EntityValue(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24040BA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (!a2)
    return 0;
  if (a1 == 0x616E6964726F6F63 && a2 == 0xEB00000000726F74 || (sub_2408E617C() & 1) != 0)
    return 1;
  if (a1 == 0x746E65696C63 && a2 == 0xE600000000000000 || (sub_2408E617C() & 1) != 0)
    return 2;
  if (a1 == 0x726F747563657865 && a2 == 0xE800000000000000 || (sub_2408E617C() & 1) != 0)
    return 3;
  if (a1 == 0x72656E6E616C70 && a2 == 0xE700000000000000 || (sub_2408E617C() & 1) != 0)
    return 4;
  v4 = 6;
  if (a1 != 0x624F6E6F69746361 || a2 != 0xEE00726576726573)
  {
    if ((sub_2408E617C() & 1) != 0)
      return 6;
    else
      return 0;
  }
  return v4;
}

id sub_24040BC68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v18;
  unint64_t v19;

  v2 = sub_2408E5C48();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18 - v10;
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FD0]), sel_init);
  if (v12)
  {
    sub_24040BF64(a1, (uint64_t)v11);
    v13 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13) != 1)
    {
      sub_24040BF64((uint64_t)v11, (uint64_t)v9);
      v16 = (char *)&loc_24040BE7C + 4 * byte_2408EA6E0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    if (qword_254355DF0 != -1)
      swift_once();
    v14 = __swift_project_value_buffer(v2, (uint64_t)qword_254356428);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v14, v2);
    v18 = 0;
    v19 = 0xE000000000000000;
    sub_2408E5F84();
    swift_bridgeObjectRelease();
    v18 = 0xD000000000000026;
    v19 = 0x8000000240922210;
    type metadata accessor for TranscriptProtoSessionError(0);
    sub_24040BFAC();
    sub_2408E599C();
    sub_2408E5D50();
    swift_bridgeObjectRelease();
    v15 = v18;
    LOBYTE(v18) = 98;
    sub_2408B4A30(v15, v19, (char *)&v18);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_24040BFF4((uint64_t)v11);
  }
  return v12;
}

uint64_t sub_24040BF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24040BFAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FFC350;
  if (!qword_256FFC350)
  {
    v1 = type metadata accessor for TranscriptProtoSessionError(255);
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoSessionError, v1);
    atomic_store(result, (unint64_t *)&qword_256FFC350);
  }
  return result;
}

uint64_t sub_24040BFF4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24040C034(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_24040C070(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v30;

  v2 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (unsigned __int8 *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v13, &qword_256FFA330);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v13, &qword_256FFA330);
    return 0;
  }
  else
  {
    sub_2403A91CC((uint64_t)v13, (uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95008]), sel_init);
    sub_2403A9210((uint64_t)v17, (uint64_t)v10, &qword_256FFA328);
    v19 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v10, 1, v19) == 1)
    {
LABEL_4:
      if (qword_254355DF0 != -1)
        swift_once();
      v20 = sub_2408E5C48();
      __swift_project_value_buffer(v20, (uint64_t)qword_254356428);
      v21 = sub_2408E5C3C();
      v22 = sub_2408E5EA0();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_240347000, v21, v22, "Unknown prompt resolution user action value", v23, 2u);
        MEMORY[0x242684668](v23, -1, -1);
      }

    }
    else
    {
      sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_256FFA328);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          if (v18)
            objc_msgSend(v18, sel_setIsActionConfirmed_, 1);
          break;
        case 2u:
          if (v18)
            objc_msgSend(v18, sel_setIsParameterConfirmed_, 1);
          break;
        case 4u:
          objc_msgSend(v18, sel_setDisambiguationIndexSelected_, *v8);
          break;
        case 5u:
          sub_2403A91CC((uint64_t)v8, (uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
          if (v18)
          {
            v25 = objc_allocWithZone(MEMORY[0x24BE95000]);
            v26 = v18;
            v27 = objc_msgSend(v25, (SEL)0x2510B5DC8);
            objc_msgSend(v26, sel_setRequirementAddressed_, v27);

            v28 = objc_msgSend(v26, sel_requirementAddressed);
            if (v28)
            {
              v29 = v28;
              objc_msgSend(v28, sel_setIsRequirementSatisfied_, *v4);

            }
          }
          sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
          break;
        default:
          sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
          goto LABEL_4;
      }
    }
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
    sub_2403A97FC((uint64_t)v10, &qword_256FFA328);
  }
  return v18;
}

void *sub_24040C488(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (unsigned int *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC358);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoClientAction(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v7, &qword_256FFC358);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v7, &qword_256FFC358);
    return 0;
  }
  else
  {
    sub_24040C710((uint64_t)v7, (uint64_t)v11);
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94E40]), sel_init);
    v12 = v13;
    if (v13)
    {
      objc_msgSend(v13, sel_setExists_, 1);
      v14 = (uint64_t)&v11[*(int *)(v8 + 36)];
      v15 = objc_allocWithZone(MEMORY[0x24BE94FD8]);
      v16 = v12;
      v17 = objc_msgSend(v15, sel_init);
      sub_2403A9210(v14, (uint64_t)v4, &qword_256FFA300);
      v18 = type metadata accessor for TranscriptProtoStatementID(0);
      if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v4, 1, v18) == 1)
      {
        sub_2403A97FC((uint64_t)v4, &qword_256FFA300);
      }
      else
      {
        v19 = *v4;
        sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementID);
        objc_msgSend(v17, sel_setIndex_, v19);
      }
      objc_msgSend(v16, sel_setStatementId_, v17);

      v20 = v16;
      swift_bridgeObjectRetain();
      v21 = (void *)sub_2408E5CE4();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_setToolId_, v21);

    }
    sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoClientAction);
  }
  return v12;
}

uint64_t sub_24040C710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoClientAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RequireInternalBuild.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t RequireInternalBuild.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24040C76C()
{
  return os_variant_has_internal_content();
}

uint64_t RequireInternalBuild.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t RequireInternalBuild.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequireInternalBuild()
{
  return objc_opt_self();
}

uint64_t method lookup function for RequireInternalBuild()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RequireInternalBuild.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of RequireInternalBuild.meetsDemand()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

void sub_24040C7E0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_24040C82C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_24040C89C + 4 * byte_2408EA755[a2]))(v2 - 4);
}

uint64_t sub_24040C89C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 - 4 && v2 == 0x8000000240921560)
    v3 = 1;
  else
    v3 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_24040C944(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x796C6B656577;
  else
    v3 = 0x796C696164;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x796C6B656577;
  else
    v5 = 0x796C696164;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_24040C9E0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000016;
  v3 = 0x8000000240921670;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000013;
    else
      v5 = 0xD000000000000019;
    if (v4 == 1)
      v6 = 0x8000000240921690;
    else
      v6 = 0x80000002409216B0;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000016;
  v6 = 0x8000000240921670;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000013;
    else
      v2 = 0xD000000000000019;
    if (v7 == 1)
      v3 = 0x8000000240921690;
    else
      v3 = 0x80000002409216B0;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24040CAD4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000019;
  else
    v3 = 0xD000000000000014;
  if (v2)
    v4 = 0x80000002409214F0;
  else
    v4 = 0x8000000240921510;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000019;
  else
    v5 = 0xD000000000000014;
  if ((a2 & 1) != 0)
    v6 = 0x8000000240921510;
  else
    v6 = 0x80000002409214F0;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_24040CB7C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_24040CBE8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_24040CCA4 + 4 * byte_2408EA761[a2]))(0x64656D7265746E69);
}

uint64_t sub_24040CCA4(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64656D7265746E69 && v1 == 0xEC00000065746169)
    v2 = 1;
  else
    v2 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_24040CDB4(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000012;
  else
    v3 = 0x6E776F6E6B6E55;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0x8000000240921340;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000012;
  else
    v5 = 0x6E776F6E6B6E55;
  if ((a2 & 1) != 0)
    v6 = 0x8000000240921340;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_24040CE5C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_24040CEAC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_24040CF8C + 4 * byte_2408EA771[a2]))(0x726568746FLL);
}

uint64_t sub_24040CF8C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x726568746FLL && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_24040D0D4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_24040D140(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_24040D1E8 + 4 * byte_2408EA780[a2]))(0x5364696C61766E69);
}

uint64_t sub_24040D1E8(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x5364696C61766E69 && v1 == 0xED00006D61657274)
    v2 = 1;
  else
    v2 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_24040D2C8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xD000000000000012;
  v3 = 0x8000000240921610;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000013;
    else
      v5 = 0xD000000000000014;
    if (v4 == 1)
      v6 = 0x8000000240921630;
    else
      v6 = 0x8000000240921650;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0xD000000000000012;
  v6 = 0x8000000240921610;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v2 = 0xD000000000000013;
    else
      v2 = 0xD000000000000014;
    if (v7 == 1)
      v3 = 0x8000000240921630;
    else
      v3 = 0x8000000240921650;
  }
LABEL_15:
  if (v5 == v2 && v6 == v3)
    v8 = 1;
  else
    v8 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24040D3BC(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000015;
  else
    v3 = 0xD000000000000011;
  if (v2)
    v4 = 0x8000000240921490;
  else
    v4 = 0x80000002409214B0;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000015;
  else
    v5 = 0xD000000000000011;
  if ((a2 & 1) != 0)
    v6 = 0x80000002409214B0;
  else
    v6 = 0x8000000240921490;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_24040D464(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_24040D4B0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_24040D528 + 4 * byte_2408EA78A[a2]))(0xD000000000000013);
}

uint64_t sub_24040D528(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000013 && v1 == 0x8000000240921690)
    v2 = 1;
  else
    v2 = sub_2408E617C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_24040D5E0(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_24040D628()
{
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24040D68C()
{
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

void sub_24040D708(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_24040D754()
{
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

void sub_24040D80C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_24040D858()
{
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

void sub_24040D8FC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_24040D93C()
{
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24040DA14()
{
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

void sub_24040DA90(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_24040DAD8()
{
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

void sub_24040DB44(uint64_t a1, char a2)
{
  sub_2408E6218();
  __asm { BR              X10 }
}

uint64_t sub_24040DB9C()
{
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

uint64_t sub_24040DC20()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

uint64_t sub_24040DCA0()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

void sub_24040DD40(uint64_t a1, char a2)
{
  sub_2408E6218();
  __asm { BR              X10 }
}

uint64_t sub_24040DD98()
{
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

void sub_24040DE50(uint64_t a1, char a2)
{
  sub_2408E6218();
  __asm { BR              X10 }
}

uint64_t sub_24040DEA8()
{
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

uint64_t sub_24040DF74()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

uint64_t sub_24040DFF4()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

void sub_24040E094(uint64_t a1, char a2)
{
  sub_2408E6218();
  __asm { BR              X10 }
}

uint64_t sub_24040E0EC()
{
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

uint64_t sub_24040E168(uint64_t a1)
{
  return sub_24040E17C(a1, &qword_256FFC3A0, &qword_256FFC3A8);
}

uint64_t sub_24040E17C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v5 = sub_2408E605C();
  }
  else
  {
    v5 = MEMORY[0x24BEE4B00];
  }
  v30 = a1 + 64;
  v6 = -1 << *(_BYTE *)(a1 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v6) >> 6;
  v9 = v5 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_28;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v29)
      goto LABEL_37;
    v17 = *(_QWORD *)(v30 + 8 * v16);
    v18 = v11 + 1;
    if (!v17)
    {
      v18 = v11 + 2;
      if (v11 + 2 >= v29)
        goto LABEL_37;
      v17 = *(_QWORD *)(v30 + 8 * v18);
      if (!v17)
      {
        v18 = v11 + 3;
        if (v11 + 3 >= v29)
          goto LABEL_37;
        v17 = *(_QWORD *)(v30 + 8 * v18);
        if (!v17)
        {
          v18 = v11 + 4;
          if (v11 + 4 >= v29)
            goto LABEL_37;
          v17 = *(_QWORD *)(v30 + 8 * v18);
          if (!v17)
            break;
        }
      }
    }
LABEL_27:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
    v11 = v18;
LABEL_28:
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v15);
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v15);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    result = sub_2408E5CA8();
    v22 = -1 << *(_BYTE *)(v5 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = 8 * v12;
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v13) = v20;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v13) = v21;
    ++*(_QWORD *)(v5 + 16);
  }
  v19 = v11 + 5;
  if (v11 + 5 >= v29)
  {
LABEL_37:
    swift_release();
    sub_240413CE4();
    return v5;
  }
  v17 = *(_QWORD *)(v30 + 8 * v19);
  if (v17)
  {
    v18 = v11 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v29)
      goto LABEL_37;
    v17 = *(_QWORD *)(v30 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t PlannerGrainLatency.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = PlannerGrainLatency.dictionary.getter();
  v1 = sub_2403AEB7C(v0, 1);
  v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
    return v1;
  else
    return 0xD00000000000002ALL;
}

uint64_t PlannerGrainLatency.dictionary.getter()
{
  const void *v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD __dst[82];

  v1 = v0;
  memcpy(__dst, v0, sizeof(__dst));
  sub_24040FE9C();
  v3 = v2;
  memcpy(__dst, v0, sizeof(__dst));
  v4 = sub_2404106F4();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  __dst[0] = v3;
  sub_24041299C(v4, (uint64_t)sub_24041295C, 0, isUniquelyReferenced_nonNull_native, (uint64_t)__dst);
  v6 = __dst[0];
  swift_bridgeObjectRelease();
  memcpy(__dst, v1, sizeof(__dst));
  v7 = sub_2404114E8();
  v8 = swift_isUniquelyReferenced_nonNull_native();
  __dst[0] = v6;
  sub_24041299C(v7, (uint64_t)sub_24041295C, 0, v8, (uint64_t)__dst);
  v9 = __dst[0];
  swift_bridgeObjectRelease();
  return v9;
}

__n128 sub_24040E5F4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12, __n128 *a13, char a14, __int128 a15, __int128 a16, __int128 a17, __int128 a18, __int128 a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37,uint64_t a38,char a39,uint64_t a40,char a41,uint64_t a42,char a43,uint64_t a44,char a45,uint64_t a46,char a47,uint64_t a48,char a49,uint64_t a50,char a51,uint64_t a52,char a53,uint64_t a54,char a55,uint64_t a56,char a57,uint64_t a58,char a59,uint64_t a60,char a61,uint64_t a62,char a63)
{
  uint64_t a64;
  char a65;
  uint64_t a66;
  char a67;
  __n128 result;

  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 80) = a11;
  *(_QWORD *)(a9 + 88) = a12;
  result = *a13;
  *(_BYTE *)(a9 + 112) = a13[1].n128_u8[0];
  *(_BYTE *)(a9 + 113) = a14;
  *(_QWORD *)(a9 + 200) = a20;
  *(_BYTE *)(a9 + 208) = a21 & 1;
  *(_QWORD *)(a9 + 216) = a22;
  *(_BYTE *)(a9 + 224) = a23 & 1;
  *(_QWORD *)(a9 + 232) = a24;
  *(_BYTE *)(a9 + 240) = a25 & 1;
  *(_QWORD *)(a9 + 248) = a26;
  *(_BYTE *)(a9 + 256) = a27 & 1;
  *(_QWORD *)(a9 + 264) = a28;
  *(_BYTE *)(a9 + 272) = a29 & 1;
  *(_QWORD *)(a9 + 280) = a30;
  *(_BYTE *)(a9 + 288) = a31 & 1;
  *(_QWORD *)(a9 + 296) = a32;
  *(_BYTE *)(a9 + 304) = a33 & 1;
  *(_QWORD *)(a9 + 312) = a34;
  *(_BYTE *)(a9 + 320) = a35 & 1;
  *(_QWORD *)(a9 + 328) = a36;
  *(_BYTE *)(a9 + 336) = a37 & 1;
  *(_QWORD *)(a9 + 344) = a38;
  *(_BYTE *)(a9 + 352) = a39 & 1;
  *(_QWORD *)(a9 + 360) = a40;
  *(_BYTE *)(a9 + 368) = a41 & 1;
  *(_QWORD *)(a9 + 376) = a42;
  *(_BYTE *)(a9 + 384) = a43 & 1;
  *(_QWORD *)(a9 + 392) = a44;
  *(_BYTE *)(a9 + 400) = a45 & 1;
  *(_QWORD *)(a9 + 408) = a46;
  *(_BYTE *)(a9 + 416) = a47 & 1;
  *(_QWORD *)(a9 + 424) = a48;
  *(_BYTE *)(a9 + 432) = a49 & 1;
  *(_QWORD *)(a9 + 440) = a50;
  *(_BYTE *)(a9 + 448) = a51 & 1;
  *(_QWORD *)(a9 + 456) = a52;
  *(_BYTE *)(a9 + 464) = a53 & 1;
  *(_QWORD *)(a9 + 472) = a54;
  *(_BYTE *)(a9 + 480) = a55 & 1;
  *(_QWORD *)(a9 + 488) = a56;
  *(_BYTE *)(a9 + 496) = a57 & 1;
  *(_QWORD *)(a9 + 504) = a58;
  *(_BYTE *)(a9 + 512) = a59 & 1;
  *(_QWORD *)(a9 + 520) = a60;
  *(_BYTE *)(a9 + 528) = a61 & 1;
  *(_QWORD *)(a9 + 536) = a62;
  *(_BYTE *)(a9 + 544) = a63 & 1;
  *(_QWORD *)(a9 + 552) = a64;
  *(_BYTE *)(a9 + 560) = a65 & 1;
  *(_QWORD *)(a9 + 568) = a66;
  *(_BYTE *)(a9 + 576) = a67 & 1;
  *(_QWORD *)(a9 + 584) = STACK[0x210];
  *(_BYTE *)(a9 + 592) = STACK[0x218] & 1;
  *(_QWORD *)(a9 + 600) = STACK[0x220];
  *(_BYTE *)(a9 + 608) = STACK[0x228] & 1;
  *(_QWORD *)(a9 + 616) = STACK[0x230];
  *(_BYTE *)(a9 + 624) = STACK[0x238] & 1;
  *(_QWORD *)(a9 + 632) = STACK[0x240];
  *(_BYTE *)(a9 + 640) = STACK[0x248] & 1;
  *(_QWORD *)(a9 + 648) = STACK[0x250];
  *(_OWORD *)(a9 + 64) = a10;
  *(__n128 *)(a9 + 96) = result;
  *(_OWORD *)(a9 + 120) = a15;
  *(_OWORD *)(a9 + 136) = a16;
  *(_OWORD *)(a9 + 152) = a17;
  *(_OWORD *)(a9 + 168) = a18;
  *(_OWORD *)(a9 + 184) = a19;
  return result;
}

unint64_t sub_24040E894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = PlannerGrainLatency.dictionary.getter();
  v1 = sub_2403AEB7C(v0, 1);
  v3 = v2;
  swift_bridgeObjectRelease();
  if (v3)
    return v1;
  else
    return 0xD00000000000002ALL;
}

uint64_t sub_24040E8F8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24040E938 + 4 * byte_2408EA7C3[a1]))(0x4174736575716572, 0xED00006E6F697463);
}

uint64_t sub_24040E938()
{
  return 0x64656D7265746E69;
}

unint64_t sub_24040E958()
{
  return 0xD000000000000015;
}

uint64_t sub_24040E9C4()
{
  return 0x6E776F6E6B6E75;
}

void sub_24040E9DC(char *a1)
{
  sub_24040CB7C(*a1);
}

void sub_24040E9E8()
{
  char *v0;

  sub_24040DE50(0, *v0);
}

void sub_24040E9F4(uint64_t a1)
{
  char *v1;

  sub_24040D708(a1, *v1);
}

void sub_24040E9FC(uint64_t a1)
{
  char *v1;

  sub_24040DE50(a1, *v1);
}

uint64_t sub_24040EA04@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_240413A34();
  *a1 = result;
  return result;
}

uint64_t sub_24040EA30@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_24040E8F8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t static PlannerGrainLatency.coreAnalyticsEventName.getter()
{
  return 0xD00000000000002ELL;
}

unint64_t PlannerGrainLatency.coreAnalyticsEventDictionary.getter()
{
  return sub_2403A864C(MEMORY[0x24BEE4AF8]);
}

uint64_t PlannerGrainLatency.coreAnalyticsShouldEmit.getter()
{
  return 0;
}

unint64_t sub_24040EA88()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_24040EAA4()
{
  uint64_t v0;
  double v1;
  int v2;
  double v3;
  int v4;
  double v5;
  int v6;
  double v7;
  int v8;
  double v9;
  int v10;
  double v11;
  int v12;
  double v13;
  int v14;
  uint64_t inited;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  unint64_t v23;
  uint64_t v24;

  v1 = *(double *)(v0 + 200);
  v2 = *(unsigned __int8 *)(v0 + 208);
  v3 = *(double *)(v0 + 248);
  v4 = *(unsigned __int8 *)(v0 + 256);
  v5 = *(double *)(v0 + 264);
  v6 = *(unsigned __int8 *)(v0 + 272);
  v7 = *(double *)(v0 + 344);
  v8 = *(unsigned __int8 *)(v0 + 352);
  v9 = *(double *)(v0 + 360);
  v10 = *(unsigned __int8 *)(v0 + 368);
  v11 = *(double *)(v0 + 376);
  v12 = *(unsigned __int8 *)(v0 + 384);
  v13 = *(double *)(v0 + 392);
  v14 = *(unsigned __int8 *)(v0 + 400);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC378);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2408EAD90;
  *(_QWORD *)(inited + 32) = swift_getKeyPath();
  if (v2)
    v16 = 0.0;
  else
    v16 = v1;
  *(double *)(inited + 40) = v16;
  *(_QWORD *)(inited + 48) = swift_getKeyPath();
  if (v4)
    v17 = 0.0;
  else
    v17 = v3;
  *(double *)(inited + 56) = v17;
  *(_QWORD *)(inited + 64) = swift_getKeyPath();
  if (v6)
    v18 = 0.0;
  else
    v18 = v5;
  *(double *)(inited + 72) = v18;
  *(_QWORD *)(inited + 80) = swift_getKeyPath();
  if (v8)
    v19 = 0.0;
  else
    v19 = v7;
  *(double *)(inited + 88) = v19;
  *(_QWORD *)(inited + 96) = swift_getKeyPath();
  if (v10)
    v20 = 0.0;
  else
    v20 = v9;
  *(double *)(inited + 104) = v20;
  *(_QWORD *)(inited + 112) = swift_getKeyPath();
  if (v12)
    v21 = 0.0;
  else
    v21 = v11;
  *(double *)(inited + 120) = v21;
  *(_QWORD *)(inited + 128) = swift_getKeyPath();
  if (v14)
    v22 = 0.0;
  else
    v22 = v13;
  *(double *)(inited + 136) = v22;
  v23 = sub_2403A8778(inited);
  v24 = sub_24040E17C(v23, &qword_256FFC380, &qword_256FFC388);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_24040EC5C()
{
  uint64_t v0;
  double v1;
  int v2;
  double v3;
  int v4;
  double v5;
  int v6;
  double v7;
  int v8;
  double v9;
  int v10;
  double v11;
  int v12;
  double v13;
  int v14;
  uint64_t inited;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  unint64_t v23;
  uint64_t v24;

  v1 = *(double *)(v0 + 216);
  v2 = *(unsigned __int8 *)(v0 + 224);
  v3 = *(double *)(v0 + 232);
  v4 = *(unsigned __int8 *)(v0 + 240);
  v5 = *(double *)(v0 + 280);
  v6 = *(unsigned __int8 *)(v0 + 288);
  v7 = *(double *)(v0 + 296);
  v8 = *(unsigned __int8 *)(v0 + 304);
  v9 = *(double *)(v0 + 312);
  v10 = *(unsigned __int8 *)(v0 + 320);
  v11 = *(double *)(v0 + 328);
  v12 = *(unsigned __int8 *)(v0 + 336);
  v13 = *(double *)(v0 + 408);
  v14 = *(unsigned __int8 *)(v0 + 416);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC378);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2408EAD90;
  *(_QWORD *)(inited + 32) = swift_getKeyPath();
  if (v10)
    v16 = 0.0;
  else
    v16 = v9;
  *(double *)(inited + 40) = v16;
  *(_QWORD *)(inited + 48) = swift_getKeyPath();
  if (v12)
    v17 = 0.0;
  else
    v17 = v11;
  *(double *)(inited + 56) = v17;
  *(_QWORD *)(inited + 64) = swift_getKeyPath();
  if (v8)
    v18 = 0.0;
  else
    v18 = v7;
  *(double *)(inited + 72) = v18;
  *(_QWORD *)(inited + 80) = swift_getKeyPath();
  if (v14)
    v19 = 0.0;
  else
    v19 = v13;
  *(double *)(inited + 88) = v19;
  *(_QWORD *)(inited + 96) = swift_getKeyPath();
  if (v6)
    v20 = 0.0;
  else
    v20 = v5;
  *(double *)(inited + 104) = v20;
  *(_QWORD *)(inited + 112) = swift_getKeyPath();
  if (v2)
    v21 = 0.0;
  else
    v21 = v1;
  *(double *)(inited + 120) = v21;
  *(_QWORD *)(inited + 128) = swift_getKeyPath();
  if (v4)
    v22 = 0.0;
  else
    v22 = v3;
  *(double *)(inited + 136) = v22;
  v23 = sub_2403A8778(inited);
  v24 = sub_24040E17C(v23, &qword_256FFC380, &qword_256FFC388);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t PlannerGrainLatency.SELFShouldEmit.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  if (!v1)
    return 0;
  if (*(_QWORD *)(v0 + 48) == 0xD00000000000001ELL && v1 == 0x8000000240921BB0)
    return 1;
  return sub_2408E617C();
}

void __swiftcall PlannerGrainLatency.createSELFEvent()(PNRProvisionalSagePnRWrapper_optional *__return_ptr retstr)
{
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[84];

  v12 = *(unsigned __int8 *)(v1 + 113);
  v2 = objc_msgSend(objc_allocWithZone((Class)PNRProvisionalSagePnRWrapper), sel_init);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(objc_allocWithZone((Class)PNRProvisionalSagePnREvent), sel_init);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(objc_allocWithZone((Class)PNRProvisionalSagePnRMetadata), sel_init);
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(objc_allocWithZone((Class)PNRProvisionalPlannerGrainMetricsDimension), sel_init);
        if (v8)
        {
          v13[82] = v8;
          __asm { BR              X9 }
        }
        if (qword_256FFA0B8 != -1)
          swift_once();
        v11 = sub_2408E5C48();
        __swift_project_value_buffer(v11, (uint64_t)qword_2570724B0);
        LOBYTE(v13[0]) = 16;
        sub_2408B4A30(0xD000000000000037, 0x80000002409222D0, (char *)v13);

      }
      else
      {
        if (qword_256FFA0B8 != -1)
          swift_once();
        v10 = sub_2408E5C48();
        __swift_project_value_buffer(v10, (uint64_t)qword_2570724B0);
        LOBYTE(v13[0]) = 16;
        sub_2408B4A30(0xD00000000000002ALL, 0x8000000240921C00, (char *)v13);
      }

      return;
    }

  }
  if (qword_256FFA0B8 != -1)
    swift_once();
  v9 = sub_2408E5C48();
  __swift_project_value_buffer(v9, (uint64_t)qword_2570724B0);
  LOBYTE(v13[0]) = 16;
  sub_2408B4A30(0xD000000000000029, 0x8000000240921BD0, (char *)v13);
}

uint64_t sub_24040FE3C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  if (!v1)
    return 0;
  if (*(_QWORD *)(v0 + 48) == 0xD00000000000001ELL && v1 == 0x8000000240921BB0)
    return 1;
  return sub_2408E617C();
}

void sub_24040FE9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[3];
  v5 = v0[4];
  v6 = *((unsigned __int8 *)v0 + 113);
  v7 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA668);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2408EADB0;
  *(_QWORD *)(v8 + 32) = 0x496E6F6973736573;
  *(_QWORD *)(v8 + 40) = 0xE900000000000064;
  v9 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 48) = v1;
  *(_QWORD *)(v8 + 56) = v2;
  *(_QWORD *)(v8 + 72) = v9;
  strcpy((char *)(v8 + 80), "rawSessionId");
  *(_BYTE *)(v8 + 93) = 0;
  *(_WORD *)(v8 + 94) = -5120;
  *(_QWORD *)(v8 + 96) = v3;
  *(_QWORD *)(v8 + 104) = v4;
  *(_QWORD *)(v8 + 120) = v9;
  *(_QWORD *)(v8 + 128) = 0x6552746E65696C63;
  *(_QWORD *)(v8 + 136) = 0xEF64497473657571;
  *(_QWORD *)(v8 + 144) = v5;
  *(_QWORD *)(v8 + 152) = v7;
  *(_QWORD *)(v8 + 168) = v9;
  *(_QWORD *)(v8 + 176) = 0x6D45646C756F6873;
  *(_QWORD *)(v8 + 184) = 0xEA00000000007469;
  v10 = MEMORY[0x24BEE1328];
  *(_BYTE *)(v8 + 192) = 1;
  *(_QWORD *)(v8 + 224) = 0xD000000000000011;
  *(_QWORD *)(v8 + 232) = 0x80000002409225E0;
  *(_QWORD *)(v8 + 216) = v10;
  __asm { BR              X12 }
}

uint64_t sub_240410068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  id v19;
  unint64_t v20;
  id v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  id v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;

  strcpy((char *)(v4 + 240), "intermediate");
  *(_BYTE *)(v4 + 253) = 0;
  *(_WORD *)(v4 + 254) = -5120;
  *(_QWORD *)(v4 + 264) = v5;
  *(_QWORD *)(v4 + 272) = 0x65757165526D756ELL;
  v7 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v4 + 280) = v1 + 10;
  *(_QWORD *)(v4 + 288) = v3;
  *(_QWORD *)(v4 + 312) = v7;
  strcpy((char *)(v4 + 320), "numPlanCreated");
  *(_BYTE *)(v4 + 335) = -18;
  *(_QWORD *)(v4 + 336) = v31;
  *(_QWORD *)(v4 + 360) = v7;
  *(_QWORD *)(v4 + 368) = a1;
  *(_QWORD *)(v4 + 376) = 0x80000002409217E0;
  *(_QWORD *)(v4 + 384) = v32;
  *(_QWORD *)(v4 + 408) = v7;
  *(_QWORD *)(v4 + 416) = v2 - 3;
  *(_QWORD *)(v4 + 424) = 0x8000000240921800;
  *(_QWORD *)(v4 + 432) = v33;
  *(_QWORD *)(v4 + 456) = v7;
  *(_QWORD *)(v4 + 464) = v2 + 1;
  *(_QWORD *)(v4 + 472) = 0x8000000240922600;
  *(_QWORD *)(v4 + 480) = v34;
  *(_QWORD *)(v4 + 504) = v7;
  *(_QWORD *)(v4 + 512) = v2 + 3;
  *(_QWORD *)(v4 + 520) = 0x8000000240922620;
  *(_QWORD *)(v4 + 552) = v7;
  *(_QWORD *)(v4 + 528) = v35;
  *(_QWORD *)(v4 + 560) = v2;
  *(_QWORD *)(v4 + 568) = 0x8000000240922640;
  *(_QWORD *)(v4 + 600) = v7;
  *(_QWORD *)(v4 + 576) = v36;
  *(_QWORD *)(v4 + 608) = v2 + 11;
  *(_QWORD *)(v4 + 616) = 0x8000000240921A30;
  *(_QWORD *)(v4 + 648) = v7;
  *(_QWORD *)(v4 + 624) = v37;
  *(_QWORD *)(v4 + 656) = v2 + 2;
  *(_QWORD *)(v4 + 664) = 0x8000000240921AA0;
  *(_QWORD *)(v4 + 696) = v7;
  *(_QWORD *)(v4 + 672) = v38;
  *(_QWORD *)(v4 + 704) = v2 - 5;
  *(_QWORD *)(v4 + 712) = 0x8000000240921AC0;
  *(_QWORD *)(v4 + 744) = v7;
  *(_QWORD *)(v4 + 720) = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_2403A8518(v4);
  *(_QWORD *)(v6 - 96) = v8;
  if (v40)
  {
    v45 = v5;
    *(_QWORD *)&v44 = v28;
    *((_QWORD *)&v44 + 1) = v40;
    sub_2403A9254(&v44, (_OWORD *)(v6 - 128));
    v9 = v41;
    if (*(_QWORD *)(v6 - 104))
      goto LABEL_3;
  }
  else
  {
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v20 = sub_2403AD9FC();
    *(_QWORD *)(v6 - 104) = v20;
    *(_QWORD *)(v6 - 128) = v19;
    v9 = v41;
    if (v20)
    {
LABEL_3:
      sub_2403A9254((_OWORD *)(v6 - 128), &v44);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_2403AC1CC(&v44, v2 - 2, 0x8000000240921840, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(v6 - 96) = v8;
      swift_bridgeObjectRelease();
      v11 = v42;
      if (v9)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain();
  sub_2403A97FC(v6 - 128, &qword_2543563F0);
  sub_2403AA648(v2 - 2, 0x8000000240921840, &v44);
  sub_2403A97FC((uint64_t)&v44, &qword_2543563F0);
  v11 = v42;
  if (v9)
  {
LABEL_4:
    v45 = v5;
    *(_QWORD *)&v44 = v29;
    *((_QWORD *)&v44 + 1) = v9;
    sub_2403A9254(&v44, (_OWORD *)(v6 - 128));
    if (*(_QWORD *)(v6 - 104))
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  v22 = sub_2403AD9FC();
  *(_QWORD *)(v6 - 104) = v22;
  *(_QWORD *)(v6 - 128) = v21;
  if (v22)
  {
LABEL_5:
    sub_2403A9254((_OWORD *)(v6 - 128), &v44);
    swift_bridgeObjectRetain();
    v12 = *(_QWORD *)(v6 - 96);
    v13 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v44, 0x7972657551776172, 0xEF6449746E657645, v13);
    *(_QWORD *)(v6 - 96) = v12;
    swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  sub_2403A97FC(v6 - 128, &qword_2543563F0);
  sub_2403AA648(0x7972657551776172, 0xEF6449746E657645, &v44);
  sub_2403A97FC((uint64_t)&v44, &qword_2543563F0);
  if (v11)
  {
LABEL_6:
    v45 = v5;
    *(_QWORD *)&v44 = v30;
    *((_QWORD *)&v44 + 1) = v11;
    sub_2403A9254(&v44, (_OWORD *)(v6 - 128));
    if (*(_QWORD *)(v6 - 104))
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  v24 = sub_2403AD9FC();
  *(_QWORD *)(v6 - 104) = v24;
  *(_QWORD *)(v6 - 128) = v23;
  if (v24)
  {
LABEL_7:
    sub_2403A9254((_OWORD *)(v6 - 128), &v44);
    swift_bridgeObjectRetain();
    v14 = *(_QWORD *)(v6 - 96);
    v15 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v44, 0x6E6576456E616C70, 0xEB00000000644974, v15);
    *(_QWORD *)(v6 - 96) = v14;
    swift_bridgeObjectRelease();
    if (v43)
      goto LABEL_8;
LABEL_16:
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v26 = sub_2403AD9FC();
    *(_QWORD *)(v6 - 104) = v26;
    *(_QWORD *)(v6 - 128) = v25;
    if (v26)
      goto LABEL_9;
LABEL_17:
    sub_2403A97FC(v6 - 128, &qword_2543563F0);
    sub_2403AA648(0x496572756C696166, 0xEB000000006F666ELL, &v44);
    sub_2403A97FC((uint64_t)&v44, &qword_2543563F0);
    return *(_QWORD *)(v6 - 96);
  }
LABEL_15:
  swift_bridgeObjectRetain();
  sub_2403A97FC(v6 - 128, &qword_2543563F0);
  sub_2403AA648(0x6E6576456E616C70, 0xEB00000000644974, &v44);
  sub_2403A97FC((uint64_t)&v44, &qword_2543563F0);
  if (!v43)
    goto LABEL_16;
LABEL_8:
  v16 = sub_240509730();
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA678);
  *(_QWORD *)&v44 = v16;
  sub_2403A9254(&v44, (_OWORD *)(v6 - 128));
  if (!*(_QWORD *)(v6 - 104))
    goto LABEL_17;
LABEL_9:
  sub_2403A9254((_OWORD *)(v6 - 128), &v44);
  v17 = *(_QWORD *)(v6 - 96);
  v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_2403AC1CC(&v44, 0x496572756C696166, 0xEB000000006F666ELL, v18);
  swift_bridgeObjectRelease();
  return v17;
}

unint64_t sub_2404106F4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  unint64_t v18;
  id v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  id v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  id v54;
  unint64_t v55;
  char v56;
  id v57;
  unint64_t v58;
  char v59;
  id v60;
  unint64_t v61;
  char v62;
  id v63;
  unint64_t v64;
  char v65;
  id v66;
  unint64_t v67;
  char v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  __int128 v82;
  uint64_t v83;
  __int128 v84;
  unint64_t v85;
  unint64_t v86;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_BYTE *)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(_BYTE *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 232);
  v6 = *(_BYTE *)(v0 + 240);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(_BYTE *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 264);
  v10 = *(_BYTE *)(v0 + 272);
  v11 = *(_QWORD *)(v0 + 280);
  v12 = *(_QWORD *)(v0 + 296);
  v13 = *(_BYTE *)(v0 + 304);
  v14 = *(_QWORD *)(v0 + 312);
  v15 = *(_BYTE *)(v0 + 320);
  v16 = *(_BYTE *)(v0 + 336);
  v70 = *(_QWORD *)(v0 + 328);
  v71 = *(_QWORD *)(v0 + 344);
  v76 = *(_BYTE *)(v0 + 288);
  v77 = *(_BYTE *)(v0 + 352);
  v72 = *(_QWORD *)(v0 + 360);
  v73 = *(_QWORD *)(v0 + 376);
  v80 = *(_BYTE *)(v0 + 384);
  v78 = *(_BYTE *)(v0 + 368);
  v79 = *(_BYTE *)(v0 + 400);
  v74 = *(_QWORD *)(v0 + 392);
  v75 = *(_QWORD *)(v0 + 408);
  v17 = *(_BYTE *)(v0 + 416);
  v18 = sub_2403A8518(MEMORY[0x24BEE4AF8]);
  v86 = v18;
  v81 = v17;
  if ((v2 & 1) != 0)
  {
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v20 = sub_2403AD9FC();
    v85 = v20;
    *(_QWORD *)&v84 = v19;
  }
  else
  {
    v83 = MEMORY[0x24BEE13C8];
    *(_QWORD *)&v82 = v1;
    sub_2403A9254(&v82, &v84);
    v20 = v85;
  }
  if (v20)
  {
    sub_2403A9254(&v84, &v82);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000013, 0x80000002408EAB50, isUniquelyReferenced_nonNull_native);
    v86 = v18;
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v23 = sub_2403AD9FC();
      v85 = v23;
      *(_QWORD *)&v84 = v22;
      goto LABEL_9;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000013, 0x80000002408EAB50, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v4 & 1) != 0)
      goto LABEL_6;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v3;
  sub_2403A9254(&v82, &v84);
  v23 = v85;
LABEL_9:
  if (v23)
  {
    sub_2403A9254(&v84, &v82);
    v24 = v86;
    v25 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD00000000000001CLL, 0x80000002408EAAB0, v25);
    v86 = v24;
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
    {
LABEL_11:
      v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v27 = sub_2403AD9FC();
      v85 = v27;
      *(_QWORD *)&v84 = v26;
      goto LABEL_14;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD00000000000001CLL, 0x80000002408EAAB0, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v6 & 1) != 0)
      goto LABEL_11;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v5;
  sub_2403A9254(&v82, &v84);
  v27 = v85;
LABEL_14:
  if (v27)
  {
    sub_2403A9254(&v84, &v82);
    v28 = v86;
    v29 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000020, 0x80000002408EAB00, v29);
    v86 = v28;
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_16:
      v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v31 = sub_2403AD9FC();
      v85 = v31;
      *(_QWORD *)&v84 = v30;
      goto LABEL_19;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000020, 0x80000002408EAB00, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v8 & 1) != 0)
      goto LABEL_16;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v7;
  sub_2403A9254(&v82, &v84);
  v31 = v85;
LABEL_19:
  if (v31)
  {
    sub_2403A9254(&v84, &v82);
    v32 = v86;
    v33 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000016, 0x80000002408EAB90, v33);
    v86 = v32;
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
LABEL_21:
      v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v35 = sub_2403AD9FC();
      v85 = v35;
      *(_QWORD *)&v84 = v34;
      goto LABEL_24;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000016, 0x80000002408EAB90, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v10 & 1) != 0)
      goto LABEL_21;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v9;
  sub_2403A9254(&v82, &v84);
  v35 = v85;
LABEL_24:
  if (v35)
  {
    sub_2403A9254(&v84, &v82);
    v36 = v86;
    v37 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000023, 0x80000002408EABD0, v37);
    v86 = v36;
    swift_bridgeObjectRelease();
    if ((v76 & 1) != 0)
    {
LABEL_26:
      v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v39 = sub_2403AD9FC();
      v85 = v39;
      *(_QWORD *)&v84 = v38;
      goto LABEL_29;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000023, 0x80000002408EABD0, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v76 & 1) != 0)
      goto LABEL_26;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v11;
  sub_2403A9254(&v82, &v84);
  v39 = v85;
LABEL_29:
  if (v39)
  {
    sub_2403A9254(&v84, &v82);
    v40 = v86;
    v41 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000028, 0x80000002408EAA50, v41);
    v86 = v40;
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
LABEL_31:
      v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v43 = sub_2403AD9FC();
      v85 = v43;
      *(_QWORD *)&v84 = v42;
      goto LABEL_34;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000028, 0x80000002408EAA50, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v13 & 1) != 0)
      goto LABEL_31;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v12;
  sub_2403A9254(&v82, &v84);
  v43 = v85;
LABEL_34:
  if (v43)
  {
    sub_2403A9254(&v84, &v82);
    v44 = v86;
    v45 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD00000000000002CLL, 0x80000002408EA9B0, v45);
    v86 = v44;
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
LABEL_36:
      v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v47 = sub_2403AD9FC();
      v85 = v47;
      *(_QWORD *)&v84 = v46;
      goto LABEL_39;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD00000000000002CLL, 0x80000002408EA9B0, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v15 & 1) != 0)
      goto LABEL_36;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v14;
  sub_2403A9254(&v82, &v84);
  v47 = v85;
LABEL_39:
  if (v47)
  {
    sub_2403A9254(&v84, &v82);
    v48 = v86;
    v49 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000022, 0x80000002408EA910, v49);
    v86 = v48;
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
LABEL_41:
      v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v51 = sub_2403AD9FC();
      v85 = v51;
      *(_QWORD *)&v84 = v50;
      goto LABEL_44;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000022, 0x80000002408EA910, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v16 & 1) != 0)
      goto LABEL_41;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v70;
  sub_2403A9254(&v82, &v84);
  v51 = v85;
LABEL_44:
  if (v51)
  {
    sub_2403A9254(&v84, &v82);
    v52 = v86;
    v53 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000026, 0x80000002408EA960, v53);
    v86 = v52;
    swift_bridgeObjectRelease();
    if ((v77 & 1) != 0)
      goto LABEL_46;
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000026, 0x80000002408EA960, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v77 & 1) != 0)
    {
LABEL_46:
      v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v85 = sub_2403AD9FC();
      *(_QWORD *)&v84 = v54;
      if (v85)
        goto LABEL_47;
      goto LABEL_58;
    }
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v71;
  sub_2403A9254(&v82, &v84);
  if (v85)
  {
LABEL_47:
    sub_2403A9254(&v84, &v82);
    v55 = v86;
    v56 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000029, 0x80000002408EAC20, v56);
    v86 = v55;
    swift_bridgeObjectRelease();
    if ((v78 & 1) != 0)
      goto LABEL_48;
    goto LABEL_59;
  }
LABEL_58:
  sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
  sub_2403AA648(0xD000000000000029, 0x80000002408EAC20, &v82);
  sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
  if ((v78 & 1) != 0)
  {
LABEL_48:
    v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v85 = sub_2403AD9FC();
    *(_QWORD *)&v84 = v57;
    if (v85)
      goto LABEL_49;
    goto LABEL_60;
  }
LABEL_59:
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v72;
  sub_2403A9254(&v82, &v84);
  if (v85)
  {
LABEL_49:
    sub_2403A9254(&v84, &v82);
    v58 = v86;
    v59 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD00000000000001BLL, 0x80000002408EAC80, v59);
    v86 = v58;
    swift_bridgeObjectRelease();
    if ((v80 & 1) != 0)
      goto LABEL_50;
    goto LABEL_61;
  }
LABEL_60:
  sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
  sub_2403AA648(0xD00000000000001BLL, 0x80000002408EAC80, &v82);
  sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
  if ((v80 & 1) != 0)
  {
LABEL_50:
    v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v85 = sub_2403AD9FC();
    *(_QWORD *)&v84 = v60;
    if (v85)
      goto LABEL_51;
    goto LABEL_62;
  }
LABEL_61:
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v73;
  sub_2403A9254(&v82, &v84);
  if (v85)
  {
LABEL_51:
    sub_2403A9254(&v84, &v82);
    v61 = v86;
    v62 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000019, 0x80000002408EACD0, v62);
    v86 = v61;
    swift_bridgeObjectRelease();
    if ((v79 & 1) != 0)
      goto LABEL_52;
    goto LABEL_63;
  }
LABEL_62:
  sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
  sub_2403AA648(0xD000000000000019, 0x80000002408EACD0, &v82);
  sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
  if ((v79 & 1) != 0)
  {
LABEL_52:
    v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v85 = sub_2403AD9FC();
    *(_QWORD *)&v84 = v63;
    if (v85)
      goto LABEL_53;
    goto LABEL_64;
  }
LABEL_63:
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v74;
  sub_2403A9254(&v82, &v84);
  if (v85)
  {
LABEL_53:
    sub_2403A9254(&v84, &v82);
    v64 = v86;
    v65 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD00000000000001CLL, 0x80000002408EAD20, v65);
    v86 = v64;
    swift_bridgeObjectRelease();
    if ((v81 & 1) != 0)
      goto LABEL_54;
LABEL_65:
    v83 = MEMORY[0x24BEE13C8];
    *(_QWORD *)&v82 = v75;
    sub_2403A9254(&v82, &v84);
    if (v85)
      goto LABEL_55;
LABEL_66:
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000016, 0x80000002408EAA10, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    return v86;
  }
LABEL_64:
  sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
  sub_2403AA648(0xD00000000000001CLL, 0x80000002408EAD20, &v82);
  sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
  if ((v81 & 1) == 0)
    goto LABEL_65;
LABEL_54:
  v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  v85 = sub_2403AD9FC();
  *(_QWORD *)&v84 = v66;
  if (!v85)
    goto LABEL_66;
LABEL_55:
  sub_2403A9254(&v84, &v82);
  v67 = v86;
  v68 = swift_isUniquelyReferenced_nonNull_native();
  sub_2403AC1CC(&v82, 0xD000000000000016, 0x80000002408EAA10, v68);
  swift_bridgeObjectRelease();
  return v67;
}

unint64_t sub_2404114E8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  unint64_t v18;
  id v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  id v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  id v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  id v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  id v54;
  unint64_t v55;
  char v56;
  id v57;
  unint64_t v58;
  char v59;
  id v60;
  unint64_t v61;
  char v62;
  id v63;
  unint64_t v64;
  char v65;
  id v66;
  unint64_t v67;
  char v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  __int128 v82;
  uint64_t v83;
  __int128 v84;
  unint64_t v85;
  unint64_t v86;

  v1 = *(_QWORD *)(v0 + 424);
  v2 = *(_BYTE *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 440);
  v4 = *(_BYTE *)(v0 + 448);
  v5 = *(_QWORD *)(v0 + 456);
  v6 = *(_BYTE *)(v0 + 464);
  v7 = *(_QWORD *)(v0 + 472);
  v8 = *(_BYTE *)(v0 + 480);
  v9 = *(_QWORD *)(v0 + 488);
  v10 = *(_BYTE *)(v0 + 496);
  v11 = *(_QWORD *)(v0 + 504);
  v12 = *(_QWORD *)(v0 + 520);
  v13 = *(_BYTE *)(v0 + 528);
  v14 = *(_QWORD *)(v0 + 536);
  v15 = *(_BYTE *)(v0 + 544);
  v16 = *(_BYTE *)(v0 + 560);
  v70 = *(_QWORD *)(v0 + 552);
  v71 = *(_QWORD *)(v0 + 568);
  v76 = *(_BYTE *)(v0 + 512);
  v77 = *(_BYTE *)(v0 + 576);
  v72 = *(_QWORD *)(v0 + 584);
  v73 = *(_QWORD *)(v0 + 600);
  v80 = *(_BYTE *)(v0 + 608);
  v78 = *(_BYTE *)(v0 + 592);
  v79 = *(_BYTE *)(v0 + 624);
  v74 = *(_QWORD *)(v0 + 616);
  v75 = *(_QWORD *)(v0 + 632);
  v17 = *(_BYTE *)(v0 + 640);
  v18 = sub_2403A8518(MEMORY[0x24BEE4AF8]);
  v86 = v18;
  v81 = v17;
  if ((v2 & 1) != 0)
  {
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v20 = sub_2403AD9FC();
    v85 = v20;
    *(_QWORD *)&v84 = v19;
  }
  else
  {
    v83 = MEMORY[0x24BEE13C8];
    *(_QWORD *)&v82 = v1;
    sub_2403A9254(&v82, &v84);
    v20 = v85;
  }
  if (v20)
  {
    sub_2403A9254(&v84, &v82);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000020, 0x8000000240922360, isUniquelyReferenced_nonNull_native);
    v86 = v18;
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
    {
LABEL_6:
      v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v23 = sub_2403AD9FC();
      v85 = v23;
      *(_QWORD *)&v84 = v22;
      goto LABEL_9;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000020, 0x8000000240922360, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v4 & 1) != 0)
      goto LABEL_6;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v3;
  sub_2403A9254(&v82, &v84);
  v23 = v85;
LABEL_9:
  if (v23)
  {
    sub_2403A9254(&v84, &v82);
    v24 = v86;
    v25 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD00000000000001DLL, 0x8000000240922390, v25);
    v86 = v24;
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
    {
LABEL_11:
      v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v27 = sub_2403AD9FC();
      v85 = v27;
      *(_QWORD *)&v84 = v26;
      goto LABEL_14;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD00000000000001DLL, 0x8000000240922390, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v6 & 1) != 0)
      goto LABEL_11;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v5;
  sub_2403A9254(&v82, &v84);
  v27 = v85;
LABEL_14:
  if (v27)
  {
    sub_2403A9254(&v84, &v82);
    v28 = v86;
    v29 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000024, 0x80000002409223B0, v29);
    v86 = v28;
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_16:
      v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v31 = sub_2403AD9FC();
      v85 = v31;
      *(_QWORD *)&v84 = v30;
      goto LABEL_19;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000024, 0x80000002409223B0, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v8 & 1) != 0)
      goto LABEL_16;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v7;
  sub_2403A9254(&v82, &v84);
  v31 = v85;
LABEL_19:
  if (v31)
  {
    sub_2403A9254(&v84, &v82);
    v32 = v86;
    v33 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000022, 0x80000002409223E0, v33);
    v86 = v32;
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
LABEL_21:
      v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v35 = sub_2403AD9FC();
      v85 = v35;
      *(_QWORD *)&v84 = v34;
      goto LABEL_24;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000022, 0x80000002409223E0, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v10 & 1) != 0)
      goto LABEL_21;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v9;
  sub_2403A9254(&v82, &v84);
  v35 = v85;
LABEL_24:
  if (v35)
  {
    sub_2403A9254(&v84, &v82);
    v36 = v86;
    v37 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000020, 0x8000000240922410, v37);
    v86 = v36;
    swift_bridgeObjectRelease();
    if ((v76 & 1) != 0)
    {
LABEL_26:
      v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v39 = sub_2403AD9FC();
      v85 = v39;
      *(_QWORD *)&v84 = v38;
      goto LABEL_29;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000020, 0x8000000240922410, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v76 & 1) != 0)
      goto LABEL_26;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v11;
  sub_2403A9254(&v82, &v84);
  v39 = v85;
LABEL_29:
  if (v39)
  {
    sub_2403A9254(&v84, &v82);
    v40 = v86;
    v41 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000021, 0x8000000240922440, v41);
    v86 = v40;
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
LABEL_31:
      v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v43 = sub_2403AD9FC();
      v85 = v43;
      *(_QWORD *)&v84 = v42;
      goto LABEL_34;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000021, 0x8000000240922440, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v13 & 1) != 0)
      goto LABEL_31;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v12;
  sub_2403A9254(&v82, &v84);
  v43 = v85;
LABEL_34:
  if (v43)
  {
    sub_2403A9254(&v84, &v82);
    v44 = v86;
    v45 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000027, 0x8000000240922470, v45);
    v86 = v44;
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
LABEL_36:
      v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v47 = sub_2403AD9FC();
      v85 = v47;
      *(_QWORD *)&v84 = v46;
      goto LABEL_39;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000027, 0x8000000240922470, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v15 & 1) != 0)
      goto LABEL_36;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v14;
  sub_2403A9254(&v82, &v84);
  v47 = v85;
LABEL_39:
  if (v47)
  {
    sub_2403A9254(&v84, &v82);
    v48 = v86;
    v49 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD00000000000001BLL, 0x80000002409224A0, v49);
    v86 = v48;
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
LABEL_41:
      v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v51 = sub_2403AD9FC();
      v85 = v51;
      *(_QWORD *)&v84 = v50;
      goto LABEL_44;
    }
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD00000000000001BLL, 0x80000002409224A0, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v16 & 1) != 0)
      goto LABEL_41;
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v70;
  sub_2403A9254(&v82, &v84);
  v51 = v85;
LABEL_44:
  if (v51)
  {
    sub_2403A9254(&v84, &v82);
    v52 = v86;
    v53 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000025, 0x80000002409224C0, v53);
    v86 = v52;
    swift_bridgeObjectRelease();
    if ((v77 & 1) != 0)
      goto LABEL_46;
  }
  else
  {
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000025, 0x80000002409224C0, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    if ((v77 & 1) != 0)
    {
LABEL_46:
      v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
      v85 = sub_2403AD9FC();
      *(_QWORD *)&v84 = v54;
      if (v85)
        goto LABEL_47;
      goto LABEL_58;
    }
  }
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v71;
  sub_2403A9254(&v82, &v84);
  if (v85)
  {
LABEL_47:
    sub_2403A9254(&v84, &v82);
    v55 = v86;
    v56 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000023, 0x80000002409224F0, v56);
    v86 = v55;
    swift_bridgeObjectRelease();
    if ((v78 & 1) != 0)
      goto LABEL_48;
    goto LABEL_59;
  }
LABEL_58:
  sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
  sub_2403AA648(0xD000000000000023, 0x80000002409224F0, &v82);
  sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
  if ((v78 & 1) != 0)
  {
LABEL_48:
    v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v85 = sub_2403AD9FC();
    *(_QWORD *)&v84 = v57;
    if (v85)
      goto LABEL_49;
    goto LABEL_60;
  }
LABEL_59:
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v72;
  sub_2403A9254(&v82, &v84);
  if (v85)
  {
LABEL_49:
    sub_2403A9254(&v84, &v82);
    v58 = v86;
    v59 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000021, 0x8000000240922520, v59);
    v86 = v58;
    swift_bridgeObjectRelease();
    if ((v80 & 1) != 0)
      goto LABEL_50;
    goto LABEL_61;
  }
LABEL_60:
  sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
  sub_2403AA648(0xD000000000000021, 0x8000000240922520, &v82);
  sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
  if ((v80 & 1) != 0)
  {
LABEL_50:
    v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v85 = sub_2403AD9FC();
    *(_QWORD *)&v84 = v60;
    if (v85)
      goto LABEL_51;
    goto LABEL_62;
  }
LABEL_61:
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v73;
  sub_2403A9254(&v82, &v84);
  if (v85)
  {
LABEL_51:
    sub_2403A9254(&v84, &v82);
    v61 = v86;
    v62 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000022, 0x8000000240922550, v62);
    v86 = v61;
    swift_bridgeObjectRelease();
    if ((v79 & 1) != 0)
      goto LABEL_52;
    goto LABEL_63;
  }
LABEL_62:
  sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
  sub_2403AA648(0xD000000000000022, 0x8000000240922550, &v82);
  sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
  if ((v79 & 1) != 0)
  {
LABEL_52:
    v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
    v85 = sub_2403AD9FC();
    *(_QWORD *)&v84 = v63;
    if (v85)
      goto LABEL_53;
    goto LABEL_64;
  }
LABEL_63:
  v83 = MEMORY[0x24BEE13C8];
  *(_QWORD *)&v82 = v74;
  sub_2403A9254(&v82, &v84);
  if (v85)
  {
LABEL_53:
    sub_2403A9254(&v84, &v82);
    v64 = v86;
    v65 = swift_isUniquelyReferenced_nonNull_native();
    sub_2403AC1CC(&v82, 0xD000000000000022, 0x8000000240922580, v65);
    v86 = v64;
    swift_bridgeObjectRelease();
    if ((v81 & 1) != 0)
      goto LABEL_54;
LABEL_65:
    v83 = MEMORY[0x24BEE13C8];
    *(_QWORD *)&v82 = v75;
    sub_2403A9254(&v82, &v84);
    if (v85)
      goto LABEL_55;
LABEL_66:
    sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
    sub_2403AA648(0xD000000000000028, 0x80000002409225B0, &v82);
    sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
    return v86;
  }
LABEL_64:
  sub_2403A97FC((uint64_t)&v84, &qword_2543563F0);
  sub_2403AA648(0xD000000000000022, 0x8000000240922580, &v82);
  sub_2403A97FC((uint64_t)&v82, &qword_2543563F0);
  if ((v81 & 1) == 0)
    goto LABEL_65;
LABEL_54:
  v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  v85 = sub_2403AD9FC();
  *(_QWORD *)&v84 = v66;
  if (!v85)
    goto LABEL_66;
LABEL_55:
  sub_2403A9254(&v84, &v82);
  v67 = v86;
  v68 = swift_isUniquelyReferenced_nonNull_native();
  sub_2403AC1CC(&v82, 0xD000000000000028, 0x80000002409225B0, v68);
  swift_bridgeObjectRelease();
  return v67;
}

uint64_t static PlannerGrainLatency.signpostEventName.getter()
{
  return sub_2408E5F9C();
}

uint64_t PlannerGrainLatency.signpostShouldEmit.getter()
{
  return 1;
}

Swift::Void __swiftcall PlannerGrainLatency.emitSignpost()()
{
  const void *v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t isa;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSObject *v20;
  char v21;
  unint64_t v22;
  __int128 v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  os_signpost_id_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[82];
  _BYTE v55[656];

  v1 = v0;
  v2 = sub_2408E5C0C();
  v51 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)&v41 - v5;
  v6 = sub_2408E5C48();
  isa = (uint64_t)v6[-1].isa;
  MEMORY[0x24BDAC7A8](v6);
  v9 = ((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_2408E5C30();
  v42 = *(_QWORD *)(v10 - 8);
  v43 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v55, v1, sizeof(v55));
  if (qword_256FFA0B8 != -1)
LABEL_16:
    swift_once();
  v13 = __swift_project_value_buffer((uint64_t)v6, (uint64_t)qword_2570724B0);
  v14 = *(void (**))(isa + 16);
  v49 = v13;
  v14(v9);
  sub_2408E5C18();
  v15 = sub_2408E566C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E5660();
  v19 = sub_2408E563C();
  v9 = v20;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC368);
  isa = swift_allocObject();
  *(_OWORD *)(isa + 16) = xmmword_2408EADC0;
  memcpy(v54, v55, sizeof(v54));
  *(_QWORD *)(isa + 32) = sub_24041287C(v19, (uint64_t)v9, (uint64_t (*)(void *))sub_24040FE9C);
  v52 = isa + 32;
  memcpy(v54, v55, sizeof(v54));
  v6 = sub_24041287C(v19, (uint64_t)v9, (uint64_t (*)(void *))sub_2404106F4);
  swift_bridgeObjectRelease();
  v21 = 0;
  v22 = 0;
  v53 = isa;
  *(_QWORD *)(isa + 40) = v6;
  *(_QWORD *)&v23 = 136446210;
  v45 = v23;
  v44 = MEMORY[0x24BEE4AD8] + 8;
  v24 = v50;
  v48 = v2;
  v46 = v12;
  do
  {
    v25 = v21;
    if (v22 >= *(_QWORD *)(v53 + 16))
    {
      __break(1u);
      goto LABEL_16;
    }
    v26 = swift_bridgeObjectRetain();
    v27 = sub_2403AEB7C(v26, 0);
    v29 = v28;
    swift_bridgeObjectRelease();
    if (v29)
    {
      if (qword_256FFA0D8 != -1)
        swift_once();
      v30 = (id)qword_2570724D0;
      sub_2408E5BF4();
      swift_bridgeObjectRetain();
      v9 = sub_2408E5C24();
      isa = sub_2408E5ED0();
      v6 = v9;
      if ((sub_2408E5F00() & 1) != 0)
      {
        v31 = v47;
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v47, v24, v2);
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v54[0] = v33;
        *(_DWORD *)v32 = v45;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v32 + 4) = sub_2403B3ED0(v27, v29, v54);
        swift_bridgeObjectRelease_n();
        v34 = sub_2408E5C00();
        _os_signpost_emit_with_name_impl(&dword_240347000, v9, (os_signpost_type_t)isa, v34, "PlannerGrain", "%{public, signpost.description=attribute,public}s", (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        v35 = v33;
        v2 = v48;
        MEMORY[0x242684668](v35, -1, -1);
        v36 = v32;
        v24 = v50;
        MEMORY[0x242684668](v36, -1, -1);

        v6 = *(NSObject **)(v51 + 8);
        ((void (*)(char *, uint64_t))v6)(v24, v2);
        v37 = v31;
        v12 = v46;
        ((void (*)(char *, uint64_t))v6)(v37, v2);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v51 + 8))(v24, v2);
      }
    }
    else
    {
      v6 = sub_2408E5C3C();
      v38 = sub_2408E5EAC();
      isa = v38;
      if (os_log_type_enabled(v6, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v39 = 0;
        _os_log_impl(&dword_240347000, v6, (os_log_type_t)isa, "Failed to parse results as JSON String and emit OSSignposts for PlannerGrain", v39, 2u);
        v40 = v39;
        v24 = v50;
        MEMORY[0x242684668](v40, -1, -1);
      }

    }
    v21 = 1;
    v22 = 1;
  }
  while ((v25 & 1) == 0);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA678);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v43);
}

uint64_t sub_240412864(uint64_t a1, uint64_t a2)
{
  return sub_24041287C(a1, a2, (uint64_t (*)(void *))sub_24040FE9C);
}

uint64_t sub_240412870(uint64_t a1, uint64_t a2)
{
  return sub_24041287C(a1, a2, (uint64_t (*)(void *))sub_2404106F4);
}

uint64_t sub_24041287C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *))
{
  const void *v3;
  void *v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v11[2];
  _OWORD __dst[41];

  v7 = memcpy(__dst, v3, sizeof(__dst));
  v8 = a3(v7);
  *((_QWORD *)&__dst[1] + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&__dst[0] = a1;
  *((_QWORD *)&__dst[0] + 1) = a2;
  sub_2403A9254(__dst, v11);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_2403AC1CC(v11, 0x74616E696761705FLL, 0xED000064496E6F69, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_240412944()
{
  return sub_2408E5F9C();
}

uint64_t sub_24041295C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  sub_2403AE230((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24041299C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  char v22;
  _OWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t i;
  _OWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  _OWORD v46[2];
  _OWORD v47[2];
  __int128 v48;
  _OWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v50 = a1;
  v51 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v52 = v8;
  v53 = 0;
  v54 = v11 & v9;
  v55 = a2;
  v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_240412CF0(&v48);
  v12 = *((_QWORD *)&v48 + 1);
  if (!*((_QWORD *)&v48 + 1))
    goto LABEL_27;
  v13 = v48;
  sub_2403A9254(v49, v47);
  v14 = *(_QWORD **)a5;
  v16 = sub_240509E28(v13, v12);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = v15;
  if (v14[3] >= v19)
  {
    if ((a4 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_2403ACBDC();
      if ((v20 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v24 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    v25 = (uint64_t *)(v24[6] + 16 * v16);
    *v25 = v13;
    v25[1] = v12;
    sub_2403A9254(v47, (_OWORD *)(v24[7] + 32 * v16));
    v26 = v24[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v24[2] = v28;
LABEL_16:
    sub_240412CF0(&v48);
    for (i = *((_QWORD *)&v48 + 1); *((_QWORD *)&v48 + 1); i = *((_QWORD *)&v48 + 1))
    {
      v31 = v48;
      sub_2403A9254(v49, v47);
      v32 = *(_QWORD **)a5;
      v34 = sub_240509E28(v31, i);
      v35 = v32[2];
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        goto LABEL_28;
      v38 = v33;
      if (v32[3] < v37)
      {
        sub_2403AA874(v37, 1);
        v39 = sub_240509E28(v31, i);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_30;
        v34 = v39;
      }
      if ((v38 & 1) != 0)
      {
        sub_2403AE230((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
        swift_bridgeObjectRelease();
        v30 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v34);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
        sub_2403A9254(v46, v30);
      }
      else
      {
        v41 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        v42 = (uint64_t *)(v41[6] + 16 * v34);
        *v42 = v31;
        v42[1] = i;
        sub_2403A9254(v47, (_OWORD *)(v41[7] + 32 * v34));
        v43 = v41[2];
        v27 = __OFADD__(v43, 1);
        v44 = v43 + 1;
        if (v27)
          goto LABEL_29;
        v41[2] = v44;
      }
      sub_240412CF0(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_240413CE4();
    return swift_release();
  }
  sub_2403AA874(v19, a4 & 1);
  v21 = sub_240509E28(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    v16 = v21;
    if ((v20 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_2403AE230((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    swift_bridgeObjectRelease();
    v23 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
    sub_2403A9254(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  result = sub_2408E61B8();
  __break(1u);
  return result;
}

uint64_t sub_240412CF0@<X0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  void (*v19)(_OWORD *);
  uint64_t result;
  _OWORD v21[3];
  _OWORD v22[3];
  __int128 v23;
  _OWORD v24[2];

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    v13 = *v11;
    v12 = v11[1];
    sub_2403AE230(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24);
    *(_QWORD *)&v23 = v13;
    *((_QWORD *)&v23 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    v16 = *(_QWORD *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      v9 = (v16 - 1) & v16;
      v10 = __clz(__rbit64(v16)) + (v14 << 6);
      v7 = v14;
      goto LABEL_3;
    }
    v17 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      v16 = *(_QWORD *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        v14 = v17;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        v16 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          v14 = v5 + 3;
          goto LABEL_7;
        }
        v17 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          v16 = *(_QWORD *)(v4 + 8 * v17);
          if (v16)
            goto LABEL_10;
          v14 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            v16 = *(_QWORD *)(v4 + 8 * v14);
            if (v16)
              goto LABEL_7;
            v7 = v15 - 1;
            v18 = v5 + 6;
            while (v15 != v18)
            {
              v16 = *(_QWORD *)(v4 + 8 * v18++);
              if (v16)
              {
                v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  memset(v24, 0, sizeof(v24));
  v23 = 0u;
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v19 = (void (*)(_OWORD *))v1[5];
  result = sub_240413F54((uint64_t)&v23, (uint64_t)v22);
  if (*((_QWORD *)&v22[0] + 1))
  {
    v21[0] = v22[0];
    v21[1] = v22[1];
    v21[2] = v22[2];
    v19(v21);
    return sub_2403A97FC((uint64_t)v21, &qword_256FFC398);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t destroy for PlannerGrainLatency(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2403ADB34(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  return swift_release();
}

uint64_t initializeWithCopy for PlannerGrainLatency(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = *(_QWORD *)(a2 + 96);
  v11 = *(_QWORD *)(a2 + 104);
  v12 = *(_BYTE *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2403ADAA8(v10, v11, v12);
  *(_QWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 104) = v11;
  *(_BYTE *)(a1 + 112) = v12;
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  v13 = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = v13;
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  v14 = *(_QWORD *)(a2 + 360);
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = v14;
  v15 = *(_QWORD *)(a2 + 376);
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = v15;
  v16 = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = v16;
  v17 = *(_QWORD *)(a2 + 408);
  *(_BYTE *)(a1 + 416) = *(_BYTE *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = v17;
  v18 = *(_QWORD *)(a2 + 424);
  *(_BYTE *)(a1 + 432) = *(_BYTE *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = v18;
  v19 = *(_QWORD *)(a2 + 440);
  *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = v19;
  v20 = *(_QWORD *)(a2 + 456);
  *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = v20;
  v21 = *(_QWORD *)(a2 + 472);
  *(_BYTE *)(a1 + 480) = *(_BYTE *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = v21;
  v22 = *(_QWORD *)(a2 + 488);
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = v22;
  v23 = *(_QWORD *)(a2 + 504);
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = v23;
  v24 = *(_QWORD *)(a2 + 520);
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_QWORD *)(a1 + 520) = v24;
  v25 = *(_QWORD *)(a2 + 536);
  *(_BYTE *)(a1 + 544) = *(_BYTE *)(a2 + 544);
  *(_QWORD *)(a1 + 536) = v25;
  v26 = *(_QWORD *)(a2 + 552);
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_QWORD *)(a1 + 552) = v26;
  v27 = *(_QWORD *)(a2 + 568);
  *(_BYTE *)(a1 + 576) = *(_BYTE *)(a2 + 576);
  *(_QWORD *)(a1 + 568) = v27;
  v28 = *(_QWORD *)(a2 + 584);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_QWORD *)(a1 + 584) = v28;
  v29 = *(_QWORD *)(a2 + 600);
  *(_BYTE *)(a1 + 608) = *(_BYTE *)(a2 + 608);
  *(_QWORD *)(a1 + 600) = v29;
  v30 = *(_QWORD *)(a2 + 616);
  *(_BYTE *)(a1 + 624) = *(_BYTE *)(a2 + 624);
  *(_QWORD *)(a1 + 616) = v30;
  v31 = *(_QWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
  *(_QWORD *)(a1 + 632) = v31;
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PlannerGrainLatency(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 96);
  v5 = *(_QWORD *)(a2 + 104);
  v6 = *(_BYTE *)(a2 + 112);
  sub_2403ADAA8(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = v4;
  *(_QWORD *)(a1 + 104) = v5;
  v9 = *(_BYTE *)(a1 + 112);
  *(_BYTE *)(a1 + 112) = v6;
  sub_2403ADB34(v7, v8, v9);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v10 = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = v10;
  v11 = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = v11;
  v12 = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = v12;
  v13 = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v13;
  v14 = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v14;
  v15 = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = v15;
  v16 = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v16;
  v17 = *(_QWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = v17;
  v18 = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = v18;
  v19 = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v19;
  v20 = *(_QWORD *)(a2 + 360);
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = v20;
  v21 = *(_QWORD *)(a2 + 376);
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = v21;
  v22 = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = v22;
  v23 = *(_QWORD *)(a2 + 408);
  *(_BYTE *)(a1 + 416) = *(_BYTE *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = v23;
  v24 = *(_QWORD *)(a2 + 424);
  *(_BYTE *)(a1 + 432) = *(_BYTE *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = v24;
  v25 = *(_QWORD *)(a2 + 440);
  *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = v25;
  v26 = *(_QWORD *)(a2 + 456);
  *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = v26;
  v27 = *(_QWORD *)(a2 + 472);
  *(_BYTE *)(a1 + 480) = *(_BYTE *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = v27;
  v28 = *(_QWORD *)(a2 + 488);
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = v28;
  v29 = *(_QWORD *)(a2 + 504);
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = v29;
  v30 = *(_QWORD *)(a2 + 520);
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_QWORD *)(a1 + 520) = v30;
  v31 = *(_QWORD *)(a2 + 536);
  *(_BYTE *)(a1 + 544) = *(_BYTE *)(a2 + 544);
  *(_QWORD *)(a1 + 536) = v31;
  v32 = *(_QWORD *)(a2 + 552);
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_QWORD *)(a1 + 552) = v32;
  v33 = *(_QWORD *)(a2 + 568);
  *(_BYTE *)(a1 + 576) = *(_BYTE *)(a2 + 576);
  *(_QWORD *)(a1 + 568) = v33;
  v34 = *(_QWORD *)(a2 + 584);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_QWORD *)(a1 + 584) = v34;
  v35 = *(_QWORD *)(a2 + 600);
  *(_BYTE *)(a1 + 608) = *(_BYTE *)(a2 + 608);
  *(_QWORD *)(a1 + 600) = v35;
  v36 = *(_QWORD *)(a2 + 616);
  *(_BYTE *)(a1 + 624) = *(_BYTE *)(a2 + 624);
  *(_QWORD *)(a1 + 616) = v36;
  v37 = *(_QWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
  *(_QWORD *)(a1 + 632) = v37;
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy656_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x290uLL);
}

uint64_t assignWithTake for PlannerGrainLatency(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_BYTE *)(a2 + 112);
  v11 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v13 = *(_BYTE *)(a1 + 112);
  *(_BYTE *)(a1 + 112) = v10;
  sub_2403ADB34(v11, v12, v13);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  v14 = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v14;
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  v15 = *(_QWORD *)(a2 + 376);
  *(_BYTE *)(a1 + 384) = *(_BYTE *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = v15;
  v16 = *(_QWORD *)(a2 + 392);
  *(_BYTE *)(a1 + 400) = *(_BYTE *)(a2 + 400);
  *(_QWORD *)(a1 + 392) = v16;
  v17 = *(_QWORD *)(a2 + 408);
  *(_BYTE *)(a1 + 416) = *(_BYTE *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = v17;
  v18 = *(_QWORD *)(a2 + 424);
  *(_BYTE *)(a1 + 432) = *(_BYTE *)(a2 + 432);
  *(_QWORD *)(a1 + 424) = v18;
  v19 = *(_QWORD *)(a2 + 440);
  *(_BYTE *)(a1 + 448) = *(_BYTE *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = v19;
  v20 = *(_QWORD *)(a2 + 456);
  *(_BYTE *)(a1 + 464) = *(_BYTE *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = v20;
  v21 = *(_QWORD *)(a2 + 472);
  *(_BYTE *)(a1 + 480) = *(_BYTE *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = v21;
  v22 = *(_QWORD *)(a2 + 488);
  *(_BYTE *)(a1 + 496) = *(_BYTE *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = v22;
  v23 = *(_QWORD *)(a2 + 504);
  *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
  *(_QWORD *)(a1 + 504) = v23;
  v24 = *(_QWORD *)(a2 + 520);
  *(_BYTE *)(a1 + 528) = *(_BYTE *)(a2 + 528);
  *(_QWORD *)(a1 + 520) = v24;
  v25 = *(_QWORD *)(a2 + 536);
  *(_BYTE *)(a1 + 544) = *(_BYTE *)(a2 + 544);
  *(_QWORD *)(a1 + 536) = v25;
  v26 = *(_QWORD *)(a2 + 552);
  *(_BYTE *)(a1 + 560) = *(_BYTE *)(a2 + 560);
  *(_QWORD *)(a1 + 552) = v26;
  v27 = *(_QWORD *)(a2 + 568);
  *(_BYTE *)(a1 + 576) = *(_BYTE *)(a2 + 576);
  *(_QWORD *)(a1 + 568) = v27;
  v28 = *(_QWORD *)(a2 + 584);
  *(_BYTE *)(a1 + 592) = *(_BYTE *)(a2 + 592);
  *(_QWORD *)(a1 + 584) = v28;
  v29 = *(_QWORD *)(a2 + 600);
  *(_BYTE *)(a1 + 608) = *(_BYTE *)(a2 + 608);
  *(_QWORD *)(a1 + 600) = v29;
  v30 = *(_QWORD *)(a2 + 616);
  *(_BYTE *)(a1 + 624) = *(_BYTE *)(a2 + 624);
  *(_QWORD *)(a1 + 616) = v30;
  v31 = *(_QWORD *)(a2 + 632);
  *(_BYTE *)(a1 + 640) = *(_BYTE *)(a2 + 640);
  *(_QWORD *)(a1 + 632) = v31;
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlannerGrainLatency(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 656))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlannerGrainLatency(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 648) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 656) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 656) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlannerGrainLatency()
{
  return &type metadata for PlannerGrainLatency;
}

uint64_t storeEnumTagSinglePayload for PlannerGrainStage(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_24041396C + 4 * byte_2408EA7D6[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2404139A0 + 4 * byte_2408EA7D1[v4]))();
}

uint64_t sub_2404139A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2404139A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2404139B0);
  return result;
}

uint64_t sub_2404139BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2404139C4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2404139C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2404139D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlannerGrainStage()
{
  return &type metadata for PlannerGrainStage;
}

unint64_t sub_2404139F0()
{
  unint64_t result;

  result = qword_256FFC370;
  if (!qword_256FFC370)
  {
    result = MEMORY[0x242684578](&unk_2408EA8FC, &type metadata for PlannerGrainStage);
    atomic_store(result, (unint64_t *)&qword_256FFC370);
  }
  return result;
}

uint64_t sub_240413A34()
{
  unint64_t v0;

  v0 = sub_2408E608C();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

char *keypath_get_selector_planCreatedToLastResolverEventTime()
{
  return sel_planCreatedToLastResolverEventTime;
}

id sub_240413A88@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_planCreatedToLastResolverEventTime);
  *a2 = result;
  return result;
}

id sub_240413AC0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlanCreatedToLastResolverEventTime_, *a1);
}

char *keypath_get_selector_planCreatedToActionResolverRequestTime()
{
  return sel_planCreatedToActionResolverRequestTime;
}

id sub_240413AE0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_planCreatedToActionResolverRequestTime);
  *a2 = result;
  return result;
}

id sub_240413B18(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlanCreatedToActionResolverRequestTime_, *a1);
}

char *keypath_get_selector_actionResolverRequestToLastResolverEventTime()
{
  return sel_actionResolverRequestToLastResolverEventTime;
}

id sub_240413B38@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_actionResolverRequestToLastResolverEventTime);
  *a2 = result;
  return result;
}

id sub_240413B70(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setActionResolverRequestToLastResolverEventTime_, *a1);
}

char *keypath_get_selector_resolverTotalQueryTime()
{
  return sel_resolverTotalQueryTime;
}

id sub_240413B90@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_resolverTotalQueryTime);
  *a2 = result;
  return result;
}

id sub_240413BC8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setResolverTotalQueryTime_, *a1);
}

char *keypath_get_selector_lastResolverEventToResponseGeneratedTime()
{
  return sel_lastResolverEventToResponseGeneratedTime;
}

id sub_240413BE8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_lastResolverEventToResponseGeneratedTime);
  *a2 = result;
  return result;
}

id sub_240413C20(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLastResolverEventToResponseGeneratedTime_, *a1);
}

char *keypath_get_selector_startToLastResolverEventTime()
{
  return sel_startToLastResolverEventTime;
}

id sub_240413C40@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_startToLastResolverEventTime);
  *a2 = result;
  return result;
}

id sub_240413C78(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartToLastResolverEventTime_, *a1);
}

char *keypath_get_selector_startToActionResolverRequestTime()
{
  return sel_startToActionResolverRequestTime;
}

id sub_240413C98@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_startToActionResolverRequestTime);
  *a2 = result;
  return result;
}

id sub_240413CD0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartToActionResolverRequestTime_, *a1);
}

uint64_t sub_240413CE4()
{
  return swift_release();
}

char *keypath_get_selector_plannerResponseTime()
{
  return sel_plannerResponseTime;
}

id sub_240413CF8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_plannerResponseTime);
  *a2 = result;
  return result;
}

id sub_240413D30(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlannerResponseTime_, *a1);
}

char *keypath_get_selector_startToPlanCreatedTime()
{
  return sel_startToPlanCreatedTime;
}

id sub_240413D50@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_startToPlanCreatedTime);
  *a2 = result;
  return result;
}

id sub_240413D88(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartToPlanCreatedTime_, *a1);
}

char *keypath_get_selector_startToLastQueryDecorationEventTime()
{
  return sel_startToLastQueryDecorationEventTime;
}

id sub_240413DA8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_startToLastQueryDecorationEventTime);
  *a2 = result;
  return result;
}

id sub_240413DE0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartToLastQueryDecorationEventTime_, *a1);
}

char *keypath_get_selector_lastQueryDecorationEventToPlanCreatedTime()
{
  return sel_lastQueryDecorationEventToPlanCreatedTime;
}

id sub_240413E00@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_lastQueryDecorationEventToPlanCreatedTime);
  *a2 = result;
  return result;
}

id sub_240413E38(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLastQueryDecorationEventToPlanCreatedTime_, *a1);
}

char *keypath_get_selector_startToContextRetrievedTime()
{
  return sel_startToContextRetrievedTime;
}

id sub_240413E58@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_startToContextRetrievedTime);
  *a2 = result;
  return result;
}

id sub_240413E90(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartToContextRetrievedTime_, *a1);
}

char *keypath_get_selector_startToToolsRetrievedTime()
{
  return sel_startToToolsRetrievedTime;
}

id sub_240413EB0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_startToToolsRetrievedTime);
  *a2 = result;
  return result;
}

id sub_240413EE8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartToToolsRetrievedTime_, *a1);
}

char *keypath_get_selector_startToEntitySpanMatchedTime()
{
  return sel_startToEntitySpanMatchedTime;
}

id sub_240413F08@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_startToEntitySpanMatchedTime);
  *a2 = result;
  return result;
}

id sub_240413F40(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartToEntitySpanMatchedTime_, *a1);
}

uint64_t sub_240413F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_240413F9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  id v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v10;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC3B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (unsigned __int8 *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94F60]), sel_init);
  sub_2404140A4(a1, (uint64_t)v4);
  v6 = type metadata accessor for ToolKitProtoQuery(0);
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) == 1)
  {
    sub_2404140EC((uint64_t)v4);
    goto LABEL_7;
  }
  v7 = *v4;
  sub_24041412C((uint64_t)v4);
  if (!v7)
  {
LABEL_7:
    if (v5)
    {
      v8 = 0;
      goto LABEL_11;
    }
    return v5;
  }
  if (v7 == 1)
  {
    if (v5)
    {
      v8 = 1;
LABEL_11:
      objc_msgSend(v5, sel_setSortOrder_, v8);
    }
  }
  else if (v5)
  {
    v8 = 2;
    goto LABEL_11;
  }
  return v5;
}

uint64_t sub_2404140A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC3B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2404140EC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC3B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24041412C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ToolKitProtoQuery(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240414168()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SpanEventMap()
{
  return objc_opt_self();
}

uint64_t PlannerGrainLatencyCalculator.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PlannerGrainLatencyCalculator.init()()
{
  uint64_t v0;

  return v0;
}

void sub_2404141D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD **a10)
{
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint8_t *v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE __src[664];

  if (qword_256FFA0A8 != -1)
    swift_once();
  v18 = sub_2408E5C48();
  __swift_project_value_buffer(v18, (uint64_t)qword_257072498);
  v19 = sub_2408E5C3C();
  v20 = sub_2408E5EC4();
  if (os_log_type_enabled(v19, v20))
  {
    v34 = a1;
    v21 = a2;
    v22 = a3;
    v23 = a4;
    v24 = a5;
    v25 = a6;
    v26 = a7;
    v27 = a8;
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_240347000, v19, v20, "PlannerGrainLatencyCalculator - building latency record", v28, 2u);
    v29 = v28;
    a8 = v27;
    a7 = v26;
    a6 = v25;
    a5 = v24;
    a4 = v23;
    a3 = v22;
    a2 = v21;
    a1 = v34;
    MEMORY[0x242684668](v29, -1, -1);
  }

  if (a1)
  {
    sub_240416028(a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)__src);
    swift_beginAccess();
    v30 = *a10;
    sub_240419C48((uint64_t)__src);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a10 = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v30 = sub_24050A750(0, v30[2] + 1, 1, v30);
      *a10 = v30;
    }
    v33 = v30[2];
    v32 = v30[3];
    if (v33 >= v32 >> 1)
    {
      v30 = sub_24050A750((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
      *a10 = v30;
    }
    v30[2] = v33 + 1;
    memcpy(&v30[82 * v33 + 4], __src, 0x290uLL);
    swift_endAccess();
    sub_240419CF0((uint64_t)__src);
  }
}

uint64_t PlannerGrainLatencyCalculator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PlannerGrainLatencyCalculator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_240414418(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int EnumCaseMultiPayload;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  char *v72;

  v3 = type metadata accessor for TranscriptProtoSessionError(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
  MEMORY[0x24BDAC7A8](v6);
  v70 = (uint64_t *)((char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  MEMORY[0x24BDAC7A8](v13);
  v71 = (uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TranscriptProtoRequest(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v69 - v25;
  if ((sub_240418348((uint64_t)a1) & 1) != 0)
  {
    v27 = a1[12];
    v1[7] = a1[11];
    v1[8] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v28 = a1[9];
    v1[5] = a1[8];
    v1[6] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v29 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210((uint64_t)a1 + *(int *)(v29 + 44), (uint64_t)v20, &qword_256FFA490);
  v30 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v20, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA490);
    v31 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v26, 1, 1, v31);
    return sub_2403A97FC((uint64_t)v26, &qword_256FFA488);
  }
  sub_2403A9210((uint64_t)v20, (uint64_t)v26, &qword_256FFA488);
  sub_240388AE4((uint64_t)v20, type metadata accessor for TranscriptProtoPayload);
  v32 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v26, 1, v32) == 1)
    return sub_2403A97FC((uint64_t)v26, &qword_256FFA488);
  sub_2403A9210((uint64_t)v26, (uint64_t)v24, &qword_256FFA488);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      sub_2403A91CC((uint64_t)v24, (uint64_t)v17, type metadata accessor for TranscriptProtoRequest);
      sub_2403A9210((uint64_t)&v17[*(int *)(v15 + 20)], (uint64_t)v12, &qword_256FFA350);
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoRequest);
      v33 = type metadata accessor for TranscriptProtoRequestContent(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v12, 1, v33) == 1)
      {
        sub_2403A97FC((uint64_t)v12, &qword_256FFA350);
        v34 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
        v35 = v71;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v71, 1, 1, v34);
      }
      else
      {
        v35 = v71;
        sub_2403A9210((uint64_t)v12, v71, &qword_256FFA348);
        sub_240388AE4((uint64_t)v12, type metadata accessor for TranscriptProtoRequestContent);
        v57 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v35, 1, v57) != 1)
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          sub_240388AE4(v35, type metadata accessor for TranscriptProtoRequestContentEnum);
          if (EnumCaseMultiPayload == 2)
          {
            v63 = v1[17];
            v38 = __OFADD__(v63, 1);
            v64 = v63 + 1;
            if (!v38)
            {
              v1[17] = v64;
              return sub_2403A97FC((uint64_t)v26, &qword_256FFA488);
            }
LABEL_50:
            __break(1u);
            JUMPOUT(0x240414B1CLL);
          }
          goto LABEL_27;
        }
      }
      sub_2403A97FC(v35, &qword_256FFA348);
LABEL_27:
      v58 = v1[9];
      v38 = __OFADD__(v58, 1);
      v59 = v58 + 1;
      if (!v38)
      {
        v1[9] = v59;
        return sub_2403A97FC((uint64_t)v26, &qword_256FFA488);
      }
      goto LABEL_48;
    case 4u:
      v36 = a1[1];
      v1[3] = *a1;
      v1[4] = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v37 = v1[10];
      v38 = __OFADD__(v37, 1);
      v39 = v37 + 1;
      if (v38)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      v1[10] = v39;
LABEL_21:
      sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoPayloadEnum);
      return sub_2403A97FC((uint64_t)v26, &qword_256FFA488);
    case 6u:
      v40 = v1[13];
      v38 = __OFADD__(v40, 1);
      v41 = v40 + 1;
      if (v38)
        goto LABEL_42;
      v1[13] = v41;
      goto LABEL_21;
    case 7u:
      v42 = v1[11];
      v38 = __OFADD__(v42, 1);
      v43 = v42 + 1;
      if (v38)
        goto LABEL_46;
      v1[11] = v43;
      goto LABEL_21;
    case 0xAu:
      sub_2403A91CC((uint64_t)v24, (uint64_t)v5, type metadata accessor for TranscriptProtoSessionError);
      v44 = v1[18];
      v38 = __OFADD__(v44, 1);
      v45 = v44 + 1;
      if (v38)
        goto LABEL_47;
      v1[18] = v45;
      v46 = getFailureInfo(from:)((uint64_t)v5);
      v47 = type metadata accessor for TranscriptProtoSessionError;
      goto LABEL_39;
    case 0xFu:
      v48 = v1[12];
      v38 = __OFADD__(v48, 1);
      v49 = v48 + 1;
      if (v38)
        goto LABEL_43;
      v1[12] = v49;
      goto LABEL_21;
    case 0x11u:
      v50 = v1[14];
      v38 = __OFADD__(v50, 1);
      v51 = v50 + 1;
      if (v38)
        goto LABEL_44;
      v1[14] = v51;
      goto LABEL_21;
    case 0x1Du:
      v5 = v72;
      sub_2403A91CC((uint64_t)v24, (uint64_t)v72, type metadata accessor for TranscriptProtoStatementResult);
      v52 = v1[15];
      v38 = __OFADD__(v52, 1);
      v53 = v52 + 1;
      if (v38)
        goto LABEL_45;
      v1[15] = v53;
      v54 = (uint64_t)a1 + *(int *)(v29 + 60);
      v55 = v70;
      sub_2403A9210(v54, (uint64_t)v70, &qword_256FFA4A8);
      v56 = type metadata accessor for TranscriptProtoParticipantID(0);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56) == 1)
      {
        sub_2403A97FC((uint64_t)v55, &qword_256FFA4A8);
        goto LABEL_38;
      }
      v61 = *v55;
      v60 = v55[1];
      swift_bridgeObjectRetain();
      sub_240388AE4((uint64_t)v55, type metadata accessor for TranscriptProtoParticipantID);
      if (v61 == 0x72656E6E616C70 && v60 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v65 = sub_2408E617C();
        swift_bridgeObjectRelease();
        if ((v65 & 1) == 0)
          goto LABEL_38;
      }
      v66 = v1[16];
      v38 = __OFADD__(v66, 1);
      v67 = v66 + 1;
      if (v38)
      {
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      v1[16] = v67;
LABEL_38:
      v46 = getFailureInfo(from:)((uint64_t)v5);
      v47 = type metadata accessor for TranscriptProtoStatementResult;
LABEL_39:
      sub_240388AE4((uint64_t)v5, v47);
      v1[19] = v46;
      swift_release();
      return sub_2403A97FC((uint64_t)v26, &qword_256FFA488);
    default:
      goto LABEL_21;
  }
}

uint64_t sub_240414B88()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

double sub_240414BC4()
{
  uint64_t v0;
  double result;

  *(_BYTE *)(v0 + 16) = 6;
  result = 0.0;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(_QWORD *)(v0 + 152) = 0;
  return result;
}

uint64_t sub_240414BFC(_QWORD *a1)
{
  return sub_240414418(a1);
}

void sub_240414C1C()
{
  qword_257072460 = (uint64_t)&unk_2510A6078;
}

void sub_240414C30()
{
  qword_257072468 = (uint64_t)&unk_2510A64C8;
}

void sub_240414C44()
{
  qword_257072470 = (uint64_t)&unk_2510A64F0;
}

void sub_240414C58()
{
  qword_257072478 = (uint64_t)&unk_2510A6518;
}

uint64_t sub_240414C6C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC08);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2408EADB0;
  v2 = v0[2];
  *(_QWORD *)(v1 + 56) = type metadata accessor for PlannerGrainDimensionsSpec();
  *(_QWORD *)(v1 + 64) = &off_2510A8D80;
  *(_QWORD *)(v1 + 32) = v2;
  v3 = v0[3];
  v4 = type metadata accessor for LatencyIntervalSpec();
  *(_QWORD *)(v1 + 96) = v4;
  *(_QWORD *)(v1 + 104) = &off_2510A8600;
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 136) = v4;
  *(_QWORD *)(v1 + 144) = &off_2510A8600;
  v5 = v0[5];
  *(_QWORD *)(v1 + 112) = v0[4];
  *(_QWORD *)(v1 + 176) = v4;
  *(_QWORD *)(v1 + 184) = &off_2510A8600;
  *(_QWORD *)(v1 + 152) = v5;
  *(_QWORD *)(v1 + 216) = v4;
  *(_QWORD *)(v1 + 224) = &off_2510A8600;
  v6 = v0[7];
  *(_QWORD *)(v1 + 192) = v0[6];
  *(_QWORD *)(v1 + 256) = v4;
  *(_QWORD *)(v1 + 264) = &off_2510A8600;
  *(_QWORD *)(v1 + 232) = v6;
  *(_QWORD *)(v1 + 296) = v4;
  *(_QWORD *)(v1 + 304) = &off_2510A8600;
  v7 = v0[9];
  *(_QWORD *)(v1 + 272) = v0[8];
  *(_QWORD *)(v1 + 336) = v4;
  *(_QWORD *)(v1 + 344) = &off_2510A8600;
  *(_QWORD *)(v1 + 312) = v7;
  *(_QWORD *)(v1 + 376) = v4;
  *(_QWORD *)(v1 + 384) = &off_2510A8600;
  v8 = v0[11];
  *(_QWORD *)(v1 + 352) = v0[10];
  *(_QWORD *)(v1 + 416) = v4;
  *(_QWORD *)(v1 + 424) = &off_2510A8600;
  *(_QWORD *)(v1 + 392) = v8;
  *(_QWORD *)(v1 + 456) = v4;
  *(_QWORD *)(v1 + 464) = &off_2510A8600;
  v9 = v0[13];
  *(_QWORD *)(v1 + 432) = v0[12];
  *(_QWORD *)(v1 + 496) = v4;
  *(_QWORD *)(v1 + 504) = &off_2510A8600;
  *(_QWORD *)(v1 + 472) = v9;
  *(_QWORD *)(v1 + 536) = v4;
  *(_QWORD *)(v1 + 544) = &off_2510A8600;
  v10 = v0[15];
  *(_QWORD *)(v1 + 512) = v0[14];
  *(_QWORD *)(v1 + 576) = v4;
  *(_QWORD *)(v1 + 584) = &off_2510A8600;
  *(_QWORD *)(v1 + 552) = v10;
  v11 = v0[16];
  *(_QWORD *)(v1 + 616) = v4;
  *(_QWORD *)(v1 + 624) = &off_2510A8600;
  *(_QWORD *)(v1 + 592) = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_240414E2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (_QWORD *)((char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 80);
  v6 = v5 + 64;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v5 + 64);
  swift_beginAccess();
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      return result;
    }
    if (v15 >= v10)
      goto LABEL_23;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_23;
      v16 = *(_QWORD *)(v6 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_23;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        if (!v16)
        {
          v12 = v15 + 3;
          if (v15 + 3 >= v10)
            goto LABEL_23;
          v16 = *(_QWORD *)(v6 + 8 * v12);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_5:
    result = sub_240518204(&v29, *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v14));
  }
  v17 = v15 + 4;
  if (v17 < v10)
  {
    v16 = *(_QWORD *)(v6 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        v12 = v17 + 1;
        if (__OFADD__(v17, 1))
          goto LABEL_31;
        if (v12 >= v10)
          goto LABEL_23;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        ++v17;
        if (v16)
          goto LABEL_22;
      }
    }
    v12 = v17;
    goto LABEL_22;
  }
LABEL_23:
  swift_endAccess();
  swift_release();
  v18 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v18 + 64), (uint64_t)v4, &qword_256FFA4B0);
  v19 = type metadata accessor for TranscriptProtoSpanID(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v4, 1, v19) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA4B0);
  }
  else
  {
    v20 = *v4;
    sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSpanID);
    swift_beginAccess();
    sub_240518204(&v29, v20);
    swift_endAccess();
  }
  v21 = sub_240414C6C();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v23 = v21 + 32;
    do
    {
      sub_2403AE340(v23, (uint64_t)v26);
      v24 = v27;
      v25 = v28;
      __swift_project_boxed_opaque_existential_1(v26, v27);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 8))(a1, v24, v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
      v23 += 40;
      --v22;
    }
    while (v22);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2404150F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, uint64_t, uint64_t);
  int v69;
  uint64_t v70;
  uint64_t v71;
  int EnumCaseMultiPayload;
  uint64_t (*v73)(uint64_t);
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  char v107;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t (*v113)(uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138[3];
  unsigned __int8 v139;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
  MEMORY[0x24BDAC7A8](v0);
  v120 = (uint64_t)&v117 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v117 = (uint64_t)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v121 = (uint64_t)&v117 - v5;
  v118 = type metadata accessor for TranscriptProtoRequest(0);
  MEMORY[0x24BDAC7A8](v118);
  v119 = (uint64_t)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC940);
  MEMORY[0x24BDAC7A8](v131);
  v8 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v127 = (uint64_t)&v117 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v126 = (uint64_t)&v117 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v117 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v117 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v124 = (uint64_t)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v123 = (uint64_t)&v117 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v125 = (uint64_t)&v117 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v122 = (uint64_t)&v117 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v128 = (uint64_t)&v117 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v117 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v117 - v33;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAFF0);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v130 = (uint64_t)&v117 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v129 = (uint64_t)&v117 - v39;
  v40 = MEMORY[0x24BDAC7A8](v38);
  v136 = (uint64_t)&v117 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v133 = (uint64_t)&v117 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v117 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44);
  v49 = (char *)&v117 - v48;
  v50 = MEMORY[0x24BDAC7A8](v47);
  MEMORY[0x24BDAC7A8](v50);
  v52 = (char *)&v117 - v51;
  v139 = 6;
  v134 = v53;
  sub_2403B8884((uint64_t)&v117 - v51, v53);
  v135 = v52;
  sub_2403A9210((uint64_t)v52, (uint64_t)v49, &qword_256FFAFF0);
  v54 = type metadata accessor for TranscriptProtoEvent(0);
  v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48);
  if (v55(v49, 1, v54) == 1)
  {
    v56 = &qword_256FFAFF0;
    v57 = (uint64_t)v49;
LABEL_5:
    sub_2403A97FC(v57, v56);
    v59 = v134;
    v60 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v34, 1, 1, v60);
    goto LABEL_7;
  }
  sub_2403A9210((uint64_t)&v49[*(int *)(v54 + 44)], (uint64_t)v18, &qword_256FFA490);
  sub_240388AE4((uint64_t)v49, type metadata accessor for TranscriptProtoEvent);
  v58 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v18, 1, v58) == 1)
  {
    v56 = &qword_256FFA490;
    v57 = (uint64_t)v18;
    goto LABEL_5;
  }
  sub_2403A9210((uint64_t)v18, (uint64_t)v34, &qword_256FFA488);
  sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoPayload);
  v59 = v134;
LABEL_7:
  sub_2403A9210(v59, (uint64_t)v46, &qword_256FFAFF0);
  v61 = v55(v46, 1, v54);
  v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v55;
  if (v61 == 1)
  {
    v62 = &qword_256FFAFF0;
    v63 = (uint64_t)v46;
LABEL_11:
    sub_2403A97FC(v63, v62);
    v65 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v32, 1, 1, v65);
    goto LABEL_13;
  }
  sub_2403A9210((uint64_t)&v46[*(int *)(v54 + 44)], (uint64_t)v16, &qword_256FFA490);
  sub_240388AE4((uint64_t)v46, type metadata accessor for TranscriptProtoEvent);
  v64 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v16, 1, v64) == 1)
  {
    v62 = &qword_256FFA490;
    v63 = (uint64_t)v16;
    goto LABEL_11;
  }
  sub_2403A9210((uint64_t)v16, (uint64_t)v32, &qword_256FFA488);
  sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoPayload);
LABEL_13:
  v66 = (uint64_t)&v8[*(int *)(v131 + 48)];
  sub_2403B80A4((uint64_t)v34, (uint64_t)v8, &qword_256FFA488);
  sub_2403B80A4((uint64_t)v32, v66, &qword_256FFA488);
  v67 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v68 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 48);
  v69 = v68(v8, 1, v67);
  v70 = (uint64_t)v135;
  if (v69 == 1)
  {
LABEL_21:
    v139 = 6;
    v74 = &qword_256FFC940;
    goto LABEL_22;
  }
  v71 = v128;
  sub_2403A9210((uint64_t)v8, v128, &qword_256FFA488);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 29)
  {
    if (EnumCaseMultiPayload == 3)
    {
      if (v68((char *)v66, 1, v67) == 1)
      {
        v73 = type metadata accessor for TranscriptProtoRequest;
LABEL_20:
        sub_240388AE4(v71, v73);
        goto LABEL_21;
      }
      v99 = v122;
      sub_2403A9210(v66, v122, &qword_256FFA488);
      v100 = swift_getEnumCaseMultiPayload();
      if (v100 != 28)
      {
        v73 = type metadata accessor for TranscriptProtoRequest;
        if (v100 == 5)
        {
          v101 = v119;
          sub_2403A91CC(v71, v119, type metadata accessor for TranscriptProtoRequest);
          v102 = v120;
          sub_2403A9210(v101 + *(int *)(v118 + 20), v120, &qword_256FFA350);
          sub_240388AE4(v101, type metadata accessor for TranscriptProtoRequest);
          v103 = type metadata accessor for TranscriptProtoRequestContent(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 48))(v102, 1, v103) == 1)
          {
            sub_2403A97FC(v102, &qword_256FFA350);
            v104 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            v105 = v121;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v121, 1, 1, v104);
          }
          else
          {
            v105 = v121;
            sub_2403A9210(v102, v121, &qword_256FFA348);
            sub_240388AE4(v102, type metadata accessor for TranscriptProtoRequestContent);
            v115 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 48))(v105, 1, v115) != 1)
            {
              v116 = v117;
              sub_2403A9210(v105, v117, &qword_256FFA348);
              if (swift_getEnumCaseMultiPayload() == 2)
              {
                v139 = 3;
                sub_240388AE4(v116, type metadata accessor for TranscriptProtoRequestContentEnum);
LABEL_63:
                sub_2403A97FC(v105, &qword_256FFA348);
                v113 = type metadata accessor for TranscriptProtoPayloadEnum;
                v114 = v122;
                goto LABEL_64;
              }
              sub_240388AE4(v116, type metadata accessor for TranscriptProtoRequestContentEnum);
            }
          }
          v139 = 0;
          goto LABEL_63;
        }
LABEL_57:
        sub_240388AE4(v99, type metadata accessor for TranscriptProtoPayloadEnum);
        goto LABEL_20;
      }
      v139 = 2;
      sub_240388AE4(v99, type metadata accessor for TranscriptProtoPayloadEnum);
      v113 = type metadata accessor for TranscriptProtoRequest;
      v114 = v71;
      goto LABEL_64;
    }
LABEL_19:
    v73 = type metadata accessor for TranscriptProtoPayloadEnum;
    goto LABEL_20;
  }
  if (v68((char *)v66, 1, v67) == 1)
    goto LABEL_19;
  sub_2403A9210(v66, v125, &qword_256FFA488);
  v106 = swift_getEnumCaseMultiPayload();
  switch(v106)
  {
    case 5:
      v107 = 1;
      break;
    case 28:
      v107 = 4;
      break;
    case 23:
      v107 = 5;
      break;
    default:
      v73 = type metadata accessor for TranscriptProtoPayloadEnum;
      v99 = v125;
      goto LABEL_57;
  }
  v139 = v107;
  sub_240388AE4(v125, type metadata accessor for TranscriptProtoPayloadEnum);
  v114 = v71;
  v113 = type metadata accessor for TranscriptProtoPayloadEnum;
LABEL_64:
  sub_240388AE4(v114, v113);
  v74 = &qword_256FFA488;
  sub_2403A97FC(v66, &qword_256FFA488);
LABEL_22:
  v131 = (uint64_t)v68;
  sub_2403A97FC((uint64_t)v8, v74);
  if (qword_256FFA0A8 != -1)
    swift_once();
  v75 = sub_2408E5C48();
  __swift_project_value_buffer(v75, (uint64_t)qword_257072498);
  v76 = v133;
  sub_2403A9210(v70, v133, &qword_256FFAFF0);
  v77 = v136;
  sub_2403A9210(v59, v136, &qword_256FFAFF0);
  v78 = v139;
  v79 = v59;
  v80 = sub_2408E5C3C();
  v81 = sub_2408E5EA0();
  if (os_log_type_enabled(v80, v81))
  {
    v82 = swift_slowAlloc();
    v128 = swift_slowAlloc();
    v138[0] = v128;
    *(_DWORD *)v82 = 136315650;
    v83 = v129;
    sub_2403A9210(v76, v129, &qword_256FFAFF0);
    if (v132(v83, 1, v54) == 1)
    {
      v84 = &qword_256FFAFF0;
      v85 = v83;
    }
    else
    {
      v86 = v126;
      sub_2403A9210(v83 + *(int *)(v54 + 44), v126, &qword_256FFA490);
      sub_240388AE4(v83, type metadata accessor for TranscriptProtoEvent);
      v87 = type metadata accessor for TranscriptProtoPayload(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 48))(v86, 1, v87) == 1)
      {
        v84 = &qword_256FFA490;
        v85 = v86;
      }
      else
      {
        v88 = v123;
        sub_2403A9210(v86, v123, &qword_256FFA488);
        sub_240388AE4(v86, type metadata accessor for TranscriptProtoPayload);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v131)(v88, 1, v67) != 1)
        {
          TranscriptProtoPayloadEnum.eventTypeString.getter();
          v90 = v109;
          v89 = v110;
          sub_240388AE4(v88, type metadata accessor for TranscriptProtoPayloadEnum);
LABEL_33:
          v137 = sub_2403B3ED0(v90, v89, v138);
          sub_2408E5F3C();
          swift_bridgeObjectRelease();
          sub_2403A97FC(v133, &qword_256FFAFF0);
          *(_WORD *)(v82 + 12) = 2080;
          v91 = v130;
          sub_2403A9210(v136, v130, &qword_256FFAFF0);
          if (v132(v91, 1, v54) == 1)
          {
            sub_2403A97FC(v91, &qword_256FFAFF0);
            v92 = 0xE300000000000000;
          }
          else
          {
            v93 = v127;
            sub_2403A9210(v91 + *(int *)(v54 + 44), v127, &qword_256FFA490);
            sub_240388AE4(v91, type metadata accessor for TranscriptProtoEvent);
            v94 = type metadata accessor for TranscriptProtoPayload(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 48))(v93, 1, v94) == 1)
            {
              v95 = &qword_256FFA490;
              v96 = v93;
            }
            else
            {
              v97 = v124;
              sub_2403A9210(v93, v124, &qword_256FFA488);
              sub_240388AE4(v93, type metadata accessor for TranscriptProtoPayload);
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v131)(v97, 1, v67) != 1)
              {
                TranscriptProtoPayloadEnum.eventTypeString.getter();
                v98 = v111;
                v92 = v112;
                sub_240388AE4(v97, type metadata accessor for TranscriptProtoPayloadEnum);
LABEL_41:
                v137 = sub_2403B3ED0(v98, v92, v138);
                sub_2408E5F3C();
                swift_bridgeObjectRelease();
                sub_2403A97FC(v136, &qword_256FFAFF0);
                *(_WORD *)(v82 + 22) = 2080;
                __asm { BR              X9 ; loc_240415BA8 loc_240415CF8 loc_240415D04 loc_240415D24 loc_240415D48 ... }
              }
              v95 = &qword_256FFA488;
              v96 = v97;
            }
            sub_2403A97FC(v96, v95);
            v92 = 0xE300000000000000;
          }
          v98 = 7104878;
          goto LABEL_41;
        }
        v84 = &qword_256FFA488;
        v85 = v88;
      }
    }
    sub_2403A97FC(v85, v84);
    v89 = 0xE300000000000000;
    v90 = 7104878;
    goto LABEL_33;
  }

  sub_2403A97FC(v77, &qword_256FFAFF0);
  sub_2403A97FC(v76, &qword_256FFAFF0);
  sub_2403A97FC(v79, &qword_256FFAFF0);
  sub_2403A97FC(v70, &qword_256FFAFF0);
  swift_beginAccess();
  return v139;
}

uint64_t sub_240416028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  int v129;
  int v130;
  int v131;
  int v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  __n128 v176;
  char v177;

  v10 = v9;
  v170 = a5;
  v171 = a6;
  v172 = a4;
  v173 = a2;
  v168 = a1;
  v169 = a3;
  v167 = a9;
  v13 = sub_2408E5AB0();
  v128 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_2404150F0();
  v16 = *(_QWORD **)(v9 + 16);
  v17 = v16[19];
  v159 = a8;
  if (a8)
  {
    swift_beginAccess();
    v18 = *(_QWORD *)(v9 + 136);
    swift_beginAccess();
    v19 = *(_QWORD *)(a8 + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = updatePlannerFailureSubtype(of:for:using:)(v17, v18, v19);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v163 = v20;
  }
  else
  {
    v163 = v17;
    swift_retain();
  }
  v21 = v16[6];
  v165 = v16[5];
  v22 = v16[7];
  v175 = v16[8];
  v162 = v16[3];
  v174 = v16[4];
  v23 = a7 + *(int *)(type metadata accessor for RequestData(0) + 32);
  if (*(_QWORD *)(v23 + 40))
  {
    v25 = *(_QWORD *)(v23 + 8);
    v24 = *(_QWORD *)(v23 + 16);
    v26 = *(_BYTE *)(v23 + 24);
    sub_2403ADAA8(v25, v24, v26);
  }
  else
  {
    v24 = 0;
    v26 = 2;
    v25 = 3;
  }
  v176.n128_u64[0] = v25;
  v176.n128_u64[1] = v24;
  v177 = v26;
  v27 = v16[10];
  v120 = v16[9];
  v161 = v16[11];
  v28 = v16[13];
  v160 = v16[12];
  v158 = v16[14];
  v157 = v16[15];
  v156 = v16[16];
  v29 = v16[17];
  v30 = v16[18];
  v155 = v29;
  swift_bridgeObjectRetain();
  v164 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v154 = sub_2403B8ABC();
  v151 = v31;
  v153 = sub_2403B8ABC();
  v149 = v32;
  v152 = sub_2403B8ABC();
  v147 = v33;
  v150 = sub_2403B8ABC();
  v145 = v34;
  v148 = sub_2403B8ABC();
  v142 = v35;
  v146 = sub_2403B8ABC();
  v140 = v36;
  v144 = sub_2403B8ABC();
  v138 = v37;
  v143 = sub_2403B8ABC();
  v136 = v38;
  v141 = sub_2403B8ABC();
  v134 = v39;
  v139 = sub_2403B8ABC();
  v132 = v40;
  v137 = sub_2403B8ABC();
  v131 = v41;
  v135 = sub_2403B8ABC();
  v130 = v42;
  v133 = sub_2403B8ABC();
  v129 = v43;
  v45 = sub_2403B8ABC();
  if (v159)
  {
    v104 = v44;
    v46 = *MEMORY[0x24BE585B8];
    v106 = v30;
    v47 = v128;
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v128 + 104);
    v105 = v45;
    v48(v15, v46, v13);
    swift_beginAccess();
    v108 = v27;
    v49 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v103 = sub_2408DEEAC((uint64_t)v15, v49);
    v51 = v50;
    swift_bridgeObjectRelease();
    v102 = v51 & 1;
    v109 = v22;
    v52 = *(void (**)(char *, uint64_t))(v47 + 8);
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE585A8], v13);
    v53 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v101 = sub_2408DEEAC((uint64_t)v15, v53);
    v55 = v54;
    swift_bridgeObjectRelease();
    v100 = v55 & 1;
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE585F0], v13);
    v56 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v128 = sub_2408DEEAC((uint64_t)v15, v56);
    v58 = v57;
    swift_bridgeObjectRelease();
    v127 = v58 & 1;
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE585D8], v13);
    v59 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v126 = sub_2408DEEAC((uint64_t)v15, v59);
    v61 = v60;
    swift_bridgeObjectRelease();
    v125 = v61 & 1;
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE585B0], v13);
    v62 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v124 = sub_2408DEEAC((uint64_t)v15, v62);
    v64 = v63;
    swift_bridgeObjectRelease();
    v123 = v64 & 1;
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE585C8], v13);
    v65 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v122 = sub_2408DEEAC((uint64_t)v15, v65);
    v67 = v66;
    swift_bridgeObjectRelease();
    v121 = v67 & 1;
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE58620], v13);
    v68 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v99 = sub_2408DEEAC((uint64_t)v15, v68);
    v70 = v69;
    swift_bridgeObjectRelease();
    v119 = v70 & 1;
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE585A0], v13);
    v71 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v118 = sub_2408DEEAC((uint64_t)v15, v71);
    v73 = v72;
    swift_bridgeObjectRelease();
    v117 = v73 & 1;
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE58608], v13);
    v74 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v116 = sub_2408DEEAC((uint64_t)v15, v74);
    v76 = v75;
    swift_bridgeObjectRelease();
    v115 = v76 & 1;
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE585E8], v13);
    v77 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v114 = sub_2408DEEAC((uint64_t)v15, v77);
    v79 = v78;
    swift_bridgeObjectRelease();
    v113 = v79 & 1;
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE585C0], v13);
    v107 = v28;
    v80 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v112 = sub_2408DEEAC((uint64_t)v15, v80);
    v82 = v81;
    swift_bridgeObjectRelease();
    v111 = v82 & 1;
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE585E0], v13);
    v83 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    v110 = sub_2408DEEAC((uint64_t)v15, v83);
    swift_bridgeObjectRelease();
    v52(v15, v13);
    v48(v15, *MEMORY[0x24BE58628], v13);
    v30 = v106;
    v84 = *(_QWORD *)(v10 + 136);
    swift_bridgeObjectRetain();
    sub_2408DEEAC((uint64_t)v15, v84);
    v85 = v99;
    v28 = v107;
    v27 = v108;
    swift_bridgeObjectRelease();
    v86 = v15;
    v87 = v102;
    v88 = v13;
    v89 = v101;
    v52(v86, v88);
    v90 = v100;
    v91 = v103;
    LOBYTE(v44) = v104;
    v45 = v105;
    v22 = v109;
  }
  else
  {
    v110 = 0;
    v112 = 0;
    v114 = 0;
    v116 = 0;
    v118 = 0;
    v85 = 0;
    v122 = 0;
    v124 = 0;
    v126 = 0;
    v128 = 0;
    v89 = 0;
    v91 = 0;
    v111 = 1;
    v113 = 1;
    v115 = 1;
    v117 = 1;
    v119 = 1;
    v121 = 1;
    v123 = 1;
    v125 = 1;
    v127 = 1;
    v90 = 1;
    v87 = 1;
  }
  *((_QWORD *)&v98 + 1) = v30;
  *(_QWORD *)&v98 = v155;
  *((_QWORD *)&v97 + 1) = v156;
  *(_QWORD *)&v97 = v157;
  *(_QWORD *)&v96 = v28;
  *((_QWORD *)&v96 + 1) = v158;
  *((_QWORD *)&v95 + 1) = v160;
  *((_QWORD *)&v94 + 1) = v27;
  *(_QWORD *)&v95 = v161;
  *(_QWORD *)&v94 = v120;
  *(_QWORD *)&v93 = v22;
  *((_QWORD *)&v93 + 1) = v175;
  sub_24040E5F4(v168, v173, v169, v172, v170, v171, v165, v164, v167, v93, v162, v174, &v176, v166, v94, v95, v96, v97, v98,
    v154,
    v151 & 1,
    v153,
    v149 & 1,
    v152,
    v147 & 1,
    v150,
    v145 & 1,
    v148,
    v142 & 1,
    v146,
    v140 & 1,
    v144,
    v138 & 1,
    v143,
    v136 & 1,
    v141,
    v134 & 1,
    v139,
    v132 & 1,
    v137,
    v131 & 1,
    v135,
    v130 & 1,
    v133,
    v129 & 1,
    v45,
    v44 & 1,
    v91,
    v87,
    v89,
    v90,
    v128,
    v127,
    v126,
    v125,
    v124,
    v123,
    v122,
    v121,
    v85,
    v119,
    v118,
    v117);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_240416D24()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_240416DB8()
{
  sub_240416D24();
  return swift_deallocClassInstance();
}

_QWORD *sub_240416DD8()
{
  _QWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  _QWORD *v66;
  _BYTE v67[40];
  _QWORD v68[3];
  uint64_t v69;
  _UNKNOWN **v70;

  type metadata accessor for PlannerGrainDimensionsSpec();
  v1 = swift_allocObject();
  *(_BYTE *)(v1 + 16) = 6;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_QWORD *)(v1 + 152) = 0;
  v0[2] = v1;
  type metadata accessor for LatencyIntervalSpec();
  v2 = (_OWORD *)swift_allocObject();
  v2[1] = 0u;
  v2[2] = 0u;
  v2[3] = 0u;
  v2[4] = 0u;
  v2[5] = 0u;
  if (qword_256FF8FB0 != -1)
    swift_once();
  v3 = qword_257072460;
  type metadata accessor for Next(0);
  v4 = swift_allocObject();
  v5 = v4 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent;
  v6 = type metadata accessor for TranscriptProtoEvent(0);
  v7 = v5;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v8(v7, 1, 1, v6);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v3;
  v69 = type metadata accessor for EventFilter(0);
  v70 = &off_2510A85E8;
  v65 = v69;
  v68[0] = v4;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v2 + 1));
  swift_endAccess();
  if (qword_256FF8FB8 != -1)
    swift_once();
  v9 = qword_257072468;
  type metadata accessor for Last(0);
  v10 = swift_allocObject();
  v8(v10 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v10 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v9;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v10;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v2 + 56);
  swift_endAccess();
  v0[3] = v2;
  v11 = (_OWORD *)swift_allocObject();
  v11[2] = 0u;
  v11[3] = 0u;
  v11[4] = 0u;
  v11[5] = 0u;
  v11[1] = 0u;
  v12 = qword_257072460;
  v66 = v0;
  v13 = swift_allocObject();
  v8(v13 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v13 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v12;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v13;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v11 + 1));
  swift_endAccess();
  if (qword_256FF8FC0 != -1)
    swift_once();
  v14 = qword_257072470;
  v15 = swift_allocObject();
  v8(v15 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v14;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v15;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v11 + 56);
  swift_endAccess();
  v66[4] = v11;
  v16 = (_OWORD *)swift_allocObject();
  v16[2] = 0u;
  v16[3] = 0u;
  v16[4] = 0u;
  v16[5] = 0u;
  v16[1] = 0u;
  v17 = qword_257072460;
  v18 = swift_allocObject();
  ((void (*)(uint64_t, uint64_t, uint64_t))v8)(v18 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1);
  *(_QWORD *)(v18 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v17;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v18;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v16 + 1));
  swift_endAccess();
  v19 = swift_allocObject();
  v8(v19 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v19 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6540;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v19;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v16 + 56);
  swift_endAccess();
  v66[5] = v16;
  v20 = (_OWORD *)swift_allocObject();
  v20[2] = 0u;
  v20[3] = 0u;
  v20[4] = 0u;
  v20[5] = 0u;
  v20[1] = 0u;
  v21 = qword_257072460;
  v22 = swift_allocObject();
  v8(v22 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v22 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v21;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v22;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v20 + 1));
  swift_endAccess();
  v23 = swift_allocObject();
  v8(v23 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v23 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6568;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v23;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v20 + 56);
  swift_endAccess();
  v66[6] = v20;
  v24 = (_OWORD *)swift_allocObject();
  v24[2] = 0u;
  v24[3] = 0u;
  v24[4] = 0u;
  v24[5] = 0u;
  v24[1] = 0u;
  v25 = qword_257072460;
  v26 = swift_allocObject();
  v8(v26 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v26 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v25;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v26;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v24 + 1));
  swift_endAccess();
  if (qword_256FF8FC8 != -1)
    swift_once();
  v27 = qword_257072478;
  v28 = swift_allocObject();
  v8(v28 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v28 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v27;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v28;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v24 + 56);
  swift_endAccess();
  v66[7] = v24;
  v29 = (_OWORD *)swift_allocObject();
  v29[2] = 0u;
  v29[3] = 0u;
  v29[4] = 0u;
  v29[5] = 0u;
  v29[1] = 0u;
  v30 = qword_257072470;
  v31 = swift_allocObject();
  v8(v31 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v31 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v30;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v31;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v29 + 1));
  swift_endAccess();
  v32 = swift_allocObject();
  v8(v32 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6590;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v32;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v29 + 56);
  swift_endAccess();
  v66[8] = v29;
  v33 = (_OWORD *)swift_allocObject();
  v33[2] = 0u;
  v33[3] = 0u;
  v33[4] = 0u;
  v33[5] = 0u;
  v33[1] = 0u;
  v34 = swift_allocObject();
  v8(v34 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v34 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A65B8;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v34;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v33 + 1));
  swift_endAccess();
  v35 = qword_257072470;
  v36 = swift_allocObject();
  v8(v36 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v36 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v35;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v36;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v33 + 56);
  swift_endAccess();
  v66[9] = v33;
  v37 = (_OWORD *)swift_allocObject();
  v37[2] = 0u;
  v37[3] = 0u;
  v37[4] = 0u;
  v37[5] = 0u;
  v37[1] = 0u;
  v38 = swift_allocObject();
  v8(v38 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v38 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A65E0;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v38;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v37 + 1));
  swift_endAccess();
  v39 = qword_257072470;
  v40 = swift_allocObject();
  v8(v40 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v40 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v39;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v40;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v37 + 56);
  swift_endAccess();
  v66[10] = v37;
  v41 = (_OWORD *)swift_allocObject();
  v41[2] = 0u;
  v41[3] = 0u;
  v41[4] = 0u;
  v41[5] = 0u;
  v41[1] = 0u;
  v42 = swift_allocObject();
  v8(v42 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v42 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6608;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v42;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v41 + 1));
  swift_endAccess();
  v43 = swift_allocObject();
  v8(v43 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v43 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6630;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v43;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v41 + 56);
  swift_endAccess();
  v66[11] = v41;
  v44 = (_OWORD *)swift_allocObject();
  v44[2] = 0u;
  v44[3] = 0u;
  v44[4] = 0u;
  v44[5] = 0u;
  v44[1] = 0u;
  v45 = qword_257072478;
  v46 = swift_allocObject();
  v8(v46 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v46 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v45;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v46;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v44 + 1));
  swift_endAccess();
  v47 = swift_allocObject();
  v8(v47 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v47 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6658;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v47;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v44 + 56);
  swift_endAccess();
  v66[12] = v44;
  v48 = (_OWORD *)swift_allocObject();
  v48[2] = 0u;
  v48[3] = 0u;
  v48[4] = 0u;
  v48[5] = 0u;
  v48[1] = 0u;
  v49 = qword_257072460;
  v50 = swift_allocObject();
  v8(v50 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v50 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v49;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v50;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v48 + 1));
  swift_endAccess();
  v51 = swift_allocObject();
  v8(v51 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v51 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6680;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v51;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v48 + 56);
  swift_endAccess();
  v66[13] = v48;
  v52 = (_OWORD *)swift_allocObject();
  v52[2] = 0u;
  v52[3] = 0u;
  v52[4] = 0u;
  v52[5] = 0u;
  v52[1] = 0u;
  v53 = qword_257072460;
  v54 = swift_allocObject();
  v8(v54 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v54 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v53;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v54;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v52 + 1));
  swift_endAccess();
  v55 = swift_allocObject();
  v8(v55 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v55 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A66A8;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v55;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v52 + 56);
  swift_endAccess();
  v66[14] = v52;
  v56 = (_OWORD *)swift_allocObject();
  v56[2] = 0u;
  v56[3] = 0u;
  v56[4] = 0u;
  v56[5] = 0u;
  v56[1] = 0u;
  v57 = qword_257072460;
  v58 = swift_allocObject();
  v8(v58 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v58 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = v57;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v58;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v56 + 1));
  swift_endAccess();
  v59 = swift_allocObject();
  v8(v59 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v59 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A66D0;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v59;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v56 + 56);
  swift_endAccess();
  v66[15] = v56;
  v60 = (_OWORD *)swift_allocObject();
  v60[2] = 0u;
  v60[3] = 0u;
  v60[4] = 0u;
  v60[5] = 0u;
  v60[1] = 0u;
  v61 = swift_allocObject();
  v8(v61 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v61 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A66F8;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v61;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)(v60 + 1));
  swift_endAccess();
  v62 = swift_allocObject();
  v8(v62 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_foundEvent, 1, 1, v6);
  *(_QWORD *)(v62 + OBJC_IVAR____TtC23LighthouseDataProcessor11EventFilter_targetEventTypes) = &unk_2510A6720;
  v69 = v65;
  v70 = &off_2510A85E8;
  v68[0] = v62;
  sub_2403B80A4((uint64_t)v68, (uint64_t)v67, &qword_256FFAC30);
  swift_beginAccess();
  sub_2403B80E8((uint64_t)v67, (uint64_t)v60 + 56);
  swift_endAccess();
  v63 = MEMORY[0x24BEE4B08];
  v66[16] = v60;
  v66[17] = v63;
  return v66;
}

uint64_t sub_240418328(uint64_t a1)
{
  return sub_240414E2C(a1);
}

uint64_t sub_240418348(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  v14 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v14 + 44), (uint64_t)v7, &qword_256FFA490);
  v15 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v7, 1, v15) == 1)
  {
    sub_2403A97FC((uint64_t)v7, &qword_256FFA490);
    v16 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v13, 1, 1, v16);
LABEL_15:
    v23 = 0;
    goto LABEL_16;
  }
  sub_2403A9210((uint64_t)v7, (uint64_t)v13, &qword_256FFA488);
  sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPayload);
  v17 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v13, 1, v17) == 1)
    goto LABEL_15;
  sub_2403A9210((uint64_t)v13, (uint64_t)v11, &qword_256FFA488);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 29)
  {
    sub_2403A9210(a1 + *(int *)(v14 + 60), (uint64_t)v4, &qword_256FFA4A8);
    v19 = type metadata accessor for TranscriptProtoParticipantID(0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v4, 1, v19) == 1)
    {
      sub_2403A97FC((uint64_t)v4, &qword_256FFA4A8);
    }
    else
    {
      v21 = *v4;
      v20 = v4[1];
      swift_bridgeObjectRetain();
      sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoParticipantID);
      if (v21 == 0x726F747563657865 && v20 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      v22 = sub_2408E617C();
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
        goto LABEL_13;
    }
LABEL_14:
    sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoPayloadEnum);
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload != 3)
    goto LABEL_14;
LABEL_13:
  sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoPayloadEnum);
  v23 = 1;
LABEL_16:
  sub_2403A97FC((uint64_t)v13, &qword_256FFA488);
  return v23;
}

_QWORD *sub_240418660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  int v54;
  uint64_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;
  unsigned int (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96[3];
  _QWORD *v97;

  v82 = a8;
  v83 = a4;
  v85 = a6;
  v86 = a7;
  v84 = a5;
  v80 = a2;
  v81 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v74 = (uint64_t)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v69 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v70 = (uint64_t)v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v89 = (uint64_t)v69 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v69 - v22;
  v92 = type metadata accessor for TranscriptProtoEvent(0);
  v24 = *(_QWORD *)(v92 - 8);
  v25 = MEMORY[0x24BDAC7A8](v92);
  v87 = (uint64_t)v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v69 - v27;
  v29 = type metadata accessor for RequestData(0);
  MEMORY[0x24BDAC7A8](v29);
  v97 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v79 = (uint64_t)v69 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(a1, v79, v31);
  v32 = *(_QWORD *)(a1 + *(int *)(v29 + 28));
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    v94 = v23;
    v75 = (uint64_t *)v11;
    v34 = v32 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    v91 = *(_QWORD *)(v24 + 72);
    v73 = v96;
    v69[1] = v32;
    swift_bridgeObjectRetain();
    v35 = 0;
    *(_QWORD *)&v36 = 136315138;
    v72 = v36;
    v71 = MEMORY[0x24BEE4AD8] + 8;
    v93 = v16;
    while (1)
    {
      sub_2403AE1A4(v34, (uint64_t)v28, type metadata accessor for TranscriptProtoEvent);
      v37 = (uint64_t)v28;
      sub_2403A9210((uint64_t)&v28[*(int *)(v92 + 44)], (uint64_t)v16, &qword_256FFA490);
      v38 = type metadata accessor for TranscriptProtoPayload(0);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48);
      if (v39(v16, 1, v38) == 1)
        break;
      v90 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v39;
      v41 = (uint64_t)v94;
      sub_2403A9210((uint64_t)v16, (uint64_t)v94, &qword_256FFA488);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoPayload);
      v42 = type metadata accessor for TranscriptProtoPayloadEnum(0);
      v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48);
      if (v43(v41, 1, v42) == 1)
        goto LABEL_15;
      v88 = v43;
      sub_2403A9210(v41, v89, &qword_256FFA488);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v16 = v93;
      v28 = (char *)v37;
      if (EnumCaseMultiPayload != 3)
      {
        if (EnumCaseMultiPayload != 29)
          goto LABEL_14;
        v45 = v75;
        sub_2403A9210(v37 + *(int *)(v92 + 60), (uint64_t)v75, &qword_256FFA4A8);
        v46 = type metadata accessor for TranscriptProtoParticipantID(0);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v45, 1, v46) == 1)
        {
          sub_2403A97FC((uint64_t)v45, &qword_256FFA4A8);
LABEL_14:
          sub_240388AE4(v89, type metadata accessor for TranscriptProtoPayloadEnum);
          v41 = (uint64_t)v94;
LABEL_15:
          sub_2403A97FC(v41, &qword_256FFA488);
          v16 = v93;
          v28 = (char *)v37;
          if (!v35)
            goto LABEL_6;
          goto LABEL_5;
        }
        v47 = v45[1];
        v78 = *v45;
        swift_bridgeObjectRetain();
        sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoParticipantID);
        if (v78 == 0x726F747563657865 && v47 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v48 = sub_2408E617C();
          swift_bridgeObjectRelease();
          if ((v48 & 1) == 0)
            goto LABEL_14;
        }
      }
      v78 = v42;
      sub_240388AE4(v89, type metadata accessor for TranscriptProtoPayloadEnum);
      sub_2403A97FC((uint64_t)v94, &qword_256FFA488);
      v49 = swift_retain();
      sub_2404141D0(v49, v80, v81, v83, v84, v85, v86, v79, v82, &v97);
      swift_release();
      type metadata accessor for PlannerGrainSpec();
      v50 = swift_allocObject();
      sub_240416DD8();
      swift_release();
      if (qword_256FFA0A8 != -1)
        swift_once();
      v51 = sub_2408E5C48();
      __swift_project_value_buffer(v51, (uint64_t)qword_257072498);
      v52 = v87;
      sub_2403AE1A4(v37, v87, type metadata accessor for TranscriptProtoEvent);
      v53 = sub_2408E5C3C();
      v54 = sub_2408E5EA0();
      if (os_log_type_enabled(v53, (os_log_type_t)v54))
      {
        v77 = v54;
        v55 = v52;
        v56 = (uint8_t *)swift_slowAlloc();
        v76 = swift_slowAlloc();
        v96[0] = v76;
        *(_DWORD *)v56 = v72;
        v57 = v55 + *(int *)(v92 + 44);
        v58 = v74;
        sub_2403A9210(v57, v74, &qword_256FFA490);
        if (v90(v58, 1, v38) == 1)
        {
          sub_2403A97FC(v58, &qword_256FFA490);
          v59 = 0xE300000000000000;
          v60 = 7104878;
        }
        else
        {
          v69[0] = v53;
          v90 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v50;
          v61 = v70;
          sub_2403A9210(v58, v70, &qword_256FFA488);
          sub_240388AE4(v58, type metadata accessor for TranscriptProtoPayload);
          if (v88(v61, 1, v78) == 1)
          {
            sub_2403A97FC(v61, &qword_256FFA488);
            v59 = 0xE300000000000000;
            v60 = 7104878;
          }
          else
          {
            TranscriptProtoPayloadEnum.eventTypeString.getter();
            v60 = v62;
            v59 = v63;
            sub_240388AE4(v61, type metadata accessor for TranscriptProtoPayloadEnum);
          }
          v16 = v93;
          v50 = (uint64_t)v90;
          v53 = v69[0];
        }
        v95 = sub_2403B3ED0(v60, v59, v96);
        sub_2408E5F3C();
        swift_bridgeObjectRelease();
        sub_240388AE4(v87, type metadata accessor for TranscriptProtoEvent);
        _os_log_impl(&dword_240347000, v53, (os_log_type_t)v77, "PlannerGrainLatencyCalculator - starting new latency record for event: %s", v56, 0xCu);
        v64 = v76;
        swift_arrayDestroy();
        MEMORY[0x242684668](v64, -1, -1);
        MEMORY[0x242684668](v56, -1, -1);
      }
      else
      {
        sub_240388AE4(v52, type metadata accessor for TranscriptProtoEvent);
      }

      v35 = v50;
LABEL_5:
      swift_retain();
      sub_240414E2C((uint64_t)v28);
      swift_release();
LABEL_6:
      sub_240388AE4((uint64_t)v28, type metadata accessor for TranscriptProtoEvent);
      v34 += v91;
      if (!--v33)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
    sub_2403A97FC((uint64_t)v16, &qword_256FFA490);
    v40 = type metadata accessor for TranscriptProtoPayloadEnum(0);
    v41 = (uint64_t)v94;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v94, 1, 1, v40);
    goto LABEL_15;
  }
LABEL_32:
  v65 = swift_retain();
  v66 = v79;
  sub_2404141D0(v65, v80, v81, v83, v84, v85, v86, v79, v82, &v97);
  swift_release();
  sub_240388AE4(v66, type metadata accessor for RequestData);
  swift_beginAccess();
  v67 = v97;
  swift_release();
  return v67;
}

uint64_t sub_240418F44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  _QWORD *v65;
  uint64_t v66;
  int64_t v67;
  int64_t v68;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v70;
  int64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  os_log_t v101;
  uint64_t v102;
  uint64_t result;
  int64_t v104;
  uint64_t v105;
  int64_t v106;
  uint64_t v107;
  uint64_t v108;
  int64_t v109;
  uint64_t *v110;
  _QWORD *v111;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  __int128 v128;
  os_log_t v129;
  char *v130;
  _BYTE v131[656];
  char *v132;
  _QWORD v133[82];
  uint64_t v134;
  _QWORD *v135;

  v2 = sub_2408E5B10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for RequestData(0);
  v116 = *(_QWORD *)(v121 - 8);
  MEMORY[0x24BDAC7A8](v121);
  v7 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC10);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (int64_t *)((char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v13 = (int64_t *)((char *)&v104 - v12);
  v123 = type metadata accessor for SessionData(0);
  v107 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  v125 = (uint64_t)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC18);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v111 = (int64_t *)((char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v16);
  v110 = (int64_t *)((char *)&v104 - v18);
  v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v135 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v20 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for SessionView(0) + 28));
  v21 = *(_QWORD *)(v20 + 64);
  v105 = v20 + 64;
  v22 = 1 << *(_BYTE *)(v20 + 32);
  if (v22 < 64)
    v23 = ~(-1 << v22);
  else
    v23 = -1;
  v24 = v23 & v21;
  v130 = v7;
  v120 = v7 + 8;
  v106 = (unint64_t)(v22 + 63) >> 6;
  v104 = v106 - 1;
  v108 = v20;
  swift_bridgeObjectRetain();
  v112 = 0;
  v118 = v11;
  v119 = v13;
LABEL_6:
  if (!v24)
  {
    v33 = v112 + 1;
    if (__OFADD__(v112, 1))
      goto LABEL_103;
    v32 = v110;
    v30 = (uint64_t)v111;
    if (v33 < v106)
    {
      v34 = *(_QWORD *)(v105 + 8 * v33);
      if (v34)
      {
LABEL_12:
        v112 = v33;
        v113 = (v34 - 1) & v34;
        v25 = __clz(__rbit64(v34)) + (v33 << 6);
        goto LABEL_8;
      }
      v35 = v112 + 2;
      ++v112;
      if (v33 + 1 < v106)
      {
        v34 = *(_QWORD *)(v105 + 8 * v35);
        if (v34)
        {
LABEL_15:
          v33 = v35;
          goto LABEL_12;
        }
        v112 = v33 + 1;
        if (v33 + 2 < v106)
        {
          v34 = *(_QWORD *)(v105 + 8 * (v33 + 2));
          if (v34)
          {
            v33 += 2;
            goto LABEL_12;
          }
          v35 = v33 + 3;
          v112 = v33 + 2;
          if (v33 + 3 < v106)
          {
            v34 = *(_QWORD *)(v105 + 8 * v35);
            if (v34)
              goto LABEL_15;
            while (1)
            {
              v33 = v35 + 1;
              if (__OFADD__(v35, 1))
              {
                __break(1u);
LABEL_107:
                result = sub_2408E6068();
                __break(1u);
                return result;
              }
              if (v33 >= v106)
                break;
              v34 = *(_QWORD *)(v105 + 8 * v33);
              ++v35;
              if (v34)
                goto LABEL_12;
            }
            v112 = v104;
          }
        }
      }
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v30, 1, 1, v36);
    v113 = 0;
    goto LABEL_27;
  }
  v113 = (v24 - 1) & v24;
  v25 = __clz(__rbit64(v24)) | (v112 << 6);
LABEL_8:
  v26 = *(_QWORD *)(v108 + 56);
  v27 = (uint64_t *)(*(_QWORD *)(v108 + 48) + 16 * v25);
  v29 = *v27;
  v28 = v27[1];
  v129 = v28;
  v30 = (uint64_t)v111;
  *v111 = v29;
  *(_QWORD *)(v30 + 8) = v28;
  *(_QWORD *)&v128 = v26 + *(_QWORD *)(v107 + 72) * v25;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
  sub_2403AE1A4(v128, v30 + *(int *)(v31 + 48), type metadata accessor for SessionData);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  swift_bridgeObjectRetain();
  v32 = v110;
LABEL_27:
  sub_2403B80A4(v30, (uint64_t)v32, &qword_256FFAC18);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC20);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v32, 1, v37) == 1)
  {
    swift_release();
    if (qword_256FFA0A8 == -1)
      goto LABEL_78;
    goto LABEL_105;
  }
  v122 = *v32;
  v124 = v32[1];
  v38 = (uint64_t)v32 + *(int *)(v37 + 48);
  v39 = v125;
  sub_2403A91CC(v38, v125, type metadata accessor for SessionData);
  v40 = *(_QWORD *)(v39 + *(int *)(v123 + 32));
  v41 = *(_QWORD *)(v40 + 64);
  v114 = v40 + 64;
  v42 = 1 << *(_BYTE *)(v40 + 32);
  if (v42 < 64)
    v43 = ~(-1 << v42);
  else
    v43 = -1;
  v44 = v43 & v41;
  v115 = (unint64_t)(v42 + 63) >> 6;
  v109 = v115 - 1;
  v117 = v40;
  swift_bridgeObjectRetain();
  *(_QWORD *)&v128 = 0;
  while (1)
  {
    if (v44)
    {
      v129 = (os_log_t)((v44 - 1) & v44);
      v45 = __clz(__rbit64(v44)) | ((_QWORD)v128 << 6);
LABEL_36:
      v46 = *(_QWORD *)(v117 + 56);
      v47 = (_QWORD *)(*(_QWORD *)(v117 + 48) + 16 * v45);
      v48 = v47[1];
      *v11 = *v47;
      v11[1] = v48;
      v49 = v46 + *(_QWORD *)(v116 + 72) * v45;
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC28);
      sub_2403AE1A4(v49, (uint64_t)v11 + *(int *)(v50 + 48), type metadata accessor for RequestData);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v11, 0, 1, v50);
      swift_bridgeObjectRetain();
      goto LABEL_55;
    }
    v51 = v128 + 1;
    if (__OFADD__((_QWORD)v128, 1))
      goto LABEL_101;
    if (v51 < v115)
    {
      v52 = *(_QWORD *)(v114 + 8 * v51);
      if (v52)
        goto LABEL_40;
      v53 = v128 + 2;
      *(_QWORD *)&v128 = v128 + 1;
      if (v51 + 1 < v115)
      {
        v52 = *(_QWORD *)(v114 + 8 * v53);
        if (v52)
          goto LABEL_43;
        *(_QWORD *)&v128 = v51 + 1;
        if (v51 + 2 < v115)
        {
          v52 = *(_QWORD *)(v114 + 8 * (v51 + 2));
          if (v52)
          {
            v51 += 2;
            goto LABEL_40;
          }
          v53 = v51 + 3;
          *(_QWORD *)&v128 = v51 + 2;
          if (v51 + 3 < v115)
          {
            v52 = *(_QWORD *)(v114 + 8 * v53);
            if (v52)
            {
LABEL_43:
              v51 = v53;
LABEL_40:
              v129 = (os_log_t)((v52 - 1) & v52);
              v45 = __clz(__rbit64(v52)) + (v51 << 6);
              *(_QWORD *)&v128 = v51;
              goto LABEL_36;
            }
            while (1)
            {
              v51 = v53 + 1;
              if (__OFADD__(v53, 1))
                goto LABEL_104;
              if (v51 >= v115)
                break;
              v52 = *(_QWORD *)(v114 + 8 * v51);
              ++v53;
              if (v52)
                goto LABEL_40;
            }
            *(_QWORD *)&v128 = v109;
          }
        }
      }
    }
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC28);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v11, 1, 1, v54);
    v129 = 0;
LABEL_55:
    sub_2403B80A4((uint64_t)v11, (uint64_t)v13, &qword_256FFAC10);
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC28);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v13, 1, v55) == 1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_240388AE4(v125, type metadata accessor for SessionData);
      v24 = v113;
      goto LABEL_6;
    }
    v56 = *v13;
    v57 = v13[1];
    sub_2403A91CC((uint64_t)v13 + *(int *)(v55 + 48), (uint64_t)v130, type metadata accessor for RequestData);
    type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator();
    v58 = (_QWORD *)swift_allocObject();
    v59 = MEMORY[0x24BEE4B00];
    v58[2] = MEMORY[0x24BEE4B00];
    v58[3] = v59;
    v58[4] = MEMORY[0x24BEE4B08];
    v58[5] = 0;
    v60 = *(_QWORD *)&v120[*(int *)(v121 + 28)];
    v61 = *(_QWORD *)(v60 + 16);
    if (v61)
    {
      v126 = v56;
      v127 = v57;
      v62 = v60 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      swift_bridgeObjectRetain();
      v63 = *(_QWORD *)(v3 + 72);
      v64 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
      do
      {
        v64(v5, v62, v2);
        sub_2408DBDF4((uint64_t)v5);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v62 += v63;
        --v61;
      }
      while (v61);
      swift_bridgeObjectRelease();
      v19 = v135;
      v56 = v126;
      v57 = v127;
    }
    v65 = sub_240418660((uint64_t)v130, v122, v124, *(_QWORD *)(v125 + *(int *)(v123 + 28)), *(_QWORD *)(v125 + *(int *)(v123 + 28) + 8), v56, v57, (uint64_t)v58);
    swift_bridgeObjectRelease();
    v66 = v65[2];
    v67 = v19[2];
    v68 = v67 + v66;
    if (__OFADD__(v67, v66))
      break;
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v70 = v19[3] >> 1, v70 < v68))
    {
      if (v67 <= v68)
        v71 = v67 + v66;
      else
        v71 = v67;
      v19 = sub_24050A750(isUniquelyReferenced_nonNull_native, v71, 1, v19);
      v70 = v19[3] >> 1;
    }
    v13 = v119;
    if (v65[2])
    {
      v72 = v19[2];
      if (v70 - v72 < v66)
        goto LABEL_99;
      v73 = (unint64_t)&v19[82 * v72 + 4];
      if ((unint64_t)(v65 + 4) < v73 + 656 * v66 && v73 < (unint64_t)&v65[82 * v66 + 4])
        goto LABEL_107;
      swift_arrayInitWithCopy();
      if (v66)
      {
        v75 = v19[2];
        v76 = __OFADD__(v75, v66);
        v77 = v75 + v66;
        if (v76)
          goto LABEL_100;
        v19[2] = v77;
      }
    }
    else if (v66)
    {
      goto LABEL_98;
    }
    swift_bridgeObjectRelease();
    swift_release();
    v135 = v19;
    sub_240388AE4((uint64_t)v130, type metadata accessor for RequestData);
    v11 = v118;
    v44 = (unint64_t)v129;
  }
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
  while (1)
  {
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    swift_once();
LABEL_78:
    v78 = sub_2408E5C48();
    v79 = __swift_project_value_buffer(v78, (uint64_t)qword_257072498);
    v80 = v135;
    swift_bridgeObjectRetain();
    v81 = sub_2408E5C3C();
    v82 = sub_2408E5EC4();
    if (os_log_type_enabled(v81, v82))
    {
      v83 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v83 = 134217984;
      v133[0] = v80[2];
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v81, v82, "Found %ld PlannerGrainLatency Results", v83, 0xCu);
      MEMORY[0x242684668](v83, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
    v134 = 0;
    swift_beginAccess();
    v84 = v135;
    v85 = v135[2];
    if (!v85)
      break;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    memcpy(v133, v84 + 4, sizeof(v133));
    v86 = v85 - 1;
    v87 = 86;
    *(_QWORD *)&v88 = 134218242;
    v128 = v88;
    v127 = 0x8000000240921790;
    v126 = MEMORY[0x24BEE4AD8] + 8;
    while (1)
    {
      sub_240419C48((uint64_t)v133);
      sub_240419C48((uint64_t)v133);
      sub_240419C48((uint64_t)v133);
      v89 = sub_2408E5C3C();
      v90 = sub_2408E5EA0();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = swift_slowAlloc();
        v130 = (char *)swift_slowAlloc();
        v132 = v130;
        *(_DWORD *)v91 = v128;
        *(_QWORD *)(v91 + 4) = v134;
        *(_WORD *)(v91 + 12) = 2080;
        memcpy(v131, v133, sizeof(v131));
        sub_240419C48((uint64_t)v133);
        v129 = v89;
        v92 = PlannerGrainLatency.dictionary.getter();
        v93 = sub_2403AEB7C(v92, 1);
        v94 = v86;
        v95 = v84;
        v96 = v79;
        v98 = v97;
        swift_bridgeObjectRelease();
        v99 = v98 ? v93 : 0xD00000000000002ALL;
        v100 = v98 ? v98 : v127;
        v79 = v96;
        v84 = v95;
        v86 = v94;
        sub_240419CF0((uint64_t)v133);
        *(_QWORD *)(v91 + 14) = sub_2403B3ED0(v99, v100, (uint64_t *)&v132);
        swift_bridgeObjectRelease();
        sub_240419CF0((uint64_t)v133);
        sub_240419CF0((uint64_t)v133);
        v101 = v129;
        _os_log_impl(&dword_240347000, v129, v90, "PlannerGrainLatency Result %ld: %s", (uint8_t *)v91, 0x16u);
        v102 = (uint64_t)v130;
        swift_arrayDestroy();
        MEMORY[0x242684668](v102, -1, -1);
        MEMORY[0x242684668](v91, -1, -1);

        sub_240419CF0((uint64_t)v133);
      }
      else
      {
        sub_240419CF0((uint64_t)v133);
        sub_240419CF0((uint64_t)v133);
        sub_240419CF0((uint64_t)v133);

      }
      if (__OFADD__(v134, 1))
        break;
      ++v134;
      if (!v86)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v135;
      }
      memcpy(v133, &v84[v87], sizeof(v133));
      v87 += 82;
      --v86;
    }
  }
  return (uint64_t)v84;
}

uint64_t type metadata accessor for PlannerGrainLatencyCalculator()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlannerGrainLatencyCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlannerGrainLatencyCalculator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of PlannerGrainLatencyCalculator.extractLatencies(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t type metadata accessor for PlannerGrainDimensionsSpec()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PlannerGrainSpec()
{
  return objc_opt_self();
}

uint64_t sub_240419C48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2403ADAA8(v2, v3, v4);
  swift_retain();
  return a1;
}

uint64_t sub_240419CF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 104);
  v4 = *(_BYTE *)(a1 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2403ADB34(v2, v3, v4);
  swift_release();
  return a1;
}

uint64_t RequireDiagnosticsAndUsageOptIn.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t RequireDiagnosticsAndUsageOptIn.init()()
{
  uint64_t v0;

  return v0;
}

id sub_240419DB0()
{
  id result;
  void *v1;
  unsigned int v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_effectiveBoolValueForSetting_, *MEMORY[0x24BE638D8]);

    return (id)(v2 == 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t RequireDiagnosticsAndUsageOptIn.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t RequireDiagnosticsAndUsageOptIn.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RequireDiagnosticsAndUsageOptIn()
{
  return objc_opt_self();
}

uint64_t method lookup function for RequireDiagnosticsAndUsageOptIn()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RequireDiagnosticsAndUsageOptIn.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of RequireDiagnosticsAndUsageOptIn.meetsDemand()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

ValueMetadata *type metadata accessor for BiomeStreaming()
{
  return &type metadata for BiomeStreaming;
}

uint64_t sub_240419E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD v20[7];

  sub_2408E5BC4();
  if (!v7)
  {
    v20[6] = 0;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = MEMORY[0x24BEE4AF8];
    __swift_project_boxed_opaque_existential_1(v20, v20[3]);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = a4;
    v14[3] = a5;
    v14[4] = a6;
    v14[5] = a7;
    v14[6] = a1;
    v14[7] = v13;
    swift_retain();
    sub_2408E5C60();
    swift_release();
    swift_release();
    if (qword_254355DF0 != -1)
      swift_once();
    v15 = sub_2408E5C48();
    __swift_project_value_buffer(v15, (uint64_t)qword_254356428);
    swift_retain();
    v16 = sub_2408E5C3C();
    v17 = sub_2408E5EA0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v18 = 134217984;
      swift_beginAccess();
      sub_2408E5F3C();
      swift_release();
      _os_log_impl(&dword_240347000, v16, v17, "%ld of events loaded from Biome stream", v18, 0xCu);
      MEMORY[0x242684668](v18, -1, -1);

    }
    else
    {

      swift_release();
    }
    swift_beginAccess();
    a1 = *(_QWORD *)(v13 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  return a1;
}

void sub_24041A104(void **a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  NSObject *oslog;
  uint64_t v11;

  v1 = *a1;
  if (*a1)
  {
    v2 = v1;
    if (qword_254355DF0 != -1)
      swift_once();
    v3 = sub_2408E5C48();
    __swift_project_value_buffer(v3, (uint64_t)qword_254356428);
    v4 = v1;
    v5 = v1;
    oslog = sub_2408E5C3C();
    v6 = sub_2408E5EAC();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v9 = v1;
      v11 = _swift_stdlib_bridgeErrorToNSError();
      sub_2408E5F3C();
      *v8 = v11;

      _os_log_impl(&dword_240347000, oslog, v6, "Error, sink failed: %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257015860);
      swift_arrayDestroy();
      MEMORY[0x242684668](v8, -1, -1);
      MEMORY[0x242684668](v7, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_24041A2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD v42[2];
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v46 = a6;
  v47 = a1;
  v42[0] = a3;
  v42[1] = a2;
  v7 = sub_2408E5C48();
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_2408E5F24();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v42 - v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v16 = (char *)v42 - v15;
  v17 = *(_QWORD *)(a4 - 8);
  v18 = MEMORY[0x24BDAC7A8](v14);
  v20 = (char *)v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)v42 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v42 - v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v16, v47, AssociatedTypeWitness);
  v27 = swift_dynamicCast();
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if ((v27 & 1) != 0)
  {
    v29 = (uint64_t *)(v42[0] + 16);
    v28(v12, 0, 1, a4);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v25, v12, a4);
    v30 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v30(v23, v25, a4);
    swift_beginAccess();
    v31 = (_QWORD *)*v29;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v29 = (uint64_t)v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v31 = sub_24050A878(0, v31[2] + 1, 1, v31);
      *v29 = (uint64_t)v31;
    }
    v34 = v31[2];
    v33 = v31[3];
    if (v34 >= v33 >> 1)
      *v29 = (uint64_t)sub_24050A878((_QWORD *)(v33 > 1), v34 + 1, 1, v31);
    v30(v20, v23, a4);
    sub_24041A98C(v34, (uint64_t)v20, v29, a4, v46);
    v35 = *(void (**)(char *, uint64_t))(v17 + 8);
    v35(v23, a4);
    swift_endAccess();
    return ((uint64_t (*)(char *, uint64_t))v35)(v25, a4);
  }
  else
  {
    v28(v12, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    if (qword_254355DF0 != -1)
      swift_once();
    v37 = v45;
    v38 = __swift_project_value_buffer(v45, (uint64_t)qword_254356428);
    v40 = v43;
    v39 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v38, v37);
    v48 = 0;
    v49 = 0xE000000000000000;
    sub_2408E5F84();
    sub_2408E5D50();
    sub_2408E6290();
    sub_2408E5D50();
    swift_bridgeObjectRelease();
    v41 = v48;
    LOBYTE(v48) = 2;
    sub_2408B4A24(v41, v49, (char *)&v48);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v40, v37);
  }
}

void sub_24041A698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v7 = sub_2408E5C48();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectRetain();
  objc_opt_self();
  v11 = (void *)swift_dynamicCastObjCClass();
  if (v11)
  {
    v12 = objc_msgSend(v11, sel_eventBody);
    if (v12)
    {
      v13 = v12;
      swift_beginAccess();
      v14 = v13;
      MEMORY[0x242683B40]();
      if (*(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        sub_2408E5DBC();
      sub_2408E5DD4();
      sub_2408E5DB0();
      swift_endAccess();
      if (a3 == 0xD000000000000022 && a4 == 0x8000000240922BC0 || (sub_2408E617C() & 1) != 0)
      {
        if (qword_254355DF0 != -1)
          swift_once();
        __swift_project_value_buffer(v7, (uint64_t)qword_254356428);
        LOBYTE(v18) = 0x80;
        sub_2408B4A30(0xD00000000000003DLL, 0x8000000240922BF0, (char *)&v18);

        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();

      }
    }
    else
    {
      if (qword_254355DF0 != -1)
        swift_once();
      v15 = __swift_project_value_buffer(v7, (uint64_t)qword_254356428);
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v15, v7);
      v18 = 0;
      v19 = 0xE000000000000000;
      sub_2408E5F84();
      sub_2408E5D50();
      sub_2408E5D08();
      sub_2408E5D50();
      swift_bridgeObjectRelease();
      v16 = v18;
      LOBYTE(v18) = 0;
      sub_2408B4A24(v16, v19, (char *)&v18);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t sub_24041A98C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_24041D038(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_24041AA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[28] = a4;
  v5[29] = a5;
  v5[26] = a2;
  v5[27] = a3;
  v5[25] = a1;
  return swift_task_switch();
}

uint64_t sub_24041AA70()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  void *v54;
  void *v55;
  uint64_t v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  _BOOL4 v60;
  void *v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  uint64_t v73[2];

  v73[1] = *MEMORY[0x24BDAC8D0];
  v1 = v0 + 23;
  v2 = (void *)v0[26];
  v3 = sub_2408E5624();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = swift_task_alloc();
  v6 = objc_msgSend(v2, sel_startDate);
  __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
  v7 = swift_task_alloc();
  v8 = v7;
  if (!v6)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v7, 1, 1, v3);
    goto LABEL_8;
  }
  v9 = swift_task_alloc();
  sub_2408E5600();

  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v10(v8, v9, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
  {
LABEL_8:
    sub_24041CDF8(v8);
    swift_task_dealloc();
    goto LABEL_11;
  }
  v10(v5, v8, v3);
  swift_task_dealloc();
  if (qword_254355DF0 != -1)
    swift_once();
  v11 = sub_2408E5C48();
  __swift_project_value_buffer(v11, (uint64_t)qword_254356428);
  v12 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v12, v5, v3);
  v13 = sub_2408E5C3C();
  v14 = sub_2408E5EA0();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v70 = swift_slowAlloc();
    v73[0] = v70;
    *(_DWORD *)v15 = 136315138;
    sub_24041CF80();
    v16 = sub_2408E6170();
    v0[24] = sub_2403B3ED0(v16, v17, v73);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    v18 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v18(v12, v3);
    _os_log_impl(&dword_240347000, v13, v14, "Loading biome events with bookmark: collecting from %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v70, -1, -1);
    MEMORY[0x242684668](v15, -1, -1);

    v18(v5, v3);
    swift_task_dealloc();
  }
  else
  {

    v19 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v19(v12, v3);
    swift_task_dealloc();
    v19(v5, v3);
  }
  v1 = v0 + 23;
LABEL_11:
  v20 = v0[25];
  swift_task_dealloc();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = MEMORY[0x24BEE4AF8];
  v22 = (_QWORD *)(v21 + 16);
  v23 = (id)BiomeLibrary();
  v0[23] = 0;
  v24 = objc_msgSend(v23, sel_streamWithIdentifier_error_, v20, v1);
  swift_unknownObjectRelease();
  v25 = (void *)v0[23];
  if (v24)
  {
    v26 = v0[26];
    v27 = v24;
    v28 = v25;
    v29 = (void *)sub_2408E5CE4();
    v30 = objc_msgSend(v27, sel_publisherWithUseCase_options_, v29, v26);

    v71 = v27;
    v72 = v30;
    if (v30)
    {
      v31 = v0[28];
      v32 = v0[29];
      v33 = v0[27];
      v34 = (void *)v0[25];
      v0[12] = nullsub_1;
      v0[13] = 0;
      v35 = MEMORY[0x24BDAC760];
      v0[8] = MEMORY[0x24BDAC760];
      v0[9] = 1107296256;
      v0[10] = sub_240511534;
      v0[11] = &block_descriptor;
      v36 = _Block_copy(v0 + 8);
      v37 = (_QWORD *)swift_allocObject();
      v37[2] = v32;
      v37[3] = v21;
      v37[4] = v33;
      v37[5] = v31;
      v37[6] = v34;
      v0[6] = sub_24041CF70;
      v0[7] = v37;
      v0[2] = v35;
      v0[3] = 1107296256;
      v0[4] = sub_240511584;
      v0[5] = &block_descriptor_6;
      v38 = _Block_copy(v0 + 2);
      v39 = v72;
      swift_retain();
      swift_bridgeObjectRetain();
      v40 = v34;
      swift_release();
      v41 = objc_msgSend(v39, sel_sinkWithCompletion_receiveInput_, v36, v38);
      _Block_release(v38);
      _Block_release(v36);

    }
    if (qword_254355DF0 != -1)
      swift_once();
    v42 = (void *)v0[25];
    v43 = sub_2408E5C48();
    __swift_project_value_buffer(v43, (uint64_t)qword_254356428);
    v44 = v42;
    swift_retain();
    v45 = v44;
    v46 = sub_2408E5C3C();
    v47 = sub_2408E5EA0();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v69 = swift_slowAlloc();
      v73[0] = v69;
      *(_DWORD *)v48 = 134218242;
      swift_beginAccess();
      if (*v22 >> 62)
      {
        swift_bridgeObjectRetain();
        v49 = sub_2408E6038();
        swift_bridgeObjectRelease();
      }
      else
      {
        v49 = *(_QWORD *)((*v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v50 = (void *)v0[25];
      v0[20] = v49;
      sub_2408E5F3C();
      swift_release();
      *(_WORD *)(v48 + 12) = 2080;
      v51 = sub_2408E5D08();
      v0[21] = sub_2403B3ED0(v51, v52, v73);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240347000, v46, v47, "%ld of events loaded from %s Biome stream", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242684668](v69, -1, -1);
      MEMORY[0x242684668](v48, -1, -1);

    }
    else
    {
      v66 = (void *)v0[25];
      swift_release();

    }
    swift_beginAccess();
    v67 = *(_QWORD *)(v21 + 16);
    swift_bridgeObjectRetain();

    swift_release();
  }
  else
  {
    v53 = v25;
    v54 = (void *)sub_2408E5534();

    swift_willThrow();
    if (qword_254355DF0 != -1)
      swift_once();
    v55 = (void *)v0[25];
    v56 = sub_2408E5C48();
    __swift_project_value_buffer(v56, (uint64_t)qword_254356428);
    v57 = v55;
    v58 = sub_2408E5C3C();
    v59 = sub_2408E5EAC();
    v60 = os_log_type_enabled(v58, v59);
    v61 = (void *)v0[25];
    if (v60)
    {
      v62 = (uint8_t *)swift_slowAlloc();
      v63 = swift_slowAlloc();
      v73[0] = v63;
      *(_DWORD *)v62 = 136315138;
      v64 = sub_2408E5D08();
      v0[22] = sub_2403B3ED0(v64, v65, v73);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_240347000, v58, v59, "Unable to create stream from BMLibrary identifer:  %s", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242684668](v63, -1, -1);
      MEMORY[0x242684668](v62, -1, -1);
    }
    else
    {

    }
    swift_release();
    v67 = 0;
  }
  return ((uint64_t (*)(uint64_t))v0[1])(v67);
}

uint64_t sub_24041B3B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = a1;
  v2 = sub_2408E5C48();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  sub_2408E5810();
  v1[14] = swift_task_alloc();
  v3 = type metadata accessor for TranscriptProtoEvent(0);
  v1[15] = v3;
  v1[16] = *(_QWORD *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24041B480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __int128 v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67[4];
  uint64_t v68;

  v1 = v0;
  *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE4AF8];
  v2 = v0 + 40;
  v3 = *(_QWORD *)(v0 + 72);
  if (v3 >> 62)
    goto LABEL_54;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v4)
  {
    v5 = 0;
    v55 = *(_QWORD *)(v1 + 128);
    v56 = *(_QWORD *)(v1 + 72) + 32;
    v60 = v3 & 0xC000000000000001;
    v61 = *(_QWORD *)(v1 + 88);
    v58 = v2;
    v59 = v4;
    v57 = v1;
    while (1)
    {
      v9 = v60 ? (id)MEMORY[0x242683D68](v5, *(_QWORD *)(v1 + 72)) : *(id *)(v56 + 8 * v5);
      v10 = v9;
      if (__OFADD__(v5, 1))
        break;
      v65 = v5 + 1;
      v11 = objc_msgSend(v9, sel_eventType);
      v64 = v5;
      if (v11)
      {
        v12 = v11;
        v63 = sub_2408E5D08();
        v14 = v13;

      }
      else
      {
        v63 = 0;
        v14 = 0;
      }
      __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
      v15 = swift_task_alloc();
      v66 = v10;
      v16 = objc_msgSend(v10, sel_absoluteTimestamp);
      v17 = swift_task_alloc();
      if (v16)
      {
        sub_2408E5600();

        v18 = sub_2408E5624();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
      }
      else
      {
        v18 = sub_2408E5624();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
      }
      sub_24041CDB0(v17, v15);
      sub_2408E5624();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18) == 1)
      {
        swift_task_dealloc();
        sub_24041CDF8(v15);
        v20 = 0;
        v21 = 0;
      }
      else
      {
        v20 = sub_2408E5588();
        v21 = v22;
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v15, v18);
        swift_task_dealloc();
      }
      swift_task_dealloc();
      if (qword_254355DF0 != -1)
        swift_once();
      v23 = __swift_project_value_buffer(*(_QWORD *)(v1 + 80), (uint64_t)qword_254356428);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      v24 = sub_2408E5C3C();
      v25 = sub_2408E5EA0();
      v62 = v23;
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        v67[0] = v27;
        *(_DWORD *)v26 = 136315394;
        if (v14)
          v28 = v63;
        else
          v28 = 0x3E4C494E3CLL;
        if (v14)
          v29 = v14;
        else
          v29 = 0xE500000000000000;
        swift_bridgeObjectRetain();
        v30 = v28;
        v2 = v58;
        *(_QWORD *)(v26 + 4) = sub_2403B3ED0(v30, v29, v67);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v26 + 12) = 2080;
        if (v21)
          v31 = v20;
        else
          v31 = 0x3E4C494E3CLL;
        if (v21)
          v32 = v21;
        else
          v32 = 0xE500000000000000;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v26 + 14) = sub_2403B3ED0(v31, v32, v67);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_240347000, v24, v25, "Decoding Event: %s with eventTimeStamp: %s \n", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        v33 = v27;
        v1 = v57;
        MEMORY[0x242684668](v33, -1, -1);
        MEMORY[0x242684668](v26, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      v34 = objc_msgSend(v66, sel_data);
      if (v34)
      {
        v35 = v34;
        swift_bridgeObjectRelease();
        v36 = sub_2408E5564();
        v38 = v37;

        v68 = 0;
        memset(v67, 0, sizeof(v67));
        sub_240360070(v36, v38);
        sub_2408E5804();
        sub_24041CE38();
        sub_2408E5984();
        sub_2403AE1A4(*(_QWORD *)(v1 + 144), *(_QWORD *)(v1 + 136), type metadata accessor for TranscriptProtoEvent);
        v3 = *(_QWORD *)(v1 + 40);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v3 = sub_24050A998(0, *(_QWORD *)(v3 + 16) + 1, 1, v3);
        v45 = v59;
        v47 = *(_QWORD *)(v3 + 16);
        v46 = *(_QWORD *)(v3 + 24);
        if (v47 >= v46 >> 1)
          v3 = sub_24050A998(v46 > 1, v47 + 1, 1, v3);
        v6 = *(_QWORD *)(v1 + 136);
        v7 = *(_QWORD *)(v1 + 144);
        *(_QWORD *)(v3 + 16) = v47 + 1;
        sub_2403A91CC(v6, v3+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v47, type metadata accessor for TranscriptProtoEvent);

        sub_240363D58(v36, v38);
        *(_QWORD *)(v1 + 40) = v3;
        sub_240388AE4(v7, type metadata accessor for TranscriptProtoEvent);
        v8 = v64;
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, _QWORD))(v61 + 16))(*(_QWORD *)(v1 + 104), v62, *(_QWORD *)(v1 + 80));
        v67[0] = 0;
        v67[1] = 0xE000000000000000;
        sub_2408E5F84();
        sub_2408E5D50();
        sub_2408E5D50();
        swift_bridgeObjectRelease();
        v39 = *(_OWORD *)v67;
        swift_bridgeObjectRetain_n();
        v40 = sub_2408E5C3C();
        v41 = sub_2408E5EA0();
        if (os_log_type_enabled(v40, v41))
        {
          v42 = swift_slowAlloc();
          v43 = swift_slowAlloc();
          v67[0] = v43;
          *(_DWORD *)v42 = 136315138;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v42 + 4) = sub_2403B3ED0(v39, *((unint64_t *)&v39 + 1), v67);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_240347000, v40, v41, "%s", (uint8_t *)v42, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x242684668](v43, -1, -1);
          MEMORY[0x242684668](v42, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v45 = v59;
        v8 = v64;
        v3 = *(_QWORD *)(v1 + 104);
        v48 = *(_QWORD *)(v1 + 80);
        LOBYTE(v67[0]) = 3;
        _s23LighthouseDataProcessor20CoreAnalyticsServiceO017submitReliabilityE08category6reasonyAA0H8CategoryO_SStFZ_0((uint64_t)v67);

        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v61 + 8))(v3, v48);
      }
      v5 = v8 + 1;
      if (v65 == v45)
        goto LABEL_47;
    }
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain();
    v4 = sub_2408E6038();
  }
LABEL_47:
  swift_bridgeObjectRelease();
  if (qword_254355DF0 != -1)
    swift_once();
  __swift_project_value_buffer(*(_QWORD *)(v1 + 80), (uint64_t)qword_254356428);
  v49 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain();
  v50 = sub_2408E5C3C();
  v51 = sub_2408E5EA0();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v52 = 134217984;
    *(_QWORD *)(v2 + 8) = *(_QWORD *)(v49 + 16);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240347000, v50, v51, "Decoded %ld events", v52, 0xCu);
    MEMORY[0x242684668](v52, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_beginAccess();
  v53 = *(_QWORD *)(v1 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v53);
}

uint64_t sub_24041BEE0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[9] = a1;
  v2 = sub_2408E5C48();
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  sub_2408E5810();
  v1[14] = swift_task_alloc();
  v1[15] = type metadata accessor for TranscriptProtoEvent(0);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v3 = type metadata accessor for IETranscriptEventWrapper();
  v1[19] = v3;
  v1[20] = *(_QWORD *)(v3 - 8);
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24041BFE8()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  __int128 v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  _BOOL4 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  void *v99;
  uint64_t v100[4];
  uint64_t v101;

  v1 = v0[9];
  v91 = v0 + 9;
  if (v1 >> 62)
    goto LABEL_49;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; v2 = sub_2408E6038())
  {
    v3 = 0;
    v80 = v0[20];
    v86 = v0[19];
    v79 = v0[17];
    v88 = v1 & 0xC000000000000001;
    v81 = v0[9] + 32;
    v87 = (_QWORD *)v0[22];
    v85 = (int *)v0[15];
    v89 = v0[11];
    v82 = MEMORY[0x24BEE4AF8];
    v84 = v2;
    v98 = v0;
    while (1)
    {
      v7 = v88 ? (id)MEMORY[0x242683D68](v3, *v91) : *(id *)(v81 + 8 * v3);
      v8 = v7;
      v9 = v3 + 1;
      if (__OFADD__(v3, 1))
        break;
      v10 = objc_msgSend(v7, sel_eventType);
      v97 = v3;
      if (v10)
      {
        v11 = v10;
        v92 = sub_2408E5D08();
        v13 = v12;

      }
      else
      {
        v92 = 0;
        v13 = 0;
      }
      __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
      v14 = swift_task_alloc();
      v15 = objc_msgSend(v8, sel_absoluteTimestamp);
      v16 = swift_task_alloc();
      v96 = v9;
      v17 = v13;
      if (v15)
      {
        sub_2408E5600();

        v18 = sub_2408E5624();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 0, 1, v18);
      }
      else
      {
        v18 = sub_2408E5624();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
      }
      sub_24041CDB0(v16, v14);
      sub_2408E5624();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18) == 1)
      {
        swift_task_dealloc();
        sub_24041CDF8(v14);
        v20 = 0;
        v21 = 0;
      }
      else
      {
        v20 = sub_2408E5588();
        v21 = v22;
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v14, v18);
        swift_task_dealloc();
      }
      v23 = v98;
      v24 = v17;
      swift_task_dealloc();
      v99 = v8;
      v25 = objc_msgSend(v8, sel_monotonicTimestamp);
      if (qword_254355DF0 != -1)
        swift_once();
      v26 = __swift_project_value_buffer(v98[10], (uint64_t)qword_254356428);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      v94 = v26;
      v27 = sub_2408E5C3C();
      v28 = sub_2408E5EA0();
      v95 = v25;
      if (os_log_type_enabled(v27, v28))
      {
        v29 = swift_slowAlloc();
        v30 = swift_slowAlloc();
        v100[0] = v30;
        *(_DWORD *)v29 = 136315394;
        if (!v21)
          v20 = 0x3E4C494E3CLL;
        v31 = v24;
        if (v21)
          v32 = v21;
        else
          v32 = 0xE500000000000000;
        swift_bridgeObjectRetain();
        *(v91 - 2) = sub_2403B3ED0(v20, v32, v100);
        sub_2408E5F3C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v29 + 12) = 2080;
        if (v31)
          v33 = v92;
        else
          v33 = 0x3E4C494E3CLL;
        if (v31)
          v34 = v31;
        else
          v34 = 0xE500000000000000;
        swift_bridgeObjectRetain();
        *(v91 - 1) = sub_2403B3ED0(v33, v34, v100);
        v23 = v98;
        sub_2408E5F3C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_240347000, v27, v28, "eventTimeStamp: %s for event: %s \n", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        v2 = v84;
        MEMORY[0x242684668](v30, -1, -1);
        MEMORY[0x242684668](v29, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      v35 = (_QWORD *)v23[22];
      v36 = *(int *)(v86 + 20);
      v87[11] = 0;
      v87[12] = 0;
      v37 = (char *)v35 + v85[11];
      v38 = type metadata accessor for TranscriptProtoPayload(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
      v39 = (_QWORD *)((char *)v35 + v85[12]);
      *v39 = 0;
      v39[1] = 0;
      v40 = (char *)v35 + v85[13];
      v41 = type metadata accessor for TranscriptProtoTimepoint(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 1, 1, v41);
      v42 = (char *)v35 + v85[14];
      v43 = sub_2408E5750();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 1, 1, v43);
      v44 = (char *)v35 + v85[15];
      v45 = type metadata accessor for TranscriptProtoParticipantID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
      v46 = (char *)v35 + v85[16];
      v47 = type metadata accessor for TranscriptProtoSpanID(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
      _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
      *v35 = 0;
      v87[1] = 0xE000000000000000;
      v87[2] = 0;
      v87[3] = 0xE000000000000000;
      v87[4] = 0;
      v87[5] = 0xE000000000000000;
      v87[6] = 0;
      v87[7] = 0xE000000000000000;
      v87[8] = 0;
      v87[9] = 0xE000000000000000;
      v87[10] = sub_240357018(MEMORY[0x24BEE4AF8]);
      *(_QWORD *)((char *)v35 + v36) = 0;
      v48 = objc_msgSend(v99, sel_data);
      if (v48)
      {
        v49 = v48;
        v83 = v36;
        swift_bridgeObjectRelease();
        v50 = sub_2408E5564();
        v52 = v51;

        v101 = 0;
        memset(v100, 0, sizeof(v100));
        sub_240360070(v50, v52);
        sub_2408E5804();
        sub_24041CE38();
        v90 = v50;
        v93 = v52;
        sub_2408E5984();
        v58 = v23[18];
        v59 = v23[16];
        sub_2403AE1A4(v58, v23[17], type metadata accessor for TranscriptProtoEvent);
        sub_2403AE1A4(v58, v59, type metadata accessor for TranscriptProtoEvent);
        v60 = sub_2408E5C3C();
        v61 = sub_2408E5EA0();
        v62 = os_log_type_enabled(v60, v61);
        v63 = v23[16];
        v64 = v23[17];
        if (v62)
        {
          v65 = swift_slowAlloc();
          v66 = swift_slowAlloc();
          v100[0] = v66;
          *(_DWORD *)v65 = 136315394;
          v68 = *(_QWORD *)(v79 + 48);
          v67 = *(_QWORD *)(v79 + 56);
          swift_bridgeObjectRetain();
          *(v91 - 4) = sub_2403B3ED0(v68, v67, v100);
          sub_2408E5F3C();
          swift_bridgeObjectRelease();
          sub_240388AE4(v64, type metadata accessor for TranscriptProtoEvent);
          *(_WORD *)(v65 + 12) = 2080;
          v69 = TranscriptProtoEvent.description.getter();
          *(v91 - 3) = sub_2403B3ED0(v69, v70, v100);
          v23 = v98;
          sub_2408E5F3C();
          swift_bridgeObjectRelease();
          sub_240388AE4(v63, type metadata accessor for TranscriptProtoEvent);
          _os_log_impl(&dword_240347000, v60, v61, "Decoded SessionID: %s for event: %s \n", (uint8_t *)v65, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x242684668](v66, -1, -1);
          MEMORY[0x242684668](v65, -1, -1);
        }
        else
        {
          sub_240388AE4(v23[17], type metadata accessor for TranscriptProtoEvent);
          sub_240388AE4(v63, type metadata accessor for TranscriptProtoEvent);
        }

        v5 = v96;
        v72 = v23[21];
        v71 = v23[22];
        v0 = v23;
        sub_24041CEBC(v23[18], v71);
        v73 = *(void **)((char *)v35 + v83);
        v1 = v95;

        *(_QWORD *)((char *)v35 + v83) = v95;
        sub_2403AE1A4(v71, v72, (uint64_t (*)(_QWORD))type metadata accessor for IETranscriptEventWrapper);
        v2 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v82 = sub_24050A9AC(0, *(_QWORD *)(v82 + 16) + 1, 1, v82);
        v75 = *(_QWORD *)(v82 + 16);
        v74 = *(_QWORD *)(v82 + 24);
        if (v75 >= v74 >> 1)
          v82 = sub_24050A9AC(v74 > 1, v75 + 1, 1, v82);
        v76 = v23[21];
        v77 = v23[18];
        *(_QWORD *)(v82 + 16) = v75 + 1;
        sub_2403A91CC(v76, v82+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v75, (uint64_t (*)(_QWORD))type metadata accessor for IETranscriptEventWrapper);

        sub_240363D58(v90, v93);
        sub_240388AE4(v77, type metadata accessor for TranscriptProtoEvent);
        v4 = v97;
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, _QWORD))(v89 + 16))(v23[13], v94, v23[10]);
        v100[0] = 0;
        v100[1] = 0xE000000000000000;
        sub_2408E5F84();
        sub_2408E5D50();
        sub_2408E5D50();
        swift_bridgeObjectRelease();
        v53 = *(_OWORD *)v100;
        swift_bridgeObjectRetain_n();
        v54 = sub_2408E5C3C();
        v55 = sub_2408E5EA0();
        if (os_log_type_enabled(v54, v55))
        {
          v56 = (uint8_t *)swift_slowAlloc();
          v57 = swift_slowAlloc();
          v100[0] = v57;
          *(_DWORD *)v56 = 136315138;
          swift_bridgeObjectRetain();
          *(v91 - 7) = sub_2403B3ED0(v53, *((unint64_t *)&v53 + 1), v100);
          v2 = v84;
          sub_2408E5F3C();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_240347000, v54, v55, "%s", v56, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x242684668](v57, -1, -1);
          MEMORY[0x242684668](v56, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v5 = v96;
        v4 = v97;
        v0 = v98;
        v1 = v98[13];
        v6 = v98[10];
        LOBYTE(v100[0]) = 3;
        _s23LighthouseDataProcessor20CoreAnalyticsServiceO017submitReliabilityE08category6reasonyAA0H8CategoryO_SStFZ_0((uint64_t)v100);

        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v89 + 8))(v1, v6);
      }
      sub_240388AE4(v0[22], (uint64_t (*)(_QWORD))type metadata accessor for IETranscriptEventWrapper);
      v3 = v4 + 1;
      if (v5 == v2)
        goto LABEL_51;
    }
    __break(1u);
LABEL_49:
    swift_bridgeObjectRetain();
  }
  v82 = MEMORY[0x24BEE4AF8];
LABEL_51:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(unint64_t))v0[1])(v82);
}

uint64_t sub_24041CDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24041CDF8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24041CE38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FFC9F0;
  if (!qword_256FFC9F0)
  {
    v1 = type metadata accessor for TranscriptProtoEvent(255);
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoEvent, v1);
    atomic_store(result, (unint64_t *)&qword_256FFC9F0);
  }
  return result;
}

unint64_t sub_24041CE80()
{
  unint64_t result;

  result = qword_256FFCA00;
  if (!qword_256FFCA00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FFCA00);
  }
  return result;
}

uint64_t sub_24041CEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_24041CF00()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_24041CF3C()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_24041CF70(uint64_t a1)
{
  uint64_t *v1;

  sub_24041A698(a1, v1[3], v1[4], v1[5]);
}

unint64_t sub_24041CF80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254356320;
  if (!qword_254356320)
  {
    v1 = sub_2408E5624();
    result = MEMORY[0x242684578](MEMORY[0x24BDCE990], v1);
    atomic_store(result, (unint64_t *)&qword_254356320);
  }
  return result;
}

uint64_t sub_24041CFC8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24041CFEC(uint64_t a1)
{
  uint64_t *v1;

  return sub_24041A2E0(a1, v1[6], v1[7], v1[2], v1[3], v1[4]);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_24041D038(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24041D05C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[4];

  v28 = a1;
  v29 = sub_2408E55DC();
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2408E55AC();
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, _QWORD))(v7 + 104))((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BDCE360]);
  v8 = sub_2408E55A0();
  MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(char *, _QWORD))(v10 + 104))((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BDCE340]);
  v11 = sub_2408E55B8();
  MEMORY[0x24BDAC7A8](v11);
  (*(void (**)(char *, _QWORD))(v13 + 104))((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BDCE390]);
  v14 = sub_2408E55D0();
  MEMORY[0x24BDAC7A8](v14);
  (*(void (**)(char *, _QWORD))(v16 + 104))((char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BDCE3D8]);
  v17 = sub_2408E5684();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA18);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E5678();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v23, v17);
    sub_2408E55C4();
    sub_24041D7F0();
    v25 = v29;
    sub_2408E560C();
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_2408E6260();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v30[3]);
    sub_2408E6194();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v25);
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  }
  return result;
}

uint64_t sub_24041D528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  v6 = sub_2408E54E0();
  v7 = sub_2408E54BC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  swift_retain();
  sub_2408E54C8();
  v10 = sub_2408E548C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
  sub_2408E5498();
  v13 = sub_2408E54A4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v17 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v13);
  sub_2408E54B0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a3, v13);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v18, v7);
  return v6;
}

uint64_t sub_24041D6C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  sub_2408E54EC();
  v0 = sub_2408E54BC();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (uint64_t *)((char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v2 = sub_24041D05C;
  v2[1] = 0;
  (*(void (**)(_QWORD *, _QWORD))(v3 + 104))(v2, *MEMORY[0x24BDCB348]);
  v4 = sub_2408E548C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E5480();
  v7 = sub_2408E54A4();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v10 + 104))(v9, *MEMORY[0x24BDCB2E8]);
  result = sub_24041D528((uint64_t)v2, (uint64_t)v6, (uint64_t)v9);
  qword_257072480 = result;
  return result;
}

unint64_t sub_24041D7F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FFCA20;
  if (!qword_256FFCA20)
  {
    v1 = sub_2408E55DC();
    result = MEMORY[0x242684578](MEMORY[0x24BDCE438], v1);
    atomic_store(result, (unint64_t *)&qword_256FFCA20);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void SaveResonse.responseType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

BOOL static SaveResponseType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SaveResponseType.hash(into:)()
{
  return sub_2408E6224();
}

uint64_t SaveResponseType.hashValue.getter()
{
  sub_2408E6218();
  sub_2408E6224();
  return sub_2408E623C();
}

unint64_t sub_24041D8F0()
{
  unint64_t result;

  result = qword_256FFCA28;
  if (!qword_256FFCA28)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for SaveResponseType, &type metadata for SaveResponseType);
    atomic_store(result, (unint64_t *)&qword_256FFCA28);
  }
  return result;
}

uint64_t dispatch thunk of FSWriter.saveAsSessions(sessions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for SaveResonse()
{
  return &type metadata for SaveResonse;
}

uint64_t _s23LighthouseDataProcessor16SaveResponseTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24041D99C + 4 * byte_2408EB095[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24041D9D0 + 4 * asc_2408EB090[v4]))();
}

uint64_t sub_24041D9D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24041D9D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24041D9E0);
  return result;
}

uint64_t sub_24041D9EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24041D9F4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24041D9F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24041DA00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SaveResponseType()
{
  return &type metadata for SaveResponseType;
}

void *sub_24041DA1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (unsigned int *)((char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v31 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA30);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v31 - v12;
  v14 = type metadata accessor for TranscriptProtoSystemResponse(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v13, &qword_256FFCA30);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v18(v13, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v13, &qword_256FFCA30);
    return 0;
  }
  else
  {
    sub_24041DDE4((uint64_t)v13, (uint64_t)v17);
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95020]), sel_init);
    v19 = v20;
    if (v20)
    {
      objc_msgSend(v20, sel_setExists_, 1);
      swift_bridgeObjectRetain();
      v21 = (void *)sub_2408E5CE4();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_setToolId_, v21);

      v22 = swift_bridgeObjectRetain();
      v23 = sub_2403BBBE8(v22);
      swift_bridgeObjectRelease();
      if (v23)
      {
        sub_24041DE28();
        v24 = (void *)sub_2408E5D8C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v24 = 0;
      }
      objc_msgSend(v19, sel_setInterpretedStatementResults_, v24);

      sub_2403A9210(a1, (uint64_t)v11, &qword_256FFCA30);
      if (v18(v11, 1, v14) == 1)
      {
        sub_2403A97FC((uint64_t)v11, &qword_256FFCA30);
        v25 = type metadata accessor for TranscriptProtoStatementID(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v7, 1, 1, v25);
      }
      else
      {
        sub_2403A9210((uint64_t)&v11[*(int *)(v14 + 36)], (uint64_t)v7, &qword_256FFA300);
        sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoSystemResponse);
      }
      v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FD8]), sel_init);
      sub_2403A9210((uint64_t)v7, (uint64_t)v5, &qword_256FFA300);
      v27 = type metadata accessor for TranscriptProtoStatementID(0);
      if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v5, 1, v27) == 1)
      {
        sub_2403A97FC((uint64_t)v5, &qword_256FFA300);
      }
      else
      {
        v28 = *v5;
        sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoStatementID);
        objc_msgSend(v26, sel_setIndex_, v28);
      }
      sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
      objc_msgSend(v19, sel_setStatementId_, v26);

      v29 = (void *)sub_2403BAF44((uint64_t)&v17[*(int *)(v14 + 28)]);
      objc_msgSend(v19, sel_setOutcome_, v29);

    }
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSystemResponse);
  }
  return v19;
}

uint64_t sub_24041DDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoSystemResponse(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24041DE28()
{
  unint64_t result;

  result = qword_256FFCA38;
  if (!qword_256FFCA38)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FFCA38);
  }
  return result;
}

uint64_t sub_24041DE64@<X0>(uint64_t a1@<X1>, unsigned __int8 a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v6 = sub_2408E5C48();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    MEMORY[0x24BDAC7A8](v10);
    v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2408E5630();
    v13 = sub_2408E566C();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_24041E0C4((uint64_t)v12);
      if (qword_254355DF0 != -1)
        swift_once();
      v15 = __swift_project_value_buffer(v6, (uint64_t)qword_254356428);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v15, v6);
      v19 = 0;
      v20 = 0xE000000000000000;
      sub_2408E5F84();
      sub_2408E5D50();
      sub_24041E228(a2);
      sub_2408E5D50();
      swift_bridgeObjectRelease();
      v16 = v19;
      LOBYTE(v19) = 97;
      sub_2408B4A30(v16, v20, (char *)&v19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a3, 1, 1, v13);
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a3, v12, v13);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
    }
  }
  else
  {
    v18 = sub_2408E566C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
}

uint64_t sub_24041E0C4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_24041E104(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v3 = *(_QWORD *)(type metadata accessor for TranscriptProtoStatementResult(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v6 = (uint64_t *)(v4 + a1 + 8);
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v9 = *v6;
    if (*v6)
    {
      v10 = *(v6 - 1);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_24050A538(0, v7[2] + 1, 1, v7);
      v12 = v7[2];
      v11 = v7[3];
      if (v12 >= v11 >> 1)
        v7 = sub_24050A538((_QWORD *)(v11 > 1), v12 + 1, 1, v7);
      v7[2] = v12 + 1;
      v8 = &v7[2 * v12];
      v8[4] = v10;
      v8[5] = v9;
    }
    v6 = (uint64_t *)((char *)v6 + v5);
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_24041E228(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24041E268 + 4 * byte_2408EB160[a1]))(0x7972657551776172, 0xEF4449746E657645);
}

uint64_t sub_24041E268()
{
  return 0x4449776172;
}

uint64_t sub_24041E27C()
{
  return 0x6973736553776172;
}

uint64_t sub_24041E29C()
{
  return 0x6552746E65696C63;
}

uint64_t sub_24041E2C0()
{
  return 0x76456E6F69746361;
}

uint64_t sub_24041E2E4()
{
  return 0x6E6576456E616C70;
}

unint64_t sub_24041E304()
{
  return 0xD000000000000012;
}

uint64_t sub_24041E354()
{
  return 0x457761526F646E75;
}

unint64_t sub_24041E378()
{
  return 0xD000000000000010;
}

uint64_t sub_24041E3A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  _QWORD *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;

  v0 = sub_2408E5C48();
  v44 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v43 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_24041E104(v2);
  swift_bridgeObjectRelease();
  v4 = v3[2];
  if (v4)
  {
    v51 = 0;
    v5 = sub_2408E566C();
    v6 = v5;
    v46 = *(_QWORD *)(v5 - 8);
    v42 = *(_QWORD *)(v46 + 64);
    v35 = v3;
    v7 = v3 + 5;
    v39 = 0x80000002409221C0;
    *(_QWORD *)&v8 = 136315138;
    v37 = v8;
    v36 = MEMORY[0x24BEE4AD8] + 8;
    v41 = v5;
    v38 = v0;
    do
    {
      v48 = &v35;
      MEMORY[0x24BDAC7A8](v5);
      v45 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
      v47 = &v35;
      v11 = MEMORY[0x24BDAC7A8](v10);
      v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x24BDAC7A8](v11);
      v15 = (char *)&v35 - v14;
      swift_bridgeObjectRetain();
      sub_2408E5630();
      v16 = v46;
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
      if (v17(v15, 1, v6) == 1)
      {
        sub_24041E0C4((uint64_t)v15);
        if (qword_254355DF0 != -1)
          swift_once();
        v18 = __swift_project_value_buffer(v0, (uint64_t)qword_254356428);
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v18, v0);
        v49 = 0;
        v50 = 0xE000000000000000;
        sub_2408E5F84();
        sub_2408E5D50();
        sub_2408E5D50();
        v19 = v49;
        v20 = v50;
        swift_bridgeObjectRetain_n();
        v21 = sub_2408E5C3C();
        v22 = sub_2408E5EA0();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = swift_slowAlloc();
          v40 = v19;
          v24 = v23;
          v25 = swift_slowAlloc();
          v49 = v25;
          *(_DWORD *)v24 = v37;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v24 + 4) = sub_2403B3ED0(v40, v20, &v49);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_240347000, v21, v22, "%s", (uint8_t *)v24, 0xCu);
          swift_arrayDestroy();
          v26 = v25;
          v0 = v38;
          MEMORY[0x242684668](v26, -1, -1);
          MEMORY[0x242684668](v24, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        LOBYTE(v49) = 97;
        _s23LighthouseDataProcessor20CoreAnalyticsServiceO017submitReliabilityE08category6reasonyAA0H8CategoryO_SStFZ_0((uint64_t)&v49);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v0);
        v27 = 1;
        v6 = v41;
        v16 = v46;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v15, v6);
        v27 = 0;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v13, v27, 1, v6);
      swift_bridgeObjectRelease();
      if (v17(v13, 1, v6) == 1)
      {
        v5 = sub_24041E0C4((uint64_t)v13);
      }
      else
      {
        v28 = v45;
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v45, v13, v6);
        v29 = objc_allocWithZone(MEMORY[0x24BE95C78]);
        v30 = v16;
        v31 = (void *)sub_2408E5648();
        v32 = objc_msgSend(v29, sel_initWithNSUUID_, v31, v35, v36);

        if (v51)
        {
          v33 = v32;
          MEMORY[0x242683B40]();
          if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2408E5DBC();
          sub_2408E5DD4();
          sub_2408E5DB0();

          v6 = v41;
          v5 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v28, v41);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v6);

        }
      }
      v7 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v51;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t static BMIntelligenceFlowTranscriptDatastreamEvent.messageFilteringPolicy()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_2408E5E70();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_BYTE *)(a1 + 8) = 1;
  }
  return result;
}

uint64_t sub_24041E918(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  void **v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;

  v24 = a3;
  v26 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (unsigned int *)((char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BEE4AF8];
  v28 = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v23[1] = v3;
    v25 = type metadata accessor for TranscriptProtoProgramStatement(0);
    v10 = *(_QWORD *)(v25 - 8);
    v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v12 = *(_QWORD *)(v10 + 72);
    v23[0] = a1;
    swift_bridgeObjectRetain();
    do
    {
      v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94F58]), sel_init);
      if (v13)
      {
        v14 = v13;
        v15 = sub_240430D48(v11 + *(int *)(v25 + 20), v26);
        v17 = v16;
        v27 = v15;
        objc_msgSend(v14, sel_setExpression_);
        if (v17)
        {
          v18 = *v24;
          *v24 = v17;
          v19 = v17;

        }
        v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FD8]), sel_init);
        sub_2403A9210(v11, (uint64_t)v7, &qword_256FFA300);
        v21 = type metadata accessor for TranscriptProtoStatementID(0);
        if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v7, 1, v21) == 1)
        {
          sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
        }
        else
        {
          v22 = *v7;
          sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
          objc_msgSend(v20, sel_setIndex_, v22);
        }
        objc_msgSend(v14, sel_setStatementId_, v20);

        MEMORY[0x242683B40]();
        if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2408E5DBC();
        sub_2408E5DD4();
        sub_2408E5DB0();
      }
      v11 += v12;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    return v28;
  }
  return result;
}

uint64_t sub_24041EB70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v23;
  void *v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPlan(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCA40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCA40);
  }
  else
  {
    sub_24041EEE4((uint64_t)v4, (uint64_t)v8);
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94F28]), sel_init);
    if (v9)
    {
      v10 = sub_2408E566C();
      v11 = *(_QWORD *)(v10 - 8);
      MEMORY[0x24BDAC7A8](v10);
      v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2408E5660();
      v14 = objc_allocWithZone(MEMORY[0x24BE95C78]);
      v15 = (void *)sub_2408E5648();
      v16 = objc_msgSend(v14, sel_initWithNSUUID_, v15);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      v24 = 0;
      objc_msgSend(v9, sel_setExists_, 1);
      sub_24041EF28();
      v17 = (void *)sub_2408E5D8C();
      objc_msgSend(v9, sel_setStatements_, v17);

      v18 = v16;
      v19 = swift_bridgeObjectRetain();
      sub_24041E918(v19, (uint64_t)v18, &v24);
      swift_bridgeObjectRelease();

      v20 = (void *)sub_2408E5D8C();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setStatements_, v20);

      if (*((_QWORD *)v8 + 6))
      {
        swift_bridgeObjectRetain();
        v21 = (void *)sub_2408E5CE4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v21 = 0;
      }
      objc_msgSend(v9, sel_setOverrideId_, v21);

      __asm { BR              X10 }
    }
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoPlan);
  }
  return 0;
}

void sub_24041EECC()
{
  void *v0;
  uint64_t v1;

  sub_240388AE4(v1, type metadata accessor for TranscriptProtoPlan);

  JUMPOUT(0x24041EEA8);
}

uint64_t sub_24041EEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoPlan(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24041EF28()
{
  unint64_t result;

  result = qword_256FFCA48;
  if (!qword_256FFCA48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FFCA48);
  }
  return result;
}

uint64_t sub_24041EF64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2408E5C48();
  __swift_allocate_value_buffer(v0, qword_254356120);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254356120);
  if (qword_2543560E0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254356410);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t BiomeSELFEventIngestor.init(dataPool:config:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = type metadata accessor for BiomeSELFEventIngestor();
  sub_24041F0A4(a2, a3 + *(int *)(v7 + 20));
  return sub_24041F0EC(a2, a3 + *(int *)(v7 + 24));
}

uint64_t type metadata accessor for BiomeSELFEventIngestor()
{
  uint64_t result;

  result = qword_254355C88;
  if (!qword_254355C88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24041F0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24041F0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void BiomeSELFEventIngestor.append(data:timestamp:)(uint64_t a1, void *a2)
{
  sub_24041FEDC(a1, a2);
}

void *sub_24041F148(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  __int128 v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  uint64_t v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  int v43;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  unint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  objc_class *v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  void *v66;
  id v67;
  void *v68;
  void *v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD v79[2];
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  int v83;
  int v84;
  uint64_t v85;
  char *v86;
  uint64_t *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  _BYTE *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  uint64_t v99;
  uint64_t v100[3];

  v96 = a1;
  v97 = a2;
  v3 = sub_2408E5C6C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_2408E5C84();
  v7 = *(_QWORD *)(v88 - 8);
  v8 = MEMORY[0x24BDAC7A8](v88);
  v87 = (_QWORD *)((char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v79 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v86 = (char *)v79 - v13;
  v95 = type metadata accessor for RequestLinkConfig();
  v14 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v91 = (char *)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8) + 48);
  v80 = v2;
  v17 = *(_QWORD *)(v2 + v16);
  v18 = *(_QWORD *)(v17 + 16);
  if (!v18)
    return 0;
  v85 = v7;
  v89 = v6;
  v90 = v4;
  v19 = v17 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v20 = v17;
  v94 = sub_240422180(0, (unint64_t *)&qword_256FFCA70);
  v84 = *MEMORY[0x24BE2BD40];
  v83 = *MEMORY[0x24BE2BD48];
  v93 = *(_QWORD *)(v14 + 72);
  v79[1] = v20;
  swift_bridgeObjectRetain();
  v21 = 0;
  v22 = 0x256FF8000uLL;
  *(_QWORD *)&v23 = 136315138;
  v82 = v23;
  v81 = MEMORY[0x24BEE4AD8] + 8;
  v24 = v91;
  v92 = v12;
  while (1)
  {
    sub_2404220B8(v19, (uint64_t)v24);
    v25 = &v24[*(int *)(v95 + 28)];
    sub_2408E5E7C();
    v98 = v21;
    if (v21)
    {
      if (*(_QWORD *)(v22 + 4064) != -1)
        swift_once();
      v26 = sub_2408E5C48();
      __swift_project_value_buffer(v26, (uint64_t)qword_256FFCC68);
      v28 = v89;
      v27 = v90;
      (*(void (**)(char *, _BYTE *, uint64_t))(v90 + 16))(v89, v25, v3);
      v29 = sub_2408E5C3C();
      v30 = v3;
      v31 = sub_2408E5EAC();
      if (os_log_type_enabled(v29, v31))
      {
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v100[0] = v33;
        *(_DWORD *)v32 = v82;
        sub_240422138();
        v34 = sub_2408E6170();
        *(_QWORD *)(v32 + 4) = sub_2403B3ED0(v34, v35, v100);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v30);
        _os_log_impl(&dword_240347000, v29, v31, "Can't pluck data from %s", (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        v36 = v33;
        v22 = 0x256FF8000;
        MEMORY[0x242684668](v36, -1, -1);
        MEMORY[0x242684668](v32, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v30);
      }

      v21 = 0;
      v3 = v30;
      v24 = v91;
      v12 = v92;
      goto LABEL_5;
    }
    v37 = v85;
    v38 = v86;
    v39 = *(void (**)(char *, char *, uint64_t))(v85 + 32);
    v40 = v88;
    v39(v86, v12, v88);
    v41 = v87;
    v39((char *)v87, v38, v40);
    v42 = v41;
    v43 = (*(uint64_t (**)(uint64_t *, uint64_t))(v37 + 88))(v41, v40);
    if (v43 == v84 || v43 == v83)
      break;
    (*(void (**)(uint64_t *, uint64_t))(v37 + 8))(v41, v40);
    v22 = 0x256FF8000;
    v21 = v98;
LABEL_5:
    sub_2404220FC((uint64_t)v24);
LABEL_6:
    v19 += v93;
    if (!--v18)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v45 = v3;
  (*(void (**)(uint64_t *, uint64_t))(v37 + 96))(v42, v40);
  v46 = *v42;
  v47 = v42[1];
  v48 = sub_2404FC4A8(&v24[*(int *)(v95 + 24)], v96, v97);
  if (v49 >> 60 == 15)
  {
    sub_2404220FC((uint64_t)v24);
    sub_240363D58(v46, v47);
    v3 = v45;
    v12 = v92;
    v22 = 0x256FF8000;
    v21 = v98;
    goto LABEL_6;
  }
  v52 = v49;
  v53 = v48;
  swift_bridgeObjectRelease();
  v54 = objc_allocWithZone(MEMORY[0x24BE95C78]);
  sub_240360070(v46, v47);
  v55 = (void *)sub_2408E554C();
  v56 = objc_msgSend(v54, sel_initWithBytesAsData_, v55);
  sub_240363D58(v46, v47);

  v57 = objc_allocWithZone(MEMORY[0x24BE95C78]);
  sub_240360070(v53, v52);
  v58 = (void *)sub_2408E554C();
  v98 = objc_msgSend(v57, sel_initWithBytesAsData_, v58);
  v59 = v53;
  v60 = v53;
  v61 = v52;
  sub_2403C2424(v60, v52);

  v62 = (objc_class *)sub_2408E56FC();
  objc_allocWithZone(v62);
  v63 = v56;
  v64 = sub_2408E56F0();
  v65 = 0x256FF8000;
  if (v64)
  {
    v66 = (void *)v64;
    objc_allocWithZone(v62);
    v67 = v98;
    v68 = (void *)sub_2408E56F0();
    if (v68)
    {
      v69 = v68;
      v50 = sub_24041FB0C(v24, v66, v68);

      sub_2403C2424(v59, v61);
      sub_240363D58(v46, v47);
      sub_2404220FC((uint64_t)v24);
      return v50;
    }

    v65 = 0x256FF8000uLL;
  }
  v97 = v63;
  if (*(_QWORD *)(v65 + 4064) != -1)
    swift_once();
  v70 = sub_2408E5C48();
  __swift_project_value_buffer(v70, (uint64_t)qword_256FFCC68);
  sub_240360070(v46, v47);
  sub_2403C2410(v59, v61);
  sub_240360070(v46, v47);
  sub_2403C2410(v59, v61);
  v71 = sub_2408E5C3C();
  v72 = sub_2408E5EB8();
  if (os_log_type_enabled(v71, v72))
  {
    v73 = swift_slowAlloc();
    v96 = swift_slowAlloc();
    v100[0] = v96;
    *(_DWORD *)v73 = 136315394;
    v74 = sub_2408E5558();
    v99 = sub_2403B3ED0(v74, v75, v100);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    sub_240363D58(v46, v47);
    sub_240363D58(v46, v47);
    *(_WORD *)(v73 + 12) = 2080;
    v76 = sub_2408E5558();
    v99 = sub_2403B3ED0(v76, v77, v100);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    sub_2403C2424(v59, v61);
    sub_2403C2424(v59, v61);
    _os_log_impl(&dword_240347000, v71, v72, "Failed to parse request link info for event\ntraceId: %s\ncompId: %s", (uint8_t *)v73, 0x16u);
    v78 = v96;
    swift_arrayDestroy();
    MEMORY[0x242684668](v78, -1, -1);
    MEMORY[0x242684668](v73, -1, -1);

    sub_2403C2424(v59, v61);
    sub_240363D58(v46, v47);
    sub_2404220FC((uint64_t)v91);
  }
  else
  {

    sub_2403C2424(v59, v61);
    sub_2403C2424(v59, v61);
    sub_240363D58(v46, v47);
    sub_240363D58(v46, v47);

    sub_2403C2424(v59, v61);
    sub_240363D58(v46, v47);
    sub_2404220FC((uint64_t)v24);
  }
  return 0;
}

uint64_t BiomeSELFEventIngestor.commit()()
{
  return swift_task_switch();
}

uint64_t sub_24041FA04()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_254355CC8 != -1)
    swift_once();
  v1 = sub_2408E5C48();
  __swift_project_value_buffer(v1, (uint64_t)qword_254356120);
  v2 = sub_2408E5C3C();
  v3 = sub_2408E5EA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_240347000, v2, v3, "commit()", v4, 2u);
    MEMORY[0x242684668](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_24041FAE4(uint64_t a1, void *a2)
{
  sub_24041FEDC(a1, a2);
}

uint64_t sub_24041FAF8()
{
  return swift_task_switch();
}

void *sub_24041FB0C(_BYTE *a1, void *a2, void *a3)
{
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;

  if (*a1)
    v5 = a3;
  else
    v5 = a2;
  if (*a1)
    v6 = a2;
  else
    v6 = a3;
  sub_240422180(0, &qword_256FFCA80);
  v7 = a2;
  v8 = a3;
  v9 = v6;
  v10 = v5;
  v11 = (void *)sub_2408E5EDC();
  v12 = v11;
  if (v11)
  {
    v13 = v11;

    if (qword_256FF8FE0 != -1)
      swift_once();
    v14 = sub_2408E5C48();
    __swift_project_value_buffer(v14, (uint64_t)qword_256FFCC68);
    v15 = v13;
    v16 = sub_2408E5C3C();
    v17 = sub_2408E5EA0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v34 = v19;
      *(_DWORD *)v18 = 136446210;
      v20 = sub_24042B0E0();
      sub_2403B3ED0(v20, v21, &v34);
      sub_2408E5F3C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v16, v17, "RequestLink: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242684668](v19, -1, -1);
      MEMORY[0x242684668](v18, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_256FF8FE0 != -1)
      swift_once();
    v22 = sub_2408E5C48();
    __swift_project_value_buffer(v22, (uint64_t)qword_256FFCC68);
    v23 = v9;
    v24 = v10;
    v25 = sub_2408E5C3C();
    v26 = sub_2408E5EB8();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v34 = v28;
      *(_DWORD *)v27 = 136446466;
      sub_2408E56E4();
      v29 = sub_2408E5EE8();
      sub_2403B3ED0(v29, v30, &v34);
      sub_2408E5F3C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      sub_2408E56E4();
      v31 = sub_2408E5EE8();
      sub_2403B3ED0(v31, v32, &v34);
      sub_2408E5F3C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v25, v26, "Can't build request link %{public}s -> %{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242684668](v28, -1, -1);
      MEMORY[0x242684668](v27, -1, -1);

    }
    else
    {

    }
  }
  return v12;
}

void sub_24041FEDC(uint64_t a1, void *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(void **__return_ptr);
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  int v38;
  _DWORD v39[2];
  id v40;
  void *v41;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA68);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2 + *(int *)(type metadata accessor for BiomeSELFEventIngestor() + 20);
  v10 = *(void (**)(void **__return_ptr))(v9
                                                   + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8)
                                                            + 44));
  if (!v10)
  {
    sub_2408E602C();
    __break(1u);
    JUMPOUT(0x240420514);
  }
  v11 = sub_2407119B4(a1, (uint64_t)a2);
  if (v11)
  {
    v12 = v11;
    v13 = sub_24041F148(a1, a2);
    if (v13)
    {
      v14 = v13;
    }
    else
    {
      v28 = sub_2404FC0FC(a1, (unint64_t)a2);
      if (v29 >> 60 == 15)
      {
        if (qword_254355CC8 != -1)
          swift_once();
        v30 = sub_2408E5C48();
        __swift_project_value_buffer(v30, (uint64_t)qword_254356120);
        v31 = sub_2408E5C3C();
        v32 = sub_2408E5EAC();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v33 = 0;
          _os_log_impl(&dword_240347000, v31, v32, "Skipping event missing data body", v33, 2u);
          MEMORY[0x242684668](v33, -1, -1);

          return;
        }

        goto LABEL_27;
      }
      v34 = v28;
      v35 = v29;
      v10(&v41);
      v14 = v41;
      if (qword_254355CC8 != -1)
        swift_once();
      v36 = sub_2408E5C48();
      __swift_project_value_buffer(v36, (uint64_t)qword_254356120);
      sub_240360070(v34, v35);
      v37 = sub_2408E5C3C();
      v38 = sub_2408E5E94();
      if (os_log_type_enabled(v37, (os_log_type_t)v38))
      {
        v39[1] = v38;
        v40 = v14;
        *(_DWORD *)swift_slowAlloc() = 134217984;
        __asm { BR              X10 }
      }
      sub_2403C2424(v34, v35);
      sub_2403C2424(v34, v35);

    }
    v12 = v12;
    sub_2408E56B4();
    sub_2408E5690();
    if (v3)
    {
      sub_240422078((uint64_t)v8);
      if (qword_254355CC8 != -1)
        swift_once();
      v15 = sub_2408E5C48();
      __swift_project_value_buffer(v15, (uint64_t)qword_254356120);
      v16 = v3;
      v17 = v3;
      v18 = sub_2408E5C3C();
      v19 = sub_2408E5EAC();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v21 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v20 = 138412290;
        v40 = v14;
        v22 = v3;
        v23 = _swift_stdlib_bridgeErrorToNSError();
        v41 = (void *)v23;
        sub_2408E5F3C();
        *v21 = v23;

        _os_log_impl(&dword_240347000, v18, v19, "Error adding event to pool %@", v20, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_257015860);
        swift_arrayDestroy();
        MEMORY[0x242684668](v21, -1, -1);
        MEMORY[0x242684668](v20, -1, -1);

      }
      else
      {

      }
      return;
    }
    sub_240422078((uint64_t)v8);

LABEL_27:
    return;
  }
  if (qword_254355CC8 != -1)
    swift_once();
  v24 = sub_2408E5C48();
  __swift_project_value_buffer(v24, (uint64_t)qword_254356120);
  v25 = sub_2408E5C3C();
  v26 = sub_2408E5EAC();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_240347000, v25, v26, "Skipping event missing monotonic timestamp", v27, 2u);
    MEMORY[0x242684668](v27, -1, -1);
  }

}

_QWORD *initializeBufferWithCopyOfBuffer for BiomeSELFEventIngestor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  char v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  _QWORD *v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    v22 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2408E569C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(void **)((char *)a2 + v8);
    v12 = *(_QWORD *)((char *)a2 + v8 + 8);
    v13 = *((_BYTE *)a2 + v8 + 16);
    sub_240420930(v11, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8);
    v15 = v14[7];
    v16 = &v9[v15];
    v17 = &v10[v15];
    v18 = sub_2408E5C6C();
    v19 = *(_QWORD *)(v18 - 8);
    v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v61(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v60 = a1;
    v23 = v14[8];
    v24 = &v9[v23];
    v25 = &v10[v23];
    if (v61(&v10[v23], 1, v18))
    {
      v26 = v19;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v24, v25, v18);
      v26 = v19;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v24, 0, 1, v18);
    }
    *(_QWORD *)&v9[v14[9]] = *(_QWORD *)&v10[v14[9]];
    v28 = v14[10];
    v29 = &v9[v28];
    v30 = &v10[v28];
    v31 = v10[v28 + 8];
    swift_bridgeObjectRetain();
    *(_QWORD *)v29 = *(_QWORD *)v30;
    if (v31 == 255)
    {
      v29[8] = v30[8];
    }
    else
    {
      v29[8] = v31;
      swift_bridgeObjectRetain();
    }
    v32 = v14[11];
    v33 = &v9[v32];
    v34 = &v10[v32];
    v35 = v26;
    if (*(_QWORD *)v34)
    {
      v36 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v36;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
    v22 = v60;
    *(_QWORD *)&v9[v14[12]] = *(_QWORD *)&v10[v14[12]];
    v37 = *(int *)(a3 + 24);
    v38 = (char *)v60 + v37;
    v39 = (char *)a2 + v37;
    v40 = *(void **)((char *)a2 + v37);
    v41 = *((_QWORD *)v39 + 1);
    v42 = v39[16];
    swift_bridgeObjectRetain();
    sub_240420930(v40, v41, v42);
    *(_QWORD *)v38 = v40;
    *((_QWORD *)v38 + 1) = v41;
    v38[16] = v42;
    v43 = v14[7];
    v44 = &v38[v43];
    v45 = &v39[v43];
    if (v61(&v39[v43], 1, v18))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v44, v45, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v44, 0, 1, v18);
    }
    v47 = v14[8];
    v48 = &v38[v47];
    v49 = &v39[v47];
    if (v61(&v39[v47], 1, v18))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v48, v49, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v48, 0, 1, v18);
    }
    *(_QWORD *)&v38[v14[9]] = *(_QWORD *)&v39[v14[9]];
    v51 = v14[10];
    v52 = &v38[v51];
    v53 = &v39[v51];
    v54 = v39[v51 + 8];
    swift_bridgeObjectRetain();
    *(_QWORD *)v52 = *(_QWORD *)v53;
    if (v54 == 255)
    {
      v52[8] = v53[8];
    }
    else
    {
      v52[8] = v54;
      swift_bridgeObjectRetain();
    }
    v55 = v14[11];
    v56 = &v38[v55];
    v57 = &v39[v55];
    if (*(_QWORD *)v57)
    {
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
    *(_QWORD *)&v38[v14[12]] = *(_QWORD *)&v39[v14[12]];
    swift_bridgeObjectRetain();
  }
  return v22;
}

id sub_240420930(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

uint64_t destroy for BiomeSELFEventIngestor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_240420B24(*(void **)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8);
  v7 = v5 + v6[7];
  v8 = sub_2408E5C6C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = v5 + v6[8];
  if (!v10(v11, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v5 + v6[10] + 8) != 255)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + v6[11]))
    swift_release();
  swift_bridgeObjectRelease();
  v12 = a1 + *(int *)(a2 + 24);
  sub_240420B24(*(void **)v12, *(_QWORD *)(v12 + 8), *(_BYTE *)(v12 + 16));
  v13 = v12 + v6[7];
  if (!v10(v13, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v8);
  v14 = v12 + v6[8];
  if (!v10(v14, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v12 + v6[10] + 8) != 255)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v12 + v6[11]))
    swift_release();
  return swift_bridgeObjectRelease();
}

void sub_240420B24(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BiomeSELFEventIngestor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;

  v6 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v56 = a3;
  v57 = a1;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(void **)(a2 + v7);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  v12 = *(_BYTE *)(a2 + v7 + 16);
  sub_240420930(v10, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8);
  v14 = v13[7];
  v15 = (void *)(v8 + v14);
  v16 = (const void *)(v9 + v14);
  v17 = sub_2408E5C6C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v21 = v13[8];
  v22 = (void *)(v8 + v21);
  v23 = (const void *)(v9 + v21);
  if (v19((const void *)(v9 + v21), 1, v17))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v22, v23, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  *(_QWORD *)(v8 + v13[9]) = *(_QWORD *)(v9 + v13[9]);
  v25 = v13[10];
  v26 = v8 + v25;
  v27 = v9 + v25;
  v28 = *(unsigned __int8 *)(v9 + v25 + 8);
  swift_bridgeObjectRetain();
  *(_QWORD *)v26 = *(_QWORD *)v27;
  if (v28 == 255)
  {
    *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  }
  else
  {
    *(_BYTE *)(v26 + 8) = v28;
    swift_bridgeObjectRetain();
  }
  v29 = v13[11];
  v30 = (_QWORD *)(v8 + v29);
  v31 = (_QWORD *)(v9 + v29);
  if (*v31)
  {
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v30 = *(_OWORD *)v31;
  }
  *(_QWORD *)(v8 + v13[12]) = *(_QWORD *)(v9 + v13[12]);
  v33 = *(int *)(v56 + 24);
  v34 = v57 + v33;
  v35 = a2 + v33;
  v36 = *(void **)(a2 + v33);
  v37 = *(_QWORD *)(v35 + 8);
  v38 = *(_BYTE *)(v35 + 16);
  swift_bridgeObjectRetain();
  sub_240420930(v36, v37, v38);
  *(_QWORD *)v34 = v36;
  *(_QWORD *)(v34 + 8) = v37;
  *(_BYTE *)(v34 + 16) = v38;
  v39 = v13[7];
  v40 = (void *)(v34 + v39);
  v41 = (const void *)(v35 + v39);
  if (v19((const void *)(v35 + v39), 1, v17))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v40, v41, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v40, 0, 1, v17);
  }
  v43 = v13[8];
  v44 = (void *)(v34 + v43);
  v45 = (const void *)(v35 + v43);
  if (v19((const void *)(v35 + v43), 1, v17))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v44, v45, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v44, 0, 1, v17);
  }
  *(_QWORD *)(v34 + v13[9]) = *(_QWORD *)(v35 + v13[9]);
  v47 = v13[10];
  v48 = v34 + v47;
  v49 = v35 + v47;
  v50 = *(unsigned __int8 *)(v35 + v47 + 8);
  swift_bridgeObjectRetain();
  *(_QWORD *)v48 = *(_QWORD *)v49;
  if (v50 == 255)
  {
    *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
  }
  else
  {
    *(_BYTE *)(v48 + 8) = v50;
    swift_bridgeObjectRetain();
  }
  v51 = v13[11];
  v52 = (_QWORD *)(v34 + v51);
  v53 = (_QWORD *)(v35 + v51);
  if (*v53)
  {
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
  }
  *(_QWORD *)(v34 + v13[12]) = *(_QWORD *)(v35 + v13[12]);
  swift_bridgeObjectRetain();
  return v57;
}

uint64_t assignWithCopy for BiomeSELFEventIngestor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  char v15;
  int *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int v35;
  int v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char v51;
  void *v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  void *v56;
  void *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  int v70;
  int v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;

  v6 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v82 = a3;
  v83 = a1;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(void **)(a2 + v7);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  v12 = *(_BYTE *)(a2 + v7 + 16);
  sub_240420930(v10, v11, v12);
  v13 = *(void **)v8;
  v14 = *(_QWORD *)(v8 + 8);
  v15 = *(_BYTE *)(v8 + 16);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  sub_240420B24(v13, v14, v15);
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8);
  v17 = v16[7];
  v18 = (void *)(v8 + v17);
  v19 = (void *)(v9 + v17);
  v20 = sub_2408E5C6C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  v26 = v16[8];
  v27 = (void *)(v8 + v26);
  v28 = (void *)(v9 + v26);
  v29 = v22((void *)(v8 + v26), 1, v20);
  v30 = v22(v28, 1, v20);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v27, v28, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v27, v20);
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v27, v28, v20);
LABEL_13:
  *(_QWORD *)(v8 + v16[9]) = *(_QWORD *)(v9 + v16[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = v16[10];
  v33 = v8 + v32;
  v34 = (uint64_t *)(v9 + v32);
  v35 = *(unsigned __int8 *)(v8 + v32 + 8);
  v36 = *(unsigned __int8 *)(v9 + v32 + 8);
  if (v35 == 255)
  {
    if (v36 == 255)
    {
      v38 = *v34;
      *(_BYTE *)(v33 + 8) = *((_BYTE *)v34 + 8);
      *(_QWORD *)v33 = v38;
    }
    else
    {
      *(_QWORD *)v33 = *v34;
      *(_BYTE *)(v33 + 8) = v36;
      swift_bridgeObjectRetain();
    }
  }
  else if (v36 == 255)
  {
    sub_240421518(v33);
    v37 = *((_BYTE *)v34 + 8);
    *(_QWORD *)v33 = *v34;
    *(_BYTE *)(v33 + 8) = v37;
  }
  else
  {
    *(_QWORD *)v33 = *v34;
    *(_BYTE *)(v33 + 8) = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v39 = v16[11];
  v40 = (_QWORD *)(v8 + v39);
  v41 = v9 + v39;
  v42 = *(_QWORD *)(v8 + v39);
  v43 = *(_QWORD *)(v9 + v39);
  if (v42)
  {
    if (v43)
    {
      v44 = *(_QWORD *)(v41 + 8);
      *v40 = v43;
      v40[1] = v44;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v43)
  {
    v45 = *(_QWORD *)(v41 + 8);
    *v40 = v43;
    v40[1] = v45;
    swift_retain();
    goto LABEL_29;
  }
  *(_OWORD *)v40 = *(_OWORD *)v41;
LABEL_29:
  *(_QWORD *)(v8 + v16[12]) = *(_QWORD *)(v9 + v16[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = *(int *)(v82 + 24);
  v47 = v83 + v46;
  v48 = a2 + v46;
  v49 = *(void **)(a2 + v46);
  v50 = *(_QWORD *)(v48 + 8);
  v51 = *(_BYTE *)(v48 + 16);
  sub_240420930(v49, v50, v51);
  v52 = *(void **)v47;
  v53 = *(_QWORD *)(v47 + 8);
  v54 = *(_BYTE *)(v47 + 16);
  *(_QWORD *)v47 = v49;
  *(_QWORD *)(v47 + 8) = v50;
  *(_BYTE *)(v47 + 16) = v51;
  sub_240420B24(v52, v53, v54);
  v55 = v16[7];
  v56 = (void *)(v47 + v55);
  v57 = (void *)(v48 + v55);
  v58 = v22((void *)(v47 + v55), 1, v20);
  v59 = v22(v57, 1, v20);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v56, v57, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v56, 0, 1, v20);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v56, v20);
LABEL_34:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v56, v57, v20);
LABEL_35:
  v61 = v16[8];
  v62 = (void *)(v47 + v61);
  v63 = (void *)(v48 + v61);
  v64 = v22((void *)(v47 + v61), 1, v20);
  v65 = v22(v63, 1, v20);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v62, v63, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v62, 0, 1, v20);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v65)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v62, v20);
LABEL_40:
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v62, v63, v20);
LABEL_41:
  *(_QWORD *)(v47 + v16[9]) = *(_QWORD *)(v48 + v16[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v67 = v16[10];
  v68 = v47 + v67;
  v69 = (uint64_t *)(v48 + v67);
  v70 = *(unsigned __int8 *)(v47 + v67 + 8);
  v71 = *(unsigned __int8 *)(v48 + v67 + 8);
  if (v70 == 255)
  {
    if (v71 == 255)
    {
      v73 = *v69;
      *(_BYTE *)(v68 + 8) = *((_BYTE *)v69 + 8);
      *(_QWORD *)v68 = v73;
    }
    else
    {
      *(_QWORD *)v68 = *v69;
      *(_BYTE *)(v68 + 8) = v71;
      swift_bridgeObjectRetain();
    }
  }
  else if (v71 == 255)
  {
    sub_240421518(v68);
    v72 = *((_BYTE *)v69 + 8);
    *(_QWORD *)v68 = *v69;
    *(_BYTE *)(v68 + 8) = v72;
  }
  else
  {
    *(_QWORD *)v68 = *v69;
    *(_BYTE *)(v68 + 8) = v71;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v74 = v16[11];
  v75 = (_QWORD *)(v47 + v74);
  v76 = v48 + v74;
  v77 = *(_QWORD *)(v47 + v74);
  v78 = *(_QWORD *)(v48 + v74);
  if (!v77)
  {
    if (v78)
    {
      v80 = *(_QWORD *)(v76 + 8);
      *v75 = v78;
      v75[1] = v80;
      swift_retain();
      goto LABEL_57;
    }
LABEL_56:
    *(_OWORD *)v75 = *(_OWORD *)v76;
    goto LABEL_57;
  }
  if (!v78)
  {
    swift_release();
    goto LABEL_56;
  }
  v79 = *(_QWORD *)(v76 + 8);
  *v75 = v78;
  v75[1] = v79;
  swift_retain();
  swift_release();
LABEL_57:
  *(_QWORD *)(v47 + v16[12]) = *(_QWORD *)(v48 + v16[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v83;
}

uint64_t sub_240421518(uint64_t a1)
{
  destroy for MessageFilteringPolicy();
  return a1;
}

uint64_t initializeWithTake for BiomeSELFEventIngestor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;

  v6 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v50 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(a2 + v7 + 16);
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8);
  v11 = v10[7];
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_2408E5C6C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = v10[8];
  v19 = (void *)(v8 + v18);
  v20 = (const void *)(v9 + v18);
  if (v16((const void *)(v9 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v19, v20, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  *(_QWORD *)(v8 + v10[9]) = *(_QWORD *)(v9 + v10[9]);
  v22 = v10[10];
  v23 = v8 + v22;
  v24 = v9 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = v10[11];
  v26 = (_QWORD *)(v8 + v25);
  v27 = (uint64_t *)(v9 + v25);
  v28 = *v27;
  if (*v27)
  {
    v29 = v27[1];
    *v26 = v28;
    v26[1] = v29;
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  *(_QWORD *)(v8 + v10[12]) = *(_QWORD *)(v9 + v10[12]);
  v30 = *(int *)(a3 + 24);
  v31 = v50 + v30;
  v32 = a2 + v30;
  *(_OWORD *)v31 = *(_OWORD *)(a2 + v30);
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(a2 + v30 + 16);
  v33 = v10[7];
  v34 = (void *)(v31 + v33);
  v35 = (const void *)(v32 + v33);
  if (v16((const void *)(v32 + v33), 1, v14))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v34, v35, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v34, 0, 1, v14);
  }
  v37 = v10[8];
  v38 = (void *)(v31 + v37);
  v39 = (const void *)(v32 + v37);
  if (v16((const void *)(v32 + v37), 1, v14))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v38, v39, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v38, 0, 1, v14);
  }
  *(_QWORD *)(v31 + v10[9]) = *(_QWORD *)(v32 + v10[9]);
  v41 = v10[10];
  v42 = v31 + v41;
  v43 = v32 + v41;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
  v44 = v10[11];
  v45 = (_QWORD *)(v31 + v44);
  v46 = (uint64_t *)(v32 + v44);
  v47 = *v46;
  if (*v46)
  {
    v48 = v46[1];
    *v45 = v47;
    v45[1] = v48;
  }
  else
  {
    *(_OWORD *)v45 = *(_OWORD *)v46;
  }
  *(_QWORD *)(v31 + v10[12]) = *(_QWORD *)(v32 + v10[12]);
  return v50;
}

uint64_t assignWithTake for BiomeSELFEventIngestor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  void *v10;
  uint64_t v11;
  char v12;
  int *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  void *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  void *v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  int v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;

  v6 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v70 = a3;
  v71 = a1;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (_OWORD *)(a2 + v7);
  LOBYTE(v7) = *(_BYTE *)(a2 + v7 + 16);
  v10 = *(void **)v8;
  v11 = *(_QWORD *)(v8 + 8);
  v12 = *(_BYTE *)(v8 + 16);
  *(_OWORD *)v8 = *v9;
  *(_BYTE *)(v8 + 16) = v7;
  sub_240420B24(v10, v11, v12);
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8);
  v14 = v13[7];
  v15 = (void *)(v8 + v14);
  v16 = (char *)v9 + v14;
  v17 = sub_2408E5C6C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_7:
  v23 = v13[8];
  v24 = (void *)(v8 + v23);
  v25 = (char *)v9 + v23;
  v26 = v19((void *)(v8 + v23), 1, v17);
  v27 = v19(v25, 1, v17);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v24, v25, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v24, v17);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v18 + 40))(v24, v25, v17);
LABEL_13:
  *(_QWORD *)(v8 + v13[9]) = *(_QWORD *)((char *)v9 + v13[9]);
  swift_bridgeObjectRelease();
  v29 = v13[10];
  v30 = v8 + v29;
  v31 = (char *)v9 + v29;
  if (*(unsigned __int8 *)(v8 + v29 + 8) != 255)
  {
    v32 = v31[8];
    if (v32 != 255)
    {
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_BYTE *)(v30 + 8) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    sub_240421518(v30);
  }
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = v31[8];
LABEL_18:
  v33 = v13[11];
  v34 = (_QWORD *)(v8 + v33);
  v35 = (char *)v9 + v33;
  v36 = *(_QWORD *)(v8 + v33);
  v37 = *(_QWORD *)((char *)v9 + v33);
  if (v36)
  {
    if (v37)
    {
      v38 = *((_QWORD *)v35 + 1);
      *v34 = v37;
      v34[1] = v38;
      swift_release();
      goto LABEL_25;
    }
    swift_release();
  }
  else if (v37)
  {
    v39 = *((_QWORD *)v35 + 1);
    *v34 = v37;
    v34[1] = v39;
    goto LABEL_25;
  }
  *(_OWORD *)v34 = *(_OWORD *)v35;
LABEL_25:
  *(_QWORD *)(v8 + v13[12]) = *(_QWORD *)((char *)v9 + v13[12]);
  swift_bridgeObjectRelease();
  v40 = *(int *)(v70 + 24);
  v41 = v71 + v40;
  v42 = (_OWORD *)(a2 + v40);
  LOBYTE(v40) = *(_BYTE *)(a2 + v40 + 16);
  v43 = *(void **)v41;
  v44 = *(_QWORD *)(v41 + 8);
  v45 = *(_BYTE *)(v41 + 16);
  *(_OWORD *)v41 = *v42;
  *(_BYTE *)(v41 + 16) = v40;
  sub_240420B24(v43, v44, v45);
  v46 = v13[7];
  v47 = (void *)(v41 + v46);
  v48 = (char *)v42 + v46;
  v49 = v19((void *)(v41 + v46), 1, v17);
  v50 = v19(v48, 1, v17);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v47, v48, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v47, 0, 1, v17);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v50)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v47, v17);
LABEL_30:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v18 + 40))(v47, v48, v17);
LABEL_31:
  v52 = v13[8];
  v53 = (void *)(v41 + v52);
  v54 = (char *)v42 + v52;
  v55 = v19((void *)(v41 + v52), 1, v17);
  v56 = v19(v54, 1, v17);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v53, v54, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v53, 0, 1, v17);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v56)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v53, v17);
LABEL_36:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, char *, uint64_t))(v18 + 40))(v53, v54, v17);
LABEL_37:
  *(_QWORD *)(v41 + v13[9]) = *(_QWORD *)((char *)v42 + v13[9]);
  swift_bridgeObjectRelease();
  v58 = v13[10];
  v59 = v41 + v58;
  v60 = (char *)v42 + v58;
  if (*(unsigned __int8 *)(v41 + v58 + 8) != 255)
  {
    v61 = v60[8];
    if (v61 != 255)
    {
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *(_BYTE *)(v59 + 8) = v61;
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    sub_240421518(v59);
  }
  *(_QWORD *)v59 = *(_QWORD *)v60;
  *(_BYTE *)(v59 + 8) = v60[8];
LABEL_42:
  v62 = v13[11];
  v63 = (_QWORD *)(v41 + v62);
  v64 = (char *)v42 + v62;
  v65 = *(_QWORD *)(v41 + v62);
  v66 = *(_QWORD *)((char *)v42 + v62);
  if (!v65)
  {
    if (v66)
    {
      v68 = *((_QWORD *)v64 + 1);
      *v63 = v66;
      v63[1] = v68;
      goto LABEL_49;
    }
LABEL_48:
    *(_OWORD *)v63 = *(_OWORD *)v64;
    goto LABEL_49;
  }
  if (!v66)
  {
    swift_release();
    goto LABEL_48;
  }
  v67 = *((_QWORD *)v64 + 1);
  *v63 = v66;
  v63[1] = v67;
  swift_release();
LABEL_49:
  *(_QWORD *)(v41 + v13[12]) = *(_QWORD *)((char *)v42 + v13[12]);
  swift_bridgeObjectRelease();
  return v71;
}

uint64_t getEnumTagSinglePayload for BiomeSELFEventIngestor()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240421DFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2408E569C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA60);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for BiomeSELFEventIngestor()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240421EA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_2408E569C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543560A8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA60);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_240421F50()
{
  unint64_t v0;
  unint64_t v1;

  sub_2408E569C();
  if (v0 <= 0x3F)
  {
    sub_240421FD4(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_240421FD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_2543560B0)
  {
    v2 = sub_240422180(255, qword_254356160);
    v5 = type metadata accessor for IngestConfig(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_2543560B0);
  }
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_240422078(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2404220B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RequestLinkConfig();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2404220FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RequestLinkConfig();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_240422138()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FFCA78;
  if (!qword_256FFCA78)
  {
    v1 = sub_2408E5C6C();
    result = MEMORY[0x242684578](MEMORY[0x24BE2BD18], v1);
    atomic_store(result, (unint64_t *)&qword_256FFCA78);
  }
  return result;
}

uint64_t sub_240422180(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_2404221B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  _QWORD v21[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA88);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v21 - v6;
  v8 = type metadata accessor for TranscriptProtoRequest(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (unsigned __int8 *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240422424(a1, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_24042246C((uint64_t)v7);
    return 0;
  }
  else
  {
    sub_2404224AC((uint64_t)v7, (uint64_t)v11);
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94F90]), sel_init);
    if (v12)
    {
      v21[0] = sub_2408E566C();
      v21[1] = v21;
      v13 = *(_QWORD *)(v21[0] - 8);
      MEMORY[0x24BDAC7A8](v21[0]);
      v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_2408E5660();
      v16 = objc_allocWithZone(MEMORY[0x24BE95C78]);
      v17 = (void *)sub_2408E5648();
      v18 = objc_msgSend(v16, sel_initWithNSUUID_, v17);

      (*(void (**)(char *, _QWORD))(v13 + 8))(v15, v21[0]);
      objc_msgSend(v12, sel_setExists_, 1);
      sub_24042252C((uint64_t)v11, (uint64_t)v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
      v19 = sub_24050D9C0((uint64_t)v5, (uint64_t)v18);
      sub_24042246C((uint64_t)v5);
      objc_msgSend(v12, sel_setContent_, v19);
      objc_msgSend(v12, sel_setIsSafetyMode_, *v11);

      sub_2404224F0((uint64_t)v11);
    }
    else
    {
      sub_2404224F0((uint64_t)v11);
    }
  }
  return v12;
}

uint64_t sub_240422424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24042246C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2404224AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2404224F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24042252C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_240422570(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for ToolKitProtoTypedValue.CollectionValue(0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95050]), sel_init);
  sub_24042274C(a1, (uint64_t)v5);
  v7 = type metadata accessor for ToolKitProtoTypedValue(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    sub_2403B83A0((uint64_t)v5);
  }
  else
  {
    v8 = *v5;
    sub_240422794(*v5);
    sub_240388AE4((uint64_t)v5, type metadata accessor for ToolKitProtoTypedValue);
    if ((~v8 & 0xF000000000000007) != 0)
      __asm { BR              X10 }
  }
  return v6;
}

uint64_t sub_24042274C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240422794(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

uint64_t sub_2404227AC(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

uint64_t sub_2404227C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ToolKitProtoTypedValue.CollectionValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_240422808(char *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  char *v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _BOOL8 v48;
  _OWORD *v49;
  uint64_t v50;
  _BOOL8 v51;
  uint64_t v52;
  unsigned __int8 *v53;
  uint64_t v54;
  char *v55;
  _OWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;

  v4 = type metadata accessor for RequestEventResult(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v54 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v53 = (unsigned __int8 *)&v50 - v7;
  v8 = sub_2408E5C48();
  v58 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v57 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v64 = *(_QWORD *)(v16 - 8);
  v65 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for TranscriptProtoEvent(0);
  v66 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254355DF0 != -1)
    goto LABEL_24;
  while (1)
  {
    v59 = v8;
    v60 = __swift_project_value_buffer(v8, (uint64_t)qword_254356428);
    v21 = sub_2408E5C3C();
    v22 = sub_2408E5EA0();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = a1;
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_240347000, v21, v22, "Producing features for events from a clientRequest", v24, 2u);
      v25 = v24;
      a1 = v23;
      MEMORY[0x242684668](v25, -1, -1);
    }

    v61 = (char *)*((_QWORD *)a1 + 2);
    if (!v61)
      break;
    v8 = (uint64_t)&a1[(*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80)];
    v26 = *(_QWORD *)(v8 + 64);
    v27 = *(_QWORD *)(v8 + 72);
    v56 = a2;
    v52 = v4;
    v51 = (v26 != 0xD00000000000001ELL || v27 != 0x8000000240921BB0) && (sub_2408E617C() & 1) == 0;
    v55 = a1;
    swift_bridgeObjectRetain();
    a2 = 0;
    v4 = (uint64_t)type metadata accessor for TranscriptProtoPayloadEnum;
    while (1)
    {
      a1 = (char *)a2 + 1;
      if (__OFADD__(a2, 1))
        break;
      sub_2403AE1A4(v8 + *(_QWORD *)(v66 + 72) * (_QWORD)a2, (uint64_t)v20, type metadata accessor for TranscriptProtoEvent);
      sub_2403A9210((uint64_t)&v20[*(int *)(v63 + 44)], (uint64_t)v12, &qword_256FFA490);
      v28 = type metadata accessor for TranscriptProtoPayload(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v12, 1, v28) == 1)
      {
        sub_2403A97FC((uint64_t)v12, &qword_256FFA490);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v15, 1, 1, v65);
LABEL_19:
        swift_bridgeObjectRelease();
        sub_2403A97FC((uint64_t)v15, &qword_256FFA488);
        v44 = v57;
        v43 = v58;
        v45 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v60, v59);
        v67 = 0;
        v68 = 0xE000000000000000;
        sub_2408E5F84();
        sub_2408E5D50();
        swift_bridgeObjectRetain();
        sub_2408E5D50();
        swift_bridgeObjectRelease();
        v46 = v67;
        LOBYTE(v67) = 65;
        sub_2408B4A30(v46, v68, (char *)&v67);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
        sub_240388AE4((uint64_t)v20, type metadata accessor for TranscriptProtoEvent);
        v47 = v56;
        *(_OWORD *)((char *)v56 + 46) = 0u;
        v47[1] = 0u;
        v47[2] = 0u;
        *v47 = 0u;
        sub_2403ADB34(3, 0, 2);
        swift_bridgeObjectRelease();
LABEL_22:
        swift_bridgeObjectRelease();
        return;
      }
      sub_2403A9210((uint64_t)v12, (uint64_t)v15, &qword_256FFA488);
      sub_240388AE4((uint64_t)v12, type metadata accessor for TranscriptProtoPayload);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v15, 1, v65) == 1)
        goto LABEL_19;
      sub_2403A91CC((uint64_t)v15, (uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
      sub_240422F34((uint64_t)v18);
      sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoPayloadEnum);
      sub_240388AE4((uint64_t)v20, type metadata accessor for TranscriptProtoEvent);
      a2 = (_OWORD *)((char *)a2 + 1);
      if (a1 == v61)
      {
        swift_bridgeObjectRelease();
        v29 = (unsigned __int8 *)(v62 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result);
        swift_beginAccess();
        v30 = v53;
        sub_2403AE1A4((uint64_t)v29, (uint64_t)v53, type metadata accessor for RequestEventResult);
        sub_240423F30(v30, (uint64_t)&v69);
        sub_240388AE4((uint64_t)v30, type metadata accessor for RequestEventResult);
        v31 = v69;
        v32 = v70;
        v33 = v71;
        sub_2403ADAA8(v69, v70, v71);
        sub_2403ADB34(3, 0, 2);
        v34 = *((_QWORD *)v29 + 2);
        v66 = *((_QWORD *)v29 + 1);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        v35 = *v29;
        v36 = v52;
        v37 = *(_QWORD *)&v29[*(int *)(v52 + 72)];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        v38 = v54;
        sub_2403AE1A4((uint64_t)v29, v54, type metadata accessor for RequestEventResult);
        v39 = (int *)(v38 + *(int *)(v36 + 76));
        v40 = type metadata accessor for TranscriptProtoStatementID(0);
        if ((*(unsigned int (**)(int *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40))
        {
          v41 = 0;
          v42 = 0x100000000;
        }
        else
        {
          v42 = 0;
          v41 = *v39;
        }
        v48 = v51;
        sub_240388AE4(v38, type metadata accessor for RequestEventResult);
        sub_2403ADAA8(v31, v32, v33);
        sub_2403ADB34(v31, v32, v33);
        v49 = v56;
        *(_QWORD *)v56 = v48;
        *((_QWORD *)v49 + 1) = v31;
        *((_QWORD *)v49 + 2) = v32;
        *((_QWORD *)v49 + 3) = v33;
        *((_QWORD *)v49 + 4) = v66;
        *((_QWORD *)v49 + 5) = v34;
        *((_QWORD *)v49 + 6) = v37;
        *((_WORD *)v49 + 30) = (v42 | (unint64_t)(v35 << 40)) >> 32;
        *((_DWORD *)v49 + 14) = v42 | v41;
        sub_2403ADB34(v31, v32, v33);
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_24:
    swift_once();
  }
  LOBYTE(v67) = 64;
  sub_2408B4A30(0xD000000000000030, 0x8000000240922F30, (char *)&v67);
  *(_OWORD *)((char *)a2 + 46) = 0u;
  a2[1] = 0u;
  a2[2] = 0u;
  *a2 = 0u;
}

int *sub_240422F34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  char *v43;
  uint64_t (*v44)(_QWORD);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t (*v93)(uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139[24];
  uint64_t v140[4];

  v119 = type metadata accessor for TranscriptProtoSystemResponse(0);
  MEMORY[0x24BDAC7A8](v119);
  v128 = (char *)&v116 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v120 = (uint64_t)&v116 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v127 = (char *)&v116 - v6;
  v131 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v118 = *(_QWORD *)(v131 - 8);
  v7 = MEMORY[0x24BDAC7A8](v131);
  v116 = (uint64_t)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v123 = (char *)&v116 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v125 = (char *)&v116 - v14;
  v15 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v129 = *(_QWORD *)(v15 - 8);
  v130 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v117 = (uint64_t)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
  MEMORY[0x24BDAC7A8](v17);
  v132 = (char *)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  v121 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122);
  v126 = (char *)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x24BDAC7A8](v134);
  v133 = (uint64_t)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v116 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v124 = (uint64_t)&v116 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (uint64_t *)((char *)&v116 - v27);
  v29 = type metadata accessor for TranscriptProtoStatementID(0);
  v136 = *(_QWORD *)(v29 - 8);
  v137 = v29;
  v30 = MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v116 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v116 - v33;
  v35 = type metadata accessor for TranscriptProtoPlan(0);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v116 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v41 = (int *)((char *)&v116 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v116 - v42;
  v135 = a1;
  sub_2403AE1A4(a1, (uint64_t)&v116 - v42, v44);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 4u:
      sub_2403A91CC((uint64_t)v43, (uint64_t)v37, type metadata accessor for TranscriptProtoPlan);
      v43 = (char *)(v138 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result);
      swift_beginAccess();
      v45 = type metadata accessor for RequestEventResult(0);
      v46 = *(int *)(v45 + 28);
      v47 = *(_QWORD *)&v43[v46];
      v48 = __OFADD__(v47, 1);
      v49 = v47 + 1;
      if (v48)
      {
        __break(1u);
        goto LABEL_60;
      }
      v50 = v45;
      *(_QWORD *)&v43[v46] = v49;
      sub_2408E2FCC((uint64_t)v37, (uint64_t)v28);
      sub_240388AE4((uint64_t)v37, type metadata accessor for TranscriptProtoPlan);
      v52 = v136;
      v51 = v137;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v136 + 48))(v28, 1, v137) != 1)
      {
        sub_2403A91CC((uint64_t)v28, (uint64_t)v34, type metadata accessor for TranscriptProtoStatementID);
        v95 = v124;
        sub_2403A91CC((uint64_t)v34, v124, type metadata accessor for TranscriptProtoStatementID);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v95, 0, 1, v51);
        swift_beginAccess();
        v96 = (uint64_t)&v43[*(int *)(v50 + 76)];
        v97 = &qword_256FFA300;
        v98 = v95;
        goto LABEL_46;
      }
      return (int *)sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
    case 5u:
      sub_240388AE4((uint64_t)v43, type metadata accessor for TranscriptProtoPayloadEnum);
      v43 = (char *)(v138 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result);
      swift_beginAccess();
      result = (int *)type metadata accessor for RequestEventResult(0);
      v54 = result[9];
      v55 = *(_QWORD *)&v43[v54];
      v48 = __OFADD__(v55, 1);
      v56 = v55 + 1;
      if (!v48)
        goto LABEL_27;
      __break(1u);
      goto LABEL_8;
    case 6u:
LABEL_8:
      sub_240388AE4((uint64_t)v43, type metadata accessor for TranscriptProtoPayloadEnum);
      v43 = (char *)(v138 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result);
      swift_beginAccess();
      result = (int *)type metadata accessor for RequestEventResult(0);
      v54 = result[10];
      v57 = *(_QWORD *)&v43[v54];
      v48 = __OFADD__(v57, 1);
      v56 = v57 + 1;
      if (!v48)
        goto LABEL_27;
      __break(1u);
LABEL_11:
      if (qword_254355DF0 != -1)
LABEL_60:
        swift_once();
      v58 = sub_2408E5C48();
      __swift_project_value_buffer(v58, (uint64_t)qword_254356428);
      sub_2403AE1A4(v135, (uint64_t)v41, type metadata accessor for TranscriptProtoPayloadEnum);
      v59 = sub_2408E5C3C();
      v60 = sub_2408E5EA0();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = (uint8_t *)swift_slowAlloc();
        v62 = swift_slowAlloc();
        v140[0] = v62;
        *(_DWORD *)v61 = 136315138;
        TranscriptProtoPayloadEnum.eventTypeString.getter();
        *(_QWORD *)v139 = sub_2403B3ED0(v63, v64, v140);
        sub_2408E5F3C();
        swift_bridgeObjectRelease();
        sub_240388AE4((uint64_t)v41, type metadata accessor for TranscriptProtoPayloadEnum);
        _os_log_impl(&dword_240347000, v59, v60, "Skip event: %s", v61, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242684668](v62, -1, -1);
        MEMORY[0x242684668](v61, -1, -1);
      }
      else
      {
        sub_240388AE4((uint64_t)v41, type metadata accessor for TranscriptProtoPayloadEnum);
      }

      v93 = type metadata accessor for TranscriptProtoPayloadEnum;
      v94 = (uint64_t)v43;
      return (int *)sub_240388AE4(v94, v93);
    case 0xAu:
      sub_240388AE4((uint64_t)v43, type metadata accessor for TranscriptProtoPayloadEnum);
      v43 = (char *)(v138 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result);
      swift_beginAccess();
      v65 = *(int *)(type metadata accessor for RequestEventResult(0) + 60);
      v66 = *(_QWORD *)&v43[v65];
      v48 = __OFADD__(v66, 1);
      v67 = v66 + 1;
      if (!v48)
      {
        *(_QWORD *)&v43[v65] = v67;
        v68 = sub_2408E1568(v139, v135);
        *v43 = v139[0];
        *((_QWORD *)v43 + 1) = v68;
        *((_QWORD *)v43 + 2) = v69;
        return (int *)swift_bridgeObjectRelease();
      }
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      v28 = sub_24050A538(0, v28[2] + 1, 1, v28);
      *(_QWORD *)&v13[a1] = v28;
LABEL_34:
      v91 = v28[2];
      v90 = v28[3];
      if (v91 >= v90 >> 1)
      {
        v28 = sub_24050A538((_QWORD *)(v90 > 1), v91 + 1, 1, v28);
        *(_QWORD *)&v13[a1] = v28;
      }
      v86 = (uint64_t)v132;
      v28[2] = v91 + 1;
      v92 = &v28[2 * v91];
      v92[4] = v34;
      v92[5] = v43;
      swift_endAccess();
      v81 = v133;
      v88 = v136;
      v87 = v137;
LABEL_37:
      sub_2403A9210(v81 + *(int *)(v134 + 32), (uint64_t)v24, &qword_256FFA300);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v24, 1, v87) == 1)
      {
        sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
      }
      else
      {
        sub_2403A91CC((uint64_t)v24, (uint64_t)v32, type metadata accessor for TranscriptProtoStatementID);
        v99 = v124;
        sub_2403A91CC((uint64_t)v32, v124, type metadata accessor for TranscriptProtoStatementID);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56))(v99, 0, 1, v87);
        swift_beginAccess();
        sub_2403C25A0(v99, (uint64_t)&v13[v41[19]], &qword_256FFA300);
        swift_endAccess();
      }
      v100 = v131;
      v102 = (uint64_t)v126;
      v101 = (uint64_t)v127;
      v103 = (uint64_t)v125;
      sub_2403A9210(v81 + *(int *)(v134 + 24), v86, &qword_256FFA420);
      v104 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 48))(v86, 1, v122);
      v105 = (uint64_t)v123;
      if (v104 == 1)
      {
        sub_240388AE4(v81, type metadata accessor for TranscriptProtoStatementResult);
        return (int *)sub_2403A97FC(v86, &qword_256FFA420);
      }
      else
      {
        sub_2403A91CC(v86, v102, type metadata accessor for TranscriptProtoStatementResultPayload);
        sub_2403A9210(v102, v103, &qword_256FFA3E8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v103, 1, v130) == 1)
        {
          sub_240388AE4(v102, type metadata accessor for TranscriptProtoStatementResultPayload);
          sub_240388AE4(v81, type metadata accessor for TranscriptProtoStatementResult);
          return (int *)sub_2403A97FC(v103, &qword_256FFA3E8);
        }
        else
        {
          v106 = v103;
          v107 = v117;
          sub_2403A91CC(v106, v117, type metadata accessor for TranscriptProtoStatementOutcome);
          sub_2403A9210(v107, v101, &qword_256FFA3E0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v101, 1, v100) == 1)
          {
            sub_240388AE4(v107, type metadata accessor for TranscriptProtoStatementOutcome);
            sub_240388AE4(v102, type metadata accessor for TranscriptProtoStatementResultPayload);
            sub_240388AE4(v81, type metadata accessor for TranscriptProtoStatementResult);
            return (int *)sub_2403A97FC(v101, &qword_256FFA3E0);
          }
          else
          {
            sub_2403A91CC(v101, v105, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
            v108 = v116;
            sub_2403AE1A4(v105, v116, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
            if (swift_getEnumCaseMultiPayload() == 9)
            {
              sub_240388AE4(v108, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
              v109 = v41[16];
              v110 = *(_QWORD *)&v13[v109];
              v48 = __OFADD__(v110, 1);
              v111 = v110 + 1;
              v112 = v117;
              if (v48)
              {
                __break(1u);
                JUMPOUT(0x240423E88);
              }
              *(_QWORD *)&v13[v109] = v111;
              v113 = sub_2408E1568(v139, v135);
              v115 = v114;
              sub_240388AE4(v105, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
              sub_240388AE4(v112, type metadata accessor for TranscriptProtoStatementOutcome);
              sub_240388AE4(v102, type metadata accessor for TranscriptProtoStatementResultPayload);
              sub_240388AE4(v81, type metadata accessor for TranscriptProtoStatementResult);
              *v13 = v139[0];
              *((_QWORD *)v13 + 1) = v113;
              *((_QWORD *)v13 + 2) = v115;
              return (int *)swift_bridgeObjectRelease();
            }
            sub_240388AE4(v105, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
            sub_240388AE4(v117, type metadata accessor for TranscriptProtoStatementOutcome);
            sub_240388AE4(v102, type metadata accessor for TranscriptProtoStatementResultPayload);
            sub_240388AE4(v81, type metadata accessor for TranscriptProtoStatementResult);
            v94 = v108;
            v93 = type metadata accessor for TranscriptProtoStatementOutcomeEnum;
            return (int *)sub_240388AE4(v94, v93);
          }
        }
      }
    case 0xDu:
      sub_240388AE4((uint64_t)v43, type metadata accessor for TranscriptProtoPayloadEnum);
      v43 = (char *)(v138 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result);
      swift_beginAccess();
      result = (int *)type metadata accessor for RequestEventResult(0);
      v54 = result[13];
      v70 = *(_QWORD *)&v43[v54];
      v48 = __OFADD__(v70, 1);
      v56 = v70 + 1;
      if (!v48)
        goto LABEL_27;
      __break(1u);
LABEL_20:
      sub_240388AE4((uint64_t)v43, type metadata accessor for TranscriptProtoPayloadEnum);
      v43 = (char *)(v138 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result);
      swift_beginAccess();
      result = (int *)type metadata accessor for RequestEventResult(0);
      v54 = result[14];
      v71 = *(_QWORD *)&v43[v54];
      v48 = __OFADD__(v71, 1);
      v56 = v71 + 1;
      if (v48)
      {
        __break(1u);
LABEL_23:
        sub_240388AE4((uint64_t)v43, type metadata accessor for TranscriptProtoPayloadEnum);
        v43 = (char *)(v138 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result);
        swift_beginAccess();
        result = (int *)type metadata accessor for RequestEventResult(0);
        v54 = result[11];
        v72 = *(_QWORD *)&v43[v54];
        v48 = __OFADD__(v72, 1);
        v56 = v72 + 1;
        if (v48)
        {
          __break(1u);
LABEL_26:
          sub_240388AE4((uint64_t)v43, type metadata accessor for TranscriptProtoPayloadEnum);
          v43 = (char *)(v138 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result);
          swift_beginAccess();
          result = (int *)type metadata accessor for RequestEventResult(0);
          v54 = result[8];
          v73 = *(_QWORD *)&v43[v54];
          v48 = __OFADD__(v73, 1);
          v56 = v73 + 1;
          if (v48)
            goto LABEL_62;
        }
      }
LABEL_27:
      *(_QWORD *)&v43[v54] = v56;
      return result;
    case 0xEu:
      goto LABEL_20;
    case 0x17u:
      goto LABEL_23;
    case 0x1Au:
      goto LABEL_26;
    case 0x1Cu:
      v24 = v128;
      sub_2403A91CC((uint64_t)v43, (uint64_t)v128, type metadata accessor for TranscriptProtoSystemResponse);
      v43 = (char *)(v138 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result);
      swift_beginAccess();
      v74 = type metadata accessor for RequestEventResult(0);
      v75 = *(int *)(v74 + 48);
      v76 = *(_QWORD *)&v43[v75];
      v48 = __OFADD__(v76, 1);
      v77 = v76 + 1;
      if (v48)
        goto LABEL_63;
      v78 = v74;
      *(_QWORD *)&v43[v75] = v77;
      sub_2403A9210((uint64_t)&v24[*(int *)(v119 + 28)], (uint64_t)v13, &qword_256FFA3E8);
      sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoSystemResponse);
      v79 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v129 + 48))(v13, 1, v130);
      v80 = v120;
      if (v79 == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_256FFA3E8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56))(v80, 1, 1, v131);
      }
      else
      {
        sub_2403A9210((uint64_t)v13, v120, &qword_256FFA3E0);
        sub_240388AE4((uint64_t)v13, type metadata accessor for TranscriptProtoStatementOutcome);
      }
      swift_beginAccess();
      v96 = (uint64_t)&v43[*(int *)(v78 + 24)];
      v97 = &qword_256FFA3E0;
      v98 = v80;
LABEL_46:
      sub_2403C25A0(v98, v96, v97);
      return (int *)swift_endAccess();
    case 0x1Du:
      v81 = v133;
      sub_2403A91CC((uint64_t)v43, v133, type metadata accessor for TranscriptProtoStatementResult);
      v13 = (char *)(v138 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result);
      swift_beginAccess();
      v82 = type metadata accessor for RequestEventResult(0);
      v83 = *(int *)(v82 + 56);
      v84 = *(_QWORD *)&v13[v83];
      v48 = __OFADD__(v84, 1);
      v85 = v84 + 1;
      if (v48)
        goto LABEL_64;
      v41 = (int *)v82;
      *(_QWORD *)&v13[v83] = v85;
      v43 = *(char **)(v81 + 24);
      v86 = (uint64_t)v132;
      v88 = v136;
      v87 = v137;
      if (!v43)
        goto LABEL_37;
      v34 = *(char **)(v81 + 16);
      swift_beginAccess();
      a1 = v41[18];
      v28 = *(_QWORD **)&v13[a1];
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v13[a1] = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        goto LABEL_34;
      goto LABEL_65;
    case 0x2Du:
      swift_beginAccess();
      return (int *)type metadata accessor for RequestEventResult(0);
    default:
      goto LABEL_11;
  }
}

void sub_240423F30(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  __int128 v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  char *v26;
  uint64_t v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v27 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v27 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v27 - v18;
  v20 = (int *)type metadata accessor for RequestEventResult(0);
  if (*(uint64_t *)&a1[v20[8]] >= 1)
  {
    v21 = xmmword_2408EB230;
LABEL_3:
    *(_OWORD *)a2 = v21;
LABEL_4:
    *(_BYTE *)(a2 + 16) = 2;
    return;
  }
  if (*(uint64_t *)&a1[v20[15]] < 1 && *(uint64_t *)&a1[v20[16]] < 1)
  {
    if (*(uint64_t *)&a1[v20[12]] < 1)
    {
      if (*(uint64_t *)&a1[v20[17]] >= 1)
      {
        v21 = xmmword_2408EB220;
        goto LABEL_3;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)&a1[v20[6]], (uint64_t)v6, &qword_256FFA3E0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        sub_2403A91CC((uint64_t)v6, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
        sub_2403AE1A4((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
        if (!swift_getEnumCaseMultiPayload())
        {
          sub_240388AE4((uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          *(_QWORD *)a2 = 0;
          *(_QWORD *)(a2 + 8) = 0;
          goto LABEL_4;
        }
        sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
        sub_2403AE1A4((uint64_t)v19, (uint64_t)v14, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
        if (swift_getEnumCaseMultiPayload() != 9)
        {
          sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          sub_2403AE1A4((uint64_t)v19, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v26 = (char *)&loc_2404242C4 + 4 * byte_2408EB240[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        sub_240388AE4((uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
        sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
        goto LABEL_7;
      }
      sub_2403A97FC((uint64_t)v6, &qword_256FFA3E0);
      if (qword_254355DF0 != -1)
        swift_once();
      v22 = sub_2408E5C48();
      __swift_project_value_buffer(v22, (uint64_t)qword_254356428);
      v23 = sub_2408E5C3C();
      v24 = sub_2408E5EA0();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_240347000, v23, v24, "Response generated without valid statement outcome, setting request status to 'unknown'", v25, 2u);
        MEMORY[0x242684668](v25, -1, -1);
      }

    }
    v21 = xmmword_2408EB210;
    goto LABEL_3;
  }
LABEL_7:
  *(_QWORD *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
}

uint64_t sub_2404243DC()
{
  uint64_t v0;

  sub_240388AE4(v0 + OBJC_IVAR____TtC23LighthouseDataProcessor24IERequestFeatureProvider_result, type metadata accessor for RequestEventResult);
  return swift_deallocClassInstance();
}

uint64_t sub_240424414()
{
  return type metadata accessor for IERequestFeatureProvider(0);
}

uint64_t type metadata accessor for IERequestFeatureProvider(uint64_t a1)
{
  return sub_2403BA700(a1, qword_256FFCAB8);
}

uint64_t sub_240424430()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RequestEventResult(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for RequestEventResult(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_256FFCBC8);
}

uint64_t *sub_2404244B0(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(_QWORD *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48);
    swift_bridgeObjectRetain();
    if (!v12(v10, 1, v11))
    {
      v15 = (char *)&loc_2404245A8 + 4 * byte_2408EB24B[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    v16 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    v17 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)v4 + v17) = *(uint64_t *)((char *)a2 + v17);
    v18 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v18) = *(uint64_t *)((char *)a2 + v18);
    v19 = a3[14];
    *(uint64_t *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    *(uint64_t *)((char *)v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    v20 = a3[16];
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(uint64_t *)((char *)v4 + v20) = *(uint64_t *)((char *)a2 + v20);
    v21 = a3[18];
    *(uint64_t *)((char *)v4 + a3[17]) = *(uint64_t *)((char *)a2 + a3[17]);
    v22 = a3[19];
    v23 = (uint64_t *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    *(uint64_t *)((char *)v4 + v21) = *(uint64_t *)((char *)a2 + v21);
    v25 = type metadata accessor for TranscriptProtoStatementID(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v23 = *(_DWORD *)v24;
      v29 = v24[2];
      v23[1] = v24[1];
      v23[2] = v29;
      v30 = *(int *)(v25 + 24);
      v31 = (char *)v23 + v30;
      v32 = (char *)v24 + v30;
      v33 = sub_2408E57A4();
      v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
      swift_bridgeObjectRetain();
      v34(v31, v32, v33);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
  }
  return v4;
}

uint64_t sub_2404251C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    goto LABEL_52;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
      v7 = (_QWORD *)(v4 + v6[6]);
      v8 = type metadata accessor for ToolKitProtoTypedValue(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
      {
        if ((~*v7 & 0xF000000000000007) != 0)
          swift_release();
        v9 = (char *)v7 + *(int *)(v8 + 20);
        v10 = sub_2408E57A4();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      }
      v11 = v4 + v6[7];
      v12 = type metadata accessor for TranscriptProtoUndoContext(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v11 + *(int *)(v12 + 28);
        v14 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      }
      v15 = v6[8];
      goto LABEL_51;
    case 1u:
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for TranscriptProtoActionConfirmation(0);
      goto LABEL_50;
    case 2u:
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
      goto LABEL_50;
    case 3u:
      swift_bridgeObjectRelease();
      v17 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
      goto LABEL_15;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
      goto LABEL_51;
    case 5u:
      swift_bridgeObjectRelease();
      v17 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_15:
      v18 = v17;
      v19 = (_QWORD *)(v4 + *(int *)(v17 + 24));
      v20 = type metadata accessor for ToolKitProtoTypedValue(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
      {
        if ((~*v19 & 0xF000000000000007) != 0)
          swift_release();
        v21 = (char *)v19 + *(int *)(v20 + 20);
        v22 = sub_2408E57A4();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      }
      v15 = *(int *)(v18 + 28);
      goto LABEL_51;
    case 6u:
      swift_bridgeObjectRelease();
      v23 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
      v24 = (_QWORD *)(v4 + *(int *)(v23 + 20));
      v25 = type metadata accessor for ToolKitProtoTypedValue(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
      {
        if ((~*v24 & 0xF000000000000007) != 0)
          swift_release();
        v26 = (char *)v24 + *(int *)(v25 + 20);
        v27 = sub_2408E57A4();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
      }
      v15 = *(int *)(v23 + 24);
      goto LABEL_51;
    case 7u:
      v28 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v4, 1, v28))
        goto LABEL_49;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v38 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v4, 1, v38))
        {
          v39 = swift_getEnumCaseMultiPayload();
          if (v39 == 1)
          {
            v41 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v4, 1, v41))
            {
              v42 = v4 + *(int *)(v41 + 20);
              v43 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
            }
            v40 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
            goto LABEL_46;
          }
          if (!v39)
          {
            swift_bridgeObjectRelease();
            v40 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
LABEL_46:
            v44 = v4 + *(int *)(v40 + 20);
            v45 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
          }
        }
        v30 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
        goto LABEL_48;
      }
      if (EnumCaseMultiPayload == 1)
      {
        v30 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_49;
        v30 = type metadata accessor for TranscriptProtoAppRequirement(0);
      }
LABEL_48:
      v46 = v4 + *(int *)(v30 + 20);
      v47 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
LABEL_49:
      v16 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_50:
      v15 = *(int *)(v16 + 20);
LABEL_51:
      v48 = v4 + v15;
      v49 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
LABEL_52:
      swift_bridgeObjectRelease();
      v50 = a1 + *(int *)(a2 + 76);
      v51 = type metadata accessor for TranscriptProtoStatementID(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v50, 1, v51);
      if (!(_DWORD)result)
      {
        swift_bridgeObjectRelease();
        v53 = v50 + *(int *)(v51 + 24);
        v54 = sub_2408E57A4();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
      }
      return result;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
      goto LABEL_51;
    case 9u:
      v31 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v4, 1, v31))
      {
        v32 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v4, 1, v32))
        {
          v33 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v4, 16, v33))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v34 = v4 + *(int *)(v33 + 28);
            v35 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
          }
        }
        v36 = v4 + *(int *)(v31 + 20);
        v37 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
      }
      v16 = type metadata accessor for TranscriptProtoActionFailure(0);
      goto LABEL_50;
    case 0xAu:
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
      goto LABEL_50;
    default:
      goto LABEL_52;
  }
}

uint64_t sub_2404257C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(_QWORD *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  swift_bridgeObjectRetain();
  if (!v11(v9, 1, v10))
  {
    v13 = (char *)&loc_24042588C + 4 * byte_2408EB261[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  v14 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  v20 = a3[19];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v23 = type metadata accessor for TranscriptProtoStatementID(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  if (v25(v22, 1, v23))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v27 = v22[2];
    v21[1] = v22[1];
    v21[2] = v27;
    v28 = *(int *)(v23 + 24);
    v29 = (char *)v21 + v28;
    v30 = (char *)v22 + v28;
    v31 = sub_2408E57A4();
    v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
    swift_bridgeObjectRetain();
    v32(v29, v30, v31);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  return a1;
}

uint64_t sub_2404264AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t (*v10)(void *, uint64_t, uint64_t);
  int v11;
  int v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  v11 = v10(v7, 1, v9);
  v12 = v10(v8, 1, v9);
  if (v11)
  {
    if (!v12)
    {
      v13 = (char *)&loc_24042657C + 4 * word_2408EB26C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v12)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v15 = (char *)&loc_240426674 + 4 * word_2408EB282[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + a3[16]) = *(_QWORD *)(a2 + a3[16]);
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)(a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[19];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = type metadata accessor for TranscriptProtoStatementID(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v17[1] = v18[1];
      v17[2] = v18[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v31 = *(int *)(v19 + 24);
      v32 = (char *)v17 + v31;
      v33 = (char *)v18 + v31;
      v34 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
      return a1;
    }
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_14;
  }
  if (v23)
  {
LABEL_14:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    return a1;
  }
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  v24 = *(int *)(v19 + 24);
  v25 = (char *)v17 + v24;
  v26 = (char *)v18 + v24;
  v27 = sub_2408E57A4();
  v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
  swift_bridgeObjectRetain();
  v28(v25, v26, v27);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t sub_2404280CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v11 = (char *)&loc_24042818C + 4 * byte_2408EB298[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  v18 = a3[19];
  v19 = (_DWORD *)(a1 + v18);
  v20 = (_DWORD *)(a2 + v18);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v21 = type metadata accessor for TranscriptProtoStatementID(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    *v19 = *v20;
    *(_OWORD *)(v19 + 2) = *(_OWORD *)(v20 + 2);
    v24 = *(int *)(v21 + 24);
    v25 = (char *)v19 + v24;
    v26 = (char *)v20 + v24;
    v27 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_240428C68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[6];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v12 = v11(v8, 1, v10);
  v13 = v11(v9, 1, v10);
  if (v12)
  {
    if (!v13)
    {
      v14 = (char *)&loc_240428D24 + 4 * byte_2408EB2A3[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v16 = (char *)&loc_240428E0C + 4 * word_2408EB2AE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v17 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  v20 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  v21 = a3[16];
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)(a2 + a3[15]);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  v22 = a3[18];
  *(_QWORD *)(a1 + a3[17]) = *(_QWORD *)(a2 + a3[17]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  swift_bridgeObjectRelease();
  v23 = a3[19];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = type metadata accessor for TranscriptProtoStatementID(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      *(_DWORD *)v24 = *(_DWORD *)v25;
      v37 = *(_QWORD *)(v25 + 16);
      *(_QWORD *)(v24 + 8) = *(_QWORD *)(v25 + 8);
      *(_QWORD *)(v24 + 16) = v37;
      swift_bridgeObjectRelease();
      v38 = *(int *)(v26 + 24);
      v39 = v24 + v38;
      v40 = v25 + v38;
      v41 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v39, v40, v41);
      return a1;
    }
    sub_240388AE4(v24, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_14;
  }
  if (v30)
  {
LABEL_14:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v24, (const void *)v25, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    return a1;
  }
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_OWORD *)(v24 + 8) = *(_OWORD *)(v25 + 8);
  v31 = *(int *)(v26 + 24);
  v32 = v24 + v31;
  v33 = v25 + v31;
  v34 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_24042A498()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24042A4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 76);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_24042A54C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24042A558(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 76);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_24042A5FC()
{
  unint64_t v0;
  unint64_t v1;

  sub_2403C8BE4(319, &qword_256FFCBD8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t DataExtractor.init(ingestConfig:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;

  v7 = type metadata accessor for IngestConfig(0, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a5, a1, v7);
}

id DataExtractor.getMonotonicTs(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  uint64_t v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2408E5C6C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for IngestConfig(0, *(_QWORD *)(a3 + 16), v12, v13);
  sub_24042A8E0(v3 + *(int *)(v14 + 28), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v7, &qword_254355CD0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v16 = sub_24042B3AC();
    if (v17 >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return 0;
    }
    else
    {
      v18 = v16;
      v19 = v17;
      v20 = (void *)objc_opt_self();
      v21 = (void *)sub_2408E554C();
      v15 = objc_msgSend(v20, sel_eventWithData_dataVersion_, v21, 0);
      sub_2403C2424(v18, v19);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return v15;
}

uint64_t sub_24042A8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

char *DataExtractor.generateRequestLink(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  objc_class *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v50;
  id v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v5 = type metadata accessor for RequestLinkConfig();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for IngestConfig(0, *(_QWORD *)(a3 + 16), v9, v10) + 48));
  v12 = *(char **)(v11 + 16);
  if (!v12)
    return v12;
  v13 = v11 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v14 = *(_QWORD *)(v6 + 72);
  v55 = v11;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_2404220B8(v13, (uint64_t)v8);
    v15 = sub_24042B3AC();
    if (v16 >> 60 != 15)
      break;
    sub_2404220FC((uint64_t)v8);
LABEL_4:
    v13 += v14;
    if (!--v12)
    {
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  v17 = v16;
  v18 = v15;
  v19 = sub_24042B3AC();
  if (v20 >> 60 == 15)
  {
    sub_2404220FC((uint64_t)v8);
    sub_2403C2424(v18, v17);
    goto LABEL_4;
  }
  v21 = v19;
  v22 = v20;
  swift_bridgeObjectRelease();
  v23 = objc_allocWithZone(MEMORY[0x24BE95C78]);
  sub_240360070(v18, v17);
  v24 = (void *)sub_2408E554C();
  v25 = objc_msgSend(v23, sel_initWithBytesAsData_, v24);
  sub_2403C2424(v18, v17);

  v26 = objc_allocWithZone(MEMORY[0x24BE95C78]);
  sub_240360070(v21, v22);
  v27 = (void *)sub_2408E554C();
  v28 = objc_msgSend(v26, sel_initWithBytesAsData_, v27);
  v54 = v21;
  v55 = v22;
  sub_2403C2424(v21, v22);

  v29 = (objc_class *)sub_2408E56FC();
  objc_allocWithZone(v29);
  v30 = v25;
  v31 = sub_2408E56F0();
  if (v31)
  {
    v32 = (void *)v31;
    objc_allocWithZone(v29);
    v33 = v28;
    v34 = (void *)sub_2408E56F0();
    if (v34)
    {
      v35 = v34;
      v12 = (char *)sub_24042B6F8(v8, v32, v34);

      sub_2403C2424(v54, v55);
      sub_2403C2424(v18, v17);
      sub_2404220FC((uint64_t)v8);
      return v12;
    }

  }
  v53 = v28;
  if (qword_256FF8FE0 != -1)
    swift_once();
  v36 = sub_2408E5C48();
  __swift_project_value_buffer(v36, (uint64_t)qword_256FFCC68);
  v37 = v18;
  sub_2403C2410(v18, v17);
  v39 = v54;
  v38 = v55;
  sub_2403C2410(v54, v55);
  sub_2403C2410(v37, v17);
  sub_2403C2410(v39, v38);
  v40 = sub_2408E5C3C();
  v41 = sub_2408E5EB8();
  v42 = v41;
  if (os_log_type_enabled(v40, v41))
  {
    v43 = swift_slowAlloc();
    v52 = swift_slowAlloc();
    v57 = v52;
    *(_DWORD *)v43 = 136315394;
    HIDWORD(v50) = v42;
    v44 = sub_2408E5558();
    v56 = sub_2403B3ED0(v44, v45, &v57);
    v51 = v30;
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    sub_2403C2424(v37, v17);
    sub_2403C2424(v37, v17);
    *(_WORD *)(v43 + 12) = 2080;
    v46 = sub_2408E5558();
    v56 = sub_2403B3ED0(v46, v47, &v57);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    sub_2403C2424(v39, v38);
    sub_2403C2424(v39, v38);
    _os_log_impl(&dword_240347000, v40, BYTE4(v50), "Failed to parse request link info for event\ntraceId: %s\ncompId: %s", (uint8_t *)v43, 0x16u);
    v48 = v52;
    swift_arrayDestroy();
    MEMORY[0x242684668](v48, -1, -1);
    MEMORY[0x242684668](v43, -1, -1);

  }
  else
  {

    sub_2403C2424(v39, v38);
    sub_2403C2424(v39, v38);
    sub_2403C2424(v37, v17);
    sub_2403C2424(v37, v17);

  }
  sub_2403C2424(v39, v38);
  sub_2403C2424(v37, v17);
  sub_2404220FC((uint64_t)v8);
  return 0;
}

uint64_t DataExtractor.getEventData(data:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2408E5C6C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for IngestConfig(0, *(_QWORD *)(a3 + 16), v14, v15);
  sub_24042A8E0(v3 + *(int *)(v16 + 32), (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2403A97FC((uint64_t)v9, &qword_254355CD0);
    sub_240360070(a1, a2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    a1 = sub_24042B3AC();
    a2 = v17;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (a2 >> 60 == 15)
      return a1;
  }
  sub_240360070(a1, a2);
  v18 = v3 + *(int *)(v16 + 40);
  v19 = *(unsigned __int8 *)(v18 + 8);
  if (v19 == 255)
  {
    sub_2403C2424(a1, a2);
  }
  else
  {
    v20 = *(_QWORD *)v18;
    swift_bridgeObjectRetain();
    v23 = v20;
    v24 = v19;
    v21 = sub_24042C888((uint64_t)&v23, a1, a2);
    sub_2403C2424(a1, a2);
    sub_24042BAC8(v20, v19);
    sub_240363D58(a1, a2);
    return v21;
  }
  return a1;
}

uint64_t sub_24042B050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2408E5C48();
  __swift_allocate_value_buffer(v0, qword_256FFCC68);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_256FFCC68);
  if (qword_2543560E0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254356410);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_24042B0E0()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_source);
  if (v2)
  {
    v3 = v2;
    sub_24042B1E4();

  }
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  v4 = objc_msgSend(v1, sel_target);
  if (v4)
  {
    v5 = v4;
    sub_24042B1E4();

  }
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24042B1E4()
{
  void *v0;
  unsigned int v1;
  uint64_t v2;
  __CFString *v3;
  __CFString *v4;
  __CFString *v5;
  __CFString *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v1 = objc_msgSend(v0, sel_component);
  if (v1 > 0x36)
  {
    v3 = CFSTR("COMPONENTNAME_UNKNOWN");
    v4 = CFSTR("COMPONENTNAME_UNKNOWN");
  }
  else
  {
    v2 = (int)v1;
    v3 = off_2510A90A8[v2];
    v4 = off_2510A9260[v2];
  }
  v5 = v3;
  v6 = v4;
  sub_2408E5D08();

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(v0, sel_uuid);
  if (v10)
  {
    v11 = v10;
    sub_2408E5E88();

    v12 = sub_2408E566C();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12) == 1)
    {
      sub_2403A97FC((uint64_t)v9, &qword_256FFA660);
    }
    else
    {
      sub_2408E563C();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
    }
  }
  v15[0] = 40;
  v15[1] = 0xE100000000000000;
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  return v15[0];
}

uint64_t sub_24042B3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  int v12;
  _QWORD v14[3];

  v0 = sub_2408E5C6C();
  v14[2] = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_2408E5C84();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)v14 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v14 - v9;
  sub_240422180(0, (unint64_t *)&qword_256FFCA70);
  sub_2408E5E7C();
  v11 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
  v11(v10, v8, v1);
  v11(v5, v10, v1);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v5, v1);
  if (v12 == *MEMORY[0x24BE2BD40] || v12 == *MEMORY[0x24BE2BD48])
  {
    (*(void (**)(char *, uint64_t))(v2 + 96))(v5, v1);
    return *(_QWORD *)v5;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    return 0;
  }
}

void *sub_24042B6F8(_BYTE *a1, void *a2, void *a3)
{
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;

  if (*a1)
    v5 = a3;
  else
    v5 = a2;
  if (*a1)
    v6 = a2;
  else
    v6 = a3;
  sub_240422180(0, &qword_256FFCA80);
  v7 = a2;
  v8 = a3;
  v9 = v6;
  v10 = v5;
  v11 = (void *)sub_2408E5EDC();
  v12 = v11;
  if (v11)
  {
    v13 = v11;

    if (qword_256FF8FE0 != -1)
      swift_once();
    v14 = sub_2408E5C48();
    __swift_project_value_buffer(v14, (uint64_t)qword_256FFCC68);
    v15 = v13;
    v16 = sub_2408E5C3C();
    v17 = sub_2408E5EA0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v34 = v19;
      *(_DWORD *)v18 = 136446210;
      v20 = sub_24042B0E0();
      sub_2403B3ED0(v20, v21, &v34);
      sub_2408E5F3C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v16, v17, "RequestLink: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242684668](v19, -1, -1);
      MEMORY[0x242684668](v18, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_256FF8FE0 != -1)
      swift_once();
    v22 = sub_2408E5C48();
    __swift_project_value_buffer(v22, (uint64_t)qword_256FFCC68);
    v23 = v9;
    v24 = v10;
    v25 = sub_2408E5C3C();
    v26 = sub_2408E5EB8();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v34 = v28;
      *(_DWORD *)v27 = 136446466;
      sub_2408E56E4();
      v29 = sub_2408E5EE8();
      sub_2403B3ED0(v29, v30, &v34);
      sub_2408E5F3C();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2082;
      sub_2408E56E4();
      v31 = sub_2408E5EE8();
      sub_2403B3ED0(v31, v32, &v34);
      sub_2408E5F3C();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v25, v26, "Can't build request link %{public}s -> %{public}s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242684668](v28, -1, -1);
      MEMORY[0x242684668](v27, -1, -1);

    }
    else
    {

    }
  }
  return v12;
}

uint64_t sub_24042BAC8(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 != -1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_24042BADC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24042BAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for IngestConfig(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_24042BB50(char *a1, char **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  int v7;
  int *v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;

  v6 = type metadata accessor for IngestConfig(0, *(_QWORD *)(a3 + 16), a3, a4);
  v7 = *(_DWORD *)(*(_QWORD *)(v6 - 8) + 80);
  if ((v7 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v19[(v7 + 16) & ~(unint64_t)v7];
    swift_retain();
  }
  else
  {
    v8 = (int *)v6;
    v9 = *a2;
    v10 = (uint64_t)a2[1];
    v11 = *((_BYTE *)a2 + 16);
    sub_240420930(*a2, v10, v11);
    *(_QWORD *)a1 = v9;
    *((_QWORD *)a1 + 1) = v10;
    a1[16] = v11;
    v12 = v8[7];
    v13 = &a1[v12];
    v14 = (char *)a2 + v12;
    v15 = sub_2408E5C6C();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = v8[8];
    v21 = &a1[v20];
    v22 = (char *)a2 + v20;
    if (v17((char *)a2 + v20, 1, v15))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v21, v22, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
    }
    *(_QWORD *)&a1[v8[9]] = *(char **)((char *)a2 + v8[9]);
    v24 = v8[10];
    v25 = &a1[v24];
    v26 = (uint64_t)a2 + v24;
    v27 = *((unsigned __int8 *)a2 + v24 + 8);
    swift_bridgeObjectRetain();
    *(_QWORD *)v25 = *(_QWORD *)v26;
    if (v27 == 255)
    {
      v25[8] = *(_BYTE *)(v26 + 8);
    }
    else
    {
      v25[8] = v27;
      swift_bridgeObjectRetain();
    }
    v28 = v8[11];
    v29 = &a1[v28];
    v30 = (char **)((char *)a2 + v28);
    if (*v30)
    {
      v31 = v30[1];
      *(_QWORD *)v29 = *v30;
      *((_QWORD *)v29 + 1) = v31;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
    }
    *(_QWORD *)&a1[v8[12]] = *(char **)((char *)a2 + v8[12]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24042BD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  sub_240420B24(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  v6 = (int *)type metadata accessor for IngestConfig(0, *(_QWORD *)(a2 + 16), v4, v5);
  v7 = a1 + v6[7];
  v8 = sub_2408E5C6C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = a1 + v6[8];
  if (!v10(v11, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + v6[10] + 8) != 255)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + v6[11]))
    swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24042BE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_240420930(*(void **)a2, v7, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v11 = (int *)type metadata accessor for IngestConfig(0, *(_QWORD *)(a3 + 16), v9, v10);
  v12 = v11[7];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_2408E5C6C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v19 = v11[8];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  if (v17((const void *)(a2 + v19), 1, v15))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v20, v21, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
  }
  *(_QWORD *)(a1 + v11[9]) = *(_QWORD *)(a2 + v11[9]);
  v23 = v11[10];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(unsigned __int8 *)(a2 + v23 + 8);
  swift_bridgeObjectRetain();
  *(_QWORD *)v24 = *(_QWORD *)v25;
  if (v26 == 255)
  {
    *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  }
  else
  {
    *(_BYTE *)(v24 + 8) = v26;
    swift_bridgeObjectRetain();
  }
  v27 = v11[11];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  if (*v29)
  {
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
  }
  *(_QWORD *)(a1 + v11[12]) = *(_QWORD *)(a2 + v11[12]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24042C054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int v33;
  int v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 16);
  sub_240420930(*(void **)a2, v7, v8);
  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_240420B24(v9, v10, v11);
  v14 = (int *)type metadata accessor for IngestConfig(0, *(_QWORD *)(a3 + 16), v12, v13);
  v15 = v14[7];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = sub_2408E5C6C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  v24 = v14[8];
  v25 = (void *)(a1 + v24);
  v26 = (void *)(a2 + v24);
  v27 = v20((void *)(a1 + v24), 1, v18);
  v28 = v20(v26, 1, v18);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v25, v26, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v25, v18);
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v25, v26, v18);
LABEL_13:
  *(_QWORD *)(a1 + v14[9]) = *(_QWORD *)(a2 + v14[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v14[10];
  v31 = a1 + v30;
  v32 = (uint64_t *)(a2 + v30);
  v33 = *(unsigned __int8 *)(a1 + v30 + 8);
  v34 = *(unsigned __int8 *)(a2 + v30 + 8);
  if (v33 == 255)
  {
    if (v34 == 255)
    {
      v36 = *v32;
      *(_BYTE *)(v31 + 8) = *((_BYTE *)v32 + 8);
      *(_QWORD *)v31 = v36;
    }
    else
    {
      *(_QWORD *)v31 = *v32;
      *(_BYTE *)(v31 + 8) = v34;
      swift_bridgeObjectRetain();
    }
  }
  else if (v34 == 255)
  {
    sub_240421518(v31);
    v35 = *((_BYTE *)v32 + 8);
    *(_QWORD *)v31 = *v32;
    *(_BYTE *)(v31 + 8) = v35;
  }
  else
  {
    *(_QWORD *)v31 = *v32;
    *(_BYTE *)(v31 + 8) = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v37 = v14[11];
  v38 = (_QWORD *)(a1 + v37);
  v39 = a2 + v37;
  v40 = *(_QWORD *)(a1 + v37);
  v41 = *(_QWORD *)(a2 + v37);
  if (!v40)
  {
    if (v41)
    {
      v43 = *(_QWORD *)(v39 + 8);
      *v38 = v41;
      v38[1] = v43;
      swift_retain();
      goto LABEL_29;
    }
LABEL_28:
    *(_OWORD *)v38 = *(_OWORD *)v39;
    goto LABEL_29;
  }
  if (!v41)
  {
    swift_release();
    goto LABEL_28;
  }
  v42 = *(_QWORD *)(v39 + 8);
  *v38 = v41;
  v38[1] = v42;
  swift_retain();
  swift_release();
LABEL_29:
  *(_QWORD *)(a1 + v14[12]) = *(_QWORD *)(a2 + v14[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24042C374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (int *)type metadata accessor for IngestConfig(0, *(_QWORD *)(a3 + 16), a3, a4);
  v7 = v6[7];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_2408E5C6C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = v6[8];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v18 = v6[10];
  v19 = a1 + v18;
  v20 = a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = v6[11];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  if (*v23)
  {
    v25 = v23[1];
    *v22 = v24;
    v22[1] = v25;
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  *(_QWORD *)(a1 + v6[12]) = *(_QWORD *)(a2 + v6[12]);
  return a1;
}

uint64_t sub_24042C520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_240420B24(v7, v8, v9);
  v12 = (int *)type metadata accessor for IngestConfig(0, *(_QWORD *)(a3 + 16), v10, v11);
  v13 = v12[7];
  v14 = (void *)(a1 + v13);
  v15 = (void *)(a2 + v13);
  v16 = sub_2408E5C6C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v14, v15, v16);
LABEL_7:
  v22 = v12[8];
  v23 = (void *)(a1 + v22);
  v24 = (void *)(a2 + v22);
  v25 = v18((void *)(a1 + v22), 1, v16);
  v26 = v18(v24, 1, v16);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 32))(v23, v24, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v23, v16);
LABEL_12:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 40))(v23, v24, v16);
LABEL_13:
  *(_QWORD *)(a1 + v12[9]) = *(_QWORD *)(a2 + v12[9]);
  swift_bridgeObjectRelease();
  v28 = v12[10];
  v29 = a1 + v28;
  v30 = a2 + v28;
  if (*(unsigned __int8 *)(a1 + v28 + 8) != 255)
  {
    v31 = *(unsigned __int8 *)(v30 + 8);
    if (v31 != 255)
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      *(_BYTE *)(v29 + 8) = v31;
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    sub_240421518(v29);
  }
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
LABEL_18:
  v32 = v12[11];
  v33 = (_QWORD *)(a1 + v32);
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a1 + v32);
  v36 = *(_QWORD *)(a2 + v32);
  if (!v35)
  {
    if (v36)
    {
      v38 = *(_QWORD *)(v34 + 8);
      *v33 = v36;
      v33[1] = v38;
      goto LABEL_25;
    }
LABEL_24:
    *(_OWORD *)v33 = *(_OWORD *)v34;
    goto LABEL_25;
  }
  if (!v36)
  {
    swift_release();
    goto LABEL_24;
  }
  v37 = *(_QWORD *)(v34 + 8);
  *v33 = v36;
  v33[1] = v37;
  swift_release();
LABEL_25:
  *(_QWORD *)(a1 + v12[12]) = *(_QWORD *)(a2 + v12[12]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24042C7E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24042C7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  v6 = type metadata accessor for IngestConfig(0, *(_QWORD *)(a3 + 16), a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_24042C82C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24042C838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  v6 = type metadata accessor for IngestConfig(0, *(_QWORD *)(a4 + 16), a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a2, v6);
}

uint64_t type metadata accessor for DataExtractor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataExtractor);
}

uint64_t sub_24042C888(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2;
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) != 1)
    {
      sub_240360070(a2, a3);
      return v3;
    }
    v4 = sub_2408E5E58();
  }
  else
  {
    v4 = sub_2408E5E64();
  }
  v5 = v4;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x242684518](a1, v6, a5);
}

void PerfMetricsDefinitions.clientId.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t PerfMetricsDefinitions.dateStamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PerfMetricsDefinitions.dateStamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*PerfMetricsDefinitions.dateStamp.modify())()
{
  return nullsub_1;
}

uint64_t PerfMetricsDefinitions.useCase.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PerfMetricsDefinitions() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for PerfMetricsDefinitions()
{
  uint64_t result;

  result = qword_256FFCD58;
  if (!qword_256FFCD58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PerfMetricsDefinitions.useCase.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for PerfMetricsDefinitions() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*PerfMetricsDefinitions.useCase.modify())()
{
  type metadata accessor for PerfMetricsDefinitions();
  return nullsub_1;
}

uint64_t PerfMetricsDefinitions.completionStatus.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PerfMetricsDefinitions();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t PerfMetricsDefinitions.completionStatus.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for PerfMetricsDefinitions();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*PerfMetricsDefinitions.completionStatus.modify())()
{
  type metadata accessor for PerfMetricsDefinitions();
  return nullsub_1;
}

uint64_t PerfMetricsDefinitions.planGenerationLatencyNanoSec.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PerfMetricsDefinitions() + 28));
}

uint64_t PerfMetricsDefinitions.planGenerationLatencyNanoSec.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PerfMetricsDefinitions();
  *(_QWORD *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*PerfMetricsDefinitions.planGenerationLatencyNanoSec.modify())()
{
  type metadata accessor for PerfMetricsDefinitions();
  return nullsub_1;
}

uint64_t PerfMetricsDefinitions.actionGenerationLatencyNanoSec.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PerfMetricsDefinitions() + 32));
}

uint64_t PerfMetricsDefinitions.actionGenerationLatencyNanoSec.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PerfMetricsDefinitions();
  *(_QWORD *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*PerfMetricsDefinitions.actionGenerationLatencyNanoSec.modify())()
{
  type metadata accessor for PerfMetricsDefinitions();
  return nullsub_1;
}

uint64_t PerfMetricsDefinitions.executionLatencyNanoSec.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PerfMetricsDefinitions() + 36));
}

uint64_t PerfMetricsDefinitions.executionLatencyNanoSec.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PerfMetricsDefinitions();
  *(_QWORD *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*PerfMetricsDefinitions.executionLatencyNanoSec.modify())()
{
  type metadata accessor for PerfMetricsDefinitions();
  return nullsub_1;
}

void sub_24042CE30(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t _s23LighthouseDataProcessor11SessionViewV5start10Foundation4DateVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _s23LighthouseDataProcessor11SessionViewV5start10Foundation4DateVvs_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*sub_24042CEAC())()
{
  return nullsub_1;
}

_QWORD *initializeBufferWithCopyOfBuffer for PerfMetricsDefinitions(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2408E5624();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v13 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PerfMetricsDefinitions(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PerfMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PerfMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

