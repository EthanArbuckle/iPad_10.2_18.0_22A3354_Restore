uint64_t sub_240843860(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 52) + 8) & 1) == 0)
    return sub_2408E5A14();
  return result;
}

uint64_t sub_2408438D4(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 56) + 8) & 1) == 0)
    return sub_2408E5A14();
  return result;
}

uint64_t sub_240843948(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 60) + 8) & 1) == 0)
    return sub_2408E5A14();
  return result;
}

uint64_t sub_2408439BC(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 64) + 8) & 1) == 0)
    return sub_2408E5A14();
  return result;
}

uint64_t sub_240843A30(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 68) + 8) & 1) == 0)
    return sub_2408E5A14();
  return result;
}

uint64_t sub_240843AA4(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 72) + 8) & 1) == 0)
    return sub_2408E5A14();
  return result;
}

uint64_t sub_240843B18(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 76) + 8) & 1) == 0)
    return sub_2408E5A14();
  return result;
}

uint64_t ToolKitProtoTypedValue.PrimitiveValue.DateComponents.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents, &qword_257013D60, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
}

uint64_t sub_240843BAC(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9A88, &qword_257012C58);
}

uint64_t sub_240843BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 80);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_240843C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 80);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_240843C4C())()
{
  return nullsub_1;
}

uint64_t sub_240843C60()
{
  return ToolKitProtoTypedValue.PrimitiveValue.DateComponents.decodeMessage<A>(decoder:)();
}

uint64_t sub_240843C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.PrimitiveValue.DateComponents.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240843C88()
{
  sub_2404FA028(&qword_257015100, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
  return sub_2408E5828();
}

uint64_t sub_240843CD8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9A90, (uint64_t)qword_257012C68, a1);
}

uint64_t sub_240843CF4()
{
  sub_2404FA028(&qword_257014388, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
  return sub_2408E599C();
}

uint64_t sub_240843D34()
{
  sub_2404FA028(&qword_257014388, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
  return sub_2408E59A8();
}

uint64_t sub_240843D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012C80);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012C80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_2408E8FC0;
  v5 = v40 + v4;
  v6 = v40 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v40 + v4) = 0;
  *(_QWORD *)v6 = "UNSPECIFIED";
  *(_QWORD *)(v6 + 8) = 11;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "GREGORIAN";
  *(_QWORD *)(v10 + 8) = 9;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 2;
  *(_QWORD *)v12 = "BUDDHIST";
  *((_QWORD *)v12 + 1) = 8;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "CHINESE";
  *((_QWORD *)v14 + 1) = 7;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "COPTIC";
  *((_QWORD *)v16 + 1) = 6;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "ETHIOPIC_AMETE_MIHRET";
  *((_QWORD *)v18 + 1) = 21;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "ETHIOPIC_AMETE_ALEM";
  *((_QWORD *)v20 + 1) = 19;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "HEBREW";
  *((_QWORD *)v22 + 1) = 6;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 8;
  *(_QWORD *)v23 = "ISO8601";
  *(_QWORD *)(v23 + 8) = 7;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v5 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "INDIAN";
  *((_QWORD *)v25 + 1) = 6;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v5 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "ISLAMIC";
  *((_QWORD *)v27 + 1) = 7;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v5 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "ISLAMIC_CIVIL";
  *((_QWORD *)v29 + 1) = 13;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v5 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "JAPANESE";
  *((_QWORD *)v31 + 1) = 8;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v5 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "PERSIAN";
  *((_QWORD *)v33 + 1) = 7;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v5 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "REPUBLIC_OF_CHINA";
  *((_QWORD *)v35 + 1) = 17;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v5 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "ISLAMIC_TABULAR";
  *((_QWORD *)v37 + 1) = 15;
  v37[16] = 2;
  v9();
  v38 = v5 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 16;
  *(_QWORD *)v38 = "ISLAMIC_UMM_AL_QURA";
  *(_QWORD *)(v38 + 8) = 19;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypedValue.PrimitiveValue.DateComponents.CalendarIdentifier._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9A98, (uint64_t)qword_257012C80, a1);
}

uint64_t sub_24084420C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9A98, (uint64_t)qword_257012C80, a1);
}

uint64_t sub_24084422C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9A88 != -1)
    swift_once();
  v1 = qword_257012C58;
  v2 = unk_257012C60;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257012C98 = v1;
  unk_257012CA0 = v2;
  return result;
}

uint64_t static ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9AA0, &qword_257012C98);
}

uint64_t sub_2408442D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012CA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012CA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "identifier";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "timeZoneIdentifier";
  *(_QWORD *)(v11 + 8) = 18;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "localeIdentifier";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "firstWeekday";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "minimumDaysInFirstWeek";
  *(_QWORD *)(v16 + 8) = 22;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9AA8, (uint64_t)qword_257012CA8, a1);
}

uint64_t ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2408294B4();
          v4 = v3;
          sub_2408E58A0();
          goto LABEL_5;
        case 2:
          v4 = v3;
          sub_2408E593C();
          goto LABEL_5;
        case 3:
          v4 = v3;
          sub_2408E5930();
          goto LABEL_5;
        case 4:
        case 5:
          v4 = v3;
          sub_2408E5900();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  if (!*(_BYTE *)v0 || (sub_2408294B4(), result = sub_2408E59E4(), !v1))
  {
    result = *(_QWORD *)(v0 + 8);
    v3 = *(_QWORD *)(v0 + 16);
    v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v4 = result & 0xFFFFFFFFFFFFLL;
    if (!v4 || (result = sub_2408E5A38(), !v1))
    {
      if (*(_QWORD *)(v0 + 48))
        result = sub_2408E5A38();
      if (!v1)
      {
        if (*(_QWORD *)(v0 + 24))
          sub_2408E5A14();
        if (*(_QWORD *)(v0 + 32))
          sub_2408E5A14();
        type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar, &qword_257013D68, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
}

uint64_t sub_24084479C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_2408447D8(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9AA0, &qword_257012C98);
}

uint64_t sub_2408447F8()
{
  return ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar.decodeMessage<A>(decoder:)();
}

uint64_t sub_24084480C()
{
  return ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar.traverse<A>(visitor:)();
}

uint64_t sub_240844820()
{
  sub_2404FA028(&qword_2570150F8, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
  return sub_2408E5828();
}

uint64_t sub_240844870@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9AA8, (uint64_t)qword_257012CA8, a1);
}

uint64_t sub_24084488C()
{
  sub_2404FA028(&qword_2570143B0, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
  return sub_2408E599C();
}

uint64_t sub_2408448CC()
{
  sub_2404FA028(&qword_2570143B0, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
  return sub_2408E59A8();
}

uint64_t sub_240844920()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012CC0 = 0xD000000000000012;
  *(_QWORD *)algn_257012CC8 = 0x8000000240929A60;
  return result;
}

uint64_t static ToolKitProtoTypedValue.EnumerationValue.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9AB0, &qword_257012CC0);
}

uint64_t sub_2408449B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012CD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012CD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "type";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "caseValue";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "displayRepresentation";
  *(_QWORD *)(v12 + 8) = 21;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypedValue.EnumerationValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9AB8, (uint64_t)qword_257012CD0, a1);
}

uint64_t ToolKitProtoTypedValue.EnumerationValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240846C4C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.EnumerationValue, type metadata accessor for ToolKitProtoTypeIdentifier, &qword_25700C150, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
}

uint64_t ToolKitProtoTypedValue.EnumerationValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240846D8C(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_240844BC0, (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_240844D34, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.EnumerationValue);
}

uint64_t sub_240844BC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoTypedValue.EnumerationValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA7F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA7F8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_240844D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoTypedValue.EnumerationValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFC340);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFC340);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation);
  sub_2404FA028(&qword_257014CB0, type metadata accessor for ToolKitProtoDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation);
}

uint64_t ToolKitProtoTypedValue.EnumerationValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypedValue.EnumerationValue, &qword_257013D70, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EnumerationValue);
}

uint64_t sub_240844EC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_240847180(a1, type metadata accessor for ToolKitProtoTypeIdentifier, a2);
}

uint64_t sub_240844ED0(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9AB0, &qword_257012CC0);
}

uint64_t sub_240844EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.EnumerationValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240844F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.EnumerationValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240844F18()
{
  sub_2404FA028(&qword_2570150F0, type metadata accessor for ToolKitProtoTypedValue.EnumerationValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EnumerationValue);
  return sub_2408E5828();
}

uint64_t sub_240844F68@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9AB8, (uint64_t)qword_257012CD0, a1);
}

uint64_t sub_240844F84()
{
  sub_2404FA028(&qword_2570143C8, type metadata accessor for ToolKitProtoTypedValue.EnumerationValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EnumerationValue);
  return sub_2408E599C();
}

uint64_t sub_240844FC4()
{
  sub_2404FA028(&qword_2570143C8, type metadata accessor for ToolKitProtoTypedValue.EnumerationValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EnumerationValue);
  return sub_2408E59A8();
}

uint64_t sub_240845018()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012CE8 = 0xD000000000000012;
  unk_257012CF0 = 0x8000000240929A60;
  return result;
}

uint64_t static ToolKitProtoTypedValue.EntityValue.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9AC0, &qword_257012CE8);
}

uint64_t sub_2408450A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012CF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012CF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "type";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "identifier";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "properties";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "displayRepresentation";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "hydratedAppEntity";
  *(_QWORD *)(v16 + 8) = 17;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypedValue.EntityValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9AC8, (uint64_t)qword_257012CF8, a1);
}

uint64_t ToolKitProtoTypedValue.EntityValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.EntityValue, type metadata accessor for ToolKitProtoTypeIdentifier, &qword_25700C150, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_2408E593C();
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_24084544C();
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.EntityValue, type metadata accessor for ToolKitProtoDisplayRepresentation, &qword_257014CB0, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
          goto LABEL_5;
        case 5:
          type metadata accessor for ToolKitProtoTypedValue.EntityValue(0);
          v12 = v11;
          sub_2408E58AC();
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24084544C()
{
  sub_2408E5768();
  type metadata accessor for ToolKitProtoTypedValue(0);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7F0, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  return sub_2408E5840();
}

uint64_t ToolKitProtoTypedValue.EntityValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;

  result = sub_2408456C8((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    v9 = v3[1];
    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = *v3 & 0xFFFFFFFFFFFFLL;
    if (v10)
      sub_2408E5A38();
    if (*(_QWORD *)(v3[2] + 16))
    {
      sub_2408E5768();
      type metadata accessor for ToolKitProtoTypedValue(0);
      sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      sub_2404FA028(&qword_256FFE7F0, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      sub_2408E59B4();
    }
    sub_24084583C((uint64_t)v3, a1, a2, a3);
    sub_2408459B0((uint64_t)v3);
    type metadata accessor for ToolKitProtoTypedValue.EntityValue(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2408456C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoTypedValue.EntityValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA7F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA7F8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_24084583C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoTypedValue.EntityValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFC340);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFC340);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation);
  sub_2404FA028(&qword_257014CB0, type metadata accessor for ToolKitProtoDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation);
}

uint64_t sub_2408459B0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for ToolKitProtoTypedValue.EntityValue(0);
  v3 = a1 + *(int *)(result + 32);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)v3;
    sub_240360070(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    sub_2408E59F0();
    return sub_2403C2424(v5, v4);
  }
  return result;
}

uint64_t ToolKitProtoTypedValue.EntityValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypedValue.EntityValue, &qword_257013D78, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityValue);
}

unint64_t sub_240845A68@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t result;

  v4 = (char *)a2 + a1[6];
  v5 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + a1[7];
  v7 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_OWORD *)((char *)a2 + a1[8]) = xmmword_2408EA6D0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  result = sub_2403A8C1C(MEMORY[0x24BEE4AF8]);
  a2[2] = result;
  return result;
}

uint64_t sub_240845B18(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9AC0, &qword_257012CE8);
}

uint64_t sub_240845B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.EntityValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240845B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.EntityValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240845B60()
{
  sub_2404FA028(&qword_2570150E8, type metadata accessor for ToolKitProtoTypedValue.EntityValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityValue);
  return sub_2408E5828();
}

uint64_t sub_240845BB0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9AC8, (uint64_t)qword_257012CF8, a1);
}

uint64_t sub_240845BCC()
{
  sub_2404FA028(&qword_2570143E0, type metadata accessor for ToolKitProtoTypedValue.EntityValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityValue);
  return sub_2408E599C();
}

uint64_t sub_240845C0C()
{
  sub_2404FA028(&qword_2570143E0, type metadata accessor for ToolKitProtoTypedValue.EntityValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityValue);
  return sub_2408E59A8();
}

uint64_t sub_240845C60()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012D10 = 0xD000000000000012;
  *(_QWORD *)algn_257012D18 = 0x8000000240929A60;
  return result;
}

uint64_t static ToolKitProtoTypedValue.CollectionValue.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9AD0, &qword_257012D10);
}

uint64_t sub_240845CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012D20);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012D20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "type";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "values";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypedValue.CollectionValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9AD8, (uint64_t)qword_257012D20, a1);
}

uint64_t ToolKitProtoTypedValue.CollectionValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24084B2F4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.CollectionValue, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t ToolKitProtoTypedValue.CollectionValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_240845F78(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for ToolKitProtoTypedValue(0);
      sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      sub_2408E5A5C();
    }
    type metadata accessor for ToolKitProtoTypedValue.CollectionValue(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240845F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoTypedValue.CollectionValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA7F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA7F8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeIdentifier);
}

uint64_t ToolKitProtoTypedValue.CollectionValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypedValue.CollectionValue, &qword_257013D80, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.CollectionValue);
}

uint64_t sub_240846108@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_24088E854(a1, type metadata accessor for ToolKitProtoTypeIdentifier, a2);
}

uint64_t sub_240846114(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9AD0, &qword_257012D10);
}

uint64_t sub_240846134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.CollectionValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240846148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.CollectionValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24084615C()
{
  sub_2404FA028(&qword_2570150E0, type metadata accessor for ToolKitProtoTypedValue.CollectionValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.CollectionValue);
  return sub_2408E5828();
}

uint64_t sub_2408461AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9AD8, (uint64_t)qword_257012D20, a1);
}

uint64_t sub_2408461C8()
{
  sub_2404FA028(&qword_2570143F8, type metadata accessor for ToolKitProtoTypedValue.CollectionValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.CollectionValue);
  return sub_2408E599C();
}

uint64_t sub_240846208()
{
  sub_2404FA028(&qword_2570143F8, type metadata accessor for ToolKitProtoTypedValue.CollectionValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.CollectionValue);
  return sub_2408E59A8();
}

uint64_t sub_240846258(_QWORD *a1, char *a2)
{
  return sub_2408A0ABC(a1, a2, (char *)type metadata accessor for ToolKitProtoTypedValue.CollectionValue, sub_2408BAAE8) & 1;
}

uint64_t sub_240846280()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012D38 = 0xD000000000000012;
  unk_257012D40 = 0x8000000240929A60;
  return result;
}

uint64_t static ToolKitProtoTypedValue.QueryValue.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9AE0, &qword_257012D38);
}

uint64_t sub_240846310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012D48);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012D48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "type";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "query";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypedValue.QueryValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9AE8, (uint64_t)qword_257012D48, a1);
}

uint64_t ToolKitProtoTypedValue.QueryValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2408464B0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.QueryValue, type metadata accessor for ToolKitProtoQuery, &qword_2570147B0, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery);
}

uint64_t sub_2408464B0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t result;
  char v18;
  uint64_t v19;

  v13 = v7;
  result = sub_2408E5858();
  if (!v8)
  {
    v19 = a3;
    while ((v18 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v13, a2, a3, a4, a5, a6, a7);
      }
      else if (result == 1)
      {
        type metadata accessor for ToolKitProtoTypeIdentifier(0);
        sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
        a3 = v19;
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoTypedValue.QueryValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240846624(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2408466F4, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.QueryValue);
}

uint64_t sub_240846624(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  result = sub_2404533C8(v5, a1, a2, a3, &qword_256FFA7F8, type metadata accessor for ToolKitProtoTypeIdentifier, &qword_25700C150, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
  if (!v6)
  {
    a4(v5, a1, a2, a3);
    a5(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2408466F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Value;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC3B0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoQuery(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Value = type metadata accessor for ToolKitProtoTypedValue.QueryValue(0);
  sub_2403A9210(a1 + *(int *)(Value + 20), (uint64_t)v7, &qword_256FFC3B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFC3B0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoQuery);
  sub_2404FA028(&qword_2570147B0, type metadata accessor for ToolKitProtoQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoQuery);
}

uint64_t ToolKitProtoTypedValue.QueryValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypedValue.QueryValue, &qword_257013D88, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.QueryValue);
}

uint64_t sub_240846884@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404892F4(a1, type metadata accessor for ToolKitProtoTypeIdentifier, type metadata accessor for ToolKitProtoQuery, a2);
}

uint64_t sub_240846898(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9AE0, &qword_257012D38);
}

uint64_t sub_2408468B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.QueryValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2408468CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.QueryValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2408468E0()
{
  sub_2404FA028(&qword_2570150D8, type metadata accessor for ToolKitProtoTypedValue.QueryValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.QueryValue);
  return sub_2408E5828();
}

uint64_t sub_240846930@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9AE8, (uint64_t)qword_257012D48, a1);
}

uint64_t sub_24084694C()
{
  sub_2404FA028(&qword_257014410, type metadata accessor for ToolKitProtoTypedValue.QueryValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.QueryValue);
  return sub_2408E599C();
}

uint64_t sub_24084698C()
{
  sub_2404FA028(&qword_257014410, type metadata accessor for ToolKitProtoTypedValue.QueryValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.QueryValue);
  return sub_2408E59A8();
}

uint64_t sub_2408469E0()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012D60 = 0xD000000000000012;
  *(_QWORD *)algn_257012D68 = 0x8000000240929A60;
  return result;
}

uint64_t static ToolKitProtoTypedValue.EntityIdentifierValue.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9AF0, &qword_257012D60);
}

uint64_t sub_240846A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012D70);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012D70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "type";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "identifier";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "displayRepresentation";
  *(_QWORD *)(v12 + 8) = 21;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypedValue.EntityIdentifierValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9AF8, (uint64_t)qword_257012D70, a1);
}

uint64_t ToolKitProtoTypedValue.EntityIdentifierValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240846C4C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue, type metadata accessor for ToolKitProtoTypeIdentifier, &qword_25700C150, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_240846C4C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t result;
  char v18;

  v13 = v7;
  result = sub_2408E5858();
  if (!v8)
  {
    while ((v18 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240448BC4(a1, v13, a2, a3, a4, type metadata accessor for ToolKitProtoDisplayRepresentation, &qword_257014CB0, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
          break;
        case 2:
          sub_2408E593C();
          break;
        case 1:
          sub_240448B20(a1, v13, a2, a3, a4, a5, a6, a7);
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoTypedValue.EntityIdentifierValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240846D8C(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_240846E7C, (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_240846FF0, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue);
}

uint64_t sub_240846D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t, uint64_t), void (*a5)(_QWORD *, uint64_t, uint64_t, uint64_t), void (*a6)(_QWORD))
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;

  result = a4(v6, a1, a2, a3);
  if (!v7)
  {
    v14 = v6[1];
    v15 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0)
      v15 = *v6 & 0xFFFFFFFFFFFFLL;
    if (v15)
      sub_2408E5A38();
    a5(v6, a1, a2, a3);
    a6(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240846E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA7F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA7F8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_240846FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFC340);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFC340);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation);
  sub_2404FA028(&qword_257014CB0, type metadata accessor for ToolKitProtoDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation);
}

uint64_t ToolKitProtoTypedValue.EntityIdentifierValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue, &qword_257013D90, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityIdentifierValue);
}

uint64_t sub_240847180@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, _QWORD *a3@<X8>)
{
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;

  v5 = (char *)a3 + *(int *)(a1 + 20);
  v6 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = (char *)a3 + *(int *)(a1 + 24);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_240847214(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9AF0, &qword_257012D60);
}

uint64_t sub_240847234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.EntityIdentifierValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240847248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.EntityIdentifierValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24084725C()
{
  sub_2404FA028(&qword_2570150D0, type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityIdentifierValue);
  return sub_2408E5828();
}

uint64_t sub_2408472AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9AF8, (uint64_t)qword_257012D70, a1);
}

uint64_t sub_2408472C8()
{
  sub_2404FA028(&qword_257014428, type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityIdentifierValue);
  return sub_2408E599C();
}

uint64_t sub_240847308()
{
  sub_2404FA028(&qword_257014428, type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityIdentifierValue);
  return sub_2408E59A8();
}

uint64_t sub_24084735C()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012D88 = 0xD000000000000012;
  unk_257012D90 = 0x8000000240929A60;
  return result;
}

uint64_t static ToolKitProtoTypedValue.DeferredValue.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9B00, &qword_257012D88);
}

uint64_t sub_2408473F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012D98);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012D98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "type";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "expectedTypeInstance";
  *((_QWORD *)v11 + 1) = 20;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "storage";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypedValue.DeferredValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B08, (uint64_t)qword_257012D98, a1);
}

uint64_t ToolKitProtoTypedValue.DeferredValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v12 = v11;
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.DeferredValue, type metadata accessor for ToolKitProtoTypeInstance, &qword_257000CB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for ToolKitProtoTypeIdentifier(0);
        sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
        v12 = v11;
        sub_2408E596C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    v12 = v11;
    sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.DeferredValue, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage, &qword_257014458, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage);
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t ToolKitProtoTypedValue.DeferredValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA7F8, type metadata accessor for ToolKitProtoTypeIdentifier, &qword_25700C150, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
  if (!v4)
  {
    sub_2408477E4(v3, a1, a2, a3);
    sub_240847958(v3, a1, a2, a3);
    type metadata accessor for ToolKitProtoTypedValue.DeferredValue(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2408477E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoTypedValue.DeferredValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA428);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA428);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t sub_240847958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8C0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoTypedValue.DeferredValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_25700C8C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C8C0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage);
  sub_2404FA028(&qword_257014458, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage);
}

uint64_t ToolKitProtoTypedValue.DeferredValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypedValue.DeferredValue, &qword_257013D98, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue);
}

uint64_t sub_240847AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  v5 = a2 + *(int *)(a1 + 20);
  v6 = type metadata accessor for ToolKitProtoTypeInstance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = a2 + *(int *)(a1 + 24);
  v8 = type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t sub_240847B98(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9B00, &qword_257012D88);
}

uint64_t sub_240847BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.DeferredValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240847BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.DeferredValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240847BE0()
{
  sub_2404FA028(&qword_2570150C8, type metadata accessor for ToolKitProtoTypedValue.DeferredValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue);
  return sub_2408E5828();
}

uint64_t sub_240847C30@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B08, (uint64_t)qword_257012D98, a1);
}

uint64_t sub_240847C4C()
{
  sub_2404FA028(&qword_257014440, type metadata accessor for ToolKitProtoTypedValue.DeferredValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue);
  return sub_2408E599C();
}

uint64_t sub_240847C8C()
{
  sub_2404FA028(&qword_257014440, type metadata accessor for ToolKitProtoTypedValue.DeferredValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue);
  return sub_2408E59A8();
}

uint64_t sub_240847CE0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9B00 != -1)
    swift_once();
  v1 = qword_257012D88;
  v2 = unk_257012D90;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257012DB0 = v1;
  *(_QWORD *)algn_257012DB8 = v2;
  return result;
}

uint64_t static ToolKitProtoTypedValue.DeferredValue.Storage.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9B10, &qword_257012DB0);
}

uint64_t sub_240847D88(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257012DC0, 1, (uint64_t)"contentItemProperty", 19);
}

uint64_t static ToolKitProtoTypedValue.DeferredValue.Storage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B18, (uint64_t)qword_257012DC0, a1);
}

uint64_t ToolKitProtoTypedValue.DeferredValue.Storage.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404733C8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240847DDC);
}

uint64_t sub_240847DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v45 = a4;
  v44 = a3;
  v5 = type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v38 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (uint64_t)&v33 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8C8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ToolKitProtoTypedValue.DeferredValue.ToolKitProtoStorageKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v33 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015420);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v33 - v23;
  v39 = v6;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v25((char *)&v33 - v23, 1, 1, v5);
  v36 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C8C8);
  v34 = v14;
  v35 = v13;
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v37 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C8C8);
  }
  else
  {
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.ToolKitProtoStorageKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.ToolKitProtoStorageKind);
    sub_2403A97FC((uint64_t)v24, &qword_257015420);
    v26 = v40;
    sub_2403A91CC((uint64_t)v17, v40, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
    sub_2403A91CC(v26, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
    v25(v24, 0, 1, v5);
  }
  v28 = (uint64_t)v41;
  v27 = v42;
  sub_2404FA028(&qword_257014470, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
  sub_2408E596C();
  if (v27)
    return sub_2403A97FC((uint64_t)v24, &qword_257015420);
  sub_2403A9210((uint64_t)v24, v28, &qword_257015420);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v28, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015420);
    return sub_2403A97FC(v28, &qword_257015420);
  }
  else
  {
    v30 = v28;
    v31 = v38;
    sub_2403A91CC(v30, v38, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
    if (v37 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015420);
    v32 = v36;
    sub_2403A97FC(v36, &qword_25700C8C8);
    sub_2403A91CC(v31, v32, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v35);
  }
}

uint64_t ToolKitProtoTypedValue.DeferredValue.Storage.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240483ED0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2408481D0, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage);
}

uint64_t sub_2408481D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C8C8);
  v8 = type metadata accessor for ToolKitProtoTypedValue.DeferredValue.ToolKitProtoStorageKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v4, &qword_25700C8C8);
  sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
  sub_2404FA028(&qword_257014470, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
}

uint64_t ToolKitProtoTypedValue.DeferredValue.Storage.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage, &qword_257013DA0, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage);
}

uint64_t sub_240848364@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoTypedValue.DeferredValue.ToolKitProtoStorageKind, a1);
}

uint64_t sub_240848370(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9B10, &qword_257012DB0);
}

uint64_t sub_240848390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.DeferredValue.Storage.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2408483A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypedValue.DeferredValue.Storage.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2408483B8()
{
  sub_2404FA028(&qword_2570150C0, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage);
  return sub_2408E5828();
}

uint64_t sub_240848408@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B18, (uint64_t)qword_257012DC0, a1);
}

uint64_t sub_240848424()
{
  sub_2404FA028(&qword_257014458, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage);
  return sub_2408E599C();
}

uint64_t sub_240848464()
{
  sub_2404FA028(&qword_257014458, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage);
  return sub_2408E59A8();
}

uint64_t sub_2408484B8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9B10 != -1)
    swift_once();
  v1 = qword_257012DB0;
  v2 = *(_QWORD *)algn_257012DB8;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257012DD8 = v1;
  unk_257012DE0 = v2;
  return result;
}

uint64_t static ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9B20, &qword_257012DD8);
}

uint64_t sub_240848564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012DE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012DE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "data";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "propertyKey";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B28, (uint64_t)qword_257012DE8, a1);
}

uint64_t ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240887848(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A8], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

void ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage.traverse<A>(visitor:)()
{
  sub_240887914();
}

uint64_t ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage, &qword_257013DA8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
}

uint64_t sub_24084872C(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9B20, &qword_257012DD8);
}

uint64_t sub_24084874C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoPluginModelData.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_240848760()
{
  ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage.traverse<A>(visitor:)();
}

uint64_t sub_240848774()
{
  sub_2404FA028(&qword_2570150B8, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
  return sub_2408E5828();
}

uint64_t sub_2408487C4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B28, (uint64_t)qword_257012DE8, a1);
}

uint64_t sub_2408487E0()
{
  sub_2404FA028(&qword_257014470, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
  return sub_2408E599C();
}

uint64_t sub_240848820()
{
  sub_2404FA028(&qword_257014470, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
  return sub_2408E59A8();
}

uint64_t sub_240848870(uint64_t *a1, uint64_t a2)
{
  return sub_2404D3268(a1, a2, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage) & 1;
}

unint64_t static ToolKitProtoTypeInstance.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_2408488AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012E00);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012E00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "type";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "collection";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "optionalVariant";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "union";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "restricted";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "deferred";
  *((_QWORD *)v19 + 1) = 8;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypeInstance._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B30, (uint64_t)qword_257012E00, a1);
}

uint64_t ToolKitProtoTypeInstance.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240848C28(v5, a1, a2, a3);
          break;
        case 2:
          sub_240848F04((uint64_t *)v5, a1, a2, a3);
          break;
        case 3:
          sub_2408491F4((uint64_t *)v5, a1, a2, a3);
          break;
        case 4:
          sub_2408494E4((uint64_t *)v5, a1, a2, a3);
          break;
        case 5:
          sub_2408497D4((uint64_t *)v5, a1, a2, a3);
          break;
        case 6:
          sub_240849AC4((uint64_t *)v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240848C28(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v26 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v27 = (uint64_t)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - v15;
  v28 = v6;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v29 = *a1 & 0xF000000000000007;
  if (!(v18 >> 61) && v29 != 0xF000000000000007)
  {
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_256FFA7F8);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeIdentifier);
    sub_2404227AC(v18);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v16, type metadata accessor for ToolKitProtoTypeIdentifier);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_256FFA7F8);
  v22 = v27;
  sub_2403A9210((uint64_t)v16, v27, &qword_256FFA7F8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v22, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_256FFA7F8);
    return sub_2403A97FC(v22, &qword_256FFA7F8);
  }
  else
  {
    sub_2403A91CC(v22, (uint64_t)v9, type metadata accessor for ToolKitProtoTypeIdentifier);
    if (v29 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_256FFA7F8);
    v23 = swift_allocBox();
    sub_2403A91CC((uint64_t)v9, v24, type metadata accessor for ToolKitProtoTypeIdentifier);
    v25 = *a1;
    *a1 = v23;
    return sub_2404227AC(v25);
  }
}

uint64_t sub_240848F04(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v6 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v29 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v27 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v27 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18((char *)v27 - v16, 1, 1, v6);
  v19 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && (v19 & 0xE000000000000000) == 0x2000000000000000)
  {
    v27[1] = a2;
    swift_retain();
    sub_2403A97FC((uint64_t)v17, &qword_256FFA428);
    v20 = swift_projectBox();
    sub_2403AE1A4(v20, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404227AC(v19);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeInstance);
    v18(v17, 0, 1, v6);
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  v21 = v30;
  sub_2408E596C();
  if (v21)
    return sub_2403A97FC((uint64_t)v17, &qword_256FFA428);
  sub_2403A9210((uint64_t)v17, (uint64_t)v15, &qword_256FFA428);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_2403A97FC((uint64_t)v17, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v15, &qword_256FFA428);
  }
  else
  {
    v23 = v29;
    sub_2403A91CC((uint64_t)v15, v29, type metadata accessor for ToolKitProtoTypeInstance);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v17, &qword_256FFA428);
    v24 = swift_allocBox();
    sub_2403A91CC(v23, v25, type metadata accessor for ToolKitProtoTypeInstance);
    v26 = *a1;
    *a1 = v24 | 0x2000000000000000;
    return sub_2404227AC(v26);
  }
}

uint64_t sub_2408491F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v6 = type metadata accessor for ToolKitProtoTypeInstance.Optional(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v29 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v27 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153F8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v27 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18((char *)v27 - v16, 1, 1, v6);
  v19 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && (v19 & 0xE000000000000000) == 0x4000000000000000)
  {
    v27[1] = a2;
    swift_retain();
    sub_2403A97FC((uint64_t)v17, &qword_2570153F8);
    v20 = swift_projectBox();
    sub_2403AE1A4(v20, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance.Optional);
    sub_2404227AC(v19);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeInstance.Optional);
    v18(v17, 0, 1, v6);
  }
  sub_2404FA028(&qword_257014498, type metadata accessor for ToolKitProtoTypeInstance.Optional, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Optional);
  v21 = v30;
  sub_2408E596C();
  if (v21)
    return sub_2403A97FC((uint64_t)v17, &qword_2570153F8);
  sub_2403A9210((uint64_t)v17, (uint64_t)v15, &qword_2570153F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_2403A97FC((uint64_t)v17, &qword_2570153F8);
    return sub_2403A97FC((uint64_t)v15, &qword_2570153F8);
  }
  else
  {
    v23 = v29;
    sub_2403A91CC((uint64_t)v15, v29, type metadata accessor for ToolKitProtoTypeInstance.Optional);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v17, &qword_2570153F8);
    v24 = swift_allocBox();
    sub_2403A91CC(v23, v25, type metadata accessor for ToolKitProtoTypeInstance.Optional);
    v26 = *a1;
    *a1 = v24 | 0x4000000000000000;
    return sub_2404227AC(v26);
  }
}

uint64_t sub_2408494E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v6 = type metadata accessor for ToolKitProtoTypeInstance.Union(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v29 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v27 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015400);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v27 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18((char *)v27 - v16, 1, 1, v6);
  v19 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && (v19 & 0xE000000000000000) == 0x6000000000000000)
  {
    v27[1] = a2;
    swift_retain();
    sub_2403A97FC((uint64_t)v17, &qword_257015400);
    v20 = swift_projectBox();
    sub_2403AE1A4(v20, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance.Union);
    sub_2404227AC(v19);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeInstance.Union);
    v18(v17, 0, 1, v6);
  }
  sub_2404FA028(&qword_2570144B0, type metadata accessor for ToolKitProtoTypeInstance.Union, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Union);
  v21 = v30;
  sub_2408E596C();
  if (v21)
    return sub_2403A97FC((uint64_t)v17, &qword_257015400);
  sub_2403A9210((uint64_t)v17, (uint64_t)v15, &qword_257015400);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_2403A97FC((uint64_t)v17, &qword_257015400);
    return sub_2403A97FC((uint64_t)v15, &qword_257015400);
  }
  else
  {
    v23 = v29;
    sub_2403A91CC((uint64_t)v15, v29, type metadata accessor for ToolKitProtoTypeInstance.Union);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v17, &qword_257015400);
    v24 = swift_allocBox();
    sub_2403A91CC(v23, v25, type metadata accessor for ToolKitProtoTypeInstance.Union);
    v26 = *a1;
    *a1 = v24 | 0x6000000000000000;
    return sub_2404227AC(v26);
  }
}

uint64_t sub_2408497D4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v6 = type metadata accessor for ToolKitProtoTypeInstance.Restricted(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v29 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v27 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015408);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v27 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18((char *)v27 - v16, 1, 1, v6);
  v19 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && (v19 & 0xE000000000000000) == 0x8000000000000000)
  {
    v27[1] = a2;
    swift_retain();
    sub_2403A97FC((uint64_t)v17, &qword_257015408);
    v20 = swift_projectBox();
    sub_2403AE1A4(v20, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance.Restricted);
    sub_2404227AC(v19);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeInstance.Restricted);
    v18(v17, 0, 1, v6);
  }
  sub_2404FA028(&qword_2570144C8, type metadata accessor for ToolKitProtoTypeInstance.Restricted, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Restricted);
  v21 = v30;
  sub_2408E596C();
  if (v21)
    return sub_2403A97FC((uint64_t)v17, &qword_257015408);
  sub_2403A9210((uint64_t)v17, (uint64_t)v15, &qword_257015408);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_2403A97FC((uint64_t)v17, &qword_257015408);
    return sub_2403A97FC((uint64_t)v15, &qword_257015408);
  }
  else
  {
    v23 = v29;
    sub_2403A91CC((uint64_t)v15, v29, type metadata accessor for ToolKitProtoTypeInstance.Restricted);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v17, &qword_257015408);
    v24 = swift_allocBox();
    sub_2403A91CC(v23, v25, type metadata accessor for ToolKitProtoTypeInstance.Restricted);
    v26 = *a1;
    *a1 = v24 | 0x8000000000000000;
    return sub_2404227AC(v26);
  }
}

uint64_t sub_240849AC4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v6 = type metadata accessor for ToolKitProtoTypeInstance.Deferred(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v29 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v27 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015410);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v27 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18((char *)v27 - v16, 1, 1, v6);
  v19 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && (v19 & 0xE000000000000000) == 0xA000000000000000)
  {
    v27[1] = a2;
    swift_retain();
    sub_2403A97FC((uint64_t)v17, &qword_257015410);
    v20 = swift_projectBox();
    sub_2403AE1A4(v20, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance.Deferred);
    sub_2404227AC(v19);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeInstance.Deferred);
    v18(v17, 0, 1, v6);
  }
  sub_2404FA028(&qword_2570144E0, type metadata accessor for ToolKitProtoTypeInstance.Deferred, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Deferred);
  v21 = v30;
  sub_2408E596C();
  if (v21)
    return sub_2403A97FC((uint64_t)v17, &qword_257015410);
  sub_2403A9210((uint64_t)v17, (uint64_t)v15, &qword_257015410);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_2403A97FC((uint64_t)v17, &qword_257015410);
    return sub_2403A97FC((uint64_t)v15, &qword_257015410);
  }
  else
  {
    v23 = v29;
    sub_2403A91CC((uint64_t)v15, v29, type metadata accessor for ToolKitProtoTypeInstance.Deferred);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v17, &qword_257015410);
    v24 = swift_allocBox();
    sub_2403A91CC(v23, v25, type metadata accessor for ToolKitProtoTypeInstance.Deferred);
    v26 = *a1;
    *a1 = v24 | 0xA000000000000000;
    return sub_2404227AC(v26);
  }
}

uint64_t ToolKitProtoTypeInstance.traverse<A>(visitor:)()
{
  _QWORD *v0;

  if ((~*v0 & 0xF000000000000007) != 0)
    __asm { BR              X10 }
  type metadata accessor for ToolKitProtoTypeInstance(0);
  return sub_2408E578C();
}

uint64_t sub_240849FAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  BOOL v15;
  uint64_t v16;
  _QWORD v17[2];

  v17[1] = a4;
  v11 = a5(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v17 - v12;
  result = *a1;
  if ((unint64_t)*a1 >> 61)
    v15 = 1;
  else
    v15 = (*a1 & 0xF000000000000007) == 0xF000000000000007;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    v16 = swift_projectBox();
    sub_2403AE1A4(v16, (uint64_t)v13, a5);
    sub_2404FA028(a6, a5, a7);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v13, a5);
  }
  return result;
}

uint64_t sub_24084A0B0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  _QWORD v17[2];

  v17[1] = a4;
  v11 = a5(0);
  result = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - v13;
  if ((~*a1 & 0xF000000000000007) != 0 && (*a1 & 0xE000000000000000) == 0x2000000000000000)
  {
    v16 = swift_projectBox();
    sub_2403AE1A4(v16, (uint64_t)v14, a5);
    sub_2404FA028(a6, a5, a7);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v14, a5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24084A1BC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  _QWORD v17[2];

  v17[1] = a4;
  v11 = a5(0);
  result = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - v13;
  if ((~*a1 & 0xF000000000000007) != 0 && (*a1 & 0xE000000000000000) == 0x4000000000000000)
  {
    v16 = swift_projectBox();
    sub_2403AE1A4(v16, (uint64_t)v14, a5);
    sub_2404FA028(a6, a5, a7);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v14, a5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24084A2C8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  _QWORD v17[2];

  v17[1] = a4;
  v11 = a5(0);
  result = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - v13;
  if ((~*a1 & 0xF000000000000007) != 0 && (*a1 & 0xE000000000000000) == 0x6000000000000000)
  {
    v16 = swift_projectBox();
    sub_2403AE1A4(v16, (uint64_t)v14, a5);
    sub_2404FA028(a6, a5, a7);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v14, a5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24084A3D4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  _QWORD v17[2];

  v17[1] = a4;
  v11 = a5(0);
  result = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - v13;
  if ((~*a1 & 0xF000000000000007) != 0 && (*a1 & 0xE000000000000000) == 0x8000000000000000)
  {
    v16 = swift_projectBox();
    sub_2403AE1A4(v16, (uint64_t)v14, a5);
    sub_2404FA028(a6, a5, a7);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v14, a5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24084A4E0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  _QWORD v17[2];

  v17[1] = a4;
  v11 = a5(0);
  result = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - v13;
  if ((~*a1 & 0xF000000000000007) != 0 && (*a1 & 0xE000000000000000) == 0xA000000000000000)
  {
    v16 = swift_projectBox();
    sub_2403AE1A4(v16, (uint64_t)v14, a5);
    sub_2404FA028(a6, a5, a7);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v14, a5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ToolKitProtoTypeInstance.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypeInstance, &qword_257013DB0, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
}

unint64_t sub_24084A608()
{
  return 0xD000000000000014;
}

uint64_t sub_24084A624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypeInstance.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24084A638()
{
  return ToolKitProtoTypeInstance.traverse<A>(visitor:)();
}

uint64_t sub_24084A64C()
{
  sub_2404FA028(&qword_2570150B0, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  return sub_2408E5828();
}

uint64_t sub_24084A69C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B30, (uint64_t)qword_257012E00, a1);
}

uint64_t sub_24084A6B8()
{
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  return sub_2408E599C();
}

uint64_t sub_24084A6F8()
{
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  return sub_2408E59A8();
}

uint64_t sub_24084A74C()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012E18 = 0xD000000000000014;
  unk_257012E20 = 0x8000000240929A80;
  return result;
}

uint64_t static ToolKitProtoTypeInstance.Optional.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9B38, &qword_257012E18);
}

uint64_t sub_24084A7D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012E28);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012E28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "defaultValue";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypeInstance.Optional._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B40, (uint64_t)qword_257012E28, a1);
}

uint64_t ToolKitProtoTypeInstance.Optional.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypeInstance.Optional, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      }
      else if (result == 1)
      {
        type metadata accessor for ToolKitProtoTypeInstance(0);
        sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoTypeInstance.Optional.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA428, type metadata accessor for ToolKitProtoTypeInstance, &qword_257000CB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  if (!v4)
  {
    sub_24084AB34(v3, a1, a2, a3);
    type metadata accessor for ToolKitProtoTypeInstance.Optional(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24084AB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoTypeInstance.Optional(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t ToolKitProtoTypeInstance.Optional.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypeInstance.Optional, &qword_257013DB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Optional);
}

uint64_t sub_24084ACC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404892F4(a1, type metadata accessor for ToolKitProtoTypeInstance, type metadata accessor for ToolKitProtoTypedValue, a2);
}

uint64_t sub_24084ACD8(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9B38, &qword_257012E18);
}

uint64_t sub_24084ACF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypeInstance.Optional.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24084AD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypeInstance.Optional.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24084AD20()
{
  sub_2404FA028(&qword_2570150A8, type metadata accessor for ToolKitProtoTypeInstance.Optional, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Optional);
  return sub_2408E5828();
}

uint64_t sub_24084AD70@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B40, (uint64_t)qword_257012E28, a1);
}

uint64_t sub_24084AD8C()
{
  sub_2404FA028(&qword_257014498, type metadata accessor for ToolKitProtoTypeInstance.Optional, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Optional);
  return sub_2408E599C();
}

uint64_t sub_24084ADCC()
{
  sub_2404FA028(&qword_257014498, type metadata accessor for ToolKitProtoTypeInstance.Optional, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Optional);
  return sub_2408E59A8();
}

uint64_t sub_24084AE20()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012E40 = 0xD000000000000014;
  *(_QWORD *)algn_257012E48 = 0x8000000240929A80;
  return result;
}

uint64_t static ToolKitProtoTypeInstance.Union.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9B48, &qword_257012E40);
}

uint64_t sub_24084AEA4(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257012E50, 1, (uint64_t)"items", 5);
}

uint64_t static ToolKitProtoTypeInstance.Union._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B50, (uint64_t)qword_257012E50, a1);
}

uint64_t ToolKitProtoTypeInstance.Union.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ToolKitProtoTypeInstance, &qword_257000CB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
}

uint64_t ToolKitProtoTypeInstance.Union.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ToolKitProtoTypeInstance, &qword_257000CB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypeInstance.Union);
}

uint64_t ToolKitProtoTypeInstance.Union.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypeInstance.Union, &qword_257013DC0, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Union);
}

uint64_t sub_24084AF58(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9B48, &qword_257012E40);
}

uint64_t sub_24084AF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypeInstance.Union.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24084AF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypeInstance.Union.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24084AFA0()
{
  sub_2404FA028(&qword_2570150A0, type metadata accessor for ToolKitProtoTypeInstance.Union, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Union);
  return sub_2408E5828();
}

uint64_t sub_24084AFF0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B50, (uint64_t)qword_257012E50, a1);
}

uint64_t sub_24084B00C()
{
  sub_2404FA028(&qword_2570144B0, type metadata accessor for ToolKitProtoTypeInstance.Union, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Union);
  return sub_2408E599C();
}

uint64_t sub_24084B04C()
{
  sub_2404FA028(&qword_2570144B0, type metadata accessor for ToolKitProtoTypeInstance.Union, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Union);
  return sub_2408E59A8();
}

uint64_t sub_24084B09C(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408C0728, type metadata accessor for ToolKitProtoTypeInstance.Union) & 1;
}

uint64_t sub_24084B0C4()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012E68 = 0xD000000000000014;
  unk_257012E70 = 0x8000000240929A80;
  return result;
}

uint64_t static ToolKitProtoTypeInstance.Restricted.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9B58, &qword_257012E68);
}

uint64_t sub_24084B154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012E78);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012E78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "identifier";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "context";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypeInstance.Restricted._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B60, (uint64_t)qword_257012E78, a1);
}

uint64_t ToolKitProtoTypeInstance.Restricted.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24084B2F4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoTypeInstance.Restricted, type metadata accessor for ToolKitProtoRestrictionContext, &qword_257013DC8, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext);
}

uint64_t sub_24084B2F4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t result;
  char v18;

  v13 = v7;
  result = sub_2408E5858();
  if (!v8)
  {
    while ((v18 & 1) == 0)
    {
      if (result == 2)
      {
        a5(0);
        sub_2404FA028(a6, a5, a7);
        sub_2408E5960();
      }
      else if (result == 1)
      {
        sub_240448B20(a1, v13, a2, a3, a4, type metadata accessor for ToolKitProtoTypeIdentifier, &qword_25700C150, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoTypeInstance.Restricted.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_24084B520(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for ToolKitProtoRestrictionContext(0);
      sub_2404FA028(&qword_257013DC8, type metadata accessor for ToolKitProtoRestrictionContext, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext);
      sub_2408E5A5C();
    }
    type metadata accessor for ToolKitProtoTypeInstance.Restricted(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24084B520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoTypeInstance.Restricted(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA7F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA7F8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeIdentifier);
}

uint64_t ToolKitProtoTypeInstance.Restricted.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypeInstance.Restricted, &qword_257013DD0, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Restricted);
}

uint64_t sub_24084B6B0(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9B58, &qword_257012E68);
}

uint64_t sub_24084B6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypeInstance.Restricted.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24084B6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypeInstance.Restricted.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24084B6F8()
{
  sub_2404FA028(&qword_257015098, type metadata accessor for ToolKitProtoTypeInstance.Restricted, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Restricted);
  return sub_2408E5828();
}

uint64_t sub_24084B748@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B60, (uint64_t)qword_257012E78, a1);
}

uint64_t sub_24084B764()
{
  sub_2404FA028(&qword_2570144C8, type metadata accessor for ToolKitProtoTypeInstance.Restricted, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Restricted);
  return sub_2408E599C();
}

uint64_t sub_24084B7A4()
{
  sub_2404FA028(&qword_2570144C8, type metadata accessor for ToolKitProtoTypeInstance.Restricted, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Restricted);
  return sub_2408E59A8();
}

uint64_t sub_24084B7F4(_QWORD *a1, char *a2)
{
  return sub_2408A0ABC(a1, a2, (char *)type metadata accessor for ToolKitProtoTypeInstance.Restricted, sub_2408C0978) & 1;
}

uint64_t sub_24084B81C()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012E90 = 0xD000000000000014;
  *(_QWORD *)algn_257012E98 = 0x8000000240929A80;
  return result;
}

uint64_t static ToolKitProtoTypeInstance.Deferred.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9B68, &qword_257012E90);
}

uint64_t sub_24084B8A8(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257012EA0, 1, (uint64_t)"identifier", 10);
}

uint64_t static ToolKitProtoTypeInstance.Deferred._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B70, (uint64_t)qword_257012EA0, a1);
}

uint64_t ToolKitProtoTypeInstance.Deferred.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240464D60(a1, a2, a3, type metadata accessor for ToolKitProtoTypeInstance, &qword_257000CB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
}

uint64_t ToolKitProtoTypeInstance.Deferred.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA428, type metadata accessor for ToolKitProtoTypeInstance, &qword_257000CB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  if (!v4)
  {
    type metadata accessor for ToolKitProtoTypeInstance.Deferred(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t ToolKitProtoTypeInstance.Deferred.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypeInstance.Deferred, &qword_257013DD8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Deferred);
}

uint64_t sub_24084B9C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoTypeInstance, a1);
}

uint64_t sub_24084B9D4(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9B68, &qword_257012E90);
}

uint64_t sub_24084B9F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypeInstance.Deferred.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24084BA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoTypeInstance.Deferred.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24084BA1C()
{
  sub_2404FA028(&qword_257015090, type metadata accessor for ToolKitProtoTypeInstance.Deferred, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Deferred);
  return sub_2408E5828();
}

uint64_t sub_24084BA6C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B70, (uint64_t)qword_257012EA0, a1);
}

uint64_t sub_24084BA88()
{
  sub_2404FA028(&qword_2570144E0, type metadata accessor for ToolKitProtoTypeInstance.Deferred, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Deferred);
  return sub_2408E599C();
}

uint64_t sub_24084BAC8()
{
  sub_2404FA028(&qword_2570144E0, type metadata accessor for ToolKitProtoTypeInstance.Deferred, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Deferred);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoRestrictionContext.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_24084BB38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012EB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012EB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "inSet";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "representableAs";
  *(_QWORD *)(v11 + 8) = 15;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "personReachableAs";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "dateExpressibleAs";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "textTypedWith";
  *(_QWORD *)(v16 + 8) = 13;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B78, (uint64_t)qword_257012EB8, a1);
}

uint64_t ToolKitProtoRestrictionContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_24084BE68(v5, a1, a2, a3);
          break;
        case 2:
          sub_24084C144((uint64_t *)v5, a1, a2, a3);
          break;
        case 3:
          sub_24084C434();
          break;
        case 4:
          sub_24084C50C();
          break;
        case 5:
          sub_24084C5E4((uint64_t *)v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24084BE68(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for ToolKitProtoRestrictionContext.InSet(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v26 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153E0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v27 = (uint64_t)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - v15;
  v28 = v6;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v29 = *a1 & 0xF000000000000007;
  if (!(v18 >> 61) && v29 != 0xF000000000000007)
  {
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_2570153E0);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v11, type metadata accessor for ToolKitProtoRestrictionContext.InSet);
    sub_2404227AC(v18);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v16, type metadata accessor for ToolKitProtoRestrictionContext.InSet);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_257014528, type metadata accessor for ToolKitProtoRestrictionContext.InSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_2570153E0);
  v22 = v27;
  sub_2403A9210((uint64_t)v16, v27, &qword_2570153E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v22, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_2570153E0);
    return sub_2403A97FC(v22, &qword_2570153E0);
  }
  else
  {
    sub_2403A91CC(v22, (uint64_t)v9, type metadata accessor for ToolKitProtoRestrictionContext.InSet);
    if (v29 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_2570153E0);
    v23 = swift_allocBox();
    sub_2403A91CC((uint64_t)v9, v24, type metadata accessor for ToolKitProtoRestrictionContext.InSet);
    v25 = *a1;
    *a1 = v23;
    return sub_2404227AC(v25);
  }
}

uint64_t sub_24084C144(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v6 = type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v29 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v27 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153E8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v27 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18((char *)v27 - v16, 1, 1, v6);
  v19 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && (v19 & 0xE000000000000000) == 0x2000000000000000)
  {
    v27[1] = a2;
    swift_retain();
    sub_2403A97FC((uint64_t)v17, &qword_2570153E8);
    v20 = swift_projectBox();
    sub_2403AE1A4(v20, (uint64_t)v11, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs);
    sub_2404227AC(v19);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v17, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs);
    v18(v17, 0, 1, v6);
  }
  sub_2404FA028(&qword_2570145A0, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.RepresentableAs);
  v21 = v30;
  sub_2408E596C();
  if (v21)
    return sub_2403A97FC((uint64_t)v17, &qword_2570153E8);
  sub_2403A9210((uint64_t)v17, (uint64_t)v15, &qword_2570153E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_2403A97FC((uint64_t)v17, &qword_2570153E8);
    return sub_2403A97FC((uint64_t)v15, &qword_2570153E8);
  }
  else
  {
    v23 = v29;
    sub_2403A91CC((uint64_t)v15, v29, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v17, &qword_2570153E8);
    v24 = swift_allocBox();
    sub_2403A91CC(v23, v25, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs);
    v26 = *a1;
    *a1 = v24 | 0x2000000000000000;
    return sub_2404227AC(v26);
  }
}

uint64_t sub_24084C434()
{
  sub_240829470();
  return sub_2408E5894();
}

uint64_t sub_24084C50C()
{
  sub_24082942C();
  return sub_2408E5894();
}

uint64_t sub_24084C5E4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v6 = type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v29 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v27 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153F0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v27 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18((char *)v27 - v16, 1, 1, v6);
  v19 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && (v19 & 0xE000000000000000) == 0x8000000000000000)
  {
    v27[1] = a2;
    swift_retain();
    sub_2403A97FC((uint64_t)v17, &qword_2570153F0);
    v20 = swift_projectBox();
    sub_2403AE1A4(v20, (uint64_t)v11, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith);
    sub_2404227AC(v19);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v17, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith);
    v18(v17, 0, 1, v6);
  }
  sub_2404FA028(&qword_2570145B8, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith);
  v21 = v30;
  sub_2408E596C();
  if (v21)
    return sub_2403A97FC((uint64_t)v17, &qword_2570153F0);
  sub_2403A9210((uint64_t)v17, (uint64_t)v15, &qword_2570153F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_2403A97FC((uint64_t)v17, &qword_2570153F0);
    return sub_2403A97FC((uint64_t)v15, &qword_2570153F0);
  }
  else
  {
    v23 = v29;
    sub_2403A91CC((uint64_t)v15, v29, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v17, &qword_2570153F0);
    v24 = swift_allocBox();
    sub_2403A91CC(v23, v25, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith);
    v26 = *a1;
    *a1 = v24 | 0x8000000000000000;
    return sub_2404227AC(v26);
  }
}

uint64_t ToolKitProtoRestrictionContext.traverse<A>(visitor:)()
{
  _QWORD *v0;

  if ((~*v0 & 0xF000000000000007) != 0)
    __asm { BR              X10 }
  type metadata accessor for ToolKitProtoRestrictionContext(0);
  return sub_2408E578C();
}

_QWORD *sub_24084CA5C(_QWORD *result)
{
  if ((~*result & 0xF000000000000007) != 0 && (*result & 0xE000000000000000) == 0x4000000000000000)
  {
    sub_240829470();
    return (_QWORD *)sub_2408E59E4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_24084CAE8(_QWORD *result)
{
  if ((~*result & 0xF000000000000007) != 0 && (*result & 0xE000000000000000) == 0x6000000000000000)
  {
    sub_24082942C();
    return (_QWORD *)sub_2408E59E4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static ToolKitProtoRestrictionContext.== infix(_:_:)(char *a1, char *a2)
{
  return sub_2408A2ED8(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static ToolKitProtoRestrictionContextKind.== infix(_:_:), (void (*)(uint64_t))sub_2408AFAD4, (void (*)(uint64_t))sub_2408AFAD8, type metadata accessor for ToolKitProtoRestrictionContext) & 1;
}

uint64_t ToolKitProtoRestrictionContext.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRestrictionContext, &qword_257013DE0, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext);
}

unint64_t sub_24084CBC8()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_24084CBE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRestrictionContext.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24084CBF8()
{
  return ToolKitProtoRestrictionContext.traverse<A>(visitor:)();
}

uint64_t sub_24084CC0C()
{
  sub_2404FA028(&qword_257015088, type metadata accessor for ToolKitProtoRestrictionContext, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext);
  return sub_2408E5828();
}

uint64_t sub_24084CC5C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B78, (uint64_t)qword_257012EB8, a1);
}

uint64_t sub_24084CC78()
{
  sub_2404FA028(&qword_257013DC8, type metadata accessor for ToolKitProtoRestrictionContext, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext);
  return sub_2408E599C();
}

uint64_t sub_24084CCB8()
{
  sub_2404FA028(&qword_257013DC8, type metadata accessor for ToolKitProtoRestrictionContext, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext);
  return sub_2408E59A8();
}

uint64_t sub_24084CD08(char *a1, char *a2)
{
  return sub_2408A2ED8(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static ToolKitProtoRestrictionContextKind.== infix(_:_:), (void (*)(uint64_t))sub_2408AFAD4, (void (*)(uint64_t))sub_2408AFAD8, type metadata accessor for ToolKitProtoRestrictionContext) & 1;
}

uint64_t sub_24084CD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012ED0);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012ED0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "PersonReachableAs_UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 29;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "PersonReachableAs_CONTACT";
  *(_QWORD *)(v11 + 8) = 25;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "PersonReachableAs_PHONE";
  *((_QWORD *)v13 + 1) = 23;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "PersonReachableAs_EMAIL";
  *((_QWORD *)v15 + 1) = 23;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 4;
  *(_QWORD *)v16 = "PersonReachableAs_EMAILORPHONE";
  *(_QWORD *)(v16 + 8) = 30;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext.PersonReachableAs._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B80, (uint64_t)qword_257012ED0, a1);
}

uint64_t sub_24084CF60@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B80, (uint64_t)qword_257012ED0, a1);
}

uint64_t sub_24084CF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012EE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012EE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "DateExpressibleAs_UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 29;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "DateExpressibleAs_DATE";
  *(_QWORD *)(v11 + 8) = 22;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "DateExpressibleAs_TIME";
  *((_QWORD *)v13 + 1) = 22;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "DateExpressibleAs_DATE_AND_TIME";
  *((_QWORD *)v15 + 1) = 31;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext.DateExpressibleAs._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B88, (uint64_t)qword_257012EE8, a1);
}

uint64_t sub_24084D15C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B88, (uint64_t)qword_257012EE8, a1);
}

uint64_t sub_24084D17C()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012F00 = 0xD00000000000001ALL;
  *(_QWORD *)algn_257012F08 = 0x8000000240929AA0;
  return result;
}

uint64_t static ToolKitProtoRestrictionContext.InSet.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9B90, &qword_257012F00);
}

uint64_t sub_24084D200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012F10);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012F10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "definition";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "templates";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext.InSet._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9B98, (uint64_t)qword_257012F10, a1);
}

uint64_t ToolKitProtoRestrictionContext.InSet.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoRestrictionContext.InSet, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates, &qword_257014250, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
      }
      else if (result == 1)
      {
        type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet(0);
        sub_2404FA028(&qword_257014540, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoRestrictionContext.InSet.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_25700C8D0, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet, &qword_257014540, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet);
  if (!v4)
  {
    sub_24084D55C(v3, a1, a2, a3);
    type metadata accessor for ToolKitProtoRestrictionContext.InSet(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24084D55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoRestrictionContext.InSet(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFBDF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFBDF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
  sub_2404FA028(&qword_257014250, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
}

uint64_t ToolKitProtoRestrictionContext.InSet.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRestrictionContext.InSet, &qword_257013DE8, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet);
}

uint64_t sub_24084D6EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404892F4(a1, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates, a2);
}

uint64_t sub_24084D700(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9B90, &qword_257012F00);
}

uint64_t sub_24084D720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRestrictionContext.InSet.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24084D734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRestrictionContext.InSet.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24084D748()
{
  sub_2404FA028(&qword_257015080, type metadata accessor for ToolKitProtoRestrictionContext.InSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet);
  return sub_2408E5828();
}

uint64_t sub_24084D798@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9B98, (uint64_t)qword_257012F10, a1);
}

uint64_t sub_24084D7B4()
{
  sub_2404FA028(&qword_257014528, type metadata accessor for ToolKitProtoRestrictionContext.InSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet);
  return sub_2408E599C();
}

uint64_t sub_24084D7F4()
{
  sub_2404FA028(&qword_257014528, type metadata accessor for ToolKitProtoRestrictionContext.InSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet);
  return sub_2408E59A8();
}

uint64_t sub_24084D848()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9B90 != -1)
    swift_once();
  v1 = qword_257012F00;
  v2 = *(_QWORD *)algn_257012F08;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257012F28 = v1;
  unk_257012F30 = v2;
  return result;
}

uint64_t static ToolKitProtoRestrictionContext.InSet.ValueSet.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9BA0, &qword_257012F28);
}

uint64_t sub_24084D8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012F38);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012F38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "bundleIdentifier";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "dynamicEnumeration";
  *(_QWORD *)(v11 + 8) = 18;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "contentPropertyPossibleValues";
  *((_QWORD *)v13 + 1) = 29;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "linkQuery";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "standaloneLinkQuery";
  *((_QWORD *)v17 + 1) = 19;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "linkQueryOnParameter";
  *((_QWORD *)v19 + 1) = 20;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext.InSet.ValueSet._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9BA8, (uint64_t)qword_257012F38, a1);
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet(0);
          v12 = v11;
          sub_2408E5930();
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_24084DC8C((uint64_t)v5, a1, a2, a3);
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_24084E0CC((uint64_t)v5, a1, a2, a3);
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_24084E510((uint64_t)v5, a1, a2, a3);
          goto LABEL_5;
        case 5:
          v12 = v11;
          sub_24084E954(a1, v5);
          goto LABEL_5;
        case 6:
          v12 = v11;
          sub_24084EAE0((uint64_t)v5, a1, a2, a3);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24084DC8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153C8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C8D8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C8D8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570153C8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_257014558, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570153C8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570153C8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570153C8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570153C8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570153C8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C8D8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24084E0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153D0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C8D8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C8D8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570153D0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014570, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570153D0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570153D0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570153D0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570153D0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570153D0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C8D8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24084E510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153D8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C8D8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C8D8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570153D8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014588, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570153D8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570153D8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570153D8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570153D8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570153D8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C8D8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24084E954(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = 0;
  result = sub_2408E5930();
  if (v2)
    return swift_bridgeObjectRelease();
  v8 = v14;
  if (v14)
  {
    v15 = v13;
    sub_2403A9210((uint64_t)a2, (uint64_t)v6, &qword_25700C8D8);
    v9 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
    v12 = *(_QWORD *)(v9 - 8);
    v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v9);
    sub_2403A97FC((uint64_t)v6, &qword_25700C8D8);
    if (v10 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)a2, &qword_25700C8D8);
    *a2 = v15;
    a2[1] = v8;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v9);
  }
  return result;
}

uint64_t sub_24084EAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153D8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C8D8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C8D8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570153D8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014588, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570153D8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570153D8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570153D8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570153D8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570153D8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C8D8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_24084F11C(v3, a1, a2, a3, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
  if (!v4)
  {
    sub_2403A9210(v3, (uint64_t)v10, &qword_25700C8D8);
    v12 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12) != 1)
    {
      v13 = (char *)&loc_24084F01C + 4 * byte_240911152[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24084F11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 20) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t sub_24084F198(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C8D8);
  v8 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C8D8);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
    sub_2404FA028(&qword_257014558, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
  __break(1u);
  return result;
}

uint64_t sub_24084F334(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C8D8);
  v8 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C8D8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
    sub_2404FA028(&qword_257014570, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
  __break(1u);
  return result;
}

uint64_t sub_24084F4D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C8D8);
  v8 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C8D8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
    sub_2404FA028(&qword_257014588, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
  __break(1u);
  return result;
}

uint64_t sub_24084F674(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C8D8);
  v5 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C8D8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2408E5A38();
    return swift_bridgeObjectRelease();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
  __break(1u);
  return result;
}

uint64_t sub_24084F79C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C8D8);
  v8 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C8D8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
    sub_2404FA028(&qword_257014588, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet, &qword_257013DF0, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet);
}

uint64_t sub_24084F95C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;

  v4 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  v5 = (_QWORD *)(a2 + *(int *)(a1 + 20));
  *v5 = 0;
  v5[1] = 0;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t sub_24084F9B4(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9BA0, &qword_257012F28);
}

uint64_t sub_24084F9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRestrictionContext.InSet.ValueSet.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24084F9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRestrictionContext.InSet.ValueSet.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24084F9FC()
{
  sub_2404FA028(&qword_257015078, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet);
  return sub_2408E5828();
}

uint64_t sub_24084FA4C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9BA8, (uint64_t)qword_257012F38, a1);
}

uint64_t sub_24084FA68()
{
  sub_2404FA028(&qword_257014540, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet);
  return sub_2408E599C();
}

uint64_t sub_24084FAA8()
{
  sub_2404FA028(&qword_257014540, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet);
  return sub_2408E59A8();
}

uint64_t sub_24084FAFC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9BA0 != -1)
    swift_once();
  v1 = qword_257012F28;
  v2 = unk_257012F30;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257012F50 = v1;
  *(_QWORD *)algn_257012F58 = v2;
  return result;
}

uint64_t static ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9BB0, &qword_257012F50);
}

uint64_t sub_24084FBA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012F60);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012F60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "toolIdentifier";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameterKey";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9BB8, (uint64_t)qword_257012F60, a1);
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240887848(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240879EAC(a1, a2, a3, 1, 2, (void (*)(_QWORD))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration, &qword_257013DF8, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
}

uint64_t sub_24084FD74(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9BB0, &qword_257012F50);
}

uint64_t sub_24084FD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.PropertyUpdater.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24084FDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24084FDBC()
{
  sub_2404FA028(&qword_257015070, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
  return sub_2408E5828();
}

uint64_t sub_24084FE0C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9BB8, (uint64_t)qword_257012F60, a1);
}

uint64_t sub_24084FE28()
{
  sub_2404FA028(&qword_257014558, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
  return sub_2408E599C();
}

uint64_t sub_24084FE68()
{
  sub_2404FA028(&qword_257014558, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
  return sub_2408E59A8();
}

uint64_t sub_24084FEBC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9BA0 != -1)
    swift_once();
  v1 = qword_257012F28;
  v2 = unk_257012F30;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257012F78 = v1;
  unk_257012F80 = v2;
  return result;
}

uint64_t static ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9BC0, &qword_257012F78);
}

uint64_t sub_24084FF68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012F88);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012F88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "contentItemClass";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "propertyName";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9BC8, (uint64_t)qword_257012F88, a1);
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2408E593C();
      }
      else if (result == 1)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues, type metadata accessor for ToolKitProtoContentItemClassDescriptor, &qword_257014600, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  result = sub_240850264((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    v6 = v3[1];
    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = *v3 & 0xFFFFFFFFFFFFLL;
    if (v7)
      sub_2408E5A38();
    type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240850264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_25700C8E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C8E0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
  sub_2404FA028(&qword_257014600, type metadata accessor for ToolKitProtoContentItemClassDescriptor, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues, &qword_257013E00, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
}

uint64_t sub_2408503F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404BF554(a1, type metadata accessor for ToolKitProtoContentItemClassDescriptor, a2);
}

uint64_t sub_240850400(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9BC0, &qword_257012F78);
}

uint64_t sub_240850420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240850434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240850448()
{
  sub_2404FA028(&qword_257015068, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
  return sub_2408E5828();
}

uint64_t sub_240850498@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9BC8, (uint64_t)qword_257012F88, a1);
}

uint64_t sub_2408504B4()
{
  sub_2404FA028(&qword_257014570, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
  return sub_2408E599C();
}

uint64_t sub_2408504F4()
{
  sub_2404FA028(&qword_257014570, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
  return sub_2408E59A8();
}

uint64_t sub_240850548()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9BA0 != -1)
    swift_once();
  v1 = qword_257012F28;
  v2 = unk_257012F30;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257012FA0 = v1;
  *(_QWORD *)algn_257012FA8 = v2;
  return result;
}

uint64_t static ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9BD0, &qword_257012FA0);
}

uint64_t sub_2408505F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257012FB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_257012FB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 4;
  *(_QWORD *)v7 = "parameterKey";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 5;
  *(_QWORD *)v11 = "queryIdentifier";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 6;
  *(_QWORD *)v12 = "actionIdentifier";
  *(_QWORD *)(v12 + 8) = 16;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9BD8, (uint64_t)qword_257012FB0, a1);
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 6 || result == 5 || result == 4)
        sub_2408E593C();
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    v5 = v0[3];
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_2408E5A38(), !v1))
    {
      v7 = v0[5];
      v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0)
        v8 = v0[4] & 0xFFFFFFFFFFFFLL;
      if (!v8 || (result = sub_2408E5A38(), !v1))
      {
        type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, &qword_257013E08, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
}

uint64_t sub_240850978(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9BD0, &qword_257012FA0);
}

uint64_t sub_240850998()
{
  return ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery.decodeMessage<A>(decoder:)();
}

uint64_t sub_2408509AC()
{
  return ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery.traverse<A>(visitor:)();
}

uint64_t sub_2408509C0()
{
  sub_2404FA028(&qword_257015060, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
  return sub_2408E5828();
}

uint64_t sub_240850A10@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9BD8, (uint64_t)qword_257012FB0, a1);
}

uint64_t sub_240850A2C()
{
  sub_2404FA028(&qword_257014588, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
  return sub_2408E599C();
}

uint64_t sub_240850A6C()
{
  sub_2404FA028(&qword_257014588, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
  return sub_2408E59A8();
}

uint64_t sub_240850AC0()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012FC8 = 0xD00000000000001ALL;
  unk_257012FD0 = 0x8000000240929AA0;
  return result;
}

uint64_t static ToolKitProtoRestrictionContext.RepresentableAs.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9BE0, &qword_257012FC8);
}

uint64_t sub_240850B54(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257012FD8, 1, (uint64_t)"typeIdentifiers", 15);
}

uint64_t static ToolKitProtoRestrictionContext.RepresentableAs._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9BE8, (uint64_t)qword_257012FD8, a1);
}

uint64_t ToolKitProtoRestrictionContext.RepresentableAs.decodeMessage<A>(decoder:)()
{
  return sub_2408797F8();
}

uint64_t ToolKitProtoRestrictionContext.RepresentableAs.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404C3EA4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs);
}

uint64_t ToolKitProtoRestrictionContext.RepresentableAs.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs, &qword_257013E10, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.RepresentableAs);
}

uint64_t sub_240850BD8(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9BE0, &qword_257012FC8);
}

uint64_t sub_240850BF8()
{
  return ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults.decodeMessage<A>(decoder:)();
}

uint64_t sub_240850C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRestrictionContext.RepresentableAs.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240850C20()
{
  sub_2404FA028(&qword_257015058, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.RepresentableAs);
  return sub_2408E5828();
}

uint64_t sub_240850C70@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9BE8, (uint64_t)qword_257012FD8, a1);
}

uint64_t sub_240850C8C()
{
  sub_2404FA028(&qword_2570145A0, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.RepresentableAs);
  return sub_2408E599C();
}

uint64_t sub_240850CCC()
{
  sub_2404FA028(&qword_2570145A0, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.RepresentableAs);
  return sub_2408E59A8();
}

uint64_t sub_240850D1C(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs) & 1;
}

uint64_t sub_240850D44()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257012FF0 = 0xD00000000000001ALL;
  *(_QWORD *)algn_257012FF8 = 0x8000000240929AA0;
  return result;
}

uint64_t static ToolKitProtoRestrictionContext.TextTypedWith.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9BF0, &qword_257012FF0);
}

uint64_t sub_240850DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013000);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013000);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "multiline_allowed";
  *(_QWORD *)(v7 + 8) = 17;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "smart_quotes_enabled";
  *(_QWORD *)(v11 + 8) = 20;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "smart_dashes_enabled";
  *((_QWORD *)v13 + 1) = 20;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "keyboard_type";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "autocorrection_type";
  *((_QWORD *)v17 + 1) = 19;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "capitalization_type";
  *((_QWORD *)v19 + 1) = 19;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext.TextTypedWith._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9BF8, (uint64_t)qword_257013000, a1);
}

uint64_t ToolKitProtoRestrictionContext.TextTypedWith.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          sub_2408E5888();
          break;
        case 4:
          sub_2408293A4();
          goto LABEL_5;
        case 5:
          sub_2408293E8();
          goto LABEL_5;
        case 6:
          sub_240829360();
LABEL_5:
          sub_2408E58A0();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoRestrictionContext.TextTypedWith.traverse<A>(visitor:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  if (*v0 != 1 || (result = sub_2408E59D8(), !v1))
  {
    if (v0[1] != 1 || (result = sub_2408E59D8(), !v1))
    {
      if (v0[2] != 1 || (result = sub_2408E59D8(), !v1))
      {
        if (!v0[3] || (sub_2408293A4(), result = sub_2408E59E4(), !v1))
        {
          if (!v0[4] || (sub_2408293E8(), result = sub_2408E59E4(), !v1))
          {
            if (!v0[5] || (sub_240829360(), result = sub_2408E59E4(), !v1))
            {
              type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith(0);
              return sub_2408E578C();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t ToolKitProtoRestrictionContext.TextTypedWith.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith, &qword_257013E18, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith);
}

uint64_t sub_240851340@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_WORD *)(a1 + 4) = 0;
  *(_DWORD *)a1 = 0;
  return result;
}

uint64_t sub_240851370(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9BF0, &qword_257012FF0);
}

uint64_t sub_240851390()
{
  return ToolKitProtoRestrictionContext.TextTypedWith.decodeMessage<A>(decoder:)();
}

uint64_t sub_2408513A4()
{
  return ToolKitProtoRestrictionContext.TextTypedWith.traverse<A>(visitor:)();
}

uint64_t sub_2408513B8()
{
  sub_2404FA028(&qword_257015050, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith);
  return sub_2408E5828();
}

uint64_t sub_240851408@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9BF8, (uint64_t)qword_257013000, a1);
}

uint64_t sub_240851424()
{
  sub_2404FA028(&qword_2570145B8, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith);
  return sub_2408E599C();
}

uint64_t sub_240851464()
{
  sub_2404FA028(&qword_2570145B8, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith);
  return sub_2408E59A8();
}

uint64_t sub_2408514B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013018);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013018);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "AutocorrectionType_DEFAULT";
  *(_QWORD *)(v7 + 8) = 26;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "AutocorrectionType_ON";
  *((_QWORD *)v11 + 1) = 21;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "AutocorrectionType_OFF";
  *(_QWORD *)(v12 + 8) = 22;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext.TextTypedWith.AutocorrectionType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C00, (uint64_t)qword_257013018, a1);
}

uint64_t sub_240851664@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C00, (uint64_t)qword_257013018, a1);
}

uint64_t sub_240851684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013030);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013030);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240911060;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "KeyboardType_DEFAULT";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "KeyboardType_ASCII_CAPABLE";
  *(_QWORD *)(v11 + 8) = 26;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "KeyboardType_NUMBERS_AND_PUNCTUATION";
  *((_QWORD *)v13 + 1) = 36;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "KeyboardType_URL";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "KeyboardType_NUMBER_PAD";
  *((_QWORD *)v17 + 1) = 23;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "KeyboardType_PHONE_PAD";
  *((_QWORD *)v19 + 1) = 22;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "KeyboardType_NAME_PHONE_PAD";
  *((_QWORD *)v21 + 1) = 27;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "KeyboardType_EMAIL_ADDRESS";
  *((_QWORD *)v23 + 1) = 26;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 8 * v3) = 8;
  *(_QWORD *)v24 = "KeyboardType_DECIMAL_PAD";
  *(_QWORD *)(v24 + 8) = 24;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v3);
  v26 = (char *)v25 + *(int *)(v1 + 48);
  *v25 = 9;
  *(_QWORD *)v26 = "KeyboardType_TWITTER";
  *((_QWORD *)v26 + 1) = 20;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v6 + 10 * v3);
  v28 = (char *)v27 + *(int *)(v1 + 48);
  *v27 = 10;
  *(_QWORD *)v28 = "KeyboardType_WEB_SEARCH";
  *((_QWORD *)v28 + 1) = 23;
  v28[16] = 2;
  v10();
  v29 = (_QWORD *)(v6 + 11 * v3);
  v30 = (char *)v29 + *(int *)(v1 + 48);
  *v29 = 11;
  *(_QWORD *)v30 = "KeyboardType_ASCII_CAPABLE_NUMBER_PAD";
  *((_QWORD *)v30 + 1) = 37;
  v30[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext.TextTypedWith.KeyboardType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C08, (uint64_t)qword_257013030, a1);
}

uint64_t sub_240851A18@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C08, (uint64_t)qword_257013030, a1);
}

uint64_t sub_240851A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013048);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013048);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "CapitalizationType_NONE";
  *(_QWORD *)(v7 + 8) = 23;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "CapitalizationType_WORDS";
  *(_QWORD *)(v11 + 8) = 24;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "CapitalizationType_SENTENCES";
  *((_QWORD *)v13 + 1) = 28;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "CapitalizationType_ALL_CHARACTERS";
  *((_QWORD *)v15 + 1) = 33;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRestrictionContext.TextTypedWith.CapitalizationType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C10, (uint64_t)qword_257013048, a1);
}

uint64_t sub_240851C10@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C10, (uint64_t)qword_257013048, a1);
}

unint64_t static ToolKitProtoContentItemClassDescriptor.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_240851C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013060);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013060);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "regularContentItemClass";
  *(_QWORD *)(v7 + 8) = 23;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "linkEntityContentItemClass";
  *((_QWORD *)v11 + 1) = 26;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "linkEnumContentItemClass";
  *(_QWORD *)(v12 + 8) = 24;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoContentItemClassDescriptor._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C18, (uint64_t)qword_257013060, a1);
}

uint64_t ToolKitProtoContentItemClassDescriptor.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240852324((uint64_t)v5, a1, a2, a3);
          break;
        case 2:
          sub_240851EE0((uint64_t)v5, a1, a2, a3);
          break;
        case 1:
          sub_240499908(a1, v5, a2, a3, &qword_25700C8E8, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind, 0);
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240851EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153B0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C8E8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C8E8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570153B0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014618, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570153B0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570153B0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570153B0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570153B0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570153B0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C8E8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240852324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153B8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C8E8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C8E8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570153B8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014630, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570153B8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570153B8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570153B8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570153B8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570153B8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C8E8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoContentItemClassDescriptor.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v4, &qword_25700C8E8);
  v5 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    goto LABEL_9;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
    result = sub_2408528EC(v0);
    if (v1)
      return result;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
    sub_240852A10(v0);
  else
    sub_240852BB0(v0);
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
  if (!v1)
  {
LABEL_9:
    type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2408528EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C8E8);
  v5 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C8E8);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2408E5A38();
    return swift_bridgeObjectRelease();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
  __break(1u);
  return result;
}

uint64_t sub_240852A10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C8E8);
  v8 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C8E8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
    sub_2404FA028(&qword_257014618, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
  __break(1u);
  return result;
}

uint64_t sub_240852BB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C8E8);
  v8 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C8E8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
    sub_2404FA028(&qword_257014630, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoContentItemClassDescriptor.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoContentItemClassDescriptor, &qword_257013E20, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t sub_240852D70@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoContentItemClassDescriptorKind, a1);
}

unint64_t sub_240852D7C()
{
  return 0xD000000000000022;
}

uint64_t sub_240852D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoContentItemClassDescriptor.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240852DAC()
{
  return ToolKitProtoContentItemClassDescriptor.traverse<A>(visitor:)();
}

uint64_t sub_240852DC0()
{
  sub_2404FA028(&qword_257015048, type metadata accessor for ToolKitProtoContentItemClassDescriptor, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
  return sub_2408E5828();
}

uint64_t sub_240852E10@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C18, (uint64_t)qword_257013060, a1);
}

uint64_t sub_240852E2C()
{
  sub_2404FA028(&qword_257014600, type metadata accessor for ToolKitProtoContentItemClassDescriptor, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
  return sub_2408E599C();
}

uint64_t sub_240852E6C()
{
  sub_2404FA028(&qword_257014600, type metadata accessor for ToolKitProtoContentItemClassDescriptor, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
  return sub_2408E59A8();
}

uint64_t sub_240852EC0()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013078 = 0xD000000000000022;
  unk_257013080 = 0x8000000240929AC0;
  return result;
}

uint64_t static ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9C20, &qword_257013078);
}

uint64_t sub_240852F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013088);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013088);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "bundleIdentifier";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "identifier";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C28, (uint64_t)qword_257013088, a1);
}

uint64_t ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass.decodeMessage<A>(decoder:)()
{
  return sub_240853484();
}

uint64_t ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240879EAC(a1, a2, a3, 2, 3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
}

uint64_t ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass, &qword_257013E28, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
}

uint64_t sub_240853110(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9C20, &qword_257013078);
}

uint64_t sub_240853130()
{
  return ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass.decodeMessage<A>(decoder:)();
}

uint64_t sub_240853144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240853158()
{
  sub_2404FA028(&qword_257015040, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
  return sub_2408E5828();
}

uint64_t sub_2408531A8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C28, (uint64_t)qword_257013088, a1);
}

uint64_t sub_2408531C4()
{
  sub_2404FA028(&qword_257014618, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
  return sub_2408E599C();
}

uint64_t sub_240853204()
{
  sub_2404FA028(&qword_257014618, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
  return sub_2408E59A8();
}

uint64_t sub_240853254(_QWORD *a1, char *a2)
{
  return sub_240892FB4(a1, a2, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass) & 1;
}

uint64_t sub_240853274()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_2570130A0 = 0xD000000000000022;
  *(_QWORD *)algn_2570130A8 = 0x8000000240929AC0;
  return result;
}

uint64_t static ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9C30, &qword_2570130A0);
}

uint64_t sub_240853304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570130B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570130B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "bundleIdentifier";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "identifier";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C38, (uint64_t)qword_2570130B0, a1);
}

uint64_t ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass.decodeMessage<A>(decoder:)()
{
  return sub_240853484();
}

uint64_t sub_240853484()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2)
        sub_2408E593C();
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240879EAC(a1, a2, a3, 2, 3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
}

uint64_t ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass, &qword_257013E30, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
}

uint64_t sub_240853554(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9C30, &qword_2570130A0);
}

uint64_t sub_240853574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240853588()
{
  sub_2404FA028(&qword_257015038, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
  return sub_2408E5828();
}

uint64_t sub_2408535D8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C38, (uint64_t)qword_2570130B0, a1);
}

uint64_t sub_2408535F4()
{
  sub_2404FA028(&qword_257014630, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
  return sub_2408E599C();
}

uint64_t sub_240853634()
{
  sub_2404FA028(&qword_257014630, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
  return sub_2408E59A8();
}

uint64_t sub_240853684(_QWORD *a1, char *a2)
{
  return sub_240892FB4(a1, a2, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass) & 1;
}

unint64_t static ToolKitProtoComparisonPredicate.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2408536C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570130C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570130C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "property";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "comparison";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "rawGroupId";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "contentItemClass";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoComparisonPredicate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C40, (uint64_t)qword_2570130C8, a1);
}

uint64_t ToolKitProtoComparisonPredicate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24085FEE4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoComparisonPredicate, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, &qword_257014658, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison);
}

uint64_t ToolKitProtoComparisonPredicate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24086006C(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_240853908, (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_240853A7C, (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_240853BF0, (void (*)(_QWORD))type metadata accessor for ToolKitProtoComparisonPredicate);
}

uint64_t sub_240853908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8F0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoComparisonPredicate(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_25700C8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C8F0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
  sub_2404FA028(&qword_257013CA8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t sub_240853A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoComparisonPredicate(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_25700C8F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C8F8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
  sub_2404FA028(&qword_257014658, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison);
}

uint64_t sub_240853BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoComparisonPredicate(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_25700C8E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C8E0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
  sub_2404FA028(&qword_257014600, type metadata accessor for ToolKitProtoContentItemClassDescriptor, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t ToolKitProtoComparisonPredicate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoComparisonPredicate, &qword_257013E38, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate);
}

uint64_t sub_240853D80@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_24086064C(a1, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, a2);
}

unint64_t sub_240853D8C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240853DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoComparisonPredicate.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240853DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoComparisonPredicate.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240853DD0()
{
  sub_2404FA028(&qword_257015030, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate);
  return sub_2408E5828();
}

uint64_t sub_240853E20@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C40, (uint64_t)qword_2570130C8, a1);
}

uint64_t sub_240853E3C()
{
  sub_2404FA028(&qword_257013E60, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate);
  return sub_2408E599C();
}

uint64_t sub_240853E7C()
{
  sub_2404FA028(&qword_257013E60, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate);
  return sub_2408E59A8();
}

uint64_t sub_240853ED0()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_2570130E0 = 0xD00000000000001BLL;
  *(_QWORD *)algn_2570130E8 = 0x8000000240929AF0;
  return result;
}

uint64_t static ToolKitProtoComparisonPredicate.Comparison.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9C48, &qword_2570130E0);
}

uint64_t sub_240853F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v39;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570130F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570130F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_2408E8FD0;
  v5 = v39 + v4;
  v6 = v39 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v39 + v4) = 1;
  *(_QWORD *)v6 = "notEqualTo";
  *(_QWORD *)(v6 + 8) = 10;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "equalTo";
  *(_QWORD *)(v10 + 8) = 7;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "hasValue";
  *((_QWORD *)v12 + 1) = 8;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "hasNoValue";
  *((_QWORD *)v14 + 1) = 10;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "greaterThan";
  *((_QWORD *)v16 + 1) = 11;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "greaterThanOrEqualTo";
  *((_QWORD *)v18 + 1) = 20;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "lessThan";
  *((_QWORD *)v20 + 1) = 8;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "lessThanOrEqualTo";
  *((_QWORD *)v22 + 1) = 17;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "contains";
  *(_QWORD *)(v23 + 8) = 8;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v5 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "notContains";
  *((_QWORD *)v25 + 1) = 11;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v5 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "beginsWith";
  *((_QWORD *)v27 + 1) = 10;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v5 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "endsWith";
  *((_QWORD *)v29 + 1) = 8;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v5 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "inTheNext";
  *((_QWORD *)v31 + 1) = 9;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v5 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "inTheLast";
  *((_QWORD *)v33 + 1) = 9;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v5 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "isToday";
  *((_QWORD *)v35 + 1) = 7;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v5 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 16;
  *(_QWORD *)v37 = "isBetween";
  *((_QWORD *)v37 + 1) = 9;
  v37[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoComparisonPredicate.Comparison._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C50, (uint64_t)qword_2570130F0, a1);
}

uint64_t ToolKitProtoComparisonPredicate.Comparison.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240854630(v5, a1, a2, a3);
          break;
        case 2:
          sub_240854A70(v5, a1, a2, a3);
          break;
        case 3:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 13;
          goto LABEL_5;
        case 4:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 14;
          goto LABEL_5;
        case 5:
          sub_240854EB4(v5, a1, a2, a3);
          break;
        case 6:
          sub_2408552F8(v5, a1, a2, a3);
          break;
        case 7:
          sub_24085573C(v5, a1, a2, a3);
          break;
        case 8:
          sub_240855B80(v5, a1, a2, a3);
          break;
        case 9:
          sub_240855FC4(v5, a1, a2, a3);
          break;
        case 10:
          sub_240856408(v5, a1, a2, a3);
          break;
        case 11:
          sub_24085684C(v5, a1, a2, a3);
          break;
        case 12:
          sub_240856C90(v5, a1, a2, a3);
          break;
        case 13:
          sub_2408570D4(v5, a1, a2, a3);
          break;
        case 14:
          sub_240857518(v5, a1, a2, a3);
          break;
        case 15:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 15;
LABEL_5:
          sub_240438FB0(v11, v12, v13, v14, &qword_25700C900, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind, v15);
          break;
        case 16:
          sub_24085795C(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240854630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240854A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240854EB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2408552F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085573C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240855B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240855FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240856408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085684C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240856C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2408570D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240857518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085795C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153A0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C900);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C900);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570153A0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014670, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Pair);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570153A0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570153A0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570153A0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570153A0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570153A0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C900);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoComparisonPredicate.Comparison.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_25700C900);
  v4 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v6 = (char *)sub_240857EB4 + 4 * byte_24091116D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  return sub_2408E578C();
}

void sub_240857EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2408580F0(v1);
  sub_240388AE4(v2, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  if (!v0)
    JUMPOUT(0x240857E44);
  JUMPOUT(0x240857E6CLL);
}

void sub_240857FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_240859114(v1);
  if (v0)
  {
    sub_240388AE4(v2, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
    JUMPOUT(0x240857E6CLL);
  }
  sub_240388AE4(v2, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  JUMPOUT(0x240857E44);
}

void sub_240858058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_24085842C(v2, v3, v1, v4, &qword_25700C900, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  if (!v0)
    JUMPOUT(0x240857E44);
  JUMPOUT(0x240857E6CLL);
}

uint64_t sub_2408580F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_24085828C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_24085842C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[0] = a3;
  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 13)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408585C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[0] = a3;
  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 14)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240858754(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_2408588F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_240858A94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_240858C34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_240858DD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_240858F74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_240859114(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 8)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_2408592B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 9)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_240859454(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 10)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_2408595F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 11)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t sub_240859794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[0] = a3;
  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 15)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240859928(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C900);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C900);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 12)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair);
    sub_2404FA028(&qword_257014670, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Pair);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoComparisonPredicate.Comparison.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, &qword_257013E40, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison);
}

uint64_t sub_240859AE8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind, a1);
}

uint64_t sub_240859AF4(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9C48, &qword_2570130E0);
}

uint64_t sub_240859B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoComparisonPredicate.Comparison.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240859B28()
{
  return ToolKitProtoComparisonPredicate.Comparison.traverse<A>(visitor:)();
}

uint64_t sub_240859B3C()
{
  sub_2404FA028(&qword_257015028, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison);
  return sub_2408E5828();
}

uint64_t sub_240859B8C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C50, (uint64_t)qword_2570130F0, a1);
}

uint64_t sub_240859BA8()
{
  sub_2404FA028(&qword_257014658, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison);
  return sub_2408E599C();
}

uint64_t sub_240859BE8()
{
  sub_2404FA028(&qword_257014658, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison);
  return sub_2408E59A8();
}

uint64_t sub_240859C3C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9C48 != -1)
    swift_once();
  v1 = qword_2570130E0;
  v2 = *(_QWORD *)algn_2570130E8;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013108 = v1;
  unk_257013110 = v2;
  return result;
}

uint64_t static ToolKitProtoComparisonPredicate.Comparison.Pair.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9C58, &qword_257013108);
}

uint64_t sub_240859CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013118);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013118);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "first";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "second";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoComparisonPredicate.Comparison.Pair._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C60, (uint64_t)qword_257013118, a1);
}

uint64_t ToolKitProtoComparisonPredicate.Comparison.Pair.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      }
      else if (result == 1)
      {
        type metadata accessor for ToolKitProtoTypedValue(0);
        sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoComparisonPredicate.Comparison.Pair.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA3A8, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  if (!v4)
  {
    sub_24085A030(v3, a1, a2, a3);
    type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24085A030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t ToolKitProtoComparisonPredicate.Comparison.Pair.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair, &qword_257013E48, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Pair);
}

uint64_t sub_24085A1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(a2, 1, 1, v4);
  v5(a2 + *(int *)(a1 + 20), 1, 1, v4);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t sub_24085A234(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9C58, &qword_257013108);
}

uint64_t sub_24085A254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoComparisonPredicate.Comparison.Pair.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24085A268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoComparisonPredicate.Comparison.Pair.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24085A27C()
{
  sub_2404FA028(&qword_257015020, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Pair);
  return sub_2408E5828();
}

uint64_t sub_24085A2CC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C60, (uint64_t)qword_257013118, a1);
}

uint64_t sub_24085A2E8()
{
  sub_2404FA028(&qword_257014670, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Pair);
  return sub_2408E599C();
}

uint64_t sub_24085A328()
{
  sub_2404FA028(&qword_257014670, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Pair);
  return sub_2408E59A8();
}

uint64_t sub_24085A37C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9C48 != -1)
    swift_once();
  v1 = qword_2570130E0;
  v2 = *(_QWORD *)algn_2570130E8;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013130 = v1;
  *(_QWORD *)algn_257013138 = v2;
  return result;
}

uint64_t static ToolKitProtoComparisonPredicate.Comparison.Template.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9C68, &qword_257013130);
}

uint64_t sub_24085A428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v39;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013140);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013140);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_2408E8FD0;
  v5 = v39 + v4;
  v6 = v39 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v39 + v4) = 1;
  *(_QWORD *)v6 = "equalTo";
  *(_QWORD *)(v6 + 8) = 7;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "notEqualTo";
  *(_QWORD *)(v10 + 8) = 10;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "hasValue";
  *((_QWORD *)v12 + 1) = 8;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "hasNoValue";
  *((_QWORD *)v14 + 1) = 10;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "greaterThan";
  *((_QWORD *)v16 + 1) = 11;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "greaterThanOrEqualTo";
  *((_QWORD *)v18 + 1) = 20;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "lessThan";
  *((_QWORD *)v20 + 1) = 8;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "lessThanOrEqualTo";
  *((_QWORD *)v22 + 1) = 17;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "contains";
  *(_QWORD *)(v23 + 8) = 8;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v5 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "notContains";
  *((_QWORD *)v25 + 1) = 11;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v5 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "beginsWith";
  *((_QWORD *)v27 + 1) = 10;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v5 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "endsWith";
  *((_QWORD *)v29 + 1) = 8;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v5 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "inTheNext";
  *((_QWORD *)v31 + 1) = 9;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v5 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "inTheLast";
  *((_QWORD *)v33 + 1) = 9;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v5 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "isToday";
  *((_QWORD *)v35 + 1) = 7;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v5 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 16;
  *(_QWORD *)v37 = "isBetween";
  *((_QWORD *)v37 + 1) = 9;
  v37[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoComparisonPredicate.Comparison.Template._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C70, (uint64_t)qword_257013140, a1);
}

uint64_t ToolKitProtoComparisonPredicate.Comparison.Template.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_24085AAF8(v5, a1, a2, a3);
          break;
        case 2:
          sub_24085AF38(v5, a1, a2, a3);
          break;
        case 3:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 13;
          goto LABEL_5;
        case 4:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 14;
          goto LABEL_5;
        case 5:
          sub_24085B37C(v5, a1, a2, a3);
          break;
        case 6:
          sub_24085B7C0(v5, a1, a2, a3);
          break;
        case 7:
          sub_24085BC04(v5, a1, a2, a3);
          break;
        case 8:
          sub_24085C048(v5, a1, a2, a3);
          break;
        case 9:
          sub_24085C48C(v5, a1, a2, a3);
          break;
        case 10:
          sub_24085C8D0(v5, a1, a2, a3);
          break;
        case 11:
          sub_24085CD14(v5, a1, a2, a3);
          break;
        case 12:
          sub_24085D158(v5, a1, a2, a3);
          break;
        case 13:
          sub_24085D59C(v5, a1, a2, a3);
          break;
        case 14:
          sub_24085D9E0(v5, a1, a2, a3);
          break;
        case 15:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 15;
LABEL_5:
          sub_240438FB0(v11, v12, v13, v14, &qword_25700C908, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind, v15);
          break;
        case 16:
          sub_24085DE24(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24085AAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085AF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085B37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085B7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085BC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085C048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085C48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085C8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085CD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085D158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085D59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085D9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24085DE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C908);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C908);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypeInstance);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA428);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA428);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypeInstance);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C908);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypeInstance);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoComparisonPredicate.Comparison.Template.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_25700C908);
  v4 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v6 = (char *)sub_24085E37C + 4 * byte_24091118D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template(0);
  return sub_2408E578C();
}

void sub_24085E37C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24085E5B8(v1);
  sub_240388AE4(v2, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  if (!v0)
    JUMPOUT(0x24085E30CLL);
  JUMPOUT(0x24085E334);
}

void sub_24085E474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24085F2B4(v1);
  if (v0)
  {
    sub_240388AE4(v2, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
    JUMPOUT(0x24085E334);
  }
  sub_240388AE4(v2, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  JUMPOUT(0x24085E30CLL);
}

void sub_24085E520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_24085842C(v2, v3, v1, v4, &qword_25700C908, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  if (!v0)
    JUMPOUT(0x24085E30CLL);
  JUMPOUT(0x24085E334);
}

uint64_t sub_24085E5B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085E754(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085E8F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085EA94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085EC34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085EDD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085EF74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085F114(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085F2B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 8)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085F454(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 9)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085F5F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 10)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085F794(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 11)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t sub_24085F934(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C908);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C908);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 12)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoComparisonPredicate.Comparison.Template.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, &qword_257013E50, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Template);
}

uint64_t sub_24085FAF4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind, a1);
}

uint64_t sub_24085FB00(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9C68, &qword_257013130);
}

uint64_t sub_24085FB20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoComparisonPredicate.Comparison.Template.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24085FB34()
{
  return ToolKitProtoComparisonPredicate.Comparison.Template.traverse<A>(visitor:)();
}

uint64_t sub_24085FB48()
{
  sub_2404FA028(&qword_257015018, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Template);
  return sub_2408E5828();
}

uint64_t sub_24085FB98@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C70, (uint64_t)qword_257013140, a1);
}

uint64_t sub_24085FBB4()
{
  sub_2404FA028(&qword_257014688, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Template);
  return sub_2408E599C();
}

uint64_t sub_24085FBF4()
{
  sub_2404FA028(&qword_257014688, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Template);
  return sub_2408E59A8();
}

uint64_t sub_24085FC48()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013158 = 0xD00000000000001BLL;
  unk_257013160 = 0x8000000240929AF0;
  return result;
}

uint64_t static ToolKitProtoComparisonPredicate.Template.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9C78, &qword_257013158);
}

uint64_t sub_24085FCD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013168);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "property";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "comparisonTemplate";
  *(_QWORD *)(v11 + 8) = 18;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "rawGroupId";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "contentItemClass";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoComparisonPredicate.Template._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C80, (uint64_t)qword_257013168, a1);
}

uint64_t ToolKitProtoComparisonPredicate.Template.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24085FEE4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoComparisonPredicate.Template, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, &qword_257014688, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Template);
}

uint64_t sub_24085FEE4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t result;
  char v18;

  v13 = v7;
  result = sub_2408E5858();
  if (!v8)
  {
    while ((v18 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240448B20(a1, v13, a2, a3, a4, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, &qword_257013CA8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
          break;
        case 2:
          sub_240448BC4(a1, v13, a2, a3, a4, a5, a6, a7);
          break;
        case 3:
          sub_2408E593C();
          break;
        case 4:
          sub_240450F68(a1, v13, a2, a3, a4, type metadata accessor for ToolKitProtoContentItemClassDescriptor, &qword_257014600, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoComparisonPredicate.Template.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24086006C(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_240860188, (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_2408602FC, (void (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_240860470, (void (*)(_QWORD))type metadata accessor for ToolKitProtoComparisonPredicate.Template);
}

uint64_t sub_24086006C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t, uint64_t), void (*a5)(_QWORD *, uint64_t, uint64_t, uint64_t), void (*a6)(_QWORD *, uint64_t, uint64_t, uint64_t), void (*a7)(_QWORD))
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;

  result = a4(v7, a1, a2, a3);
  if (!v8)
  {
    a5(v7, a1, a2, a3);
    v16 = v7[1];
    v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0)
      v17 = *v7 & 0xFFFFFFFFFFFFLL;
    if (v17)
      sub_2408E5A38();
    a6(v7, a1, a2, a3);
    a7(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240860188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8F0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoComparisonPredicate.Template(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_25700C8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C8F0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
  sub_2404FA028(&qword_257013CA8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t sub_2408602FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C910);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoComparisonPredicate.Template(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_25700C910);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C910);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template);
  sub_2404FA028(&qword_257014688, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Template);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template);
}

uint64_t sub_240860470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoComparisonPredicate.Template(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_25700C8E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C8E0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
  sub_2404FA028(&qword_257014600, type metadata accessor for ToolKitProtoContentItemClassDescriptor, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t static ToolKitProtoComparisonPredicate.Template.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_2408A20D0(a1, a2, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, &qword_257015380, &qword_25700C910, type metadata accessor for ToolKitProtoComparisonPredicate.Template, _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0G0V8TemplateV2eeoiySbAG_AGtFZ_0) & 1;
}

uint64_t ToolKitProtoComparisonPredicate.Template.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoComparisonPredicate.Template, &qword_257013E58, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Template);
}

uint64_t sub_240860640@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_24086064C(a1, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, a2);
}

uint64_t sub_24086064C@<X0>(int *a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, _QWORD *a3@<X8>)
{
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;

  v6 = (char *)a3 + a1[5];
  v7 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (char *)a3 + a1[6];
  v9 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (char *)a3 + a1[7];
  v11 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_240860710(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9C78, &qword_257013158);
}

uint64_t sub_240860730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoComparisonPredicate.Template.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240860744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoComparisonPredicate.Template.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240860758()
{
  sub_2404FA028(&qword_257015010, type metadata accessor for ToolKitProtoComparisonPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Template);
  return sub_2408E5828();
}

uint64_t sub_2408607A8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C80, (uint64_t)qword_257013168, a1);
}

uint64_t sub_2408607C4()
{
  sub_2404FA028(&qword_257013D00, type metadata accessor for ToolKitProtoComparisonPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Template);
  return sub_2408E599C();
}

uint64_t sub_240860804()
{
  sub_2404FA028(&qword_257013D00, type metadata accessor for ToolKitProtoComparisonPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Template);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoCompoundPredicate.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_240860874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013180);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013180);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "operator";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "operands";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoCompoundPredicate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C88, (uint64_t)qword_257013180, a1);
}

uint64_t ToolKitProtoCompoundPredicate.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for ToolKitProtoComparisonPredicate(0);
        sub_2404FA028(&qword_257013E60, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate);
        sub_2408E5960();
      }
      else if (result == 1)
      {
        sub_24082931C();
        sub_2408E58A0();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoCompoundPredicate.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_BYTE *)v0 || (sub_24082931C(), result = sub_2408E59E4(), !v1))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 8) + 16)
      || (type metadata accessor for ToolKitProtoComparisonPredicate(0),
          sub_2404FA028(&qword_257013E60, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate), result = sub_2408E5A5C(), !v1))
    {
      type metadata accessor for ToolKitProtoCompoundPredicate(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t ToolKitProtoCompoundPredicate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoCompoundPredicate, &qword_257013E68, (uint64_t)&protocol conformance descriptor for ToolKitProtoCompoundPredicate);
}

uint64_t sub_240860C34@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_240860C6C()
{
  return 0xD000000000000019;
}

uint64_t sub_240860C88()
{
  return ToolKitProtoCompoundPredicate.decodeMessage<A>(decoder:)();
}

uint64_t sub_240860C9C()
{
  return ToolKitProtoCompoundPredicate.traverse<A>(visitor:)();
}

uint64_t sub_240860CB0()
{
  sub_2404FA028(&qword_257015008, type metadata accessor for ToolKitProtoCompoundPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoCompoundPredicate);
  return sub_2408E5828();
}

uint64_t sub_240860D00@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C88, (uint64_t)qword_257013180, a1);
}

uint64_t sub_240860D1C()
{
  sub_2404FA028(&qword_2570146B0, type metadata accessor for ToolKitProtoCompoundPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoCompoundPredicate);
  return sub_2408E599C();
}

uint64_t sub_240860D5C()
{
  sub_2404FA028(&qword_2570146B0, type metadata accessor for ToolKitProtoCompoundPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoCompoundPredicate);
  return sub_2408E59A8();
}

uint64_t sub_240860DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013198);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013198);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "Operator_UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "Operator_AND";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "Operator_OR";
  *(_QWORD *)(v12 + 8) = 11;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoCompoundPredicate.Operator._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C90, (uint64_t)qword_257013198, a1);
}

uint64_t sub_240860F5C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C90, (uint64_t)qword_257013198, a1);
}

unint64_t static ToolKitProtoStringSearchPredicate.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240860F98(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_2570131B0, 1, (uint64_t)"searchString", 12);
}

uint64_t static ToolKitProtoStringSearchPredicate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9C98, (uint64_t)qword_2570131B0, a1);
}

uint64_t ToolKitProtoStringSearchPredicate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t ToolKitProtoStringSearchPredicate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24088B17C(a1, a2, a3, 1, (void (*)(_QWORD))type metadata accessor for ToolKitProtoStringSearchPredicate);
}

uint64_t ToolKitProtoStringSearchPredicate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoStringSearchPredicate, &qword_257013E70, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate);
}

unint64_t sub_240861028()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240861044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.EntityUpdating.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240861058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoStringSearchPredicate.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24086106C()
{
  sub_2404FA028(&qword_257015000, type metadata accessor for ToolKitProtoStringSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate);
  return sub_2408E5828();
}

uint64_t sub_2408610BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9C98, (uint64_t)qword_2570131B0, a1);
}

uint64_t sub_2408610D8()
{
  sub_2404FA028(&qword_2570146D8, type metadata accessor for ToolKitProtoStringSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate);
  return sub_2408E599C();
}

uint64_t sub_240861118()
{
  sub_2404FA028(&qword_2570146D8, type metadata accessor for ToolKitProtoStringSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate);
  return sub_2408E59A8();
}

uint64_t sub_240861168(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for ToolKitProtoStringSearchPredicate) & 1;
}

uint64_t sub_240861188()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_2570131C8 = 0xD00000000000001DLL;
  unk_2570131D0 = 0x8000000240929B30;
  return result;
}

uint64_t static ToolKitProtoStringSearchPredicate.Template.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9CA0, &qword_2570131C8);
}

uint64_t sub_240861214(uint64_t a1)
{
  return sub_2404C9600(a1, qword_2570131D8);
}

uint64_t static ToolKitProtoStringSearchPredicate.Template._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9CA8, (uint64_t)qword_2570131D8, a1);
}

uint64_t ToolKitProtoStringSearchPredicate.Template.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t ToolKitProtoStringSearchPredicate.Template.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoStringSearchPredicate.Template, &qword_257013E78, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate.Template);
}

uint64_t sub_240861270(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9CA0, &qword_2570131C8);
}

uint64_t sub_240861290()
{
  return ToolKitProtoToolDefinition.decodeMessage<A>(decoder:)();
}

uint64_t sub_2408612A4()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t sub_2408612B8()
{
  sub_2404FA028(&qword_257014FF8, type metadata accessor for ToolKitProtoStringSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate.Template);
  return sub_2408E5828();
}

uint64_t sub_240861308@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9CA8, (uint64_t)qword_2570131D8, a1);
}

uint64_t sub_240861324()
{
  sub_2404FA028(&qword_2570146F0, type metadata accessor for ToolKitProtoStringSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate.Template);
  return sub_2408E599C();
}

uint64_t sub_240861364()
{
  sub_2404FA028(&qword_2570146F0, type metadata accessor for ToolKitProtoStringSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate.Template);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoIdSearchPredicate.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2408613D0(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_2570131F0, 1, (uint64_t)"identifier", 10);
}

uint64_t static ToolKitProtoIdSearchPredicate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9CB0, (uint64_t)qword_2570131F0, a1);
}

uint64_t ToolKitProtoIdSearchPredicate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t ToolKitProtoIdSearchPredicate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24088B17C(a1, a2, a3, 1, (void (*)(_QWORD))type metadata accessor for ToolKitProtoIdSearchPredicate);
}

uint64_t ToolKitProtoIdSearchPredicate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoIdSearchPredicate, &qword_257013E80, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate);
}

unint64_t sub_240861460()
{
  return 0xD000000000000019;
}

uint64_t sub_24086147C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoIdSearchPredicate.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240861490()
{
  sub_2404FA028(&qword_257014FF0, type metadata accessor for ToolKitProtoIdSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate);
  return sub_2408E5828();
}

uint64_t sub_2408614E0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9CB0, (uint64_t)qword_2570131F0, a1);
}

uint64_t sub_2408614FC()
{
  sub_2404FA028(&qword_257014708, type metadata accessor for ToolKitProtoIdSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate);
  return sub_2408E599C();
}

uint64_t sub_24086153C()
{
  sub_2404FA028(&qword_257014708, type metadata accessor for ToolKitProtoIdSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate);
  return sub_2408E59A8();
}

uint64_t sub_24086158C(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for ToolKitProtoIdSearchPredicate) & 1;
}

uint64_t sub_2408615AC()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013208 = 0xD000000000000019;
  unk_257013210 = 0x8000000240929B50;
  return result;
}

uint64_t static ToolKitProtoIdSearchPredicate.Template.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9CB8, &qword_257013208);
}

uint64_t sub_240861638(uint64_t a1)
{
  return sub_2404C9600(a1, qword_257013218);
}

uint64_t static ToolKitProtoIdSearchPredicate.Template._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9CC0, (uint64_t)qword_257013218, a1);
}

uint64_t ToolKitProtoIdSearchPredicate.Template.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t ToolKitProtoIdSearchPredicate.Template.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoIdSearchPredicate.Template, &qword_257013E88, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate.Template);
}

uint64_t sub_240861694(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9CB8, &qword_257013208);
}

uint64_t sub_2408616B4()
{
  sub_2404FA028(&qword_257014FE8, type metadata accessor for ToolKitProtoIdSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate.Template);
  return sub_2408E5828();
}

uint64_t sub_240861704@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9CC0, (uint64_t)qword_257013218, a1);
}

uint64_t sub_240861720()
{
  sub_2404FA028(&qword_257014720, type metadata accessor for ToolKitProtoIdSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate.Template);
  return sub_2408E599C();
}

uint64_t sub_240861760()
{
  sub_2404FA028(&qword_257014720, type metadata accessor for ToolKitProtoIdSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate.Template);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoSearchableItemPredicate.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2408617CC(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013230, 1, (uint64_t)"searchableItem", 14);
}

uint64_t static ToolKitProtoSearchableItemPredicate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9CC8, (uint64_t)qword_257013230, a1);
}

uint64_t ToolKitProtoSearchableItemPredicate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A8]);
}

void ToolKitProtoSearchableItemPredicate.traverse<A>(visitor:)()
{
  sub_240888A48();
}

uint64_t ToolKitProtoSearchableItemPredicate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSearchableItemPredicate, &qword_257013E90, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate);
}

unint64_t sub_240861858()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_240861874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoDisplayRepresentation.Storage.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_240861888()
{
  ToolKitProtoSearchableItemPredicate.traverse<A>(visitor:)();
}

uint64_t sub_24086189C()
{
  sub_2404FA028(&qword_257014FE0, type metadata accessor for ToolKitProtoSearchableItemPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate);
  return sub_2408E5828();
}

uint64_t sub_2408618EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9CC8, (uint64_t)qword_257013230, a1);
}

uint64_t sub_240861908()
{
  sub_2404FA028(&qword_257014738, type metadata accessor for ToolKitProtoSearchableItemPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate);
  return sub_2408E599C();
}

uint64_t sub_240861948()
{
  sub_2404FA028(&qword_257014738, type metadata accessor for ToolKitProtoSearchableItemPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate);
  return sub_2408E59A8();
}

uint64_t sub_240861998(uint64_t *a1, uint64_t a2)
{
  return sub_2404E0934(a1, a2, type metadata accessor for ToolKitProtoSearchableItemPredicate) & 1;
}

uint64_t sub_2408619B8()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013248 = 0xD00000000000001FLL;
  unk_257013250 = 0x8000000240929B70;
  return result;
}

uint64_t static ToolKitProtoSearchableItemPredicate.Template.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9CD0, &qword_257013248);
}

uint64_t sub_240861A44(uint64_t a1)
{
  return sub_2404C9600(a1, qword_257013258);
}

uint64_t static ToolKitProtoSearchableItemPredicate.Template._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9CD8, (uint64_t)qword_257013258, a1);
}

uint64_t ToolKitProtoSearchableItemPredicate.Template.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t ToolKitProtoSearchableItemPredicate.Template.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSearchableItemPredicate.Template, &qword_257013E98, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate.Template);
}

uint64_t sub_240861AA0(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9CD0, &qword_257013248);
}

uint64_t sub_240861AC0()
{
  sub_2404FA028(&qword_257014FD8, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate.Template);
  return sub_2408E5828();
}

uint64_t sub_240861B10@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9CD8, (uint64_t)qword_257013258, a1);
}

uint64_t sub_240861B2C()
{
  sub_2404FA028(&qword_257014750, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate.Template);
  return sub_2408E599C();
}

uint64_t sub_240861B6C()
{
  sub_2404FA028(&qword_257014750, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate.Template);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoAllPredicate.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_240861BD8(uint64_t a1)
{
  return sub_2404C9600(a1, qword_257013270);
}

uint64_t static ToolKitProtoAllPredicate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9CE0, (uint64_t)qword_257013270, a1);
}

uint64_t ToolKitProtoAllPredicate.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t ToolKitProtoAllPredicate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoAllPredicate, &qword_257013EA0, (uint64_t)&protocol conformance descriptor for ToolKitProtoAllPredicate);
}

unint64_t sub_240861C30()
{
  return 0xD000000000000014;
}

uint64_t sub_240861C4C()
{
  sub_2404FA028(&qword_257014FD0, type metadata accessor for ToolKitProtoAllPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoAllPredicate);
  return sub_2408E5828();
}

uint64_t sub_240861C9C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9CE0, (uint64_t)qword_257013270, a1);
}

uint64_t sub_240861CB8()
{
  sub_2404FA028(&qword_257014768, type metadata accessor for ToolKitProtoAllPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoAllPredicate);
  return sub_2408E599C();
}

uint64_t sub_240861CF8()
{
  sub_2404FA028(&qword_257014768, type metadata accessor for ToolKitProtoAllPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoAllPredicate);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoValidPredicate.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_240861D64(uint64_t a1)
{
  return sub_2404C9600(a1, qword_257013288);
}

uint64_t static ToolKitProtoValidPredicate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9CE8, (uint64_t)qword_257013288, a1);
}

uint64_t ToolKitProtoValidPredicate.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t ToolKitProtoValidPredicate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoValidPredicate, &qword_257013EA8, (uint64_t)&protocol conformance descriptor for ToolKitProtoValidPredicate);
}

unint64_t sub_240861DBC()
{
  return 0xD000000000000016;
}

uint64_t sub_240861DD8()
{
  sub_2404FA028(&qword_257014FC8, type metadata accessor for ToolKitProtoValidPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoValidPredicate);
  return sub_2408E5828();
}

uint64_t sub_240861E28@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9CE8, (uint64_t)qword_257013288, a1);
}

uint64_t sub_240861E44()
{
  sub_2404FA028(&qword_257014780, type metadata accessor for ToolKitProtoValidPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoValidPredicate);
  return sub_2408E599C();
}

uint64_t sub_240861E84()
{
  sub_2404FA028(&qword_257014780, type metadata accessor for ToolKitProtoValidPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoValidPredicate);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoSuggestedPredicate.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_240861EF0(uint64_t a1)
{
  return sub_2404C9600(a1, qword_2570132A0);
}

uint64_t static ToolKitProtoSuggestedPredicate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9CF0, (uint64_t)qword_2570132A0, a1);
}

uint64_t ToolKitProtoSuggestedPredicate.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t ToolKitProtoSuggestedPredicate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSuggestedPredicate, &qword_257013EB0, (uint64_t)&protocol conformance descriptor for ToolKitProtoSuggestedPredicate);
}

unint64_t sub_240861F48()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_240861F64()
{
  sub_2404FA028(&qword_257014FC0, type metadata accessor for ToolKitProtoSuggestedPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSuggestedPredicate);
  return sub_2408E5828();
}

uint64_t sub_240861FB4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9CF0, (uint64_t)qword_2570132A0, a1);
}

uint64_t sub_240861FD0()
{
  sub_2404FA028(&qword_257014798, type metadata accessor for ToolKitProtoSuggestedPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSuggestedPredicate);
  return sub_2408E599C();
}

uint64_t sub_240862010()
{
  sub_2404FA028(&qword_257014798, type metadata accessor for ToolKitProtoSuggestedPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSuggestedPredicate);
  return sub_2408E59A8();
}

uint64_t static ToolKitProtoQuery.protoMessageName.getter()
{
  return 0x2E74694B6C6F6F54;
}

uint64_t sub_240862084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570132B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570132B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "predicate";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "sort";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "limit";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9CF8, (uint64_t)qword_2570132B8, a1);
}

uint64_t ToolKitProtoQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        sub_2408292D8();
        v12 = v11;
        sub_2408E58A0();
        goto LABEL_5;
      }
      if (result == 1)
      {
        v12 = v11;
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoQuery, type metadata accessor for ToolKitProtoQuery.AnyPredicate, &qword_2570147D8, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery.AnyPredicate);
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    type metadata accessor for ToolKitProtoQuery(0);
    v12 = v11;
    sub_2408E58F4();
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t ToolKitProtoQuery.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_24086245C((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3)
    {
      sub_2408292D8();
      sub_2408E59E4();
    }
    sub_2408625D0((uint64_t)v3, a1, a2, a3, type metadata accessor for ToolKitProtoQuery);
    type metadata accessor for ToolKitProtoQuery(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24086245C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C918);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoQuery(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_25700C918);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C918);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
  sub_2404FA028(&qword_2570147D8, type metadata accessor for ToolKitProtoQuery.AnyPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery.AnyPredicate);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
}

uint64_t sub_2408625D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 24) + 8) & 1) == 0)
    return sub_2408E5A14();
  return result;
}

uint64_t ToolKitProtoQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoQuery, &qword_257013EB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery);
}

uint64_t sub_240862664@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t result;

  v4 = &a2[*(int *)(a1 + 20)];
  v5 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &a2[*(int *)(a1 + 24)];
  *(_QWORD *)v6 = 0;
  v6[8] = 1;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  return result;
}

uint64_t sub_2408626D8()
{
  return 0x2E74694B6C6F6F54;
}

uint64_t sub_2408626FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoQuery.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240862710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoQuery.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240862724()
{
  sub_2404FA028(&qword_257014FB8, type metadata accessor for ToolKitProtoQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery);
  return sub_2408E5828();
}

uint64_t sub_240862774@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9CF8, (uint64_t)qword_2570132B8, a1);
}

uint64_t sub_240862790()
{
  sub_2404FA028(&qword_2570147B0, type metadata accessor for ToolKitProtoQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery);
  return sub_2408E599C();
}

uint64_t sub_2408627D0()
{
  sub_2404FA028(&qword_2570147B0, type metadata accessor for ToolKitProtoQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery);
  return sub_2408E59A8();
}

uint64_t sub_240862824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570132D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570132D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "SortOrder_UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 21;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "SortOrder_FORWARD";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "SortOrder_REVERSE";
  *(_QWORD *)(v12 + 8) = 17;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoQuery.SortOrder._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D00, (uint64_t)qword_2570132D0, a1);
}

uint64_t sub_2408629CC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D00, (uint64_t)qword_2570132D0, a1);
}

uint64_t sub_2408629EC()
{
  uint64_t result;
  _QWORD v1[2];

  strcpy((char *)v1, "ToolKit.Query");
  HIWORD(v1[1]) = -4864;
  result = sub_2408E5D50();
  qword_2570132E8 = v1[0];
  unk_2570132F0 = v1[1];
  return result;
}

uint64_t static ToolKitProtoQuery.AnyPredicate.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9D08, &qword_2570132E8);
}

uint64_t sub_240862A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570132F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570132F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8A00;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "comparison";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "compound";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "stringSearch";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "idSearch";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "all";
  *((_QWORD *)v17 + 1) = 3;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "suggested";
  *((_QWORD *)v19 + 1) = 9;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "searchableItem";
  *((_QWORD *)v21 + 1) = 14;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "valid";
  *((_QWORD *)v23 + 1) = 5;
  v23[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoQuery.AnyPredicate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D10, (uint64_t)qword_2570132F8, a1);
}

uint64_t ToolKitProtoQuery.AnyPredicate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240862EB0(v5, a1, a2, a3);
          break;
        case 2:
          sub_2408632F0(v5, a1, a2, a3);
          break;
        case 3:
          sub_240863734(v5, a1, a2, a3);
          break;
        case 4:
          sub_240863B78(v5, a1, a2, a3);
          break;
        case 5:
          sub_240863FBC(v5, a1, a2, a3);
          break;
        case 6:
          sub_240864400(v5, a1, a2, a3);
          break;
        case 7:
          sub_240864844(v5, a1, a2, a3);
          break;
        case 8:
          sub_240864C88(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240862EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoComparisonPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015348);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C920);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C920);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015348);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoComparisonPredicate);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoComparisonPredicate);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_257013E60, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015348);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015348);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015348);
    return sub_2403A97FC((uint64_t)v33, &qword_257015348);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoComparisonPredicate);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015348);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C920);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoComparisonPredicate);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2408632F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoCompoundPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015350);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C920);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C920);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015350);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoCompoundPredicate);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoCompoundPredicate);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570146B0, type metadata accessor for ToolKitProtoCompoundPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoCompoundPredicate);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015350);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015350);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015350);
    return sub_2403A97FC((uint64_t)v33, &qword_257015350);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoCompoundPredicate);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015350);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C920);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoCompoundPredicate);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240863734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoStringSearchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015358);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C920);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C920);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015358);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoStringSearchPredicate);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoStringSearchPredicate);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570146D8, type metadata accessor for ToolKitProtoStringSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015358);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015358);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015358);
    return sub_2403A97FC((uint64_t)v33, &qword_257015358);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoStringSearchPredicate);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015358);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C920);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoStringSearchPredicate);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240863B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoIdSearchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015360);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C920);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C920);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015360);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoIdSearchPredicate);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoIdSearchPredicate);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014708, type metadata accessor for ToolKitProtoIdSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015360);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015360);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015360);
    return sub_2403A97FC((uint64_t)v33, &qword_257015360);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoIdSearchPredicate);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015360);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C920);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoIdSearchPredicate);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240863FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoAllPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDD8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C920);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C920);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFBDD8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoAllPredicate);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoAllPredicate);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014768, type metadata accessor for ToolKitProtoAllPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoAllPredicate);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFBDD8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFBDD8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFBDD8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFBDD8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoAllPredicate);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFBDD8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C920);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoAllPredicate);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240864400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDE0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C920);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C920);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFBDE0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoSuggestedPredicate);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoSuggestedPredicate);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014798, type metadata accessor for ToolKitProtoSuggestedPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSuggestedPredicate);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFBDE0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFBDE0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFBDE0);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFBDE0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoSuggestedPredicate);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFBDE0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C920);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoSuggestedPredicate);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240864844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoSearchableItemPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015368);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C920);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C920);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015368);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoSearchableItemPredicate);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoSearchableItemPredicate);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014738, type metadata accessor for ToolKitProtoSearchableItemPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015368);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015368);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015368);
    return sub_2403A97FC((uint64_t)v33, &qword_257015368);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoSearchableItemPredicate);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015368);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C920);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoSearchableItemPredicate);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240864C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t valid;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  valid = type metadata accessor for ToolKitProtoValidPredicate(0);
  v6 = *(_QWORD *)(valid - 8);
  v7 = MEMORY[0x24BDAC7A8](valid);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDF0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = valid;
  v25(&v36[-v23], 1, 1, valid);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C920);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C920);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFBDF0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoValidPredicate);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoValidPredicate);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014780, type metadata accessor for ToolKitProtoValidPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoValidPredicate);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFBDF0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFBDF0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFBDF0);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFBDF0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoValidPredicate);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFBDF0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C920);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoValidPredicate);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoQuery.AnyPredicate.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_25700C920);
  v4 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_240865198 + 4 * byte_2409111A9[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  return sub_2408E578C();
}

uint64_t sub_2408652D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoComparisonPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C920);
  v8 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C920);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoComparisonPredicate);
    sub_2404FA028(&qword_257013E60, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoComparisonPredicate);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
  __break(1u);
  return result;
}

uint64_t sub_240865470(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoCompoundPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C920);
  v8 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C920);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoCompoundPredicate);
    sub_2404FA028(&qword_2570146B0, type metadata accessor for ToolKitProtoCompoundPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoCompoundPredicate);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoCompoundPredicate);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
  __break(1u);
  return result;
}

uint64_t sub_240865610(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoStringSearchPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C920);
  v8 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C920);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoStringSearchPredicate);
    sub_2404FA028(&qword_2570146D8, type metadata accessor for ToolKitProtoStringSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoStringSearchPredicate);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
  __break(1u);
  return result;
}

uint64_t sub_2408657B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoIdSearchPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C920);
  v8 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C920);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoIdSearchPredicate);
    sub_2404FA028(&qword_257014708, type metadata accessor for ToolKitProtoIdSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoIdSearchPredicate);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
  __break(1u);
  return result;
}

uint64_t sub_240865950(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoAllPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C920);
  v8 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C920);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoAllPredicate);
    sub_2404FA028(&qword_257014768, type metadata accessor for ToolKitProtoAllPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoAllPredicate);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoAllPredicate);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
  __break(1u);
  return result;
}

uint64_t sub_240865AF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C920);
  v8 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C920);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoSuggestedPredicate);
    sub_2404FA028(&qword_257014798, type metadata accessor for ToolKitProtoSuggestedPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSuggestedPredicate);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSuggestedPredicate);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
  __break(1u);
  return result;
}

uint64_t sub_240865C90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoSearchableItemPredicate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C920);
  v8 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C920);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoSearchableItemPredicate);
    sub_2404FA028(&qword_257014738, type metadata accessor for ToolKitProtoSearchableItemPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSearchableItemPredicate);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
  __break(1u);
  return result;
}

uint64_t sub_240865E30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t valid;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  valid = type metadata accessor for ToolKitProtoValidPredicate(0);
  MEMORY[0x24BDAC7A8](valid);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C920);
  v8 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C920);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoValidPredicate);
    sub_2404FA028(&qword_257014780, type metadata accessor for ToolKitProtoValidPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoValidPredicate);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoValidPredicate);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoQuery.AnyPredicate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoQuery.AnyPredicate, &qword_257013EC0, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery.AnyPredicate);
}

uint64_t sub_240865FF0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind, a1);
}

uint64_t sub_240865FFC(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9D08, &qword_2570132E8);
}

uint64_t sub_24086601C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoQuery.AnyPredicate.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240866030()
{
  return ToolKitProtoQuery.AnyPredicate.traverse<A>(visitor:)();
}

uint64_t sub_240866044()
{
  sub_2404FA028(&qword_257014FB0, type metadata accessor for ToolKitProtoQuery.AnyPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery.AnyPredicate);
  return sub_2408E5828();
}

uint64_t sub_240866094@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D10, (uint64_t)qword_2570132F8, a1);
}

uint64_t sub_2408660B0()
{
  sub_2404FA028(&qword_2570147D8, type metadata accessor for ToolKitProtoQuery.AnyPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery.AnyPredicate);
  return sub_2408E599C();
}

uint64_t sub_2408660F0()
{
  sub_2404FA028(&qword_2570147D8, type metadata accessor for ToolKitProtoQuery.AnyPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery.AnyPredicate);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoRuntimePlatformVersion.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240866160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013310);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013310);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "major";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "minor";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "patch";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "isWildcard";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRuntimePlatformVersion._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D18, (uint64_t)qword_257013310, a1);
}

uint64_t ToolKitProtoRuntimePlatformVersion.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          sub_2408E58E8();
          break;
        case 4:
          sub_2408E5888();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoRuntimePlatformVersion.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_DWORD *)v0 || (result = sub_2408E5A08(), !v1))
  {
    if (!*(_DWORD *)(v0 + 4) || (result = sub_2408E5A08(), !v1))
    {
      if (!*(_DWORD *)(v0 + 8) || (result = sub_2408E5A08(), !v1))
      {
        if (*(_BYTE *)(v0 + 12) != 1 || (result = sub_2408E59D8(), !v1))
        {
          type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
          return sub_2408E578C();
        }
      }
    }
  }
  return result;
}

uint64_t ToolKitProtoRuntimePlatformVersion.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRuntimePlatformVersion, &qword_257013EC8, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t sub_240866534@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)((char *)a1 + 5) = 0;
  *a1 = 0;
  return result;
}

unint64_t sub_240866564()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240866580()
{
  return ToolKitProtoRuntimePlatformVersion.decodeMessage<A>(decoder:)();
}

uint64_t sub_240866594()
{
  return ToolKitProtoRuntimePlatformVersion.traverse<A>(visitor:)();
}

uint64_t sub_2408665A8()
{
  sub_2404FA028(&qword_257014FA8, type metadata accessor for ToolKitProtoRuntimePlatformVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
  return sub_2408E5828();
}

uint64_t sub_2408665F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D18, (uint64_t)qword_257013310, a1);
}

uint64_t sub_240866614()
{
  sub_2404FA028(&qword_2570147F0, type metadata accessor for ToolKitProtoRuntimePlatformVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
  return sub_2408E599C();
}

uint64_t sub_240866654()
{
  sub_2404FA028(&qword_2570147F0, type metadata accessor for ToolKitProtoRuntimePlatformVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoRuntimeRequirement.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2408666C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013328);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013328);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "platform";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "deviceCapability";
  *(_QWORD *)(v11 + 8) = 16;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "featureFlag";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "deviceState";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRuntimeRequirement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D20, (uint64_t)qword_257013328, a1);
}

uint64_t ToolKitProtoRuntimeRequirement.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240866994((uint64_t)v5, a1, a2, a3);
          break;
        case 2:
          sub_240866DD4((uint64_t)v5, a1, a2, a3);
          break;
        case 3:
          sub_240867218((uint64_t)v5, a1, a2, a3);
          break;
        case 4:
          sub_24086765C(a1, v5);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240866994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C928);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015328);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C928);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C928);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015328);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_257014828, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015328);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015328);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015328);
    return sub_2403A97FC((uint64_t)v33, &qword_257015328);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015328);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C928);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240866DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C928);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015330);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C928);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C928);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015330);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014840, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015330);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015330);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015330);
    return sub_2403A97FC((uint64_t)v33, &qword_257015330);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015330);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C928);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240867218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C928);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015338);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C928);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C928);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015338);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014870, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.FeatureFlag);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015338);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015338);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015338);
    return sub_2403A97FC((uint64_t)v33, &qword_257015338);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015338);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C928);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24086765C(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C928);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 2;
  sub_240829294();
  result = sub_2408E5894();
  if (!v2)
  {
    v8 = v13;
    if (v13 != 2)
    {
      sub_2403A9210((uint64_t)a2, (uint64_t)v6, &qword_25700C928);
      v9 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
      v12 = *(_QWORD *)(v9 - 8);
      v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v9);
      sub_2403A97FC((uint64_t)v6, &qword_25700C928);
      if (v10 != 1)
        sub_2408E5864();
      sub_2403A97FC((uint64_t)a2, &qword_25700C928);
      *a2 = v8 & 1;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v9);
    }
  }
  return result;
}

uint64_t ToolKitProtoRuntimeRequirement.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C928);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_25700C928);
  v4 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_2408678AC + 4 * byte_2409111B9[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for ToolKitProtoRuntimeRequirement(0);
  return sub_2408E578C();
}

uint64_t sub_240867980(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C928);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C928);
  v8 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C928);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
    sub_2404FA028(&qword_257014828, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
  __break(1u);
  return result;
}

uint64_t sub_240867B1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C928);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C928);
  v8 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C928);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability);
    sub_2404FA028(&qword_257014840, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
  __break(1u);
  return result;
}

uint64_t sub_240867CBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C928);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C928);
  v8 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C928);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag);
    sub_2404FA028(&qword_257014870, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.FeatureFlag);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
  __break(1u);
  return result;
}

uint64_t sub_240867E5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C928);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C928);
  v5 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C928);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    v8 = *v4;
    sub_240829294();
    return sub_2408E59E4();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoRuntimeRequirement.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRuntimeRequirement, &qword_257013ED0, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement);
}

uint64_t sub_240867FA8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoRuntimeRequirementKind, a1);
}

unint64_t sub_240867FB4()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_240867FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRuntimeRequirement.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240867FE4()
{
  return ToolKitProtoRuntimeRequirement.traverse<A>(visitor:)();
}

uint64_t sub_240867FF8()
{
  sub_2404FA028(&qword_257014FA0, type metadata accessor for ToolKitProtoRuntimeRequirement, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement);
  return sub_2408E5828();
}

uint64_t sub_240868048@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D20, (uint64_t)qword_257013328, a1);
}

uint64_t sub_240868064()
{
  sub_2404FA028(&qword_257013CB0, type metadata accessor for ToolKitProtoRuntimeRequirement, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement);
  return sub_2408E599C();
}

uint64_t sub_2408680A4()
{
  sub_2404FA028(&qword_257013CB0, type metadata accessor for ToolKitProtoRuntimeRequirement, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement);
  return sub_2408E59A8();
}

uint64_t sub_2408680F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013340);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013340);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "DeviceState_UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 23;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "DeviceState_UNLOCKED";
  *((_QWORD *)v11 + 1) = 20;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRuntimeRequirement.DeviceState._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D28, (uint64_t)qword_257013340, a1);
}

uint64_t sub_240868264@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D28, (uint64_t)qword_257013340, a1);
}

uint64_t sub_240868280()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013358 = 0xD00000000000001ALL;
  unk_257013360 = 0x8000000240929C10;
  return result;
}

uint64_t static ToolKitProtoRuntimeRequirement.AvailabilityAnnotation.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9D30, &qword_257013358);
}

uint64_t sub_240868310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013368);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013368);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "platform";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "introducingVersion";
  *(_QWORD *)(v11 + 8) = 18;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "deprecatingVersion";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "obsoletingVersion";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRuntimeRequirement.AvailabilityAnnotation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D38, (uint64_t)qword_257013368, a1);
}

uint64_t ToolKitProtoRuntimeRequirement.AvailabilityAnnotation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_24082964C();
          v12 = v11;
          sub_2408E58A0();
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, type metadata accessor for ToolKitProtoRuntimePlatformVersion, &qword_2570147F0, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, type metadata accessor for ToolKitProtoRuntimePlatformVersion, &qword_2570147F0, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, type metadata accessor for ToolKitProtoRuntimePlatformVersion, &qword_2570147F0, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoRuntimeRequirement.AvailabilityAnnotation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  if (!*v3 || (sub_24082964C(), result = sub_2408E59E4(), !v4))
  {
    result = sub_240868778((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      sub_2408688EC((uint64_t)v3, a1, a2, a3);
      sub_240868A60((uint64_t)v3, a1, a2, a3);
      type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_240868778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C930);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_25700C930);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C930);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
  sub_2404FA028(&qword_2570147F0, type metadata accessor for ToolKitProtoRuntimePlatformVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t sub_2408688EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C930);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_25700C930);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C930);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
  sub_2404FA028(&qword_2570147F0, type metadata accessor for ToolKitProtoRuntimePlatformVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t sub_240868A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C930);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_25700C930);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C930);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
  sub_2404FA028(&qword_2570147F0, type metadata accessor for ToolKitProtoRuntimePlatformVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t ToolKitProtoRuntimeRequirement.AvailabilityAnnotation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, &qword_257013ED8, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
}

uint64_t sub_240868BF0@<X0>(int *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v4;
  uint64_t v5;
  void (*v6)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v4 = &a2[a1[5]];
  v5 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
  v6 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(&a2[a1[6]], 1, 1, v5);
  v6(&a2[a1[7]], 1, 1, v5);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  return result;
}

uint64_t sub_240868C90(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9D30, &qword_257013358);
}

uint64_t sub_240868CB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRuntimeRequirement.AvailabilityAnnotation.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240868CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRuntimeRequirement.AvailabilityAnnotation.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240868CD8()
{
  sub_2404FA028(&qword_257014F98, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
  return sub_2408E5828();
}

uint64_t sub_240868D28@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D38, (uint64_t)qword_257013368, a1);
}

uint64_t sub_240868D44()
{
  sub_2404FA028(&qword_257014828, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
  return sub_2408E599C();
}

uint64_t sub_240868D84()
{
  sub_2404FA028(&qword_257014828, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
  return sub_2408E59A8();
}

uint64_t sub_240868DD8()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013380 = 0xD00000000000001ALL;
  *(_QWORD *)algn_257013388 = 0x8000000240929C10;
  return result;
}

uint64_t static ToolKitProtoRuntimeRequirement.DeviceCapability.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9D40, &qword_257013380);
}

uint64_t sub_240868E68(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013390, 1, (uint64_t)"mobileGestalt", 13);
}

uint64_t static ToolKitProtoRuntimeRequirement.DeviceCapability._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D48, (uint64_t)qword_257013390, a1);
}

uint64_t ToolKitProtoRuntimeRequirement.DeviceCapability.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404733C8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240868EBC);
}

uint64_t sub_240868EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v45 = a4;
  v44 = a3;
  v5 = type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v38 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (uint64_t)&v33 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C938);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v33 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015318);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v33 - v23;
  v39 = v6;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v25((char *)&v33 - v23, 1, 1, v5);
  v36 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C938);
  v34 = v14;
  v35 = v13;
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v37 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C938);
  }
  else
  {
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
    sub_2403A97FC((uint64_t)v24, &qword_257015318);
    v26 = v40;
    sub_2403A91CC((uint64_t)v17, v40, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
    sub_2403A91CC(v26, (uint64_t)v24, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
    v25(v24, 0, 1, v5);
  }
  v28 = (uint64_t)v41;
  v27 = v42;
  sub_2404FA028(&qword_257014858, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
  sub_2408E596C();
  if (v27)
    return sub_2403A97FC((uint64_t)v24, &qword_257015318);
  sub_2403A9210((uint64_t)v24, v28, &qword_257015318);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v28, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015318);
    return sub_2403A97FC(v28, &qword_257015318);
  }
  else
  {
    v30 = v28;
    v31 = v38;
    sub_2403A91CC(v30, v38, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
    if (v37 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015318);
    v32 = v36;
    sub_2403A97FC(v36, &qword_25700C938);
    sub_2403A91CC(v31, v32, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v35);
  }
}

uint64_t ToolKitProtoRuntimeRequirement.DeviceCapability.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240483ED0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2408692B0, (void (*)(_QWORD))type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability);
}

uint64_t sub_2408692B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C938);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C938);
  v8 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v4, &qword_25700C938);
  sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
  sub_2404FA028(&qword_257014858, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
}

uint64_t ToolKitProtoRuntimeRequirement.DeviceCapability.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability, &qword_257013EE0, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability);
}

uint64_t sub_240869440@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind, a1);
}

uint64_t sub_24086944C(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9D40, &qword_257013380);
}

uint64_t sub_24086946C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRuntimeRequirement.DeviceCapability.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240869480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoRuntimeRequirement.DeviceCapability.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240869494()
{
  sub_2404FA028(&qword_257014F90, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability);
  return sub_2408E5828();
}

uint64_t sub_2408694E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D48, (uint64_t)qword_257013390, a1);
}

uint64_t sub_240869500()
{
  sub_2404FA028(&qword_257014840, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability);
  return sub_2408E599C();
}

uint64_t sub_240869540()
{
  sub_2404FA028(&qword_257014840, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability);
  return sub_2408E59A8();
}

uint64_t sub_240869594()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9D40 != -1)
    swift_once();
  v1 = qword_257013380;
  v2 = *(_QWORD *)algn_257013388;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_2570133A8 = v1;
  unk_2570133B0 = v2;
  return result;
}

uint64_t static ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9D50, &qword_2570133A8);
}

uint64_t sub_240869648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570133B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570133B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D58, (uint64_t)qword_2570133B8, a1);
}

uint64_t ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2408E5888();
      }
      else if (result == 1)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    if (*(_BYTE *)(v0 + 16) != 1 || (result = sub_2408E59D8(), !v1))
    {
      type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt, &qword_257013EE8, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
}

uint64_t sub_240869940(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9D50, &qword_2570133A8);
}

uint64_t sub_240869960()
{
  return ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt.decodeMessage<A>(decoder:)();
}

uint64_t sub_240869974()
{
  return ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt.traverse<A>(visitor:)();
}

uint64_t sub_240869988()
{
  sub_2404FA028(&qword_257014F88, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
  return sub_2408E5828();
}

uint64_t sub_2408699D8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D58, (uint64_t)qword_2570133B8, a1);
}

uint64_t sub_2408699F4()
{
  sub_2404FA028(&qword_257014858, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
  return sub_2408E599C();
}

uint64_t sub_240869A34()
{
  sub_2404FA028(&qword_257014858, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
  return sub_2408E59A8();
}

uint64_t sub_240869A88()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_2570133D0 = 0xD00000000000001ALL;
  *(_QWORD *)algn_2570133D8 = 0x8000000240929C10;
  return result;
}

uint64_t static ToolKitProtoRuntimeRequirement.FeatureFlag.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9D60, &qword_2570133D0);
}

uint64_t sub_240869B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570133E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570133E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "domain";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "feature";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "value";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoRuntimeRequirement.FeatureFlag._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D68, (uint64_t)qword_2570133E0, a1);
}

uint64_t ToolKitProtoRuntimeRequirement.FeatureFlag.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_2408E5888();
      }
      else if (result == 2 || result == 1)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoRuntimeRequirement.FeatureFlag.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    v5 = *(_QWORD *)(v0 + 24);
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = *(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_2408E5A38(), !v1))
    {
      if (*(_BYTE *)(v0 + 32) != 1 || (result = sub_2408E59D8(), !v1))
      {
        type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t ToolKitProtoRuntimeRequirement.FeatureFlag.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag, &qword_257013EF0, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.FeatureFlag);
}

uint64_t sub_240869EA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_BYTE *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_240869ED8(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9D60, &qword_2570133D0);
}

uint64_t sub_240869EF8()
{
  return ToolKitProtoRuntimeRequirement.FeatureFlag.decodeMessage<A>(decoder:)();
}

uint64_t sub_240869F0C()
{
  return ToolKitProtoRuntimeRequirement.FeatureFlag.traverse<A>(visitor:)();
}

uint64_t sub_240869F20()
{
  sub_2404FA028(&qword_257014F80, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.FeatureFlag);
  return sub_2408E5828();
}

uint64_t sub_240869F70@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D68, (uint64_t)qword_2570133E0, a1);
}

uint64_t sub_240869F8C()
{
  sub_2404FA028(&qword_257014870, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.FeatureFlag);
  return sub_2408E599C();
}

uint64_t sub_240869FCC()
{
  sub_2404FA028(&qword_257014870, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.FeatureFlag);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoToolSummaryString.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_24086A03C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_2570133F8, 1, (uint64_t)"components", 10);
}

uint64_t static ToolKitProtoToolSummaryString._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D70, (uint64_t)qword_2570133F8, a1);
}

uint64_t ToolKitProtoToolSummaryString.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ToolKitProtoToolSummaryString.Component, &qword_257013EF8, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString.Component);
}

uint64_t ToolKitProtoToolSummaryString.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ToolKitProtoToolSummaryString.Component, &qword_257013EF8, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString.Component, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolSummaryString);
}

uint64_t static ToolKitProtoToolSummaryString.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408C2B7C, type metadata accessor for ToolKitProtoToolSummaryString) & 1;
}

uint64_t ToolKitProtoToolSummaryString.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolSummaryString, &qword_257013F00, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString);
}

unint64_t sub_24086A118()
{
  return 0xD000000000000019;
}

uint64_t sub_24086A134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolSummaryString.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24086A148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolSummaryString.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24086A15C()
{
  sub_2404FA028(&qword_257014F78, type metadata accessor for ToolKitProtoToolSummaryString, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString);
  return sub_2408E5828();
}

uint64_t sub_24086A1AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D70, (uint64_t)qword_2570133F8, a1);
}

uint64_t sub_24086A1C8()
{
  sub_2404FA028(&qword_257014888, type metadata accessor for ToolKitProtoToolSummaryString, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString);
  return sub_2408E599C();
}

uint64_t sub_24086A208()
{
  sub_2404FA028(&qword_257014888, type metadata accessor for ToolKitProtoToolSummaryString, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString);
  return sub_2408E59A8();
}

uint64_t sub_24086A258(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408C2B7C, type metadata accessor for ToolKitProtoToolSummaryString) & 1;
}

uint64_t sub_24086A280()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013410 = 0xD000000000000019;
  *(_QWORD *)algn_257013418 = 0x8000000240929C30;
  return result;
}

uint64_t static ToolKitProtoToolSummaryString.Component.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9D78, &qword_257013410);
}

uint64_t sub_24086A30C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013420);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013420);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "text";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameter";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolSummaryString.Component._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D80, (uint64_t)qword_257013420, a1);
}

uint64_t ToolKitProtoToolSummaryString.Component.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2408E5858();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
    {
      sub_24086A518();
    }
    else if (result == 1)
    {
      sub_24086A518();
    }
  }
  return result;
}

uint64_t sub_24086A518()
{
  uint64_t v0;
  uint64_t result;

  result = sub_2408E5930();
  if (v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t ToolKitProtoToolSummaryString.Component.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t result;

  v2 = *(unsigned __int8 *)(v0 + 16);
  if (v2 != 255)
  {
    if ((v2 & 1) != 0)
    {
      result = sub_24086A6C4(v0);
      if (v1)
        return result;
    }
    else
    {
      result = sub_24086A688(v0);
      if (v1)
        return result;
    }
  }
  type metadata accessor for ToolKitProtoToolSummaryString.Component(0);
  return sub_2408E578C();
}

uint64_t sub_24086A688(uint64_t result)
{
  if ((*(_BYTE *)(result + 16) & 1) == 0)
    return sub_2408E5A38();
  __break(1u);
  return result;
}

uint64_t sub_24086A6C4(uint64_t result)
{
  int v1;

  v1 = *(unsigned __int8 *)(result + 16);
  if (v1 != 255 && (v1 & 1) != 0)
    return sub_2408E5A38();
  __break(1u);
  return result;
}

uint64_t ToolKitProtoToolSummaryString.Component.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolSummaryString.Component, &qword_257013F08, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString.Component);
}

uint64_t sub_24086A72C@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = -1;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t sub_24086A754(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9D78, &qword_257013410);
}

uint64_t sub_24086A774()
{
  return ToolKitProtoToolSummaryString.Component.decodeMessage<A>(decoder:)();
}

uint64_t sub_24086A788()
{
  return ToolKitProtoToolSummaryString.Component.traverse<A>(visitor:)();
}

uint64_t sub_24086A79C()
{
  sub_2404FA028(&qword_257014F70, type metadata accessor for ToolKitProtoToolSummaryString.Component, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString.Component);
  return sub_2408E5828();
}

uint64_t sub_24086A7EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D80, (uint64_t)qword_257013420, a1);
}

uint64_t sub_24086A808()
{
  sub_2404FA028(&qword_257013EF8, type metadata accessor for ToolKitProtoToolSummaryString.Component, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString.Component);
  return sub_2408E599C();
}

uint64_t sub_24086A848()
{
  sub_2404FA028(&qword_257013EF8, type metadata accessor for ToolKitProtoToolSummaryString.Component, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString.Component);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoToolInvocationSignature.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_24086A8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013438);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013438);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "visibleParameterKeys";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "invisibleParameterKeys";
  *((_QWORD *)v11 + 1) = 22;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "valueConstraints";
  *(_QWORD *)(v12 + 8) = 16;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolInvocationSignature._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D88, (uint64_t)qword_257013438, a1);
}

uint64_t ToolKitProtoToolInvocationSignature.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_24086AB1C();
      }
      else if (result == 2 || result == 1)
      {
        sub_2408E590C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24086AB1C()
{
  sub_2408E5768();
  type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations(0);
  sub_2404FA028(&qword_257013F10, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations);
  sub_2404FA028(&qword_257013F18, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations);
  return sub_2408E5840();
}

uint64_t ToolKitProtoToolInvocationSignature.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*v0 + 16) || (result = sub_2408E5A20(), !v1))
  {
    if (!*(_QWORD *)(v0[1] + 16) || (result = sub_2408E5A20(), !v1))
    {
      if (!*(_QWORD *)(v0[2] + 16)
        || (sub_2408E5768(),
            type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations(0),
            sub_2404FA028(&qword_257013F10, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations), sub_2404FA028(&qword_257013F18, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations), result = sub_2408E59B4(), !v1))
      {
        type metadata accessor for ToolKitProtoToolInvocationSignature(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t ToolKitProtoToolInvocationSignature.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolInvocationSignature, &qword_257013F20, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature);
}

unint64_t sub_24086AD7C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  unint64_t result;

  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v2;
  result = sub_2403A8CE0(v2);
  a1[2] = result;
  return result;
}

unint64_t sub_24086ADB8()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_24086ADD4()
{
  return ToolKitProtoToolInvocationSignature.decodeMessage<A>(decoder:)();
}

uint64_t sub_24086ADE8()
{
  return ToolKitProtoToolInvocationSignature.traverse<A>(visitor:)();
}

uint64_t sub_24086ADFC()
{
  sub_2404FA028(&qword_257014F68, type metadata accessor for ToolKitProtoToolInvocationSignature, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature);
  return sub_2408E5828();
}

uint64_t sub_24086AE4C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D88, (uint64_t)qword_257013438, a1);
}

uint64_t sub_24086AE68()
{
  sub_2404FA028(&qword_2570148B0, type metadata accessor for ToolKitProtoToolInvocationSignature, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature);
  return sub_2408E599C();
}

uint64_t sub_24086AEA8()
{
  sub_2404FA028(&qword_2570148B0, type metadata accessor for ToolKitProtoToolInvocationSignature, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature);
  return sub_2408E59A8();
}

uint64_t sub_24086AEFC()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013450 = 0xD00000000000001FLL;
  *(_QWORD *)algn_257013458 = 0x8000000240929C50;
  return result;
}

uint64_t static ToolKitProtoToolInvocationSignature.ListOfRelations.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9D90, &qword_257013450);
}

uint64_t sub_24086AF8C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013460, 1, (uint64_t)"relation", 8);
}

uint64_t static ToolKitProtoToolInvocationSignature.ListOfRelations._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9D98, (uint64_t)qword_257013460, a1);
}

uint64_t ToolKitProtoToolInvocationSignature.ListOfRelations.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, &qword_257013F28, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

uint64_t ToolKitProtoToolInvocationSignature.ListOfRelations.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, &qword_257013F28, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
}

uint64_t static ToolKitProtoToolInvocationSignature.ListOfRelations.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408C241C, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations) & 1;
}

uint64_t ToolKitProtoToolInvocationSignature.ListOfRelations.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, &qword_257013F18, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations);
}

uint64_t sub_24086B068(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9D90, &qword_257013450);
}

uint64_t sub_24086B088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolInvocationSignature.ListOfRelations.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24086B09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolInvocationSignature.ListOfRelations.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24086B0B0()
{
  sub_2404FA028(&qword_257014F60, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations);
  return sub_2408E5828();
}

uint64_t sub_24086B100@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9D98, (uint64_t)qword_257013460, a1);
}

uint64_t sub_24086B11C()
{
  sub_2404FA028(&qword_257013F10, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations);
  return sub_2408E599C();
}

uint64_t sub_24086B15C()
{
  sub_2404FA028(&qword_257013F10, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations);
  return sub_2408E59A8();
}

uint64_t sub_24086B1AC(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408C241C, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations) & 1;
}

unint64_t static ToolKitProtoSampleInvocationDefinition.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_24086B1F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013478);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013478);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "phrases";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "expectedResult";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "negativePhrases";
  *(_QWORD *)(v12 + 8) = 15;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoSampleInvocationDefinition._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9DA0, (uint64_t)qword_257013478, a1);
}

uint64_t ToolKitProtoSampleInvocationDefinition.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      switch(result)
      {
        case 3:
          goto LABEL_10;
        case 2:
          sub_2408E5930();
          break;
        case 1:
LABEL_10:
          sub_2408E590C();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoSampleInvocationDefinition.traverse<A>(visitor:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  result = *v0;
  if (!*(_QWORD *)(*v0 + 16) || (result = sub_2408E5A20(), !v1))
  {
    if (v0[3])
      result = sub_2408E5A38();
    if (!v1)
    {
      if (*(_QWORD *)(v0[1] + 16))
        sub_2408E5A20();
      type metadata accessor for ToolKitProtoSampleInvocationDefinition(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t ToolKitProtoSampleInvocationDefinition.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSampleInvocationDefinition, &qword_257013F30, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
}

uint64_t sub_24086B558@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  a1[2] = 0;
  a1[3] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  v3 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v3;
  return result;
}

unint64_t sub_24086B590()
{
  return 0xD000000000000022;
}

uint64_t sub_24086B5AC()
{
  return ToolKitProtoSampleInvocationDefinition.decodeMessage<A>(decoder:)();
}

uint64_t sub_24086B5C0()
{
  return ToolKitProtoSampleInvocationDefinition.traverse<A>(visitor:)();
}

uint64_t sub_24086B5D4()
{
  sub_2404FA028(&qword_257014F58, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
  return sub_2408E5828();
}

uint64_t sub_24086B624@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9DA0, (uint64_t)qword_257013478, a1);
}

uint64_t sub_24086B640()
{
  sub_2404FA028(&qword_257013CB8, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
  return sub_2408E599C();
}

uint64_t sub_24086B680()
{
  sub_2404FA028(&qword_257013CB8, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoAssistantSchemaVersion.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_24086B6F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013490);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013490);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "major";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "minor";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "patch";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoAssistantSchemaVersion._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9DA8, (uint64_t)qword_257013490, a1);
}

uint64_t ToolKitProtoAssistantSchemaVersion.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2 || result == 1)
        sub_2408E5954();
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoAssistantSchemaVersion.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (result = sub_2408E5A50(), !v1))
  {
    if (!v0[1] || (result = sub_2408E5A50(), !v1))
    {
      if (!v0[2] || (result = sub_2408E5A50(), !v1))
      {
        type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t ToolKitProtoAssistantSchemaVersion.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoAssistantSchemaVersion, &qword_257013F38, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaVersion);
}

uint64_t sub_24086BA40@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

unint64_t sub_24086BA70()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_24086BA8C()
{
  return ToolKitProtoAssistantSchemaVersion.decodeMessage<A>(decoder:)();
}

uint64_t sub_24086BAA0()
{
  return ToolKitProtoAssistantSchemaVersion.traverse<A>(visitor:)();
}

uint64_t sub_24086BAB4()
{
  sub_2404FA028(&qword_257014F50, type metadata accessor for ToolKitProtoAssistantSchemaVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaVersion);
  return sub_2408E5828();
}

uint64_t sub_24086BB04@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9DA8, (uint64_t)qword_257013490, a1);
}

uint64_t sub_24086BB20()
{
  sub_2404FA028(&qword_2570148E8, type metadata accessor for ToolKitProtoAssistantSchemaVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaVersion);
  return sub_2408E599C();
}

uint64_t sub_24086BB60()
{
  sub_2404FA028(&qword_2570148E8, type metadata accessor for ToolKitProtoAssistantSchemaVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaVersion);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoAssistantSchemaIdentifier.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_24086BBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570134A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570134A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "kind";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "version";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoAssistantSchemaIdentifier._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9DB0, (uint64_t)qword_2570134A8, a1);
}

uint64_t ToolKitProtoAssistantSchemaIdentifier.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, type metadata accessor for ToolKitProtoAssistantSchemaVersion, &qword_2570148E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaVersion);
      }
      else if (result == 1)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoAssistantSchemaIdentifier.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24044BC48(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_24086BE38, (void (*)(_QWORD))type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_24086BE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBB38);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFBB38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFBB38);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
  sub_2404FA028(&qword_2570148E8, type metadata accessor for ToolKitProtoAssistantSchemaVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaVersion);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
}

uint64_t ToolKitProtoAssistantSchemaIdentifier.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, &qword_257013F40, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_24086BFC8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404BF554(a1, type metadata accessor for ToolKitProtoAssistantSchemaVersion, a2);
}

unint64_t sub_24086BFD4()
{
  return 0xD000000000000021;
}

uint64_t sub_24086BFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAssistantSchemaIdentifier.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24086C004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAssistantSchemaIdentifier.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24086C018()
{
  sub_2404FA028(&qword_257014F48, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
  return sub_2408E5828();
}

uint64_t sub_24086C068@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9DB0, (uint64_t)qword_2570134A8, a1);
}

uint64_t sub_24086C084()
{
  sub_2404FA028(&qword_25700C540, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
  return sub_2408E599C();
}

uint64_t sub_24086C0C4()
{
  sub_2404FA028(&qword_25700C540, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoAssistantToolSchemaDefinition.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_24086C134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570134C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570134C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "identifier";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "name";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "description";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "parameters";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "sampleInvocations";
  *(_QWORD *)(v16 + 8) = 17;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoAssistantToolSchemaDefinition._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9DB8, (uint64_t)qword_2570134C0, a1);
}

uint64_t ToolKitProtoAssistantToolSchemaDefinition.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, &qword_25700C540, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
          goto LABEL_6;
        case 2:
          v12 = v11;
          sub_2408E593C();
          goto LABEL_6;
        case 3:
          type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition(0);
          v12 = v11;
          sub_2408E5930();
          goto LABEL_6;
        case 4:
          type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter(0);
          sub_2404FA028(&qword_257013F48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
          goto LABEL_5;
        case 5:
          type metadata accessor for ToolKitProtoSampleInvocationDefinition(0);
          sub_2404FA028(&qword_257013CB8, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
LABEL_5:
          v12 = v11;
          sub_2408E5960();
LABEL_6:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoAssistantToolSchemaDefinition.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  result = sub_24086C6A0((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    v6 = v3[1];
    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = *v3 & 0xFFFFFFFFFFFFLL;
    if (v7)
      sub_2408E5A38();
    sub_24086C814((uint64_t)v3);
    if (*(_QWORD *)(v3[2] + 16))
    {
      type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter(0);
      sub_2404FA028(&qword_257013F48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
      sub_2408E5A5C();
    }
    if (*(_QWORD *)(v3[3] + 16))
    {
      type metadata accessor for ToolKitProtoSampleInvocationDefinition(0);
      sub_2404FA028(&qword_257013CB8, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
      sub_2408E5A5C();
    }
    type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24086C6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C548);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_25700C548);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C548);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2404FA028(&qword_25700C540, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_24086C814(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 32) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t ToolKitProtoAssistantToolSchemaDefinition.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition, &qword_257013F50, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantToolSchemaDefinition);
}

uint64_t sub_24086C8A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  v4 = (char *)a2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (_QWORD *)((char *)a2 + *(int *)(a1 + 32));
  *v6 = 0;
  v6[1] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  v8 = MEMORY[0x24BEE4AF8];
  a2[2] = MEMORY[0x24BEE4AF8];
  a2[3] = v8;
  return result;
}

unint64_t sub_24086C924()
{
  return 0xD000000000000025;
}

uint64_t sub_24086C940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAssistantToolSchemaDefinition.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24086C954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAssistantToolSchemaDefinition.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24086C968()
{
  sub_2404FA028(&qword_257014F40, type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantToolSchemaDefinition);
  return sub_2408E5828();
}

uint64_t sub_24086C9B8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9DB8, (uint64_t)qword_2570134C0, a1);
}

uint64_t sub_24086C9D4()
{
  sub_2404FA028(&qword_257014910, type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantToolSchemaDefinition);
  return sub_2408E599C();
}

uint64_t sub_24086CA14()
{
  sub_2404FA028(&qword_257014910, type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantToolSchemaDefinition);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoAssistantTypeSchemaDefinition.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_24086CA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570134D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570134D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "entity";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "enumeration";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoAssistantTypeSchemaDefinition._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9DC0, (uint64_t)qword_2570134D8, a1);
}

uint64_t ToolKitProtoAssistantTypeSchemaDefinition.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24086CC14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24086CCB4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24086D0F8);
}

uint64_t sub_24086CC14(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t result;
  char v14;

  v9 = v5;
  while (1)
  {
    result = sub_2408E5858();
    if (v6 || (v14 & 1) != 0)
      break;
    if (result == 2)
    {
      a5(v9, a1, a2, a3);
    }
    else if (result == 1)
    {
      a4(v9, a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_24086CCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C940);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152F0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C940);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C940);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570152F0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_257014940, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570152F0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570152F0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570152F0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570152F0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570152F0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C940);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24086D0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C940);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152F8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C940);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C940);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570152F8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014958, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570152F8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570152F8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570152F8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570152F8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570152F8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C940);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoAssistantTypeSchemaDefinition.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C940);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v4, &qword_25700C940);
  v5 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    goto LABEL_6;
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_24086D828(v0);
  else
    sub_24086D688(v0);
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
  if (!v1)
  {
LABEL_6:
    type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24086D688(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C940);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C940);
  v8 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C940);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
    sub_2404FA028(&qword_257014940, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
  __break(1u);
  return result;
}

uint64_t sub_24086D828(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C940);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C940);
  v8 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C940);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
    sub_2404FA028(&qword_257014958, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoAssistantTypeSchemaDefinition.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition, &qword_257013F58, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition);
}

uint64_t sub_24086D9E8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind, a1);
}

unint64_t sub_24086D9F4()
{
  return 0xD000000000000025;
}

uint64_t sub_24086DA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAssistantTypeSchemaDefinition.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24086DA24()
{
  return ToolKitProtoAssistantTypeSchemaDefinition.traverse<A>(visitor:)();
}

uint64_t sub_24086DA38()
{
  sub_2404FA028(&qword_257014F38, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition);
  return sub_2408E5828();
}

uint64_t sub_24086DA88@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9DC0, (uint64_t)qword_2570134D8, a1);
}

uint64_t sub_24086DAA4()
{
  sub_2404FA028(&qword_257014928, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition);
  return sub_2408E599C();
}

uint64_t sub_24086DAE4()
{
  sub_2404FA028(&qword_257014928, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition);
  return sub_2408E59A8();
}

uint64_t sub_24086DB38()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_2570134F0 = 0xD000000000000025;
  *(_QWORD *)algn_2570134F8 = 0x8000000240929D20;
  return result;
}

uint64_t static ToolKitProtoAssistantTypeSchemaDefinition.Entity.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9DC8, &qword_2570134F0);
}

uint64_t sub_24086DBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013500);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013500);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "identifier";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "properties";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "displayRepresentation";
  *(_QWORD *)(v12 + 8) = 21;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoAssistantTypeSchemaDefinition.Entity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9DD0, (uint64_t)qword_257013500, a1);
}

uint64_t ToolKitProtoAssistantTypeSchemaDefinition.Entity.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24086E598(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, &qword_257013CA8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t ToolKitProtoAssistantTypeSchemaDefinition.Entity.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_24086DEB0(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
      sub_2404FA028(&qword_257013CA8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
      sub_2408E5A5C();
    }
    sub_24086E024(v3, a1, a2, a3);
    type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24086DEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C548);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_25700C548);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C548);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2404FA028(&qword_25700C540, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_24086E024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDC0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFBDC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFBDC0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
  sub_2404FA028(&qword_2570016E0, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
}

uint64_t ToolKitProtoAssistantTypeSchemaDefinition.Entity.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, &qword_257013F60, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
}

uint64_t sub_24086E1B8(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9DC8, &qword_2570134F0);
}

uint64_t sub_24086E1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAssistantTypeSchemaDefinition.Entity.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24086E1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAssistantTypeSchemaDefinition.Entity.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24086E200()
{
  sub_2404FA028(&qword_257014F30, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
  return sub_2408E5828();
}

uint64_t sub_24086E250@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9DD0, (uint64_t)qword_257013500, a1);
}

uint64_t sub_24086E26C()
{
  sub_2404FA028(&qword_257014940, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
  return sub_2408E599C();
}

uint64_t sub_24086E2AC()
{
  sub_2404FA028(&qword_257014940, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
  return sub_2408E59A8();
}

uint64_t sub_24086E2FC(_QWORD *a1, _QWORD *a2)
{
  return sub_240892788(a1, a2, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, sub_2408BB2B4) & 1;
}

uint64_t sub_24086E324()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013518 = 0xD000000000000025;
  unk_257013520 = 0x8000000240929D20;
  return result;
}

uint64_t static ToolKitProtoAssistantTypeSchemaDefinition.Enumeration.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9DD8, &qword_257013518);
}

uint64_t sub_24086E3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013528);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013528);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "identifier";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "cases";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "displayRepresentation";
  *(_QWORD *)(v12 + 8) = 21;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoAssistantTypeSchemaDefinition.Enumeration._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9DE0, (uint64_t)qword_257013528, a1);
}

uint64_t ToolKitProtoAssistantTypeSchemaDefinition.Enumeration.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24086E598(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case, &qword_257013CE0, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
}

uint64_t sub_24086E598(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t result;
  char v18;

  v13 = v7;
  result = sub_2408E5858();
  if (!v8)
  {
    while ((v18 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240448BC4(a1, v13, a2, a3, a4, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, &qword_2570016E0, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
          break;
        case 2:
          a5(0);
          sub_2404FA028(a6, a5, a7);
          sub_2408E5960();
          break;
        case 1:
          sub_240448B20(a1, v13, a2, a3, a4, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, &qword_25700C540, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoAssistantTypeSchemaDefinition.Enumeration.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_24086E838(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case(0);
      sub_2404FA028(&qword_257013CE0, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
      sub_2408E5A5C();
    }
    sub_24086E9AC(v3, a1, a2, a3);
    type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24086E838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C548);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_25700C548);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C548);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2404FA028(&qword_25700C540, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_24086E9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDC0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFBDC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFBDC0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
  sub_2404FA028(&qword_2570016E0, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
}

uint64_t ToolKitProtoAssistantTypeSchemaDefinition.Enumeration.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, &qword_257013F68, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
}

uint64_t sub_24086EB3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;

  v4 = (char *)a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + *(int *)(a1 + 24);
  v7 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_24086EBD4(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9DD8, &qword_257013518);
}

uint64_t sub_24086EBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAssistantTypeSchemaDefinition.Enumeration.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24086EC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAssistantTypeSchemaDefinition.Enumeration.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24086EC1C()
{
  sub_2404FA028(&qword_257014F28, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
  return sub_2408E5828();
}

uint64_t sub_24086EC6C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9DE0, (uint64_t)qword_257013528, a1);
}

uint64_t sub_24086EC88()
{
  sub_2404FA028(&qword_257014958, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
  return sub_2408E599C();
}

uint64_t sub_24086ECC8()
{
  sub_2404FA028(&qword_257014958, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
  return sub_2408E59A8();
}

uint64_t sub_24086ED18(_QWORD *a1, _QWORD *a2)
{
  return sub_240892788(a1, a2, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, sub_2408BB2C8) & 1;
}

unint64_t static ToolKitProtoSystemToolProtocol.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_24086ED5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  _QWORD *v51;
  char *v52;
  _QWORD *v53;
  char *v54;
  _QWORD *v55;
  char *v56;
  _QWORD *v57;
  char *v58;
  _QWORD *v59;
  char *v60;
  _QWORD *v61;
  char *v62;
  _QWORD *v63;
  char *v64;
  _QWORD *v65;
  char *v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  _QWORD *v72;
  char *v73;
  _QWORD *v74;
  char *v75;
  _QWORD *v76;
  char *v77;
  _QWORD *v78;
  char *v79;
  _QWORD *v80;
  char *v81;
  _QWORD *v82;
  char *v83;
  _QWORD *v84;
  char *v85;
  _QWORD *v86;
  char *v87;
  _QWORD *v88;
  char *v89;
  _QWORD *v90;
  char *v91;
  _QWORD *v92;
  char *v93;
  _QWORD *v94;
  char *v95;
  _QWORD *v96;
  char *v97;
  _QWORD *v98;
  char *v99;
  _QWORD *v100;
  char *v101;
  _QWORD *v102;
  char *v103;
  _QWORD *v104;
  char *v105;
  _QWORD *v106;
  char *v107;
  _QWORD *v108;
  char *v109;
  _QWORD *v110;
  char *v111;
  _QWORD *v112;
  char *v113;
  _QWORD *v114;
  char *v115;
  _QWORD *v116;
  char *v117;
  _QWORD *v118;
  char *v119;
  _QWORD *v120;
  char *v121;
  _QWORD *v122;
  char *v123;
  _QWORD *v124;
  char *v125;
  uint64_t v127;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013540);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013540);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v127 = swift_allocObject();
  *(_OWORD *)(v127 + 16) = xmmword_240911070;
  v5 = v127 + v4;
  v6 = v127 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v127 + v4) = 1;
  *(_QWORD *)v6 = "unknown";
  *(_QWORD *)(v6 + 8) = 7;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v127 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "undoable";
  *(_QWORD *)(v10 + 8) = 8;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v127 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "sessionStarting";
  *((_QWORD *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v127 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "urlRepresentable";
  *((_QWORD *)v14 + 1) = 16;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v127 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "conditionallyEnabled";
  *((_QWORD *)v16 + 1) = 20;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v127 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "foregroundContinuable";
  *((_QWORD *)v18 + 1) = 21;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v127 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "changeBinarySetting";
  *((_QWORD *)v20 + 1) = 19;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v127 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "requiresMdmChecks";
  *((_QWORD *)v22 + 1) = 17;
  v22[16] = 2;
  v9();
  v23 = v127 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "cut";
  *(_QWORD *)(v23 + 8) = 3;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v127 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "copy";
  *((_QWORD *)v25 + 1) = 4;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v127 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "paste";
  *((_QWORD *)v27 + 1) = 5;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v127 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "cancel";
  *((_QWORD *)v29 + 1) = 6;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v127 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "resize";
  *((_QWORD *)v31 + 1) = 6;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v127 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "scroll";
  *((_QWORD *)v33 + 1) = 6;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v127 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "undo";
  *((_QWORD *)v35 + 1) = 4;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v127 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 16;
  *(_QWORD *)v37 = "zoom";
  *((_QWORD *)v37 + 1) = 4;
  v37[16] = 2;
  v9();
  v38 = v127 + v4 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 17;
  *(_QWORD *)v38 = "closeEntity";
  *(_QWORD *)(v38 + 8) = 11;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v127 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 18;
  *(_QWORD *)v40 = "createEntity";
  *((_QWORD *)v40 + 1) = 12;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v127 + v4 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 19;
  *(_QWORD *)v42 = "cutEntity";
  *((_QWORD *)v42 + 1) = 9;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v127 + v4 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 20;
  *(_QWORD *)v44 = "deleteEntity";
  *((_QWORD *)v44 + 1) = 12;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v127 + v4 + 20 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 21;
  *(_QWORD *)v46 = "duplicateEntity";
  *((_QWORD *)v46 + 1) = 15;
  v46[16] = 2;
  v9();
  v47 = (_QWORD *)(v127 + v4 + 21 * v3);
  v48 = (char *)v47 + *(int *)(v1 + 48);
  *v47 = 22;
  *(_QWORD *)v48 = "favoriteEntity";
  *((_QWORD *)v48 + 1) = 14;
  v48[16] = 2;
  v9();
  v49 = (_QWORD *)(v127 + v4 + 22 * v3);
  v50 = (char *)v49 + *(int *)(v1 + 48);
  *v49 = 23;
  *(_QWORD *)v50 = "openEntity";
  *((_QWORD *)v50 + 1) = 10;
  v50[16] = 2;
  v9();
  v51 = (_QWORD *)(v127 + v4 + 23 * v3);
  v52 = (char *)v51 + *(int *)(v1 + 48);
  *v51 = 24;
  *(_QWORD *)v52 = "previewEntity";
  *((_QWORD *)v52 + 1) = 13;
  v52[16] = 2;
  v9();
  v53 = (_QWORD *)(v127 + v4 + 24 * v3);
  v54 = (char *)v53 + *(int *)(v1 + 48);
  *v53 = 25;
  *(_QWORD *)v54 = "saveEntity";
  *((_QWORD *)v54 + 1) = 10;
  v54[16] = 2;
  v9();
  v55 = (_QWORD *)(v127 + v4 + 25 * v3);
  v56 = (char *)v55 + *(int *)(v1 + 48);
  *v55 = 26;
  *(_QWORD *)v56 = "putEntityInContainer";
  *((_QWORD *)v56 + 1) = 20;
  v56[16] = 2;
  v9();
  v57 = (_QWORD *)(v127 + v4 + 26 * v3);
  v58 = (char *)v57 + *(int *)(v1 + 48);
  *v57 = 27;
  *(_QWORD *)v58 = "playVideo";
  *((_QWORD *)v58 + 1) = 9;
  v58[16] = 2;
  v9();
  v59 = (_QWORD *)(v127 + v4 + 27 * v3);
  v60 = (char *)v59 + *(int *)(v1 + 48);
  *v59 = 28;
  *(_QWORD *)v60 = "audioStarting";
  *((_QWORD *)v60 + 1) = 13;
  v60[16] = 2;
  v9();
  v61 = (_QWORD *)(v127 + v4 + 28 * v3);
  v62 = (char *)v61 + *(int *)(v1 + 48);
  *v61 = 29;
  *(_QWORD *)v62 = "audioRecording";
  *((_QWORD *)v62 + 1) = 14;
  v62[16] = 2;
  v9();
  v63 = (_QWORD *)(v127 + v4 + 29 * v3);
  v64 = (char *)v63 + *(int *)(v1 + 48);
  *v63 = 30;
  *(_QWORD *)v64 = "pushToTalkTransmission";
  *((_QWORD *)v64 + 1) = 22;
  v64[16] = 2;
  v9();
  v65 = (_QWORD *)(v127 + v4 + 30 * v3);
  v66 = (char *)v65 + *(int *)(v1 + 48);
  *v65 = 31;
  *(_QWORD *)v66 = "startDive";
  *((_QWORD *)v66 + 1) = 9;
  v66[16] = 2;
  v9();
  v67 = (_QWORD *)(v127 + v4 + 31 * v3);
  v68 = (char *)v67 + *(int *)(v1 + 48);
  *v67 = 32;
  *(_QWORD *)v68 = "startWorkout";
  *((_QWORD *)v68 + 1) = 12;
  v68[16] = 2;
  v9();
  v69 = v127 + v4 + 32 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 32 * v3) = 33;
  *(_QWORD *)v69 = "pauseWorkout";
  *(_QWORD *)(v69 + 8) = 12;
  *(_BYTE *)(v69 + 16) = 2;
  v9();
  v70 = (_QWORD *)(v127 + v4 + 33 * v3);
  v71 = (char *)v70 + *(int *)(v1 + 48);
  *v70 = 34;
  *(_QWORD *)v71 = "resumeWorkout";
  *((_QWORD *)v71 + 1) = 13;
  v71[16] = 2;
  v9();
  v72 = (_QWORD *)(v127 + v4 + 34 * v3);
  v73 = (char *)v72 + *(int *)(v1 + 48);
  *v72 = 35;
  *(_QWORD *)v73 = "enterMarkup";
  *((_QWORD *)v73 + 1) = 11;
  v73[16] = 2;
  v9();
  v74 = (_QWORD *)(v127 + v4 + 35 * v3);
  v75 = (char *)v74 + *(int *)(v1 + 48);
  *v74 = 36;
  *(_QWORD *)v75 = "exitMarkup";
  *((_QWORD *)v75 + 1) = 10;
  v75[16] = 2;
  v9();
  v76 = (_QWORD *)(v127 + v4 + 36 * v3);
  v77 = (char *)v76 + *(int *)(v1 + 48);
  *v76 = 37;
  *(_QWORD *)v77 = "focusConfiguration";
  *((_QWORD *)v77 + 1) = 18;
  v77[16] = 2;
  v9();
  v78 = (_QWORD *)(v127 + v4 + 37 * v3);
  v79 = (char *)v78 + *(int *)(v1 + 48);
  *v78 = 38;
  *(_QWORD *)v79 = "widgetConfiguration";
  *((_QWORD *)v79 + 1) = 19;
  v79[16] = 2;
  v9();
  v80 = (_QWORD *)(v127 + v4 + 38 * v3);
  v81 = (char *)v80 + *(int *)(v1 + 48);
  *v80 = 39;
  *(_QWORD *)v81 = "search";
  *((_QWORD *)v81 + 1) = 6;
  v81[16] = 2;
  v9();
  v82 = (_QWORD *)(v127 + v4 + 39 * v3);
  v83 = (char *)v82 + *(int *)(v1 + 48);
  *v82 = 40;
  *(_QWORD *)v83 = "showSearchResultsInApp";
  *((_QWORD *)v83 + 1) = 22;
  v83[16] = 2;
  v9();
  v84 = (_QWORD *)(v127 + v4 + 40 * v3);
  v85 = (char *)v84 + *(int *)(v1 + 48);
  *v84 = 41;
  *(_QWORD *)v85 = "showStringSearchResultsInApp";
  *((_QWORD *)v85 + 1) = 28;
  v85[16] = 2;
  v9();
  v86 = (_QWORD *)(v127 + v4 + 41 * v3);
  v87 = (char *)v86 + *(int *)(v1 + 48);
  *v86 = 42;
  *(_QWORD *)v87 = "showInAppSearchResults";
  *((_QWORD *)v87 + 1) = 22;
  v87[16] = 2;
  v9();
  v88 = (_QWORD *)(v127 + v4 + 42 * v3);
  v89 = (char *)v88 + *(int *)(v1 + 48);
  *v88 = 43;
  *(_QWORD *)v89 = "showInAppStringSearchResults";
  *((_QWORD *)v89 + 1) = 28;
  v89[16] = 2;
  v9();
  v90 = (_QWORD *)(v127 + v4 + 43 * v3);
  v91 = (char *)v90 + *(int *)(v1 + 48);
  *v90 = 44;
  *(_QWORD *)v91 = "moveSpatial";
  *((_QWORD *)v91 + 1) = 11;
  v91[16] = 2;
  v9();
  v92 = (_QWORD *)(v127 + v4 + 44 * v3);
  v93 = (char *)v92 + *(int *)(v1 + 48);
  *v92 = 45;
  *(_QWORD *)v93 = "navigateSequentially";
  *((_QWORD *)v93 + 1) = 20;
  v93[16] = 2;
  v9();
  v94 = (_QWORD *)(v127 + v4 + 45 * v3);
  v95 = (char *)v94 + *(int *)(v1 + 48);
  *v94 = 46;
  *(_QWORD *)v95 = "sting";
  *((_QWORD *)v95 + 1) = 5;
  v95[16] = 2;
  v9();
  v96 = (_QWORD *)(v127 + v4 + 46 * v3);
  v97 = (char *)v96 + *(int *)(v1 + 48);
  *v96 = 47;
  *(_QWORD *)v97 = "toggle";
  *((_QWORD *)v97 + 1) = 6;
  v97[16] = 2;
  v9();
  v98 = (_QWORD *)(v127 + v4 + 47 * v3);
  v99 = (char *)v98 + *(int *)(v1 + 48);
  *v98 = 48;
  *(_QWORD *)v99 = "cameraCapture";
  *((_QWORD *)v99 + 1) = 13;
  v99[16] = 2;
  v9();
  v100 = (_QWORD *)(v127 + v4 + 48 * v3);
  v101 = (char *)v100 + *(int *)(v1 + 48);
  *v100 = 49;
  *(_QWORD *)v101 = "staccatoLongPress";
  *((_QWORD *)v101 + 1) = 17;
  v101[16] = 2;
  v9();
  v102 = (_QWORD *)(v127 + v4 + 49 * v3);
  v103 = (char *)v102 + *(int *)(v1 + 48);
  *v102 = 50;
  *(_QWORD *)v103 = "entityUpdating";
  *((_QWORD *)v103 + 1) = 14;
  v103[16] = 2;
  v9();
  v104 = (_QWORD *)(v127 + v4 + 50 * v3);
  v105 = (char *)v104 + *(int *)(v1 + 48);
  *v104 = 51;
  *(_QWORD *)v105 = "propertyUpdater";
  *((_QWORD *)v105 + 1) = 15;
  v105[16] = 2;
  v9();
  v106 = (_QWORD *)(v127 + v4 + 51 * v3);
  v107 = (char *)v106 + *(int *)(v1 + 48);
  *v106 = 52;
  *(_QWORD *)v107 = "sendMail";
  *((_QWORD *)v107 + 1) = 8;
  v107[16] = 2;
  v9();
  v108 = (_QWORD *)(v127 + v4 + 52 * v3);
  v109 = (char *)v108 + *(int *)(v1 + 48);
  *v108 = 53;
  *(_QWORD *)v109 = "setMailMessageIsRead";
  *((_QWORD *)v109 + 1) = 20;
  v109[16] = 2;
  v9();
  v110 = (_QWORD *)(v127 + v4 + 53 * v3);
  v111 = (char *)v110 + *(int *)(v1 + 48);
  *v110 = 54;
  *(_QWORD *)v111 = "siriKitIntent";
  *((_QWORD *)v111 + 1) = 13;
  v111[16] = 2;
  v9();
  v112 = (_QWORD *)(v127 + v4 + 54 * v3);
  v113 = (char *)v112 + *(int *)(v1 + 48);
  *v112 = 55;
  *(_QWORD *)v113 = "intentSideEffect";
  *((_QWORD *)v113 + 1) = 16;
  v113[16] = 2;
  v9();
  v114 = (_QWORD *)(v127 + v4 + 55 * v3);
  v115 = (char *)v114 + *(int *)(v1 + 48);
  *v114 = 56;
  *(_QWORD *)v115 = "assistantSchema";
  *((_QWORD *)v115 + 1) = 15;
  v115[16] = 2;
  v9();
  v116 = (_QWORD *)(v127 + v4 + 56 * v3);
  v117 = (char *)v116 + *(int *)(v1 + 48);
  *v116 = 57;
  *(_QWORD *)v117 = "rewriteWritingTool";
  *((_QWORD *)v117 + 1) = 18;
  v117[16] = 2;
  v9();
  v118 = (_QWORD *)(v127 + v4 + 57 * v3);
  v119 = (char *)v118 + *(int *)(v1 + 48);
  *v118 = 58;
  *(_QWORD *)v119 = "proofreadWritingTool";
  *((_QWORD *)v119 + 1) = 20;
  v119[16] = 2;
  v9();
  v120 = (_QWORD *)(v127 + v4 + 58 * v3);
  v121 = (char *)v120 + *(int *)(v1 + 48);
  *v120 = 59;
  *(_QWORD *)v121 = "assistantInvocable";
  *((_QWORD *)v121 + 1) = 18;
  v121[16] = 2;
  v9();
  v122 = (_QWORD *)(v127 + v4 + 59 * v3);
  v123 = (char *)v122 + *(int *)(v1 + 48);
  *v122 = 60;
  *(_QWORD *)v123 = "appIntent";
  *((_QWORD *)v123 + 1) = 9;
  v123[16] = 2;
  v9();
  v124 = (_QWORD *)(v127 + v4 + 60 * v3);
  v125 = (char *)v124 + *(int *)(v1 + 48);
  *v124 = 61;
  *(_QWORD *)v125 = "systemFrameworkIntent";
  *((_QWORD *)v125 + 1) = 21;
  v125[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoSystemToolProtocol._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9DE8, (uint64_t)qword_257013540, a1);
}

uint64_t ToolKitProtoSystemToolProtocol.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 9;
          goto LABEL_5;
        case 2:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 10;
          goto LABEL_5;
        case 3:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 11;
          goto LABEL_5;
        case 4:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 12;
          goto LABEL_5;
        case 5:
          sub_240870498(v5, a1, a2, a3);
          break;
        case 6:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 13;
          goto LABEL_5;
        case 7:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 14;
          goto LABEL_5;
        case 8:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 15;
          goto LABEL_5;
        case 9:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 16;
          goto LABEL_5;
        case 10:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 17;
          goto LABEL_5;
        case 11:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 18;
          goto LABEL_5;
        case 12:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 19;
          goto LABEL_5;
        case 13:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 20;
          goto LABEL_5;
        case 14:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 21;
          goto LABEL_5;
        case 15:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 22;
          goto LABEL_5;
        case 16:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 23;
          goto LABEL_5;
        case 17:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 24;
          goto LABEL_5;
        case 18:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 25;
          goto LABEL_5;
        case 19:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 26;
          goto LABEL_5;
        case 20:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 27;
          goto LABEL_5;
        case 21:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 28;
          goto LABEL_5;
        case 22:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 29;
          goto LABEL_5;
        case 23:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 30;
          goto LABEL_5;
        case 24:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 31;
          goto LABEL_5;
        case 25:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 32;
          goto LABEL_5;
        case 26:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 33;
          goto LABEL_5;
        case 27:
          sub_2408708D8(v5, a1, a2, a3);
          break;
        case 28:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 34;
          goto LABEL_5;
        case 29:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 35;
          goto LABEL_5;
        case 30:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 36;
          goto LABEL_5;
        case 31:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 37;
          goto LABEL_5;
        case 32:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 38;
          goto LABEL_5;
        case 33:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 39;
          goto LABEL_5;
        case 34:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 40;
          goto LABEL_5;
        case 35:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 41;
          goto LABEL_5;
        case 36:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 42;
          goto LABEL_5;
        case 37:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 43;
          goto LABEL_5;
        case 38:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 44;
          goto LABEL_5;
        case 39:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 45;
          goto LABEL_5;
        case 40:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 46;
          goto LABEL_5;
        case 41:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 47;
          goto LABEL_5;
        case 42:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 48;
          goto LABEL_5;
        case 43:
          sub_240870D1C(v5, a1, a2, a3);
          break;
        case 44:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 49;
          goto LABEL_5;
        case 45:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 50;
          goto LABEL_5;
        case 46:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 51;
          goto LABEL_5;
        case 47:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 52;
          goto LABEL_5;
        case 48:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 53;
          goto LABEL_5;
        case 49:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 54;
          goto LABEL_5;
        case 50:
          sub_240871160(v5, a1, a2, a3);
          break;
        case 51:
          sub_2408715A4(v5, a1, a2, a3);
          break;
        case 52:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 55;
          goto LABEL_5;
        case 53:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 56;
          goto LABEL_5;
        case 54:
          sub_2408719E8(v5, a1, a2, a3);
          break;
        case 55:
          sub_240871E2C(v5, a1, a2, a3);
          break;
        case 56:
          sub_240872270(v5, a1, a2, a3);
          break;
        case 57:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 57;
          goto LABEL_5;
        case 58:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 58;
          goto LABEL_5;
        case 59:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 59;
          goto LABEL_5;
        case 60:
          sub_2408726B4(v5, a1, a2, a3);
          break;
        case 61:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 60;
LABEL_5:
          sub_240438FB0(v11, v12, v13, v14, &qword_25700C948, type metadata accessor for ToolKitProtoSystemToolProtocolKind, v15);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240870498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152A0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C948);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570152A0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_257014980, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570152A0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570152A0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570152A0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570152A0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570152A0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2408708D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C948);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570152A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014998, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PlayVideo);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570152A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570152A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570152A8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570152A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570152A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240870D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152B0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C948);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570152B0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570149B0, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570152B0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570152B0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570152B0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570152B0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570152B0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240871160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152B8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C948);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570152B8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570149C8, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.EntityUpdating);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570152B8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570152B8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570152B8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570152B8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570152B8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2408715A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152C0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C948);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570152C0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570149E0, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570152C0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570152C0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570152C0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570152C0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570152C0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2408719E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152C8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C948);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570152C8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570149F8, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570152C8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570152C8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570152C8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570152C8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570152C8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240871E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152D0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C948);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570152D0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014A10, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570152D0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570152D0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570152D0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570152D0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570152D0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240872270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152D8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C948);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570152D8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014A28, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AssistantSchema);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570152D8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570152D8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570152D8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570152D8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570152D8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2408726B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152E0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C948);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570152E0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014A40, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AppIntent);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570152E0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570152E0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570152E0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570152E0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570152E0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoSystemToolProtocol.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_25700C948);
  v4 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_240872BC4 + 4 * word_240911240[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for ToolKitProtoSystemToolProtocol(0);
  return sub_2408E578C();
}

uint64_t sub_24087337C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[0] = a3;
  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 9)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240873510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[0] = a3;
  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 10)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408736A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[0] = a3;
  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 11)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240873838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[0] = a3;
  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 12)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408739CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C948);
  v8 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C948);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
    sub_2404FA028(&qword_257014980, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
  __break(1u);
  return result;
}

uint64_t sub_240873B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 16)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240873D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 17)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240873E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[0] = a3;
  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 18)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24087402C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 19)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408741C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 20)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24087435C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 21)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408744F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 22)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24087468C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 23)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240874824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 24)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408749BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 25)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240874B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 26)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240874CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 27)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240874E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 28)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24087501C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 29)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408751B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 30)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24087534C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 31)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408754E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 32)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24087567C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 33)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240875814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C948);
  v8 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C948);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo);
    sub_2404FA028(&qword_257014998, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PlayVideo);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
  __break(1u);
  return result;
}

uint64_t sub_2408759B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 34)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240875B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 35)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240875CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 36)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240875E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 37)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240876014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 38)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408761AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 39)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240876344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 40)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408764DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 41)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240876674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 42)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24087680C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 43)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408769A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 44)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240876B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 45)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240876CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 46)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240876E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 47)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240877004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 48)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24087719C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C948);
  v8 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C948);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
    sub_2404FA028(&qword_2570149B0, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
  __break(1u);
  return result;
}

uint64_t sub_24087733C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 49)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408774D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 50)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24087766C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 51)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240877804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 52)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24087799C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 53)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240877B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 54)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240877CCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C948);
  v8 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C948);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating);
    sub_2404FA028(&qword_2570149C8, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.EntityUpdating);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
  __break(1u);
  return result;
}

uint64_t sub_240877E6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C948);
  v8 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C948);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
    sub_2404FA028(&qword_2570149E0, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
  __break(1u);
  return result;
}

uint64_t sub_24087800C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 55)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408781A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 56)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24087833C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C948);
  v8 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C948);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
    sub_2404FA028(&qword_2570149F8, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
  __break(1u);
  return result;
}

uint64_t sub_2408784DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C948);
  v8 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C948);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
    sub_2404FA028(&qword_257014A10, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
  __break(1u);
  return result;
}

uint64_t sub_24087867C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C948);
  v8 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C948);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema);
    sub_2404FA028(&qword_257014A28, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AssistantSchema);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
  __break(1u);
  return result;
}

uint64_t sub_24087881C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 57)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2408789B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 58)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240878B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 59)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240878CE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C948);
  v8 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C948);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 8)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent);
    sub_2404FA028(&qword_257014A40, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AppIntent);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
  __break(1u);
  return result;
}

uint64_t sub_240878E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_25700C948);
  v12 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_25700C948);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    if (EnumCaseMultiPayload == 60)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t ToolKitProtoSystemToolProtocol.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSystemToolProtocol, &qword_257013F70, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol);
}

uint64_t sub_24087903C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoSystemToolProtocolKind, a1);
}

unint64_t sub_240879048()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_240879064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240879078()
{
  return ToolKitProtoSystemToolProtocol.traverse<A>(visitor:)();
}

uint64_t sub_24087908C()
{
  sub_2404FA028(&qword_257014F20, type metadata accessor for ToolKitProtoSystemToolProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol);
  return sub_2408E5828();
}

uint64_t sub_2408790DC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9DE8, (uint64_t)qword_257013540, a1);
}

uint64_t sub_2408790F8()
{
  sub_2404FA028(&qword_257013FD0, type metadata accessor for ToolKitProtoSystemToolProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol);
  return sub_2408E599C();
}

uint64_t sub_240879138()
{
  sub_2404FA028(&qword_257013FD0, type metadata accessor for ToolKitProtoSystemToolProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol);
  return sub_2408E59A8();
}

uint64_t sub_24087918C()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013558 = 0xD00000000000001ALL;
  unk_257013560 = 0x8000000240929D50;
  return result;
}

uint64_t static ToolKitProtoSystemToolProtocol.ConditionallyEnabled.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9DF0, &qword_257013558);
}

uint64_t sub_24087921C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013568, 1, (uint64_t)"persistState", 12);
}

uint64_t static ToolKitProtoSystemToolProtocol.ConditionallyEnabled._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9DF8, (uint64_t)qword_257013568, a1);
}

uint64_t ToolKitProtoSystemToolProtocol.ConditionallyEnabled.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2408E5858();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_2408E5888();
  }
  return result;
}

uint64_t ToolKitProtoSystemToolProtocol.ConditionallyEnabled.traverse<A>(visitor:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  if (*v0 != 1 || (result = sub_2408E59D8(), !v1))
  {
    type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t ToolKitProtoSystemToolProtocol.ConditionallyEnabled.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled, &qword_257013F78, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
}

uint64_t sub_240879374(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9DF0, &qword_257013558);
}

uint64_t sub_240879394()
{
  return ToolKitProtoSystemToolProtocol.ConditionallyEnabled.decodeMessage<A>(decoder:)();
}

uint64_t sub_2408793A8()
{
  return ToolKitProtoSystemToolProtocol.ConditionallyEnabled.traverse<A>(visitor:)();
}

uint64_t sub_2408793BC()
{
  sub_2404FA028(&qword_257014F18, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
  return sub_2408E5828();
}

uint64_t sub_24087940C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9DF8, (uint64_t)qword_257013568, a1);
}

uint64_t sub_240879428()
{
  sub_2404FA028(&qword_257014980, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
  return sub_2408E599C();
}

uint64_t sub_240879468()
{
  sub_2404FA028(&qword_257014980, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
  return sub_2408E59A8();
}

uint64_t sub_2408794BC()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013580 = 0xD00000000000001ALL;
  *(_QWORD *)algn_257013588 = 0x8000000240929D50;
  return result;
}

uint64_t static ToolKitProtoSystemToolProtocol.PlayVideo.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9E00, &qword_257013580);
}

uint64_t sub_240879548(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013590, 1, (uint64_t)"values", 6);
}

uint64_t static ToolKitProtoSystemToolProtocol.PlayVideo._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9E08, (uint64_t)qword_257013590, a1);
}

uint64_t ToolKitProtoSystemToolProtocol.PlayVideo.decodeMessage<A>(decoder:)()
{
  return sub_2408797F8();
}

uint64_t ToolKitProtoSystemToolProtocol.PlayVideo.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404C3EA4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo);
}

uint64_t ToolKitProtoSystemToolProtocol.PlayVideo.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo, &qword_257013F80, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PlayVideo);
}

uint64_t sub_2408795CC(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9E00, &qword_257013580);
}

uint64_t sub_2408795EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.PlayVideo.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240879600()
{
  sub_2404FA028(&qword_257014F10, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PlayVideo);
  return sub_2408E5828();
}

uint64_t sub_240879650@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9E08, (uint64_t)qword_257013590, a1);
}

uint64_t sub_24087966C()
{
  sub_2404FA028(&qword_257014998, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PlayVideo);
  return sub_2408E599C();
}

uint64_t sub_2408796AC()
{
  sub_2404FA028(&qword_257014998, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PlayVideo);
  return sub_2408E59A8();
}

uint64_t sub_2408796FC(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo) & 1;
}

uint64_t sub_240879724()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_2570135A8 = 0xD00000000000001ALL;
  unk_2570135B0 = 0x8000000240929D50;
  return result;
}

uint64_t static ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9E10, &qword_2570135A8);
}

uint64_t sub_2408797AC(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_2570135B8, 1, (uint64_t)"values", 6);
}

uint64_t static ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9E18, (uint64_t)qword_2570135B8, a1);
}

uint64_t ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults.decodeMessage<A>(decoder:)()
{
  return sub_2408797F8();
}

uint64_t sub_2408797F8()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2408E5858();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_2408E590C();
  }
  return result;
}

uint64_t ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404C3EA4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
}

uint64_t ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults, &qword_257013F88, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
}

uint64_t sub_24087989C(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9E10, &qword_2570135A8);
}

uint64_t sub_2408798BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2408798D0()
{
  sub_2404FA028(&qword_257014F08, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
  return sub_2408E5828();
}

uint64_t sub_240879920@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9E18, (uint64_t)qword_2570135B8, a1);
}

uint64_t sub_24087993C()
{
  sub_2404FA028(&qword_2570149B0, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
  return sub_2408E599C();
}

uint64_t sub_24087997C()
{
  sub_2404FA028(&qword_2570149B0, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
  return sub_2408E59A8();
}

uint64_t sub_2408799CC(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults) & 1;
}

uint64_t sub_2408799F4()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_2570135D0 = 0xD00000000000001ALL;
  *(_QWORD *)algn_2570135D8 = 0x8000000240929D50;
  return result;
}

uint64_t static ToolKitProtoSystemToolProtocol.EntityUpdating.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9E20, &qword_2570135D0);
}

uint64_t sub_240879A88(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_2570135E0, 1, (uint64_t)"entityIdentifier", 16);
}

uint64_t static ToolKitProtoSystemToolProtocol.EntityUpdating._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9E28, (uint64_t)qword_2570135E0, a1);
}

uint64_t ToolKitProtoSystemToolProtocol.EntityUpdating.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t ToolKitProtoSystemToolProtocol.EntityUpdating.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24088B17C(a1, a2, a3, 1, (void (*)(_QWORD))type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating);
}

uint64_t ToolKitProtoSystemToolProtocol.EntityUpdating.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating, &qword_257013F90, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.EntityUpdating);
}

uint64_t sub_240879B18(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9E20, &qword_2570135D0);
}

uint64_t sub_240879B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.EntityUpdating.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240879B4C()
{
  sub_2404FA028(&qword_257014F00, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.EntityUpdating);
  return sub_2408E5828();
}

uint64_t sub_240879B9C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9E28, (uint64_t)qword_2570135E0, a1);
}

uint64_t sub_240879BB8()
{
  sub_2404FA028(&qword_2570149C8, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.EntityUpdating);
  return sub_2408E599C();
}

uint64_t sub_240879BF8()
{
  sub_2404FA028(&qword_2570149C8, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.EntityUpdating);
  return sub_2408E59A8();
}

uint64_t sub_240879C48(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating) & 1;
}

uint64_t sub_240879C68()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_2570135F8 = 0xD00000000000001ALL;
  unk_257013600 = 0x8000000240929D50;
  return result;
}

uint64_t static ToolKitProtoSystemToolProtocol.PropertyUpdater.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9E30, &qword_2570135F8);
}

uint64_t sub_240879CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013608);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013608);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "entityIdentifier";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "entityProperty";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoSystemToolProtocol.PropertyUpdater._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9E38, (uint64_t)qword_257013608, a1);
}

uint64_t ToolKitProtoSystemToolProtocol.PropertyUpdater.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240887848(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t ToolKitProtoSystemToolProtocol.PropertyUpdater.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240879EAC(a1, a2, a3, 1, 2, (void (*)(_QWORD))type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
}

uint64_t sub_240879EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD))
{
  _QWORD *v6;
  uint64_t v7;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;

  v9 = v6[1];
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = *v6 & 0xFFFFFFFFFFFFLL;
  if (!v10 || (result = sub_2408E5A38(), !v7))
  {
    v12 = v6[3];
    v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v13 = v6[2] & 0xFFFFFFFFFFFFLL;
    if (!v13 || (result = sub_2408E5A38(), !v7))
    {
      a6(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t ToolKitProtoSystemToolProtocol.PropertyUpdater.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater, &qword_257013F98, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
}

uint64_t sub_240879FB0(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9E30, &qword_2570135F8);
}

uint64_t sub_240879FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.PropertyUpdater.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240879FE4()
{
  sub_2404FA028(&qword_257014EF8, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
  return sub_2408E5828();
}

uint64_t sub_24087A034@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9E38, (uint64_t)qword_257013608, a1);
}

uint64_t sub_24087A050()
{
  sub_2404FA028(&qword_2570149E0, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
  return sub_2408E599C();
}

uint64_t sub_24087A090()
{
  sub_2404FA028(&qword_2570149E0, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
  return sub_2408E59A8();
}

uint64_t sub_24087A0E0(_QWORD *a1, char *a2)
{
  return sub_240892FB4(a1, a2, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater) & 1;
}

uint64_t sub_24087A100()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013620 = 0xD00000000000001ALL;
  *(_QWORD *)algn_257013628 = 0x8000000240929D50;
  return result;
}

uint64_t static ToolKitProtoSystemToolProtocol.SiriKitIntent.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9E40, &qword_257013620);
}

uint64_t sub_24087A194(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013630, 2, (uint64_t)"intentClassName", 15);
}

uint64_t static ToolKitProtoSystemToolProtocol.SiriKitIntent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9E48, (uint64_t)qword_257013630, a1);
}

uint64_t ToolKitProtoSystemToolProtocol.SiriKitIntent.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2408E5858();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
      sub_2408E593C();
  }
  return result;
}

uint64_t ToolKitProtoSystemToolProtocol.SiriKitIntent.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24088B17C(a1, a2, a3, 2, (void (*)(_QWORD))type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
}

uint64_t ToolKitProtoSystemToolProtocol.SiriKitIntent.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent, &qword_257013FA0, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
}

uint64_t sub_24087A274(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9E40, &qword_257013620);
}

uint64_t sub_24087A294()
{
  return ToolKitProtoSystemToolProtocol.SiriKitIntent.decodeMessage<A>(decoder:)();
}

uint64_t sub_24087A2A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.SiriKitIntent.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24087A2BC()
{
  sub_2404FA028(&qword_257014EF0, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
  return sub_2408E5828();
}

uint64_t sub_24087A30C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9E48, (uint64_t)qword_257013630, a1);
}

uint64_t sub_24087A328()
{
  sub_2404FA028(&qword_2570149F8, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
  return sub_2408E599C();
}

uint64_t sub_24087A368()
{
  sub_2404FA028(&qword_2570149F8, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
  return sub_2408E59A8();
}

uint64_t sub_24087A3B8(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent) & 1;
}

uint64_t sub_24087A3D8()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013648 = 0xD00000000000001ALL;
  unk_257013650 = 0x8000000240929D50;
  return result;
}

uint64_t static ToolKitProtoSystemToolProtocol.IntentSideEffect.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9E50, &qword_257013648);
}

uint64_t sub_24087A468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013658);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013658);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "unknown";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "none";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "stateChange";
  *(_QWORD *)(v12 + 8) = 11;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoSystemToolProtocol.IntentSideEffect._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9E58, (uint64_t)qword_257013658, a1);
}

uint64_t ToolKitProtoSystemToolProtocol.IntentSideEffect.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  while (1)
  {
    result = sub_2408E5858();
    if (v4 || (v10 & 1) != 0)
      break;
    switch(result)
    {
      case 3:
        sub_24087A89C();
        break;
      case 2:
        sub_24087A6DC(a1, v5, a2, a3, 0x100000001);
        break;
      case 1:
        sub_24087A6DC(a1, v5, a2, a3, 0x100000000);
        break;
    }
  }
  return result;
}

uint64_t sub_24087A6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  int v15;
  uint64_t result;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a5;
  v21 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v12 = sub_2408E5714();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v14 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, 1, 1, v12);
  sub_2404FA028(&qword_257000D10, v13, MEMORY[0x24BE5B938]);
  sub_2408E5894();
  if (v5)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  sub_2403A9210((uint64_t)v11, (uint64_t)v9, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v12);
  sub_2403A97FC((uint64_t)v9, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  if ((*(_BYTE *)(v21 + 5) & 1) == 0)
    sub_2408E5864();
  result = sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  v17 = v21;
  v18 = BYTE4(v20);
  *(_DWORD *)v21 = v20;
  *(_WORD *)(v17 + 4) = v18;
  return result;
}

uint64_t sub_24087A89C()
{
  return sub_2408E58DC();
}

uint64_t ToolKitProtoSystemToolProtocol.IntentSideEffect.traverse<A>(visitor:)()
{
  unsigned int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  if ((*((_BYTE *)v0 + 5) & 1) != 0)
    goto LABEL_7;
  v2 = *v0;
  if (((v2 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32)) & 0x100000000) == 0)
  {
    result = sub_2408E5A08();
    if (v1)
      return result;
    goto LABEL_7;
  }
  if ((_DWORD)v2)
  {
    result = sub_24087AB08(v0);
    if (v1)
      return result;
    goto LABEL_7;
  }
  result = sub_24087AA0C(v0);
  if (!v1)
  {
LABEL_7:
    type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24087AA0C(unsigned int *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*((_BYTE *)a1 + 5) & 1) != 0
    || (v7 = *a1, ((v7 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32)) & 0x100000000) == 0)
    || (_DWORD)v7)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_24087AB08(unsigned int *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*((_BYTE *)a1 + 5) & 1) == 0
    && (v7 = *a1, ((v7 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32)) & 0x100000000) != 0)
    && (_DWORD)v7)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ToolKitProtoSystemToolProtocol.IntentSideEffect.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect, &qword_257013FA8, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
}

uint64_t sub_24087AC20@<X0>(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 4) = 256;
  *(_DWORD *)a1 = 0;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t sub_24087AC48(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9E50, &qword_257013648);
}

uint64_t sub_24087AC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.IntentSideEffect.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24087AC7C()
{
  return ToolKitProtoSystemToolProtocol.IntentSideEffect.traverse<A>(visitor:)();
}

uint64_t sub_24087AC90()
{
  sub_2404FA028(&qword_257014EE8, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
  return sub_2408E5828();
}

uint64_t sub_24087ACE0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9E58, (uint64_t)qword_257013658, a1);
}

uint64_t sub_24087ACFC()
{
  sub_2404FA028(&qword_257014A10, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
  return sub_2408E599C();
}

uint64_t sub_24087AD3C()
{
  sub_2404FA028(&qword_257014A10, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
  return sub_2408E59A8();
}

uint64_t sub_24087AD90()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013670 = 0xD00000000000001ALL;
  *(_QWORD *)algn_257013678 = 0x8000000240929D50;
  return result;
}

uint64_t static ToolKitProtoSystemToolProtocol.AssistantSchema.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9E60, &qword_257013670);
}

uint64_t sub_24087AE24(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013680, 1, (uint64_t)"identifier", 10);
}

uint64_t static ToolKitProtoSystemToolProtocol.AssistantSchema._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9E68, (uint64_t)qword_257013680, a1);
}

uint64_t ToolKitProtoSystemToolProtocol.AssistantSchema.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240464D60(a1, a2, a3, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, &qword_25700C540, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t ToolKitProtoSystemToolProtocol.AssistantSchema.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24087AEA4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema);
}

uint64_t sub_24087AEA4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = sub_2404533C8(v4, a1, a2, a3, &qword_25700C548, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, &qword_25700C540, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
  if (!v5)
  {
    a4(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t ToolKitProtoSystemToolProtocol.AssistantSchema.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema, &qword_257013FB0, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AssistantSchema);
}

uint64_t sub_24087AF6C(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9E60, &qword_257013670);
}

uint64_t sub_24087AF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.AssistantSchema.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24087AFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.AssistantSchema.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24087AFB4()
{
  sub_2404FA028(&qword_257014EE0, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AssistantSchema);
  return sub_2408E5828();
}

uint64_t sub_24087B004@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9E68, (uint64_t)qword_257013680, a1);
}

uint64_t sub_24087B020()
{
  sub_2404FA028(&qword_257014A28, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AssistantSchema);
  return sub_2408E599C();
}

uint64_t sub_24087B060()
{
  sub_2404FA028(&qword_257014A28, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AssistantSchema);
  return sub_2408E59A8();
}

uint64_t sub_24087B0B4()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013698 = 0xD00000000000001ALL;
  unk_2570136A0 = 0x8000000240929D50;
  return result;
}

uint64_t static ToolKitProtoSystemToolProtocol.AppIntent.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9E70, &qword_257013698);
}

uint64_t sub_24087B140(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_2570136A8, 1, (uint64_t)"intentTypeName", 14);
}

uint64_t static ToolKitProtoSystemToolProtocol.AppIntent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9E78, (uint64_t)qword_2570136A8, a1);
}

uint64_t ToolKitProtoSystemToolProtocol.AppIntent.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t ToolKitProtoSystemToolProtocol.AppIntent.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24088B17C(a1, a2, a3, 1, (void (*)(_QWORD))type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent);
}

uint64_t ToolKitProtoSystemToolProtocol.AppIntent.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent, &qword_257013FB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AppIntent);
}

uint64_t sub_24087B1D0(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9E70, &qword_257013698);
}

uint64_t sub_24087B1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoSystemToolProtocol.AppIntent.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24087B204()
{
  sub_2404FA028(&qword_257014ED8, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AppIntent);
  return sub_2408E5828();
}

uint64_t sub_24087B254@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9E78, (uint64_t)qword_2570136A8, a1);
}

uint64_t sub_24087B270()
{
  sub_2404FA028(&qword_257014A40, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AppIntent);
  return sub_2408E599C();
}

uint64_t sub_24087B2B0()
{
  sub_2404FA028(&qword_257014A40, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AppIntent);
  return sub_2408E59A8();
}

uint64_t sub_24087B300(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent) & 1;
}

unint64_t static ToolKitProtoToolDefinition.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_24087B33C(uint64_t a1)
{
  return sub_2404C9600(a1, qword_2570136C0);
}

uint64_t static ToolKitProtoToolDefinition._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9E80, (uint64_t)qword_2570136C0, a1);
}

uint64_t ToolKitProtoToolDefinition.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t ToolKitProtoToolDefinition.traverse<A>(visitor:)()
{
  return sub_2408E578C();
}

uint64_t ToolKitProtoToolDefinition.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition, &qword_257013FC0, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition);
}

unint64_t sub_24087B3AC()
{
  return 0xD000000000000016;
}

uint64_t sub_24087B3C8()
{
  sub_2404FA028(&qword_257014ED0, type metadata accessor for ToolKitProtoToolDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition);
  return sub_2408E5828();
}

uint64_t sub_24087B418@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9E80, (uint64_t)qword_2570136C0, a1);
}

uint64_t sub_24087B434()
{
  sub_2404FA028(&qword_257014A58, type metadata accessor for ToolKitProtoToolDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition);
  return sub_2408E599C();
}

uint64_t sub_24087B474()
{
  sub_2404FA028(&qword_257014A58, type metadata accessor for ToolKitProtoToolDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition);
  return sub_2408E59A8();
}

uint64_t sub_24087B4C4()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_2570136D8 = 0xD000000000000016;
  unk_2570136E0 = 0x8000000240929D70;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9E88, &qword_2570136D8);
}

uint64_t sub_24087B550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v48;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570136E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570136E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_2408EB7B0;
  v5 = v48 + v4;
  v6 = v48 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v48 + v4) = 1;
  *(_QWORD *)v6 = "id";
  *(_QWORD *)(v6 + 8) = 2;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "name";
  *(_QWORD *)(v10 + 8) = 4;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "toolType";
  *((_QWORD *)v12 + 1) = 8;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "parameters";
  *((_QWORD *)v14 + 1) = 10;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "outputType";
  *((_QWORD *)v16 + 1) = 10;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "outputResultName";
  *((_QWORD *)v18 + 1) = 16;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "sourceApplication";
  *((_QWORD *)v20 + 1) = 17;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "descriptionSummary";
  *((_QWORD *)v22 + 1) = 18;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "categories";
  *(_QWORD *)(v23 + 8) = 10;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v5 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "searchKeywords";
  *((_QWORD *)v25 + 1) = 14;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v5 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "deprecationDefinition";
  *((_QWORD *)v27 + 1) = 21;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v5 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "requirements";
  *((_QWORD *)v29 + 1) = 12;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v5 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "flags";
  *((_QWORD *)v31 + 1) = 5;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v5 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "authenticationPolicy";
  *((_QWORD *)v33 + 1) = 20;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v5 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "sampleInvocations";
  *((_QWORD *)v35 + 1) = 17;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v5 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 16;
  *(_QWORD *)v37 = "systemProtocols";
  *((_QWORD *)v37 + 1) = 15;
  v37[16] = 2;
  v9();
  v38 = v5 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 17;
  *(_QWORD *)v38 = "customIcon";
  *(_QWORD *)(v38 + 8) = 10;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v5 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 18;
  *(_QWORD *)v40 = "hiddenParameters";
  *((_QWORD *)v40 + 1) = 16;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v5 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 19;
  *(_QWORD *)v42 = "sourceContainer";
  *((_QWORD *)v42 + 1) = 15;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v5 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 20;
  *(_QWORD *)v44 = "attributionContainer";
  *((_QWORD *)v44 + 1) = 20;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v5 + 20 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 21;
  *(_QWORD *)v46 = "visibilityFlags";
  *((_QWORD *)v46 + 1) = 15;
  v46[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9E90, (uint64_t)qword_2570136E8, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          v4 = v3;
          sub_2408E593C();
          goto LABEL_26;
        case 3:
          sub_240829250();
          goto LABEL_16;
        case 4:
        case 18:
          type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter(0);
          sub_2404FA028(&qword_257013F48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
          goto LABEL_21;
        case 5:
          v4 = v3;
          sub_24087BE84();
          goto LABEL_26;
        case 6:
        case 8:
          type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
          v4 = v3;
          sub_2408E5930();
          goto LABEL_26;
        case 7:
          v4 = v3;
          sub_24087BF18();
          goto LABEL_26;
        case 9:
          type metadata accessor for ToolKitProtoToolDefinition.Version1.Category(0);
          sub_2404FA028(&qword_257013FC8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Category);
          goto LABEL_21;
        case 10:
          v4 = v3;
          sub_2408E590C();
          goto LABEL_26;
        case 11:
          v4 = v3;
          sub_24087BFAC();
          goto LABEL_26;
        case 12:
          type metadata accessor for ToolKitProtoRuntimeRequirement(0);
          sub_2404FA028(&qword_257013CB0, type metadata accessor for ToolKitProtoRuntimeRequirement, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement);
          goto LABEL_21;
        case 13:
          sub_24082920C();
          goto LABEL_25;
        case 14:
          sub_240829184();
LABEL_16:
          v4 = v3;
          sub_2408E58A0();
          goto LABEL_26;
        case 15:
          type metadata accessor for ToolKitProtoSampleInvocationDefinition(0);
          sub_2404FA028(&qword_257013CB8, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
          goto LABEL_21;
        case 16:
          type metadata accessor for ToolKitProtoSystemToolProtocol(0);
          sub_2404FA028(&qword_257013FD0, type metadata accessor for ToolKitProtoSystemToolProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol);
LABEL_21:
          v4 = v3;
          sub_2408E5960();
          goto LABEL_26;
        case 17:
          v4 = v3;
          sub_24087C040();
          goto LABEL_26;
        case 19:
          v4 = v3;
          sub_24087C0D4();
          goto LABEL_26;
        case 20:
          v4 = v3;
          sub_24087C168();
          goto LABEL_26;
        case 21:
          sub_2408291C8();
LABEL_25:
          v4 = v3;
          sub_2408E5870();
LABEL_26:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24087BE84()
{
  type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  type metadata accessor for ToolKitProtoTypeInstance(0);
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  return sub_2408E596C();
}

uint64_t sub_24087BF18()
{
  type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  type metadata accessor for ToolKitProtoAppDefinition(0);
  sub_2404FA028(&qword_257014BF8, type metadata accessor for ToolKitProtoAppDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition);
  return sub_2408E596C();
}

uint64_t sub_24087BFAC()
{
  type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  sub_2404FA028(&qword_257014BE0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Deprecation);
  return sub_2408E596C();
}

uint64_t sub_24087C040()
{
  type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  sub_2404FA028(&qword_257014BA0, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon);
  return sub_2408E596C();
}

uint64_t sub_24087C0D4()
{
  type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  type metadata accessor for ToolKitProtoContainerDefinition(0);
  sub_2404FA028(&qword_257014C38, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
  return sub_2408E596C();
}

uint64_t sub_24087C168()
{
  type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  type metadata accessor for ToolKitProtoContainerDefinition(0);
  sub_2404FA028(&qword_257014C38, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
  return sub_2408E596C();
}

uint64_t ToolKitProtoToolDefinition.Version1.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;

  v5 = v3;
  v9 = *(_QWORD *)(v5 + 8);
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = *(_QWORD *)v5 & 0xFFFFFFFFFFFFLL;
  if (!v10 || (result = sub_2408E5A38(), !v4))
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v13 = *(_QWORD *)(v5 + 16) & 0xFFFFFFFFFFFFLL;
    if (!v13 || (result = sub_2408E5A38(), !v4))
    {
      if (!*(_BYTE *)(v5 + 32) || (sub_240829250(), result = sub_2408E59E4(), !v4))
      {
        if (!*(_QWORD *)(*(_QWORD *)(v5 + 40) + 16)
          || (type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter(0),
              sub_2404FA028(&qword_257013F48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter), result = sub_2408E5A5C(), !v4))
        {
          result = sub_24087C71C(v5, a1, a2, a3);
          if (!v4)
          {
            sub_24087C890(v5);
            sub_24087C904(v5, a1, a2, a3);
            sub_24087CA78(v5);
            if (*(_QWORD *)(*(_QWORD *)(v5 + 48) + 16))
            {
              type metadata accessor for ToolKitProtoToolDefinition.Version1.Category(0);
              sub_2404FA028(&qword_257013FC8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Category);
              sub_2408E5A5C();
            }
            if (*(_QWORD *)(*(_QWORD *)(v5 + 56) + 16))
              sub_2408E5A20();
            sub_24087CAEC(v5, a1, a2, a3);
            if (*(_QWORD *)(*(_QWORD *)(v5 + 64) + 16))
            {
              type metadata accessor for ToolKitProtoRuntimeRequirement(0);
              sub_2404FA028(&qword_257013CB0, type metadata accessor for ToolKitProtoRuntimeRequirement, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement);
              sub_2408E5A5C();
            }
            if (*(_QWORD *)(*(_QWORD *)(v5 + 72) + 16))
            {
              sub_24082920C();
              sub_2408E59CC();
            }
            if (*(_BYTE *)(v5 + 80))
            {
              sub_240829184();
              sub_2408E59E4();
            }
            if (*(_QWORD *)(*(_QWORD *)(v5 + 88) + 16))
            {
              type metadata accessor for ToolKitProtoSampleInvocationDefinition(0);
              sub_2404FA028(&qword_257013CB8, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
              sub_2408E5A5C();
            }
            if (*(_QWORD *)(*(_QWORD *)(v5 + 96) + 16))
            {
              type metadata accessor for ToolKitProtoSystemToolProtocol(0);
              sub_2404FA028(&qword_257013FD0, type metadata accessor for ToolKitProtoSystemToolProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol);
              sub_2408E5A5C();
            }
            sub_24087CC60(v5, a1, a2, a3);
            if (*(_QWORD *)(*(_QWORD *)(v5 + 104) + 16))
            {
              type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter(0);
              sub_2404FA028(&qword_257013F48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
              sub_2408E5A5C();
            }
            sub_24087CDD4(v5, a1, a2, a3);
            sub_24087CF48(v5, a1, a2, a3);
            if (*(_QWORD *)(*(_QWORD *)(v5 + 112) + 16))
            {
              sub_2408291C8();
              sub_2408E59CC();
            }
            type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
            return sub_2408E578C();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_24087C71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  sub_2403A9210(a1 + *(int *)(v12 + 68), (uint64_t)v7, &qword_256FFA428);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA428);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t sub_24087C890(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 72) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t sub_24087C904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoAppDefinition(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  sub_2403A9210(a1 + *(int *)(v12 + 76), (uint64_t)v7, &qword_256FFA438);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA438);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoAppDefinition);
  sub_2404FA028(&qword_257014BF8, type metadata accessor for ToolKitProtoAppDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoAppDefinition);
}

uint64_t sub_24087CA78(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 80) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t sub_24087CAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  sub_2403A9210(a1 + *(int *)(v12 + 84), (uint64_t)v7, &qword_256FFA440);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA440);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
  sub_2404FA028(&qword_257014BE0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Deprecation);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
}

uint64_t sub_24087CC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  sub_2403A9210(a1 + *(int *)(v12 + 88), (uint64_t)v7, &qword_256FFA450);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA450);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
  sub_2404FA028(&qword_257014BA0, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
}

uint64_t sub_24087CDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  sub_2403A9210(a1 + *(int *)(v12 + 92), (uint64_t)v7, &qword_256FFA460);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA460);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoContainerDefinition);
  sub_2404FA028(&qword_257014C38, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoContainerDefinition);
}

uint64_t sub_24087CF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  sub_2403A9210(a1 + *(int *)(v12 + 96), (uint64_t)v7, &qword_256FFA460);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA460);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoContainerDefinition);
  sub_2404FA028(&qword_257014C38, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoContainerDefinition);
}

uint64_t ToolKitProtoToolDefinition.Version1.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1, &qword_257013FD8, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
}

uint64_t sub_24087D0DC(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9E88, &qword_2570136D8);
}

uint64_t sub_24087D0FC()
{
  return ToolKitProtoToolDefinition.Version1.decodeMessage<A>(decoder:)();
}

uint64_t sub_24087D110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24087D124()
{
  sub_2404FA028(&qword_257014EC8, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
  return sub_2408E5828();
}

uint64_t sub_24087D174@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9E90, (uint64_t)qword_2570136E8, a1);
}

uint64_t sub_24087D190()
{
  sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
  return sub_2408E599C();
}

uint64_t sub_24087D1D0()
{
  sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
  return sub_2408E59A8();
}

uint64_t sub_24087D224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013700);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013700);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "ToolType_UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "ToolType_APP_INTENT";
  *(_QWORD *)(v11 + 8) = 19;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "ToolType_SIRI_INTENT";
  *((_QWORD *)v13 + 1) = 20;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "ToolType_ACTION";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.ToolType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9E98, (uint64_t)qword_257013700, a1);
}

uint64_t sub_24087D400@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9E98, (uint64_t)qword_257013700, a1);
}

uint64_t sub_24087D420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013718);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013718);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8A00;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "Flag_UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "Flag_OPENS_APP_WHEN_RUN";
  *(_QWORD *)(v11 + 8) = 23;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "Flag_IS_DISCONTINUED";
  *((_QWORD *)v13 + 1) = 20;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "Flag_IS_UNDISCOVERABLE";
  *((_QWORD *)v15 + 1) = 22;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 8;
  *(_QWORD *)v17 = "Flag_DOES_NOT_IMPLEMENT_PERFORM";
  *((_QWORD *)v17 + 1) = 31;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 16;
  *(_QWORD *)v19 = "Flag_SHOWS_OPEN_WHEN_RUN";
  *((_QWORD *)v19 + 1) = 24;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 32;
  *(_QWORD *)v21 = "Flag_OUTPUT_HAS_SNIPPET";
  *((_QWORD *)v21 + 1) = 23;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 64;
  *(_QWORD *)v23 = "Flag_OUTPUT_PROVIDES_DIALOG";
  *((_QWORD *)v23 + 1) = 27;
  v23[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.Flag._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9EA0, (uint64_t)qword_257013718, a1);
}

uint64_t sub_24087D6E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9EA0, (uint64_t)qword_257013718, a1);
}

uint64_t sub_24087D704()
{
  char *v0;

  return qword_24091D368[*v0];
}

uint64_t sub_24087D718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013730);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013730);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "VisibilityFlag_VISIBLE_FOR_SHORTCUTS";
  *(_QWORD *)(v7 + 8) = 36;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "VisibilityFlag_VISIBLE_FOR_ASSISTANT";
  *((_QWORD *)v11 + 1) = 36;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.VisibilityFlag._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9EA8, (uint64_t)qword_257013730, a1);
}

uint64_t sub_24087D888@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9EA8, (uint64_t)qword_257013730, a1);
}

uint64_t sub_24087D8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013748);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013748);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "AuthenticationPolicy_UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 32;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "AuthenticationPolicy_NONE";
  *(_QWORD *)(v11 + 8) = 25;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "AuthenticationPolicy_REQUIRES_AUTHENTICATION_ON_ORIGIN";
  *((_QWORD *)v13 + 1) = 54;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "AuthenticationPolicy_REQUIRES_AUTHENTICATION_ON_ORIGIN_AND_REMOTE";
  *((_QWORD *)v15 + 1) = 65;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.AuthenticationPolicy._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9EB0, (uint64_t)qword_257013748, a1);
}

uint64_t sub_24087DA7C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9EB0, (uint64_t)qword_257013748, a1);
}

uint64_t sub_24087DA9C()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9E88 != -1)
    swift_once();
  v1 = qword_2570136D8;
  v2 = unk_2570136E0;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013760 = v1;
  *(_QWORD *)algn_257013768 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9EB8, &qword_257013760);
}

uint64_t sub_24087DB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013770);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013770);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EAD90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "name";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "description";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "valueType";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "relationships";
  *((_QWORD *)v17 + 1) = 13;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "sampleInvocations";
  *((_QWORD *)v19 + 1) = 17;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "flags";
  *((_QWORD *)v21 + 1) = 5;
  v21[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9EC0, (uint64_t)qword_257013770, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          sub_2408E593C();
          break;
        case 3:
          sub_2408E5930();
          break;
        case 4:
          sub_2408369F8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, type metadata accessor for ToolKitProtoTypeInstance, &qword_257000CB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
          break;
        case 5:
          type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(0);
          sub_2404FA028(&qword_257013FE0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
          goto LABEL_10;
        case 6:
          type metadata accessor for ToolKitProtoSampleInvocationDefinition(0);
          sub_2404FA028(&qword_257013CB8, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
LABEL_10:
          sub_2408E5960();
          break;
        case 7:
          sub_240829140();
          sub_2408E5870();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;

  v5 = v3;
  v9 = v5[1];
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = *v5 & 0xFFFFFFFFFFFFLL;
  if (!v10 || (result = sub_2408E5A38(), !v4))
  {
    result = v5[2];
    v12 = v5[3];
    v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v13 = result & 0xFFFFFFFFFFFFLL;
    if (!v13 || (result = sub_2408E5A38(), !v4))
    {
      if (v5[8])
        result = sub_2408E5A38();
      if (!v4)
      {
        sub_24087E1EC((uint64_t)v5, a1, a2, a3);
        if (*(_QWORD *)(v5[4] + 16))
        {
          type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(0);
          sub_2404FA028(&qword_257013FE0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
          sub_2408E5A5C();
        }
        if (*(_QWORD *)(v5[5] + 16))
        {
          type metadata accessor for ToolKitProtoSampleInvocationDefinition(0);
          sub_2404FA028(&qword_257013CB8, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
          sub_2408E5A5C();
        }
        if (*(_QWORD *)(v5[6] + 16))
        {
          sub_240829140();
          sub_2408E59CC();
        }
        type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t sub_24087E1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter(0);
  sub_2403A9210(a1 + *(int *)(v12 + 40), (uint64_t)v7, &qword_256FFA428);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA428);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, &qword_257013FE8, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
}

uint64_t sub_24087E380@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  a2[7] = 0;
  a2[8] = 0;
  v3 = (char *)a2 + *(int *)(a1 + 40);
  v4 = type metadata accessor for ToolKitProtoTypeInstance(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  v6 = MEMORY[0x24BEE4AF8];
  a2[4] = MEMORY[0x24BEE4AF8];
  a2[5] = v6;
  a2[6] = v6;
  return result;
}

uint64_t sub_24087E400(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9EB8, &qword_257013760);
}

uint64_t sub_24087E420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24087E434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24087E448()
{
  sub_2404FA028(&qword_257014EC0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
  return sub_2408E5828();
}

uint64_t sub_24087E498@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9EC0, (uint64_t)qword_257013770, a1);
}

uint64_t sub_24087E4B4()
{
  sub_2404FA028(&qword_257013F48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
  return sub_2408E599C();
}

uint64_t sub_24087E4F4()
{
  sub_2404FA028(&qword_257013F48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
  return sub_2408E59A8();
}

uint64_t sub_24087E548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013788);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013788);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "ParameterFlags_UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 26;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "ParameterFlags_HIDDEN";
  *((_QWORD *)v11 + 1) = 21;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "ParameterFlags_SYNTHESIZED";
  *(_QWORD *)(v12 + 8) = 26;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.ParameterFlags._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9EC8, (uint64_t)qword_257013788, a1);
}

uint64_t sub_24087E6F4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9EC8, (uint64_t)qword_257013788, a1);
}

uint64_t sub_24087E714()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9EB8 != -1)
    swift_once();
  v1 = qword_257013760;
  v2 = *(_QWORD *)algn_257013768;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_2570137A0 = v1;
  *(_QWORD *)algn_2570137A8 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9ED0, &qword_2570137A0);
}

uint64_t sub_24087E7C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570137B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570137B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "relation";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9ED8, (uint64_t)qword_2570137B0, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, &qword_257013F28, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
      }
      else if (result == 1)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24044BC48(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_24087EA30, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
}

uint64_t sub_24087EA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C950);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_25700C950);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C950);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
  sub_2404FA028(&qword_257013F28, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship, &qword_257013FF0, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
}

uint64_t sub_24087EBC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404BF554(a1, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, a2);
}

uint64_t sub_24087EBD0(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9ED0, &qword_2570137A0);
}

uint64_t sub_24087EBF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24087EC04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24087EC18()
{
  sub_2404FA028(&qword_257014EB8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
  return sub_2408E5828();
}

uint64_t sub_24087EC68@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9ED8, (uint64_t)qword_2570137B0, a1);
}

uint64_t sub_24087EC84()
{
  sub_2404FA028(&qword_257013FE0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
  return sub_2408E599C();
}

uint64_t sub_24087ECC4()
{
  sub_2404FA028(&qword_257013FE0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
  return sub_2408E59A8();
}

uint64_t sub_24087ED18()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9ED0 != -1)
    swift_once();
  v1 = qword_2570137A0;
  v2 = *(_QWORD *)algn_2570137A8;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_2570137C8 = v1;
  unk_2570137D0 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9EE0, &qword_2570137C8);
}

uint64_t sub_24087EDC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570137D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570137D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8A00;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "isSome";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "isNone";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "equals";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "notEquals";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "greaterThan";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "lessThan";
  *((_QWORD *)v19 + 1) = 8;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "contains";
  *((_QWORD *)v21 + 1) = 8;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "doesNotContain";
  *((_QWORD *)v23 + 1) = 14;
  v23[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9EE8, (uint64_t)qword_2570137D8, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240438FB0(a1, v5, a2, a3, &qword_25700C958, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind, 6);
          break;
        case 2:
          sub_240438FB0(a1, v5, a2, a3, &qword_25700C958, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind, 7);
          break;
        case 3:
          sub_24087F210(v5, a1, a2, a3);
          break;
        case 4:
          sub_24087F650(v5, a1, a2, a3);
          break;
        case 5:
          sub_24087FA94(v5, a1, a2, a3);
          break;
        case 6:
          sub_24087FED8(v5, a1, a2, a3);
          break;
        case 7:
          sub_24088031C(v5, a1, a2, a3);
          break;
        case 8:
          sub_240880760(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24087F210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015260);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C958);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C958);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015260);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_257014B00, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015260);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015260);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015260);
    return sub_2403A97FC((uint64_t)v33, &qword_257015260);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015260);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C958);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24087F650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015268);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C958);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C958);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015268);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014B18, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015268);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015268);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015268);
    return sub_2403A97FC((uint64_t)v33, &qword_257015268);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015268);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C958);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24087FA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015270);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C958);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C958);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015270);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014B30, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015270);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015270);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015270);
    return sub_2403A97FC((uint64_t)v33, &qword_257015270);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015270);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C958);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24087FED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015278);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C958);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C958);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015278);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014B48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015278);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015278);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015278);
    return sub_2403A97FC((uint64_t)v33, &qword_257015278);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015278);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C958);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24088031C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015280);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C958);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C958);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015280);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014B60, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015280);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015280);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015280);
    return sub_2403A97FC((uint64_t)v33, &qword_257015280);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015280);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C958);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240880760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DoesNotContain;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0);
  v6 = *(_QWORD *)(DoesNotContain - 8);
  v7 = MEMORY[0x24BDAC7A8](DoesNotContain);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015288);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = DoesNotContain;
  v25(&v36[-v23], 1, 1, DoesNotContain);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C958);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C958);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015288);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014B78, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015288);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015288);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015288);
    return sub_2403A97FC((uint64_t)v33, &qword_257015288);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015288);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C958);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_25700C958);
  v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_240880C70 + 4 * byte_2409112DE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  return sub_2408E578C();
}

void sub_240880D74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2404A5FE0(v1, v2, v4, v0, &qword_25700C958, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
  if (!v3)
    JUMPOUT(0x240880D2CLL);
  JUMPOUT(0x240880D54);
}

uint64_t sub_240880DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[0] = a3;
  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 7)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240880F70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C958);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C958);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
    sub_2404FA028(&qword_257014B00, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
  __break(1u);
  return result;
}

uint64_t sub_24088110C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C958);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C958);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
    sub_2404FA028(&qword_257014B18, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
  __break(1u);
  return result;
}

uint64_t sub_2408812AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C958);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C958);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
    sub_2404FA028(&qword_257014B30, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
  __break(1u);
  return result;
}

uint64_t sub_24088144C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C958);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C958);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
    sub_2404FA028(&qword_257014B48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
  __break(1u);
  return result;
}

uint64_t sub_2408815EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C958);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C958);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
    sub_2404FA028(&qword_257014B60, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
  __break(1u);
  return result;
}

uint64_t sub_24088178C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DoesNotContain;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DoesNotContain = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain(0);
  MEMORY[0x24BDAC7A8](DoesNotContain);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C958);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C958);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
    sub_2404FA028(&qword_257014B78, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, &qword_257013FF8, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

uint64_t sub_24088194C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind, a1);
}

uint64_t sub_240881958(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9EE0, &qword_2570137C8);
}

uint64_t sub_240881978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24088198C()
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.traverse<A>(visitor:)();
}

uint64_t sub_2408819A0()
{
  sub_2404FA028(&qword_257014EB0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
  return sub_2408E5828();
}

uint64_t sub_2408819F0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9EE8, (uint64_t)qword_2570137D8, a1);
}

uint64_t sub_240881A0C()
{
  sub_2404FA028(&qword_257013F28, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
  return sub_2408E599C();
}

uint64_t sub_240881A4C()
{
  sub_2404FA028(&qword_257013F28, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
  return sub_2408E59A8();
}

uint64_t sub_240881AA0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9EE0 != -1)
    swift_once();
  v1 = qword_2570137C8;
  v2 = unk_2570137D0;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_2570137F0 = v1;
  *(_QWORD *)algn_2570137F8 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9EF0, &qword_2570137F0);
}

uint64_t sub_240881B48(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013800, 1, (uint64_t)"values", 6);
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9EF8, (uint64_t)qword_257013800, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals, &qword_257014000, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
}

uint64_t sub_240881BFC(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9EF0, &qword_2570137F0);
}

uint64_t sub_240881C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240881C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240881C44()
{
  sub_2404FA028(&qword_257014EA8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
  return sub_2408E5828();
}

uint64_t sub_240881C94@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9EF8, (uint64_t)qword_257013800, a1);
}

uint64_t sub_240881CB0()
{
  sub_2404FA028(&qword_257014B00, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
  return sub_2408E599C();
}

uint64_t sub_240881CF0()
{
  sub_2404FA028(&qword_257014B00, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
  return sub_2408E59A8();
}

uint64_t sub_240881D40(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BAAE8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals) & 1;
}

uint64_t sub_240881D68()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9EE0 != -1)
    swift_once();
  v1 = qword_2570137C8;
  v2 = unk_2570137D0;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013818 = v1;
  unk_257013820 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9F00, &qword_257013818);
}

uint64_t sub_240881E14(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013828, 1, (uint64_t)"values", 6);
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9F08, (uint64_t)qword_257013828, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals, &qword_257014008, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
}

uint64_t sub_240881EC8(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9F00, &qword_257013818);
}

uint64_t sub_240881EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240881EFC()
{
  sub_2404FA028(&qword_257014EA0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
  return sub_2408E5828();
}

uint64_t sub_240881F4C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9F08, (uint64_t)qword_257013828, a1);
}

uint64_t sub_240881F68()
{
  sub_2404FA028(&qword_257014B18, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
  return sub_2408E599C();
}

uint64_t sub_240881FA8()
{
  sub_2404FA028(&qword_257014B18, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
  return sub_2408E59A8();
}

uint64_t sub_240881FF8(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BAAE8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals) & 1;
}

uint64_t sub_240882020()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9EE0 != -1)
    swift_once();
  v1 = qword_2570137C8;
  v2 = unk_2570137D0;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013840 = v1;
  *(_QWORD *)algn_257013848 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9F10, &qword_257013840);
}

uint64_t sub_2408820D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013850);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013850);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "values";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "orEqual";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9F18, (uint64_t)qword_257013850, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan.decodeMessage<A>(decoder:)()
{
  return sub_240882650();
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240882778(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan, &qword_257014010, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
}

uint64_t sub_240882288@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_2408822C0(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9F10, &qword_257013840);
}

uint64_t sub_2408822E0()
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan.decodeMessage<A>(decoder:)();
}

uint64_t sub_2408822F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240882308()
{
  sub_2404FA028(&qword_257014E98, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
  return sub_2408E5828();
}

uint64_t sub_240882358@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9F18, (uint64_t)qword_257013850, a1);
}

uint64_t sub_240882374()
{
  sub_2404FA028(&qword_257014B30, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
  return sub_2408E599C();
}

uint64_t sub_2408823B4()
{
  sub_2404FA028(&qword_257014B30, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
  return sub_2408E59A8();
}

uint64_t sub_240882404(uint64_t a1, uint64_t a2)
{
  return sub_2408A8298(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan) & 1;
}

uint64_t sub_240882424()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9EE0 != -1)
    swift_once();
  v1 = qword_2570137C8;
  v2 = unk_2570137D0;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013868 = v1;
  unk_257013870 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9F20, &qword_257013868);
}

uint64_t sub_2408824D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013878);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013878);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "values";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "orEqual";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9F28, (uint64_t)qword_257013878, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan.decodeMessage<A>(decoder:)()
{
  return sub_240882650();
}

uint64_t sub_240882650()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2408E5888();
      }
      else if (result == 1)
      {
        type metadata accessor for ToolKitProtoTypedValue(0);
        sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
        sub_2408E5960();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240882778(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
}

uint64_t sub_240882778(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v4 + 16)
    || (type metadata accessor for ToolKitProtoTypedValue(0),
        sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue), result = sub_2408E5A5C(), !v5))
  {
    if (v4[8] != 1 || (result = sub_2408E59D8(), !v5))
    {
      a4(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan, &qword_257014018, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
}

uint64_t sub_2408828A0(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9F20, &qword_257013868);
}

uint64_t sub_2408828C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2408828D4()
{
  sub_2404FA028(&qword_257014E90, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
  return sub_2408E5828();
}

uint64_t sub_240882924@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9F28, (uint64_t)qword_257013878, a1);
}

uint64_t sub_240882940()
{
  sub_2404FA028(&qword_257014B48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
  return sub_2408E599C();
}

uint64_t sub_240882980()
{
  sub_2404FA028(&qword_257014B48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
  return sub_2408E59A8();
}

uint64_t sub_2408829D0(uint64_t a1, uint64_t a2)
{
  return sub_2408A8298(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan) & 1;
}

uint64_t sub_2408829F0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9EE0 != -1)
    swift_once();
  v1 = qword_2570137C8;
  v2 = unk_2570137D0;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013890 = v1;
  *(_QWORD *)algn_257013898 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9F30, &qword_257013890);
}

uint64_t sub_240882A9C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_2570138A0, 1, (uint64_t)"values", 6);
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9F38, (uint64_t)qword_2570138A0, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains, &qword_257014020, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
}

uint64_t sub_240882B50(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9F30, &qword_257013890);
}

uint64_t sub_240882B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240882B84()
{
  sub_2404FA028(&qword_257014E88, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
  return sub_2408E5828();
}

uint64_t sub_240882BD4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9F38, (uint64_t)qword_2570138A0, a1);
}

uint64_t sub_240882BF0()
{
  sub_2404FA028(&qword_257014B60, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
  return sub_2408E599C();
}

uint64_t sub_240882C30()
{
  sub_2404FA028(&qword_257014B60, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
  return sub_2408E59A8();
}

uint64_t sub_240882C80(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BAAE8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains) & 1;
}

uint64_t sub_240882CA8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9EE0 != -1)
    swift_once();
  v1 = qword_2570137C8;
  v2 = unk_2570137D0;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_2570138B8 = v1;
  unk_2570138C0 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9F40, &qword_2570138B8);
}

uint64_t sub_240882D5C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_2570138C8, 1, (uint64_t)"values", 6);
}

uint64_t static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9F48, (uint64_t)qword_2570138C8, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
}

uint64_t ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain, &qword_257014028, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
}

uint64_t sub_240882E10(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9F40, &qword_2570138B8);
}

uint64_t sub_240882E30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240882E44()
{
  sub_2404FA028(&qword_257014E80, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
  return sub_2408E5828();
}

uint64_t sub_240882E94@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9F48, (uint64_t)qword_2570138C8, a1);
}

uint64_t sub_240882EB0()
{
  sub_2404FA028(&qword_257014B78, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
  return sub_2408E599C();
}

uint64_t sub_240882EF0()
{
  sub_2404FA028(&qword_257014B78, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
  return sub_2408E59A8();
}

uint64_t sub_240882F40(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BAAE8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain) & 1;
}

uint64_t sub_240882F68()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9E88 != -1)
    swift_once();
  v1 = qword_2570136D8;
  v2 = unk_2570136E0;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_2570138E0 = v1;
  *(_QWORD *)algn_2570138E8 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Category.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9F50, &qword_2570138E0);
}

uint64_t sub_240883014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570138F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570138F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "name";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "subcategoryName";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.Category._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9F58, (uint64_t)qword_2570138F0, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.Category.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240887848(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C118]);
}

uint64_t ToolKitProtoToolDefinition.Version1.Category.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240884A8C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
}

uint64_t static ToolKitProtoToolDefinition.Version1.Category.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2408A8BF0(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category) & 1;
}

uint64_t ToolKitProtoToolDefinition.Version1.Category.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.Category, &qword_257014030, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Category);
}

uint64_t sub_240883200(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9F50, &qword_2570138E0);
}

uint64_t sub_240883220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Deprecation.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240883234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Category.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240883248()
{
  sub_2404FA028(&qword_257014E78, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Category);
  return sub_2408E5828();
}

uint64_t sub_240883298@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9F58, (uint64_t)qword_2570138F0, a1);
}

uint64_t sub_2408832B4()
{
  sub_2404FA028(&qword_257013FC8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Category);
  return sub_2408E599C();
}

uint64_t sub_2408832F4()
{
  sub_2404FA028(&qword_257013FC8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Category);
  return sub_2408E59A8();
}

uint64_t sub_240883344(_QWORD *a1, char *a2)
{
  return sub_2408A8BF0(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category) & 1;
}

uint64_t sub_240883364()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9E88 != -1)
    swift_once();
  v1 = qword_2570136D8;
  v2 = unk_2570136E0;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013908 = v1;
  unk_257013910 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.ToolIcon.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9F60, &qword_257013908);
}

uint64_t sub_240883410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013918);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013918);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "workflowAsset";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "symbol";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.ToolIcon._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9F68, (uint64_t)qword_257013918, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.ToolIcon.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_24088363C((uint64_t)v5, a1, a2, a3);
      }
      else if (result == 1)
      {
        sub_240499908(a1, v5, a2, a3, &qword_256FFA448, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind, 0);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24088363C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015250);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA448);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA448);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015250);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014BC8, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015250);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015250);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015250);
    return sub_2403A97FC((uint64_t)v33, &qword_257015250);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015250);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA448);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoToolDefinition.Version1.ToolIcon.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v4, &qword_256FFA448);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    goto LABEL_2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240883D10(v0);
    result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
    if (!v1)
    {
LABEL_2:
      type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
      return sub_2408E578C();
    }
  }
  else
  {
    sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
    result = sub_240883BE8(v0);
    if (!v1)
      goto LABEL_2;
  }
  return result;
}

uint64_t sub_240883BE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA448);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA448);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2408E5A38();
    return swift_bridgeObjectRelease();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
  __break(1u);
  return result;
}

uint64_t sub_240883D10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA448);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA448);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
    sub_2404FA028(&qword_257014BC8, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoToolDefinition.Version1.ToolIcon.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon, &qword_257014038, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon);
}

uint64_t sub_240883ED0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind, a1);
}

uint64_t sub_240883EDC(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9F60, &qword_257013908);
}

uint64_t sub_240883EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.ToolIcon.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240883F10()
{
  return ToolKitProtoToolDefinition.Version1.ToolIcon.traverse<A>(visitor:)();
}

uint64_t sub_240883F24()
{
  sub_2404FA028(&qword_257014E70, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon);
  return sub_2408E5828();
}

uint64_t sub_240883F74@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9F68, (uint64_t)qword_257013918, a1);
}

uint64_t sub_240883F90()
{
  sub_2404FA028(&qword_257014BA0, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon);
  return sub_2408E599C();
}

uint64_t sub_240883FD0()
{
  sub_2404FA028(&qword_257014BA0, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon);
  return sub_2408E59A8();
}

uint64_t sub_240884024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013930);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013930);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "ToolSymbolIconStyle_MULTICOLOR";
  *(_QWORD *)(v7 + 8) = 30;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "ToolSymbolIconStyle_TINTED";
  *((_QWORD *)v11 + 1) = 26;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIconStyle._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9F70, (uint64_t)qword_257013930, a1);
}

uint64_t sub_240884190@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9F70, (uint64_t)qword_257013930, a1);
}

uint64_t sub_2408841AC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9F60 != -1)
    swift_once();
  v1 = qword_257013908;
  v2 = unk_257013910;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013948 = v1;
  unk_257013950 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9F78, &qword_257013948);
}

uint64_t sub_240884260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013958);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013958);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "name";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "style";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "foreground";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "background";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9F80, (uint64_t)qword_257013958, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
          v4 = v3;
          sub_2408E593C();
          goto LABEL_5;
        case 2:
          sub_2408290FC();
          v4 = v3;
          sub_2408E58A0();
          goto LABEL_5;
        case 4:
          v4 = v3;
          sub_2408E5930();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    if (*(_BYTE *)(v0 + 16) != 1 || (sub_2408290FC(), result = sub_2408E59E4(), !v1))
    {
      result = *(_QWORD *)(v0 + 24);
      v5 = *(_QWORD *)(v0 + 32);
      v6 = HIBYTE(v5) & 0xF;
      if ((v5 & 0x2000000000000000) == 0)
        v6 = result & 0xFFFFFFFFFFFFLL;
      if (!v6 || (result = sub_2408E5A38(), !v1))
      {
        if (*(_QWORD *)(v0 + 48))
          result = sub_2408E5A38();
        if (!v1)
        {
          type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0);
          return sub_2408E578C();
        }
      }
    }
  }
  return result;
}

uint64_t ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon, &qword_257014040, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
}

uint64_t sub_2408846AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0xE000000000000000;
  return result;
}

uint64_t sub_2408846E8(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9F78, &qword_257013948);
}

uint64_t sub_240884708()
{
  return ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon.decodeMessage<A>(decoder:)();
}

uint64_t sub_24088471C()
{
  return ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon.traverse<A>(visitor:)();
}

uint64_t sub_240884730()
{
  sub_2404FA028(&qword_257014E68, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
  return sub_2408E5828();
}

uint64_t sub_240884780@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9F80, (uint64_t)qword_257013958, a1);
}

uint64_t sub_24088479C()
{
  sub_2404FA028(&qword_257014BC8, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
  return sub_2408E599C();
}

uint64_t sub_2408847DC()
{
  sub_2404FA028(&qword_257014BC8, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
  return sub_2408E59A8();
}

uint64_t sub_240884830()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FF9E88 != -1)
    swift_once();
  v1 = qword_2570136D8;
  v2 = unk_2570136E0;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013970 = v1;
  *(_QWORD *)algn_257013978 = v2;
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Deprecation.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9F88, &qword_257013970);
}

uint64_t sub_2408848E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013980);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013980);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "deprecationMessage";
  *(_QWORD *)(v7 + 8) = 18;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "replacedByToolId";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinition.Version1.Deprecation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9F90, (uint64_t)qword_257013980, a1);
}

uint64_t ToolKitProtoToolDefinition.Version1.Deprecation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240887848(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C118]);
}

uint64_t ToolKitProtoToolDefinition.Version1.Deprecation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240884A8C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
}

uint64_t sub_240884A8C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;

  result = *v4;
  v8 = v4[1];
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *v4 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v5))
  {
    if (v4[3])
      result = sub_2408E5A38();
    if (!v5)
    {
      a4(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t static ToolKitProtoToolDefinition.Version1.Deprecation.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2408A8BF0(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation) & 1;
}

uint64_t ToolKitProtoToolDefinition.Version1.Deprecation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation, &qword_257014048, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Deprecation);
}

uint64_t sub_240884BA4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  a1[2] = 0;
  a1[3] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_240884BD8(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9F88, &qword_257013970);
}

uint64_t sub_240884BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinition.Version1.Deprecation.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240884C0C()
{
  sub_2404FA028(&qword_257014E60, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Deprecation);
  return sub_2408E5828();
}

uint64_t sub_240884C5C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9F90, (uint64_t)qword_257013980, a1);
}

uint64_t sub_240884C78()
{
  sub_2404FA028(&qword_257014BE0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Deprecation);
  return sub_2408E599C();
}

uint64_t sub_240884CB8()
{
  sub_2404FA028(&qword_257014BE0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Deprecation);
  return sub_2408E59A8();
}

uint64_t sub_240884D08(_QWORD *a1, char *a2)
{
  return sub_2408A8BF0(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation) & 1;
}

unint64_t static ToolKitProtoAppDefinition.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_240884D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013998);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013998);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EAD90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "id";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "name";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "bundleId";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "bundleVersion";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "teamId";
  *((_QWORD *)v17 + 1) = 6;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "device";
  *((_QWORD *)v19 + 1) = 6;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "origin";
  *((_QWORD *)v21 + 1) = 6;
  v21[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoAppDefinition._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9F98, (uint64_t)qword_257013998, a1);
}

uint64_t ToolKitProtoAppDefinition.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          v12 = v11;
          sub_2408E593C();
          goto LABEL_6;
        case 6:
          v12 = v11;
          sub_2408369F8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoAppDefinition, type metadata accessor for ToolKitProtoAppDefinition.Device, &qword_257014C20, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition.Device);
          goto LABEL_6;
        case 7:
          sub_2408290B8();
          v12 = v11;
          sub_2408E58A0();
LABEL_6:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoAppDefinition.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v5 = v3;
  v9 = *(_QWORD *)(v5 + 8);
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = *(_QWORD *)v5 & 0xFFFFFFFFFFFFLL;
  if (!v10 || (result = sub_2408E5A38(), !v4))
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v13 = *(_QWORD *)(v5 + 16) & 0xFFFFFFFFFFFFLL;
    if (!v13 || (result = sub_2408E5A38(), !v4))
    {
      v14 = *(_QWORD *)(v5 + 40);
      v15 = HIBYTE(v14) & 0xF;
      if ((v14 & 0x2000000000000000) == 0)
        v15 = *(_QWORD *)(v5 + 32) & 0xFFFFFFFFFFFFLL;
      if (!v15 || (result = sub_2408E5A38(), !v4))
      {
        v16 = *(_QWORD *)(v5 + 56);
        v17 = HIBYTE(v16) & 0xF;
        if ((v16 & 0x2000000000000000) == 0)
          v17 = *(_QWORD *)(v5 + 48) & 0xFFFFFFFFFFFFLL;
        if (!v17 || (result = sub_2408E5A38(), !v4))
        {
          v18 = *(_QWORD *)(v5 + 72);
          v19 = HIBYTE(v18) & 0xF;
          if ((v18 & 0x2000000000000000) == 0)
            v19 = *(_QWORD *)(v5 + 64) & 0xFFFFFFFFFFFFLL;
          if (!v19 || (result = sub_2408E5A38(), !v4))
          {
            result = sub_2408852F0(v5, a1, a2, a3);
            if (!v4)
            {
              if (*(_BYTE *)(v5 + 80))
              {
                sub_2408290B8();
                sub_2408E59E4();
              }
              type metadata accessor for ToolKitProtoAppDefinition(0);
              return sub_2408E578C();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2408852F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoAppDefinition(0);
  sub_2403A9210(a1 + *(int *)(v12 + 40), (uint64_t)v7, &qword_256FFA430);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA430);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoAppDefinition.Device);
  sub_2404FA028(&qword_257014C20, type metadata accessor for ToolKitProtoAppDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition.Device);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoAppDefinition.Device);
}

uint64_t ToolKitProtoAppDefinition.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoAppDefinition, &qword_257014050, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition);
}

uint64_t sub_240885484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a2 + *(int *)(a1 + 40);
  v4 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0xE000000000000000;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0xE000000000000000;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0xE000000000000000;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = 0xE000000000000000;
  *(_BYTE *)(a2 + 80) = 0;
  return result;
}

unint64_t sub_240885500()
{
  return 0xD000000000000015;
}

uint64_t sub_24088551C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAppDefinition.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240885530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAppDefinition.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240885544()
{
  sub_2404FA028(&qword_257014E58, type metadata accessor for ToolKitProtoAppDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition);
  return sub_2408E5828();
}

uint64_t sub_240885594@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9F98, (uint64_t)qword_257013998, a1);
}

uint64_t sub_2408855B0()
{
  sub_2404FA028(&qword_257014BF8, type metadata accessor for ToolKitProtoAppDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition);
  return sub_2408E599C();
}

uint64_t sub_2408855F0()
{
  sub_2404FA028(&qword_257014BF8, type metadata accessor for ToolKitProtoAppDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition);
  return sub_2408E59A8();
}

uint64_t sub_240885644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570139B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570139B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "Origin_UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 18;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "Origin_FIRST_PARTY";
  *((_QWORD *)v11 + 1) = 18;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "Origin_THIRD_PARTY";
  *(_QWORD *)(v12 + 8) = 18;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoAppDefinition.Origin._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9FA0, (uint64_t)qword_2570139B0, a1);
}

uint64_t sub_2408857EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9FA0, (uint64_t)qword_2570139B0, a1);
}

uint64_t sub_24088580C()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_2570139C8 = 0xD000000000000015;
  unk_2570139D0 = 0x8000000240929D90;
  return result;
}

uint64_t static ToolKitProtoAppDefinition.Device.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9FA8, &qword_2570139C8);
}

uint64_t sub_240885894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570139D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570139D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "local";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "remote";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoAppDefinition.Device._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9FB0, (uint64_t)qword_2570139D8, a1);
}

uint64_t ToolKitProtoAppDefinition.Device.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240885A1C(a1, a2, a3, sub_240742848);
}

uint64_t sub_240885A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t result;
  char v12;

  v7 = v4;
  while (1)
  {
    result = sub_2408E5858();
    if (v5 || (v12 & 1) != 0)
      break;
    if (result == 2)
    {
      sub_240886D5C();
    }
    else if (result == 1)
    {
      sub_240886B9C(a1, v7, a2, a3, a4);
    }
  }
  return result;
}

uint64_t ToolKitProtoAppDefinition.Device.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240886E44(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoAppDefinition.Device);
}

uint64_t static ToolKitProtoAppDefinition.Device.== infix(_:_:)(uint64_t *a1, char *a2)
{
  return sub_2408A53B0(a1, a2, (void (*)(uint64_t, uint64_t))sub_240742834, (void (*)(uint64_t, uint64_t))sub_240742848, type metadata accessor for ToolKitProtoAppDefinition.Device) & 1;
}

uint64_t ToolKitProtoAppDefinition.Device.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoAppDefinition.Device, &qword_257014058, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition.Device);
}

uint64_t sub_240885B28@<X0>(_OWORD *a1@<X8>)
{
  *a1 = xmmword_240910FE0;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t sub_240885B50(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9FA8, &qword_2570139C8);
}

uint64_t sub_240885B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAppDefinition.Device.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240885B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoAppDefinition.Device.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240885B98()
{
  sub_2404FA028(&qword_257014E50, type metadata accessor for ToolKitProtoAppDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition.Device);
  return sub_2408E5828();
}

uint64_t sub_240885BE8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9FB0, (uint64_t)qword_2570139D8, a1);
}

uint64_t sub_240885C04()
{
  sub_2404FA028(&qword_257014C20, type metadata accessor for ToolKitProtoAppDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition.Device);
  return sub_2408E599C();
}

uint64_t sub_240885C44()
{
  sub_2404FA028(&qword_257014C20, type metadata accessor for ToolKitProtoAppDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition.Device);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoContainerDefinition.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240885CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570139F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570139F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EAD90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "name";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "containerId";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "bundleVersion";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "containerType";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "teamId";
  *((_QWORD *)v17 + 1) = 6;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "device";
  *((_QWORD *)v19 + 1) = 6;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "origin";
  *((_QWORD *)v21 + 1) = 6;
  v21[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoContainerDefinition._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9FB8, (uint64_t)qword_2570139F0, a1);
}

uint64_t ToolKitProtoContainerDefinition.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 2:
        case 3:
          v12 = v11;
          sub_2408E593C();
          goto LABEL_11;
        case 4:
        case 6:
          v12 = v11;
          sub_2408E5930();
          goto LABEL_11;
        case 5:
          sub_240829030();
          goto LABEL_10;
        case 7:
          v12 = v11;
          sub_2408369F8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoContainerDefinition, type metadata accessor for ToolKitProtoContainerDefinition.Device, &qword_257014C70, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition.Device);
          goto LABEL_11;
        case 8:
          sub_240829074();
LABEL_10:
          v12 = v11;
          sub_2408E58A0();
LABEL_11:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoContainerDefinition.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;

  v5 = v3;
  v9 = *(_QWORD *)(v5 + 8);
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = *(_QWORD *)v5 & 0xFFFFFFFFFFFFLL;
  if (!v10 || (result = sub_2408E5A38(), !v4))
  {
    result = *(_QWORD *)(v5 + 16);
    v12 = *(_QWORD *)(v5 + 24);
    v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v13 = result & 0xFFFFFFFFFFFFLL;
    if (!v13 || (result = sub_2408E5A38(), !v4))
    {
      if (*(_QWORD *)(v5 + 48))
        result = sub_2408E5A38();
      if (!v4)
      {
        if (*(_BYTE *)(v5 + 32))
        {
          sub_240829030();
          sub_2408E59E4();
        }
        if (*(_QWORD *)(v5 + 64))
          sub_2408E5A38();
        sub_240886274(v5, a1, a2, a3);
        if (*(_BYTE *)(v5 + 33))
        {
          sub_240829074();
          sub_2408E59E4();
        }
        type metadata accessor for ToolKitProtoContainerDefinition(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t sub_240886274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  sub_2403A9210(a1 + *(int *)(v12 + 40), (uint64_t)v7, &qword_256FFA458);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA458);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoContainerDefinition.Device);
  sub_2404FA028(&qword_257014C70, type metadata accessor for ToolKitProtoContainerDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition.Device);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoContainerDefinition.Device);
}

uint64_t ToolKitProtoContainerDefinition.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoContainerDefinition, &qword_257014060, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
}

uint64_t sub_240886408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  v3 = a2 + *(int *)(a1 + 40);
  v4 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0xE000000000000000;
  *(_WORD *)(a2 + 32) = 0;
  return result;
}

unint64_t sub_240886484()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2408864A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoContainerDefinition.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2408864B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoContainerDefinition.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2408864C8()
{
  sub_2404FA028(&qword_257014E48, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
  return sub_2408E5828();
}

uint64_t sub_240886518@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9FB8, (uint64_t)qword_2570139F0, a1);
}

uint64_t sub_240886534()
{
  sub_2404FA028(&qword_257014C38, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
  return sub_2408E599C();
}

uint64_t sub_240886574()
{
  sub_2404FA028(&qword_257014C38, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
  return sub_2408E59A8();
}

uint64_t sub_2408865C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013A08);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013A08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "Origin_UNSPECIFIED";
  *(_QWORD *)(v7 + 8) = 18;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "Origin_FIRST_PARTY";
  *((_QWORD *)v11 + 1) = 18;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "Origin_THIRD_PARTY";
  *(_QWORD *)(v12 + 8) = 18;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoContainerDefinition.Origin._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9FC0, (uint64_t)qword_257013A08, a1);
}

uint64_t sub_240886770@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9FC0, (uint64_t)qword_257013A08, a1);
}

uint64_t sub_240886790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013A20);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013A20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "Type_APP";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "Type_DAEMON";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "Type_EXTENSION";
  *((_QWORD *)v13 + 1) = 14;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "Type_FRAMEWORK";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoContainerDefinition.TypeEnum._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9FC8, (uint64_t)qword_257013A20, a1);
}

uint64_t sub_24088696C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9FC8, (uint64_t)qword_257013A20, a1);
}

uint64_t sub_24088698C()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013A38 = 0xD00000000000001BLL;
  unk_257013A40 = 0x8000000240929DB0;
  return result;
}

uint64_t static ToolKitProtoContainerDefinition.Device.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9FD0, &qword_257013A38);
}

uint64_t sub_240886A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013A48);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013A48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "local";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "remote";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoContainerDefinition.Device._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9FD8, (uint64_t)qword_257013A48, a1);
}

uint64_t ToolKitProtoContainerDefinition.Device.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240885A1C(a1, a2, a3, sub_240829750);
}

uint64_t sub_240886B9C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  int v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  _QWORD *v22;

  v21 = a5;
  v22 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v20 - v10;
  v12 = sub_2408E5714();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v14 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, 1, 1, v12);
  sub_2404FA028(&qword_257000D10, v13, MEMORY[0x24BE5B938]);
  sub_2408E5894();
  if (v5)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  sub_2403A9210((uint64_t)v11, (uint64_t)v9, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v12);
  sub_2403A97FC((uint64_t)v9, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  if (v22[1] != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  v17 = v22;
  v18 = *v22;
  v19 = v22[1];
  *v22 = 0;
  v17[1] = 0;
  return v21(v18, v19);
}

uint64_t sub_240886D5C()
{
  uint64_t v0;
  uint64_t result;

  result = sub_2408E5930();
  if (v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t ToolKitProtoContainerDefinition.Device.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240886E44(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoContainerDefinition.Device);
}

uint64_t sub_240886E44(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;

  v7 = *(_QWORD *)(v4 + 8);
  if (!v7)
  {
    result = sub_240886F10(v4);
    if (v5)
      return result;
    goto LABEL_6;
  }
  if (v7 == 1 || (result = sub_2408E5A38(), !v5))
  {
LABEL_6:
    a4(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240886F10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 8))
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t static ToolKitProtoContainerDefinition.Device.== infix(_:_:)(uint64_t *a1, char *a2)
{
  return sub_2408A53B0(a1, a2, (void (*)(uint64_t, uint64_t))sub_2408AFAC8, (void (*)(uint64_t, uint64_t))sub_240829750, type metadata accessor for ToolKitProtoContainerDefinition.Device) & 1;
}

uint64_t ToolKitProtoContainerDefinition.Device.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoContainerDefinition.Device, &qword_257014068, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition.Device);
}

uint64_t sub_240887044(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9FD0, &qword_257013A38);
}

uint64_t sub_240887064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoContainerDefinition.Device.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240887078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoContainerDefinition.Device.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24088708C()
{
  sub_2404FA028(&qword_257014E40, type metadata accessor for ToolKitProtoContainerDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition.Device);
  return sub_2408E5828();
}

uint64_t sub_2408870DC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9FD8, (uint64_t)qword_257013A48, a1);
}

uint64_t sub_2408870F8()
{
  sub_2404FA028(&qword_257014C70, type metadata accessor for ToolKitProtoContainerDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition.Device);
  return sub_2408E599C();
}

uint64_t sub_240887138()
{
  sub_2404FA028(&qword_257014C70, type metadata accessor for ToolKitProtoContainerDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition.Device);
  return sub_2408E59A8();
}

uint64_t sub_240887188(uint64_t *a1, char *a2)
{
  return sub_2408A53B0(a1, a2, (void (*)(uint64_t, uint64_t))sub_2408AFAC8, (void (*)(uint64_t, uint64_t))sub_240829750, type metadata accessor for ToolKitProtoContainerDefinition.Device) & 1;
}

unint64_t static ToolKitProtoTypeDisplayRepresentation.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_2408871D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013A60);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013A60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "name";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "numericFormat";
  *((_QWORD *)v11 + 1) = 13;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "synonyms";
  *(_QWORD *)(v12 + 8) = 8;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoTypeDisplayRepresentation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9FE0, (uint64_t)qword_257013A60, a1);
}

uint64_t ToolKitProtoTypeDisplayRepresentation.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_2408E590C();
          break;
        case 2:
          sub_2408E5930();
          break;
        case 1:
          sub_2408E593C();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoTypeDisplayRepresentation.traverse<A>(visitor:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = *v0;
  v3 = v0[1];
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v4 || (result = sub_2408E5A38(), !v1))
  {
    if (v0[4])
      result = sub_2408E5A38();
    if (!v1)
    {
      if (*(_QWORD *)(v0[2] + 16))
        sub_2408E5A20();
      type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t ToolKitProtoTypeDisplayRepresentation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoTypeDisplayRepresentation, &qword_257014070, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
}

unint64_t sub_240887558()
{
  return 0xD000000000000021;
}

uint64_t sub_240887574()
{
  return ToolKitProtoTypeDisplayRepresentation.decodeMessage<A>(decoder:)();
}

uint64_t sub_240887588()
{
  return ToolKitProtoTypeDisplayRepresentation.traverse<A>(visitor:)();
}

uint64_t sub_24088759C()
{
  sub_2404FA028(&qword_257014E38, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
  return sub_2408E5828();
}

uint64_t sub_2408875EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9FE0, (uint64_t)qword_257013A60, a1);
}

uint64_t sub_240887608()
{
  sub_2404FA028(&qword_2570016E0, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
  return sub_2408E599C();
}

uint64_t sub_240887648()
{
  sub_2404FA028(&qword_2570016E0, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoPluginModelData.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_2408876B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013A78);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013A78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "bundleIdentifier";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoPluginModelData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9FE8, (uint64_t)qword_257013A78, a1);
}

uint64_t ToolKitProtoPluginModelData.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240887848(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A8], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t sub_240887848(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v12;

  result = sub_2408E5858();
  if (!v6)
  {
    while ((v12 & 1) == 0)
    {
      if (result == 2)
      {
        a5(v5 + 16, a2, a3);
      }
      else if (result == 1)
      {
        a4(v5, a2, a3);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

void ToolKitProtoPluginModelData.traverse<A>(visitor:)()
{
  sub_240887914();
}

void sub_240887914()
{
  __asm { BR              X10 }
}

uint64_t sub_240887964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_2408E59F0(), !v2))
  {
    v6 = *(_QWORD *)(v3 + 24);
    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = *(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFLL;
    if (!v7 || (result = sub_2408E5A38(), !v2))
    {
      v4(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t static ToolKitProtoPluginModelData.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_2404D3268(a1, a2, type metadata accessor for ToolKitProtoPluginModelData) & 1;
}

uint64_t ToolKitProtoPluginModelData.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoPluginModelData, &qword_257014078, (uint64_t)&protocol conformance descriptor for ToolKitProtoPluginModelData);
}

unint64_t sub_240887A68()
{
  return 0xD000000000000017;
}

void sub_240887A84()
{
  ToolKitProtoPluginModelData.traverse<A>(visitor:)();
}

uint64_t sub_240887A98()
{
  sub_2404FA028(&qword_257014E30, type metadata accessor for ToolKitProtoPluginModelData, (uint64_t)&protocol conformance descriptor for ToolKitProtoPluginModelData);
  return sub_2408E5828();
}

uint64_t sub_240887AE8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9FE8, (uint64_t)qword_257013A78, a1);
}

uint64_t sub_240887B04()
{
  sub_2404FA028(&qword_257014C98, type metadata accessor for ToolKitProtoPluginModelData, (uint64_t)&protocol conformance descriptor for ToolKitProtoPluginModelData);
  return sub_2408E599C();
}

uint64_t sub_240887B44()
{
  sub_2404FA028(&qword_257014C98, type metadata accessor for ToolKitProtoPluginModelData, (uint64_t)&protocol conformance descriptor for ToolKitProtoPluginModelData);
  return sub_2408E59A8();
}

uint64_t sub_240887B94(uint64_t *a1, uint64_t a2)
{
  return sub_2404D3268(a1, a2, type metadata accessor for ToolKitProtoPluginModelData) & 1;
}

unint64_t static ToolKitProtoDisplayRepresentation.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240887BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013A90);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013A90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "title";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "subtitle";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "altText";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "image";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "synonyms";
  *((_QWORD *)v17 + 1) = 8;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "snippetPluginModel";
  *((_QWORD *)v19 + 1) = 18;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoDisplayRepresentation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9FF0, (uint64_t)qword_257013A90, a1);
}

uint64_t ToolKitProtoDisplayRepresentation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2408E593C();
          break;
        case 2:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoDisplayRepresentation, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle, &qword_257014CE0, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle);
          break;
        case 3:
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoDisplayRepresentation, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText, &qword_257014D10, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText);
          break;
        case 4:
          sub_2404557D8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoDisplayRepresentation, type metadata accessor for ToolKitProtoDisplayRepresentation.Image, &qword_257014D40, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image);
          break;
        case 5:
          sub_2408E590C();
          break;
        case 6:
          sub_240457AD4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoDisplayRepresentation, type metadata accessor for ToolKitProtoPluginModelData, &qword_257014C98, (uint64_t)&protocol conformance descriptor for ToolKitProtoPluginModelData);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoDisplayRepresentation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = v3[1];
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    result = sub_240888124((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      sub_240888298((uint64_t)v3, a1, a2, a3);
      sub_24088840C((uint64_t)v3, a1, a2, a3);
      if (*(_QWORD *)(v3[2] + 16))
        sub_2408E5A20();
      sub_240888580((uint64_t)v3, a1, a2, a3);
      type metadata accessor for ToolKitProtoDisplayRepresentation(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_240888124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C960);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_25700C960);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C960);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
  sub_2404FA028(&qword_257014CE0, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
}

uint64_t sub_240888298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C968);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_25700C968);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C968);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
  sub_2404FA028(&qword_257014D10, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
}

uint64_t sub_24088840C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C970);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  sub_2403A9210(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_25700C970);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C970);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
  sub_2404FA028(&qword_257014D40, type metadata accessor for ToolKitProtoDisplayRepresentation.Image, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
}

uint64_t sub_240888580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C978);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoPluginModelData(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  sub_2403A9210(a1 + *(int *)(v12 + 36), (uint64_t)v7, &qword_25700C978);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_25700C978);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoPluginModelData);
  sub_2404FA028(&qword_257014C98, type metadata accessor for ToolKitProtoPluginModelData, (uint64_t)&protocol conformance descriptor for ToolKitProtoPluginModelData);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoPluginModelData);
}

uint64_t ToolKitProtoDisplayRepresentation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoDisplayRepresentation, &qword_257014080, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
}

uint64_t sub_240888714@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;

  v4 = (char *)a2 + a1[6];
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + a1[7];
  v7 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (char *)a2 + a1[8];
  v9 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (char *)a2 + a1[9];
  v11 = type metadata accessor for ToolKitProtoPluginModelData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_24088880C()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240888828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoDisplayRepresentation.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24088883C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoDisplayRepresentation.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240888850()
{
  sub_2404FA028(&qword_257014E28, type metadata accessor for ToolKitProtoDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
  return sub_2408E5828();
}

uint64_t sub_2408888A0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9FF0, (uint64_t)qword_257013A90, a1);
}

uint64_t sub_2408888BC()
{
  sub_2404FA028(&qword_257014CB0, type metadata accessor for ToolKitProtoDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
  return sub_2408E599C();
}

uint64_t sub_2408888FC()
{
  sub_2404FA028(&qword_257014CB0, type metadata accessor for ToolKitProtoDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
  return sub_2408E59A8();
}

uint64_t sub_240888950()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013AA8 = 0xD00000000000001DLL;
  unk_257013AB0 = 0x8000000240929E20;
  return result;
}

uint64_t static ToolKitProtoDisplayRepresentation.Storage.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FF9FF8, &qword_257013AA8);
}

uint64_t sub_2408889D8(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013AB8, 1, (uint64_t)"data", 4);
}

uint64_t static ToolKitProtoDisplayRepresentation.Storage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FFA000, (uint64_t)qword_257013AB8, a1);
}

uint64_t ToolKitProtoDisplayRepresentation.Storage.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A8]);
}

void ToolKitProtoDisplayRepresentation.Storage.traverse<A>(visitor:)()
{
  sub_240888A48();
}

void sub_240888A48()
{
  __asm { BR              X10 }
}

uint64_t sub_240888A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(_QWORD);
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_2408E59F0(), !v2))
  {
    v3(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t ToolKitProtoDisplayRepresentation.Storage.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, &qword_257014088, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
}

uint64_t sub_240888B44(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FF9FF8, &qword_257013AA8);
}

void sub_240888B64()
{
  ToolKitProtoDisplayRepresentation.Storage.traverse<A>(visitor:)();
}

uint64_t sub_240888B78()
{
  sub_2404FA028(&qword_257014E20, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
  return sub_2408E5828();
}

uint64_t sub_240888BC8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA000, (uint64_t)qword_257013AB8, a1);
}

uint64_t sub_240888BE4()
{
  sub_2404FA028(&qword_257014CC8, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
  return sub_2408E599C();
}

uint64_t sub_240888C24()
{
  sub_2404FA028(&qword_257014CC8, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
  return sub_2408E59A8();
}

uint64_t sub_240888C74(uint64_t *a1, uint64_t a2)
{
  return sub_2404E0934(a1, a2, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage) & 1;
}

uint64_t sub_240888C94()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013AD0 = 0xD00000000000001DLL;
  *(_QWORD *)algn_257013AD8 = 0x8000000240929E20;
  return result;
}

uint64_t static ToolKitProtoDisplayRepresentation.Subtitle.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FFA008, &qword_257013AD0);
}

uint64_t sub_240888D20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013AE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013AE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lazy";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "static";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoDisplayRepresentation.Subtitle._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FFA010, (uint64_t)qword_257013AE0, a1);
}

uint64_t ToolKitProtoDisplayRepresentation.Subtitle.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24086CC14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240888EB0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2408892F4);
}

uint64_t sub_240888EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C980);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570151E8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C980);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C980);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_257014CC8, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570151E8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570151E8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C980);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2408892F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C980);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015210);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C980);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C980);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015210);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014CF8, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015210);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015210);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015210);
    return sub_2403A97FC((uint64_t)v33, &qword_257015210);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015210);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C980);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoDisplayRepresentation.Subtitle.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C980);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v4, &qword_25700C980);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    goto LABEL_6;
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_240889A24(v0);
  else
    sub_240889884(v0);
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
  if (!v1)
  {
LABEL_6:
    type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240889884(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C980);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C980);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C980);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
    sub_2404FA028(&qword_257014CC8, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
  __break(1u);
  return result;
}

uint64_t sub_240889A24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C980);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C980);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C980);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
    sub_2404FA028(&qword_257014CF8, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoDisplayRepresentation.Subtitle.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle, &qword_257014090, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle);
}

uint64_t sub_240889BE4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind, a1);
}

uint64_t sub_240889BF0(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FFA008, &qword_257013AD0);
}

uint64_t sub_240889C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoDisplayRepresentation.Subtitle.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240889C24()
{
  return ToolKitProtoDisplayRepresentation.Subtitle.traverse<A>(visitor:)();
}

uint64_t sub_240889C38()
{
  sub_2404FA028(&qword_257014E18, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle);
  return sub_2408E5828();
}

uint64_t sub_240889C88@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA010, (uint64_t)qword_257013AE0, a1);
}

uint64_t sub_240889CA4()
{
  sub_2404FA028(&qword_257014CE0, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle);
  return sub_2408E599C();
}

uint64_t sub_240889CE4()
{
  sub_2404FA028(&qword_257014CE0, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle);
  return sub_2408E59A8();
}

uint64_t sub_240889D38()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FFA008 != -1)
    swift_once();
  v1 = qword_257013AD0;
  v2 = *(_QWORD *)algn_257013AD8;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013AF8 = v1;
  unk_257013B00 = v2;
  return result;
}

uint64_t static ToolKitProtoDisplayRepresentation.Subtitle.Static.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FFA018, &qword_257013AF8);
}

uint64_t sub_240889DE0(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013B08, 1, (uint64_t)"value", 5);
}

uint64_t static ToolKitProtoDisplayRepresentation.Subtitle.Static._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FFA020, (uint64_t)qword_257013B08, a1);
}

uint64_t ToolKitProtoDisplayRepresentation.Subtitle.Static.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t ToolKitProtoDisplayRepresentation.Subtitle.Static.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24088B17C(a1, a2, a3, 1, (void (*)(_QWORD))type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

uint64_t ToolKitProtoDisplayRepresentation.Subtitle.Static.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static, &qword_257014098, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

uint64_t sub_240889E70(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FFA018, &qword_257013AF8);
}

uint64_t sub_240889E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoDisplayRepresentation.Subtitle.Static.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240889EA4()
{
  sub_2404FA028(&qword_257014E10, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
  return sub_2408E5828();
}

uint64_t sub_240889EF4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA020, (uint64_t)qword_257013B08, a1);
}

uint64_t sub_240889F10()
{
  sub_2404FA028(&qword_257014CF8, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
  return sub_2408E599C();
}

uint64_t sub_240889F50()
{
  sub_2404FA028(&qword_257014CF8, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
  return sub_2408E59A8();
}

uint64_t sub_240889FA0(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static) & 1;
}

uint64_t sub_240889FC0()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013B20 = 0xD00000000000001DLL;
  *(_QWORD *)algn_257013B28 = 0x8000000240929E20;
  return result;
}

uint64_t static ToolKitProtoDisplayRepresentation.AltText.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FFA028, &qword_257013B20);
}

uint64_t sub_24088A048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013B30);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013B30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lazy";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "static";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoDisplayRepresentation.AltText._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FFA030, (uint64_t)qword_257013B30, a1);
}

uint64_t ToolKitProtoDisplayRepresentation.AltText.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24086CC14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24088A1D8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24088A61C);
}

uint64_t sub_24088A1D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C988);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570151E8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C988);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C988);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_257014CC8, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570151E8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570151E8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C988);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24088A61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C988);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015200);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C988);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C988);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257015200);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014D28, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText.Static);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257015200);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257015200);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257015200);
    return sub_2403A97FC((uint64_t)v33, &qword_257015200);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257015200);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C988);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoDisplayRepresentation.AltText.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C988);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v4, &qword_25700C988);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    goto LABEL_6;
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_24088AD4C(v0);
  else
    sub_24088ABAC(v0);
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
  if (!v1)
  {
LABEL_6:
    type metadata accessor for ToolKitProtoDisplayRepresentation.AltText(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24088ABAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C988);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C988);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C988);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
    sub_2404FA028(&qword_257014CC8, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
  __break(1u);
  return result;
}

uint64_t sub_24088AD4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C988);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C988);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C988);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
    sub_2404FA028(&qword_257014D28, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText.Static);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoDisplayRepresentation.AltText.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoDisplayRepresentation.AltText, &qword_2570140A0, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText);
}

uint64_t sub_24088AF0C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind, a1);
}

uint64_t sub_24088AF18(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FFA028, &qword_257013B20);
}

uint64_t sub_24088AF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoDisplayRepresentation.AltText.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24088AF4C()
{
  return ToolKitProtoDisplayRepresentation.AltText.traverse<A>(visitor:)();
}

uint64_t sub_24088AF60()
{
  sub_2404FA028(&qword_257014E08, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText);
  return sub_2408E5828();
}

uint64_t sub_24088AFB0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA030, (uint64_t)qword_257013B30, a1);
}

uint64_t sub_24088AFCC()
{
  sub_2404FA028(&qword_257014D10, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText);
  return sub_2408E599C();
}

uint64_t sub_24088B00C()
{
  sub_2404FA028(&qword_257014D10, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText);
  return sub_2408E59A8();
}

uint64_t sub_24088B060()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FFA028 != -1)
    swift_once();
  v1 = qword_257013B20;
  v2 = *(_QWORD *)algn_257013B28;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013B48 = v1;
  unk_257013B50 = v2;
  return result;
}

uint64_t static ToolKitProtoDisplayRepresentation.AltText.Static.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FFA038, &qword_257013B48);
}

uint64_t sub_24088B108(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_257013B58, 1, (uint64_t)"value", 5);
}

uint64_t static ToolKitProtoDisplayRepresentation.AltText.Static._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FFA040, (uint64_t)qword_257013B58, a1);
}

uint64_t ToolKitProtoDisplayRepresentation.AltText.Static.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t ToolKitProtoDisplayRepresentation.AltText.Static.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24088B17C(a1, a2, a3, 1, (void (*)(_QWORD))type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t sub_24088B17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = v5[1];
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *v5 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v6))
  {
    a5(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t ToolKitProtoDisplayRepresentation.AltText.Static.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static, &qword_2570140A8, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t sub_24088B244(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FFA038, &qword_257013B48);
}

uint64_t sub_24088B264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoDisplayRepresentation.AltText.Static.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24088B278()
{
  sub_2404FA028(&qword_257014E00, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText.Static);
  return sub_2408E5828();
}

uint64_t sub_24088B2C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA040, (uint64_t)qword_257013B58, a1);
}

uint64_t sub_24088B2E4()
{
  sub_2404FA028(&qword_257014D28, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText.Static);
  return sub_2408E599C();
}

uint64_t sub_24088B324()
{
  sub_2404FA028(&qword_257014D28, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText.Static);
  return sub_2408E59A8();
}

uint64_t sub_24088B374(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static) & 1;
}

uint64_t sub_24088B394()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013B70 = 0xD00000000000001DLL;
  *(_QWORD *)algn_257013B78 = 0x8000000240929E20;
  return result;
}

uint64_t static ToolKitProtoDisplayRepresentation.Image.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FFA048, &qword_257013B70);
}

uint64_t sub_24088B418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013B80);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013B80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lazy";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "static";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoDisplayRepresentation.Image._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FFA050, (uint64_t)qword_257013B80, a1);
}

uint64_t ToolKitProtoDisplayRepresentation.Image.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24086CC14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24088B5A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24088B9EC);
}

uint64_t sub_24088B5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C990);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570151E8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C990);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C990);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_257014CC8, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570151E8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570151E8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570151E8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C990);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24088B9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C990);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570151F0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C990);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C990);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570151F0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014D58, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570151F0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570151F0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570151F0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570151F0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570151F0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C990);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoDisplayRepresentation.Image.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C990);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v4, &qword_25700C990);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    goto LABEL_6;
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_24088C11C(v0);
  else
    sub_24088BF7C(v0);
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
  if (!v1)
  {
LABEL_6:
    type metadata accessor for ToolKitProtoDisplayRepresentation.Image(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24088BF7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C990);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Storage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C990);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C990);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
    sub_2404FA028(&qword_257014CC8, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
  __break(1u);
  return result;
}

uint64_t sub_24088C11C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C990);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C990);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C990);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static);
    sub_2404FA028(&qword_257014D58, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoDisplayRepresentation.Image.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoDisplayRepresentation.Image, &qword_2570140B0, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image);
}

uint64_t sub_24088C2DC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind, a1);
}

uint64_t sub_24088C2E8(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FFA048, &qword_257013B70);
}

uint64_t sub_24088C308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoDisplayRepresentation.Image.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24088C31C()
{
  return ToolKitProtoDisplayRepresentation.Image.traverse<A>(visitor:)();
}

uint64_t sub_24088C330()
{
  sub_2404FA028(&qword_257014DF8, type metadata accessor for ToolKitProtoDisplayRepresentation.Image, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image);
  return sub_2408E5828();
}

uint64_t sub_24088C380@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA050, (uint64_t)qword_257013B80, a1);
}

uint64_t sub_24088C39C()
{
  sub_2404FA028(&qword_257014D40, type metadata accessor for ToolKitProtoDisplayRepresentation.Image, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image);
  return sub_2408E599C();
}

uint64_t sub_24088C3DC()
{
  sub_2404FA028(&qword_257014D40, type metadata accessor for ToolKitProtoDisplayRepresentation.Image, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image);
  return sub_2408E59A8();
}

uint64_t sub_24088C430()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FFA048 != -1)
    swift_once();
  v1 = qword_257013B70;
  v2 = *(_QWORD *)algn_257013B78;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013B98 = v1;
  unk_257013BA0 = v2;
  return result;
}

uint64_t static ToolKitProtoDisplayRepresentation.Image.Static.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FFA058, &qword_257013B98);
}

uint64_t sub_24088C4D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013BA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013BA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "data";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "symbol";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "file";
  *(_QWORD *)(v12 + 8) = 4;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoDisplayRepresentation.Image.Static._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FFA060, (uint64_t)qword_257013BA8, a1);
}

uint64_t ToolKitProtoDisplayRepresentation.Image.Static.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240499908(a1, v5, a2, a3, &qword_25700C998, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind, 2);
          break;
        case 2:
          sub_24088C778((uint64_t)v5, a1, a2, a3);
          break;
        case 1:
          sub_24083B0E4(a1, (uint64_t)v5, a2, a3, &qword_25700C998, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind, 0);
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24088C778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C998);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570151D8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_25700C998);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_25700C998);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570151D8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257014D70, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570151D8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570151D8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570151D8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570151D8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570151D8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_25700C998);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ToolKitProtoDisplayRepresentation.Image.Static.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C998);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v4, &qword_25700C998);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) != 1)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_24088CE84(v0);
        result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
        if (v1)
          return result;
      }
      else
      {
        sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
        result = sub_24088D024(v0);
        if (v1)
          return result;
      }
    }
    else
    {
      sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
      result = sub_24088CD58(v0);
      if (v1)
        return result;
    }
  }
  type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0);
  return sub_2408E578C();
}

uint64_t sub_24088CD58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C998);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C998);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C998);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    v7 = *v4;
    v6 = v4[1];
    sub_2408E59F0();
    return sub_240363D58(v7, v6);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
  __break(1u);
  return result;
}

uint64_t sub_24088CE84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C998);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C998);
  v8 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C998);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
    sub_2404FA028(&qword_257014D70, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
  __break(1u);
  return result;
}

uint64_t sub_24088D024(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C998);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_25700C998);
  v5 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_25700C998);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2408E5A38();
    return swift_bridgeObjectRelease();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
  __break(1u);
  return result;
}

uint64_t ToolKitProtoDisplayRepresentation.Image.Static.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static, &qword_2570140B8, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static);
}

uint64_t sub_24088D168@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind, a1);
}

uint64_t sub_24088D174(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FFA058, &qword_257013B98);
}

uint64_t sub_24088D194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoDisplayRepresentation.Image.Static.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24088D1A8()
{
  return ToolKitProtoDisplayRepresentation.Image.Static.traverse<A>(visitor:)();
}

uint64_t sub_24088D1BC()
{
  sub_2404FA028(&qword_257014DF0, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static);
  return sub_2408E5828();
}

uint64_t sub_24088D20C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA060, (uint64_t)qword_257013BA8, a1);
}

uint64_t sub_24088D228()
{
  sub_2404FA028(&qword_257014D58, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static);
  return sub_2408E599C();
}

uint64_t sub_24088D268()
{
  sub_2404FA028(&qword_257014D58, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static);
  return sub_2408E59A8();
}

uint64_t sub_24088D2BC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_256FFA058 != -1)
    swift_once();
  v1 = qword_257013B98;
  v2 = unk_257013BA0;
  swift_bridgeObjectRetain();
  result = sub_2408E5D50();
  qword_257013BC0 = v1;
  *(_QWORD *)algn_257013BC8 = v2;
  return result;
}

uint64_t static ToolKitProtoDisplayRepresentation.Image.Static.Symbol.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FFA068, &qword_257013BC0);
}

uint64_t sub_24088D364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013BD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013BD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "name";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "tintColorData";
  *((_QWORD *)v11 + 1) = 13;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "configurationData";
  *(_QWORD *)(v12 + 8) = 17;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoDisplayRepresentation.Image.Static.Symbol._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FFA070, (uint64_t)qword_257013BD0, a1);
}

uint64_t ToolKitProtoDisplayRepresentation.Image.Static.Symbol.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2)
      {
        sub_2408E58AC();
      }
      else if (result == 1)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoDisplayRepresentation.Image.Static.Symbol.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    result = sub_2404814E4((uint64_t)v0);
    if (!v1)
    {
      sub_24088D6A8((uint64_t)v0);
      type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_24088D6A8(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 40);
  if (v1 >> 60 != 15)
  {
    v2 = *(_QWORD *)(result + 32);
    sub_240360070(v2, v1);
    sub_2408E59F0();
    return sub_2403C2424(v2, v1);
  }
  return result;
}

uint64_t ToolKitProtoDisplayRepresentation.Image.Static.Symbol.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol, &qword_2570140C0, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
}

uint64_t sub_24088D754@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_OWORD *)(a1 + 16) = xmmword_2408EA6D0;
  *(_OWORD *)(a1 + 32) = xmmword_2408EA6D0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  return result;
}

uint64_t sub_24088D790(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FFA068, &qword_257013BC0);
}

uint64_t sub_24088D7B0()
{
  return ToolKitProtoDisplayRepresentation.Image.Static.Symbol.decodeMessage<A>(decoder:)();
}

uint64_t sub_24088D7C4()
{
  return ToolKitProtoDisplayRepresentation.Image.Static.Symbol.traverse<A>(visitor:)();
}

uint64_t sub_24088D7D8()
{
  sub_2404FA028(&qword_257014DE8, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
  return sub_2408E5828();
}

uint64_t sub_24088D828@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA070, (uint64_t)qword_257013BD0, a1);
}

uint64_t sub_24088D844()
{
  sub_2404FA028(&qword_257014D70, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
  return sub_2408E599C();
}

uint64_t sub_24088D884()
{
  sub_2404FA028(&qword_257014D70, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
  return sub_2408E59A8();
}

unint64_t static ToolKitProtoCoercionDefinition.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_24088D8F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013BE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013BE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "direction";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "typeInstance";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoCoercionDefinition._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FFA078, (uint64_t)qword_257013BE8, a1);
}

uint64_t ToolKitProtoCoercionDefinition.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoCoercionDefinition, type metadata accessor for ToolKitProtoTypeInstance, &qword_257000CB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
      }
      else if (result == 1)
      {
        sub_240828FEC();
        sub_2408E58A0();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoCoercionDefinition.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  if (*v3 != 1 || (sub_240828FEC(), result = sub_2408E59E4(), !v4))
  {
    result = sub_24088DC4C((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for ToolKitProtoCoercionDefinition(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_24088DC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoCoercionDefinition(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA428);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA428);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t ToolKitProtoCoercionDefinition.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoCoercionDefinition, &qword_2570140C8, (uint64_t)&protocol conformance descriptor for ToolKitProtoCoercionDefinition);
}

uint64_t sub_24088DDE0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  v3 = &a2[*(int *)(a1 + 20)];
  v4 = type metadata accessor for ToolKitProtoTypeInstance(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  return result;
}

unint64_t sub_24088DE44()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_24088DE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoCoercionDefinition.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24088DE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoCoercionDefinition.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24088DE88()
{
  sub_2404FA028(&qword_257014DE0, type metadata accessor for ToolKitProtoCoercionDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoCoercionDefinition);
  return sub_2408E5828();
}

uint64_t sub_24088DED8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA078, (uint64_t)qword_257013BE8, a1);
}

uint64_t sub_24088DEF4()
{
  sub_2404FA028(&qword_257013CC8, type metadata accessor for ToolKitProtoCoercionDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoCoercionDefinition);
  return sub_2408E599C();
}

uint64_t sub_24088DF34()
{
  sub_2404FA028(&qword_257013CC8, type metadata accessor for ToolKitProtoCoercionDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoCoercionDefinition);
  return sub_2408E59A8();
}

uint64_t sub_24088DF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013C00);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013C00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "CoercionDirection_IMPORT";
  *(_QWORD *)(v7 + 8) = 24;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "CoercionDirection_EXPORT";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoCoercionDefinition.CoercionDirection._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FFA080, (uint64_t)qword_257013C00, a1);
}

uint64_t sub_24088E0F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA080, (uint64_t)qword_257013C00, a1);
}

unint64_t static ToolKitProtoToolDefinitionClosure.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_24088E130(uint64_t a1)
{
  return sub_2404C9600(a1, qword_257013C18);
}

uint64_t static ToolKitProtoToolDefinitionClosure._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FFA088, (uint64_t)qword_257013C18, a1);
}

uint64_t ToolKitProtoToolDefinitionClosure.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t ToolKitProtoToolDefinitionClosure.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinitionClosure, &qword_2570140D0, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure);
}

unint64_t sub_24088E18C()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_24088E1A8()
{
  sub_2404FA028(&qword_257014DD8, type metadata accessor for ToolKitProtoToolDefinitionClosure, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure);
  return sub_2408E5828();
}

uint64_t sub_24088E1F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA088, (uint64_t)qword_257013C18, a1);
}

uint64_t sub_24088E214()
{
  sub_2404FA028(&qword_257014DA8, type metadata accessor for ToolKitProtoToolDefinitionClosure, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure);
  return sub_2408E599C();
}

uint64_t sub_24088E254()
{
  sub_2404FA028(&qword_257014DA8, type metadata accessor for ToolKitProtoToolDefinitionClosure, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure);
  return sub_2408E59A8();
}

uint64_t sub_24088E2A4()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_257013C30 = 0xD00000000000001DLL;
  *(_QWORD *)algn_257013C38 = 0x8000000240929E60;
  return result;
}

uint64_t static ToolKitProtoToolDefinitionClosure.Version1.protoMessageName.getter()
{
  return sub_24082E548(&qword_256FFA090, &qword_257013C30);
}

uint64_t sub_24088E330()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_257013C40);
  __swift_project_value_buffer(v0, (uint64_t)qword_257013C40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "toolDefinition";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "typeDefinitions";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ToolKitProtoToolDefinitionClosure.Version1._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(qword_256FFA098, (uint64_t)qword_257013C40, a1);
}

uint64_t ToolKitProtoToolDefinitionClosure.Version1.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
        sub_2404FA028(&qword_25700C530, type metadata accessor for ToolKitProtoTypeDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1);
        sub_2408E5960();
      }
      else if (result == 1)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1, type metadata accessor for ToolKitProtoToolDefinition.Version1, &qword_256FFE778, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ToolKitProtoToolDefinitionClosure.Version1.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_24088E6B4(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
      sub_2404FA028(&qword_25700C530, type metadata accessor for ToolKitProtoTypeDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1);
      sub_2408E5A5C();
    }
    type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24088E6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA468);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA468);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoToolDefinition.Version1);
}

uint64_t ToolKitProtoToolDefinitionClosure.Version1.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1, &qword_2570140D8, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure.Version1);
}

uint64_t sub_24088E848@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_24088E854(a1, type metadata accessor for ToolKitProtoToolDefinition.Version1, a2);
}

uint64_t sub_24088E854@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, _QWORD *a3@<X8>)
{
  char *v4;
  uint64_t v5;
  uint64_t result;

  v4 = (char *)a3 + *(int *)(a1 + 20);
  v5 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_24088E8C0(uint64_t a1, uint64_t a2)
{
  return sub_24082E788(a1, a2, &qword_256FFA090, &qword_257013C30);
}

uint64_t sub_24088E8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinitionClosure.Version1.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24088E8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ToolKitProtoToolDefinitionClosure.Version1.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24088E908()
{
  sub_2404FA028(&qword_257014DD0, type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure.Version1);
  return sub_2408E5828();
}

uint64_t sub_24088E958@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(qword_256FFA098, (uint64_t)qword_257013C40, a1);
}

uint64_t sub_24088E974()
{
  sub_2404FA028(&qword_257014DC0, type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure.Version1);
  return sub_2408E599C();
}

uint64_t sub_24088E9B4()
{
  sub_2404FA028(&qword_257014DC0, type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure.Version1);
  return sub_2408E59A8();
}

uint64_t sub_24088EA08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unsigned __int8 *v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  _BOOL8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t *v62;
  int64_t v63;
  uint64_t v64;
  int64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  unsigned __int8 *v68;
  int64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v78 = type metadata accessor for TranscriptProtoASTExpr(0);
  v72 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v70 = (int64_t *)((char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  MEMORY[0x24BDAC7A8](v5);
  v75 = (int64_t *)((char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF0);
  MEMORY[0x24BDAC7A8](v71);
  v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  v76 = *(_QWORD *)(v9 - 8);
  v77 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (unsigned __int8 *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (unsigned __int8 *)&v63 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015600);
  v16 = MEMORY[0x24BDAC7A8](v15);
  result = MEMORY[0x24BDAC7A8](v16);
  v20 = (int64_t *)((char *)&v63 - v18);
  v74 = a1;
  v79 = a2;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(v74 + 16) != *(_QWORD *)(v79 + 16))
    return 0;
  v68 = v12;
  v69 = 0;
  v21 = *(_QWORD *)(v74 + 64);
  v64 = v74 + 64;
  v22 = 1 << *(_BYTE *)(v74 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v65 = (unint64_t)(v22 + 63) >> 6;
  v66 = v19;
  v63 = v65 - 1;
  v67 = (int64_t *)((char *)&v63 - v18);
  while (1)
  {
    if (v24)
    {
      v73 = (v24 - 1) & v24;
      v34 = __clz(__rbit64(v24)) | (v69 << 6);
LABEL_11:
      v35 = (uint64_t *)(*(_QWORD *)(v74 + 48) + 16 * v34);
      v37 = *v35;
      v36 = v35[1];
      v38 = *(_QWORD *)(v74 + 56) + *(_QWORD *)(v76 + 72) * v34;
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015608);
      v40 = v66;
      sub_2403AE1A4(v38, (uint64_t)v66 + *(int *)(v39 + 48), type metadata accessor for TranscriptProtoASTUpdateExpr);
      *v40 = v37;
      v40[1] = v36;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v40, 0, 1, v39);
      swift_bridgeObjectRetain();
      v20 = v67;
      v12 = v68;
      goto LABEL_30;
    }
    v41 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    v40 = v66;
    if (v41 < v65)
    {
      v42 = *(_QWORD *)(v64 + 8 * v41);
      if (v42)
        goto LABEL_15;
      v43 = v69 + 2;
      ++v69;
      if (v41 + 1 < v65)
      {
        v42 = *(_QWORD *)(v64 + 8 * v43);
        if (v42)
          goto LABEL_18;
        v69 = v41 + 1;
        if (v41 + 2 < v65)
        {
          v42 = *(_QWORD *)(v64 + 8 * (v41 + 2));
          if (v42)
          {
            v41 += 2;
            goto LABEL_15;
          }
          v43 = v41 + 3;
          v69 = v41 + 2;
          if (v41 + 3 < v65)
            break;
        }
      }
    }
LABEL_29:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015608);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v40, 1, 1, v44);
    v73 = 0;
LABEL_30:
    sub_2403B80A4((uint64_t)v40, (uint64_t)v20, &qword_257015600);
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015608);
    v46 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v20, 1, v45);
    v47 = v46 == 1;
    if (v46 == 1)
      return v47;
    v48 = (uint64_t)v20 + *(int *)(v45 + 48);
    v49 = *v20;
    v50 = v20[1];
    sub_2403A91CC(v48, (uint64_t)v14, type metadata accessor for TranscriptProtoASTUpdateExpr);
    v51 = sub_240509E28(v49, v50);
    v53 = v52;
    swift_bridgeObjectRelease();
    if ((v53 & 1) == 0)
      goto LABEL_50;
    sub_2403AE1A4(*(_QWORD *)(v79 + 56) + *(_QWORD *)(v76 + 72) * v51, (uint64_t)v12, type metadata accessor for TranscriptProtoASTUpdateExpr);
    if (*v12 != *v14)
      goto LABEL_49;
    v54 = *(int *)(v77 + 20);
    v55 = (uint64_t)&v14[v54];
    v56 = (uint64_t)&v8[*(int *)(v71 + 48)];
    sub_2403A9210((uint64_t)&v12[v54], (uint64_t)v8, &qword_257000CF8);
    sub_2403A9210(v55, v56, &qword_257000CF8);
    v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
    if (v57((uint64_t)v8, 1, v78) == 1)
    {
      if (v57(v56, 1, v78) != 1)
      {
        v62 = &qword_257000CF0;
        goto LABEL_48;
      }
      sub_2403A97FC((uint64_t)v8, &qword_257000CF8);
    }
    else
    {
      sub_2403A9210((uint64_t)v8, (uint64_t)v75, &qword_257000CF8);
      if (v57(v56, 1, v78) == 1)
      {
        v62 = &qword_257000CF0;
        goto LABEL_47;
      }
      v58 = v70;
      sub_2403A91CC(v56, (uint64_t)v70, type metadata accessor for TranscriptProtoASTExpr);
      v59 = *v75;
      v60 = *v58;
      if ((~*v75 & 0xF000000000000007) != 0)
      {
        v81 = *v75;
        if ((~v60 & 0xF000000000000007) == 0)
        {
          sub_2404F9F14(v59);
LABEL_45:
          sub_2404F9F14(v60);
          sub_2404F9F30(v59);
          sub_2404F9F30(v60);
LABEL_46:
          sub_240388AE4((uint64_t)v70, type metadata accessor for TranscriptProtoASTExpr);
          v62 = &qword_257000CF8;
LABEL_47:
          sub_240388AE4((uint64_t)v75, type metadata accessor for TranscriptProtoASTExpr);
LABEL_48:
          sub_2403A97FC((uint64_t)v8, v62);
LABEL_49:
          sub_240388AE4((uint64_t)v12, type metadata accessor for TranscriptProtoASTUpdateExpr);
LABEL_50:
          sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoASTUpdateExpr);
          return 0;
        }
        v80 = v60;
        sub_2404F9F14(v59);
        swift_retain();
        v61 = static TranscriptProtoAstexprEnum.== infix(_:_:)(&v81, &v80);
        swift_release();
        sub_2404F9F30(v59);
        if ((v61 & 1) == 0)
          goto LABEL_46;
      }
      else if ((~v60 & 0xF000000000000007) != 0)
      {
        goto LABEL_45;
      }
      v25 = v14;
      v26 = v8;
      v27 = v75;
      v28 = (uint64_t)v70;
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v29 = sub_2408E5CD8();
      v30 = v28;
      v31 = v27;
      v8 = v26;
      v14 = v25;
      v12 = v68;
      sub_240388AE4(v30, type metadata accessor for TranscriptProtoASTExpr);
      v32 = (uint64_t)v31;
      v20 = v67;
      sub_240388AE4(v32, type metadata accessor for TranscriptProtoASTExpr);
      sub_2403A97FC((uint64_t)v8, &qword_257000CF8);
      if ((v29 & 1) == 0)
        goto LABEL_49;
    }
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v33 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v12, type metadata accessor for TranscriptProtoASTUpdateExpr);
    result = sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoASTUpdateExpr);
    v24 = v73;
    if ((v33 & 1) == 0)
      return v47;
  }
  v42 = *(_QWORD *)(v64 + 8 * v43);
  if (v42)
  {
LABEL_18:
    v41 = v43;
LABEL_15:
    v73 = (v42 - 1) & v42;
    v34 = __clz(__rbit64(v42)) + (v41 << 6);
    v69 = v41;
    goto LABEL_11;
  }
  while (1)
  {
    v41 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v41 >= v65)
    {
      v69 = v63;
      goto LABEL_29;
    }
    v42 = *(_QWORD *)(v64 + 8 * v41);
    ++v43;
    if (v42)
      goto LABEL_15;
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_24088F190(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char v64;
  int64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BOOL4 v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v4 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v75 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v68 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E78);
  MEMORY[0x24BDAC7A8](v74);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v79 = *(_QWORD *)(v72 - 8);
  v11 = MEMORY[0x24BDAC7A8](v72);
  v80 = (uint64_t)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v65 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155E0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (int64_t *)((char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v16);
  v21 = (int64_t *)((char *)&v65 - v20);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v78 = v14;
  v70 = v10;
  v71 = a2;
  v73 = 0;
  v69 = a1;
  v24 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v22 = v24;
  v25 = 1 << *(_BYTE *)(v23 - 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v27 = v26 & v22;
  v66 = v23;
  v67 = (unint64_t)(v25 + 63) >> 6;
  v65 = v67 - 1;
  while (1)
  {
    if (v27)
    {
      v31 = __clz(__rbit64(v27));
      v32 = (v27 - 1) & v27;
      v33 = v31 | (v73 << 6);
LABEL_11:
      v34 = (uint64_t *)(*(_QWORD *)(v69 + 48) + 16 * v33);
      v35 = *v34;
      v36 = v34[1];
      v37 = *(_QWORD *)(v69 + 56) + *(_QWORD *)(v79 + 72) * v33;
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155E8);
      sub_2403AE1A4(v37, (uint64_t)v18 + *(int *)(v38 + 48), type metadata accessor for TranscriptProtoASTFlatValue);
      *v18 = v35;
      v18[1] = v36;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v18, 0, 1, v38);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    v39 = v73 + 1;
    if (__OFADD__(v73, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v39 < v67)
    {
      v40 = *(_QWORD *)(v66 + 8 * v39);
      if (v40)
        goto LABEL_15;
      v41 = v73 + 2;
      ++v73;
      if (v39 + 1 < v67)
      {
        v40 = *(_QWORD *)(v66 + 8 * v41);
        if (v40)
          goto LABEL_18;
        v73 = v39 + 1;
        if (v39 + 2 < v67)
        {
          v40 = *(_QWORD *)(v66 + 8 * (v39 + 2));
          if (v40)
          {
            v39 += 2;
            goto LABEL_15;
          }
          v41 = v39 + 3;
          v73 = v39 + 2;
          if (v39 + 3 < v67)
            break;
        }
      }
    }
LABEL_29:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155E8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v18, 1, 1, v42);
    v32 = 0;
LABEL_30:
    sub_2403B80A4((uint64_t)v18, (uint64_t)v21, &qword_2570155E0);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155E8);
    v44 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v21, 1, v43);
    v76 = v44 == 1;
    if (v44 == 1)
      return v76;
    v77 = v32;
    v45 = v18;
    v46 = (uint64_t)v8;
    v47 = v4;
    v48 = (uint64_t)v21 + *(int *)(v43 + 48);
    v49 = *v21;
    v50 = v21[1];
    v51 = v21;
    v52 = (uint64_t)v78;
    sub_2403A91CC(v48, (uint64_t)v78, type metadata accessor for TranscriptProtoASTFlatValue);
    v53 = v49;
    v54 = v71;
    v55 = sub_240509E28(v53, v50);
    v57 = v56;
    swift_bridgeObjectRelease();
    if ((v57 & 1) == 0)
      goto LABEL_40;
    v58 = v80;
    sub_2403AE1A4(*(_QWORD *)(v54 + 56) + *(_QWORD *)(v79 + 72) * v55, v80, type metadata accessor for TranscriptProtoASTFlatValue);
    v59 = (uint64_t)v70;
    v60 = (uint64_t)&v70[*(int *)(v74 + 48)];
    sub_2403A9210(v58, (uint64_t)v70, &qword_256FFEC30);
    sub_2403A9210(v52, v60, &qword_256FFEC30);
    v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
    v4 = v47;
    if (v61(v59, 1, v47) == 1)
    {
      if (v61(v60, 1, v47) != 1)
        goto LABEL_38;
      v8 = (char *)v46;
      sub_2403A97FC(v59, &qword_256FFEC30);
    }
    else
    {
      v8 = (char *)v46;
      sub_2403A9210(v59, v46, &qword_256FFEC30);
      if (v61(v60, 1, v4) == 1)
      {
        sub_240388AE4(v46, type metadata accessor for TranscriptProtoAstflatValueEnum);
LABEL_38:
        sub_2403A97FC(v59, &qword_257000E78);
LABEL_39:
        sub_240388AE4(v80, type metadata accessor for TranscriptProtoASTFlatValue);
        v52 = (uint64_t)v78;
LABEL_40:
        sub_240388AE4(v52, type metadata accessor for TranscriptProtoASTFlatValue);
        return 0;
      }
      v62 = v60;
      v63 = v68;
      sub_2403A91CC(v62, v68, type metadata accessor for TranscriptProtoAstflatValueEnum);
      v64 = static TranscriptProtoAstflatValueEnum.== infix(_:_:)(v46, v63);
      sub_240388AE4(v63, type metadata accessor for TranscriptProtoAstflatValueEnum);
      sub_240388AE4(v46, type metadata accessor for TranscriptProtoAstflatValueEnum);
      sub_2403A97FC(v59, &qword_256FFEC30);
      if ((v64 & 1) == 0)
        goto LABEL_39;
    }
    v28 = v80;
    v29 = (uint64_t)v78;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v30 = sub_2408E5CD8();
    sub_240388AE4(v28, type metadata accessor for TranscriptProtoASTFlatValue);
    result = sub_240388AE4(v29, type metadata accessor for TranscriptProtoASTFlatValue);
    v18 = v45;
    v21 = v51;
    v27 = v77;
    if ((v30 & 1) == 0)
      return v76;
  }
  v40 = *(_QWORD *)(v66 + 8 * v41);
  if (v40)
  {
LABEL_18:
    v39 = v41;
LABEL_15:
    v32 = (v40 - 1) & v40;
    v33 = __clz(__rbit64(v40)) + (v39 << 6);
    v73 = v39;
    goto LABEL_11;
  }
  while (1)
  {
    v39 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v39 >= v67)
    {
      v73 = v65;
      goto LABEL_29;
    }
    v40 = *(_QWORD *)(v66 + 8 * v39);
    ++v41;
    if (v40)
      goto LABEL_15;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_24088F7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _BOOL8 v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  int64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v51 = type metadata accessor for TranscriptProtoASTExpr(0);
  v54 = *(_QWORD *)(v51 - 8);
  v4 = MEMORY[0x24BDAC7A8](v51);
  v6 = (int64_t *)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (int64_t *)((char *)&v47 - v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155C0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (int64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (int64_t *)((char *)&v47 - v14);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v52 = 0;
  v50 = a1;
  v18 = *(_QWORD *)(a1 + 64);
  v17 = a1 + 64;
  v16 = v18;
  v19 = 1 << *(_BYTE *)(v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  v48 = v17;
  v49 = (unint64_t)(v19 + 63) >> 6;
  v47 = v49 - 1;
  v53 = (int64_t *)((char *)&v47 - v14);
  while (1)
  {
    if (v21)
    {
      v23 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v24 = v23 | (v52 << 6);
LABEL_10:
      v25 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v24);
      v27 = *v25;
      v26 = v25[1];
      v28 = *(_QWORD *)(v50 + 56) + *(_QWORD *)(v54 + 72) * v24;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155C8);
      sub_2403AE1A4(v28, (uint64_t)v12 + *(int *)(v29 + 48), type metadata accessor for TranscriptProtoASTExpr);
      *v12 = v27;
      v12[1] = v26;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 0, 1, v29);
      swift_bridgeObjectRetain();
      v15 = v53;
      goto LABEL_29;
    }
    v30 = v52 + 1;
    if (__OFADD__(v52, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v30 < v49)
    {
      v31 = *(_QWORD *)(v48 + 8 * v30);
      if (v31)
        goto LABEL_14;
      v32 = v52 + 2;
      ++v52;
      if (v30 + 1 < v49)
      {
        v31 = *(_QWORD *)(v48 + 8 * v32);
        if (v31)
          goto LABEL_17;
        v52 = v30 + 1;
        if (v30 + 2 < v49)
        {
          v31 = *(_QWORD *)(v48 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_14;
          }
          v32 = v30 + 3;
          v52 = v30 + 2;
          if (v30 + 3 < v49)
            break;
        }
      }
    }
LABEL_28:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155C8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v12, 1, 1, v33);
    v21 = 0;
LABEL_29:
    sub_2403B80A4((uint64_t)v12, (uint64_t)v15, &qword_2570155C0);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155C8);
    v35 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v15, 1, v34);
    v36 = v35 == 1;
    if (v35 == 1)
      return v36;
    v37 = v6;
    v38 = (uint64_t)v15 + *(int *)(v34 + 48);
    v39 = *v15;
    v40 = v15[1];
    sub_2403A91CC(v38, (uint64_t)v8, type metadata accessor for TranscriptProtoASTExpr);
    v41 = sub_240509E28(v39, v40);
    v43 = v42;
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
      goto LABEL_39;
    v6 = v37;
    sub_2403AE1A4(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v54 + 72) * v41, (uint64_t)v37, type metadata accessor for TranscriptProtoASTExpr);
    v44 = *v37;
    v45 = *v8;
    if ((~*v37 & 0xF000000000000007) != 0)
    {
      v56 = *v37;
      if ((~v45 & 0xF000000000000007) == 0)
      {
        swift_retain();
LABEL_37:
        sub_2404F9F14(v45);
        sub_2404F9F30(v44);
        sub_2404F9F30(v45);
LABEL_38:
        sub_240388AE4((uint64_t)v37, type metadata accessor for TranscriptProtoASTExpr);
LABEL_39:
        sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoASTExpr);
        return 0;
      }
      v55 = v45;
      swift_retain_n();
      v46 = static TranscriptProtoAstexprEnum.== infix(_:_:)(&v56, &v55);
      swift_release();
      sub_2404F9F30(v44);
      if ((v46 & 1) == 0)
        goto LABEL_38;
    }
    else if ((~v45 & 0xF000000000000007) != 0)
    {
      goto LABEL_37;
    }
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v22 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v37, type metadata accessor for TranscriptProtoASTExpr);
    result = sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoASTExpr);
    v15 = v53;
    if ((v22 & 1) == 0)
      return v36;
  }
  v31 = *(_QWORD *)(v48 + 8 * v32);
  if (v31)
  {
LABEL_17:
    v30 = v32;
LABEL_14:
    v21 = (v31 - 1) & v31;
    v24 = __clz(__rbit64(v31)) + (v30 << 6);
    v52 = v30;
    goto LABEL_10;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v49)
    {
      v52 = v47;
      goto LABEL_28;
    }
    v31 = *(_QWORD *)(v48 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_14;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_24088FCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t result;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  _BOOL8 v34;
  uint64_t v35;
  unsigned int v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v47 = type metadata accessor for ToolKitProtoTypedValue(0);
  v49 = *(_QWORD *)(v47 - 8);
  v4 = MEMORY[0x24BDAC7A8](v47);
  v6 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (uint64_t *)((char *)&v42 - v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015610);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (_DWORD *)((char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (unsigned int *)((char *)&v42 - v14);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v48 = 0;
  v46 = a1;
  v18 = *(_QWORD *)(a1 + 64);
  v17 = a1 + 64;
  v16 = v18;
  v19 = 1 << *(_BYTE *)(v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  v44 = v17;
  v45 = (unint64_t)(v19 + 63) >> 6;
  v43 = v45 - 1;
  while (1)
  {
    if (v21)
    {
      v23 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v24 = v23 | (v48 << 6);
LABEL_10:
      v25 = *(_DWORD *)(*(_QWORD *)(v46 + 48) + 4 * v24);
      v26 = *(_QWORD *)(v46 + 56) + *(_QWORD *)(v49 + 72) * v24;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015618);
      sub_2403AE1A4(v26, (uint64_t)v12 + *(int *)(v27 + 48), type metadata accessor for ToolKitProtoTypedValue);
      *v12 = v25;
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v12, 0, 1, v27);
      goto LABEL_29;
    }
    v28 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v28 < v45)
    {
      v29 = *(_QWORD *)(v44 + 8 * v28);
      if (v29)
        goto LABEL_14;
      v30 = v48 + 2;
      ++v48;
      if (v28 + 1 < v45)
      {
        v29 = *(_QWORD *)(v44 + 8 * v30);
        if (v29)
          goto LABEL_17;
        v48 = v28 + 1;
        if (v28 + 2 < v45)
        {
          v29 = *(_QWORD *)(v44 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_14;
          }
          v30 = v28 + 3;
          v48 = v28 + 2;
          if (v28 + 3 < v45)
            break;
        }
      }
    }
LABEL_28:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015618);
    (*(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 1, 1, v31);
    v21 = 0;
LABEL_29:
    sub_2403B80A4((uint64_t)v12, (uint64_t)v15, &qword_257015610);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015618);
    v33 = (*(uint64_t (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v15, 1, v32);
    v34 = v33 == 1;
    if (v33 == 1)
      return v34;
    v35 = (uint64_t)v15 + *(int *)(v32 + 48);
    v36 = *v15;
    sub_2403A91CC(v35, (uint64_t)v8, type metadata accessor for ToolKitProtoTypedValue);
    v37 = sub_240509E8C(v36);
    if ((v38 & 1) == 0)
      goto LABEL_39;
    sub_2403AE1A4(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v49 + 72) * v37, (uint64_t)v6, type metadata accessor for ToolKitProtoTypedValue);
    v39 = *v6;
    v40 = *v8;
    if ((~*v6 & 0xF000000000000007) != 0)
    {
      v51 = *v6;
      if ((~v40 & 0xF000000000000007) == 0)
      {
        swift_retain();
LABEL_37:
        sub_240422794(v40);
        sub_2404227AC(v39);
        sub_2404227AC(v40);
LABEL_38:
        sub_240388AE4((uint64_t)v6, type metadata accessor for ToolKitProtoTypedValue);
LABEL_39:
        sub_240388AE4((uint64_t)v8, type metadata accessor for ToolKitProtoTypedValue);
        return 0;
      }
      v50 = v40;
      swift_retain_n();
      v41 = static ToolKitProtoTypedValueKind.== infix(_:_:)(&v51, &v50);
      swift_release();
      sub_2404227AC(v39);
      if ((v41 & 1) == 0)
        goto LABEL_38;
    }
    else if ((~v40 & 0xF000000000000007) != 0)
    {
      goto LABEL_37;
    }
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v22 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v6, type metadata accessor for ToolKitProtoTypedValue);
    result = sub_240388AE4((uint64_t)v8, type metadata accessor for ToolKitProtoTypedValue);
    if ((v22 & 1) == 0)
      return v34;
  }
  v29 = *(_QWORD *)(v44 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v28 = v30;
LABEL_14:
    v21 = (v29 - 1) & v29;
    v24 = __clz(__rbit64(v29)) + (v28 << 6);
    v48 = v28;
    goto LABEL_10;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v45)
    {
      v48 = v43;
      goto LABEL_28;
    }
    v29 = *(_QWORD *)(v44 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_14;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_240890190(uint64_t a1, uint64_t a2)
{
  return sub_2408915A8(a1, a2, type metadata accessor for TranscriptProtoParameterValue, &qword_2570155F0, &qword_2570155F8, (uint64_t (*)(uint64_t, char *))static TranscriptProtoParameterValue.== infix(_:_:));
}

uint64_t sub_2408901B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;

  v49 = type metadata accessor for TranscriptProtoStatementID(0);
  v51 = *(_QWORD *)(v49 - 8);
  v4 = MEMORY[0x24BDAC7A8](v49);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v44 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155D0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (int64_t *)((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (int64_t *)((char *)&v44 - v14);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v50 = 0;
  v47 = (int64_t *)((char *)&v44 - v14);
  v48 = a1;
  v18 = *(_QWORD *)(a1 + 64);
  v17 = a1 + 64;
  v16 = v18;
  v19 = 1 << *(_BYTE *)(v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  v45 = v17;
  v46 = (unint64_t)(v19 + 63) >> 6;
  v44 = v46 - 1;
  if ((v20 & v16) == 0)
    goto LABEL_8;
LABEL_6:
  v22 = v6;
  v23 = a2;
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v50 << 6);
  while (2)
  {
    v26 = (uint64_t *)(*(_QWORD *)(v48 + 48) + 16 * v25);
    v27 = *v26;
    v28 = v26[1];
    v29 = *(_QWORD *)(v48 + 56) + *(_QWORD *)(v51 + 72) * v25;
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155D8);
    sub_2403AE1A4(v29, (uint64_t)v12 + *(int *)(v30 + 48), type metadata accessor for TranscriptProtoStatementID);
    *v12 = v27;
    v12[1] = v28;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 0, 1, v30);
    swift_bridgeObjectRetain();
    a2 = v23;
    v6 = v22;
    v15 = v47;
    while (1)
    {
      sub_2403B80A4((uint64_t)v12, (uint64_t)v15, &qword_2570155D0);
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155D8);
      v36 = 1;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v15, 1, v35) == 1)
        return v36;
      v37 = *v15;
      v38 = v15[1];
      sub_2403A91CC((uint64_t)v15 + *(int *)(v35 + 48), (uint64_t)v8, type metadata accessor for TranscriptProtoStatementID);
      v39 = sub_240509E28(v37, v38);
      v41 = v40;
      swift_bridgeObjectRelease();
      if ((v41 & 1) == 0)
        goto LABEL_41;
      sub_2403AE1A4(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v51 + 72) * v39, (uint64_t)v6, type metadata accessor for TranscriptProtoStatementID);
      if (*(_DWORD *)v6 != *(_DWORD *)v8)
      {
LABEL_40:
        sub_240388AE4((uint64_t)v6, type metadata accessor for TranscriptProtoStatementID);
LABEL_41:
        sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoStatementID);
        return 0;
      }
      v42 = *((_QWORD *)v6 + 2);
      v43 = *((_QWORD *)v8 + 2);
      if (v42)
      {
        if (!v43 || (*((_QWORD *)v6 + 1) != *((_QWORD *)v8 + 1) || v42 != v43) && (sub_2408E617C() & 1) == 0)
          goto LABEL_40;
      }
      else if (v43)
      {
        goto LABEL_40;
      }
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      if ((sub_2408E5CD8() & 1) == 0)
        goto LABEL_40;
      sub_240388AE4((uint64_t)v6, type metadata accessor for TranscriptProtoStatementID);
      result = sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoStatementID);
      if (v21)
        goto LABEL_6;
LABEL_8:
      v31 = v50 + 1;
      if (__OFADD__(v50, 1))
      {
        __break(1u);
        goto LABEL_45;
      }
      if (v31 < v46)
      {
        v32 = *(_QWORD *)(v45 + 8 * v31);
        if (v32)
          goto LABEL_11;
        v33 = v50 + 2;
        ++v50;
        if (v31 + 1 < v46)
        {
          v32 = *(_QWORD *)(v45 + 8 * v33);
          if (v32)
            goto LABEL_14;
          v50 = v31 + 1;
          if (v31 + 2 < v46)
          {
            v32 = *(_QWORD *)(v45 + 8 * (v31 + 2));
            if (v32)
            {
              v31 += 2;
              goto LABEL_11;
            }
            v33 = v31 + 3;
            v50 = v31 + 2;
            if (v31 + 3 < v46)
              break;
          }
        }
      }
LABEL_25:
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155D8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v12, 1, 1, v34);
      v21 = 0;
    }
    v32 = *(_QWORD *)(v45 + 8 * v33);
    if (v32)
    {
LABEL_14:
      v31 = v33;
LABEL_11:
      v22 = v6;
      v23 = a2;
      v21 = (v32 - 1) & v32;
      v25 = __clz(__rbit64(v32)) + (v31 << 6);
      v50 = v31;
      continue;
    }
    break;
  }
  while (1)
  {
    v31 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v31 >= v46)
    {
      v50 = v44;
      goto LABEL_25;
    }
    v32 = *(_QWORD *)(v45 + 8 * v31);
    ++v33;
    if (v32)
      goto LABEL_11;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_240890664(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _BOOL8 v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  int64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v51 = type metadata accessor for ToolKitProtoTypedValue(0);
  v54 = *(_QWORD *)(v51 - 8);
  v4 = MEMORY[0x24BDAC7A8](v51);
  v6 = (int64_t *)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (int64_t *)((char *)&v47 - v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015588);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (int64_t *)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v10);
  v15 = (int64_t *)((char *)&v47 - v14);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v52 = 0;
  v50 = a1;
  v18 = *(_QWORD *)(a1 + 64);
  v17 = a1 + 64;
  v16 = v18;
  v19 = 1 << *(_BYTE *)(v17 - 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v16;
  v48 = v17;
  v49 = (unint64_t)(v19 + 63) >> 6;
  v47 = v49 - 1;
  v53 = (int64_t *)((char *)&v47 - v14);
  while (1)
  {
    if (v21)
    {
      v23 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v24 = v23 | (v52 << 6);
LABEL_10:
      v25 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v24);
      v27 = *v25;
      v26 = v25[1];
      v28 = *(_QWORD *)(v50 + 56) + *(_QWORD *)(v54 + 72) * v24;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015590);
      sub_2403AE1A4(v28, (uint64_t)v12 + *(int *)(v29 + 48), type metadata accessor for ToolKitProtoTypedValue);
      *v12 = v27;
      v12[1] = v26;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v12, 0, 1, v29);
      swift_bridgeObjectRetain();
      v15 = v53;
      goto LABEL_29;
    }
    v30 = v52 + 1;
    if (__OFADD__(v52, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v30 < v49)
    {
      v31 = *(_QWORD *)(v48 + 8 * v30);
      if (v31)
        goto LABEL_14;
      v32 = v52 + 2;
      ++v52;
      if (v30 + 1 < v49)
      {
        v31 = *(_QWORD *)(v48 + 8 * v32);
        if (v31)
          goto LABEL_17;
        v52 = v30 + 1;
        if (v30 + 2 < v49)
        {
          v31 = *(_QWORD *)(v48 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_14;
          }
          v32 = v30 + 3;
          v52 = v30 + 2;
          if (v30 + 3 < v49)
            break;
        }
      }
    }
LABEL_28:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015590);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v12, 1, 1, v33);
    v21 = 0;
LABEL_29:
    sub_2403B80A4((uint64_t)v12, (uint64_t)v15, &qword_257015588);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015590);
    v35 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v15, 1, v34);
    v36 = v35 == 1;
    if (v35 == 1)
      return v36;
    v37 = v6;
    v38 = (uint64_t)v15 + *(int *)(v34 + 48);
    v39 = *v15;
    v40 = v15[1];
    sub_2403A91CC(v38, (uint64_t)v8, type metadata accessor for ToolKitProtoTypedValue);
    v41 = sub_240509E28(v39, v40);
    v43 = v42;
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
      goto LABEL_39;
    v6 = v37;
    sub_2403AE1A4(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v54 + 72) * v41, (uint64_t)v37, type metadata accessor for ToolKitProtoTypedValue);
    v44 = *v37;
    v45 = *v8;
    if ((~*v37 & 0xF000000000000007) != 0)
    {
      v56 = *v37;
      if ((~v45 & 0xF000000000000007) == 0)
      {
        swift_retain();
LABEL_37:
        sub_240422794(v45);
        sub_2404227AC(v44);
        sub_2404227AC(v45);
LABEL_38:
        sub_240388AE4((uint64_t)v37, type metadata accessor for ToolKitProtoTypedValue);
LABEL_39:
        sub_240388AE4((uint64_t)v8, type metadata accessor for ToolKitProtoTypedValue);
        return 0;
      }
      v55 = v45;
      swift_retain_n();
      v46 = static ToolKitProtoTypedValueKind.== infix(_:_:)(&v56, &v55);
      swift_release();
      sub_2404227AC(v44);
      if ((v46 & 1) == 0)
        goto LABEL_38;
    }
    else if ((~v45 & 0xF000000000000007) != 0)
    {
      goto LABEL_37;
    }
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v22 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v37, type metadata accessor for ToolKitProtoTypedValue);
    result = sub_240388AE4((uint64_t)v8, type metadata accessor for ToolKitProtoTypedValue);
    v15 = v53;
    if ((v22 & 1) == 0)
      return v36;
  }
  v31 = *(_QWORD *)(v48 + 8 * v32);
  if (v31)
  {
LABEL_17:
    v30 = v32;
LABEL_14:
    v21 = (v31 - 1) & v31;
    v24 = __clz(__rbit64(v31)) + (v30 << 6);
    v52 = v30;
    goto LABEL_10;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v49)
    {
      v52 = v47;
      goto LABEL_28;
    }
    v31 = *(_QWORD *)(v48 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_14;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_240890B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t result;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  int v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  int EnumCaseMultiPayload;
  uint64_t v77;
  char *v78;
  char v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t *v85;
  uint64_t (*v86)(uint64_t);
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t *v93;
  int64_t v94;
  uint64_t v95;
  uint64_t *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  int64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BOOL4 v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v4 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v95);
  v8 = (uint64_t *)((char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BDB0);
  MEMORY[0x24BDAC7A8](v99);
  v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  v106 = *(_QWORD *)(v11 - 8);
  v107 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v96 = (uint64_t *)((char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v88 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v104 = (uint64_t)&v88 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE810);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011E0);
  MEMORY[0x24BDAC7A8](v105);
  v110 = (uint64_t)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for TranscriptProtoShimParameterResolution(0);
  v111 = *(_QWORD *)(v102 - 8);
  v22 = MEMORY[0x24BDAC7A8](v102);
  v112 = (uint64_t)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v88 - v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015620);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (uint64_t *)((char *)&v88 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v27);
  v32 = (uint64_t *)((char *)&v88 - v31);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v91 = (uint64_t *)v16;
  v90 = v6;
  v93 = v8;
  v101 = a2;
  v97 = v10;
  v98 = a1;
  v103 = 0;
  v33 = *(_QWORD *)(a1 + 64);
  v92 = a1 + 64;
  v34 = 1 << *(_BYTE *)(a1 + 32);
  v35 = -1;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  v36 = v35 & v33;
  v37 = (uint64_t *)&unk_257015628;
  v94 = (unint64_t)(v34 + 63) >> 6;
  v89 = v94 - 1;
  v100 = v25;
  while (1)
  {
    if (v36)
    {
      v41 = __clz(__rbit64(v36));
      v42 = (v36 - 1) & v36;
      v43 = v41 | (v103 << 6);
LABEL_10:
      v44 = (uint64_t *)(*(_QWORD *)(v98 + 48) + 16 * v43);
      v45 = *v44;
      v46 = v44[1];
      v47 = *(_QWORD *)(v98 + 56) + *(_QWORD *)(v111 + 72) * v43;
      v48 = __swift_instantiateConcreteTypeFromMangledName(v37);
      sub_2403AE1A4(v47, (uint64_t)v29 + *(int *)(v48 + 48), type metadata accessor for TranscriptProtoShimParameterResolution);
      *v29 = v45;
      v29[1] = v46;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v29, 0, 1, v48);
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    v49 = v103 + 1;
    if (__OFADD__(v103, 1))
    {
      __break(1u);
      goto LABEL_63;
    }
    if (v49 < v94)
    {
      v50 = *(_QWORD *)(v92 + 8 * v49);
      if (v50)
        goto LABEL_14;
      v51 = v103 + 2;
      ++v103;
      if (v49 + 1 < v94)
      {
        v50 = *(_QWORD *)(v92 + 8 * v51);
        if (v50)
          goto LABEL_17;
        v103 = v49 + 1;
        if (v49 + 2 < v94)
        {
          v50 = *(_QWORD *)(v92 + 8 * (v49 + 2));
          if (v50)
          {
            v49 += 2;
            goto LABEL_14;
          }
          v51 = v49 + 3;
          v103 = v49 + 2;
          if (v49 + 3 < v94)
            break;
        }
      }
    }
LABEL_28:
    v52 = __swift_instantiateConcreteTypeFromMangledName(v37);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v29, 1, 1, v52);
    v42 = 0;
LABEL_29:
    sub_2403B80A4((uint64_t)v29, (uint64_t)v32, &qword_257015620);
    v53 = __swift_instantiateConcreteTypeFromMangledName(v37);
    v54 = (*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v32, 1, v53) == 1;
    result = v54;
    if (v54)
      return result;
    v108 = v54;
    v109 = v42;
    v55 = v29;
    v56 = v37;
    v57 = (uint64_t)v20;
    v58 = (uint64_t)v32 + *(int *)(v53 + 48);
    v59 = v32;
    v60 = *v32;
    v61 = v32[1];
    sub_2403A91CC(v58, (uint64_t)v25, type metadata accessor for TranscriptProtoShimParameterResolution);
    v62 = v60;
    v63 = v101;
    v64 = sub_240509E28(v62, v61);
    v66 = v65;
    swift_bridgeObjectRelease();
    if ((v66 & 1) == 0)
      goto LABEL_59;
    v67 = v112;
    sub_2403AE1A4(*(_QWORD *)(v63 + 56) + *(_QWORD *)(v111 + 72) * v64, v112, type metadata accessor for TranscriptProtoShimParameterResolution);
    v68 = v110;
    v69 = v110 + *(int *)(v105 + 48);
    sub_2403A9210(v67, v110, &qword_256FFE810);
    sub_2403A9210((uint64_t)v25, v69, &qword_256FFE810);
    v70 = v107;
    v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 48);
    if (v71(v68, 1, v107) == 1)
    {
      v38 = v71(v69, 1, v70);
      v20 = (char *)v57;
      v25 = v100;
      v32 = v59;
      if (v38 != 1)
      {
        v85 = &qword_2570011E0;
        goto LABEL_58;
      }
    }
    else
    {
      v20 = (char *)v57;
      sub_2403A9210(v68, v57, &qword_256FFE810);
      if (v71(v69, 1, v70) == 1)
      {
        v85 = &qword_2570011E0;
        goto LABEL_57;
      }
      v32 = v59;
      v72 = v104;
      sub_2403A91CC(v69, v104, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      v73 = (uint64_t)v97;
      v74 = (uint64_t)&v97[*(int *)(v99 + 48)];
      sub_2403AE1A4(v57, (uint64_t)v97, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      sub_2403AE1A4(v72, v74, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v75 = v96;
        sub_2403AE1A4(v73, (uint64_t)v96, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v25 = v100;
        if (EnumCaseMultiPayload != 1)
        {
          v86 = type metadata accessor for TranscriptProtoUnresolvedParameterValue;
LABEL_51:
          sub_240388AE4((uint64_t)v75, v86);
          sub_2403A97FC(v73, &qword_25700BDB0);
          goto LABEL_56;
        }
        v77 = v74;
        v78 = v90;
        sub_2403A91CC(v77, (uint64_t)v90, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
        v79 = sub_2404CDC64(v75, v78);
        sub_240388AE4((uint64_t)v78, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
        sub_240388AE4((uint64_t)v75, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
        if ((v79 & 1) == 0)
        {
          v87 = v73;
          goto LABEL_55;
        }
      }
      else
      {
        v75 = v91;
        sub_2403AE1A4(v73, (uint64_t)v91, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v86 = type metadata accessor for ToolKitProtoTypedValue;
          goto LABEL_51;
        }
        v80 = v93;
        sub_2403A91CC(v74, (uint64_t)v93, type metadata accessor for ToolKitProtoTypedValue);
        v81 = *v75;
        v82 = *v80;
        if ((~*v75 & 0xF000000000000007) != 0)
        {
          v114 = *v75;
          if ((~v82 & 0xF000000000000007) == 0)
          {
            swift_retain();
            v83 = (uint64_t)v93;
LABEL_53:
            sub_240422794(v82);
            sub_2404227AC(v81);
            sub_2404227AC(v82);
LABEL_54:
            sub_240388AE4(v83, type metadata accessor for ToolKitProtoTypedValue);
            sub_240388AE4((uint64_t)v75, type metadata accessor for ToolKitProtoTypedValue);
            v87 = (uint64_t)v97;
LABEL_55:
            sub_240388AE4(v87, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
LABEL_56:
            sub_240388AE4(v104, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
            v85 = &qword_256FFE810;
            v68 = v110;
LABEL_57:
            sub_240388AE4((uint64_t)v20, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
LABEL_58:
            sub_2403A97FC(v68, v85);
            sub_240388AE4(v112, type metadata accessor for TranscriptProtoShimParameterResolution);
            v25 = v100;
LABEL_59:
            sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoShimParameterResolution);
            return 0;
          }
          v113 = v82;
          swift_retain_n();
          v84 = static ToolKitProtoTypedValueKind.== infix(_:_:)(&v114, &v113);
          swift_release();
          sub_2404227AC(v81);
          v83 = (uint64_t)v93;
          if ((v84 & 1) == 0)
            goto LABEL_54;
        }
        else
        {
          v83 = (uint64_t)v93;
          if ((~v82 & 0xF000000000000007) != 0)
            goto LABEL_53;
        }
        sub_2408E57A4();
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        if ((sub_2408E5CD8() & 1) == 0)
          goto LABEL_54;
        sub_240388AE4(v83, type metadata accessor for ToolKitProtoTypedValue);
        sub_240388AE4((uint64_t)v75, type metadata accessor for ToolKitProtoTypedValue);
        v73 = (uint64_t)v97;
        v25 = v100;
      }
      sub_240388AE4(v73, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      sub_240388AE4(v104, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      sub_240388AE4((uint64_t)v20, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      v68 = v110;
    }
    sub_2403A97FC(v68, &qword_256FFE810);
    v39 = v112;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v40 = sub_2408E5CD8();
    sub_240388AE4(v39, type metadata accessor for TranscriptProtoShimParameterResolution);
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoShimParameterResolution);
    v37 = v56;
    v29 = v55;
    v36 = v109;
    result = v108;
    if ((v40 & 1) == 0)
      return result;
  }
  v50 = *(_QWORD *)(v92 + 8 * v51);
  if (v50)
  {
LABEL_17:
    v49 = v51;
LABEL_14:
    v42 = (v50 - 1) & v50;
    v43 = __clz(__rbit64(v50)) + (v49 << 6);
    v103 = v49;
    goto LABEL_10;
  }
  while (1)
  {
    v49 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v49 >= v94)
    {
      v103 = v89;
      goto LABEL_28;
    }
    v50 = *(_QWORD *)(v92 + 8 * v49);
    ++v51;
    if (v50)
      goto LABEL_14;
  }
LABEL_63:
  __break(1u);
  return result;
}

uint64_t sub_240891584(uint64_t a1, uint64_t a2)
{
  return sub_2408915A8(a1, a2, type metadata accessor for TranscriptProtoActionParameterValue, &qword_257015630, &qword_257015638, (uint64_t (*)(uint64_t, char *))static TranscriptProtoActionParameterValue.== infix(_:_:));
}

uint64_t sub_2408915A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4, uint64_t *a5, uint64_t (*a6)(uint64_t, char *))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  _BOOL8 v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  int64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, char *);
  uint64_t *v59;
  int64_t v60;
  uint64_t *v61;
  uint64_t v62;

  v58 = a6;
  v11 = a3(0);
  v62 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v57 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v53 - v14;
  v59 = a4;
  v16 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (int64_t *)((char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v17);
  v22 = (int64_t *)((char *)&v53 - v21);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v60 = 0;
  v61 = a5;
  v56 = a1;
  v25 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v23 = v25;
  v26 = 1 << *(_BYTE *)(v24 - 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v23;
  v54 = v24;
  v55 = (unint64_t)(v26 + 63) >> 6;
  v53 = v55 - 1;
  while (1)
  {
    if (v28)
    {
      v29 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      v30 = v61;
      v31 = v29 | (v60 << 6);
LABEL_8:
      v32 = (uint64_t *)(*(_QWORD *)(v56 + 48) + 16 * v31);
      v34 = *v32;
      v33 = v32[1];
      v35 = *(_QWORD *)(v56 + 56) + *(_QWORD *)(v62 + 72) * v31;
      v36 = __swift_instantiateConcreteTypeFromMangledName(v30);
      sub_2403AE1A4(v35, (uint64_t)v19 + *(int *)(v36 + 48), a3);
      *v19 = v34;
      v19[1] = v33;
      v37 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
      v38 = v36;
      v30 = v61;
      v37(v19, 0, 1, v38);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v30 = v61;
    v39 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v39 < v55)
    {
      v40 = *(_QWORD *)(v54 + 8 * v39);
      if (v40)
        goto LABEL_12;
      v41 = v60 + 2;
      ++v60;
      if (v39 + 1 < v55)
      {
        v40 = *(_QWORD *)(v54 + 8 * v41);
        if (v40)
          goto LABEL_15;
        v60 = v39 + 1;
        if (v39 + 2 < v55)
        {
          v40 = *(_QWORD *)(v54 + 8 * (v39 + 2));
          if (v40)
          {
            v39 += 2;
            goto LABEL_12;
          }
          v41 = v39 + 3;
          v60 = v39 + 2;
          if (v39 + 3 < v55)
            break;
        }
      }
    }
LABEL_26:
    v42 = __swift_instantiateConcreteTypeFromMangledName(v61);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v19, 1, 1, v42);
    v28 = 0;
LABEL_27:
    sub_2403B80A4((uint64_t)v19, (uint64_t)v22, v59);
    v43 = __swift_instantiateConcreteTypeFromMangledName(v30);
    v44 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v22, 1, v43);
    v45 = v44 == 1;
    if (v44 == 1)
      return v45;
    v46 = *v22;
    v47 = v22[1];
    sub_2403A91CC((uint64_t)v22 + *(int *)(v43 + 48), (uint64_t)v15, a3);
    v48 = sub_240509E28(v46, v47);
    LOBYTE(v46) = v49;
    swift_bridgeObjectRelease();
    if ((v46 & 1) == 0)
    {
      sub_240388AE4((uint64_t)v15, a3);
      return 0;
    }
    v50 = *(_QWORD *)(a2 + 56) + *(_QWORD *)(v62 + 72) * v48;
    v51 = v57;
    sub_2403AE1A4(v50, v57, a3);
    v52 = v58(v51, v15);
    sub_240388AE4(v51, a3);
    result = sub_240388AE4((uint64_t)v15, a3);
    if ((v52 & 1) == 0)
      return v45;
  }
  v40 = *(_QWORD *)(v54 + 8 * v41);
  if (v40)
  {
LABEL_15:
    v39 = v41;
LABEL_12:
    v28 = (v40 - 1) & v40;
    v31 = __clz(__rbit64(v40)) + (v39 << 6);
    v60 = v39;
    goto LABEL_8;
  }
  while (1)
  {
    v39 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v39 >= v55)
    {
      v60 = v53;
      goto LABEL_26;
    }
    v40 = *(_QWORD *)(v54 + 8 * v39);
    ++v41;
    if (v40)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_240891984(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  char v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    v19 = sub_240509E28(v16, v17);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v19) != v18)
      return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_240891B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  char v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  int64_t v82;
  _BOOL4 v83;
  uint64_t v84;
  char *v85;
  uint64_t *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;

  v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  v95 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v88 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015258);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  v12 = *(_QWORD *)(v94 - 8);
  v13 = MEMORY[0x24BDAC7A8](v94);
  v93 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v74 - v15;
  v17 = type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations(0);
  v89 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v90 = (int64_t *)((char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v18);
  v21 = (int64_t *)((char *)&v74 - v20);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015308);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v87 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v23);
  v86 = (int64_t *)((char *)&v74 - v26);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v78 = v17;
  v76 = v12;
  v98 = v16;
  v92 = v4;
  v82 = 0;
  v27 = *(_QWORD *)(a1 + 64);
  v75 = a1 + 64;
  v28 = 1 << *(_BYTE *)(a1 + 32);
  v29 = -1;
  if (v28 < 64)
    v29 = ~(-1 << v28);
  v30 = v29 & v27;
  v77 = (unint64_t)(v28 + 63) >> 6;
  v74 = v77 - 1;
  v79 = a1;
  v80 = a2;
  v85 = v8;
  v81 = v21;
  while (1)
  {
    if (v30)
    {
      v84 = (v30 - 1) & v30;
      v33 = __clz(__rbit64(v30)) | (v82 << 6);
      v34 = v87;
LABEL_9:
      v35 = *(_QWORD *)(a1 + 56);
      v36 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v33);
      v37 = v36[1];
      *v34 = *v36;
      v34[1] = v37;
      v38 = v35 + *(_QWORD *)(v89 + 72) * v33;
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015310);
      sub_2403AE1A4(v38, (uint64_t)v34 + *(int *)(v39 + 48), type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v34, 0, 1, v39);
      swift_bridgeObjectRetain();
      goto LABEL_31;
    }
    v40 = v82 + 1;
    v34 = v87;
    if (__OFADD__(v82, 1))
      goto LABEL_55;
    if (v40 < v77)
    {
      v41 = *(_QWORD *)(v75 + 8 * v40);
      if (v41)
        goto LABEL_13;
      v42 = v82 + 2;
      ++v82;
      if (v40 + 1 < v77)
      {
        v41 = *(_QWORD *)(v75 + 8 * v42);
        if (v41)
          goto LABEL_16;
        v82 = v40 + 1;
        if (v40 + 2 < v77)
        {
          v41 = *(_QWORD *)(v75 + 8 * (v40 + 2));
          if (v41)
          {
            v40 += 2;
LABEL_13:
            v84 = (v41 - 1) & v41;
            v33 = __clz(__rbit64(v41)) + (v40 << 6);
            v82 = v40;
            goto LABEL_9;
          }
          v82 = v40 + 2;
          if (v40 + 3 < v77)
          {
            v41 = *(_QWORD *)(v75 + 8 * (v40 + 3));
            if (v41)
            {
              v40 += 3;
              goto LABEL_13;
            }
            v42 = v40 + 4;
            v82 = v40 + 3;
            if (v40 + 4 < v77)
            {
              v41 = *(_QWORD *)(v75 + 8 * v42);
              if (!v41)
              {
                while (1)
                {
                  v40 = v42 + 1;
                  if (__OFADD__(v42, 1))
                    goto LABEL_56;
                  if (v40 >= v77)
                  {
                    v82 = v74;
                    goto LABEL_30;
                  }
                  v41 = *(_QWORD *)(v75 + 8 * v40);
                  ++v42;
                  if (v41)
                    goto LABEL_13;
                }
              }
LABEL_16:
              v40 = v42;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_30:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015310);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v34, 1, 1, v43);
    v84 = 0;
LABEL_31:
    v44 = (uint64_t)v34;
    v45 = v86;
    sub_2403B80A4(v44, (uint64_t)v86, &qword_257015308);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015310);
    v47 = (*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v45, 1, v46) == 1;
    result = v47;
    if (v47)
      return result;
    v83 = v47;
    v48 = (uint64_t)v45 + *(int *)(v46 + 48);
    v49 = *v45;
    v50 = v45[1];
    sub_2403A91CC(v48, (uint64_t)v21, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
    v51 = sub_240509E28(v49, v50);
    v53 = v52;
    swift_bridgeObjectRelease();
    if ((v53 & 1) == 0)
      goto LABEL_51;
    v54 = *(_QWORD *)(a2 + 56);
    v55 = v90;
    sub_2403AE1A4(v54 + *(_QWORD *)(v89 + 72) * v51, (uint64_t)v90, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
    v56 = *v55;
    v57 = *v21;
    v96 = v56;
    v58 = *(_QWORD *)(v56 + 16);
    v59 = *(_QWORD *)(v57 + 16);
    v97 = v58;
    v60 = (uint64_t)v93;
    v61 = (uint64_t)v98;
    if (v58 != v59)
    {
LABEL_50:
      sub_240388AE4((uint64_t)v90, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
      v21 = v81;
LABEL_51:
      sub_240388AE4((uint64_t)v21, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
      return 0;
    }
    if (v97 && v96 != v57)
      break;
LABEL_6:
    v31 = (uint64_t)v90;
    v21 = v81;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v32 = sub_2408E5CD8();
    sub_240388AE4(v31, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
    sub_240388AE4((uint64_t)v21, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations);
    a1 = v79;
    a2 = v80;
    v30 = v84;
    result = v83;
    if ((v32 & 1) == 0)
      return result;
  }
  v62 = 0;
  v63 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  v91 = *(_QWORD *)(v76 + 72);
  while (1)
  {
    result = sub_2403AE1A4(v96 + v63, v61, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    if (v62 >= *(_QWORD *)(v57 + 16))
      break;
    sub_2403AE1A4(v57 + v63, v60, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    v64 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_2403A9210(v61, (uint64_t)v11, &qword_25700C958);
    sub_2403A9210(v60, v64, &qword_25700C958);
    v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
    v66 = v92;
    if (v65((uint64_t)v11, 1, v92) == 1)
    {
      if (v65(v64, 1, v66) != 1)
        goto LABEL_48;
      sub_2403A97FC((uint64_t)v11, &qword_25700C958);
    }
    else
    {
      v67 = v9;
      v68 = (uint64_t)v85;
      sub_2403A9210((uint64_t)v11, (uint64_t)v85, &qword_25700C958);
      if (v65(v64, 1, v66) == 1)
      {
        sub_240388AE4(v68, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
        v60 = (uint64_t)v93;
LABEL_48:
        sub_2403A97FC((uint64_t)v11, &qword_257015258);
        v72 = (uint64_t)v98;
LABEL_49:
        sub_240388AE4(v60, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        sub_240388AE4(v72, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        goto LABEL_50;
      }
      v69 = v88;
      sub_2403A91CC(v64, v88, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind.== infix(_:_:)(v68, v69);
      v71 = v70;
      sub_240388AE4(v69, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      sub_240388AE4(v68, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      sub_2403A97FC((uint64_t)v11, &qword_25700C958);
      v9 = v67;
      v60 = (uint64_t)v93;
      v72 = (uint64_t)v98;
      if ((v71 & 1) == 0)
        goto LABEL_49;
    }
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v61 = (uint64_t)v98;
    v73 = sub_2408E5CD8();
    sub_240388AE4(v60, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    sub_240388AE4(v61, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    if ((v73 & 1) == 0)
      goto LABEL_50;
    ++v62;
    v63 += v91;
    if (v97 == v62)
      goto LABEL_6;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

uint64_t _s23LighthouseDataProcessor41ToolKitProtoAssistantTypeSchemaDefinitionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570152E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C940);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_25700C940);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C940);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C940);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C940);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C940);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
      v25 = _s23LighthouseDataProcessor45ToolKitProtoAssistantTypeSchemaDefinitionKindO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C940);
      sub_2403A97FC((uint64_t)v21, &qword_25700C940);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C940);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C940);
    sub_2403A97FC((uint64_t)v21, &qword_25700C940);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinitionKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_2570152E8);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C940);
  sub_2403A97FC((uint64_t)v21, &qword_25700C940);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C940);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t sub_240892788(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t *v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  char *v57;
  char *v58;
  char v59;
  void (*v60)(char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(_QWORD, _QWORD);
  _QWORD *v76;
  _QWORD *v77;

  v75 = a4;
  v76 = a1;
  v77 = a2;
  v5 = sub_2408E57A4();
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v64 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)&v62 - v8;
  v72 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  v69 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v62 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570016D0);
  MEMORY[0x24BDAC7A8](v68);
  v73 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDC0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v67 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v70 = (uint64_t)&v62 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v71 = (uint64_t)&v62 - v16;
  v17 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015300);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C548);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (uint64_t *)((char *)&v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v62 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v62 - v31;
  v33 = a3(0);
  sub_2403A9210((uint64_t)v76 + *(int *)(v33 + 20), (uint64_t)v32, &qword_25700C548);
  v74 = v33;
  sub_2403A9210((uint64_t)v77 + *(int *)(v33 + 20), (uint64_t)v30, &qword_25700C548);
  v34 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_2403A9210((uint64_t)v32, (uint64_t)v23, &qword_25700C548);
  sub_2403A9210((uint64_t)v30, v34, &qword_25700C548);
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v35((uint64_t)v23, 1, v17) == 1)
  {
    sub_2403A97FC((uint64_t)v30, &qword_25700C548);
    sub_2403A97FC((uint64_t)v32, &qword_25700C548);
    if (v35(v34, 1, v17) == 1)
    {
      sub_2403A97FC((uint64_t)v23, &qword_25700C548);
      goto LABEL_9;
    }
LABEL_6:
    v36 = &qword_257015300;
    v37 = (uint64_t)v23;
LABEL_7:
    sub_2403A97FC(v37, v36);
    goto LABEL_18;
  }
  sub_2403A9210((uint64_t)v23, (uint64_t)v27, &qword_25700C548);
  if (v35(v34, 1, v17) == 1)
  {
    sub_2403A97FC((uint64_t)v30, &qword_25700C548);
    sub_2403A97FC((uint64_t)v32, &qword_25700C548);
    sub_240388AE4((uint64_t)v27, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
    goto LABEL_6;
  }
  sub_2403A91CC(v34, (uint64_t)v20, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  v38 = _s23LighthouseDataProcessor37ToolKitProtoAssistantSchemaIdentifierV2eeoiySbAC_ACtFZ_0(v27, v20);
  sub_240388AE4((uint64_t)v20, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2403A97FC((uint64_t)v30, &qword_25700C548);
  sub_2403A97FC((uint64_t)v32, &qword_25700C548);
  sub_240388AE4((uint64_t)v27, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2403A97FC((uint64_t)v23, &qword_25700C548);
  if ((v38 & 1) == 0)
    goto LABEL_18;
LABEL_9:
  v40 = v76;
  v39 = v77;
  if ((v75(*v76, *v77) & 1) == 0)
    goto LABEL_18;
  v41 = v74;
  v42 = v71;
  sub_2403A9210((uint64_t)v40 + *(int *)(v74 + 24), v71, &qword_256FFBDC0);
  v43 = v70;
  sub_2403A9210((uint64_t)v39 + *(int *)(v41 + 24), v70, &qword_256FFBDC0);
  v44 = v73;
  v45 = v73 + *(int *)(v68 + 48);
  sub_2403A9210(v42, v73, &qword_256FFBDC0);
  sub_2403A9210(v43, v45, &qword_256FFBDC0);
  v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  v47 = v72;
  if (v46(v44, 1, v72) != 1)
  {
    v48 = v67;
    sub_2403A9210(v44, v67, &qword_256FFBDC0);
    if (v46(v45, 1, v47) != 1)
    {
      v49 = v62;
      sub_2403A91CC(v45, v62, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      v50 = _s23LighthouseDataProcessor37ToolKitProtoTypeDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v48, v49);
      sub_240388AE4(v49, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      sub_2403A97FC(v43, &qword_256FFBDC0);
      sub_2403A97FC(v42, &qword_256FFBDC0);
      sub_240388AE4(v48, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      sub_2403A97FC(v44, &qword_256FFBDC0);
      if ((v50 & 1) != 0)
        goto LABEL_17;
LABEL_18:
      v59 = 0;
      return v59 & 1;
    }
    sub_2403A97FC(v43, &qword_256FFBDC0);
    sub_2403A97FC(v42, &qword_256FFBDC0);
    sub_240388AE4(v48, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
    goto LABEL_15;
  }
  sub_2403A97FC(v43, &qword_256FFBDC0);
  sub_2403A97FC(v42, &qword_256FFBDC0);
  if (v46(v45, 1, v47) != 1)
  {
LABEL_15:
    v36 = &qword_2570016D0;
    v37 = v44;
    goto LABEL_7;
  }
  sub_2403A97FC(v44, &qword_256FFBDC0);
LABEL_17:
  v51 = v74;
  v52 = (char *)v40 + *(int *)(v74 + 28);
  v54 = v65;
  v53 = v66;
  v55 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  v56 = v63;
  v55(v63, v52, v66);
  v57 = (char *)v39 + *(int *)(v51 + 28);
  v58 = v64;
  v55(v64, v57, v53);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v59 = sub_2408E5CD8();
  v60 = *(void (**)(char *, uint64_t))(v54 + 8);
  v60(v58, v53);
  v60(v56, v53);
  return v59 & 1;
}

uint64_t _s23LighthouseDataProcessor38ToolKitProtoSampleInvocationDefinitionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  if ((sub_2408BAD50(*(_QWORD **)a1, *(_QWORD **)a2) & 1) == 0)
    goto LABEL_11;
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a2 + 24);
  if (!v11)
  {
    if (v12)
      goto LABEL_11;
    goto LABEL_9;
  }
  if (!v12)
    goto LABEL_11;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v11 == v12 || (v13 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_9:
    if ((sub_2408BAD50(*(_QWORD **)(a1 + 8), *(_QWORD **)(a2 + 8)) & 1) != 0)
    {
      v14 = type metadata accessor for ToolKitProtoSampleInvocationDefinition(0);
      v15 = a1 + *(int *)(v14 + 28);
      v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v16(v10, v15, v4);
      v16(v8, a2 + *(int *)(v14 + 28), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v13 = sub_2408E5CD8();
      v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
      return v13 & 1;
    }
LABEL_11:
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_240892FB4(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v6 = sub_2408E57A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - v11;
  v13 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v13 || (v14 = 0, (sub_2408E617C() & 1) != 0))
  {
    v15 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v15 || (v14 = 0, (sub_2408E617C() & 1) != 0))
    {
      v16 = a3(0);
      v17 = (char *)a1 + *(int *)(v16 + 24);
      v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v18(v12, v17, v6);
      v18(v10, &a2[*(int *)(v16 + 24)], v6);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_2408E5CD8();
      v19 = *(void (**)(char *, uint64_t))(v7 + 8);
      v19(v10, v6);
      v19(v12, v6);
    }
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor37ToolKitProtoTypeDisplayRepresentationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v12 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v12 & 1;
  }
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a2 + 32);
  if (!v13)
  {
    if (v14)
      goto LABEL_15;
    goto LABEL_13;
  }
  if (!v14)
    goto LABEL_15;
  if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && v13 == v14 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_13:
    if ((sub_2408BAD50(*(_QWORD **)(a1 + 16), *(_QWORD **)(a2 + 16)) & 1) != 0)
    {
      v15 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
      v16 = a1 + *(int *)(v15 + 28);
      v17 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v17(v10, v16, v4);
      v17(v8, a2 + *(int *)(v15 + 28), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_2408E5CD8();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v8, v4);
      v18(v10, v4);
      return v12 & 1;
    }
LABEL_15:
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV7AltTextV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570151F8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C988);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_25700C988);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C988);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C988);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C988);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C988);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
      v25 = static ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind.== infix(_:_:)((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C988);
      sub_2403A97FC((uint64_t)v21, &qword_25700C988);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C988);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C988);
    sub_2403A97FC((uint64_t)v21, &qword_25700C988);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoAltTextKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_2570151F8);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C988);
  sub_2403A97FC((uint64_t)v21, &qword_25700C988);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C988);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV5ImageV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570151E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C990);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_25700C990);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C990);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C990);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C990);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C990);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
      v25 = static ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind.== infix(_:_:)(v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C990);
      sub_2403A97FC((uint64_t)v21, &qword_25700C990);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C990);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C990);
    sub_2403A97FC((uint64_t)v21, &qword_25700C990);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoImageKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_2570151E0);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C990);
  sub_2403A97FC((uint64_t)v21, &qword_25700C990);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C990);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV5ImageV6StaticV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015540);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C998);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_25700C998);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C998);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C998);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C998);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C998);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
      v25 = static ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind.== infix(_:_:)((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C998);
      sub_2403A97FC((uint64_t)v21, &qword_25700C998);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C998);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C998);
    sub_2403A97FC((uint64_t)v21, &qword_25700C998);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.ToolKitProtoStaticKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015540);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C998);
  sub_2403A97FC((uint64_t)v21, &qword_25700C998);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C998);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV5ImageV6StaticV6SymbolV2eeoiySbAI_AItFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  char v20;
  char v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    v28 = v5;
    v13 = a1[2];
    v14 = a1[3];
    v15 = *((_QWORD *)a2 + 2);
    v16 = *((_QWORD *)a2 + 3);
    if (v14 >> 60 == 15)
    {
      if (v16 >> 60 != 15)
        goto LABEL_15;
    }
    else
    {
      if (v16 >> 60 == 15)
        goto LABEL_15;
      sub_2403C2410(a1[2], a1[3]);
      sub_2403C2410(v15, v16);
      sub_2408C422C(v13, v14);
      v18 = v17;
      sub_2403C2424(v15, v16);
      sub_2403C2424(v13, v14);
      if ((v18 & 1) == 0)
      {
LABEL_16:
        v12 = 0;
        return v12 & 1;
      }
    }
    v13 = a1[4];
    v14 = a1[5];
    v15 = *((_QWORD *)a2 + 4);
    v16 = *((_QWORD *)a2 + 5);
    if (v14 >> 60 == 15)
    {
      if (v16 >> 60 == 15)
        goto LABEL_19;
    }
    else if (v16 >> 60 != 15)
    {
      sub_2403C2410(a1[4], a1[5]);
      sub_2403C2410(v15, v16);
      sub_2408C422C(v13, v14);
      v21 = v20;
      sub_2403C2424(v15, v16);
      sub_2403C2424(v13, v14);
      if ((v21 & 1) == 0)
        goto LABEL_16;
LABEL_19:
      v22 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol(0);
      v23 = (char *)a1 + *(int *)(v22 + 28);
      v24 = v28;
      v25 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
      v25(v10, v23, v4);
      v25(v8, &a2[*(int *)(v22 + 28)], v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_2408E5CD8();
      v26 = *(void (**)(char *, uint64_t))(v24 + 8);
      v26(v8, v4);
      v26(v10, v4);
      return v12 & 1;
    }
LABEL_15:
    sub_2403C2410(v13, v14);
    sub_2403C2410(v15, v16);
    sub_2403C2424(v13, v14);
    sub_2403C2424(v15, v16);
    goto LABEL_16;
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor31ToolKitProtoContainerDefinitionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_2408E57A4();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v44 - v7;
  v8 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015238);
  MEMORY[0x24BDAC7A8](v12);
  v51 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v44 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v44 - v21;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v23 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v23 = 0, (sub_2408E617C() & 1) != 0))
    {
      v24 = *(_QWORD *)(a1 + 48);
      v25 = *(_QWORD *)(a2 + 48);
      if (v24)
      {
        if (!v25)
          goto LABEL_31;
        if (*(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40) || v24 != v25)
        {
          v23 = 0;
          if ((sub_2408E617C() & 1) == 0)
            return v23 & 1;
        }
      }
      else if (v25)
      {
        goto LABEL_31;
      }
      if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
        goto LABEL_31;
      v26 = *(_QWORD *)(a1 + 64);
      v27 = *(_QWORD *)(a2 + 64);
      if (v26)
      {
        if (!v27)
          goto LABEL_31;
        if (*(_QWORD *)(a1 + 56) != *(_QWORD *)(a2 + 56) || v26 != v27)
        {
          v23 = 0;
          if ((sub_2408E617C() & 1) == 0)
            return v23 & 1;
        }
      }
      else if (v27)
      {
        goto LABEL_31;
      }
      v28 = type metadata accessor for ToolKitProtoContainerDefinition(0);
      sub_2403A9210(a1 + *(int *)(v28 + 40), (uint64_t)v22, &qword_256FFA458);
      v45 = v28;
      sub_2403A9210(a2 + *(int *)(v28 + 40), (uint64_t)v20, &qword_256FFA458);
      v29 = v51;
      v30 = v51 + *(int *)(v12 + 48);
      sub_2403A9210((uint64_t)v22, v51, &qword_256FFA458);
      v46 = v30;
      sub_2403A9210((uint64_t)v20, v30, &qword_256FFA458);
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v31(v29, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v20, &qword_256FFA458);
        v29 = v51;
        sub_2403A97FC((uint64_t)v22, &qword_256FFA458);
        if (v31(v46, 1, v8) == 1)
        {
          sub_2403A97FC(v29, &qword_256FFA458);
LABEL_29:
          if (*(unsigned __int8 *)(a1 + 33) == *(unsigned __int8 *)(a2 + 33))
          {
            v34 = v45;
            v35 = a1 + *(int *)(v45 + 44);
            v37 = v49;
            v36 = v50;
            v38 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
            v39 = v47;
            v38(v47, v35, v50);
            v40 = a2 + *(int *)(v34 + 44);
            v41 = v48;
            v38(v48, v40, v36);
            sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v23 = sub_2408E5CD8();
            v42 = *(void (**)(char *, uint64_t))(v37 + 8);
            v42(v41, v36);
            v42(v39, v36);
            return v23 & 1;
          }
LABEL_31:
          v23 = 0;
          return v23 & 1;
        }
      }
      else
      {
        sub_2403A9210(v29, (uint64_t)v17, &qword_256FFA458);
        v32 = v46;
        if (v31(v46, 1, v8) != 1)
        {
          sub_2403A91CC(v32, (uint64_t)v11, type metadata accessor for ToolKitProtoContainerDefinition.Device);
          v33 = sub_2408A53B0(v17, v11, (void (*)(uint64_t, uint64_t))sub_2408AFAC8, (void (*)(uint64_t, uint64_t))sub_240829750, type metadata accessor for ToolKitProtoContainerDefinition.Device);
          sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoContainerDefinition.Device);
          sub_2403A97FC((uint64_t)v20, &qword_256FFA458);
          sub_2403A97FC((uint64_t)v22, &qword_256FFA458);
          sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoContainerDefinition.Device);
          sub_2403A97FC(v29, &qword_256FFA458);
          if ((v33 & 1) == 0)
            goto LABEL_31;
          goto LABEL_29;
        }
        sub_2403A97FC((uint64_t)v20, &qword_256FFA458);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA458);
        sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoContainerDefinition.Device);
      }
      sub_2403A97FC(v29, &qword_257015238);
      goto LABEL_31;
    }
  }
  return v23 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoSystemTypeProtocolV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for ToolKitProtoSystemTypeProtocolKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015500);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C898);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_25700C898);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C898);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C898);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C898);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C898);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
      _s23LighthouseDataProcessor34ToolKitProtoSystemTypeProtocolKindO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C898);
      sub_2403A97FC((uint64_t)v21, &qword_25700C898);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C898);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C898);
    sub_2403A97FC((uint64_t)v21, &qword_25700C898);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015500);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C898);
  sub_2403A97FC((uint64_t)v21, &qword_25700C898);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C898);
LABEL_8:
  v27 = type metadata accessor for ToolKitProtoSystemTypeProtocol(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoSystemTypeProtocolV15AssistantSchemaV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015300);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C548);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_25700C548);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C548);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C548);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C548);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C548);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, (uint64_t)v36, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      v25 = _s23LighthouseDataProcessor37ToolKitProtoAssistantSchemaIdentifierV2eeoiySbAC_ACtFZ_0(v16, v24);
      sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      sub_2403A97FC((uint64_t)v19, &qword_25700C548);
      sub_2403A97FC((uint64_t)v21, &qword_25700C548);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      sub_2403A97FC((uint64_t)v12, &qword_25700C548);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C548);
    sub_2403A97FC((uint64_t)v21, &qword_25700C548);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015300);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C548);
  sub_2403A97FC((uint64_t)v21, &qword_25700C548);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C548);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoRuntimeRequirementV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015320);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C928);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_25700C928);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C928);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C928);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C928);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C928);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
      _s23LighthouseDataProcessor34ToolKitProtoRuntimeRequirementKindO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C928);
      sub_2403A97FC((uint64_t)v21, &qword_25700C928);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C928);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C928);
    sub_2403A97FC((uint64_t)v21, &qword_25700C928);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015320);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C928);
  sub_2403A97FC((uint64_t)v21, &qword_25700C928);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C928);
LABEL_8:
  v27 = type metadata accessor for ToolKitProtoRuntimeRequirement(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor34ToolKitProtoRuntimePlatformVersionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*(_DWORD *)a1 == *(_DWORD *)a2
    && *(_DWORD *)(a1 + 4) == *(_DWORD *)(a2 + 4)
    && *(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8)
    && *(unsigned __int8 *)(a1 + 12) == *(unsigned __int8 *)(a2 + 12))
  {
    v13 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
    v14 = a1 + *(int *)(v13 + 32);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v15(v10, v14, v4);
    v15(v8, a2 + *(int *)(v13 + 32), v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v11 = sub_2408E5CD8();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v10, v4);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoRuntimeRequirementV22AvailabilityAnnotationV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  int *v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 *v57;
  uint64_t v58;
  char v59;
  uint64_t v61;
  char v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, unsigned __int8 *, uint64_t);
  char *v73;
  char *v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int *v83;
  unsigned __int8 *v84;
  unsigned __int8 *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v89 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v88 = (char *)&v76 - v8;
  v9 = type metadata accessor for ToolKitProtoRuntimePlatformVersion(0);
  v93 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v92 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015550);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v90 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v91 = (uint64_t)&v76 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v76 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C930);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8]((char *)&v76 - v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v76 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v76 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v38 = (char *)&v76 - v37;
  if (*a1 != *a2)
    goto LABEL_17;
  v86 = v33;
  v87 = v32;
  v80 = v31;
  v81 = v36;
  v82 = v35;
  v78 = v4;
  v79 = v34;
  v77 = v5;
  v39 = type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation(0);
  v40 = *(int *)(v39 + 20);
  v85 = a1;
  sub_2403A9210((uint64_t)&a1[v40], (uint64_t)v38, &qword_25700C930);
  v83 = (int *)v39;
  v84 = a2;
  sub_2403A9210((uint64_t)&a2[*(int *)(v39 + 20)], (uint64_t)v30, &qword_25700C930);
  v41 = (uint64_t)&v17[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v38, (uint64_t)v17, &qword_25700C930);
  sub_2403A9210((uint64_t)v30, v41, &qword_25700C930);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
  v43 = v11;
  if (v42((uint64_t)v17, 1, v9) == 1)
  {
    sub_2403A97FC((uint64_t)v30, &qword_25700C930);
    sub_2403A97FC((uint64_t)v38, &qword_25700C930);
    if (v42(v41, 1, v9) != 1)
    {
LABEL_8:
      v45 = (uint64_t)v17;
LABEL_16:
      sub_2403A97FC(v45, &qword_257015550);
      goto LABEL_17;
    }
    sub_2403A97FC((uint64_t)v17, &qword_25700C930);
    goto LABEL_10;
  }
  sub_2403A9210((uint64_t)v17, (uint64_t)v27, &qword_25700C930);
  if (v42(v41, 1, v9) == 1)
  {
    sub_2403A97FC((uint64_t)v30, &qword_25700C930);
    sub_2403A97FC((uint64_t)v38, &qword_25700C930);
    v44 = (uint64_t)v27;
LABEL_7:
    sub_240388AE4(v44, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
    goto LABEL_8;
  }
  v46 = v92;
  sub_2403A91CC(v41, v92, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
  v47 = _s23LighthouseDataProcessor34ToolKitProtoRuntimePlatformVersionV2eeoiySbAC_ACtFZ_0((uint64_t)v27, v46);
  sub_240388AE4(v46, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
  sub_2403A97FC((uint64_t)v30, &qword_25700C930);
  sub_2403A97FC((uint64_t)v38, &qword_25700C930);
  sub_240388AE4((uint64_t)v27, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
  sub_2403A97FC((uint64_t)v17, &qword_25700C930);
  if ((v47 & 1) != 0)
  {
LABEL_10:
    v48 = v83;
    v49 = v85;
    v50 = v87;
    sub_2403A9210((uint64_t)&v85[v83[6]], v87, &qword_25700C930);
    v51 = v43;
    v52 = v84;
    v53 = v86;
    sub_2403A9210((uint64_t)&v84[v48[6]], v86, &qword_25700C930);
    v93 = v51;
    v54 = v91;
    v55 = v91 + *(int *)(v51 + 48);
    sub_2403A9210(v50, v91, &qword_25700C930);
    sub_2403A9210(v53, v55, &qword_25700C930);
    if (v42(v54, 1, v9) == 1)
    {
      sub_2403A97FC(v53, &qword_25700C930);
      sub_2403A97FC(v50, &qword_25700C930);
      if (v42(v55, 1, v9) == 1)
      {
        v56 = v9;
        sub_2403A97FC(v54, &qword_25700C930);
LABEL_20:
        v63 = v82;
        sub_2403A9210((uint64_t)&v49[v48[7]], v82, &qword_25700C930);
        v64 = v42;
        v65 = v81;
        sub_2403A9210((uint64_t)&v52[v48[7]], v81, &qword_25700C930);
        v17 = v90;
        v66 = (uint64_t)&v90[*(int *)(v93 + 48)];
        sub_2403A9210(v63, (uint64_t)v90, &qword_25700C930);
        sub_2403A9210(v65, v66, &qword_25700C930);
        if (v64((uint64_t)v17, 1, v56) == 1)
        {
          sub_2403A97FC(v65, &qword_25700C930);
          sub_2403A97FC(v63, &qword_25700C930);
          if (v64(v66, 1, v56) == 1)
          {
            sub_2403A97FC((uint64_t)v17, &qword_25700C930);
LABEL_26:
            v71 = v77;
            v70 = v78;
            v72 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v77 + 16);
            v73 = v88;
            v72(v88, &v49[v48[8]], v78);
            v74 = v89;
            v72(v89, &v52[v48[8]], v70);
            sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v59 = sub_2408E5CD8();
            v75 = *(void (**)(char *, uint64_t))(v71 + 8);
            v75(v74, v70);
            v75(v73, v70);
            return v59 & 1;
          }
          goto LABEL_8;
        }
        v67 = v79;
        sub_2403A9210((uint64_t)v17, v79, &qword_25700C930);
        if (v64(v66, 1, v56) == 1)
        {
          sub_2403A97FC(v81, &qword_25700C930);
          sub_2403A97FC(v82, &qword_25700C930);
          v44 = v67;
          goto LABEL_7;
        }
        v68 = v92;
        sub_2403A91CC(v66, v92, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
        v69 = _s23LighthouseDataProcessor34ToolKitProtoRuntimePlatformVersionV2eeoiySbAC_ACtFZ_0(v67, v68);
        sub_240388AE4(v68, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
        sub_2403A97FC(v81, &qword_25700C930);
        sub_2403A97FC(v82, &qword_25700C930);
        sub_240388AE4(v67, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
        sub_2403A97FC((uint64_t)v17, &qword_25700C930);
        if ((v69 & 1) != 0)
          goto LABEL_26;
        goto LABEL_17;
      }
    }
    else
    {
      v57 = v52;
      v58 = v80;
      sub_2403A9210(v54, v80, &qword_25700C930);
      if (v42(v55, 1, v9) != 1)
      {
        v56 = v9;
        v61 = v92;
        sub_2403A91CC(v55, v92, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
        v62 = _s23LighthouseDataProcessor34ToolKitProtoRuntimePlatformVersionV2eeoiySbAC_ACtFZ_0(v58, v61);
        sub_240388AE4(v61, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
        sub_2403A97FC(v86, &qword_25700C930);
        sub_2403A97FC(v87, &qword_25700C930);
        sub_240388AE4(v58, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
        sub_2403A97FC(v54, &qword_25700C930);
        v52 = v57;
        v49 = v85;
        if ((v62 & 1) == 0)
          goto LABEL_17;
        goto LABEL_20;
      }
      sub_2403A97FC(v86, &qword_25700C930);
      sub_2403A97FC(v87, &qword_25700C930);
      sub_240388AE4(v58, type metadata accessor for ToolKitProtoRuntimePlatformVersion);
    }
    v45 = v54;
    goto LABEL_16;
  }
LABEL_17:
  v59 = 0;
  return v59 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoRuntimeRequirementV16DeviceCapabilityV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015548);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C938);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_25700C938);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C938);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C938);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C938);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C938);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
      v25 = static ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind.== infix(_:_:)((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C938);
      sub_2403A97FC((uint64_t)v21, &qword_25700C938);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C938);
      if (v25)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C938);
    sub_2403A97FC((uint64_t)v21, &qword_25700C938);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoRuntimeRequirement.ToolKitProtoDeviceCapabilityKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015548);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C938);
  sub_2403A97FC((uint64_t)v21, &qword_25700C938);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C938);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoRuntimeRequirementV16DeviceCapabilityV13MobileGestaltV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16))
    {
      v13 = type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt(0);
      v14 = a1 + *(int *)(v13 + 24);
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, a2 + *(int *)(v13 + 24), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_2408E5CD8();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoRuntimeRequirementV11FeatureFlagV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    v13 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v13 || (v12 = 0, (sub_2408E617C() & 1) != 0))
    {
      if (*(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32))
      {
        v14 = type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag(0);
        v15 = a1 + *(int *)(v14 + 28);
        v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v16(v10, v15, v4);
        v16(v8, a2 + *(int *)(v14 + 28), v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_2408E5CD8();
        v17 = *(void (**)(char *, uint64_t))(v5 + 8);
        v17(v8, v4);
        v17(v10, v4);
      }
      else
      {
        v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoRestrictionContextV5InSetV05ValueJ0V9LinkQueryV2eeoiySbAI_AItFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    v13 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v13 || (v12 = 0, (sub_2408E617C() & 1) != 0))
    {
      if (a1[4] == *((_QWORD *)a2 + 4) && a1[5] == *((_QWORD *)a2 + 5) || (v12 = 0, (sub_2408E617C() & 1) != 0))
      {
        v14 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(0);
        v15 = (char *)a1 + *(int *)(v14 + 28);
        v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v16(v10, v15, v4);
        v16(v8, &a2[*(int *)(v14 + 28)], v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_2408E5CD8();
        v17 = *(void (**)(char *, uint64_t))(v5 + 8);
        v17(v8, v4);
        v17(v10, v4);
      }
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor38ToolKitProtoContentItemClassDescriptorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoContentItemClassDescriptorKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153A8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_25700C8E8);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C8E8);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C8E8);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C8E8);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C8E8);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
      v25 = _s23LighthouseDataProcessor42ToolKitProtoContentItemClassDescriptorKindO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C8E8);
      sub_2403A97FC((uint64_t)v21, &qword_25700C8E8);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C8E8);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C8E8);
    sub_2403A97FC((uint64_t)v21, &qword_25700C8E8);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoContentItemClassDescriptorKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_2570153A8);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C8E8);
  sub_2403A97FC((uint64_t)v21, &qword_25700C8E8);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C8E8);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoRestrictionContextV5InSetV05ValueJ0V29ContentPropertyPossibleValuesV2eeoiySbAI_AItFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  char *v32;
  _QWORD *v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;

  v4 = sub_2408E57A4();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v43 - v7;
  v8 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015378);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues(0);
  v24 = *(int *)(v23 + 20);
  v49 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_25700C8E0);
  v27 = *(int *)(v26 + 20);
  v50 = a2;
  sub_2403A9210((uint64_t)&a2[v27], (uint64_t)v20, &qword_25700C8E0);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_25700C8E0);
  sub_2403A9210((uint64_t)v20, v28, &qword_25700C8E0);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_25700C8E0);
    sub_2403A97FC((uint64_t)v22, &qword_25700C8E0);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_25700C8E0);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_25700C8E0);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_25700C8E0);
    sub_2403A97FC((uint64_t)v22, &qword_25700C8E0);
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_257015378);
LABEL_12:
    v34 = 0;
    return v34 & 1;
  }
  v30 = v44;
  sub_2403A91CC(v28, v44, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
  v31 = _s23LighthouseDataProcessor38ToolKitProtoContentItemClassDescriptorV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v30);
  sub_240388AE4(v30, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
  sub_2403A97FC((uint64_t)v20, &qword_25700C8E0);
  sub_2403A97FC((uint64_t)v22, &qword_25700C8E0);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
  sub_2403A97FC((uint64_t)v13, &qword_25700C8E0);
  if ((v31 & 1) == 0)
    goto LABEL_12;
LABEL_8:
  v33 = v49;
  v32 = v50;
  if (*v49 == *(_QWORD *)v50 && v49[1] == *((_QWORD *)v50 + 1) || (v34 = 0, (sub_2408E617C() & 1) != 0))
  {
    v35 = (char *)v33 + *(int *)(v26 + 24);
    v37 = v47;
    v36 = v48;
    v38 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v39 = v45;
    v38(v45, v35, v48);
    v40 = v46;
    v38(v46, &v32[*(int *)(v26 + 24)], v36);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v34 = sub_2408E5CD8();
    v41 = *(void (**)(char *, uint64_t))(v37 + 8);
    v41(v40, v36);
    v41(v39, v36);
  }
  return v34 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoRestrictionContextV13TextTypedWithV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  void (*v13)(char *, unsigned __int8 *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3] && a1[4] == a2[4] && a1[5] == a2[5])
  {
    v11 = type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith(0);
    v12 = &a1[*(int *)(v11 + 40)];
    v13 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 40)], v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_2408E5CD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoCoercionDefinitionV2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unsigned __int8 *, uint64_t);
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t *v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;

  v0 = sub_2408E57A4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v48 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v47 = (char *)&v41 - v4;
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v41 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v22 = (char *)&v41 - v21;
  if (*v20 != *v19)
    goto LABEL_10;
  v41 = v8;
  v45 = v1;
  v46 = v0;
  v23 = v20;
  v24 = v19;
  v25 = type metadata accessor for ToolKitProtoCoercionDefinition(0);
  v26 = *(int *)(v25 + 20);
  v43 = v23;
  sub_2403A9210((uint64_t)&v23[v26], (uint64_t)v22, &qword_256FFA428);
  v42 = v25;
  v27 = *(int *)(v25 + 20);
  v44 = v24;
  sub_2403A9210((uint64_t)&v24[v27], (uint64_t)v18, &qword_256FFA428);
  v28 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v11, &qword_256FFA428);
  sub_2403A9210((uint64_t)v18, v28, &qword_256FFA428);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v29((uint64_t)v11, 1, v5) != 1)
  {
    sub_2403A9210((uint64_t)v11, (uint64_t)v15, &qword_256FFA428);
    if (v29(v28, 1, v5) != 1)
    {
      v30 = v41;
      sub_2403A91CC(v28, (uint64_t)v41, type metadata accessor for ToolKitProtoTypeInstance);
      v31 = _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(v15, v30);
      sub_240388AE4((uint64_t)v30, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A97FC((uint64_t)v18, &qword_256FFA428);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA428);
      sub_240388AE4((uint64_t)v15, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A97FC((uint64_t)v11, &qword_256FFA428);
      if ((v31 & 1) != 0)
        goto LABEL_9;
LABEL_10:
      v38 = 0;
      return v38 & 1;
    }
    sub_2403A97FC((uint64_t)v18, &qword_256FFA428);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA428);
    sub_240388AE4((uint64_t)v15, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_7:
    sub_2403A97FC((uint64_t)v11, &qword_257000CB0);
    goto LABEL_10;
  }
  sub_2403A97FC((uint64_t)v18, &qword_256FFA428);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA428);
  if (v29(v28, 1, v5) != 1)
    goto LABEL_7;
  sub_2403A97FC((uint64_t)v11, &qword_256FFA428);
LABEL_9:
  v32 = v42;
  v34 = v45;
  v33 = v46;
  v35 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v45 + 16);
  v36 = v47;
  v35(v47, &v43[*(int *)(v42 + 24)], v46);
  v37 = v48;
  v35(v48, &v44[*(int *)(v32 + 24)], v33);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v38 = sub_2408E5CD8();
  v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  v39(v37, v33);
  v39(v36, v33);
  return v38 & 1;
}

uint64_t _s23LighthouseDataProcessor29ToolKitProtoCompoundPredicateV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  void (*v13)(char *, unsigned __int8 *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *a2 && (sub_2408BE90C(*((_QWORD *)a1 + 1), *((_QWORD *)a2 + 1)) & 1) != 0)
  {
    v11 = type metadata accessor for ToolKitProtoCompoundPredicate(0);
    v12 = &a1[*(int *)(v11 + 24)];
    v13 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 24)], v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_2408E5CD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154D8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBE00);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFBE00);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFBE00);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFBE00);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFBE00);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFBE00);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
      v25 = static ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind.== infix(_:_:)(v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
      sub_2403A97FC((uint64_t)v19, &qword_256FFBE00);
      sub_2403A97FC((uint64_t)v21, &qword_256FFBE00);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
      sub_2403A97FC((uint64_t)v12, &qword_256FFBE00);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFBE00);
    sub_2403A97FC((uint64_t)v21, &qword_256FFBE00);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_2570154D8);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFBE00);
  sub_2403A97FC((uint64_t)v21, &qword_256FFBE00);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFBE00);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V5QueryV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  char v46;
  uint64_t *v48;
  char V18PredicateTemplatesV2eeoiySbAI_AItFZ_0;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a2;
  v3 = sub_2408E57A4();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v58 - v6;
  v67 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v58 = (uint64_t *)((char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015560);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDF8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t *)((char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v58 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (uint64_t)&v58 - v14;
  v15 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C528);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v69 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_256FFA7F8);
  sub_2403A9210(v71, (uint64_t)v28, &qword_256FFA7F8);
  v31 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA7F8);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA7F8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) != 1)
  {
    sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA7F8);
    if (v32(v31, 1, v15) != 1)
    {
      sub_2403A91CC(v31, (uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
      v35 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v25, (uint64_t)v18);
      sub_240388AE4((uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
      sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
      sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeIdentifier);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA7F8);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
    sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeIdentifier);
LABEL_6:
    v33 = &qword_25700C528;
    v34 = (uint64_t)v21;
LABEL_14:
    sub_2403A97FC(v34, v33);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
  if (v32(v31, 1, v15) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v21, &qword_256FFA7F8);
LABEL_8:
  v36 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query(0);
  v37 = v69;
  v38 = v66;
  sub_2403A9210(v69 + *(int *)(v36 + 20), v66, &qword_256FFBDF8);
  v40 = v70;
  v39 = v71;
  sub_2403A9210(v71 + *(int *)(v36 + 20), v70, &qword_256FFBDF8);
  v41 = v68;
  v42 = v68 + *(int *)(v64 + 48);
  sub_2403A9210(v38, v68, &qword_256FFBDF8);
  sub_2403A9210(v40, v42, &qword_256FFBDF8);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v44 = v67;
  if (v43(v41, 1, v67) == 1)
  {
    sub_2403A97FC(v40, &qword_256FFBDF8);
    sub_2403A97FC(v38, &qword_256FFBDF8);
    if (v43(v42, 1, v44) == 1)
    {
      sub_2403A97FC(v41, &qword_256FFBDF8);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v41, (uint64_t)v63, &qword_256FFBDF8);
  if (v43(v42, 1, v44) == 1)
  {
    sub_2403A97FC(v70, &qword_256FFBDF8);
    sub_2403A97FC(v38, &qword_256FFBDF8);
    sub_240388AE4((uint64_t)v45, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
LABEL_13:
    v33 = &qword_257015560;
    v34 = v41;
    goto LABEL_14;
  }
  v48 = v58;
  sub_2403A91CC(v42, (uint64_t)v58, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
  V18PredicateTemplatesV2eeoiySbAI_AItFZ_0 = _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V5QueryV18PredicateTemplatesV2eeoiySbAI_AItFZ_0(v45, v48);
  sub_240388AE4((uint64_t)v48, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
  sub_2403A97FC(v70, &qword_256FFBDF8);
  sub_2403A97FC(v38, &qword_256FFBDF8);
  sub_240388AE4((uint64_t)v45, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
  sub_2403A97FC(v41, &qword_256FFBDF8);
  if ((V18PredicateTemplatesV2eeoiySbAI_AItFZ_0 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0G0V8TemplateV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015390);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C908);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_25700C908);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C908);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C908);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C908);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C908);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, (uint64_t)v37, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0G0V0defG12TemplateKindO2eeoiySbAG_AGtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C908);
      sub_2403A97FC((uint64_t)v21, &qword_25700C908);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C908);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C908);
    sub_2403A97FC((uint64_t)v21, &qword_25700C908);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.ToolKitProtoComparisonTemplateKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015390);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C908);
  sub_2403A97FC((uint64_t)v21, &qword_25700C908);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C908);
LABEL_8:
  v27 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t sub_240897F68(_QWORD *a1, _QWORD *a2)
{
  return sub_2408A20D0(a1, a2, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, &qword_257015380, &qword_25700C910, type metadata accessor for ToolKitProtoComparisonPredicate.Template, _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0G0V8TemplateV2eeoiySbAG_AGtFZ_0);
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V5QueryV18PredicateTemplatesV2eeoiySbAI_AItFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t, uint64_t);
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  char v108;
  int *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  int *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int (*v125)(uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  char v128;
  int *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int (*v133)(uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v138;
  char v139;
  int *v140;
  uint64_t v141;
  void (*v142)(char *, char *, uint64_t);
  char *v143;
  char *v144;
  void (*v145)(char *, uint64_t);
  char *v146;
  int *v147;
  uint64_t *v148;
  uint64_t *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t valid;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;

  v187 = sub_2408E57A4();
  v154 = *(_QWORD *)(v187 - 8);
  v4 = MEMORY[0x24BDAC7A8](v187);
  v153 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v152 = (char *)&v146 - v6;
  valid = type metadata accessor for ToolKitProtoValidPredicate(0);
  v157 = *(_QWORD *)(valid - 8);
  MEMORY[0x24BDAC7A8](valid);
  v151 = (uint64_t)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154A0);
  MEMORY[0x24BDAC7A8](v156);
  v160 = (uint64_t)&v146 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDF0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v177 = (char *)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v159 = (uint64_t)&v146 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v176 = (char *)&v146 - v14;
  v163 = type metadata accessor for ToolKitProtoSearchableItemPredicate.Template(0);
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x24BDAC7A8](v163);
  v155 = (uint64_t)&v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154A8);
  MEMORY[0x24BDAC7A8](v161);
  v167 = (uint64_t)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDE8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v194 = (char *)&v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v165 = (uint64_t)&v146 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v166 = (uint64_t)&v146 - v22;
  v172 = type metadata accessor for ToolKitProtoSuggestedPredicate(0);
  v171 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  v164 = (uint64_t)&v146 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154B0);
  MEMORY[0x24BDAC7A8](v170);
  v25 = (char *)&v146 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDE0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v168 = (uint64_t)&v146 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v188 = (uint64_t)&v146 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v174 = (uint64_t)&v146 - v31;
  v32 = type metadata accessor for ToolKitProtoAllPredicate(0);
  v179 = *(_QWORD *)(v32 - 8);
  v180 = v32;
  MEMORY[0x24BDAC7A8](v32);
  v169 = (uint64_t)&v146 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154B8);
  MEMORY[0x24BDAC7A8](v178);
  v186 = (char *)&v146 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDD8);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v173 = (uint64_t)&v146 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v189 = (uint64_t)&v146 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v190 = (uint64_t)&v146 - v40;
  v41 = type metadata accessor for ToolKitProtoIdSearchPredicate.Template(0);
  v184 = *(_QWORD *)(v41 - 8);
  v185 = v41;
  MEMORY[0x24BDAC7A8](v41);
  v175 = (uint64_t)&v146 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154C0);
  MEMORY[0x24BDAC7A8](v183);
  v44 = (char *)&v146 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDD0);
  v46 = MEMORY[0x24BDAC7A8](v45);
  v181 = (uint64_t)&v146 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v46);
  v193 = (uint64_t)&v146 - v49;
  MEMORY[0x24BDAC7A8](v48);
  v191 = (uint64_t)&v146 - v50;
  v51 = type metadata accessor for ToolKitProtoStringSearchPredicate.Template(0);
  v52 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v182 = (uint64_t)&v146 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154C8);
  MEMORY[0x24BDAC7A8](v54);
  v56 = (char *)&v146 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDC8);
  v58 = MEMORY[0x24BDAC7A8](v57);
  v192 = (uint64_t)&v146 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = MEMORY[0x24BDAC7A8](v58);
  v62 = (char *)&v146 - v61;
  MEMORY[0x24BDAC7A8](v60);
  v64 = (char *)&v146 - v63;
  if ((sub_2408BEE24(*a1, *a2) & 1) == 0)
    goto LABEL_46;
  v150 = v44;
  v146 = v25;
  v65 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
  v66 = *(int *)(v65 + 24);
  v148 = a1;
  sub_2403A9210((uint64_t)a1 + v66, (uint64_t)v64, &qword_256FFBDC8);
  v147 = (int *)v65;
  v67 = *(int *)(v65 + 24);
  v149 = a2;
  sub_2403A9210((uint64_t)a2 + v67, (uint64_t)v62, &qword_256FFBDC8);
  v68 = (uint64_t)&v56[*(int *)(v54 + 48)];
  sub_2403A9210((uint64_t)v64, (uint64_t)v56, &qword_256FFBDC8);
  sub_2403A9210((uint64_t)v62, v68, &qword_256FFBDC8);
  v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  if (v69((uint64_t)v56, 1, v51) == 1)
  {
    sub_2403A97FC((uint64_t)v62, &qword_256FFBDC8);
    sub_2403A97FC((uint64_t)v64, &qword_256FFBDC8);
    v70 = v69(v68, 1, v51);
    v71 = (uint64_t)v194;
    if (v70 == 1)
    {
      sub_2403A97FC((uint64_t)v56, &qword_256FFBDC8);
      goto LABEL_9;
    }
LABEL_7:
    v74 = &qword_2570154C8;
    v75 = (uint64_t)v56;
LABEL_45:
    sub_2403A97FC(v75, v74);
    goto LABEL_46;
  }
  v72 = v192;
  sub_2403A9210((uint64_t)v56, v192, &qword_256FFBDC8);
  v73 = v69(v68, 1, v51);
  v71 = (uint64_t)v194;
  if (v73 == 1)
  {
    sub_2403A97FC((uint64_t)v62, &qword_256FFBDC8);
    sub_2403A97FC((uint64_t)v64, &qword_256FFBDC8);
    sub_240388AE4(v72, type metadata accessor for ToolKitProtoStringSearchPredicate.Template);
    goto LABEL_7;
  }
  v76 = v182;
  sub_2403A91CC(v68, v182, type metadata accessor for ToolKitProtoStringSearchPredicate.Template);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v77 = sub_2408E5CD8();
  sub_240388AE4(v76, type metadata accessor for ToolKitProtoStringSearchPredicate.Template);
  sub_2403A97FC((uint64_t)v62, &qword_256FFBDC8);
  sub_2403A97FC((uint64_t)v64, &qword_256FFBDC8);
  sub_240388AE4(v72, type metadata accessor for ToolKitProtoStringSearchPredicate.Template);
  sub_2403A97FC((uint64_t)v56, &qword_256FFBDC8);
  if ((v77 & 1) == 0)
    goto LABEL_46;
LABEL_9:
  v78 = v147;
  v79 = v191;
  sub_2403A9210((uint64_t)v148 + v147[7], v191, &qword_256FFBDD0);
  v80 = v193;
  sub_2403A9210((uint64_t)v149 + v78[7], v193, &qword_256FFBDD0);
  v81 = (uint64_t)v150;
  v82 = (uint64_t)&v150[*(int *)(v183 + 48)];
  sub_2403A9210(v79, (uint64_t)v150, &qword_256FFBDD0);
  sub_2403A9210(v80, v82, &qword_256FFBDD0);
  v83 = v185;
  v84 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v184 + 48);
  if (v84(v81, 1, v185) == 1)
  {
    sub_2403A97FC(v80, &qword_256FFBDD0);
    sub_2403A97FC(v79, &qword_256FFBDD0);
    v85 = v84(v82, 1, v83);
    v86 = v188;
    v87 = v189;
    v88 = (uint64_t)v186;
    v89 = v190;
    if (v85 == 1)
    {
      sub_2403A97FC((uint64_t)v150, &qword_256FFBDD0);
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  v90 = v181;
  sub_2403A9210(v81, v181, &qword_256FFBDD0);
  v91 = v84(v82, 1, v83);
  v92 = v188;
  v87 = v189;
  v88 = (uint64_t)v186;
  v89 = v190;
  if (v91 == 1)
  {
    sub_2403A97FC(v193, &qword_256FFBDD0);
    sub_2403A97FC(v79, &qword_256FFBDD0);
    sub_240388AE4(v90, type metadata accessor for ToolKitProtoIdSearchPredicate.Template);
LABEL_14:
    v74 = &qword_2570154C0;
    v75 = (uint64_t)v150;
    goto LABEL_45;
  }
  v93 = v71;
  v94 = v175;
  sub_2403A91CC(v82, v175, type metadata accessor for ToolKitProtoIdSearchPredicate.Template);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v95 = sub_2408E5CD8();
  v96 = v94;
  v71 = v93;
  sub_240388AE4(v96, type metadata accessor for ToolKitProtoIdSearchPredicate.Template);
  sub_2403A97FC(v193, &qword_256FFBDD0);
  sub_2403A97FC(v191, &qword_256FFBDD0);
  v86 = v92;
  sub_240388AE4(v90, type metadata accessor for ToolKitProtoIdSearchPredicate.Template);
  sub_2403A97FC(v81, &qword_256FFBDD0);
  if ((v95 & 1) == 0)
    goto LABEL_46;
LABEL_16:
  v97 = v147;
  sub_2403A9210((uint64_t)v148 + v147[8], v89, &qword_256FFBDD8);
  sub_2403A9210((uint64_t)v149 + v97[8], v87, &qword_256FFBDD8);
  v98 = v88 + *(int *)(v178 + 48);
  sub_2403A9210(v89, v88, &qword_256FFBDD8);
  sub_2403A9210(v87, v98, &qword_256FFBDD8);
  v99 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v179 + 48);
  v100 = v89;
  v101 = v180;
  if (v99(v88, 1, v180) == 1)
  {
    sub_2403A97FC(v87, &qword_256FFBDD8);
    sub_2403A97FC(v100, &qword_256FFBDD8);
    v102 = v99(v98, 1, v101);
    v103 = (uint64_t)v176;
    v104 = v177;
    if (v102 == 1)
    {
      sub_2403A97FC(v88, &qword_256FFBDD8);
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  v105 = v173;
  sub_2403A9210(v88, v173, &qword_256FFBDD8);
  v106 = v99(v98, 1, v101);
  v103 = (uint64_t)v176;
  v104 = v177;
  if (v106 == 1)
  {
    sub_2403A97FC(v189, &qword_256FFBDD8);
    sub_2403A97FC(v190, &qword_256FFBDD8);
    sub_240388AE4(v105, type metadata accessor for ToolKitProtoAllPredicate);
LABEL_21:
    v74 = &qword_2570154B8;
    v75 = v88;
    goto LABEL_45;
  }
  v107 = v169;
  sub_2403A91CC(v98, v169, type metadata accessor for ToolKitProtoAllPredicate);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v108 = sub_2408E5CD8();
  sub_240388AE4(v107, type metadata accessor for ToolKitProtoAllPredicate);
  sub_2403A97FC(v189, &qword_256FFBDD8);
  sub_2403A97FC(v190, &qword_256FFBDD8);
  sub_240388AE4(v105, type metadata accessor for ToolKitProtoAllPredicate);
  sub_2403A97FC(v88, &qword_256FFBDD8);
  if ((v108 & 1) == 0)
    goto LABEL_46;
LABEL_23:
  v109 = v147;
  v110 = v174;
  sub_2403A9210((uint64_t)v148 + v147[9], v174, &qword_256FFBDE0);
  sub_2403A9210((uint64_t)v149 + v109[9], v86, &qword_256FFBDE0);
  v111 = (uint64_t)v146;
  v112 = (uint64_t)&v146[*(int *)(v170 + 48)];
  sub_2403A9210(v110, (uint64_t)v146, &qword_256FFBDE0);
  sub_2403A9210(v86, v112, &qword_256FFBDE0);
  v113 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
  v114 = v172;
  if (v113(v111, 1, v172) == 1)
  {
    sub_2403A97FC(v86, &qword_256FFBDE0);
    sub_2403A97FC(v110, &qword_256FFBDE0);
    if (v113(v112, 1, v114) == 1)
    {
      sub_2403A97FC((uint64_t)v146, &qword_256FFBDE0);
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  v115 = v168;
  sub_2403A9210(v111, v168, &qword_256FFBDE0);
  if (v113(v112, 1, v114) == 1)
  {
    sub_2403A97FC(v188, &qword_256FFBDE0);
    sub_2403A97FC(v174, &qword_256FFBDE0);
    sub_240388AE4(v115, type metadata accessor for ToolKitProtoSuggestedPredicate);
LABEL_28:
    v74 = &qword_2570154B0;
    v75 = (uint64_t)v146;
    goto LABEL_45;
  }
  v116 = v164;
  sub_2403A91CC(v112, v164, type metadata accessor for ToolKitProtoSuggestedPredicate);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v117 = sub_2408E5CD8();
  sub_240388AE4(v116, type metadata accessor for ToolKitProtoSuggestedPredicate);
  sub_2403A97FC(v188, &qword_256FFBDE0);
  sub_2403A97FC(v174, &qword_256FFBDE0);
  sub_240388AE4(v115, type metadata accessor for ToolKitProtoSuggestedPredicate);
  sub_2403A97FC(v111, &qword_256FFBDE0);
  if ((v117 & 1) == 0)
    goto LABEL_46;
LABEL_30:
  if ((sub_2408BEE38(v148[1], v149[1]) & 1) == 0)
    goto LABEL_46;
  v118 = (uint64_t)v104;
  v119 = v147;
  v120 = v166;
  sub_2403A9210((uint64_t)v148 + v147[10], v166, &qword_256FFBDE8);
  v121 = v165;
  sub_2403A9210((uint64_t)v149 + v119[10], v165, &qword_256FFBDE8);
  v122 = v167;
  v123 = v167 + *(int *)(v161 + 48);
  sub_2403A9210(v120, v167, &qword_256FFBDE8);
  v124 = v122;
  sub_2403A9210(v121, v123, &qword_256FFBDE8);
  v125 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v162 + 48);
  v126 = v163;
  if (v125(v124, 1, v163) != 1)
  {
    sub_2403A9210(v124, v71, &qword_256FFBDE8);
    if (v125(v123, 1, v126) != 1)
    {
      v127 = v155;
      sub_2403A91CC(v123, v155, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v128 = sub_2408E5CD8();
      sub_240388AE4(v127, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template);
      sub_2403A97FC(v165, &qword_256FFBDE8);
      sub_2403A97FC(v166, &qword_256FFBDE8);
      sub_240388AE4(v71, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template);
      sub_2403A97FC(v124, &qword_256FFBDE8);
      if ((v128 & 1) == 0)
        goto LABEL_46;
      goto LABEL_38;
    }
    sub_2403A97FC(v165, &qword_256FFBDE8);
    sub_2403A97FC(v166, &qword_256FFBDE8);
    sub_240388AE4(v71, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template);
LABEL_36:
    v74 = &qword_2570154A8;
LABEL_44:
    v75 = v124;
    goto LABEL_45;
  }
  sub_2403A97FC(v121, &qword_256FFBDE8);
  v124 = v167;
  sub_2403A97FC(v120, &qword_256FFBDE8);
  if (v125(v123, 1, v126) != 1)
    goto LABEL_36;
  sub_2403A97FC(v124, &qword_256FFBDE8);
LABEL_38:
  v129 = v147;
  sub_2403A9210((uint64_t)v148 + v147[11], v103, &qword_256FFBDF0);
  v130 = v159;
  sub_2403A9210((uint64_t)v149 + v129[11], v159, &qword_256FFBDF0);
  v131 = v160;
  v132 = v160 + *(int *)(v156 + 48);
  sub_2403A9210(v103, v160, &qword_256FFBDF0);
  v124 = v131;
  sub_2403A9210(v130, v132, &qword_256FFBDF0);
  v133 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v157 + 48);
  v134 = valid;
  if (v133(v124, 1, valid) == 1)
  {
    sub_2403A97FC(v130, &qword_256FFBDF0);
    v124 = v160;
    sub_2403A97FC(v103, &qword_256FFBDF0);
    if (v133(v132, 1, v134) == 1)
    {
      sub_2403A97FC(v124, &qword_256FFBDF0);
      v135 = v187;
LABEL_49:
      v140 = v147;
      v141 = v154;
      v142 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
      v143 = v152;
      v142(v152, (char *)v148 + v147[12], v135);
      v144 = v153;
      v142(v153, (char *)v149 + v140[12], v135);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v136 = sub_2408E5CD8();
      v145 = *(void (**)(char *, uint64_t))(v141 + 8);
      v145(v144, v135);
      v145(v143, v135);
      return v136 & 1;
    }
    goto LABEL_43;
  }
  sub_2403A9210(v124, v118, &qword_256FFBDF0);
  if (v133(v132, 1, v134) == 1)
  {
    sub_2403A97FC(v159, &qword_256FFBDF0);
    sub_2403A97FC(v103, &qword_256FFBDF0);
    sub_240388AE4(v118, type metadata accessor for ToolKitProtoValidPredicate);
LABEL_43:
    v74 = &qword_2570154A0;
    goto LABEL_44;
  }
  v138 = v151;
  sub_2403A91CC(v132, v151, type metadata accessor for ToolKitProtoValidPredicate);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v135 = v187;
  v139 = sub_2408E5CD8();
  sub_240388AE4(v138, type metadata accessor for ToolKitProtoValidPredicate);
  sub_2403A97FC(v159, &qword_256FFBDF0);
  sub_2403A97FC(v103, &qword_256FFBDF0);
  sub_240388AE4(v118, type metadata accessor for ToolKitProtoValidPredicate);
  sub_2403A97FC(v124, &qword_256FFBDF0);
  if ((v139 & 1) != 0)
    goto LABEL_49;
LABEL_46:
  v136 = 0;
  return v136 & 1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V11EnumerationV2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  char *v53;
  char v54;
  void (*v55)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t *v72;

  v71 = a1;
  v72 = a2;
  v2 = sub_2408E57A4();
  v60 = *(_QWORD *)(v2 - 8);
  v61 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v59 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v58 = (char *)&v57 - v5;
  v68 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  v65 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v62 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570016D0);
  MEMORY[0x24BDAC7A8](v64);
  v69 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDC0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v63 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v66 = (uint64_t)&v57 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v67 = (uint64_t)&v57 - v13;
  v14 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C528);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v57 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v57 - v28;
  v30 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration(0);
  sub_2403A9210((uint64_t)v71 + *(int *)(v30 + 32), (uint64_t)v29, &qword_256FFA7F8);
  v70 = v30;
  sub_2403A9210((uint64_t)v72 + *(int *)(v30 + 32), (uint64_t)v27, &qword_256FFA7F8);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_2403A9210((uint64_t)v29, (uint64_t)v20, &qword_256FFA7F8);
  sub_2403A9210((uint64_t)v27, v31, &qword_256FFA7F8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
    if (v32(v31, 1, v14) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA7F8);
      goto LABEL_9;
    }
LABEL_6:
    v33 = &qword_25700C528;
    v34 = (uint64_t)v20;
LABEL_7:
    sub_2403A97FC(v34, v33);
    goto LABEL_21;
  }
  sub_2403A9210((uint64_t)v20, (uint64_t)v24, &qword_256FFA7F8);
  if (v32(v31, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
    sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypeIdentifier);
    goto LABEL_6;
  }
  sub_2403A91CC(v31, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeIdentifier);
  v35 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v24, (uint64_t)v17);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
  sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
  sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA7F8);
  if ((v35 & 1) == 0)
    goto LABEL_21;
LABEL_9:
  v37 = v71;
  v36 = v72;
  if ((sub_2408BB2C8(*v71, *v72) & 1) == 0 || (sub_2408BF1A8(v37[1], v36[1]) & 1) == 0)
    goto LABEL_21;
  v38 = v70;
  v39 = v67;
  sub_2403A9210((uint64_t)v37 + *(int *)(v70 + 36), v67, &qword_256FFBDC0);
  v40 = v66;
  sub_2403A9210((uint64_t)v36 + *(int *)(v38 + 36), v66, &qword_256FFBDC0);
  v41 = v69;
  v42 = v69 + *(int *)(v64 + 48);
  sub_2403A9210(v39, v69, &qword_256FFBDC0);
  sub_2403A9210(v40, v42, &qword_256FFBDC0);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v44 = v68;
  if (v43(v41, 1, v68) != 1)
  {
    v45 = v63;
    sub_2403A9210(v41, v63, &qword_256FFBDC0);
    if (v43(v42, 1, v44) != 1)
    {
      v46 = v62;
      sub_2403A91CC(v42, v62, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      v47 = _s23LighthouseDataProcessor37ToolKitProtoTypeDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v45, v46);
      sub_240388AE4(v46, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      sub_2403A97FC(v40, &qword_256FFBDC0);
      sub_2403A97FC(v39, &qword_256FFBDC0);
      sub_240388AE4(v45, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      sub_2403A97FC(v41, &qword_256FFBDC0);
      if ((v47 & 1) != 0)
        goto LABEL_18;
LABEL_21:
      v54 = 0;
      return v54 & 1;
    }
    sub_2403A97FC(v40, &qword_256FFBDC0);
    sub_2403A97FC(v39, &qword_256FFBDC0);
    sub_240388AE4(v45, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
    goto LABEL_16;
  }
  sub_2403A97FC(v40, &qword_256FFBDC0);
  sub_2403A97FC(v39, &qword_256FFBDC0);
  if (v43(v42, 1, v44) != 1)
  {
LABEL_16:
    v33 = &qword_2570016D0;
    v34 = v41;
    goto LABEL_7;
  }
  sub_2403A97FC(v41, &qword_256FFBDC0);
LABEL_18:
  if (*((unsigned __int8 *)v37 + 16) != *((unsigned __int8 *)v36 + 16) || (sub_2408BF558(v37[3], v36[3]) & 1) == 0)
    goto LABEL_21;
  v48 = v70;
  v50 = v60;
  v49 = v61;
  v51 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  v52 = v58;
  v51(v58, (char *)v37 + *(int *)(v70 + 40), v61);
  v53 = v59;
  v51(v59, (char *)v36 + *(int *)(v48 + 40), v49);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v54 = sub_2408E5CD8();
  v55 = *(void (**)(char *, uint64_t))(v50 + 8);
  v55(v53, v49);
  v55(v52, v49);
  return v54 & 1;
}

uint64_t _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV8OptionalV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  char v46;
  char *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a2;
  v3 = sub_2408E57A4();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v58 - v6;
  v67 = type metadata accessor for ToolKitProtoTypedValue(0);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v58 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v58 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (uint64_t)&v58 - v14;
  v15 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v69 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_256FFA428);
  sub_2403A9210(v71, (uint64_t)v28, &qword_256FFA428);
  v31 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA428);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA428);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) != 1)
  {
    sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA428);
    if (v32(v31, 1, v15) != 1)
    {
      sub_2403A91CC(v31, (uint64_t)v18, type metadata accessor for ToolKitProtoTypeInstance);
      v35 = _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(v25, v18);
      sub_240388AE4((uint64_t)v18, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A97FC((uint64_t)v28, &qword_256FFA428);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA428);
      sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA428);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_256FFA428);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA428);
    sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_6:
    v33 = &qword_257000CB0;
    v34 = (uint64_t)v21;
LABEL_14:
    sub_2403A97FC(v34, v33);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_256FFA428);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA428);
  if (v32(v31, 1, v15) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v21, &qword_256FFA428);
LABEL_8:
  v36 = type metadata accessor for ToolKitProtoTypeInstance.Optional(0);
  v37 = v69;
  v38 = v66;
  sub_2403A9210(v69 + *(int *)(v36 + 20), v66, &qword_256FFA3A8);
  v40 = v70;
  v39 = v71;
  sub_2403A9210(v71 + *(int *)(v36 + 20), v70, &qword_256FFA3A8);
  v41 = v68;
  v42 = v68 + *(int *)(v64 + 48);
  sub_2403A9210(v38, v68, &qword_256FFA3A8);
  sub_2403A9210(v40, v42, &qword_256FFA3A8);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v44 = v67;
  if (v43(v41, 1, v67) == 1)
  {
    sub_2403A97FC(v40, &qword_256FFA3A8);
    sub_2403A97FC(v38, &qword_256FFA3A8);
    if (v43(v42, 1, v44) == 1)
    {
      sub_2403A97FC(v41, &qword_256FFA3A8);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v41, (uint64_t)v63, &qword_256FFA3A8);
  if (v43(v42, 1, v44) == 1)
  {
    sub_2403A97FC(v70, &qword_256FFA3A8);
    sub_2403A97FC(v38, &qword_256FFA3A8);
    sub_240388AE4((uint64_t)v45, type metadata accessor for ToolKitProtoTypedValue);
LABEL_13:
    v33 = &qword_257000CA8;
    v34 = v41;
    goto LABEL_14;
  }
  v48 = v58;
  sub_2403A91CC(v42, (uint64_t)v58, type metadata accessor for ToolKitProtoTypedValue);
  v49 = sub_2408A2ED8(v45, v48, (uint64_t (*)(uint64_t *, uint64_t *))static ToolKitProtoTypedValueKind.== infix(_:_:), (void (*)(uint64_t))sub_2404227AC, (void (*)(uint64_t))sub_240422794, type metadata accessor for ToolKitProtoTypedValue);
  sub_240388AE4((uint64_t)v48, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC(v70, &qword_256FFA3A8);
  sub_2403A97FC(v38, &qword_256FFA3A8);
  sub_240388AE4((uint64_t)v45, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC(v41, &qword_256FFA3A8);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV8DeferredV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA428);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA428);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA428);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA428);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA428);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoTypeInstance);
      v25 = _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA428);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA428);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA428);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA428);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA428);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000CB0);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA428);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA428);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA428);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoTypeInstance.Deferred(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t sub_24089A4FC(_QWORD *a1, char *a2)
{
  return sub_240892FB4(a1, a2, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoRestrictionContextV5InSetV05ValueJ0V2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = sub_2408E57A4();
  v50 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)&v45 - v7;
  v8 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570153C0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v51 = (uint64_t)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v45 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v45 - v20;
  v22 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet(0);
  v23 = *(int *)(v22 + 20);
  v24 = a1;
  v25 = (_QWORD *)(a1 + v23);
  v26 = *(_QWORD *)(a1 + v23 + 8);
  v52 = a2;
  v27 = (_QWORD *)(a2 + v23);
  v28 = v27[1];
  if (!v26)
  {
    v29 = v22;
    v46 = v4;
    if (v28)
      goto LABEL_14;
    goto LABEL_8;
  }
  if (!v28)
    goto LABEL_14;
  v29 = v22;
  v46 = v4;
  if (*v25 == *v27 && v26 == v28 || (v30 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_8:
    v31 = v24;
    sub_2403A9210(v24, (uint64_t)v21, &qword_25700C8D8);
    sub_2403A9210(v52, (uint64_t)v19, &qword_25700C8D8);
    v32 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v21, (uint64_t)v13, &qword_25700C8D8);
    sub_2403A9210((uint64_t)v19, v32, &qword_25700C8D8);
    v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v33((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v19, &qword_25700C8D8);
      sub_2403A97FC((uint64_t)v21, &qword_25700C8D8);
      if (v33(v32, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_25700C8D8);
LABEL_17:
        v39 = v50;
        v40 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
        v41 = v48;
        v42 = v46;
        v40(v48, v31 + *(int *)(v29 + 24), v46);
        v43 = v49;
        v40(v49, v52 + *(int *)(v29 + 24), v42);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v30 = sub_2408E5CD8();
        v44 = *(void (**)(char *, uint64_t))(v39 + 8);
        v44(v43, v42);
        v44(v41, v42);
        return v30 & 1;
      }
      goto LABEL_13;
    }
    v34 = v51;
    sub_2403A9210((uint64_t)v13, v51, &qword_25700C8D8);
    if (v33(v32, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v19, &qword_25700C8D8);
      sub_2403A97FC((uint64_t)v21, &qword_25700C8D8);
      sub_240388AE4(v34, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
LABEL_13:
      sub_2403A97FC((uint64_t)v13, &qword_2570153C0);
      goto LABEL_14;
    }
    v36 = v47;
    sub_2403A91CC(v32, v47, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    _s23LighthouseDataProcessor30ToolKitProtoRestrictionContextV5InSetV0def5ValueJ4KindO2eeoiySbAG_AGtFZ_0(v34, v36);
    v38 = v37;
    sub_240388AE4(v36, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    sub_2403A97FC((uint64_t)v19, &qword_25700C8D8);
    sub_2403A97FC((uint64_t)v21, &qword_25700C8D8);
    sub_240388AE4(v34, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ToolKitProtoValueSetKind);
    sub_2403A97FC((uint64_t)v13, &qword_25700C8D8);
    if ((v38 & 1) != 0)
      goto LABEL_17;
LABEL_14:
    v30 = 0;
  }
  return v30 & 1;
}

uint64_t _s23LighthouseDataProcessor30ToolKitProtoRestrictionContextV5InSetV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  char v46;
  uint64_t *v48;
  char V18PredicateTemplatesV2eeoiySbAI_AItFZ_0;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a2;
  v3 = sub_2408E57A4();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v58 - v6;
  v67 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates(0);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v58 = (uint64_t *)((char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015560);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDF8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t *)((char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v58 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (uint64_t)&v58 - v14;
  v15 = type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015568);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8D0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v69 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_25700C8D0);
  sub_2403A9210(v71, (uint64_t)v28, &qword_25700C8D0);
  v31 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_25700C8D0);
  sub_2403A9210((uint64_t)v28, v31, &qword_25700C8D0);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) != 1)
  {
    sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_25700C8D0);
    if (v32(v31, 1, v15) != 1)
    {
      sub_2403A91CC(v31, (uint64_t)v18, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
      v35 = _s23LighthouseDataProcessor30ToolKitProtoRestrictionContextV5InSetV05ValueJ0V2eeoiySbAG_AGtFZ_0((uint64_t)v25, (uint64_t)v18);
      sub_240388AE4((uint64_t)v18, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
      sub_2403A97FC((uint64_t)v28, &qword_25700C8D0);
      sub_2403A97FC((uint64_t)v30, &qword_25700C8D0);
      sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
      sub_2403A97FC((uint64_t)v21, &qword_25700C8D0);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_25700C8D0);
    sub_2403A97FC((uint64_t)v30, &qword_25700C8D0);
    sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet);
LABEL_6:
    v33 = &qword_257015568;
    v34 = (uint64_t)v21;
LABEL_14:
    sub_2403A97FC(v34, v33);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_25700C8D0);
  sub_2403A97FC((uint64_t)v30, &qword_25700C8D0);
  if (v32(v31, 1, v15) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v21, &qword_25700C8D0);
LABEL_8:
  v36 = type metadata accessor for ToolKitProtoRestrictionContext.InSet(0);
  v37 = v69;
  v38 = v66;
  sub_2403A9210(v69 + *(int *)(v36 + 20), v66, &qword_256FFBDF8);
  v40 = v70;
  v39 = v71;
  sub_2403A9210(v71 + *(int *)(v36 + 20), v70, &qword_256FFBDF8);
  v41 = v68;
  v42 = v68 + *(int *)(v64 + 48);
  sub_2403A9210(v38, v68, &qword_256FFBDF8);
  sub_2403A9210(v40, v42, &qword_256FFBDF8);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v44 = v67;
  if (v43(v41, 1, v67) == 1)
  {
    sub_2403A97FC(v40, &qword_256FFBDF8);
    sub_2403A97FC(v38, &qword_256FFBDF8);
    if (v43(v42, 1, v44) == 1)
    {
      sub_2403A97FC(v41, &qword_256FFBDF8);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v41, (uint64_t)v63, &qword_256FFBDF8);
  if (v43(v42, 1, v44) == 1)
  {
    sub_2403A97FC(v70, &qword_256FFBDF8);
    sub_2403A97FC(v38, &qword_256FFBDF8);
    sub_240388AE4((uint64_t)v45, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
LABEL_13:
    v33 = &qword_257015560;
    v34 = v41;
    goto LABEL_14;
  }
  v48 = v58;
  sub_2403A91CC(v42, (uint64_t)v58, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
  V18PredicateTemplatesV2eeoiySbAI_AItFZ_0 = _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V5QueryV18PredicateTemplatesV2eeoiySbAI_AItFZ_0(v45, v48);
  sub_240388AE4((uint64_t)v48, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
  sub_2403A97FC(v70, &qword_256FFBDF8);
  sub_2403A97FC(v38, &qword_256FFBDF8);
  sub_240388AE4((uint64_t)v45, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
  sub_2403A97FC(v41, &qword_256FFBDF8);
  if ((V18PredicateTemplatesV2eeoiySbAI_AItFZ_0 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t sub_24089AFB0(_QWORD *a1, char *a2)
{
  return sub_2408A0ABC(a1, a2, (char *)type metadata accessor for ToolKitProtoTypeInstance.Restricted, sub_2408C0978);
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV2IDV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;
  uint64_t *v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t *v45;
  char *v46;
  char *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = sub_2408E57A4();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v45 - v8;
  v10 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v45 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v45 - v23;
  sub_2408C422C(*a1, a1[1]);
  if ((v25 & 1) == 0)
    goto LABEL_8;
  v47 = v7;
  v48 = v19;
  v45 = v12;
  v46 = v9;
  v26 = type metadata accessor for ToolKitProtoTypedValue.ID(0);
  sub_2403A9210((uint64_t)a1 + *(int *)(v26 + 20), (uint64_t)v24, &qword_256FFA428);
  sub_2403A9210(a2 + *(int *)(v26 + 20), (uint64_t)v22, &qword_256FFA428);
  v27 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_2403A9210((uint64_t)v24, (uint64_t)v15, &qword_256FFA428);
  sub_2403A9210((uint64_t)v22, v27, &qword_256FFA428);
  v28 = v52;
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  v30 = a2;
  v31 = v26;
  if (v29((uint64_t)v15, 1, v52) == 1)
  {
    sub_2403A97FC((uint64_t)v22, &qword_256FFA428);
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    if (v29(v27, 1, v28) == 1)
    {
      sub_2403A97FC((uint64_t)v15, &qword_256FFA428);
LABEL_11:
      v37 = (char *)a1 + *(int *)(v31 + 24);
      v39 = v49;
      v38 = v50;
      v40 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
      v41 = v46;
      v40(v46, v37, v50);
      v42 = (char *)(v30 + *(int *)(v31 + 24));
      v43 = v47;
      v40(v47, v42, v38);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v33 = sub_2408E5CD8();
      v44 = *(void (**)(char *, uint64_t))(v39 + 8);
      v44(v43, v38);
      v44(v41, v38);
      return v33 & 1;
    }
    goto LABEL_7;
  }
  v32 = v48;
  sub_2403A9210((uint64_t)v15, (uint64_t)v48, &qword_256FFA428);
  if (v29(v27, 1, v28) == 1)
  {
    sub_2403A97FC((uint64_t)v22, &qword_256FFA428);
    sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
    sub_240388AE4((uint64_t)v32, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_7:
    sub_2403A97FC((uint64_t)v15, &qword_257000CB0);
    goto LABEL_8;
  }
  v35 = v45;
  sub_2403A91CC(v27, (uint64_t)v45, type metadata accessor for ToolKitProtoTypeInstance);
  v36 = _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(v32, v35);
  sub_240388AE4((uint64_t)v35, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA428);
  sub_2403A97FC((uint64_t)v24, &qword_256FFA428);
  sub_240388AE4((uint64_t)v32, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2403A97FC((uint64_t)v15, &qword_256FFA428);
  if ((v36 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v33 = 0;
  return v33 & 1;
}

uint64_t sub_24089B3B4(uint64_t *a1, uint64_t a2)
{
  return sub_24089B3CC(a1, a2, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Placemark);
}

uint64_t sub_24089B3C0(uint64_t *a1, uint64_t a2)
{
  return sub_24089B3CC(a1, a2, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Person);
}

uint64_t sub_24089B3CC(uint64_t *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char v34;
  _QWORD *v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  char *v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(_QWORD);
  uint64_t v54;
  uint64_t v55;

  v53 = a3;
  v5 = sub_2408E57A4();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v46 - v9;
  v11 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v54 = *(_QWORD *)(v11 - 8);
  v55 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154D0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v46 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v46 - v24;
  sub_2408C422C(*a1, a1[1]);
  if ((v26 & 1) == 0)
    goto LABEL_8;
  v49 = v8;
  v50 = v20;
  v47 = v13;
  v48 = v10;
  v27 = v53(0);
  sub_2403A9210((uint64_t)a1 + *(int *)(v27 + 20), (uint64_t)v25, &qword_256FFC340);
  sub_2403A9210(a2 + *(int *)(v27 + 20), (uint64_t)v23, &qword_256FFC340);
  v28 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_2403A9210((uint64_t)v25, (uint64_t)v16, &qword_256FFC340);
  sub_2403A9210((uint64_t)v23, v28, &qword_256FFC340);
  v29 = v55;
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  v31 = a2;
  v32 = v27;
  if (v30((uint64_t)v16, 1, v55) == 1)
  {
    sub_2403A97FC((uint64_t)v23, &qword_256FFC340);
    sub_2403A97FC((uint64_t)v25, &qword_256FFC340);
    if (v30(v28, 1, v29) == 1)
    {
      sub_2403A97FC((uint64_t)v16, &qword_256FFC340);
LABEL_11:
      v38 = (char *)a1 + *(int *)(v32 + 24);
      v40 = v51;
      v39 = v52;
      v41 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
      v42 = v48;
      v41(v48, v38, v52);
      v43 = (char *)(v31 + *(int *)(v32 + 24));
      v44 = v49;
      v41(v49, v43, v39);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v34 = sub_2408E5CD8();
      v45 = *(void (**)(char *, uint64_t))(v40 + 8);
      v45(v44, v39);
      v45(v42, v39);
      return v34 & 1;
    }
    goto LABEL_7;
  }
  v33 = v50;
  sub_2403A9210((uint64_t)v16, (uint64_t)v50, &qword_256FFC340);
  if (v30(v28, 1, v29) == 1)
  {
    sub_2403A97FC((uint64_t)v23, &qword_256FFC340);
    sub_2403A97FC((uint64_t)v25, &qword_256FFC340);
    sub_240388AE4((uint64_t)v33, type metadata accessor for ToolKitProtoDisplayRepresentation);
LABEL_7:
    sub_2403A97FC((uint64_t)v16, &qword_2570154D0);
    goto LABEL_8;
  }
  v36 = v47;
  sub_2403A91CC(v28, (uint64_t)v47, type metadata accessor for ToolKitProtoDisplayRepresentation);
  v37 = _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v33, v36);
  sub_240388AE4((uint64_t)v36, type metadata accessor for ToolKitProtoDisplayRepresentation);
  sub_2403A97FC((uint64_t)v23, &qword_256FFC340);
  sub_2403A97FC((uint64_t)v25, &qword_256FFC340);
  sub_240388AE4((uint64_t)v33, type metadata accessor for ToolKitProtoDisplayRepresentation);
  sub_2403A97FC((uint64_t)v16, &qword_256FFC340);
  if ((v37 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v34 = 0;
  return v34 & 1;
}

uint64_t sub_24089B7C4(uint64_t *a1, uint64_t a2)
{
  return sub_24089B3CC(a1, a2, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.File);
}

uint64_t sub_24089B7D0(uint64_t *a1, char *a2)
{
  return sub_24089B7DC(a1, a2, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App);
}

uint64_t sub_24089B7DC(uint64_t *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  _QWORD *v32;
  char v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD);
  char *v48;

  v47 = a3;
  v5 = sub_2408E57A4();
  v46 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v41 - v8;
  v9 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v43 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154D0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v41 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v41 - v22;
  v24 = *a1;
  v25 = a1[1];
  v26 = *(_QWORD *)a2;
  v27 = *((_QWORD *)a2 + 1);
  v48 = a2;
  if (v24 == v26 && v25 == v27 || (v28 = 0, (sub_2408E617C() & 1) != 0))
  {
    v42 = v5;
    v29 = v47(0);
    sub_2403A9210((uint64_t)a1 + *(int *)(v29 + 20), (uint64_t)v23, &qword_256FFC340);
    sub_2403A9210((uint64_t)&v48[*(int *)(v29 + 20)], (uint64_t)v21, &qword_256FFC340);
    v30 = (uint64_t)&v14[*(int *)(v12 + 48)];
    sub_2403A9210((uint64_t)v23, (uint64_t)v14, &qword_256FFC340);
    sub_2403A9210((uint64_t)v21, v30, &qword_256FFC340);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (v31((uint64_t)v14, 1, v9) == 1)
    {
      sub_2403A97FC((uint64_t)v21, &qword_256FFC340);
      sub_2403A97FC((uint64_t)v23, &qword_256FFC340);
      if (v31(v30, 1, v9) == 1)
      {
        sub_2403A97FC((uint64_t)v14, &qword_256FFC340);
LABEL_11:
        v34 = v46;
        v35 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
        v36 = v44;
        v37 = v42;
        v35(v44, (char *)a1 + *(int *)(v29 + 24), v42);
        v38 = v45;
        v35(v45, &v48[*(int *)(v29 + 24)], v37);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v28 = sub_2408E5CD8();
        v39 = *(void (**)(char *, uint64_t))(v34 + 8);
        v39(v38, v37);
        v39(v36, v37);
        return v28 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v14, (uint64_t)v18, &qword_256FFC340);
      if (v31(v30, 1, v9) != 1)
      {
        v32 = v43;
        sub_2403A91CC(v30, (uint64_t)v43, type metadata accessor for ToolKitProtoDisplayRepresentation);
        v33 = _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v18, v32);
        sub_240388AE4((uint64_t)v32, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC((uint64_t)v21, &qword_256FFC340);
        sub_2403A97FC((uint64_t)v23, &qword_256FFC340);
        sub_240388AE4((uint64_t)v18, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC((uint64_t)v14, &qword_256FFC340);
        if ((v33 & 1) != 0)
          goto LABEL_11;
LABEL_12:
        v28 = 0;
        return v28 & 1;
      }
      sub_2403A97FC((uint64_t)v21, &qword_256FFC340);
      sub_2403A97FC((uint64_t)v23, &qword_256FFC340);
      sub_240388AE4((uint64_t)v18, type metadata accessor for ToolKitProtoDisplayRepresentation);
    }
    sub_2403A97FC((uint64_t)v14, &qword_2570154D0);
    goto LABEL_12;
  }
  return v28 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV09PrimitiveH0V14DateComponentsV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char v25;
  char *v26;
  char v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  _QWORD *v39;
  int v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  _QWORD *v44;
  int v45;
  uint64_t v46;
  _QWORD *v47;
  char v48;
  _QWORD *v49;
  int v50;
  uint64_t v51;
  _QWORD *v52;
  char v53;
  _QWORD *v54;
  int v55;
  uint64_t v56;
  _QWORD *v57;
  char v58;
  _QWORD *v59;
  int v60;
  uint64_t v61;
  _QWORD *v62;
  char v63;
  _QWORD *v64;
  int v65;
  uint64_t v66;
  _QWORD *v67;
  char v68;
  _QWORD *v69;
  int v70;
  uint64_t v71;
  _QWORD *v72;
  char v73;
  _QWORD *v74;
  int v75;
  uint64_t v76;
  _QWORD *v77;
  char v78;
  _QWORD *v79;
  int v80;
  uint64_t v81;
  _QWORD *v82;
  char v83;
  _QWORD *v84;
  int v85;
  uint64_t v86;
  _QWORD *v87;
  char v88;
  _QWORD *v89;
  int v90;
  uint64_t v91;
  _QWORD *v92;
  char v93;
  _QWORD *v94;
  int v95;
  uint64_t v96;
  _QWORD *v97;
  char v98;
  _QWORD *v99;
  int v100;
  uint64_t v101;
  _QWORD *v102;
  char v103;
  _QWORD *v104;
  int v105;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t);
  char *v110;
  char *v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;

  v4 = sub_2408E57A4();
  v116 = *(_QWORD *)(v4 - 8);
  v117 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v115 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v114 = (char *)&v113 - v7;
  v8 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v118 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155A0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8B8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v113 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v113 - v21;
  v119 = a1;
  sub_2403A9210(a1, (uint64_t)&v113 - v21, &qword_25700C8B8);
  v120 = a2;
  sub_2403A9210(a2, (uint64_t)v20, &qword_25700C8B8);
  v23 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_25700C8B8);
  sub_2403A9210((uint64_t)v20, v23, &qword_25700C8B8);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v24((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_25700C8B8);
    sub_2403A97FC((uint64_t)v22, &qword_25700C8B8);
    if (v24(v23, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_25700C8B8);
      goto LABEL_8;
    }
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_2570155A0);
    v25 = 0;
    return v25 & 1;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_25700C8B8);
  if (v24(v23, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_25700C8B8);
    sub_2403A97FC((uint64_t)v22, &qword_25700C8B8);
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
    goto LABEL_6;
  }
  v26 = v118;
  sub_2403A91CC(v23, (uint64_t)v118, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
  v27 = _s23LighthouseDataProcessor22ToolKitProtoTypedValueV09PrimitiveH0V14DateComponentsV8CalendarV2eeoiySbAI_AItFZ_0(v17, v26);
  sub_240388AE4((uint64_t)v26, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
  sub_2403A97FC((uint64_t)v20, &qword_25700C8B8);
  sub_2403A97FC((uint64_t)v22, &qword_25700C8B8);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
  sub_2403A97FC((uint64_t)v13, &qword_25700C8B8);
  if ((v27 & 1) == 0)
    goto LABEL_95;
LABEL_8:
  v28 = (int *)type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents(0);
  v29 = v28[5];
  v31 = v119;
  v30 = v120;
  v32 = (_QWORD *)(v119 + v29);
  v33 = *(_QWORD *)(v119 + v29 + 8);
  v34 = (_QWORD *)(v120 + v29);
  v35 = v34[1];
  if (!v33)
  {
    if (v35)
      goto LABEL_95;
LABEL_15:
    v36 = v28[6];
    v37 = (_QWORD *)(v31 + v36);
    v38 = *(_BYTE *)(v31 + v36 + 8);
    v39 = (_QWORD *)(v30 + v36);
    v40 = *(unsigned __int8 *)(v30 + v36 + 8);
    if ((v38 & 1) != 0)
    {
      if (!v40)
        goto LABEL_95;
    }
    else
    {
      if (*v37 != *v39)
        LOBYTE(v40) = 1;
      if ((v40 & 1) != 0)
        goto LABEL_95;
    }
    v41 = v28[7];
    v42 = (_QWORD *)(v31 + v41);
    v43 = *(_BYTE *)(v31 + v41 + 8);
    v44 = (_QWORD *)(v30 + v41);
    v45 = *(unsigned __int8 *)(v30 + v41 + 8);
    if ((v43 & 1) != 0)
    {
      if (!v45)
        goto LABEL_95;
    }
    else
    {
      if (*v42 != *v44)
        LOBYTE(v45) = 1;
      if ((v45 & 1) != 0)
        goto LABEL_95;
    }
    v46 = v28[8];
    v47 = (_QWORD *)(v31 + v46);
    v48 = *(_BYTE *)(v31 + v46 + 8);
    v49 = (_QWORD *)(v30 + v46);
    v50 = *(unsigned __int8 *)(v30 + v46 + 8);
    if ((v48 & 1) != 0)
    {
      if (!v50)
        goto LABEL_95;
    }
    else
    {
      if (*v47 != *v49)
        LOBYTE(v50) = 1;
      if ((v50 & 1) != 0)
        goto LABEL_95;
    }
    v51 = v28[9];
    v52 = (_QWORD *)(v31 + v51);
    v53 = *(_BYTE *)(v31 + v51 + 8);
    v54 = (_QWORD *)(v30 + v51);
    v55 = *(unsigned __int8 *)(v30 + v51 + 8);
    if ((v53 & 1) != 0)
    {
      if (!v55)
        goto LABEL_95;
    }
    else
    {
      if (*v52 != *v54)
        LOBYTE(v55) = 1;
      if ((v55 & 1) != 0)
        goto LABEL_95;
    }
    v56 = v28[10];
    v57 = (_QWORD *)(v31 + v56);
    v58 = *(_BYTE *)(v31 + v56 + 8);
    v59 = (_QWORD *)(v30 + v56);
    v60 = *(unsigned __int8 *)(v30 + v56 + 8);
    if ((v58 & 1) != 0)
    {
      if (!v60)
        goto LABEL_95;
    }
    else
    {
      if (*v57 != *v59)
        LOBYTE(v60) = 1;
      if ((v60 & 1) != 0)
        goto LABEL_95;
    }
    v61 = v28[11];
    v62 = (_QWORD *)(v31 + v61);
    v63 = *(_BYTE *)(v31 + v61 + 8);
    v64 = (_QWORD *)(v30 + v61);
    v65 = *(unsigned __int8 *)(v30 + v61 + 8);
    if ((v63 & 1) != 0)
    {
      if (!v65)
        goto LABEL_95;
    }
    else
    {
      if (*v62 != *v64)
        LOBYTE(v65) = 1;
      if ((v65 & 1) != 0)
        goto LABEL_95;
    }
    v66 = v28[12];
    v67 = (_QWORD *)(v31 + v66);
    v68 = *(_BYTE *)(v31 + v66 + 8);
    v69 = (_QWORD *)(v30 + v66);
    v70 = *(unsigned __int8 *)(v30 + v66 + 8);
    if ((v68 & 1) != 0)
    {
      if (!v70)
        goto LABEL_95;
    }
    else
    {
      if (*v67 != *v69)
        LOBYTE(v70) = 1;
      if ((v70 & 1) != 0)
        goto LABEL_95;
    }
    v71 = v28[13];
    v72 = (_QWORD *)(v31 + v71);
    v73 = *(_BYTE *)(v31 + v71 + 8);
    v74 = (_QWORD *)(v30 + v71);
    v75 = *(unsigned __int8 *)(v30 + v71 + 8);
    if ((v73 & 1) != 0)
    {
      if (!v75)
        goto LABEL_95;
    }
    else
    {
      if (*v72 != *v74)
        LOBYTE(v75) = 1;
      if ((v75 & 1) != 0)
        goto LABEL_95;
    }
    v76 = v28[14];
    v77 = (_QWORD *)(v31 + v76);
    v78 = *(_BYTE *)(v31 + v76 + 8);
    v79 = (_QWORD *)(v30 + v76);
    v80 = *(unsigned __int8 *)(v30 + v76 + 8);
    if ((v78 & 1) != 0)
    {
      if (!v80)
        goto LABEL_95;
    }
    else
    {
      if (*v77 != *v79)
        LOBYTE(v80) = 1;
      if ((v80 & 1) != 0)
        goto LABEL_95;
    }
    v81 = v28[15];
    v82 = (_QWORD *)(v31 + v81);
    v83 = *(_BYTE *)(v31 + v81 + 8);
    v84 = (_QWORD *)(v30 + v81);
    v85 = *(unsigned __int8 *)(v30 + v81 + 8);
    if ((v83 & 1) != 0)
    {
      if (!v85)
        goto LABEL_95;
    }
    else
    {
      if (*v82 != *v84)
        LOBYTE(v85) = 1;
      if ((v85 & 1) != 0)
        goto LABEL_95;
    }
    v86 = v28[16];
    v87 = (_QWORD *)(v31 + v86);
    v88 = *(_BYTE *)(v31 + v86 + 8);
    v89 = (_QWORD *)(v30 + v86);
    v90 = *(unsigned __int8 *)(v30 + v86 + 8);
    if ((v88 & 1) != 0)
    {
      if (!v90)
        goto LABEL_95;
    }
    else
    {
      if (*v87 != *v89)
        LOBYTE(v90) = 1;
      if ((v90 & 1) != 0)
        goto LABEL_95;
    }
    v91 = v28[17];
    v92 = (_QWORD *)(v31 + v91);
    v93 = *(_BYTE *)(v31 + v91 + 8);
    v94 = (_QWORD *)(v30 + v91);
    v95 = *(unsigned __int8 *)(v30 + v91 + 8);
    if ((v93 & 1) != 0)
    {
      if (!v95)
        goto LABEL_95;
    }
    else
    {
      if (*v92 != *v94)
        LOBYTE(v95) = 1;
      if ((v95 & 1) != 0)
        goto LABEL_95;
    }
    v96 = v28[18];
    v97 = (_QWORD *)(v119 + v96);
    v98 = *(_BYTE *)(v119 + v96 + 8);
    v99 = (_QWORD *)(v120 + v96);
    v100 = *(unsigned __int8 *)(v120 + v96 + 8);
    if ((v98 & 1) == 0)
    {
      if (*v97 != *v99)
        LOBYTE(v100) = 1;
      if ((v100 & 1) != 0)
        goto LABEL_95;
LABEL_93:
      v101 = v28[19];
      v102 = (_QWORD *)(v119 + v101);
      v103 = *(_BYTE *)(v119 + v101 + 8);
      v104 = (_QWORD *)(v120 + v101);
      v105 = *(unsigned __int8 *)(v120 + v101 + 8);
      if ((v103 & 1) != 0)
      {
        if (!v105)
          goto LABEL_95;
      }
      else
      {
        if (*v102 != *v104)
          LOBYTE(v105) = 1;
        if ((v105 & 1) != 0)
          goto LABEL_95;
      }
      v108 = v116;
      v107 = v117;
      v109 = *(void (**)(char *, uint64_t, uint64_t))(v116 + 16);
      v110 = v114;
      v109(v114, v119 + v28[20], v117);
      v111 = v115;
      v109(v115, v120 + v28[20], v107);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v25 = sub_2408E5CD8();
      v112 = *(void (**)(char *, uint64_t))(v108 + 8);
      v112(v111, v107);
      v112(v110, v107);
      return v25 & 1;
    }
    if (v100)
      goto LABEL_93;
LABEL_95:
    v25 = 0;
    return v25 & 1;
  }
  if (!v35)
    goto LABEL_95;
  if (*v32 == *v34 && v33 == v35)
    goto LABEL_15;
  v25 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_15;
  return v25 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV09PrimitiveH0V14DateComponentsV8CalendarV2eeoiySbAI_AItFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  if (*(unsigned __int8 *)a1 != *a2)
    goto LABEL_17;
  v11 = a1[1] == *((_QWORD *)a2 + 1) && a1[2] == *((_QWORD *)a2 + 2);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    v13 = a1[6];
    v14 = *((_QWORD *)a2 + 6);
    if (!v13)
    {
      if (v14)
        goto LABEL_17;
      goto LABEL_14;
    }
    if (!v14)
      goto LABEL_17;
    if (a1[5] == *((_QWORD *)a2 + 5) && v13 == v14 || (v12 = 0, (sub_2408E617C() & 1) != 0))
    {
LABEL_14:
      if (a1[3] == *((_QWORD *)a2 + 3) && a1[4] == *((_QWORD *)a2 + 4))
      {
        v15 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar(0);
        v16 = (char *)a1 + *(int *)(v15 + 36);
        v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v17(v10, v16, v4);
        v17(v8, &a2[*(int *)(v15 + 36)], v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_2408E5CD8();
        v18 = *(void (**)(char *, uint64_t))(v5 + 8);
        v18(v8, v4);
        v18(v10, v4);
        return v12 & 1;
      }
LABEL_17:
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV09PrimitiveH0V14CurrencyAmountV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  _QWORD *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v48;
  char v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;

  v73 = a1;
  v74 = a2;
  v2 = sub_2408E57A4();
  v63 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v62 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v61 = (char *)&v59 - v5;
  v70 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v67 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v60 = (uint64_t *)((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154D0);
  MEMORY[0x24BDAC7A8](v66);
  v71 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v65 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v68 = (uint64_t)&v59 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v69 = (uint64_t)&v59 - v13;
  v14 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (unsigned __int8 *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155A8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8B0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (unsigned __int8 *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v59 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v59 - v28;
  v30 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount(0);
  sub_2403A9210((uint64_t)v73 + *(int *)(v30 + 20), (uint64_t)v29, &qword_25700C8B0);
  v72 = v30;
  sub_2403A9210((uint64_t)v74 + *(int *)(v30 + 20), (uint64_t)v27, &qword_25700C8B0);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_2403A9210((uint64_t)v29, (uint64_t)v20, &qword_25700C8B0);
  sub_2403A9210((uint64_t)v27, v31, &qword_25700C8B0);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_25700C8B0);
    sub_2403A97FC((uint64_t)v29, &qword_25700C8B0);
    if (v32(v31, 1, v14) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_25700C8B0);
      goto LABEL_8;
    }
LABEL_6:
    v33 = &qword_2570155A8;
    v34 = (uint64_t)v20;
LABEL_17:
    sub_2403A97FC(v34, v33);
    goto LABEL_18;
  }
  sub_2403A9210((uint64_t)v20, (uint64_t)v24, &qword_25700C8B0);
  if (v32(v31, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_25700C8B0);
    sub_2403A97FC((uint64_t)v29, &qword_25700C8B0);
    sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
    goto LABEL_6;
  }
  sub_2403A91CC(v31, (uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
  v35 = _s23LighthouseDataProcessor22ToolKitProtoTypedValueV09PrimitiveH0V7DecimalV2eeoiySbAG_AGtFZ_0(v24, v17);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
  sub_2403A97FC((uint64_t)v27, &qword_25700C8B0);
  sub_2403A97FC((uint64_t)v29, &qword_25700C8B0);
  sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
  sub_2403A97FC((uint64_t)v20, &qword_25700C8B0);
  if ((v35 & 1) == 0)
  {
LABEL_18:
    v38 = 0;
    return v38 & 1;
  }
LABEL_8:
  v37 = v73;
  v36 = v74;
  if (*v73 == *v74 && v73[1] == v74[1] || (v38 = 0, (sub_2408E617C() & 1) != 0))
  {
    v39 = v72;
    v40 = v69;
    sub_2403A9210((uint64_t)v37 + *(int *)(v72 + 24), v69, &qword_256FFC340);
    v41 = v68;
    sub_2403A9210((uint64_t)v36 + *(int *)(v39 + 24), v68, &qword_256FFC340);
    v42 = v71;
    v43 = v71 + *(int *)(v66 + 48);
    sub_2403A9210(v40, v71, &qword_256FFC340);
    sub_2403A9210(v41, v43, &qword_256FFC340);
    v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    v45 = v70;
    if (v44(v42, 1, v70) == 1)
    {
      sub_2403A97FC(v41, &qword_256FFC340);
      sub_2403A97FC(v40, &qword_256FFC340);
      if (v44(v43, 1, v45) == 1)
      {
        sub_2403A97FC(v42, &qword_256FFC340);
LABEL_21:
        v50 = v72;
        v51 = (char *)v37 + *(int *)(v72 + 28);
        v53 = v63;
        v52 = v64;
        v54 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        v55 = v61;
        v54(v61, v51, v64);
        v56 = (char *)v36 + *(int *)(v50 + 28);
        v57 = v62;
        v54(v62, v56, v52);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v38 = sub_2408E5CD8();
        v58 = *(void (**)(char *, uint64_t))(v53 + 8);
        v58(v57, v52);
        v58(v55, v52);
        return v38 & 1;
      }
    }
    else
    {
      v46 = v65;
      sub_2403A9210(v42, (uint64_t)v65, &qword_256FFC340);
      if (v44(v43, 1, v45) != 1)
      {
        v48 = v60;
        sub_2403A91CC(v43, (uint64_t)v60, type metadata accessor for ToolKitProtoDisplayRepresentation);
        v49 = _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v46, v48);
        sub_240388AE4((uint64_t)v48, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC(v41, &qword_256FFC340);
        sub_2403A97FC(v40, &qword_256FFC340);
        sub_240388AE4((uint64_t)v46, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC(v42, &qword_256FFC340);
        if ((v49 & 1) != 0)
          goto LABEL_21;
        goto LABEL_18;
      }
      sub_2403A97FC(v41, &qword_256FFC340);
      sub_2403A97FC(v40, &qword_256FFC340);
      sub_240388AE4((uint64_t)v46, type metadata accessor for ToolKitProtoDisplayRepresentation);
    }
    v33 = &qword_2570154D0;
    v34 = v42;
    goto LABEL_17;
  }
  return v38 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV09PrimitiveH0V13PaymentMethodV2eeoiySbAG_AGtFZ_0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unsigned __int8 *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  unsigned __int8 *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  char v40;
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, unsigned __int8 *, uint64_t);
  uint64_t v46;
  char *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;

  v56 = sub_2408E57A4();
  v3 = *(_QWORD *)(v56 - 8);
  v4 = MEMORY[0x24BDAC7A8](v56);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v49 - v7;
  v9 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154D0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v49 - v19;
  MEMORY[0x24BDAC7A8](v18);
  if (*v22 != *a2)
    goto LABEL_15;
  v53 = v10;
  v54 = v9;
  v55 = v15;
  v51 = v8;
  v52 = v3;
  v24 = *((_QWORD *)v22 + 2);
  v25 = *((_QWORD *)a2 + 2);
  v26 = a2;
  if (!v24)
  {
    v29 = (char *)&v49 - v21;
    v30 = v23;
    v31 = v22;
    v27 = v12;
    v28 = v13;
    if (v25)
      goto LABEL_15;
    goto LABEL_9;
  }
  if (!v25)
    goto LABEL_15;
  v27 = v12;
  v28 = v13;
  v29 = (char *)&v49 - v21;
  v30 = v23;
  v31 = v22;
  if (*((_QWORD *)v22 + 1) == *((_QWORD *)v26 + 1) && v24 == v25 || (v32 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_9:
    v50 = v6;
    v33 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod(0);
    v34 = (uint64_t)v29;
    sub_2403A9210((uint64_t)&v31[*(int *)(v33 + 24)], (uint64_t)v29, &qword_256FFC340);
    v49 = v33;
    sub_2403A9210((uint64_t)&v26[*(int *)(v33 + 24)], (uint64_t)v20, &qword_256FFC340);
    v35 = (uint64_t)v55;
    v36 = (uint64_t)&v55[*(int *)(v28 + 48)];
    sub_2403A9210((uint64_t)v29, (uint64_t)v55, &qword_256FFC340);
    sub_2403A9210((uint64_t)v20, v36, &qword_256FFC340);
    v37 = v54;
    v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
    if (v38(v35, 1, v54) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFC340);
      sub_2403A97FC(v34, &qword_256FFC340);
      if (v38(v36, 1, v37) == 1)
      {
        sub_2403A97FC(v35, &qword_256FFC340);
LABEL_18:
        v41 = v49;
        v42 = &v31[*(int *)(v49 + 28)];
        v44 = v51;
        v43 = v52;
        v45 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v52 + 16);
        v46 = v56;
        v45(v51, v42, v56);
        v47 = v50;
        v45(v50, &v26[*(int *)(v41 + 28)], v46);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v32 = sub_2408E5CD8();
        v48 = *(void (**)(char *, uint64_t))(v43 + 8);
        v48(v47, v46);
        v48(v44, v46);
        return v32 & 1;
      }
    }
    else
    {
      v53 = v34;
      sub_2403A9210(v35, (uint64_t)v30, &qword_256FFC340);
      if (v38(v36, 1, v37) != 1)
      {
        sub_2403A91CC(v36, (uint64_t)v27, type metadata accessor for ToolKitProtoDisplayRepresentation);
        v40 = _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v30, v27);
        sub_240388AE4((uint64_t)v27, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC((uint64_t)v20, &qword_256FFC340);
        sub_2403A97FC(v53, &qword_256FFC340);
        sub_240388AE4((uint64_t)v30, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC(v35, &qword_256FFC340);
        if ((v40 & 1) != 0)
          goto LABEL_18;
        goto LABEL_15;
      }
      sub_2403A97FC((uint64_t)v20, &qword_256FFC340);
      sub_2403A97FC(v53, &qword_256FFC340);
      sub_240388AE4((uint64_t)v30, type metadata accessor for ToolKitProtoDisplayRepresentation);
    }
    sub_2403A97FC(v35, &qword_2570154D0);
LABEL_15:
    v32 = 0;
  }
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV09PrimitiveH0V11MeasurementV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (*(double *)(a1 + 16) == *(double *)(a2 + 16) && *(unsigned __int8 *)(a1 + 24) == *(unsigned __int8 *)(a2 + 24))
    {
      v13 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Measurement(0);
      v14 = a1 + *(int *)(v13 + 28);
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, a2 + *(int *)(v13 + 28), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_2408E5CD8();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV08DeferredH0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t *v42;
  uint64_t v43;
  char v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  int v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  char v65;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v99 = a2;
  v3 = sub_2408E57A4();
  v81 = *(_QWORD *)(v3 - 8);
  v82 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v80 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v79 = (char *)&v77 - v6;
  v7 = type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage(0);
  v85 = *(_QWORD *)(v7 - 8);
  v86 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v78 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015578);
  MEMORY[0x24BDAC7A8](v84);
  v96 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8C0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v88 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v94 = (char *)&v77 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v95 = (char *)&v77 - v15;
  v93 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v90 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v83 = (uint64_t *)((char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v89);
  v98 = (uint64_t)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v87 = (uint64_t *)((char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = MEMORY[0x24BDAC7A8](v19);
  v91 = (uint64_t)&v77 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v92 = (uint64_t)&v77 - v23;
  v24 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C528);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v77 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v77 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v77 - v38;
  v97 = a1;
  sub_2403A9210(a1, (uint64_t)&v77 - v38, &qword_256FFA7F8);
  sub_2403A9210(v99, (uint64_t)v37, &qword_256FFA7F8);
  v40 = (uint64_t)&v30[*(int *)(v28 + 48)];
  sub_2403A9210((uint64_t)v39, (uint64_t)v30, &qword_256FFA7F8);
  sub_2403A9210((uint64_t)v37, v40, &qword_256FFA7F8);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v41((uint64_t)v30, 1, v24) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v39, &qword_256FFA7F8);
    if (v41(v40, 1, v24) == 1)
    {
      sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
      goto LABEL_8;
    }
LABEL_6:
    v42 = &qword_25700C528;
    v43 = (uint64_t)v30;
LABEL_21:
    sub_2403A97FC(v43, v42);
    goto LABEL_22;
  }
  sub_2403A9210((uint64_t)v30, (uint64_t)v34, &qword_256FFA7F8);
  if (v41(v40, 1, v24) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v39, &qword_256FFA7F8);
    sub_240388AE4((uint64_t)v34, type metadata accessor for ToolKitProtoTypeIdentifier);
    goto LABEL_6;
  }
  sub_2403A91CC(v40, (uint64_t)v27, type metadata accessor for ToolKitProtoTypeIdentifier);
  v44 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v34, (uint64_t)v27);
  sub_240388AE4((uint64_t)v27, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v37, &qword_256FFA7F8);
  sub_2403A97FC((uint64_t)v39, &qword_256FFA7F8);
  sub_240388AE4((uint64_t)v34, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
  if ((v44 & 1) == 0)
    goto LABEL_22;
LABEL_8:
  v45 = (int *)type metadata accessor for ToolKitProtoTypedValue.DeferredValue(0);
  v46 = v92;
  sub_2403A9210(v97 + v45[5], v92, &qword_256FFA428);
  v47 = v91;
  sub_2403A9210(v99 + v45[5], v91, &qword_256FFA428);
  v48 = v98;
  v49 = v98 + *(int *)(v89 + 48);
  sub_2403A9210(v46, v98, &qword_256FFA428);
  sub_2403A9210(v47, v49, &qword_256FFA428);
  v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
  v51 = v93;
  if (v50(v48, 1, v93) != 1)
  {
    v57 = v87;
    sub_2403A9210(v48, (uint64_t)v87, &qword_256FFA428);
    v58 = v50(v49, 1, v51);
    v54 = (uint64_t)v95;
    v53 = (uint64_t)v96;
    v56 = (uint64_t)v94;
    if (v58 != 1)
    {
      v59 = v83;
      sub_2403A91CC(v49, (uint64_t)v83, type metadata accessor for ToolKitProtoTypeInstance);
      LODWORD(v93) = _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(v57, v59);
      sub_240388AE4((uint64_t)v59, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A97FC(v47, &qword_256FFA428);
      sub_2403A97FC(v46, &qword_256FFA428);
      sub_240388AE4((uint64_t)v57, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A97FC(v48, &qword_256FFA428);
      v55 = (uint64_t)v88;
      if ((v93 & 1) == 0)
        goto LABEL_22;
      goto LABEL_15;
    }
    sub_2403A97FC(v47, &qword_256FFA428);
    sub_2403A97FC(v46, &qword_256FFA428);
    sub_240388AE4((uint64_t)v57, type metadata accessor for ToolKitProtoTypeInstance);
    goto LABEL_13;
  }
  sub_2403A97FC(v47, &qword_256FFA428);
  sub_2403A97FC(v46, &qword_256FFA428);
  v52 = v50(v49, 1, v51);
  v54 = (uint64_t)v95;
  v53 = (uint64_t)v96;
  v55 = (uint64_t)v88;
  v56 = (uint64_t)v94;
  if (v52 != 1)
  {
LABEL_13:
    v42 = &qword_257000CB0;
    v43 = v98;
    goto LABEL_21;
  }
  sub_2403A97FC(v98, &qword_256FFA428);
LABEL_15:
  v60 = v97;
  sub_2403A9210(v97 + v45[6], v54, &qword_25700C8C0);
  v61 = v99;
  sub_2403A9210(v99 + v45[6], v56, &qword_25700C8C0);
  v62 = v53 + *(int *)(v84 + 48);
  sub_2403A9210(v54, v53, &qword_25700C8C0);
  sub_2403A9210(v56, v62, &qword_25700C8C0);
  v63 = v86;
  v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
  if (v64(v53, 1, v86) == 1)
  {
    sub_2403A97FC(v56, &qword_25700C8C0);
    sub_2403A97FC(v54, &qword_25700C8C0);
    if (v64(v62, 1, v63) == 1)
    {
      sub_2403A97FC(v53, &qword_25700C8C0);
LABEL_25:
      v69 = v60 + v45[7];
      v71 = v81;
      v70 = v82;
      v72 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
      v73 = v79;
      v72(v79, v69, v82);
      v74 = v61 + v45[7];
      v75 = v80;
      v72(v80, v74, v70);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v65 = sub_2408E5CD8();
      v76 = *(void (**)(char *, uint64_t))(v71 + 8);
      v76(v75, v70);
      v76(v73, v70);
      return v65 & 1;
    }
    goto LABEL_20;
  }
  sub_2403A9210(v53, v55, &qword_25700C8C0);
  if (v64(v62, 1, v63) == 1)
  {
    sub_2403A97FC(v56, &qword_25700C8C0);
    sub_2403A97FC(v54, &qword_25700C8C0);
    sub_240388AE4(v55, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage);
LABEL_20:
    v42 = &qword_257015578;
    v43 = v53;
    goto LABEL_21;
  }
  v67 = v78;
  sub_2403A91CC(v62, v78, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage);
  v68 = _s23LighthouseDataProcessor22ToolKitProtoTypedValueV08DeferredH0V7StorageV2eeoiySbAG_AGtFZ_0(v55, v67);
  sub_240388AE4(v67, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage);
  sub_2403A97FC(v56, &qword_25700C8C0);
  sub_2403A97FC(v54, &qword_25700C8C0);
  sub_240388AE4(v55, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage);
  sub_2403A97FC(v53, &qword_25700C8C0);
  if ((v68 & 1) != 0)
    goto LABEL_25;
LABEL_22:
  v65 = 0;
  return v65 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV08DeferredH0V7StorageV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoTypedValue.DeferredValue.ToolKitProtoStorageKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015418);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8C8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_25700C8C8);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C8C8);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C8C8);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C8C8);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C8C8);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.ToolKitProtoStorageKind);
      v25 = static ToolKitProtoTypedValue.DeferredValue.ToolKitProtoStorageKind.== infix(_:_:)(v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.ToolKitProtoStorageKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C8C8);
      sub_2403A97FC((uint64_t)v21, &qword_25700C8C8);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.ToolKitProtoStorageKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C8C8);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C8C8);
    sub_2403A97FC((uint64_t)v21, &qword_25700C8C8);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.ToolKitProtoStorageKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015418);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C8C8);
  sub_2403A97FC((uint64_t)v21, &qword_25700C8C8);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C8C8);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV06EntityH0V2eeoiySbAE_AEtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  char v37;
  _QWORD *v38;
  char *v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;

  v79 = a1;
  v80 = a2;
  v2 = sub_2408E57A4();
  v68 = *(_QWORD *)(v2 - 8);
  v69 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v67 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v66 = (char *)&v65 - v5;
  v75 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v73 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v70 = (uint64_t *)((char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154D0);
  MEMORY[0x24BDAC7A8](v72);
  v77 = (uint64_t)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v71 = (uint64_t *)((char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v78 = (uint64_t)&v65 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v74 = (uint64_t)&v65 - v13;
  v14 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C528);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v65 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v65 - v28;
  v30 = type metadata accessor for ToolKitProtoTypedValue.EntityValue(0);
  sub_2403A9210((uint64_t)v79 + *(int *)(v30 + 24), (uint64_t)v29, &qword_256FFA7F8);
  v76 = (int *)v30;
  sub_2403A9210((uint64_t)&v80[*(int *)(v30 + 24)], (uint64_t)v27, &qword_256FFA7F8);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_2403A9210((uint64_t)v29, (uint64_t)v20, &qword_256FFA7F8);
  sub_2403A9210((uint64_t)v27, v31, &qword_256FFA7F8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
    if (v32(v31, 1, v14) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA7F8);
      goto LABEL_11;
    }
LABEL_6:
    v33 = &qword_25700C528;
    v34 = (uint64_t)v20;
    goto LABEL_7;
  }
  sub_2403A9210((uint64_t)v20, (uint64_t)v24, &qword_256FFA7F8);
  if (v32(v31, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
    sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypeIdentifier);
    goto LABEL_6;
  }
  sub_2403A91CC(v31, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeIdentifier);
  v37 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v24, (uint64_t)v17);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
  sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
  sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA7F8);
  if ((v37 & 1) == 0)
    goto LABEL_8;
LABEL_11:
  v38 = v79;
  v39 = v80;
  if (*v79 == *(_QWORD *)v80 && v79[1] == *((_QWORD *)v80 + 1) || (v35 = 0, (sub_2408E617C() & 1) != 0))
  {
    if ((sub_240890664(v38[2], *((_QWORD *)v39 + 2)) & 1) == 0)
      goto LABEL_8;
    v40 = v76;
    v41 = v74;
    sub_2403A9210((uint64_t)v38 + v76[7], v74, &qword_256FFC340);
    v42 = v78;
    sub_2403A9210((uint64_t)&v39[v40[7]], v78, &qword_256FFC340);
    v43 = v77;
    v44 = v77 + *(int *)(v72 + 48);
    sub_2403A9210(v41, v77, &qword_256FFC340);
    sub_2403A9210(v42, v44, &qword_256FFC340);
    v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
    v46 = v75;
    if (v45(v43, 1, v75) == 1)
    {
      sub_2403A97FC(v42, &qword_256FFC340);
      sub_2403A97FC(v41, &qword_256FFC340);
      if (v45(v44, 1, v46) == 1)
      {
        sub_2403A97FC(v43, &qword_256FFC340);
LABEL_22:
        v50 = v40[8];
        v51 = *(_QWORD *)((char *)v38 + v50);
        v52 = *(_QWORD *)((char *)v38 + v50 + 8);
        v53 = (uint64_t *)&v39[v50];
        v54 = *v53;
        v55 = v53[1];
        if (v52 >> 60 == 15)
        {
          if (v55 >> 60 == 15)
            goto LABEL_28;
        }
        else if (v55 >> 60 != 15)
        {
          sub_2403C2410(v51, v52);
          sub_2403C2410(v54, v55);
          sub_2408C422C(v51, v52);
          v57 = v56;
          sub_2403C2424(v54, v55);
          sub_2403C2424(v51, v52);
          if ((v57 & 1) != 0)
          {
LABEL_28:
            v58 = (char *)v38 + v40[9];
            v60 = v68;
            v59 = v69;
            v61 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
            v62 = v66;
            v61(v66, v58, v69);
            v63 = v67;
            v61(v67, &v39[v40[9]], v59);
            sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v35 = sub_2408E5CD8();
            v64 = *(void (**)(char *, uint64_t))(v60 + 8);
            v64(v63, v59);
            v64(v62, v59);
            return v35 & 1;
          }
          goto LABEL_8;
        }
        sub_2403C2410(v51, v52);
        sub_2403C2410(v54, v55);
        sub_2403C2424(v51, v52);
        sub_2403C2424(v54, v55);
LABEL_8:
        v35 = 0;
        return v35 & 1;
      }
    }
    else
    {
      v47 = v71;
      sub_2403A9210(v43, (uint64_t)v71, &qword_256FFC340);
      if (v45(v44, 1, v46) != 1)
      {
        v48 = v70;
        sub_2403A91CC(v44, (uint64_t)v70, type metadata accessor for ToolKitProtoDisplayRepresentation);
        v49 = _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v47, v48);
        sub_240388AE4((uint64_t)v48, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC(v78, &qword_256FFC340);
        sub_2403A97FC(v41, &qword_256FFC340);
        sub_240388AE4((uint64_t)v47, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC(v43, &qword_256FFC340);
        if ((v49 & 1) == 0)
          goto LABEL_8;
        goto LABEL_22;
      }
      sub_2403A97FC(v78, &qword_256FFC340);
      sub_2403A97FC(v41, &qword_256FFC340);
      sub_240388AE4((uint64_t)v47, type metadata accessor for ToolKitProtoDisplayRepresentation);
    }
    v33 = &qword_2570154D0;
    v34 = v43;
LABEL_7:
    sub_2403A97FC(v34, v33);
    goto LABEL_8;
  }
  return v35 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV05QueryH0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t Value;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  unsigned __int8 *v45;
  char v46;
  unsigned __int8 *v48;
  char V2eeoiySbAC_ACtFZ_0;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  unsigned __int8 *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a2;
  v3 = sub_2408E57A4();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v58 - v6;
  v67 = type metadata accessor for ToolKitProtoQuery(0);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v58 = (unsigned __int8 *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015580);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC3B0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (unsigned __int8 *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v58 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (uint64_t)&v58 - v14;
  v15 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C528);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v69 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_256FFA7F8);
  sub_2403A9210(v71, (uint64_t)v28, &qword_256FFA7F8);
  v31 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA7F8);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA7F8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) != 1)
  {
    sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA7F8);
    if (v32(v31, 1, v15) != 1)
    {
      sub_2403A91CC(v31, (uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
      v35 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v25, (uint64_t)v18);
      sub_240388AE4((uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
      sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
      sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeIdentifier);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA7F8);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
    sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeIdentifier);
LABEL_6:
    v33 = &qword_25700C528;
    v34 = (uint64_t)v21;
LABEL_14:
    sub_2403A97FC(v34, v33);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
  if (v32(v31, 1, v15) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v21, &qword_256FFA7F8);
LABEL_8:
  Value = type metadata accessor for ToolKitProtoTypedValue.QueryValue(0);
  v37 = v69;
  v38 = v66;
  sub_2403A9210(v69 + *(int *)(Value + 20), v66, &qword_256FFC3B0);
  v40 = v70;
  v39 = v71;
  sub_2403A9210(v71 + *(int *)(Value + 20), v70, &qword_256FFC3B0);
  v41 = v68;
  v42 = v68 + *(int *)(v64 + 48);
  sub_2403A9210(v38, v68, &qword_256FFC3B0);
  sub_2403A9210(v40, v42, &qword_256FFC3B0);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v44 = v67;
  if (v43(v41, 1, v67) == 1)
  {
    sub_2403A97FC(v40, &qword_256FFC3B0);
    sub_2403A97FC(v38, &qword_256FFC3B0);
    if (v43(v42, 1, v44) == 1)
    {
      sub_2403A97FC(v41, &qword_256FFC3B0);
LABEL_18:
      v50 = v37 + *(int *)(Value + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(Value + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v41, (uint64_t)v63, &qword_256FFC3B0);
  if (v43(v42, 1, v44) == 1)
  {
    sub_2403A97FC(v70, &qword_256FFC3B0);
    sub_2403A97FC(v38, &qword_256FFC3B0);
    sub_240388AE4((uint64_t)v45, type metadata accessor for ToolKitProtoQuery);
LABEL_13:
    v33 = &qword_257015580;
    v34 = v41;
    goto LABEL_14;
  }
  v48 = v58;
  sub_2403A91CC(v42, (uint64_t)v58, type metadata accessor for ToolKitProtoQuery);
  V2eeoiySbAC_ACtFZ_0 = _s23LighthouseDataProcessor17ToolKitProtoQueryV2eeoiySbAC_ACtFZ_0(v45, v48);
  sub_240388AE4((uint64_t)v48, type metadata accessor for ToolKitProtoQuery);
  sub_2403A97FC(v70, &qword_256FFC3B0);
  sub_2403A97FC(v38, &qword_256FFC3B0);
  sub_240388AE4((uint64_t)v45, type metadata accessor for ToolKitProtoQuery);
  sub_2403A97FC(v41, &qword_256FFC3B0);
  if ((V2eeoiySbAC_ACtFZ_0 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV016EntityIdentifierH0V2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  _QWORD *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v48;
  char v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;

  v73 = a1;
  v74 = a2;
  v2 = sub_2408E57A4();
  v63 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v62 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v61 = (char *)&v59 - v5;
  v70 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v67 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v60 = (uint64_t *)((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154D0);
  MEMORY[0x24BDAC7A8](v66);
  v71 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v65 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v68 = (uint64_t)&v59 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v69 = (uint64_t)&v59 - v13;
  v14 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C528);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v59 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v59 - v28;
  v30 = type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue(0);
  sub_2403A9210((uint64_t)v73 + *(int *)(v30 + 20), (uint64_t)v29, &qword_256FFA7F8);
  v72 = v30;
  sub_2403A9210((uint64_t)v74 + *(int *)(v30 + 20), (uint64_t)v27, &qword_256FFA7F8);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_2403A9210((uint64_t)v29, (uint64_t)v20, &qword_256FFA7F8);
  sub_2403A9210((uint64_t)v27, v31, &qword_256FFA7F8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
    if (v32(v31, 1, v14) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA7F8);
      goto LABEL_8;
    }
LABEL_6:
    v33 = &qword_25700C528;
    v34 = (uint64_t)v20;
LABEL_17:
    sub_2403A97FC(v34, v33);
    goto LABEL_18;
  }
  sub_2403A9210((uint64_t)v20, (uint64_t)v24, &qword_256FFA7F8);
  if (v32(v31, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
    sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypeIdentifier);
    goto LABEL_6;
  }
  sub_2403A91CC(v31, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeIdentifier);
  v35 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v24, (uint64_t)v17);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
  sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
  sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA7F8);
  if ((v35 & 1) == 0)
  {
LABEL_18:
    v38 = 0;
    return v38 & 1;
  }
LABEL_8:
  v37 = v73;
  v36 = v74;
  if (*v73 == *v74 && v73[1] == v74[1] || (v38 = 0, (sub_2408E617C() & 1) != 0))
  {
    v39 = v72;
    v40 = v69;
    sub_2403A9210((uint64_t)v37 + *(int *)(v72 + 24), v69, &qword_256FFC340);
    v41 = v68;
    sub_2403A9210((uint64_t)v36 + *(int *)(v39 + 24), v68, &qword_256FFC340);
    v42 = v71;
    v43 = v71 + *(int *)(v66 + 48);
    sub_2403A9210(v40, v71, &qword_256FFC340);
    sub_2403A9210(v41, v43, &qword_256FFC340);
    v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    v45 = v70;
    if (v44(v42, 1, v70) == 1)
    {
      sub_2403A97FC(v41, &qword_256FFC340);
      sub_2403A97FC(v40, &qword_256FFC340);
      if (v44(v43, 1, v45) == 1)
      {
        sub_2403A97FC(v42, &qword_256FFC340);
LABEL_21:
        v50 = v72;
        v51 = (char *)v37 + *(int *)(v72 + 28);
        v53 = v63;
        v52 = v64;
        v54 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        v55 = v61;
        v54(v61, v51, v64);
        v56 = (char *)v36 + *(int *)(v50 + 28);
        v57 = v62;
        v54(v62, v56, v52);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v38 = sub_2408E5CD8();
        v58 = *(void (**)(char *, uint64_t))(v53 + 8);
        v58(v57, v52);
        v58(v55, v52);
        return v38 & 1;
      }
    }
    else
    {
      v46 = v65;
      sub_2403A9210(v42, (uint64_t)v65, &qword_256FFC340);
      if (v44(v43, 1, v45) != 1)
      {
        v48 = v60;
        sub_2403A91CC(v43, (uint64_t)v60, type metadata accessor for ToolKitProtoDisplayRepresentation);
        v49 = _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v46, v48);
        sub_240388AE4((uint64_t)v48, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC(v41, &qword_256FFC340);
        sub_2403A97FC(v40, &qword_256FFC340);
        sub_240388AE4((uint64_t)v46, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC(v42, &qword_256FFC340);
        if ((v49 & 1) != 0)
          goto LABEL_21;
        goto LABEL_18;
      }
      sub_2403A97FC(v41, &qword_256FFC340);
      sub_2403A97FC(v40, &qword_256FFC340);
      sub_240388AE4((uint64_t)v46, type metadata accessor for ToolKitProtoDisplayRepresentation);
    }
    v33 = &qword_2570154D0;
    v34 = v42;
    goto LABEL_17;
  }
  return v38 & 1;
}

uint64_t _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV8SubtitleV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015208);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C980);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_25700C980);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C980);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C980);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C980);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C980);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
      v25 = sub_24073CA78((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C980);
      sub_2403A97FC((uint64_t)v21, &qword_25700C980);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C980);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C980);
    sub_2403A97FC((uint64_t)v21, &qword_25700C980);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoDisplayRepresentation.ToolKitProtoSubtitleKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015208);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C980);
  sub_2403A97FC((uint64_t)v21, &qword_25700C980);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C980);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  int v54;
  uint64_t v55;
  int v56;
  uint64_t *v57;
  uint64_t v58;
  char v59;
  int *v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  char v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t, uint64_t, uint64_t);
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  char v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(uint64_t, uint64_t, uint64_t);
  int *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t);
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  void (*v99)(char *, uint64_t);
  uint64_t *v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  _QWORD *v133;
  _QWORD *v134;

  v108 = sub_2408E57A4();
  v107 = *(_QWORD *)(v108 - 8);
  v4 = MEMORY[0x24BDAC7A8](v108);
  v106 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v105 = (char *)&v104 - v6;
  v122 = type metadata accessor for ToolKitProtoPluginModelData(0);
  v111 = *(_QWORD *)(v122 - 8);
  MEMORY[0x24BDAC7A8](v122);
  v104 = (uint64_t)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015218);
  MEMORY[0x24BDAC7A8](v110);
  v113 = (uint64_t)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C978);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v109 = (uint64_t *)((char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v10);
  v120 = (char *)&v104 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v121 = (char *)&v104 - v14;
  v15 = type metadata accessor for ToolKitProtoDisplayRepresentation.Image(0);
  v117 = *(_QWORD *)(v15 - 8);
  v118 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v112 = (uint64_t)&v104 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015220);
  MEMORY[0x24BDAC7A8](v116);
  v119 = (char *)&v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C970);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v114 = (uint64_t)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v124 = (uint64_t)&v104 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v125 = (uint64_t)&v104 - v23;
  v130 = type metadata accessor for ToolKitProtoDisplayRepresentation.AltText(0);
  v128 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v115 = (uint64_t)&v104 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015228);
  MEMORY[0x24BDAC7A8](v127);
  v131 = (uint64_t)&v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C968);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v123 = (uint64_t)&v104 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v132 = (char *)&v104 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v129 = (uint64_t)&v104 - v31;
  v32 = type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle(0);
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v104 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015230);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v104 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C960);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v104 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v40);
  v45 = (char *)&v104 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v47 = (char *)&v104 - v46;
  v48 = *a1;
  v49 = a1[1];
  v133 = a2;
  v134 = a1;
  if (v48 == *a2 && v49 == a2[1] || (v50 = 0, (sub_2408E617C() & 1) != 0))
  {
    v51 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
    sub_2403A9210((uint64_t)v134 + *(int *)(v51 + 24), (uint64_t)v47, &qword_25700C960);
    v126 = (int *)v51;
    sub_2403A9210((uint64_t)v133 + *(int *)(v51 + 24), (uint64_t)v45, &qword_25700C960);
    v52 = (uint64_t)&v38[*(int *)(v36 + 48)];
    sub_2403A9210((uint64_t)v47, (uint64_t)v38, &qword_25700C960);
    sub_2403A9210((uint64_t)v45, v52, &qword_25700C960);
    v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    if (v53((uint64_t)v38, 1, v32) == 1)
    {
      sub_2403A97FC((uint64_t)v45, &qword_25700C960);
      sub_2403A97FC((uint64_t)v47, &qword_25700C960);
      v54 = v53(v52, 1, v32);
      v55 = (uint64_t)v132;
      if (v54 == 1)
      {
        sub_2403A97FC((uint64_t)v38, &qword_25700C960);
        goto LABEL_12;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v38, (uint64_t)v42, &qword_25700C960);
      v56 = v53(v52, 1, v32);
      v55 = (uint64_t)v132;
      if (v56 != 1)
      {
        sub_2403A91CC(v52, (uint64_t)v35, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
        v59 = _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV8SubtitleV2eeoiySbAE_AEtFZ_0((uint64_t)v42, (uint64_t)v35);
        sub_240388AE4((uint64_t)v35, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
        sub_2403A97FC((uint64_t)v45, &qword_25700C960);
        sub_2403A97FC((uint64_t)v47, &qword_25700C960);
        sub_240388AE4((uint64_t)v42, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
        sub_2403A97FC((uint64_t)v38, &qword_25700C960);
        if ((v59 & 1) == 0)
        {
LABEL_19:
          v50 = 0;
          return v50 & 1;
        }
LABEL_12:
        v60 = v126;
        v61 = v134;
        v62 = v129;
        sub_2403A9210((uint64_t)v134 + v126[7], v129, &qword_25700C968);
        v63 = v133;
        sub_2403A9210((uint64_t)v133 + v60[7], v55, &qword_25700C968);
        v64 = v131;
        v65 = v131 + *(int *)(v127 + 48);
        sub_2403A9210(v62, v131, &qword_25700C968);
        sub_2403A9210(v55, v65, &qword_25700C968);
        v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
        v67 = v130;
        if (v66(v64, 1, v130) == 1)
        {
          sub_2403A97FC(v55, &qword_25700C968);
          sub_2403A97FC(v62, &qword_25700C968);
          if (v66(v65, 1, v67) == 1)
          {
            sub_2403A97FC(v64, &qword_25700C968);
LABEL_22:
            v73 = v125;
            v72 = v126;
            sub_2403A9210((uint64_t)v61 + v126[8], v125, &qword_25700C970);
            v74 = v124;
            sub_2403A9210((uint64_t)v63 + v72[8], v124, &qword_25700C970);
            v38 = v119;
            v75 = (uint64_t)&v119[*(int *)(v116 + 48)];
            sub_2403A9210(v73, (uint64_t)v119, &qword_25700C970);
            sub_2403A9210(v74, v75, &qword_25700C970);
            v76 = v118;
            v77 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48);
            if (v77((uint64_t)v38, 1, v118) == 1)
            {
              sub_2403A97FC(v74, &qword_25700C970);
              sub_2403A97FC(v73, &qword_25700C970);
              v78 = v77(v75, 1, v76);
              v80 = (uint64_t)v121;
              v79 = v122;
              v81 = (uint64_t)v120;
              if (v78 == 1)
              {
                sub_2403A97FC((uint64_t)v38, &qword_25700C970);
LABEL_29:
                if ((sub_2408BAD50((_QWORD *)v61[2], (_QWORD *)v63[2]) & 1) == 0)
                  goto LABEL_19;
                v86 = v126;
                sub_2403A9210((uint64_t)v61 + v126[9], v80, &qword_25700C978);
                sub_2403A9210((uint64_t)v63 + v86[9], v81, &qword_25700C978);
                v87 = v113;
                v88 = v113 + *(int *)(v110 + 48);
                sub_2403A9210(v80, v113, &qword_25700C978);
                v89 = v87;
                sub_2403A9210(v81, v88, &qword_25700C978);
                v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
                if (v90(v89, 1, v79) == 1)
                {
                  sub_2403A97FC(v81, &qword_25700C978);
                  v89 = v113;
                  sub_2403A97FC(v80, &qword_25700C978);
                  if (v90(v88, 1, v79) == 1)
                  {
                    sub_2403A97FC(v89, &qword_25700C978);
LABEL_33:
                    v91 = v126;
                    v92 = (uint64_t)v61 + v126[10];
                    v93 = v107;
                    v94 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 16);
                    v95 = v105;
                    v96 = v108;
                    v94(v105, v92, v108);
                    v97 = (uint64_t)v63 + v91[10];
                    v98 = v106;
                    v94(v106, v97, v96);
                    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                    v50 = sub_2408E5CD8();
                    v99 = *(void (**)(char *, uint64_t))(v93 + 8);
                    v99(v98, v96);
                    v99(v95, v96);
                    return v50 & 1;
                  }
                }
                else
                {
                  v100 = v109;
                  sub_2403A9210(v89, (uint64_t)v109, &qword_25700C978);
                  if (v90(v88, 1, v79) != 1)
                  {
                    v101 = v104;
                    sub_2403A91CC(v88, v104, type metadata accessor for ToolKitProtoPluginModelData);
                    sub_2408C422C(*v100, v100[1]);
                    if ((v102 & 1) != 0
                      && (v100[2] == *(_QWORD *)(v101 + 16) && v100[3] == *(_QWORD *)(v101 + 24)
                       || (sub_2408E617C() & 1) != 0))
                    {
                      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                      v103 = sub_2408E5CD8();
                      sub_240388AE4(v101, type metadata accessor for ToolKitProtoPluginModelData);
                      sub_2403A97FC(v81, &qword_25700C978);
                      sub_2403A97FC(v80, &qword_25700C978);
                      sub_240388AE4((uint64_t)v100, type metadata accessor for ToolKitProtoPluginModelData);
                      sub_2403A97FC(v113, &qword_25700C978);
                      if ((v103 & 1) != 0)
                        goto LABEL_33;
                      goto LABEL_19;
                    }
                    sub_240388AE4(v101, type metadata accessor for ToolKitProtoPluginModelData);
                    sub_2403A97FC(v81, &qword_25700C978);
                    sub_2403A97FC(v80, &qword_25700C978);
                    sub_240388AE4((uint64_t)v100, type metadata accessor for ToolKitProtoPluginModelData);
                    v58 = v113;
                    v57 = &qword_25700C978;
                    goto LABEL_18;
                  }
                  sub_2403A97FC(v81, &qword_25700C978);
                  sub_2403A97FC(v80, &qword_25700C978);
                  sub_240388AE4((uint64_t)v100, type metadata accessor for ToolKitProtoPluginModelData);
                }
                v57 = &qword_257015218;
                v58 = v89;
LABEL_18:
                sub_2403A97FC(v58, v57);
                goto LABEL_19;
              }
            }
            else
            {
              v82 = v114;
              sub_2403A9210((uint64_t)v38, v114, &qword_25700C970);
              v83 = v77(v75, 1, v76);
              v80 = (uint64_t)v121;
              v79 = v122;
              v81 = (uint64_t)v120;
              if (v83 != 1)
              {
                v84 = v112;
                sub_2403A91CC(v75, v112, type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
                v85 = _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV5ImageV2eeoiySbAE_AEtFZ_0(v82, v84);
                sub_240388AE4(v84, type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
                sub_2403A97FC(v124, &qword_25700C970);
                sub_2403A97FC(v125, &qword_25700C970);
                sub_240388AE4(v82, type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
                sub_2403A97FC((uint64_t)v38, &qword_25700C970);
                if ((v85 & 1) == 0)
                  goto LABEL_19;
                goto LABEL_29;
              }
              sub_2403A97FC(v124, &qword_25700C970);
              sub_2403A97FC(v125, &qword_25700C970);
              sub_240388AE4(v82, type metadata accessor for ToolKitProtoDisplayRepresentation.Image);
            }
            v57 = &qword_257015220;
LABEL_10:
            v58 = (uint64_t)v38;
            goto LABEL_18;
          }
        }
        else
        {
          v68 = v123;
          sub_2403A9210(v64, v123, &qword_25700C968);
          if (v66(v65, 1, v67) != 1)
          {
            v70 = v115;
            sub_2403A91CC(v65, v115, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
            v71 = _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV7AltTextV2eeoiySbAE_AEtFZ_0(v68, v70);
            sub_240388AE4(v70, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
            sub_2403A97FC(v55, &qword_25700C968);
            sub_2403A97FC(v62, &qword_25700C968);
            sub_240388AE4(v68, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
            sub_2403A97FC(v64, &qword_25700C968);
            if ((v71 & 1) == 0)
              goto LABEL_19;
            goto LABEL_22;
          }
          sub_2403A97FC(v55, &qword_25700C968);
          sub_2403A97FC(v62, &qword_25700C968);
          sub_240388AE4(v68, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText);
        }
        v57 = &qword_257015228;
        v58 = v64;
        goto LABEL_18;
      }
      sub_2403A97FC((uint64_t)v45, &qword_25700C960);
      sub_2403A97FC((uint64_t)v47, &qword_25700C960);
      sub_240388AE4((uint64_t)v42, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle);
    }
    v57 = &qword_257015230;
    goto LABEL_10;
  }
  return v50 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV011EnumerationH0V2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  _QWORD *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v48;
  char v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;

  v73 = a1;
  v74 = a2;
  v2 = sub_2408E57A4();
  v63 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v62 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v61 = (char *)&v59 - v5;
  v70 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v67 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v60 = (uint64_t *)((char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154D0);
  MEMORY[0x24BDAC7A8](v66);
  v71 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v65 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v68 = (uint64_t)&v59 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v69 = (uint64_t)&v59 - v13;
  v14 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C528);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v59 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v59 - v28;
  v30 = type metadata accessor for ToolKitProtoTypedValue.EnumerationValue(0);
  sub_2403A9210((uint64_t)v73 + *(int *)(v30 + 20), (uint64_t)v29, &qword_256FFA7F8);
  v72 = v30;
  sub_2403A9210((uint64_t)v74 + *(int *)(v30 + 20), (uint64_t)v27, &qword_256FFA7F8);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_2403A9210((uint64_t)v29, (uint64_t)v20, &qword_256FFA7F8);
  sub_2403A9210((uint64_t)v27, v31, &qword_256FFA7F8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
    if (v32(v31, 1, v14) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA7F8);
      goto LABEL_8;
    }
LABEL_6:
    v33 = &qword_25700C528;
    v34 = (uint64_t)v20;
LABEL_17:
    sub_2403A97FC(v34, v33);
    goto LABEL_18;
  }
  sub_2403A9210((uint64_t)v20, (uint64_t)v24, &qword_256FFA7F8);
  if (v32(v31, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
    sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypeIdentifier);
    goto LABEL_6;
  }
  sub_2403A91CC(v31, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeIdentifier);
  v35 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v24, (uint64_t)v17);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v27, &qword_256FFA7F8);
  sub_2403A97FC((uint64_t)v29, &qword_256FFA7F8);
  sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA7F8);
  if ((v35 & 1) == 0)
  {
LABEL_18:
    v38 = 0;
    return v38 & 1;
  }
LABEL_8:
  v37 = v73;
  v36 = v74;
  if (*v73 == *v74 && v73[1] == v74[1] || (v38 = 0, (sub_2408E617C() & 1) != 0))
  {
    v39 = v72;
    v40 = v69;
    sub_2403A9210((uint64_t)v37 + *(int *)(v72 + 24), v69, &qword_256FFC340);
    v41 = v68;
    sub_2403A9210((uint64_t)v36 + *(int *)(v39 + 24), v68, &qword_256FFC340);
    v42 = v71;
    v43 = v71 + *(int *)(v66 + 48);
    sub_2403A9210(v40, v71, &qword_256FFC340);
    sub_2403A9210(v41, v43, &qword_256FFC340);
    v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    v45 = v70;
    if (v44(v42, 1, v70) == 1)
    {
      sub_2403A97FC(v41, &qword_256FFC340);
      sub_2403A97FC(v40, &qword_256FFC340);
      if (v44(v43, 1, v45) == 1)
      {
        sub_2403A97FC(v42, &qword_256FFC340);
LABEL_21:
        v50 = v72;
        v51 = (char *)v37 + *(int *)(v72 + 28);
        v53 = v63;
        v52 = v64;
        v54 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        v55 = v61;
        v54(v61, v51, v64);
        v56 = (char *)v36 + *(int *)(v50 + 28);
        v57 = v62;
        v54(v62, v56, v52);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v38 = sub_2408E5CD8();
        v58 = *(void (**)(char *, uint64_t))(v53 + 8);
        v58(v57, v52);
        v58(v55, v52);
        return v38 & 1;
      }
    }
    else
    {
      v46 = v65;
      sub_2403A9210(v42, (uint64_t)v65, &qword_256FFC340);
      if (v44(v43, 1, v45) != 1)
      {
        v48 = v60;
        sub_2403A91CC(v43, (uint64_t)v60, type metadata accessor for ToolKitProtoDisplayRepresentation);
        v49 = _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v46, v48);
        sub_240388AE4((uint64_t)v48, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC(v41, &qword_256FFC340);
        sub_2403A97FC(v40, &qword_256FFC340);
        sub_240388AE4((uint64_t)v46, type metadata accessor for ToolKitProtoDisplayRepresentation);
        sub_2403A97FC(v42, &qword_256FFC340);
        if ((v49 & 1) != 0)
          goto LABEL_21;
        goto LABEL_18;
      }
      sub_2403A97FC(v41, &qword_256FFC340);
      sub_2403A97FC(v40, &qword_256FFC340);
      sub_240388AE4((uint64_t)v46, type metadata accessor for ToolKitProtoDisplayRepresentation);
    }
    v33 = &qword_2570154D0;
    v34 = v42;
    goto LABEL_17;
  }
  return v38 & 1;
}

uint64_t sub_2408A0AA8(_QWORD *a1, char *a2)
{
  return sub_2408A0ABC(a1, a2, (char *)type metadata accessor for ToolKitProtoTypedValue.CollectionValue, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAAE8);
}

uint64_t sub_2408A0ABC(_QWORD *a1, char *a2, char *a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char v33;
  _QWORD *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  char v42;
  void (*v43)(char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD, _QWORD);
  _QWORD *v51;
  char *v52;

  v50 = a4;
  v52 = a3;
  v6 = sub_2408E57A4();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)&v45 - v9;
  v10 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v49 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C528);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v45 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v45 - v23;
  v25 = ((uint64_t (*)(_QWORD))v52)(0);
  v26 = *(int *)(v25 + 20);
  v51 = a1;
  v27 = (uint64_t)a1 + v26;
  v28 = v25;
  sub_2403A9210(v27, (uint64_t)v24, &qword_256FFA7F8);
  v29 = *(int *)(v28 + 20);
  v52 = a2;
  sub_2403A9210((uint64_t)&a2[v29], (uint64_t)v22, &qword_256FFA7F8);
  v30 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_2403A9210((uint64_t)v24, (uint64_t)v15, &qword_256FFA7F8);
  sub_2403A9210((uint64_t)v22, v30, &qword_256FFA7F8);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v31((uint64_t)v15, 1, v10) == 1)
  {
    sub_2403A97FC((uint64_t)v22, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v24, &qword_256FFA7F8);
    if (v31(v30, 1, v10) == 1)
    {
      sub_2403A97FC((uint64_t)v15, &qword_256FFA7F8);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2403A9210((uint64_t)v15, (uint64_t)v19, &qword_256FFA7F8);
  if (v31(v30, 1, v10) == 1)
  {
    sub_2403A97FC((uint64_t)v22, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v24, &qword_256FFA7F8);
    sub_240388AE4((uint64_t)v19, type metadata accessor for ToolKitProtoTypeIdentifier);
LABEL_6:
    sub_2403A97FC((uint64_t)v15, &qword_25700C528);
LABEL_10:
    v42 = 0;
    return v42 & 1;
  }
  v32 = v49;
  sub_2403A91CC(v30, v49, type metadata accessor for ToolKitProtoTypeIdentifier);
  v33 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v19, v32);
  sub_240388AE4(v32, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA7F8);
  sub_2403A97FC((uint64_t)v24, &qword_256FFA7F8);
  sub_240388AE4((uint64_t)v19, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v15, &qword_256FFA7F8);
  if ((v33 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v34 = v51;
  v35 = v52;
  if ((v50(*v51, *(_QWORD *)v52) & 1) == 0)
    goto LABEL_10;
  v36 = (char *)v34 + *(int *)(v28 + 24);
  v38 = v47;
  v37 = v48;
  v39 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v40 = v45;
  v39(v45, v36, v48);
  v41 = v46;
  v39(v46, &v35[*(int *)(v28 + 24)], v37);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v42 = sub_2408E5CD8();
  v43 = *(void (**)(char *, uint64_t))(v38 + 8);
  v43(v41, v37);
  v43(v40, v37);
  return v42 & 1;
}

uint64_t _s23LighthouseDataProcessor17ToolKitProtoQueryV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char v30;
  uint64_t v31;
  char V12AnyPredicateV2eeoiySbAE_AEtFZ_0;
  unsigned __int8 *v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned __int8 v36;
  unsigned __int8 *v37;
  int v38;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unsigned __int8 *, uint64_t);
  char *v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  unsigned __int8 *v53;

  v4 = sub_2408E57A4();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v46 - v7;
  v8 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v51 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015370);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C918);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v46 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v46 - v21;
  v23 = type metadata accessor for ToolKitProtoQuery(0);
  v24 = *(int *)(v23 + 20);
  v52 = a1;
  v25 = (uint64_t)&a1[v24];
  v26 = (int *)v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_25700C918);
  v27 = v26[5];
  v53 = a2;
  sub_2403A9210((uint64_t)&a2[v27], (uint64_t)v20, &qword_25700C918);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_25700C918);
  sub_2403A9210((uint64_t)v20, v28, &qword_25700C918);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_25700C918);
    sub_2403A97FC((uint64_t)v22, &qword_25700C918);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_25700C918);
LABEL_8:
      v33 = v53;
      if (*v52 == *v53)
      {
        v34 = v26[6];
        v35 = &v52[v34];
        v36 = v52[v34 + 8];
        v37 = &v53[v34];
        v38 = v53[v34 + 8];
        if ((v36 & 1) != 0)
        {
          if (!v38)
            goto LABEL_11;
        }
        else
        {
          if (*(_QWORD *)v35 != *(_QWORD *)v37)
            LOBYTE(v38) = 1;
          if ((v38 & 1) != 0)
            goto LABEL_11;
        }
        v41 = v49;
        v40 = v50;
        v42 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v49 + 16);
        v43 = v47;
        v42(v47, &v52[v26[7]], v50);
        v44 = v48;
        v42(v48, &v33[v26[7]], v40);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v30 = sub_2408E5CD8();
        v45 = *(void (**)(char *, uint64_t))(v41 + 8);
        v45(v44, v40);
        v45(v43, v40);
        return v30 & 1;
      }
LABEL_11:
      v30 = 0;
      return v30 & 1;
    }
  }
  else
  {
    sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_25700C918);
    if (v29(v28, 1, v8) != 1)
    {
      v31 = v51;
      sub_2403A91CC(v28, v51, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
      V12AnyPredicateV2eeoiySbAE_AEtFZ_0 = _s23LighthouseDataProcessor17ToolKitProtoQueryV12AnyPredicateV2eeoiySbAE_AEtFZ_0((uint64_t)v17, v31);
      sub_240388AE4(v31, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
      sub_2403A97FC((uint64_t)v20, &qword_25700C918);
      sub_2403A97FC((uint64_t)v22, &qword_25700C918);
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
      sub_2403A97FC((uint64_t)v13, &qword_25700C918);
      if ((V12AnyPredicateV2eeoiySbAE_AEtFZ_0 & 1) == 0)
        goto LABEL_11;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v20, &qword_25700C918);
    sub_2403A97FC((uint64_t)v22, &qword_25700C918);
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoQuery.AnyPredicate);
  }
  sub_2403A97FC((uint64_t)v13, &qword_257015370);
  v30 = 0;
  return v30 & 1;
}

uint64_t _s23LighthouseDataProcessor17ToolKitProtoQueryV12AnyPredicateV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015340);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C920);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_25700C920);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C920);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C920);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C920);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C920);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      v25 = static ToolKitProtoQuery.ToolKitProtoAnyPredicateKind.== infix(_:_:)(v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C920);
      sub_2403A97FC((uint64_t)v21, &qword_25700C920);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C920);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C920);
    sub_2403A97FC((uint64_t)v21, &qword_25700C920);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoQuery.ToolKitProtoAnyPredicateKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015340);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C920);
  sub_2403A97FC((uint64_t)v21, &qword_25700C920);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C920);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoQuery.AnyPredicate(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0G0V4PairV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  char *v44;
  char v45;
  char *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  void (*v56)(_BYTE *, uint64_t);
  _BYTE v57[4];
  int v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;

  v4 = sub_2408E57A4();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v60 = &v57[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v59 = &v57[-v7];
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v64 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v66 = &v57[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v57[-v14];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v63 = &v57[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x24BDAC7A8](v17);
  v65 = &v57[-v20];
  v21 = MEMORY[0x24BDAC7A8](v19);
  v69 = &v57[-v22];
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = &v57[-v24];
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = &v57[-v27];
  MEMORY[0x24BDAC7A8](v26);
  v30 = &v57[-v29];
  v67 = a1;
  sub_2403A9210(a1, (uint64_t)&v57[-v29], &qword_256FFA3A8);
  v68 = a2;
  sub_2403A9210(a2, (uint64_t)v28, &qword_256FFA3A8);
  v31 = (uint64_t)&v15[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v15, &qword_256FFA3A8);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA3A8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v32((uint64_t)v15, 1, v8) != 1)
  {
    sub_2403A9210((uint64_t)v15, (uint64_t)v25, &qword_256FFA3A8);
    if (v32(v31, 1, v8) != 1)
    {
      v34 = v64;
      sub_2403A91CC(v31, (uint64_t)v64, type metadata accessor for ToolKitProtoTypedValue);
      v58 = sub_2408A2ED8(v25, v34, (uint64_t (*)(uint64_t *, uint64_t *))static ToolKitProtoTypedValueKind.== infix(_:_:), (void (*)(uint64_t))sub_2404227AC, (void (*)(uint64_t))sub_240422794, type metadata accessor for ToolKitProtoTypedValue);
      sub_240388AE4((uint64_t)v34, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A97FC((uint64_t)v28, &qword_256FFA3A8);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA3A8);
      sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A97FC((uint64_t)v15, &qword_256FFA3A8);
      if ((v58 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA3A8);
    sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypedValue);
LABEL_6:
    v33 = (uint64_t)v15;
LABEL_14:
    sub_2403A97FC(v33, &qword_257000CA8);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_256FFA3A8);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA3A8);
  if (v32(v31, 1, v8) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v15, &qword_256FFA3A8);
LABEL_8:
  v35 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair(0);
  v36 = v67;
  v37 = v69;
  sub_2403A9210(v67 + *(int *)(v35 + 20), (uint64_t)v69, &qword_256FFA3A8);
  v38 = v68;
  v39 = v65;
  sub_2403A9210(v68 + *(int *)(v35 + 20), (uint64_t)v65, &qword_256FFA3A8);
  v40 = *(int *)(v11 + 48);
  v41 = (uint64_t)v39;
  v42 = v66;
  v43 = (uint64_t)&v66[v40];
  sub_2403A9210((uint64_t)v37, (uint64_t)v66, &qword_256FFA3A8);
  sub_2403A9210(v41, v43, &qword_256FFA3A8);
  if (v32((uint64_t)v42, 1, v8) == 1)
  {
    sub_2403A97FC(v41, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v37, &qword_256FFA3A8);
    if (v32(v43, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v42, &qword_256FFA3A8);
LABEL_18:
      v49 = v36 + *(int *)(v35 + 24);
      v51 = v61;
      v50 = v62;
      v52 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v61 + 16);
      v53 = v59;
      v52(v59, v49, v62);
      v54 = v38 + *(int *)(v35 + 24);
      v55 = v60;
      v52(v60, v54, v50);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v45 = sub_2408E5CD8();
      v56 = *(void (**)(_BYTE *, uint64_t))(v51 + 8);
      v56(v55, v50);
      v56(v53, v50);
      return v45 & 1;
    }
    goto LABEL_13;
  }
  v44 = v63;
  sub_2403A9210((uint64_t)v42, (uint64_t)v63, &qword_256FFA3A8);
  if (v32(v43, 1, v8) == 1)
  {
    sub_2403A97FC(v41, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v69, &qword_256FFA3A8);
    sub_240388AE4((uint64_t)v44, type metadata accessor for ToolKitProtoTypedValue);
LABEL_13:
    v33 = (uint64_t)v42;
    goto LABEL_14;
  }
  v47 = v64;
  sub_2403A91CC(v43, (uint64_t)v64, type metadata accessor for ToolKitProtoTypedValue);
  v48 = sub_2408A2ED8(v44, v47, (uint64_t (*)(uint64_t *, uint64_t *))static ToolKitProtoTypedValueKind.== infix(_:_:), (void (*)(uint64_t))sub_2404227AC, (void (*)(uint64_t))sub_240422794, type metadata accessor for ToolKitProtoTypedValue);
  sub_240388AE4((uint64_t)v47, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC(v41, &qword_256FFA3A8);
  sub_2403A97FC((uint64_t)v69, &qword_256FFA3A8);
  sub_240388AE4((uint64_t)v44, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v42, &qword_256FFA3A8);
  if ((v48 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v45 = 0;
  return v45 & 1;
}

uint64_t _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0G0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015398);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C900);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_25700C900);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C900);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C900);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C900);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C900);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, (uint64_t)v37, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0defG4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C900);
      sub_2403A97FC((uint64_t)v21, &qword_25700C900);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C900);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C900);
    sub_2403A97FC((uint64_t)v21, &qword_25700C900);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoComparisonPredicate.ToolKitProtoComparisonKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015398);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C900);
  sub_2403A97FC((uint64_t)v21, &qword_25700C900);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C900);
LABEL_8:
  v27 = type metadata accessor for ToolKitProtoComparisonPredicate.Comparison(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t sub_2408A20A4(_QWORD *a1, _QWORD *a2)
{
  return sub_2408A20D0(a1, a2, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, &qword_257015558, &qword_25700C8F8, type metadata accessor for ToolKitProtoComparisonPredicate, _s23LighthouseDataProcessor31ToolKitProtoComparisonPredicateV0G0V2eeoiySbAE_AEtFZ_0);
}

uint64_t sub_2408A20D0(_QWORD *a1, _QWORD *a2, uint64_t (*a3)(_QWORD), uint64_t *a4, uint64_t *a5, uint64_t (*a6)(_QWORD), uint64_t (*a7)(uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t *v49;
  uint64_t v50;
  char v51;
  uint64_t *v52;
  int *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(_QWORD);
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(_QWORD);
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  int *v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;

  v92 = a7;
  v110 = a1;
  v111 = a2;
  v89 = sub_2408E57A4();
  v88 = *(_QWORD *)(v89 - 8);
  v11 = MEMORY[0x24BDAC7A8](v89);
  v87 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v86 = (char *)&v85 - v13;
  v97 = type metadata accessor for ToolKitProtoContentItemClassDescriptor(0);
  v94 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v85 = (uint64_t)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015378);
  MEMORY[0x24BDAC7A8](v93);
  v98 = (uint64_t)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8E0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v90 = (uint64_t)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v95 = (uint64_t)&v85 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v96 = (uint64_t)&v85 - v21;
  v99 = a3;
  v105 = a3(0);
  v103 = *(_QWORD *)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v91 = (uint64_t)&v85 - v22;
  v101 = a4;
  v102 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v102);
  v106 = (uint64_t)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = a5;
  v24 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v100 = (uint64_t)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v109 = (uint64_t)&v85 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v104 = (uint64_t)&v85 - v29;
  v30 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (uint64_t *)((char *)&v85 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015388);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v85 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8F0);
  v38 = MEMORY[0x24BDAC7A8](v37);
  v40 = (uint64_t *)((char *)&v85 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = MEMORY[0x24BDAC7A8](v38);
  v43 = (char *)&v85 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v45 = (char *)&v85 - v44;
  v46 = a6(0);
  sub_2403A9210((uint64_t)v110 + *(int *)(v46 + 20), (uint64_t)v45, &qword_25700C8F0);
  v108 = (int *)v46;
  sub_2403A9210((uint64_t)v111 + *(int *)(v46 + 20), (uint64_t)v43, &qword_25700C8F0);
  v47 = (uint64_t)&v36[*(int *)(v34 + 48)];
  sub_2403A9210((uint64_t)v45, (uint64_t)v36, &qword_25700C8F0);
  sub_2403A9210((uint64_t)v43, v47, &qword_25700C8F0);
  v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  if (v48((uint64_t)v36, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v43, &qword_25700C8F0);
    sub_2403A97FC((uint64_t)v45, &qword_25700C8F0);
    if (v48(v47, 1, v30) == 1)
    {
      sub_2403A97FC((uint64_t)v36, &qword_25700C8F0);
      goto LABEL_8;
    }
LABEL_6:
    v49 = &qword_257015388;
    v50 = (uint64_t)v36;
LABEL_24:
    sub_2403A97FC(v50, v49);
    goto LABEL_25;
  }
  sub_2403A9210((uint64_t)v36, (uint64_t)v40, &qword_25700C8F0);
  if (v48(v47, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v43, &qword_25700C8F0);
    sub_2403A97FC((uint64_t)v45, &qword_25700C8F0);
    sub_240388AE4((uint64_t)v40, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
    goto LABEL_6;
  }
  sub_2403A91CC(v47, (uint64_t)v33, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
  v51 = _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V6EntityV8PropertyV2eeoiySbAI_AItFZ_0(v40, v33);
  sub_240388AE4((uint64_t)v33, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
  sub_2403A97FC((uint64_t)v43, &qword_25700C8F0);
  sub_2403A97FC((uint64_t)v45, &qword_25700C8F0);
  sub_240388AE4((uint64_t)v40, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
  sub_2403A97FC((uint64_t)v36, &qword_25700C8F0);
  if ((v51 & 1) == 0)
    goto LABEL_25;
LABEL_8:
  v52 = v107;
  v53 = v108;
  v54 = v110;
  v55 = v104;
  sub_2403A9210((uint64_t)v110 + v108[6], v104, v107);
  v56 = v111;
  v57 = v109;
  sub_2403A9210((uint64_t)v111 + v53[6], v109, v52);
  v58 = v106;
  v59 = v106 + *(int *)(v102 + 48);
  sub_2403A9210(v55, v106, v52);
  sub_2403A9210(v57, v59, v52);
  v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48);
  v61 = v105;
  if (v60(v58, 1, v105) == 1)
  {
    sub_2403A97FC(v57, v52);
    sub_2403A97FC(v55, v52);
    if (v60(v59, 1, v61) == 1)
    {
      sub_2403A97FC(v58, v52);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  v62 = v100;
  sub_2403A9210(v58, v100, v52);
  if (v60(v59, 1, v61) == 1)
  {
    sub_2403A97FC(v109, v52);
    sub_2403A97FC(v55, v52);
    sub_240388AE4(v62, v99);
LABEL_13:
    v50 = v58;
    v49 = v101;
    goto LABEL_24;
  }
  v63 = v91;
  v64 = v99;
  sub_2403A91CC(v59, v91, v99);
  v65 = v92(v62, v63);
  sub_240388AE4(v63, v64);
  sub_2403A97FC(v109, v52);
  sub_2403A97FC(v55, v52);
  sub_240388AE4(v62, v64);
  sub_2403A97FC(v58, v52);
  if ((v65 & 1) == 0)
  {
LABEL_25:
    v66 = 0;
    return v66 & 1;
  }
LABEL_15:
  if (*v54 == *v56 && v54[1] == v56[1] || (v66 = 0, (sub_2408E617C() & 1) != 0))
  {
    v67 = v96;
    sub_2403A9210((uint64_t)v54 + v53[7], v96, &qword_25700C8E0);
    v68 = v95;
    sub_2403A9210((uint64_t)v56 + v53[7], v95, &qword_25700C8E0);
    v69 = v98;
    v70 = v98 + *(int *)(v93 + 48);
    sub_2403A9210(v67, v98, &qword_25700C8E0);
    sub_2403A9210(v68, v70, &qword_25700C8E0);
    v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
    v72 = v97;
    if (v71(v69, 1, v97) == 1)
    {
      sub_2403A97FC(v68, &qword_25700C8E0);
      sub_2403A97FC(v67, &qword_25700C8E0);
      if (v71(v70, 1, v72) == 1)
      {
        sub_2403A97FC(v69, &qword_25700C8E0);
LABEL_28:
        v77 = (char *)v54 + v53[8];
        v78 = v88;
        v79 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
        v80 = v86;
        v81 = v89;
        v79(v86, v77, v89);
        v82 = (char *)v56 + v53[8];
        v83 = v87;
        v79(v87, v82, v81);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v66 = sub_2408E5CD8();
        v84 = *(void (**)(char *, uint64_t))(v78 + 8);
        v84(v83, v81);
        v84(v80, v81);
        return v66 & 1;
      }
    }
    else
    {
      v73 = v90;
      sub_2403A9210(v69, v90, &qword_25700C8E0);
      if (v71(v70, 1, v72) != 1)
      {
        v75 = v85;
        sub_2403A91CC(v70, v85, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
        v76 = _s23LighthouseDataProcessor38ToolKitProtoContentItemClassDescriptorV2eeoiySbAC_ACtFZ_0(v73, v75);
        sub_240388AE4(v75, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
        sub_2403A97FC(v68, &qword_25700C8E0);
        sub_2403A97FC(v67, &qword_25700C8E0);
        sub_240388AE4(v73, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
        sub_2403A97FC(v69, &qword_25700C8E0);
        v53 = v108;
        if ((v76 & 1) != 0)
          goto LABEL_28;
        goto LABEL_25;
      }
      sub_2403A97FC(v68, &qword_25700C8E0);
      sub_2403A97FC(v67, &qword_25700C8E0);
      sub_240388AE4(v73, type metadata accessor for ToolKitProtoContentItemClassDescriptor);
    }
    v49 = &qword_257015378;
    v50 = v69;
    goto LABEL_24;
  }
  return v66 & 1;
}

uint64_t _s23LighthouseDataProcessor021ToolKitProtoAssistantD16SchemaDefinitionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char v30;
  char *v32;
  char v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  char *v55;

  v4 = sub_2408E57A4();
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)&v48 - v7;
  v8 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015300);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C548);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v48 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v48 - v21;
  v23 = type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition(0);
  v24 = *(int *)(v23 + 28);
  v54 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = (int *)v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_25700C548);
  v27 = v26[7];
  v55 = a2;
  sub_2403A9210((uint64_t)&a2[v27], (uint64_t)v20, &qword_25700C548);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_25700C548);
  sub_2403A9210((uint64_t)v20, v28, &qword_25700C548);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_25700C548);
    sub_2403A97FC((uint64_t)v22, &qword_25700C548);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_25700C548);
      goto LABEL_10;
    }
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_257015300);
    goto LABEL_7;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_25700C548);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_25700C548);
    sub_2403A97FC((uint64_t)v22, &qword_25700C548);
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
    goto LABEL_6;
  }
  v32 = v53;
  sub_2403A91CC(v28, (uint64_t)v53, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  v33 = _s23LighthouseDataProcessor37ToolKitProtoAssistantSchemaIdentifierV2eeoiySbAC_ACtFZ_0(v17, v32);
  sub_240388AE4((uint64_t)v32, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2403A97FC((uint64_t)v20, &qword_25700C548);
  sub_2403A97FC((uint64_t)v22, &qword_25700C548);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2403A97FC((uint64_t)v13, &qword_25700C548);
  if ((v33 & 1) == 0)
    goto LABEL_7;
LABEL_10:
  v35 = v54;
  v34 = v55;
  if (*v54 != *(_QWORD *)v55 || v54[1] != *((_QWORD *)v55 + 1))
  {
    v30 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v30 & 1;
  }
  v36 = v26[8];
  v37 = (_QWORD *)((char *)v35 + v36);
  v38 = *(_QWORD *)((char *)v35 + v36 + 8);
  v39 = &v34[v36];
  v40 = *((_QWORD *)v39 + 1);
  if (!v38)
  {
    if (!v40)
      goto LABEL_20;
LABEL_7:
    v30 = 0;
    return v30 & 1;
  }
  if (!v40)
    goto LABEL_7;
  if (*v37 == *(_QWORD *)v39 && v38 == v40 || (v30 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_20:
    if ((sub_2408C23F4(v35[2], *((_QWORD *)v34 + 2)) & 1) != 0
      && (sub_2408BEE38(v35[3], *((_QWORD *)v34 + 3)) & 1) != 0)
    {
      v41 = (char *)v35 + v26[9];
      v43 = v51;
      v42 = v52;
      v44 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
      v45 = v49;
      v44(v49, v41, v52);
      v46 = v50;
      v44(v50, &v34[v26[9]], v42);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v30 = sub_2408E5CD8();
      v47 = *(void (**)(char *, uint64_t))(v43 + 8);
      v47(v46, v42);
      v47(v45, v42);
      return v30 & 1;
    }
    goto LABEL_7;
  }
  return v30 & 1;
}

uint64_t sub_2408A2EB4(char *a1, char *a2)
{
  return sub_2408A2ED8(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static ToolKitProtoTypedValueKind.== infix(_:_:), (void (*)(uint64_t))sub_2404227AC, (void (*)(uint64_t))sub_240422794, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t sub_2408A2ED8(char *a1, char *a2, uint64_t (*a3)(uint64_t *, uint64_t *), void (*a4)(uint64_t), void (*a5)(uint64_t), uint64_t (*a6)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t (*v25)(uint64_t *, uint64_t *);
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;

  v25 = a3;
  v26 = a6;
  v10 = sub_2408E57A4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v25 - v15;
  v17 = *(_QWORD *)a1;
  v18 = *(_QWORD *)a2;
  if ((~*(_QWORD *)a1 & 0xF000000000000007) == 0)
  {
    if ((~v18 & 0xF000000000000007) == 0)
      goto LABEL_8;
    goto LABEL_6;
  }
  v28 = *(_QWORD *)a1;
  if ((~v18 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_6:
    a5(v18);
    a4(v17);
    a4(v18);
LABEL_9:
    v22 = 0;
    return v22 & 1;
  }
  v27 = v18;
  swift_retain_n();
  v19 = v25(&v28, &v27);
  swift_release();
  a4(v17);
  if ((v19 & 1) == 0)
    goto LABEL_9;
LABEL_8:
  v20 = v26(0);
  v21 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v21(v16, &a1[*(int *)(v20 + 20)], v10);
  v21(v14, &a2[*(int *)(v20 + 20)], v10);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v22 = sub_2408E5CD8();
  v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  v23(v14, v10);
  v23(v16, v10);
  return v22 & 1;
}

uint64_t _s23LighthouseDataProcessor018ToolKitProtoSystemD8ProtocolV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015298);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_25700C948);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C948);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C948);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C948);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C948);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, (uint64_t)v37, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      static ToolKitProtoSystemToolProtocolKind.== infix(_:_:)((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C948);
      sub_2403A97FC((uint64_t)v21, &qword_25700C948);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C948);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C948);
    sub_2403A97FC((uint64_t)v21, &qword_25700C948);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015298);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C948);
  sub_2403A97FC((uint64_t)v21, &qword_25700C948);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C948);
LABEL_8:
  v27 = type metadata accessor for ToolKitProtoSystemToolProtocol(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor018ToolKitProtoSystemD8ProtocolV20ConditionallyEnabledV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  unsigned __int8 *v13;
  void (*v14)(char *, unsigned __int8 *, uint64_t);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *a2)
  {
    v12 = type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled(0);
    v13 = &a1[*(int *)(v12 + 20)];
    v14 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v8, &a2[*(int *)(v12 + 20)], v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v11 = sub_2408E5CD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t _s23LighthouseDataProcessor018ToolKitProtoSystemD8ProtocolV16IntentSideEffectV2eeoiySbAE_AEtFZ_0(unsigned int *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  unint64_t v17;
  uint64_t v18;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  if ((*((_BYTE *)a1 + 5) & 1) != 0)
  {
    if ((a2[5] & 1) != 0)
    {
LABEL_3:
      v11 = type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect(0);
      v12 = (char *)a1 + *(int *)(v11 + 20);
      v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v13(v10, v12, v4);
      v13(v8, &a2[*(int *)(v11 + 20)], v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_2408E5CD8();
      v15 = *(void (**)(char *, uint64_t))(v5 + 8);
      v15(v8, v4);
      v15(v10, v4);
      return v14 & 1;
    }
LABEL_5:
    v14 = 0;
    return v14 & 1;
  }
  if ((a2[5] & 1) != 0)
    goto LABEL_5;
  v17 = *(unsigned int *)a2 | ((unint64_t)a2[4] << 32);
  v14 = 0;
  if (((*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32)) & 0x100000000) != 0)
  {
    if (*a1)
    {
      if ((v17 & 0x100000000) != 0 && *(_DWORD *)a2)
        goto LABEL_3;
    }
    else if ((v17 & 0x100000000) != 0 && !*(_DWORD *)a2)
    {
      goto LABEL_3;
    }
  }
  else if ((v17 & 0x100000000) == 0 && *a1 == *(_DWORD *)a2)
  {
    goto LABEL_3;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor34ToolKitProtoAssistantSchemaVersionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1) && a1[2] == *((_QWORD *)a2 + 2))
  {
    v11 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
    v12 = (char *)a1 + *(int *)(v11 + 28);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, &a2[*(int *)(v11 + 28)], v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_2408E5CD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor37ToolKitProtoAssistantSchemaIdentifierV2eeoiySbAC_ACtFZ_0(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  char *v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;

  v4 = sub_2408E57A4();
  v44 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v40 - v7;
  v8 = type metadata accessor for ToolKitProtoAssistantSchemaVersion(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v41 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015640);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBB38);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v40 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v40 - v21;
  v23 = *a1;
  v24 = a1[1];
  v25 = *(_QWORD *)a2;
  v26 = *((_QWORD *)a2 + 1);
  v45 = a2;
  if (v23 == v25 && v24 == v26 || (v27 = 0, (sub_2408E617C() & 1) != 0))
  {
    v40 = v4;
    v28 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
    sub_2403A9210((uint64_t)a1 + *(int *)(v28 + 20), (uint64_t)v22, &qword_256FFBB38);
    sub_2403A9210((uint64_t)&v45[*(int *)(v28 + 20)], (uint64_t)v20, &qword_256FFBB38);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFBB38);
    sub_2403A9210((uint64_t)v20, v29, &qword_256FFBB38);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFBB38);
      sub_2403A97FC((uint64_t)v22, &qword_256FFBB38);
      if (v30(v29, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_256FFBB38);
LABEL_11:
        v33 = v44;
        v34 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
        v35 = v42;
        v36 = v40;
        v34(v42, (char *)a1 + *(int *)(v28 + 24), v40);
        v37 = v43;
        v34(v43, &v45[*(int *)(v28 + 24)], v36);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v27 = sub_2408E5CD8();
        v38 = *(void (**)(char *, uint64_t))(v33 + 8);
        v38(v37, v36);
        v38(v35, v36);
        return v27 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFBB38);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v41;
        sub_2403A91CC(v29, (uint64_t)v41, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
        v32 = _s23LighthouseDataProcessor34ToolKitProtoAssistantSchemaVersionV2eeoiySbAC_ACtFZ_0(v17, v31);
        sub_240388AE4((uint64_t)v31, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
        sub_2403A97FC((uint64_t)v20, &qword_256FFBB38);
        sub_2403A97FC((uint64_t)v22, &qword_256FFBB38);
        sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
        sub_2403A97FC((uint64_t)v13, &qword_256FFBB38);
        if ((v32 & 1) != 0)
          goto LABEL_11;
LABEL_12:
        v27 = 0;
        return v27 & 1;
      }
      sub_2403A97FC((uint64_t)v20, &qword_256FFBB38);
      sub_2403A97FC((uint64_t)v22, &qword_256FFBB38);
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoAssistantSchemaVersion);
    }
    sub_2403A97FC((uint64_t)v13, &qword_257015640);
    goto LABEL_12;
  }
  return v27 & 1;
}

uint64_t _s23LighthouseDataProcessor018ToolKitProtoSystemD8ProtocolV15AssistantSchemaV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015300);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C548);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_25700C548);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C548);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C548);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C548);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C548);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, (uint64_t)v36, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      v25 = _s23LighthouseDataProcessor37ToolKitProtoAssistantSchemaIdentifierV2eeoiySbAC_ACtFZ_0(v16, v24);
      sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      sub_2403A97FC((uint64_t)v19, &qword_25700C548);
      sub_2403A97FC((uint64_t)v21, &qword_25700C548);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      sub_2403A97FC((uint64_t)v12, &qword_25700C548);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C548);
    sub_2403A97FC((uint64_t)v21, &qword_25700C548);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015300);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C548);
  sub_2403A97FC((uint64_t)v21, &qword_25700C548);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C548);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD19InvocationSignatureV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_2408BAD50(*(_QWORD **)a1, *(_QWORD **)a2) & 1) != 0
    && (sub_2408BAD50(*(_QWORD **)(a1 + 8), *(_QWORD **)(a2 + 8)) & 1) != 0
    && (sub_240891B18(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) != 0)
  {
    v11 = type metadata accessor for ToolKitProtoToolInvocationSignature(0);
    v12 = a1 + *(int *)(v11 + 28);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, a2 + *(int *)(v11 + 28), v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_2408E5CD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V6EntityV8PropertyV2eeoiySbAI_AItFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_2408E57A4();
  v43 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v39 - v7;
  v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v40 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v44 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v39 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v39 - v20;
  if (*a1 == *a2 && a1[1] == a2[1] || (v22 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v22 = 0, (sub_2408E617C() & 1) != 0))
    {
      v39 = v4;
      v23 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property(0);
      sub_2403A9210((uint64_t)a1 + *(int *)(v23 + 24), (uint64_t)v21, &qword_256FFA428);
      sub_2403A9210((uint64_t)a2 + *(int *)(v23 + 24), (uint64_t)v19, &qword_256FFA428);
      v24 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_2403A9210((uint64_t)v21, (uint64_t)v13, &qword_256FFA428);
      sub_2403A9210((uint64_t)v19, v24, &qword_256FFA428);
      v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v25((uint64_t)v13, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v19, &qword_256FFA428);
        sub_2403A97FC((uint64_t)v21, &qword_256FFA428);
        if (v25(v24, 1, v8) == 1)
        {
          sub_2403A97FC((uint64_t)v13, &qword_256FFA428);
LABEL_14:
          v30 = (char *)a1 + *(int *)(v23 + 28);
          v31 = v43;
          v32 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
          v33 = v41;
          v34 = v39;
          v32(v41, v30, v39);
          v35 = (char *)a2 + *(int *)(v23 + 28);
          v36 = v42;
          v32(v42, v35, v34);
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v22 = sub_2408E5CD8();
          v37 = *(void (**)(char *, uint64_t))(v31 + 8);
          v37(v36, v34);
          v37(v33, v34);
          return v22 & 1;
        }
      }
      else
      {
        v26 = v44;
        sub_2403A9210((uint64_t)v13, v44, &qword_256FFA428);
        if (v25(v24, 1, v8) != 1)
        {
          v27 = v26;
          v28 = v40;
          sub_2403A91CC(v24, v40, type metadata accessor for ToolKitProtoTypeInstance);
          v29 = _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(v27, v28);
          sub_240388AE4(v28, type metadata accessor for ToolKitProtoTypeInstance);
          sub_2403A97FC((uint64_t)v19, &qword_256FFA428);
          sub_2403A97FC((uint64_t)v21, &qword_256FFA428);
          sub_240388AE4(v27, type metadata accessor for ToolKitProtoTypeInstance);
          sub_2403A97FC((uint64_t)v13, &qword_256FFA428);
          if ((v29 & 1) != 0)
            goto LABEL_14;
LABEL_15:
          v22 = 0;
          return v22 & 1;
        }
        sub_2403A97FC((uint64_t)v19, &qword_256FFA428);
        sub_2403A97FC((uint64_t)v21, &qword_256FFA428);
        sub_240388AE4(v26, type metadata accessor for ToolKitProtoTypeInstance);
      }
      sub_2403A97FC((uint64_t)v13, &qword_257000CB0);
      goto LABEL_15;
    }
  }
  return v22 & 1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V6EntityV2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t *v37;
  uint64_t v38;
  char v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  char v58;
  void (*v59)(char *, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;

  v74 = a2;
  v3 = sub_2408E57A4();
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v62 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v61 = (char *)&v61 - v6;
  v70 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  v68 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v65 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570016D0);
  MEMORY[0x24BDAC7A8](v67);
  v71 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDC0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v66 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v72 = (uint64_t)&v61 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v69 = (uint64_t)&v61 - v14;
  v15 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C528);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v61 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v61 - v29;
  v31 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity(0);
  v32 = *(int *)(v31 + 40);
  v73 = a1;
  v33 = (uint64_t)a1 + v32;
  v34 = (int *)v31;
  sub_2403A9210(v33, (uint64_t)v30, &qword_256FFA7F8);
  sub_2403A9210((uint64_t)v74 + v34[10], (uint64_t)v28, &qword_256FFA7F8);
  v35 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA7F8);
  sub_2403A9210((uint64_t)v28, v35, &qword_256FFA7F8);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v36((uint64_t)v21, 1, v15) == 1)
  {
    sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
    if (v36(v35, 1, v15) == 1)
    {
      sub_2403A97FC((uint64_t)v21, &qword_256FFA7F8);
      goto LABEL_9;
    }
LABEL_6:
    v37 = &qword_25700C528;
    v38 = (uint64_t)v21;
LABEL_7:
    sub_2403A97FC(v38, v37);
    goto LABEL_23;
  }
  sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA7F8);
  if (v36(v35, 1, v15) == 1)
  {
    sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
    sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeIdentifier);
    goto LABEL_6;
  }
  sub_2403A91CC(v35, (uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
  v39 = _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0((uint64_t)v25, (uint64_t)v18);
  sub_240388AE4((uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
  sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA7F8);
  if ((v39 & 1) == 0)
    goto LABEL_23;
LABEL_9:
  v40 = v73;
  v41 = v74;
  if ((sub_2408BB2B4(*v73, *v74) & 1) == 0 || (sub_2408BF1A8(v40[1], v41[1]) & 1) == 0)
    goto LABEL_23;
  v42 = v69;
  sub_2403A9210((uint64_t)v40 + v34[11], v69, &qword_256FFBDC0);
  v43 = v72;
  sub_2403A9210((uint64_t)v41 + v34[11], v72, &qword_256FFBDC0);
  v44 = v71;
  v45 = v71 + *(int *)(v67 + 48);
  sub_2403A9210(v42, v71, &qword_256FFBDC0);
  sub_2403A9210(v43, v45, &qword_256FFBDC0);
  v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  v47 = v70;
  if (v46(v44, 1, v70) != 1)
  {
    v48 = v66;
    sub_2403A9210(v44, v66, &qword_256FFBDC0);
    if (v46(v45, 1, v47) != 1)
    {
      v49 = v65;
      sub_2403A91CC(v45, v65, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      v50 = _s23LighthouseDataProcessor37ToolKitProtoTypeDisplayRepresentationV2eeoiySbAC_ACtFZ_0(v48, v49);
      sub_240388AE4(v49, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      sub_2403A97FC(v72, &qword_256FFBDC0);
      sub_2403A97FC(v42, &qword_256FFBDC0);
      sub_240388AE4(v48, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
      sub_2403A97FC(v44, &qword_256FFBDC0);
      if ((v50 & 1) != 0)
        goto LABEL_18;
LABEL_23:
      v58 = 0;
      return v58 & 1;
    }
    sub_2403A97FC(v72, &qword_256FFBDC0);
    sub_2403A97FC(v42, &qword_256FFBDC0);
    sub_240388AE4(v48, type metadata accessor for ToolKitProtoTypeDisplayRepresentation);
    goto LABEL_16;
  }
  sub_2403A97FC(v43, &qword_256FFBDC0);
  sub_2403A97FC(v42, &qword_256FFBDC0);
  if (v46(v45, 1, v47) != 1)
  {
LABEL_16:
    v37 = &qword_2570016D0;
    v38 = v44;
    goto LABEL_7;
  }
  sub_2403A97FC(v44, &qword_256FFBDC0);
LABEL_18:
  if ((sub_2408BEE38(v40[2], v41[2]) & 1) == 0
    || (sub_2408BF558(v40[3], v41[3]) & 1) == 0
    || (sub_2408BF908(v40[4], v41[4]) & 1) == 0
    || (sub_2408BF90C(v40[5], v41[5]) & 1) == 0)
  {
    goto LABEL_23;
  }
  v51 = (char *)v40 + v34[12];
  v53 = v63;
  v52 = v64;
  v54 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v55 = v61;
  v54(v61, v51, v64);
  v56 = (char *)v41 + v34[12];
  v57 = v62;
  v54(v62, v56, v52);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v58 = sub_2408E5CD8();
  v59 = *(void (**)(char *, uint64_t))(v53 + 8);
  v59(v57, v52);
  v59(v55, v52);
  return v58 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD17DefinitionClosureV8Version1V2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  _QWORD *v30;
  char v31;
  uint64_t *v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t *v50;

  v4 = sub_2408E57A4();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v43 - v7;
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v48 = (uint64_t *)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CC0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1(0);
  v24 = *(int *)(v23 + 20);
  v49 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_256FFA468);
  v27 = *(int *)(v26 + 20);
  v50 = a2;
  sub_2403A9210((uint64_t)a2 + v27, (uint64_t)v20, &qword_256FFA468);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA468);
  sub_2403A9210((uint64_t)v20, v28, &qword_256FFA468);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA468);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA468);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_256FFA468);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA468);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA468);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA468);
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1);
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_257000CC0);
LABEL_10:
    v40 = 0;
    return v40 & 1;
  }
  v30 = v48;
  sub_2403A91CC(v28, (uint64_t)v48, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  v31 = _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V2eeoiySbAE_AEtFZ_0((uint64_t)v17, v30);
  sub_240388AE4((uint64_t)v30, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA468);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA468);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  sub_2403A97FC((uint64_t)v13, &qword_256FFA468);
  if ((v31 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v32 = v49;
  v33 = v50;
  if ((sub_2408C27CC(*v49, *v50) & 1) == 0)
    goto LABEL_10;
  v34 = (char *)v32 + *(int *)(v26 + 24);
  v36 = v46;
  v35 = v47;
  v37 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  v38 = v44;
  v37(v44, v34, v47);
  v39 = v45;
  v37(v45, (char *)v33 + *(int *)(v26 + 24), v35);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v40 = sub_2408E5CD8();
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v39, v35);
  v41(v38, v35);
  return v40 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD13SummaryStringV9ComponentV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  int v25;
  char *v26;
  uint64_t v27;

  v4 = sub_2408E57A4();
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - v8;
  v11 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v12 = *(unsigned __int8 *)(a1 + 16);
  v14 = *(_QWORD *)a2;
  v13 = *(_QWORD *)(a2 + 8);
  v15 = *(unsigned __int8 *)(a2 + 16);
  if (v12 == 255)
  {
    if (v15 == 255)
    {
LABEL_16:
      v17 = v7;
      v18 = v6;
      v19 = type metadata accessor for ToolKitProtoToolSummaryString.Component(0);
      v20 = a1 + *(int *)(v19 + 20);
      v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
      v21(v9, v20, v4);
      v21(v17, a2 + *(int *)(v19 + 20), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v16 = sub_2408E5CD8();
      v22 = *(void (**)(char *, uint64_t))(v18 + 8);
      v22(v17, v4);
      v22(v9, v4);
      return v16 & 1;
    }
LABEL_9:
    sub_2407419B8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
    sub_2407419B8(v11, v10, v12);
    sub_2407419D8(v11, v10, v12);
    sub_2407419D8(v14, v13, v15);
    v16 = 0;
    return v16 & 1;
  }
  if (v15 == 255)
    goto LABEL_9;
  if ((v12 & 1) != 0)
  {
    if ((v15 & 1) != 0)
    {
      v26 = v7;
      v27 = v6;
      if (v11 != v14 || v10 != v13)
        goto LABEL_15;
      goto LABEL_14;
    }
LABEL_11:
    sub_2407419B8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
    sub_2407419B8(v11, v10, v12);
    sub_2407419F0();
    sub_2407419F0();
    v16 = 0;
    return v16 & 1;
  }
  if ((v15 & 1) != 0)
    goto LABEL_11;
  v26 = v7;
  v27 = v6;
  if (v11 == v14 && v10 == v13)
  {
LABEL_14:
    sub_2407419B8(v11, v10, v15);
    sub_2407419B8(v11, v10, v12);
    sub_2407419F0();
    sub_2407419F0();
    v7 = v26;
    v6 = v27;
    goto LABEL_16;
  }
LABEL_15:
  v25 = sub_2408E617C();
  sub_2407419B8(v14, v13, v15);
  sub_2407419B8(v11, v10, v12);
  sub_2407419F0();
  sub_2407419F0();
  v16 = 0;
  v7 = v26;
  v6 = v27;
  if ((v25 & 1) != 0)
    goto LABEL_16;
  return v16 & 1;
}

uint64_t sub_2408A53B0(uint64_t *a1, char *a2, void (*a3)(uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t), uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  char v24;
  void (*v25)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);

  v32 = a5;
  v9 = sub_2408E57A4();
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - v13;
  v16 = *a1;
  v15 = a1[1];
  v17 = *(_QWORD *)a2;
  v18 = *((_QWORD *)a2 + 1);
  if (v15 != 1)
  {
    if (v18 != 1)
    {
      if (v15)
      {
        if (v18)
        {
          v30 = v12;
          v31 = v11;
          if (v16 == v17 && v15 == v18)
          {
            a3(v16, v15);
            a3(v16, v15);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v12 = v30;
            v11 = v31;
          }
          else
          {
            HIDWORD(v29) = sub_2408E617C();
            a3(v17, v18);
            a3(v16, v15);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v24 = 0;
            v12 = v30;
            v11 = v31;
            if ((v29 & 0x100000000) == 0)
              return v24 & 1;
          }
          goto LABEL_3;
        }
      }
      else if (!v18)
      {
        v27 = v12;
        v28 = v11;
        swift_bridgeObjectRelease_n();
        v12 = v27;
        v11 = v28;
        goto LABEL_3;
      }
      a3(*(_QWORD *)a2, *((_QWORD *)a2 + 1));
      a3(v16, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      v24 = 0;
      return v24 & 1;
    }
LABEL_5:
    a3(*(_QWORD *)a2, *((_QWORD *)a2 + 1));
    a3(v16, v15);
    a4(v16, v15);
    a4(v17, v18);
    goto LABEL_6;
  }
  if (v18 != 1)
    goto LABEL_5;
LABEL_3:
  v19 = v12;
  v20 = v11;
  v21 = v32(0);
  v22 = (char *)a1 + *(int *)(v21 + 20);
  v23 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v23(v14, v22, v9);
  v23(v19, &a2[*(int *)(v21 + 20)], v9);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v24 = sub_2408E5CD8();
  v25 = *(void (**)(char *, uint64_t))(v20 + 8);
  v25(v19, v9);
  v25(v14, v9);
  return v24 & 1;
}

uint64_t _s23LighthouseDataProcessor25ToolKitProtoAppDefinitionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t *v27;
  char *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;

  v4 = sub_2408E57A4();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v43 = (char *)&v40 - v7;
  v8 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015240);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v40 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v40 - v21;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v23 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      || (v23 = 0, (sub_2408E617C() & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v23 = 0, (sub_2408E617C() & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v23 = 0, (sub_2408E617C() & 1) != 0))
        {
          if (*(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64) && *(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72)
            || (v23 = 0, (sub_2408E617C() & 1) != 0))
          {
            v42 = v17;
            v24 = type metadata accessor for ToolKitProtoAppDefinition(0);
            sub_2403A9210(a1 + *(int *)(v24 + 40), (uint64_t)v22, &qword_256FFA430);
            v41 = v24;
            sub_2403A9210(a2 + *(int *)(v24 + 40), (uint64_t)v20, &qword_256FFA430);
            v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
            sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA430);
            sub_2403A9210((uint64_t)v20, v25, &qword_256FFA430);
            v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
            if (v26((uint64_t)v13, 1, v8) == 1)
            {
              sub_2403A97FC((uint64_t)v20, &qword_256FFA430);
              sub_2403A97FC((uint64_t)v22, &qword_256FFA430);
              if (v26(v25, 1, v8) == 1)
              {
                sub_2403A97FC((uint64_t)v13, &qword_256FFA430);
LABEL_23:
                if (*(unsigned __int8 *)(a1 + 80) == *(unsigned __int8 *)(a2 + 80))
                {
                  v30 = v41;
                  v31 = a1 + *(int *)(v41 + 44);
                  v33 = v45;
                  v32 = v46;
                  v34 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
                  v35 = v43;
                  v34(v43, v31, v46);
                  v36 = a2 + *(int *)(v30 + 44);
                  v37 = v44;
                  v34(v44, v36, v32);
                  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                  v23 = sub_2408E5CD8();
                  v38 = *(void (**)(char *, uint64_t))(v33 + 8);
                  v38(v37, v32);
                  v38(v35, v32);
                  return v23 & 1;
                }
LABEL_25:
                v23 = 0;
                return v23 & 1;
              }
            }
            else
            {
              v27 = v42;
              sub_2403A9210((uint64_t)v13, (uint64_t)v42, &qword_256FFA430);
              if (v26(v25, 1, v8) != 1)
              {
                v28 = v47;
                sub_2403A91CC(v25, (uint64_t)v47, type metadata accessor for ToolKitProtoAppDefinition.Device);
                v29 = sub_2408A53B0(v27, v28, (void (*)(uint64_t, uint64_t))sub_240742834, (void (*)(uint64_t, uint64_t))sub_240742848, type metadata accessor for ToolKitProtoAppDefinition.Device);
                sub_240388AE4((uint64_t)v28, type metadata accessor for ToolKitProtoAppDefinition.Device);
                sub_2403A97FC((uint64_t)v20, &qword_256FFA430);
                sub_2403A97FC((uint64_t)v22, &qword_256FFA430);
                sub_240388AE4((uint64_t)v27, type metadata accessor for ToolKitProtoAppDefinition.Device);
                sub_2403A97FC((uint64_t)v13, &qword_256FFA430);
                if ((v29 & 1) == 0)
                  goto LABEL_25;
                goto LABEL_23;
              }
              sub_2403A97FC((uint64_t)v20, &qword_256FFA430);
              sub_2403A97FC((uint64_t)v22, &qword_256FFA430);
              sub_240388AE4((uint64_t)v27, type metadata accessor for ToolKitProtoAppDefinition.Device);
            }
            sub_2403A97FC((uint64_t)v13, &qword_257015240);
            goto LABEL_25;
          }
        }
      }
    }
  }
  return v23 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V2eeoiySbAE_AEtFZ_0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t *v73;
  uint64_t v74;
  uint64_t *v76;
  char v77;
  int *v78;
  uint64_t v79;
  uint64_t *v80;
  _QWORD *v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t *v96;
  _QWORD *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  char v101;
  _QWORD *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  _QWORD *v110;
  char *v111;
  char v112;
  uint64_t *v113;
  _QWORD *v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  char v123;
  int *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  char v132;
  int *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  int *v141;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);
  char *v144;
  uint64_t v145;
  char *v146;
  void (*v147)(char *, uint64_t);
  uint64_t v148;
  uint64_t v149;
  int *v150;
  uint64_t *v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t *v191;
  _QWORD *v192;

  v155 = sub_2408E57A4();
  v154 = *(_QWORD *)(v155 - 8);
  v4 = MEMORY[0x24BDAC7A8](v155);
  v153 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v152 = (char *)&v148 - v6;
  v168 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  v161 = *(_QWORD *)(v168 - 8);
  MEMORY[0x24BDAC7A8](v168);
  v156 = (uint64_t)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015648);
  v8 = MEMORY[0x24BDAC7A8](v164);
  v160 = (uint64_t)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v167 = (uint64_t)&v148 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v157 = (uint64_t)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v158 = (uint64_t)&v148 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v159 = (uint64_t)&v148 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v162 = (uint64_t)&v148 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v165 = (uint64_t)&v148 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v166 = (uint64_t)&v148 - v22;
  v23 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  v170 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v163 = (uint64_t)&v148 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015650);
  MEMORY[0x24BDAC7A8](v169);
  v174 = (uint64_t)&v148 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v171 = (uint64_t)&v148 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v172 = (uint64_t)&v148 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v173 = (uint64_t)&v148 - v31;
  v181 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  v178 = *(_QWORD *)(v181 - 8);
  MEMORY[0x24BDAC7A8](v181);
  v175 = (char *)&v148 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015658);
  MEMORY[0x24BDAC7A8](v177);
  v182 = (uint64_t)&v148 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v176 = (uint64_t *)((char *)&v148 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = MEMORY[0x24BDAC7A8](v35);
  v179 = (uint64_t)&v148 - v38;
  MEMORY[0x24BDAC7A8](v37);
  v180 = (uint64_t)&v148 - v39;
  v189 = type metadata accessor for ToolKitProtoAppDefinition(0);
  v186 = *(_QWORD *)(v189 - 8);
  MEMORY[0x24BDAC7A8](v189);
  v183 = (uint64_t)&v148 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015660);
  MEMORY[0x24BDAC7A8](v185);
  v190 = (uint64_t)&v148 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
  v43 = MEMORY[0x24BDAC7A8](v42);
  v184 = (uint64_t)&v148 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x24BDAC7A8](v43);
  v187 = (uint64_t)&v148 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v188 = (uint64_t)&v148 - v47;
  v48 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v49 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v191 = (uint64_t *)((char *)&v148 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v51);
  v53 = (char *)&v148 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v55 = MEMORY[0x24BDAC7A8](v54);
  v57 = (uint64_t *)((char *)&v148 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0));
  v58 = MEMORY[0x24BDAC7A8](v55);
  v60 = (char *)&v148 - v59;
  MEMORY[0x24BDAC7A8](v58);
  v62 = (char *)&v148 - v61;
  v63 = *(_QWORD *)a1;
  v64 = *(_QWORD *)(a1 + 8);
  v65 = *a2;
  v66 = a2[1];
  v192 = a2;
  if (v63 != v65 || v64 != v66)
  {
    v67 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v67 & 1;
  }
  if (*(_QWORD *)(a1 + 16) != v192[2] || *(_QWORD *)(a1 + 24) != v192[3])
  {
    v67 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v67 & 1;
  }
  v68 = v192;
  if (*(unsigned __int8 *)(a1 + 32) != *((unsigned __int8 *)v192 + 32)
    || (sub_2408C23F4(*(_QWORD *)(a1 + 40), v192[5]) & 1) == 0)
  {
    goto LABEL_16;
  }
  v149 = v23;
  v69 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v70 = *(int *)(v69 + 68);
  v151 = (uint64_t *)a1;
  sub_2403A9210(a1 + v70, (uint64_t)v62, &qword_256FFA428);
  v150 = (int *)v69;
  sub_2403A9210((uint64_t)v68 + *(int *)(v69 + 68), (uint64_t)v60, &qword_256FFA428);
  v71 = (uint64_t)&v53[*(int *)(v51 + 48)];
  sub_2403A9210((uint64_t)v62, (uint64_t)v53, &qword_256FFA428);
  sub_2403A9210((uint64_t)v60, v71, &qword_256FFA428);
  v72 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  if (v72((uint64_t)v53, 1, v48) == 1)
  {
    sub_2403A97FC((uint64_t)v60, &qword_256FFA428);
    sub_2403A97FC((uint64_t)v62, &qword_256FFA428);
    if (v72(v71, 1, v48) == 1)
    {
      sub_2403A97FC((uint64_t)v53, &qword_256FFA428);
      goto LABEL_19;
    }
LABEL_14:
    v73 = &qword_257000CB0;
    v74 = (uint64_t)v53;
    goto LABEL_15;
  }
  sub_2403A9210((uint64_t)v53, (uint64_t)v57, &qword_256FFA428);
  if (v72(v71, 1, v48) == 1)
  {
    sub_2403A97FC((uint64_t)v60, &qword_256FFA428);
    sub_2403A97FC((uint64_t)v62, &qword_256FFA428);
    sub_240388AE4((uint64_t)v57, type metadata accessor for ToolKitProtoTypeInstance);
    goto LABEL_14;
  }
  v76 = v191;
  sub_2403A91CC(v71, (uint64_t)v191, type metadata accessor for ToolKitProtoTypeInstance);
  v77 = _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(v57, v76);
  sub_240388AE4((uint64_t)v76, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2403A97FC((uint64_t)v60, &qword_256FFA428);
  sub_2403A97FC((uint64_t)v62, &qword_256FFA428);
  sub_240388AE4((uint64_t)v57, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2403A97FC((uint64_t)v53, &qword_256FFA428);
  if ((v77 & 1) == 0)
    goto LABEL_16;
LABEL_19:
  v78 = v150;
  v79 = v150[18];
  v80 = v151;
  v81 = (uint64_t *)((char *)v151 + v79);
  v82 = *(uint64_t *)((char *)v151 + v79 + 8);
  v83 = (_QWORD *)((char *)v192 + v79);
  v84 = v83[1];
  if (v82)
  {
    if (!v84)
      goto LABEL_16;
    if (*v81 != *v83 || v82 != v84)
    {
      v85 = sub_2408E617C();
      v80 = v151;
      v67 = 0;
      if ((v85 & 1) == 0)
        return v67 & 1;
    }
  }
  else if (v84)
  {
    goto LABEL_16;
  }
  v86 = v188;
  sub_2403A9210((uint64_t)v80 + v78[19], v188, &qword_256FFA438);
  v87 = v187;
  sub_2403A9210((uint64_t)v192 + v78[19], v187, &qword_256FFA438);
  v88 = v190;
  v89 = v190 + *(int *)(v185 + 48);
  sub_2403A9210(v86, v190, &qword_256FFA438);
  sub_2403A9210(v87, v89, &qword_256FFA438);
  v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v186 + 48);
  v91 = v189;
  if (v90(v88, 1, v189) != 1)
  {
    v92 = v184;
    sub_2403A9210(v88, v184, &qword_256FFA438);
    if (v90(v89, 1, v91) != 1)
    {
      v93 = v183;
      sub_2403A91CC(v89, v183, type metadata accessor for ToolKitProtoAppDefinition);
      v94 = _s23LighthouseDataProcessor25ToolKitProtoAppDefinitionV2eeoiySbAC_ACtFZ_0(v92, v93);
      sub_240388AE4(v93, type metadata accessor for ToolKitProtoAppDefinition);
      sub_2403A97FC(v87, &qword_256FFA438);
      sub_2403A97FC(v86, &qword_256FFA438);
      sub_240388AE4(v92, type metadata accessor for ToolKitProtoAppDefinition);
      sub_2403A97FC(v88, &qword_256FFA438);
      if ((v94 & 1) == 0)
        goto LABEL_16;
      goto LABEL_33;
    }
    sub_2403A97FC(v87, &qword_256FFA438);
    sub_2403A97FC(v86, &qword_256FFA438);
    sub_240388AE4(v92, type metadata accessor for ToolKitProtoAppDefinition);
LABEL_31:
    v73 = &qword_257015660;
    v74 = v88;
    goto LABEL_15;
  }
  sub_2403A97FC(v87, &qword_256FFA438);
  sub_2403A97FC(v86, &qword_256FFA438);
  if (v90(v89, 1, v91) != 1)
    goto LABEL_31;
  sub_2403A97FC(v88, &qword_256FFA438);
LABEL_33:
  v95 = v78[20];
  v96 = v151;
  v97 = (uint64_t *)((char *)v151 + v95);
  v98 = *(uint64_t *)((char *)v151 + v95 + 8);
  v99 = (_QWORD *)((char *)v192 + v95);
  v100 = v99[1];
  if (!v98)
  {
    if (v100)
      goto LABEL_16;
    goto LABEL_40;
  }
  if (!v100)
    goto LABEL_16;
  if (*v97 == *v99 && v98 == v100 || (v101 = sub_2408E617C(), v96 = v151, v67 = 0, (v101 & 1) != 0))
  {
LABEL_40:
    v102 = v192;
    v103 = v96;
    if ((sub_2408C2F2C(v96[6], v192[6]) & 1) == 0 || (sub_2408BAD50((_QWORD *)v103[7], (_QWORD *)v102[7]) & 1) == 0)
      goto LABEL_16;
    v104 = v180;
    sub_2403A9210((uint64_t)v103 + v78[21], v180, &qword_256FFA440);
    v105 = v179;
    sub_2403A9210((uint64_t)v102 + v78[21], v179, &qword_256FFA440);
    v106 = v182;
    v107 = v182 + *(int *)(v177 + 48);
    sub_2403A9210(v104, v182, &qword_256FFA440);
    sub_2403A9210(v105, v107, &qword_256FFA440);
    v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48);
    v109 = v181;
    if (v108(v106, 1, v181) == 1)
    {
      sub_2403A97FC(v105, &qword_256FFA440);
      sub_2403A97FC(v104, &qword_256FFA440);
      if (v108(v107, 1, v109) == 1)
      {
        sub_2403A97FC(v106, &qword_256FFA440);
        goto LABEL_49;
      }
    }
    else
    {
      v110 = v176;
      sub_2403A9210(v106, (uint64_t)v176, &qword_256FFA440);
      if (v108(v107, 1, v109) != 1)
      {
        v111 = v175;
        sub_2403A91CC(v107, (uint64_t)v175, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
        v112 = sub_2408A8BF0(v110, v111, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
        sub_240388AE4((uint64_t)v111, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
        sub_2403A97FC(v105, &qword_256FFA440);
        sub_2403A97FC(v104, &qword_256FFA440);
        sub_240388AE4((uint64_t)v110, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
        sub_2403A97FC(v106, &qword_256FFA440);
        if ((v112 & 1) == 0)
          goto LABEL_16;
LABEL_49:
        v113 = v151;
        v114 = v192;
        if ((sub_2408BF1A8(v151[8], v192[8]) & 1) == 0
          || !sub_2408C314C(v113[9], v114[9])
          || *((unsigned __int8 *)v113 + 80) != *((unsigned __int8 *)v114 + 80)
          || (sub_2408BEE38(v113[11], v114[11]) & 1) == 0
          || (sub_2408C31B8(v151[12], v192[12]) & 1) == 0)
        {
          goto LABEL_16;
        }
        v115 = v150;
        v116 = v173;
        sub_2403A9210((uint64_t)v151 + v150[22], v173, &qword_256FFA450);
        v117 = v172;
        sub_2403A9210((uint64_t)v192 + v115[22], v172, &qword_256FFA450);
        v118 = v174;
        v119 = v174 + *(int *)(v169 + 48);
        sub_2403A9210(v116, v174, &qword_256FFA450);
        sub_2403A9210(v117, v119, &qword_256FFA450);
        v120 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v170 + 48);
        if (v120(v118, 1, v149) == 1)
        {
          sub_2403A97FC(v172, &qword_256FFA450);
          sub_2403A97FC(v173, &qword_256FFA450);
          if (v120(v119, 1, v149) == 1)
          {
            sub_2403A97FC(v174, &qword_256FFA450);
            goto LABEL_61;
          }
        }
        else
        {
          sub_2403A9210(v174, v171, &qword_256FFA450);
          if (v120(v119, 1, v149) != 1)
          {
            v121 = v163;
            sub_2403A91CC(v119, v163, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
            v122 = v171;
            v123 = _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V0D4IconV2eeoiySbAG_AGtFZ_0(v171, v121);
            sub_240388AE4(v121, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
            sub_2403A97FC(v172, &qword_256FFA450);
            sub_2403A97FC(v173, &qword_256FFA450);
            sub_240388AE4(v122, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
            sub_2403A97FC(v174, &qword_256FFA450);
            if ((v123 & 1) == 0)
              goto LABEL_16;
LABEL_61:
            if ((sub_2408C23F4(v151[13], v192[13]) & 1) == 0)
              goto LABEL_16;
            v124 = v150;
            v125 = v166;
            sub_2403A9210((uint64_t)v151 + v150[23], v166, &qword_256FFA460);
            v126 = v165;
            sub_2403A9210((uint64_t)v192 + v124[23], v165, &qword_256FFA460);
            v127 = v167;
            v128 = v167 + *(int *)(v164 + 48);
            sub_2403A9210(v125, v167, &qword_256FFA460);
            sub_2403A9210(v126, v128, &qword_256FFA460);
            v129 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v161 + 48);
            if (v129(v127, 1, v168) == 1)
            {
              sub_2403A97FC(v165, &qword_256FFA460);
              sub_2403A97FC(v166, &qword_256FFA460);
              if (v129(v128, 1, v168) == 1)
              {
                sub_2403A97FC(v167, &qword_256FFA460);
LABEL_69:
                v133 = v150;
                v134 = v159;
                sub_2403A9210((uint64_t)v151 + v150[24], v159, &qword_256FFA460);
                v135 = v158;
                sub_2403A9210((uint64_t)v192 + v133[24], v158, &qword_256FFA460);
                v136 = v160;
                v137 = v160 + *(int *)(v164 + 48);
                sub_2403A9210(v134, v160, &qword_256FFA460);
                sub_2403A9210(v135, v137, &qword_256FFA460);
                if (v129(v136, 1, v168) == 1)
                {
                  sub_2403A97FC(v158, &qword_256FFA460);
                  sub_2403A97FC(v159, &qword_256FFA460);
                  if (v129(v137, 1, v168) == 1)
                  {
                    sub_2403A97FC(v160, &qword_256FFA460);
                    goto LABEL_76;
                  }
                }
                else
                {
                  sub_2403A9210(v160, v157, &qword_256FFA460);
                  if (v129(v137, 1, v168) != 1)
                  {
                    v138 = v156;
                    sub_2403A91CC(v137, v156, type metadata accessor for ToolKitProtoContainerDefinition);
                    v139 = v157;
                    v140 = _s23LighthouseDataProcessor31ToolKitProtoContainerDefinitionV2eeoiySbAC_ACtFZ_0(v157, v138);
                    sub_240388AE4(v138, type metadata accessor for ToolKitProtoContainerDefinition);
                    sub_2403A97FC(v158, &qword_256FFA460);
                    sub_2403A97FC(v159, &qword_256FFA460);
                    sub_240388AE4(v139, type metadata accessor for ToolKitProtoContainerDefinition);
                    sub_2403A97FC(v160, &qword_256FFA460);
                    if ((v140 & 1) != 0)
                    {
LABEL_76:
                      if ((sub_2408BF908(v151[14], v192[14]) & 1) != 0)
                      {
                        v141 = v150;
                        v142 = v154;
                        v143 = *(void (**)(char *, char *, uint64_t))(v154 + 16);
                        v144 = v152;
                        v145 = v155;
                        v143(v152, (char *)v151 + v150[25], v155);
                        v146 = v153;
                        v143(v153, (char *)v192 + v141[25], v145);
                        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                        v67 = sub_2408E5CD8();
                        v147 = *(void (**)(char *, uint64_t))(v142 + 8);
                        v147(v146, v145);
                        v147(v144, v145);
                        return v67 & 1;
                      }
                    }
LABEL_16:
                    v67 = 0;
                    return v67 & 1;
                  }
                  sub_2403A97FC(v158, &qword_256FFA460);
                  sub_2403A97FC(v159, &qword_256FFA460);
                  sub_240388AE4(v157, type metadata accessor for ToolKitProtoContainerDefinition);
                }
                v73 = &qword_257015648;
                v74 = v160;
LABEL_15:
                sub_2403A97FC(v74, v73);
                goto LABEL_16;
              }
            }
            else
            {
              sub_2403A9210(v167, v162, &qword_256FFA460);
              if (v129(v128, 1, v168) != 1)
              {
                v130 = v156;
                sub_2403A91CC(v128, v156, type metadata accessor for ToolKitProtoContainerDefinition);
                v131 = v162;
                v132 = _s23LighthouseDataProcessor31ToolKitProtoContainerDefinitionV2eeoiySbAC_ACtFZ_0(v162, v130);
                sub_240388AE4(v130, type metadata accessor for ToolKitProtoContainerDefinition);
                sub_2403A97FC(v165, &qword_256FFA460);
                sub_2403A97FC(v166, &qword_256FFA460);
                sub_240388AE4(v131, type metadata accessor for ToolKitProtoContainerDefinition);
                sub_2403A97FC(v167, &qword_256FFA460);
                if ((v132 & 1) == 0)
                  goto LABEL_16;
                goto LABEL_69;
              }
              sub_2403A97FC(v165, &qword_256FFA460);
              sub_2403A97FC(v166, &qword_256FFA460);
              sub_240388AE4(v162, type metadata accessor for ToolKitProtoContainerDefinition);
            }
            v73 = &qword_257015648;
            v74 = v167;
            goto LABEL_15;
          }
          sub_2403A97FC(v172, &qword_256FFA450);
          sub_2403A97FC(v173, &qword_256FFA450);
          sub_240388AE4(v171, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
        }
        v73 = &qword_257015650;
        v74 = v174;
        goto LABEL_15;
      }
      sub_2403A97FC(v105, &qword_256FFA440);
      sub_2403A97FC(v104, &qword_256FFA440);
      sub_240388AE4((uint64_t)v110, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
    }
    v73 = &qword_257015658;
    v74 = v106;
    goto LABEL_15;
  }
  return v67 & 1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV9PrimitiveV2eeoiySbAE_AEtFZ_0(char *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  uint64_t v12;
  unsigned __int8 *v13;
  void (*v14)(_BYTE *, unsigned __int8 *, uint64_t);
  char v15;
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v18[14];
  unsigned __int8 v19;
  char v20;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  v10 = &v18[-v9];
  v11 = *a2;
  if (*a1 == 41)
  {
    if (v11 != 41)
    {
LABEL_7:
      v15 = 0;
      return v15 & 1;
    }
  }
  else
  {
    v20 = *a1;
    if (v11 == 41)
      goto LABEL_7;
    v19 = v11;
    if (!_s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV0deF13PrimitiveKindO2eeoiySbAE_AEtFZ_0(&v20, &v19))
      goto LABEL_7;
  }
  v12 = type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0);
  v13 = (unsigned __int8 *)&a1[*(int *)(v12 + 20)];
  v14 = *(void (**)(_BYTE *, unsigned __int8 *, uint64_t))(v5 + 16);
  v14(v10, v13, v4);
  v14(v8, &a2[*(int *)(v12 + 20)], v4);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v15 = sub_2408E5CD8();
  v16 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  return v15 & 1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015570);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA800);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA800);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA800);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA800);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA800);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA800);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoTypeIdentifierKind);
      v25 = _s23LighthouseDataProcessor30ToolKitProtoTypeIdentifierKindO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoTypeIdentifierKind);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA800);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA800);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypeIdentifierKind);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA800);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA800);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA800);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypeIdentifierKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015570);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA800);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA800);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA800);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  v11 = *a1;
  v12 = *a2;
  if ((~*a1 & 0xF000000000000007) == 0)
  {
    if ((~v12 & 0xF000000000000007) == 0)
      goto LABEL_8;
    goto LABEL_6;
  }
  v22 = *a1;
  if ((~v12 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_6:
    sub_240422794(v12);
    sub_2404227AC(v11);
    sub_2404227AC(v12);
LABEL_9:
    v18 = 0;
    return v18 & 1;
  }
  v21 = v12;
  sub_240422794(v11);
  swift_retain();
  _s23LighthouseDataProcessor28ToolKitProtoTypeInstanceKindO2eeoiySbAC_ACtFZ_0((uint64_t)&v22, (uint64_t)&v21);
  v14 = v13;
  swift_release();
  sub_2404227AC(v11);
  if ((v14 & 1) == 0)
    goto LABEL_9;
LABEL_8:
  v15 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v16 = (char *)a1 + *(int *)(v15 + 20);
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v10, v16, v4);
  v17(v8, (char *)a2 + *(int *)(v15 + 20), v4);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v18 = sub_2408E5CD8();
  v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v8, v4);
  v19(v10, v4);
  return v18 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V9ParameterV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t *v29;
  uint64_t *v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;

  v4 = sub_2408E57A4();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v42 - v7;
  v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v49 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v42 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v42 - v21;
  if (*a1 == *a2 && a1[1] == a2[1] || (v23 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (a1[2] == a2[2] && a1[3] == a2[3] || (v23 = 0, (sub_2408E617C() & 1) != 0))
    {
      v24 = a1[8];
      v25 = a2[8];
      if (v24)
      {
        if (!v25)
          goto LABEL_25;
        if (a1[7] != a2[7] || v24 != v25)
        {
          v23 = 0;
          if ((sub_2408E617C() & 1) == 0)
            return v23 & 1;
        }
      }
      else if (v25)
      {
        goto LABEL_25;
      }
      v44 = v17;
      v26 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter(0);
      sub_2403A9210((uint64_t)a1 + *(int *)(v26 + 40), (uint64_t)v22, &qword_256FFA428);
      v43 = v26;
      sub_2403A9210((uint64_t)a2 + *(int *)(v26 + 40), (uint64_t)v20, &qword_256FFA428);
      v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
      sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA428);
      sub_2403A9210((uint64_t)v20, v27, &qword_256FFA428);
      v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (v28((uint64_t)v13, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v20, &qword_256FFA428);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA428);
        if (v28(v27, 1, v8) == 1)
        {
          sub_2403A97FC((uint64_t)v13, &qword_256FFA428);
LABEL_21:
          if ((sub_2408C35D4(a1[4], a2[4]) & 1) != 0
            && (sub_2408BEE38(a1[5], a2[5]) & 1) != 0
            && sub_2408C0E2C(a1[6], a2[6]))
          {
            v32 = v43;
            v33 = (char *)a1 + *(int *)(v43 + 44);
            v35 = v47;
            v34 = v48;
            v36 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
            v37 = v45;
            v36(v45, v33, v48);
            v38 = (char *)a2 + *(int *)(v32 + 44);
            v39 = v46;
            v36(v46, v38, v34);
            sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v23 = sub_2408E5CD8();
            v40 = *(void (**)(char *, uint64_t))(v35 + 8);
            v40(v39, v34);
            v40(v37, v34);
            return v23 & 1;
          }
LABEL_25:
          v23 = 0;
          return v23 & 1;
        }
      }
      else
      {
        v29 = v44;
        sub_2403A9210((uint64_t)v13, (uint64_t)v44, &qword_256FFA428);
        if (v28(v27, 1, v8) != 1)
        {
          v30 = v49;
          sub_2403A91CC(v27, (uint64_t)v49, type metadata accessor for ToolKitProtoTypeInstance);
          v31 = _s23LighthouseDataProcessor24ToolKitProtoTypeInstanceV2eeoiySbAC_ACtFZ_0(v29, v30);
          sub_240388AE4((uint64_t)v30, type metadata accessor for ToolKitProtoTypeInstance);
          sub_2403A97FC((uint64_t)v20, &qword_256FFA428);
          sub_2403A97FC((uint64_t)v22, &qword_256FFA428);
          sub_240388AE4((uint64_t)v29, type metadata accessor for ToolKitProtoTypeInstance);
          sub_2403A97FC((uint64_t)v13, &qword_256FFA428);
          if ((v31 & 1) == 0)
            goto LABEL_25;
          goto LABEL_21;
        }
        sub_2403A97FC((uint64_t)v20, &qword_256FFA428);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA428);
        sub_240388AE4((uint64_t)v29, type metadata accessor for ToolKitProtoTypeInstance);
      }
      sub_2403A97FC((uint64_t)v13, &qword_257000CB0);
      goto LABEL_25;
    }
  }
  return v23 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V9ParameterV12RelationshipV2eeoiySbAI_AItFZ_0(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;

  v4 = sub_2408E57A4();
  v44 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v40 - v7;
  v8 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v41 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015290);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C950);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v40 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v40 - v21;
  v23 = *a1;
  v24 = a1[1];
  v25 = *(_QWORD *)a2;
  v26 = *((_QWORD *)a2 + 1);
  v45 = a2;
  if (v23 == v25 && v24 == v26 || (v27 = 0, (sub_2408E617C() & 1) != 0))
  {
    v40 = v4;
    v28 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(0);
    sub_2403A9210((uint64_t)a1 + *(int *)(v28 + 20), (uint64_t)v22, &qword_25700C950);
    sub_2403A9210((uint64_t)&v45[*(int *)(v28 + 20)], (uint64_t)v20, &qword_25700C950);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_25700C950);
    sub_2403A9210((uint64_t)v20, v29, &qword_25700C950);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_25700C950);
      sub_2403A97FC((uint64_t)v22, &qword_25700C950);
      if (v30(v29, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_25700C950);
LABEL_11:
        v33 = v44;
        v34 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
        v35 = v42;
        v36 = v40;
        v34(v42, (char *)a1 + *(int *)(v28 + 24), v40);
        v37 = v43;
        v34(v43, &v45[*(int *)(v28 + 24)], v36);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v27 = sub_2408E5CD8();
        v38 = *(void (**)(char *, uint64_t))(v33 + 8);
        v38(v37, v36);
        v38(v35, v36);
        return v27 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_25700C950);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v41;
        sub_2403A91CC(v29, v41, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        v32 = _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V9ParameterV12RelationshipV8RelationV2eeoiySbAK_AKtFZ_0((uint64_t)v17, v31);
        sub_240388AE4(v31, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        sub_2403A97FC((uint64_t)v20, &qword_25700C950);
        sub_2403A97FC((uint64_t)v22, &qword_25700C950);
        sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        sub_2403A97FC((uint64_t)v13, &qword_25700C950);
        if ((v32 & 1) != 0)
          goto LABEL_11;
LABEL_12:
        v27 = 0;
        return v27 & 1;
      }
      sub_2403A97FC((uint64_t)v20, &qword_25700C950);
      sub_2403A97FC((uint64_t)v22, &qword_25700C950);
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    }
    sub_2403A97FC((uint64_t)v13, &qword_257015290);
    goto LABEL_12;
  }
  return v27 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V9ParameterV12RelationshipV8RelationV2eeoiySbAK_AKtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015258);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_25700C958);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C958);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C958);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C958);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C958);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind.== infix(_:_:)((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C958);
      sub_2403A97FC((uint64_t)v21, &qword_25700C958);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C958);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C958);
    sub_2403A97FC((uint64_t)v21, &qword_25700C958);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015258);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C958);
  sub_2403A97FC((uint64_t)v21, &qword_25700C958);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C958);
LABEL_8:
  v27 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t sub_2408A8298(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v6 = sub_2408E57A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  if ((sub_2408BAAE8(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8))
  {
    v14 = a3(0);
    v15 = a1 + *(int *)(v14 + 24);
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v16(v12, v15, v6);
    v16(v10, a2 + *(int *)(v14 + 24), v6);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v13 = sub_2408E5CD8();
    v17 = *(void (**)(char *, uint64_t))(v7 + 8);
    v17(v10, v6);
    v17(v12, v6);
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV09PrimitiveH0V7DecimalV2eeoiySbAG_AGtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, unsigned __int8 *, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = sub_2408E57A4();
  v4 = *(_QWORD *)(v55 - 8);
  v5 = MEMORY[0x24BDAC7A8](v55);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v46 - v8;
  v10 = sub_2408E575C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570155B0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8A8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v19 = MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v19);
  if (*a1 != *a2)
    goto LABEL_9;
  v53 = v4;
  v54 = v14;
  v50 = v13;
  v51 = v9;
  v52 = v7;
  if (*((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1))
    goto LABEL_9;
  v23 = (uint64_t)v16;
  v49 = v21;
  v24 = (char *)&v46 - v20;
  v25 = v22;
  v26 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal(0);
  sub_2403A9210((uint64_t)&a1[*(int *)(v26 + 24)], (uint64_t)v24, &qword_25700C8A8);
  v47 = a2;
  v48 = v26;
  sub_2403A9210((uint64_t)&a2[*(int *)(v26 + 24)], v25, &qword_25700C8A8);
  v27 = v23;
  v28 = v23 + *(int *)(v54 + 48);
  sub_2403A9210((uint64_t)v24, v23, &qword_25700C8A8);
  sub_2403A9210(v25, v28, &qword_25700C8A8);
  v29 = v11;
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v31 = v10;
  if (v30(v27, 1, v10) == 1)
  {
    sub_2403A97FC(v25, &qword_25700C8A8);
    sub_2403A97FC((uint64_t)v24, &qword_25700C8A8);
    if (v30(v28, 1, v10) == 1)
    {
      sub_2403A97FC(v27, &qword_25700C8A8);
LABEL_12:
      v39 = v48;
      v40 = v53;
      v41 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v53 + 16);
      v42 = v51;
      v43 = v55;
      v41(v51, &a1[*(int *)(v48 + 28)], v55);
      v44 = v52;
      v41(v52, &v47[*(int *)(v39 + 28)], v43);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v33 = sub_2408E5CD8();
      v45 = *(void (**)(char *, uint64_t))(v40 + 8);
      v45(v44, v43);
      v45(v42, v43);
      return v33 & 1;
    }
    goto LABEL_8;
  }
  v32 = v49;
  sub_2403A9210(v27, v49, &qword_25700C8A8);
  if (v30(v28, 1, v31) == 1)
  {
    sub_2403A97FC(v25, &qword_25700C8A8);
    sub_2403A97FC((uint64_t)v24, &qword_25700C8A8);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v32, v31);
LABEL_8:
    sub_2403A97FC(v27, &qword_2570155B0);
    goto LABEL_9;
  }
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  v36 = v50;
  v35(v50, v28, v31);
  sub_2404FA028(&qword_2570155B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BDE8], MEMORY[0x24BE5BDF8]);
  v37 = sub_2408E5CD8();
  v38 = *(void (**)(char *, uint64_t))(v29 + 8);
  v38(v36, v31);
  sub_2403A97FC(v25, &qword_25700C8A8);
  sub_2403A97FC((uint64_t)v24, &qword_25700C8A8);
  v38((char *)v32, v31);
  sub_2403A97FC(v27, &qword_25700C8A8);
  if ((v37 & 1) != 0)
    goto LABEL_12;
LABEL_9:
  v33 = 0;
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor22ToolKitProtoTypedValueV09PrimitiveH0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015598);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8A0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_25700C8A0);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_25700C8A0);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_25700C8A0);
  sub_2403A9210((uint64_t)v19, v22, &qword_25700C8A0);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_25700C8A0);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, (uint64_t)v37, type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind);
      _s23LighthouseDataProcessor22ToolKitProtoTypedValueV0def9PrimitiveH4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4((uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind);
      sub_2403A97FC((uint64_t)v19, &qword_25700C8A0);
      sub_2403A97FC((uint64_t)v21, &qword_25700C8A0);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind);
      sub_2403A97FC((uint64_t)v12, &qword_25700C8A0);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_25700C8A0);
    sub_2403A97FC((uint64_t)v21, &qword_25700C8A0);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015598);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_25700C8A0);
  sub_2403A97FC((uint64_t)v21, &qword_25700C8A0);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_25700C8A0);
LABEL_8:
  v27 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t sub_2408A8BF0(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_2408E57A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - v11;
  if (*a1 != *(_QWORD *)a2 || a1[1] != *((_QWORD *)a2 + 1))
  {
    v14 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v14 & 1;
  }
  v15 = a1[3];
  v16 = *((_QWORD *)a2 + 3);
  if (!v15)
  {
    if (!v16)
    {
LABEL_14:
      v17 = a3(0);
      v18 = (char *)a1 + *(int *)(v17 + 24);
      v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v19(v12, v18, v6);
      v19(v10, &a2[*(int *)(v17 + 24)], v6);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_2408E5CD8();
      v20 = *(void (**)(char *, uint64_t))(v7 + 8);
      v20(v10, v6);
      v20(v12, v6);
      return v14 & 1;
    }
LABEL_13:
    v14 = 0;
    return v14 & 1;
  }
  if (!v16)
    goto LABEL_13;
  if (a1[2] == *((_QWORD *)a2 + 2) && v15 == v16)
    goto LABEL_14;
  v14 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_14;
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V0D4IconV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015248);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA448);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA448);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA448);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA448);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA448);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
      v25 = _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V0defD8IconKindO2eeoiySbAG_AGtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA448);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA448);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA448);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA448);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA448);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257015248);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA448);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA448);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA448);
LABEL_8:
  v26 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor012ToolKitProtoD10DefinitionV8Version1V0D4IconV0d6SymbolI0V2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16))
    {
LABEL_7:
      v12 = 0;
      return v12 & 1;
    }
    if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)
      || (v12 = 0, (sub_2408E617C() & 1) != 0))
    {
      v14 = *(_QWORD *)(a1 + 48);
      v15 = *(_QWORD *)(a2 + 48);
      if (!v14)
      {
        if (v15)
          goto LABEL_7;
        goto LABEL_19;
      }
      if (!v15)
        goto LABEL_7;
      if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && v14 == v15 || (v12 = 0, (sub_2408E617C() & 1) != 0))
      {
LABEL_19:
        v16 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0);
        v17 = a1 + *(int *)(v16 + 32);
        v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v18(v10, v17, v4);
        v18(v8, a2 + *(int *)(v16 + 32), v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_2408E5CD8();
        v19 = *(void (**)(char *, uint64_t))(v5 + 8);
        v19(v8, v4);
        v19(v10, v4);
      }
    }
  }
  return v12 & 1;
}

unint64_t sub_2408A9308()
{
  unint64_t result;

  result = qword_2570140E0;
  if (!qword_2570140E0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRuntimePlatform, &type metadata for ToolKitProtoRuntimePlatform);
    atomic_store(result, (unint64_t *)&qword_2570140E0);
  }
  return result;
}

unint64_t sub_2408A9350()
{
  unint64_t result;

  result = qword_2570140E8;
  if (!qword_2570140E8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRuntimePlatform, &type metadata for ToolKitProtoRuntimePlatform);
    atomic_store(result, (unint64_t *)&qword_2570140E8);
  }
  return result;
}

uint64_t sub_2408A9394()
{
  return sub_2404FA028(&qword_2570140F0, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_2408A93C0()
{
  return sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_2408A93EC()
{
  return sub_2404FA028(&qword_257013C60, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_2408A9418()
{
  return sub_2404FA028(&qword_2570140F8, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
}

uint64_t sub_2408A9444()
{
  return sub_2404FA028(&qword_257014100, type metadata accessor for ToolKitProtoTypeIdentifier.Primitive, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier.Primitive);
}

uint64_t sub_2408A9470()
{
  return sub_2404FA028(&qword_257014108, type metadata accessor for ToolKitProtoTypeIdentifier.Primitive, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier.Primitive);
}

uint64_t sub_2408A949C()
{
  return sub_2404FA028(&qword_257013C68, type metadata accessor for ToolKitProtoTypeIdentifier.Primitive, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier.Primitive);
}

uint64_t sub_2408A94C8()
{
  return sub_2404FA028(&qword_257014110, type metadata accessor for ToolKitProtoTypeIdentifier.Primitive, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier.Primitive);
}

unint64_t sub_2408A94F8()
{
  unint64_t result;

  result = qword_257014118;
  if (!qword_257014118)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypeIdentifier.Primitive.MeasurementUnitType, &type metadata for ToolKitProtoTypeIdentifier.Primitive.MeasurementUnitType);
    atomic_store(result, (unint64_t *)&qword_257014118);
  }
  return result;
}

unint64_t sub_2408A9540()
{
  unint64_t result;

  result = qword_257014120;
  if (!qword_257014120)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypeIdentifier.Primitive.MeasurementUnitType, &type metadata for ToolKitProtoTypeIdentifier.Primitive.MeasurementUnitType);
    atomic_store(result, (unint64_t *)&qword_257014120);
  }
  return result;
}

uint64_t sub_2408A9584()
{
  return sub_2404FA028(&qword_257014128, type metadata accessor for ToolKitProtoTypeIdentifier.Custom, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier.Custom);
}

uint64_t sub_2408A95B0()
{
  return sub_2404FA028(&qword_257014130, type metadata accessor for ToolKitProtoTypeIdentifier.Custom, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier.Custom);
}

uint64_t sub_2408A95DC()
{
  return sub_2404FA028(&qword_257013C70, type metadata accessor for ToolKitProtoTypeIdentifier.Custom, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier.Custom);
}

uint64_t sub_2408A9608()
{
  return sub_2404FA028(&qword_257014138, type metadata accessor for ToolKitProtoTypeIdentifier.Custom, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier.Custom);
}

uint64_t sub_2408A9634()
{
  return sub_2404FA028(&qword_257014140, type metadata accessor for ToolKitProtoSystemTypeProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol);
}

uint64_t sub_2408A9660()
{
  return sub_2404FA028(&qword_257013CC0, type metadata accessor for ToolKitProtoSystemTypeProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol);
}

uint64_t sub_2408A968C()
{
  return sub_2404FA028(&qword_257013C78, type metadata accessor for ToolKitProtoSystemTypeProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol);
}

uint64_t sub_2408A96B8()
{
  return sub_2404FA028(&qword_257014148, type metadata accessor for ToolKitProtoSystemTypeProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol);
}

uint64_t sub_2408A96E4()
{
  return sub_2404FA028(&qword_257014150, type metadata accessor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity);
}

uint64_t sub_2408A9710()
{
  return sub_2404FA028(&qword_257014158, type metadata accessor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity);
}

uint64_t sub_2408A973C()
{
  return sub_2404FA028(&qword_257013C80, type metadata accessor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity);
}

uint64_t sub_2408A9768()
{
  return sub_2404FA028(&qword_257014160, type metadata accessor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.IntentUpdatableEntity);
}

uint64_t sub_2408A9794()
{
  return sub_2404FA028(&qword_257014168, type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.AssistantSchema);
}

uint64_t sub_2408A97C0()
{
  return sub_2404FA028(&qword_257014170, type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.AssistantSchema);
}

uint64_t sub_2408A97EC()
{
  return sub_2404FA028(&qword_257013C88, type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.AssistantSchema);
}

uint64_t sub_2408A9818()
{
  return sub_2404FA028(&qword_257014178, type metadata accessor for ToolKitProtoSystemTypeProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.AssistantSchema);
}

uint64_t sub_2408A9844()
{
  return sub_2404FA028(&qword_257014180, type metadata accessor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable);
}

uint64_t sub_2408A9870()
{
  return sub_2404FA028(&qword_257014188, type metadata accessor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable);
}

uint64_t sub_2408A989C()
{
  return sub_2404FA028(&qword_257013C90, type metadata accessor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable);
}

uint64_t sub_2408A98C8()
{
  return sub_2404FA028(&qword_257014190, type metadata accessor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemTypeProtocol.PersistentFileIdentifiable);
}

uint64_t sub_2408A98F4()
{
  return sub_2404FA028(&qword_257014198, type metadata accessor for ToolKitProtoTypeDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition);
}

uint64_t sub_2408A9920()
{
  return sub_2404FA028(&qword_2570141A0, type metadata accessor for ToolKitProtoTypeDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition);
}

uint64_t sub_2408A994C()
{
  return sub_2404FA028(&qword_257013C98, type metadata accessor for ToolKitProtoTypeDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition);
}

uint64_t sub_2408A9978()
{
  return sub_2404FA028(&qword_2570141A8, type metadata accessor for ToolKitProtoTypeDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition);
}

uint64_t sub_2408A99A4()
{
  return sub_2404FA028(&qword_2570141B0, type metadata accessor for ToolKitProtoTypeDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1);
}

uint64_t sub_2408A99D0()
{
  return sub_2404FA028(&qword_25700C530, type metadata accessor for ToolKitProtoTypeDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1);
}

uint64_t sub_2408A99FC()
{
  return sub_2404FA028(&qword_257013CA0, type metadata accessor for ToolKitProtoTypeDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1);
}

uint64_t sub_2408A9A28()
{
  return sub_2404FA028(&qword_2570141B8, type metadata accessor for ToolKitProtoTypeDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1);
}

uint64_t sub_2408A9A54()
{
  return sub_2404FA028(&qword_2570141C0, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity);
}

uint64_t sub_2408A9A80()
{
  return sub_2404FA028(&qword_2570141C8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity);
}

uint64_t sub_2408A9AAC()
{
  return sub_2404FA028(&qword_257013CD0, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity);
}

uint64_t sub_2408A9AD8()
{
  return sub_2404FA028(&qword_2570141D0, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity);
}

unint64_t sub_2408A9B08()
{
  unint64_t result;

  result = qword_2570141D8;
  if (!qword_2570141D8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.RuntimeFlags, &type metadata for ToolKitProtoTypeDefinition.Version1.Entity.RuntimeFlags);
    atomic_store(result, (unint64_t *)&qword_2570141D8);
  }
  return result;
}

unint64_t sub_2408A9B50()
{
  unint64_t result;

  result = qword_2570141E0;
  if (!qword_2570141E0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.RuntimeFlags, &type metadata for ToolKitProtoTypeDefinition.Version1.Entity.RuntimeFlags);
    atomic_store(result, (unint64_t *)&qword_2570141E0);
  }
  return result;
}

uint64_t sub_2408A9B94()
{
  return sub_2404FA028(&qword_2570141E8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t sub_2408A9BC0()
{
  return sub_2404FA028(&qword_257013CA8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t sub_2408A9BEC()
{
  return sub_2404FA028(&qword_257013CD8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t sub_2408A9C18()
{
  return sub_2404FA028(&qword_2570141F0, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Entity.Property);
}

uint64_t sub_2408A9C44()
{
  return sub_2404FA028(&qword_2570141F8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration);
}

uint64_t sub_2408A9C70()
{
  return sub_2404FA028(&qword_257014200, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration);
}

uint64_t sub_2408A9C9C()
{
  return sub_2404FA028(&qword_257013CE8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration);
}

uint64_t sub_2408A9CC8()
{
  return sub_2404FA028(&qword_257014208, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration);
}

unint64_t sub_2408A9CF8()
{
  unint64_t result;

  result = qword_257014210;
  if (!qword_257014210)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration.Kind, &type metadata for ToolKitProtoTypeDefinition.Version1.Enumeration.Kind);
    atomic_store(result, (unint64_t *)&qword_257014210);
  }
  return result;
}

unint64_t sub_2408A9D40()
{
  unint64_t result;

  result = qword_257014218;
  if (!qword_257014218)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration.Kind, &type metadata for ToolKitProtoTypeDefinition.Version1.Enumeration.Kind);
    atomic_store(result, (unint64_t *)&qword_257014218);
  }
  return result;
}

uint64_t sub_2408A9D84()
{
  return sub_2404FA028(&qword_257014220, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
}

uint64_t sub_2408A9DB0()
{
  return sub_2404FA028(&qword_257013CE0, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
}

uint64_t sub_2408A9DDC()
{
  return sub_2404FA028(&qword_257013CF0, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
}

uint64_t sub_2408A9E08()
{
  return sub_2404FA028(&qword_257014228, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
}

uint64_t sub_2408A9E34()
{
  return sub_2404FA028(&qword_257014230, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Query);
}

uint64_t sub_2408A9E60()
{
  return sub_2404FA028(&qword_257014238, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Query);
}

uint64_t sub_2408A9E8C()
{
  return sub_2404FA028(&qword_257013CF8, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Query);
}

uint64_t sub_2408A9EB8()
{
  return sub_2404FA028(&qword_257014240, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Query);
}

uint64_t sub_2408A9EE4()
{
  return sub_2404FA028(&qword_257014248, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
}

uint64_t sub_2408A9F10()
{
  return sub_2404FA028(&qword_257014250, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
}

uint64_t sub_2408A9F3C()
{
  return sub_2404FA028(&qword_257013D08, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
}

uint64_t sub_2408A9F68()
{
  return sub_2404FA028(&qword_257014258, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1.Query.PredicateTemplates);
}

uint64_t sub_2408A9F94()
{
  return sub_2404FA028(&qword_257014260, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t sub_2408A9FC0()
{
  return sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t sub_2408A9FEC()
{
  return sub_2404FA028(&qword_256FFE7F0, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t sub_2408AA018()
{
  return sub_2404FA028(&qword_257014268, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t sub_2408AA044()
{
  return sub_2404FA028(&qword_257014270, type metadata accessor for ToolKitProtoTypedValue.ID, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.ID);
}

uint64_t sub_2408AA070()
{
  return sub_2404FA028(&qword_257014278, type metadata accessor for ToolKitProtoTypedValue.ID, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.ID);
}

uint64_t sub_2408AA09C()
{
  return sub_2404FA028(&qword_257013D10, type metadata accessor for ToolKitProtoTypedValue.ID, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.ID);
}

uint64_t sub_2408AA0C8()
{
  return sub_2404FA028(&qword_257014280, type metadata accessor for ToolKitProtoTypedValue.ID, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.ID);
}

uint64_t sub_2408AA0F4()
{
  return sub_2404FA028(&qword_257014288, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue);
}

uint64_t sub_2408AA120()
{
  return sub_2404FA028(&qword_257014290, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue);
}

uint64_t sub_2408AA14C()
{
  return sub_2404FA028(&qword_257013D18, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue);
}

uint64_t sub_2408AA178()
{
  return sub_2404FA028(&qword_257014298, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue);
}

uint64_t sub_2408AA1A4()
{
  return sub_2404FA028(&qword_2570142A0, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
}

uint64_t sub_2408AA1D0()
{
  return sub_2404FA028((unint64_t *)&qword_2570142A8, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
}

uint64_t sub_2408AA1FC()
{
  return sub_2404FA028(&qword_257013D20, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
}

uint64_t sub_2408AA228()
{
  return sub_2404FA028(&qword_2570142B0, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Decimal);
}

unint64_t sub_2408AA258()
{
  unint64_t result;

  result = qword_2570142B8;
  if (!qword_2570142B8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Decimal.Sign, &type metadata for ToolKitProtoTypedValue.PrimitiveValue.Decimal.Sign);
    atomic_store(result, (unint64_t *)&qword_2570142B8);
  }
  return result;
}

unint64_t sub_2408AA2A0()
{
  unint64_t result;

  result = qword_2570142C0;
  if (!qword_2570142C0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Decimal.Sign, &type metadata for ToolKitProtoTypedValue.PrimitiveValue.Decimal.Sign);
    atomic_store(result, (unint64_t *)&qword_2570142C0);
  }
  return result;
}

uint64_t sub_2408AA2E4()
{
  return sub_2404FA028(&qword_2570142C8, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Measurement, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Measurement);
}

uint64_t sub_2408AA310()
{
  return sub_2404FA028(&qword_2570142D0, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Measurement, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Measurement);
}

uint64_t sub_2408AA33C()
{
  return sub_2404FA028(&qword_257013D28, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Measurement, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Measurement);
}

uint64_t sub_2408AA368()
{
  return sub_2404FA028(&qword_2570142D8, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Measurement, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Measurement);
}

uint64_t sub_2408AA394()
{
  return sub_2404FA028(&qword_2570142E0, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount);
}

uint64_t sub_2408AA3C0()
{
  return sub_2404FA028(&qword_2570142E8, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount);
}

uint64_t sub_2408AA3EC()
{
  return sub_2404FA028(&qword_257013D30, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount);
}

uint64_t sub_2408AA418()
{
  return sub_2404FA028(&qword_2570142F0, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.CurrencyAmount);
}

uint64_t sub_2408AA444()
{
  return sub_2404FA028(&qword_2570142F8, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod);
}

uint64_t sub_2408AA470()
{
  return sub_2404FA028(&qword_257014300, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod);
}

uint64_t sub_2408AA49C()
{
  return sub_2404FA028(&qword_257013D38, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod);
}

uint64_t sub_2408AA4C8()
{
  return sub_2404FA028(&qword_257014308, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod);
}

unint64_t sub_2408AA4F8()
{
  unint64_t result;

  result = qword_257014310;
  if (!qword_257014310)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod.TypeEnum, &type metadata for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_257014310);
  }
  return result;
}

unint64_t sub_2408AA540()
{
  unint64_t result;

  result = qword_257014318;
  if (!qword_257014318)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod.TypeEnum, &type metadata for ToolKitProtoTypedValue.PrimitiveValue.PaymentMethod.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_257014318);
  }
  return result;
}

uint64_t sub_2408AA584()
{
  return sub_2404FA028(&qword_257014320, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Placemark, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Placemark);
}

uint64_t sub_2408AA5B0()
{
  return sub_2404FA028(&qword_257014328, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Placemark, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Placemark);
}

uint64_t sub_2408AA5DC()
{
  return sub_2404FA028(&qword_257013D40, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Placemark, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Placemark);
}

uint64_t sub_2408AA608()
{
  return sub_2404FA028(&qword_257014330, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Placemark, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Placemark);
}

uint64_t sub_2408AA634()
{
  return sub_2404FA028(&qword_257014338, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Person, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Person);
}

uint64_t sub_2408AA660()
{
  return sub_2404FA028(&qword_257014340, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Person, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Person);
}

uint64_t sub_2408AA68C()
{
  return sub_2404FA028(&qword_257013D48, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Person, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Person);
}

uint64_t sub_2408AA6B8()
{
  return sub_2404FA028(&qword_257014348, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Person, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Person);
}

uint64_t sub_2408AA6E4()
{
  return sub_2404FA028(&qword_257014350, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.File, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.File);
}

uint64_t sub_2408AA710()
{
  return sub_2404FA028(&qword_257014358, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.File, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.File);
}

uint64_t sub_2408AA73C()
{
  return sub_2404FA028(&qword_257013D50, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.File, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.File);
}

uint64_t sub_2408AA768()
{
  return sub_2404FA028(&qword_257014360, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.File, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.File);
}

uint64_t sub_2408AA794()
{
  return sub_2404FA028(&qword_257014368, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.App);
}

uint64_t sub_2408AA7C0()
{
  return sub_2404FA028(&qword_257014370, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.App);
}

uint64_t sub_2408AA7EC()
{
  return sub_2404FA028(&qword_257013D58, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.App);
}

uint64_t sub_2408AA818()
{
  return sub_2404FA028(&qword_257014378, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.App);
}

uint64_t sub_2408AA844()
{
  return sub_2404FA028(&qword_257014380, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
}

uint64_t sub_2408AA870()
{
  return sub_2404FA028(&qword_257014388, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
}

uint64_t sub_2408AA89C()
{
  return sub_2404FA028(&qword_257013D60, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
}

uint64_t sub_2408AA8C8()
{
  return sub_2404FA028(&qword_257014390, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents);
}

unint64_t sub_2408AA8F8()
{
  unint64_t result;

  result = qword_257014398;
  if (!qword_257014398)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.CalendarIdentifier, &type metadata for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.CalendarIdentifier);
    atomic_store(result, (unint64_t *)&qword_257014398);
  }
  return result;
}

unint64_t sub_2408AA940()
{
  unint64_t result;

  result = qword_2570143A0;
  if (!qword_2570143A0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.CalendarIdentifier, &type metadata for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.CalendarIdentifier);
    atomic_store(result, (unint64_t *)&qword_2570143A0);
  }
  return result;
}

uint64_t sub_2408AA984()
{
  return sub_2404FA028(&qword_2570143A8, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
}

uint64_t sub_2408AA9B0()
{
  return sub_2404FA028(&qword_2570143B0, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
}

uint64_t sub_2408AA9DC()
{
  return sub_2404FA028(&qword_257013D68, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
}

uint64_t sub_2408AAA08()
{
  return sub_2404FA028(&qword_2570143B8, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.DateComponents.Calendar);
}

uint64_t sub_2408AAA34()
{
  return sub_2404FA028(&qword_2570143C0, type metadata accessor for ToolKitProtoTypedValue.EnumerationValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EnumerationValue);
}

uint64_t sub_2408AAA60()
{
  return sub_2404FA028(&qword_2570143C8, type metadata accessor for ToolKitProtoTypedValue.EnumerationValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EnumerationValue);
}

uint64_t sub_2408AAA8C()
{
  return sub_2404FA028(&qword_257013D70, type metadata accessor for ToolKitProtoTypedValue.EnumerationValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EnumerationValue);
}

uint64_t sub_2408AAAB8()
{
  return sub_2404FA028(&qword_2570143D0, type metadata accessor for ToolKitProtoTypedValue.EnumerationValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EnumerationValue);
}

uint64_t sub_2408AAAE4()
{
  return sub_2404FA028(&qword_2570143D8, type metadata accessor for ToolKitProtoTypedValue.EntityValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityValue);
}

uint64_t sub_2408AAB10()
{
  return sub_2404FA028(&qword_2570143E0, type metadata accessor for ToolKitProtoTypedValue.EntityValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityValue);
}

uint64_t sub_2408AAB3C()
{
  return sub_2404FA028(&qword_257013D78, type metadata accessor for ToolKitProtoTypedValue.EntityValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityValue);
}

uint64_t sub_2408AAB68()
{
  return sub_2404FA028(&qword_2570143E8, type metadata accessor for ToolKitProtoTypedValue.EntityValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityValue);
}

uint64_t sub_2408AAB94()
{
  return sub_2404FA028(&qword_2570143F0, type metadata accessor for ToolKitProtoTypedValue.CollectionValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.CollectionValue);
}

uint64_t sub_2408AABC0()
{
  return sub_2404FA028(&qword_2570143F8, type metadata accessor for ToolKitProtoTypedValue.CollectionValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.CollectionValue);
}

uint64_t sub_2408AABEC()
{
  return sub_2404FA028(&qword_257013D80, type metadata accessor for ToolKitProtoTypedValue.CollectionValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.CollectionValue);
}

uint64_t sub_2408AAC18()
{
  return sub_2404FA028(&qword_257014400, type metadata accessor for ToolKitProtoTypedValue.CollectionValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.CollectionValue);
}

uint64_t sub_2408AAC44()
{
  return sub_2404FA028(&qword_257014408, type metadata accessor for ToolKitProtoTypedValue.QueryValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.QueryValue);
}

uint64_t sub_2408AAC70()
{
  return sub_2404FA028(&qword_257014410, type metadata accessor for ToolKitProtoTypedValue.QueryValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.QueryValue);
}

uint64_t sub_2408AAC9C()
{
  return sub_2404FA028(&qword_257013D88, type metadata accessor for ToolKitProtoTypedValue.QueryValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.QueryValue);
}

uint64_t sub_2408AACC8()
{
  return sub_2404FA028(&qword_257014418, type metadata accessor for ToolKitProtoTypedValue.QueryValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.QueryValue);
}

uint64_t sub_2408AACF4()
{
  return sub_2404FA028(&qword_257014420, type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityIdentifierValue);
}

uint64_t sub_2408AAD20()
{
  return sub_2404FA028(&qword_257014428, type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityIdentifierValue);
}

uint64_t sub_2408AAD4C()
{
  return sub_2404FA028(&qword_257013D90, type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityIdentifierValue);
}

uint64_t sub_2408AAD78()
{
  return sub_2404FA028(&qword_257014430, type metadata accessor for ToolKitProtoTypedValue.EntityIdentifierValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.EntityIdentifierValue);
}

uint64_t sub_2408AADA4()
{
  return sub_2404FA028(&qword_257014438, type metadata accessor for ToolKitProtoTypedValue.DeferredValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue);
}

uint64_t sub_2408AADD0()
{
  return sub_2404FA028(&qword_257014440, type metadata accessor for ToolKitProtoTypedValue.DeferredValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue);
}

uint64_t sub_2408AADFC()
{
  return sub_2404FA028(&qword_257013D98, type metadata accessor for ToolKitProtoTypedValue.DeferredValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue);
}

uint64_t sub_2408AAE28()
{
  return sub_2404FA028(&qword_257014448, type metadata accessor for ToolKitProtoTypedValue.DeferredValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue);
}

uint64_t sub_2408AAE54()
{
  return sub_2404FA028(&qword_257014450, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage);
}

uint64_t sub_2408AAE80()
{
  return sub_2404FA028(&qword_257014458, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage);
}

uint64_t sub_2408AAEAC()
{
  return sub_2404FA028(&qword_257013DA0, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage);
}

uint64_t sub_2408AAED8()
{
  return sub_2404FA028(&qword_257014460, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage);
}

uint64_t sub_2408AAF04()
{
  return sub_2404FA028(&qword_257014468, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
}

uint64_t sub_2408AAF30()
{
  return sub_2404FA028(&qword_257014470, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
}

uint64_t sub_2408AAF5C()
{
  return sub_2404FA028(&qword_257013DA8, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
}

uint64_t sub_2408AAF88()
{
  return sub_2404FA028(&qword_257014478, type metadata accessor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue.DeferredValue.Storage.ContentItemPropertyStorage);
}

uint64_t sub_2408AAFB4()
{
  return sub_2404FA028(&qword_257014480, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
}

uint64_t sub_2408AAFE0()
{
  return sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
}

uint64_t sub_2408AB00C()
{
  return sub_2404FA028(&qword_257013DB0, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
}

uint64_t sub_2408AB038()
{
  return sub_2404FA028(&qword_257014488, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
}

uint64_t sub_2408AB064()
{
  return sub_2404FA028(&qword_257014490, type metadata accessor for ToolKitProtoTypeInstance.Optional, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Optional);
}

uint64_t sub_2408AB090()
{
  return sub_2404FA028(&qword_257014498, type metadata accessor for ToolKitProtoTypeInstance.Optional, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Optional);
}

uint64_t sub_2408AB0BC()
{
  return sub_2404FA028(&qword_257013DB8, type metadata accessor for ToolKitProtoTypeInstance.Optional, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Optional);
}

uint64_t sub_2408AB0E8()
{
  return sub_2404FA028(&qword_2570144A0, type metadata accessor for ToolKitProtoTypeInstance.Optional, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Optional);
}

uint64_t sub_2408AB114()
{
  return sub_2404FA028(&qword_2570144A8, type metadata accessor for ToolKitProtoTypeInstance.Union, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Union);
}

uint64_t sub_2408AB140()
{
  return sub_2404FA028(&qword_2570144B0, type metadata accessor for ToolKitProtoTypeInstance.Union, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Union);
}

uint64_t sub_2408AB16C()
{
  return sub_2404FA028(&qword_257013DC0, type metadata accessor for ToolKitProtoTypeInstance.Union, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Union);
}

uint64_t sub_2408AB198()
{
  return sub_2404FA028(&qword_2570144B8, type metadata accessor for ToolKitProtoTypeInstance.Union, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Union);
}

uint64_t sub_2408AB1C4()
{
  return sub_2404FA028(&qword_2570144C0, type metadata accessor for ToolKitProtoTypeInstance.Restricted, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Restricted);
}

uint64_t sub_2408AB1F0()
{
  return sub_2404FA028(&qword_2570144C8, type metadata accessor for ToolKitProtoTypeInstance.Restricted, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Restricted);
}

uint64_t sub_2408AB21C()
{
  return sub_2404FA028(&qword_257013DD0, type metadata accessor for ToolKitProtoTypeInstance.Restricted, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Restricted);
}

uint64_t sub_2408AB248()
{
  return sub_2404FA028(&qword_2570144D0, type metadata accessor for ToolKitProtoTypeInstance.Restricted, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Restricted);
}

uint64_t sub_2408AB274()
{
  return sub_2404FA028(&qword_2570144D8, type metadata accessor for ToolKitProtoTypeInstance.Deferred, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Deferred);
}

uint64_t sub_2408AB2A0()
{
  return sub_2404FA028(&qword_2570144E0, type metadata accessor for ToolKitProtoTypeInstance.Deferred, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Deferred);
}

uint64_t sub_2408AB2CC()
{
  return sub_2404FA028(&qword_257013DD8, type metadata accessor for ToolKitProtoTypeInstance.Deferred, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Deferred);
}

uint64_t sub_2408AB2F8()
{
  return sub_2404FA028(&qword_2570144E8, type metadata accessor for ToolKitProtoTypeInstance.Deferred, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance.Deferred);
}

uint64_t sub_2408AB324()
{
  return sub_2404FA028(&qword_2570144F0, type metadata accessor for ToolKitProtoRestrictionContext, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext);
}

uint64_t sub_2408AB350()
{
  return sub_2404FA028(&qword_257013DC8, type metadata accessor for ToolKitProtoRestrictionContext, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext);
}

uint64_t sub_2408AB37C()
{
  return sub_2404FA028(&qword_257013DE0, type metadata accessor for ToolKitProtoRestrictionContext, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext);
}

uint64_t sub_2408AB3A8()
{
  return sub_2404FA028(&qword_2570144F8, type metadata accessor for ToolKitProtoRestrictionContext, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext);
}

unint64_t sub_2408AB3D8()
{
  unint64_t result;

  result = qword_257014500;
  if (!qword_257014500)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRestrictionContext.PersonReachableAs, &type metadata for ToolKitProtoRestrictionContext.PersonReachableAs);
    atomic_store(result, (unint64_t *)&qword_257014500);
  }
  return result;
}

unint64_t sub_2408AB420()
{
  unint64_t result;

  result = qword_257014508;
  if (!qword_257014508)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRestrictionContext.PersonReachableAs, &type metadata for ToolKitProtoRestrictionContext.PersonReachableAs);
    atomic_store(result, (unint64_t *)&qword_257014508);
  }
  return result;
}

unint64_t sub_2408AB468()
{
  unint64_t result;

  result = qword_257014510;
  if (!qword_257014510)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRestrictionContext.DateExpressibleAs, &type metadata for ToolKitProtoRestrictionContext.DateExpressibleAs);
    atomic_store(result, (unint64_t *)&qword_257014510);
  }
  return result;
}

unint64_t sub_2408AB4B0()
{
  unint64_t result;

  result = qword_257014518;
  if (!qword_257014518)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRestrictionContext.DateExpressibleAs, &type metadata for ToolKitProtoRestrictionContext.DateExpressibleAs);
    atomic_store(result, (unint64_t *)&qword_257014518);
  }
  return result;
}

uint64_t sub_2408AB4F4()
{
  return sub_2404FA028(&qword_257014520, type metadata accessor for ToolKitProtoRestrictionContext.InSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet);
}

uint64_t sub_2408AB520()
{
  return sub_2404FA028(&qword_257014528, type metadata accessor for ToolKitProtoRestrictionContext.InSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet);
}

uint64_t sub_2408AB54C()
{
  return sub_2404FA028(&qword_257013DE8, type metadata accessor for ToolKitProtoRestrictionContext.InSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet);
}

uint64_t sub_2408AB578()
{
  return sub_2404FA028(&qword_257014530, type metadata accessor for ToolKitProtoRestrictionContext.InSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet);
}

uint64_t sub_2408AB5A4()
{
  return sub_2404FA028(&qword_257014538, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet);
}

uint64_t sub_2408AB5D0()
{
  return sub_2404FA028(&qword_257014540, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet);
}

uint64_t sub_2408AB5FC()
{
  return sub_2404FA028(&qword_257013DF0, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet);
}

uint64_t sub_2408AB628()
{
  return sub_2404FA028(&qword_257014548, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet);
}

uint64_t sub_2408AB654()
{
  return sub_2404FA028(&qword_257014550, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
}

uint64_t sub_2408AB680()
{
  return sub_2404FA028(&qword_257014558, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
}

uint64_t sub_2408AB6AC()
{
  return sub_2404FA028(&qword_257013DF8, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
}

uint64_t sub_2408AB6D8()
{
  return sub_2404FA028(&qword_257014560, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.DynamicEnumeration);
}

uint64_t sub_2408AB704()
{
  return sub_2404FA028(&qword_257014568, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
}

uint64_t sub_2408AB730()
{
  return sub_2404FA028(&qword_257014570, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
}

uint64_t sub_2408AB75C()
{
  return sub_2404FA028(&qword_257013E00, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
}

uint64_t sub_2408AB788()
{
  return sub_2404FA028(&qword_257014578, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.ContentPropertyPossibleValues);
}

uint64_t sub_2408AB7B4()
{
  return sub_2404FA028(&qword_257014580, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
}

uint64_t sub_2408AB7E0()
{
  return sub_2404FA028(&qword_257014588, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
}

uint64_t sub_2408AB80C()
{
  return sub_2404FA028(&qword_257013E08, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
}

uint64_t sub_2408AB838()
{
  return sub_2404FA028(&qword_257014590, type metadata accessor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery);
}

uint64_t sub_2408AB864()
{
  return sub_2404FA028(&qword_257014598, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.RepresentableAs);
}

uint64_t sub_2408AB890()
{
  return sub_2404FA028(&qword_2570145A0, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.RepresentableAs);
}

uint64_t sub_2408AB8BC()
{
  return sub_2404FA028(&qword_257013E10, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.RepresentableAs);
}

uint64_t sub_2408AB8E8()
{
  return sub_2404FA028(&qword_2570145A8, type metadata accessor for ToolKitProtoRestrictionContext.RepresentableAs, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.RepresentableAs);
}

uint64_t sub_2408AB914()
{
  return sub_2404FA028(&qword_2570145B0, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith);
}

uint64_t sub_2408AB940()
{
  return sub_2404FA028(&qword_2570145B8, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith);
}

uint64_t sub_2408AB96C()
{
  return sub_2404FA028(&qword_257013E18, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith);
}

uint64_t sub_2408AB998()
{
  return sub_2404FA028(&qword_2570145C0, type metadata accessor for ToolKitProtoRestrictionContext.TextTypedWith, (uint64_t)&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith);
}

unint64_t sub_2408AB9C8()
{
  unint64_t result;

  result = qword_2570145C8;
  if (!qword_2570145C8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith.AutocorrectionType, &type metadata for ToolKitProtoRestrictionContext.TextTypedWith.AutocorrectionType);
    atomic_store(result, (unint64_t *)&qword_2570145C8);
  }
  return result;
}

unint64_t sub_2408ABA10()
{
  unint64_t result;

  result = qword_2570145D0;
  if (!qword_2570145D0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith.AutocorrectionType, &type metadata for ToolKitProtoRestrictionContext.TextTypedWith.AutocorrectionType);
    atomic_store(result, (unint64_t *)&qword_2570145D0);
  }
  return result;
}

unint64_t sub_2408ABA58()
{
  unint64_t result;

  result = qword_2570145D8;
  if (!qword_2570145D8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith.KeyboardType, &type metadata for ToolKitProtoRestrictionContext.TextTypedWith.KeyboardType);
    atomic_store(result, (unint64_t *)&qword_2570145D8);
  }
  return result;
}

unint64_t sub_2408ABAA0()
{
  unint64_t result;

  result = qword_2570145E0;
  if (!qword_2570145E0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith.KeyboardType, &type metadata for ToolKitProtoRestrictionContext.TextTypedWith.KeyboardType);
    atomic_store(result, (unint64_t *)&qword_2570145E0);
  }
  return result;
}

unint64_t sub_2408ABAE8()
{
  unint64_t result;

  result = qword_2570145E8;
  if (!qword_2570145E8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith.CapitalizationType, &type metadata for ToolKitProtoRestrictionContext.TextTypedWith.CapitalizationType);
    atomic_store(result, (unint64_t *)&qword_2570145E8);
  }
  return result;
}

unint64_t sub_2408ABB30()
{
  unint64_t result;

  result = qword_2570145F0;
  if (!qword_2570145F0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRestrictionContext.TextTypedWith.CapitalizationType, &type metadata for ToolKitProtoRestrictionContext.TextTypedWith.CapitalizationType);
    atomic_store(result, (unint64_t *)&qword_2570145F0);
  }
  return result;
}

uint64_t sub_2408ABB74()
{
  return sub_2404FA028(&qword_2570145F8, type metadata accessor for ToolKitProtoContentItemClassDescriptor, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t sub_2408ABBA0()
{
  return sub_2404FA028(&qword_257014600, type metadata accessor for ToolKitProtoContentItemClassDescriptor, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t sub_2408ABBCC()
{
  return sub_2404FA028(&qword_257013E20, type metadata accessor for ToolKitProtoContentItemClassDescriptor, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t sub_2408ABBF8()
{
  return sub_2404FA028(&qword_257014608, type metadata accessor for ToolKitProtoContentItemClassDescriptor, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor);
}

uint64_t sub_2408ABC24()
{
  return sub_2404FA028(&qword_257014610, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
}

uint64_t sub_2408ABC50()
{
  return sub_2404FA028(&qword_257014618, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
}

uint64_t sub_2408ABC7C()
{
  return sub_2404FA028(&qword_257013E28, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
}

uint64_t sub_2408ABCA8()
{
  return sub_2404FA028(&qword_257014620, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEntityContentItemClass);
}

uint64_t sub_2408ABCD4()
{
  return sub_2404FA028(&qword_257014628, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
}

uint64_t sub_2408ABD00()
{
  return sub_2404FA028(&qword_257014630, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
}

uint64_t sub_2408ABD2C()
{
  return sub_2404FA028(&qword_257013E30, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
}

uint64_t sub_2408ABD58()
{
  return sub_2404FA028(&qword_257014638, type metadata accessor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass, (uint64_t)&protocol conformance descriptor for ToolKitProtoContentItemClassDescriptor.LinkEnumContentItemClass);
}

uint64_t sub_2408ABD84()
{
  return sub_2404FA028(&qword_257014640, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate);
}

uint64_t sub_2408ABDB0()
{
  return sub_2404FA028(&qword_257013E60, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate);
}

uint64_t sub_2408ABDDC()
{
  return sub_2404FA028(&qword_257013E38, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate);
}

uint64_t sub_2408ABE08()
{
  return sub_2404FA028(&qword_257014648, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate);
}

uint64_t sub_2408ABE34()
{
  return sub_2404FA028(&qword_257014650, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison);
}

uint64_t sub_2408ABE60()
{
  return sub_2404FA028(&qword_257014658, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison);
}

uint64_t sub_2408ABE8C()
{
  return sub_2404FA028(&qword_257013E40, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison);
}

uint64_t sub_2408ABEB8()
{
  return sub_2404FA028(&qword_257014660, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison);
}

uint64_t sub_2408ABEE4()
{
  return sub_2404FA028(&qword_257014668, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Pair);
}

uint64_t sub_2408ABF10()
{
  return sub_2404FA028(&qword_257014670, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Pair);
}

uint64_t sub_2408ABF3C()
{
  return sub_2404FA028(&qword_257013E48, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Pair);
}

uint64_t sub_2408ABF68()
{
  return sub_2404FA028(&qword_257014678, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Pair, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Pair);
}

uint64_t sub_2408ABF94()
{
  return sub_2404FA028(&qword_257014680, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Template);
}

uint64_t sub_2408ABFC0()
{
  return sub_2404FA028(&qword_257014688, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Template);
}

uint64_t sub_2408ABFEC()
{
  return sub_2404FA028(&qword_257013E50, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Template);
}

uint64_t sub_2408AC018()
{
  return sub_2404FA028(&qword_257014690, type metadata accessor for ToolKitProtoComparisonPredicate.Comparison.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Comparison.Template);
}

uint64_t sub_2408AC044()
{
  return sub_2404FA028(&qword_257014698, type metadata accessor for ToolKitProtoComparisonPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Template);
}

uint64_t sub_2408AC070()
{
  return sub_2404FA028(&qword_257013D00, type metadata accessor for ToolKitProtoComparisonPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Template);
}

uint64_t sub_2408AC09C()
{
  return sub_2404FA028(&qword_257013E58, type metadata accessor for ToolKitProtoComparisonPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Template);
}

uint64_t sub_2408AC0C8()
{
  return sub_2404FA028(&qword_2570146A0, type metadata accessor for ToolKitProtoComparisonPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoComparisonPredicate.Template);
}

uint64_t sub_2408AC0F4()
{
  return sub_2404FA028(&qword_2570146A8, type metadata accessor for ToolKitProtoCompoundPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoCompoundPredicate);
}

uint64_t sub_2408AC120()
{
  return sub_2404FA028(&qword_2570146B0, type metadata accessor for ToolKitProtoCompoundPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoCompoundPredicate);
}

uint64_t sub_2408AC14C()
{
  return sub_2404FA028(&qword_257013E68, type metadata accessor for ToolKitProtoCompoundPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoCompoundPredicate);
}

uint64_t sub_2408AC178()
{
  return sub_2404FA028(&qword_2570146B8, type metadata accessor for ToolKitProtoCompoundPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoCompoundPredicate);
}

unint64_t sub_2408AC1A8()
{
  unint64_t result;

  result = qword_2570146C0;
  if (!qword_2570146C0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoCompoundPredicate.Operator, &type metadata for ToolKitProtoCompoundPredicate.Operator);
    atomic_store(result, (unint64_t *)&qword_2570146C0);
  }
  return result;
}

unint64_t sub_2408AC1F0()
{
  unint64_t result;

  result = qword_2570146C8;
  if (!qword_2570146C8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoCompoundPredicate.Operator, &type metadata for ToolKitProtoCompoundPredicate.Operator);
    atomic_store(result, (unint64_t *)&qword_2570146C8);
  }
  return result;
}

uint64_t sub_2408AC234()
{
  return sub_2404FA028(&qword_2570146D0, type metadata accessor for ToolKitProtoStringSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate);
}

uint64_t sub_2408AC260()
{
  return sub_2404FA028(&qword_2570146D8, type metadata accessor for ToolKitProtoStringSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate);
}

uint64_t sub_2408AC28C()
{
  return sub_2404FA028(&qword_257013E70, type metadata accessor for ToolKitProtoStringSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate);
}

uint64_t sub_2408AC2B8()
{
  return sub_2404FA028(&qword_2570146E0, type metadata accessor for ToolKitProtoStringSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate);
}

uint64_t sub_2408AC2E4()
{
  return sub_2404FA028(&qword_2570146E8, type metadata accessor for ToolKitProtoStringSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate.Template);
}

uint64_t sub_2408AC310()
{
  return sub_2404FA028(&qword_2570146F0, type metadata accessor for ToolKitProtoStringSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate.Template);
}

uint64_t sub_2408AC33C()
{
  return sub_2404FA028(&qword_257013E78, type metadata accessor for ToolKitProtoStringSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate.Template);
}

uint64_t sub_2408AC368()
{
  return sub_2404FA028(&qword_2570146F8, type metadata accessor for ToolKitProtoStringSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoStringSearchPredicate.Template);
}

uint64_t sub_2408AC394()
{
  return sub_2404FA028(&qword_257014700, type metadata accessor for ToolKitProtoIdSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate);
}

uint64_t sub_2408AC3C0()
{
  return sub_2404FA028(&qword_257014708, type metadata accessor for ToolKitProtoIdSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate);
}

uint64_t sub_2408AC3EC()
{
  return sub_2404FA028(&qword_257013E80, type metadata accessor for ToolKitProtoIdSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate);
}

uint64_t sub_2408AC418()
{
  return sub_2404FA028(&qword_257014710, type metadata accessor for ToolKitProtoIdSearchPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate);
}

uint64_t sub_2408AC444()
{
  return sub_2404FA028(&qword_257014718, type metadata accessor for ToolKitProtoIdSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate.Template);
}

uint64_t sub_2408AC470()
{
  return sub_2404FA028(&qword_257014720, type metadata accessor for ToolKitProtoIdSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate.Template);
}

uint64_t sub_2408AC49C()
{
  return sub_2404FA028(&qword_257013E88, type metadata accessor for ToolKitProtoIdSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate.Template);
}

uint64_t sub_2408AC4C8()
{
  return sub_2404FA028(&qword_257014728, type metadata accessor for ToolKitProtoIdSearchPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoIdSearchPredicate.Template);
}

uint64_t sub_2408AC4F4()
{
  return sub_2404FA028(&qword_257014730, type metadata accessor for ToolKitProtoSearchableItemPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate);
}

uint64_t sub_2408AC520()
{
  return sub_2404FA028(&qword_257014738, type metadata accessor for ToolKitProtoSearchableItemPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate);
}

uint64_t sub_2408AC54C()
{
  return sub_2404FA028(&qword_257013E90, type metadata accessor for ToolKitProtoSearchableItemPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate);
}

uint64_t sub_2408AC578()
{
  return sub_2404FA028(&qword_257014740, type metadata accessor for ToolKitProtoSearchableItemPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate);
}

uint64_t sub_2408AC5A4()
{
  return sub_2404FA028(&qword_257014748, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate.Template);
}

uint64_t sub_2408AC5D0()
{
  return sub_2404FA028(&qword_257014750, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate.Template);
}

uint64_t sub_2408AC5FC()
{
  return sub_2404FA028(&qword_257013E98, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate.Template);
}

uint64_t sub_2408AC628()
{
  return sub_2404FA028(&qword_257014758, type metadata accessor for ToolKitProtoSearchableItemPredicate.Template, (uint64_t)&protocol conformance descriptor for ToolKitProtoSearchableItemPredicate.Template);
}

uint64_t sub_2408AC654()
{
  return sub_2404FA028(&qword_257014760, type metadata accessor for ToolKitProtoAllPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoAllPredicate);
}

uint64_t sub_2408AC680()
{
  return sub_2404FA028(&qword_257014768, type metadata accessor for ToolKitProtoAllPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoAllPredicate);
}

uint64_t sub_2408AC6AC()
{
  return sub_2404FA028(&qword_257013EA0, type metadata accessor for ToolKitProtoAllPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoAllPredicate);
}

uint64_t sub_2408AC6D8()
{
  return sub_2404FA028(&qword_257014770, type metadata accessor for ToolKitProtoAllPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoAllPredicate);
}

uint64_t sub_2408AC704()
{
  return sub_2404FA028(&qword_257014778, type metadata accessor for ToolKitProtoValidPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoValidPredicate);
}

uint64_t sub_2408AC730()
{
  return sub_2404FA028(&qword_257014780, type metadata accessor for ToolKitProtoValidPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoValidPredicate);
}

uint64_t sub_2408AC75C()
{
  return sub_2404FA028(&qword_257013EA8, type metadata accessor for ToolKitProtoValidPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoValidPredicate);
}

uint64_t sub_2408AC788()
{
  return sub_2404FA028(&qword_257014788, type metadata accessor for ToolKitProtoValidPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoValidPredicate);
}

uint64_t sub_2408AC7B4()
{
  return sub_2404FA028(&qword_257014790, type metadata accessor for ToolKitProtoSuggestedPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSuggestedPredicate);
}

uint64_t sub_2408AC7E0()
{
  return sub_2404FA028(&qword_257014798, type metadata accessor for ToolKitProtoSuggestedPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSuggestedPredicate);
}

uint64_t sub_2408AC80C()
{
  return sub_2404FA028(&qword_257013EB0, type metadata accessor for ToolKitProtoSuggestedPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSuggestedPredicate);
}

uint64_t sub_2408AC838()
{
  return sub_2404FA028(&qword_2570147A0, type metadata accessor for ToolKitProtoSuggestedPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoSuggestedPredicate);
}

uint64_t sub_2408AC864()
{
  return sub_2404FA028(&qword_2570147A8, type metadata accessor for ToolKitProtoQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery);
}

uint64_t sub_2408AC890()
{
  return sub_2404FA028(&qword_2570147B0, type metadata accessor for ToolKitProtoQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery);
}

uint64_t sub_2408AC8BC()
{
  return sub_2404FA028(&qword_257013EB8, type metadata accessor for ToolKitProtoQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery);
}

uint64_t sub_2408AC8E8()
{
  return sub_2404FA028(&qword_2570147B8, type metadata accessor for ToolKitProtoQuery, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery);
}

unint64_t sub_2408AC918()
{
  unint64_t result;

  result = qword_2570147C0;
  if (!qword_2570147C0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoQuery.SortOrder, &type metadata for ToolKitProtoQuery.SortOrder);
    atomic_store(result, (unint64_t *)&qword_2570147C0);
  }
  return result;
}

unint64_t sub_2408AC960()
{
  unint64_t result;

  result = qword_2570147C8;
  if (!qword_2570147C8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoQuery.SortOrder, &type metadata for ToolKitProtoQuery.SortOrder);
    atomic_store(result, (unint64_t *)&qword_2570147C8);
  }
  return result;
}

uint64_t sub_2408AC9A4()
{
  return sub_2404FA028(&qword_2570147D0, type metadata accessor for ToolKitProtoQuery.AnyPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery.AnyPredicate);
}

uint64_t sub_2408AC9D0()
{
  return sub_2404FA028(&qword_2570147D8, type metadata accessor for ToolKitProtoQuery.AnyPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery.AnyPredicate);
}

uint64_t sub_2408AC9FC()
{
  return sub_2404FA028(&qword_257013EC0, type metadata accessor for ToolKitProtoQuery.AnyPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery.AnyPredicate);
}

uint64_t sub_2408ACA28()
{
  return sub_2404FA028(&qword_2570147E0, type metadata accessor for ToolKitProtoQuery.AnyPredicate, (uint64_t)&protocol conformance descriptor for ToolKitProtoQuery.AnyPredicate);
}

uint64_t sub_2408ACA54()
{
  return sub_2404FA028(&qword_2570147E8, type metadata accessor for ToolKitProtoRuntimePlatformVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t sub_2408ACA80()
{
  return sub_2404FA028(&qword_2570147F0, type metadata accessor for ToolKitProtoRuntimePlatformVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t sub_2408ACAAC()
{
  return sub_2404FA028(&qword_257013EC8, type metadata accessor for ToolKitProtoRuntimePlatformVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t sub_2408ACAD8()
{
  return sub_2404FA028(&qword_2570147F8, type metadata accessor for ToolKitProtoRuntimePlatformVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimePlatformVersion);
}

uint64_t sub_2408ACB04()
{
  return sub_2404FA028(&qword_257014800, type metadata accessor for ToolKitProtoRuntimeRequirement, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement);
}

uint64_t sub_2408ACB30()
{
  return sub_2404FA028(&qword_257013CB0, type metadata accessor for ToolKitProtoRuntimeRequirement, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement);
}

uint64_t sub_2408ACB5C()
{
  return sub_2404FA028(&qword_257013ED0, type metadata accessor for ToolKitProtoRuntimeRequirement, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement);
}

uint64_t sub_2408ACB88()
{
  return sub_2404FA028(&qword_257014808, type metadata accessor for ToolKitProtoRuntimeRequirement, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement);
}

unint64_t sub_2408ACBB8()
{
  unint64_t result;

  result = qword_257014810;
  if (!qword_257014810)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceState, &type metadata for ToolKitProtoRuntimeRequirement.DeviceState);
    atomic_store(result, (unint64_t *)&qword_257014810);
  }
  return result;
}

unint64_t sub_2408ACC00()
{
  unint64_t result;

  result = qword_257014818;
  if (!qword_257014818)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceState, &type metadata for ToolKitProtoRuntimeRequirement.DeviceState);
    atomic_store(result, (unint64_t *)&qword_257014818);
  }
  return result;
}

uint64_t sub_2408ACC44()
{
  return sub_2404FA028(&qword_257014820, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
}

uint64_t sub_2408ACC70()
{
  return sub_2404FA028(&qword_257014828, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
}

uint64_t sub_2408ACC9C()
{
  return sub_2404FA028(&qword_257013ED8, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
}

uint64_t sub_2408ACCC8()
{
  return sub_2404FA028(&qword_257014830, type metadata accessor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.AvailabilityAnnotation);
}

uint64_t sub_2408ACCF4()
{
  return sub_2404FA028(&qword_257014838, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability);
}

uint64_t sub_2408ACD20()
{
  return sub_2404FA028(&qword_257014840, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability);
}

uint64_t sub_2408ACD4C()
{
  return sub_2404FA028(&qword_257013EE0, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability);
}

uint64_t sub_2408ACD78()
{
  return sub_2404FA028(&qword_257014848, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability);
}

uint64_t sub_2408ACDA4()
{
  return sub_2404FA028(&qword_257014850, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
}

uint64_t sub_2408ACDD0()
{
  return sub_2404FA028(&qword_257014858, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
}

uint64_t sub_2408ACDFC()
{
  return sub_2404FA028(&qword_257013EE8, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
}

uint64_t sub_2408ACE28()
{
  return sub_2404FA028(&qword_257014860, type metadata accessor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.DeviceCapability.MobileGestalt);
}

uint64_t sub_2408ACE54()
{
  return sub_2404FA028(&qword_257014868, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.FeatureFlag);
}

uint64_t sub_2408ACE80()
{
  return sub_2404FA028(&qword_257014870, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.FeatureFlag);
}

uint64_t sub_2408ACEAC()
{
  return sub_2404FA028(&qword_257013EF0, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.FeatureFlag);
}

uint64_t sub_2408ACED8()
{
  return sub_2404FA028(&qword_257014878, type metadata accessor for ToolKitProtoRuntimeRequirement.FeatureFlag, (uint64_t)&protocol conformance descriptor for ToolKitProtoRuntimeRequirement.FeatureFlag);
}

uint64_t sub_2408ACF04()
{
  return sub_2404FA028(&qword_257014880, type metadata accessor for ToolKitProtoToolSummaryString, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString);
}

uint64_t sub_2408ACF30()
{
  return sub_2404FA028(&qword_257014888, type metadata accessor for ToolKitProtoToolSummaryString, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString);
}

uint64_t sub_2408ACF5C()
{
  return sub_2404FA028(&qword_257013F00, type metadata accessor for ToolKitProtoToolSummaryString, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString);
}

uint64_t sub_2408ACF88()
{
  return sub_2404FA028(&qword_257014890, type metadata accessor for ToolKitProtoToolSummaryString, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString);
}

uint64_t sub_2408ACFB4()
{
  return sub_2404FA028(&qword_257014898, type metadata accessor for ToolKitProtoToolSummaryString.Component, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString.Component);
}

uint64_t sub_2408ACFE0()
{
  return sub_2404FA028(&qword_257013EF8, type metadata accessor for ToolKitProtoToolSummaryString.Component, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString.Component);
}

uint64_t sub_2408AD00C()
{
  return sub_2404FA028(&qword_257013F08, type metadata accessor for ToolKitProtoToolSummaryString.Component, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString.Component);
}

uint64_t sub_2408AD038()
{
  return sub_2404FA028(&qword_2570148A0, type metadata accessor for ToolKitProtoToolSummaryString.Component, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolSummaryString.Component);
}

uint64_t sub_2408AD064()
{
  return sub_2404FA028(&qword_2570148A8, type metadata accessor for ToolKitProtoToolInvocationSignature, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature);
}

uint64_t sub_2408AD090()
{
  return sub_2404FA028(&qword_2570148B0, type metadata accessor for ToolKitProtoToolInvocationSignature, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature);
}

uint64_t sub_2408AD0BC()
{
  return sub_2404FA028(&qword_257013F20, type metadata accessor for ToolKitProtoToolInvocationSignature, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature);
}

uint64_t sub_2408AD0E8()
{
  return sub_2404FA028(&qword_2570148B8, type metadata accessor for ToolKitProtoToolInvocationSignature, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature);
}

uint64_t sub_2408AD114()
{
  return sub_2404FA028(&qword_2570148C0, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations);
}

uint64_t sub_2408AD140()
{
  return sub_2404FA028(&qword_257013F10, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations);
}

uint64_t sub_2408AD16C()
{
  return sub_2404FA028(&qword_257013F18, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations);
}

uint64_t sub_2408AD198()
{
  return sub_2404FA028(&qword_2570148C8, type metadata accessor for ToolKitProtoToolInvocationSignature.ListOfRelations, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolInvocationSignature.ListOfRelations);
}

uint64_t sub_2408AD1C4()
{
  return sub_2404FA028(&qword_2570148D0, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
}

uint64_t sub_2408AD1F0()
{
  return sub_2404FA028(&qword_257013CB8, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
}

uint64_t sub_2408AD21C()
{
  return sub_2404FA028(&qword_257013F30, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
}

uint64_t sub_2408AD248()
{
  return sub_2404FA028(&qword_2570148D8, type metadata accessor for ToolKitProtoSampleInvocationDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoSampleInvocationDefinition);
}

uint64_t sub_2408AD274()
{
  return sub_2404FA028(&qword_2570148E0, type metadata accessor for ToolKitProtoAssistantSchemaVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaVersion);
}

uint64_t sub_2408AD2A0()
{
  return sub_2404FA028(&qword_2570148E8, type metadata accessor for ToolKitProtoAssistantSchemaVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaVersion);
}

uint64_t sub_2408AD2CC()
{
  return sub_2404FA028(&qword_257013F38, type metadata accessor for ToolKitProtoAssistantSchemaVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaVersion);
}

uint64_t sub_2408AD2F8()
{
  return sub_2404FA028(&qword_2570148F0, type metadata accessor for ToolKitProtoAssistantSchemaVersion, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaVersion);
}

uint64_t sub_2408AD324()
{
  return sub_2404FA028(&qword_2570148F8, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_2408AD350()
{
  return sub_2404FA028(&qword_25700C540, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_2408AD37C()
{
  return sub_2404FA028(&qword_257013F40, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_2408AD3A8()
{
  return sub_2404FA028(&qword_257014900, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
}

uint64_t sub_2408AD3D4()
{
  return sub_2404FA028(&qword_257014908, type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantToolSchemaDefinition);
}

uint64_t sub_2408AD400()
{
  return sub_2404FA028(&qword_257014910, type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantToolSchemaDefinition);
}

uint64_t sub_2408AD42C()
{
  return sub_2404FA028(&qword_257013F50, type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantToolSchemaDefinition);
}

uint64_t sub_2408AD458()
{
  return sub_2404FA028(&qword_257014918, type metadata accessor for ToolKitProtoAssistantToolSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantToolSchemaDefinition);
}

uint64_t sub_2408AD484()
{
  return sub_2404FA028(&qword_257014920, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition);
}

uint64_t sub_2408AD4B0()
{
  return sub_2404FA028(&qword_257014928, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition);
}

uint64_t sub_2408AD4DC()
{
  return sub_2404FA028(&qword_257013F58, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition);
}

uint64_t sub_2408AD508()
{
  return sub_2404FA028(&qword_257014930, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition);
}

uint64_t sub_2408AD534()
{
  return sub_2404FA028(&qword_257014938, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
}

uint64_t sub_2408AD560()
{
  return sub_2404FA028(&qword_257014940, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
}

uint64_t sub_2408AD58C()
{
  return sub_2404FA028(&qword_257013F60, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
}

uint64_t sub_2408AD5B8()
{
  return sub_2404FA028(&qword_257014948, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Entity, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Entity);
}

uint64_t sub_2408AD5E4()
{
  return sub_2404FA028(&qword_257014950, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
}

uint64_t sub_2408AD610()
{
  return sub_2404FA028(&qword_257014958, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
}

uint64_t sub_2408AD63C()
{
  return sub_2404FA028(&qword_257013F68, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
}

uint64_t sub_2408AD668()
{
  return sub_2404FA028(&qword_257014960, type metadata accessor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantTypeSchemaDefinition.Enumeration);
}

uint64_t sub_2408AD694()
{
  return sub_2404FA028(&qword_257014968, type metadata accessor for ToolKitProtoSystemToolProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol);
}

uint64_t sub_2408AD6C0()
{
  return sub_2404FA028(&qword_257013FD0, type metadata accessor for ToolKitProtoSystemToolProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol);
}

uint64_t sub_2408AD6EC()
{
  return sub_2404FA028(&qword_257013F70, type metadata accessor for ToolKitProtoSystemToolProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol);
}

uint64_t sub_2408AD718()
{
  return sub_2404FA028(&qword_257014970, type metadata accessor for ToolKitProtoSystemToolProtocol, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol);
}

uint64_t sub_2408AD744()
{
  return sub_2404FA028(&qword_257014978, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
}

uint64_t sub_2408AD770()
{
  return sub_2404FA028(&qword_257014980, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
}

uint64_t sub_2408AD79C()
{
  return sub_2404FA028(&qword_257013F78, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
}

uint64_t sub_2408AD7C8()
{
  return sub_2404FA028(&qword_257014988, type metadata accessor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ConditionallyEnabled);
}

uint64_t sub_2408AD7F4()
{
  return sub_2404FA028(&qword_257014990, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PlayVideo);
}

uint64_t sub_2408AD820()
{
  return sub_2404FA028(&qword_257014998, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PlayVideo);
}

uint64_t sub_2408AD84C()
{
  return sub_2404FA028(&qword_257013F80, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PlayVideo);
}

uint64_t sub_2408AD878()
{
  return sub_2404FA028(&qword_2570149A0, type metadata accessor for ToolKitProtoSystemToolProtocol.PlayVideo, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PlayVideo);
}

uint64_t sub_2408AD8A4()
{
  return sub_2404FA028(&qword_2570149A8, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
}

uint64_t sub_2408AD8D0()
{
  return sub_2404FA028(&qword_2570149B0, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
}

uint64_t sub_2408AD8FC()
{
  return sub_2404FA028(&qword_257013F88, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
}

uint64_t sub_2408AD928()
{
  return sub_2404FA028(&qword_2570149B8, type metadata accessor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.ShowInAppStringSearchResults);
}

uint64_t sub_2408AD954()
{
  return sub_2404FA028(&qword_2570149C0, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.EntityUpdating);
}

uint64_t sub_2408AD980()
{
  return sub_2404FA028(&qword_2570149C8, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.EntityUpdating);
}

uint64_t sub_2408AD9AC()
{
  return sub_2404FA028(&qword_257013F90, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.EntityUpdating);
}

uint64_t sub_2408AD9D8()
{
  return sub_2404FA028(&qword_2570149D0, type metadata accessor for ToolKitProtoSystemToolProtocol.EntityUpdating, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.EntityUpdating);
}

uint64_t sub_2408ADA04()
{
  return sub_2404FA028(&qword_2570149D8, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
}

uint64_t sub_2408ADA30()
{
  return sub_2404FA028(&qword_2570149E0, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
}

uint64_t sub_2408ADA5C()
{
  return sub_2404FA028(&qword_257013F98, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
}

uint64_t sub_2408ADA88()
{
  return sub_2404FA028(&qword_2570149E8, type metadata accessor for ToolKitProtoSystemToolProtocol.PropertyUpdater, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.PropertyUpdater);
}

uint64_t sub_2408ADAB4()
{
  return sub_2404FA028(&qword_2570149F0, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
}

uint64_t sub_2408ADAE0()
{
  return sub_2404FA028(&qword_2570149F8, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
}

uint64_t sub_2408ADB0C()
{
  return sub_2404FA028(&qword_257013FA0, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
}

uint64_t sub_2408ADB38()
{
  return sub_2404FA028(&qword_257014A00, type metadata accessor for ToolKitProtoSystemToolProtocol.SiriKitIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.SiriKitIntent);
}

uint64_t sub_2408ADB64()
{
  return sub_2404FA028(&qword_257014A08, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
}

uint64_t sub_2408ADB90()
{
  return sub_2404FA028(&qword_257014A10, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
}

uint64_t sub_2408ADBBC()
{
  return sub_2404FA028(&qword_257013FA8, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
}

uint64_t sub_2408ADBE8()
{
  return sub_2404FA028(&qword_257014A18, type metadata accessor for ToolKitProtoSystemToolProtocol.IntentSideEffect, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.IntentSideEffect);
}

uint64_t sub_2408ADC14()
{
  return sub_2404FA028(&qword_257014A20, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AssistantSchema);
}

uint64_t sub_2408ADC40()
{
  return sub_2404FA028(&qword_257014A28, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AssistantSchema);
}

uint64_t sub_2408ADC6C()
{
  return sub_2404FA028(&qword_257013FB0, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AssistantSchema);
}

uint64_t sub_2408ADC98()
{
  return sub_2404FA028(&qword_257014A30, type metadata accessor for ToolKitProtoSystemToolProtocol.AssistantSchema, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AssistantSchema);
}

uint64_t sub_2408ADCC4()
{
  return sub_2404FA028(&qword_257014A38, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AppIntent);
}

uint64_t sub_2408ADCF0()
{
  return sub_2404FA028(&qword_257014A40, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AppIntent);
}

uint64_t sub_2408ADD1C()
{
  return sub_2404FA028(&qword_257013FB8, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AppIntent);
}

uint64_t sub_2408ADD48()
{
  return sub_2404FA028(&qword_257014A48, type metadata accessor for ToolKitProtoSystemToolProtocol.AppIntent, (uint64_t)&protocol conformance descriptor for ToolKitProtoSystemToolProtocol.AppIntent);
}

uint64_t sub_2408ADD74()
{
  return sub_2404FA028(&qword_257014A50, type metadata accessor for ToolKitProtoToolDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition);
}

uint64_t sub_2408ADDA0()
{
  return sub_2404FA028(&qword_257014A58, type metadata accessor for ToolKitProtoToolDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition);
}

uint64_t sub_2408ADDCC()
{
  return sub_2404FA028(&qword_257013FC0, type metadata accessor for ToolKitProtoToolDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition);
}

uint64_t sub_2408ADDF8()
{
  return sub_2404FA028(&qword_257014A60, type metadata accessor for ToolKitProtoToolDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition);
}

uint64_t sub_2408ADE24()
{
  return sub_2404FA028(&qword_257014A68, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
}

uint64_t sub_2408ADE50()
{
  return sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
}

uint64_t sub_2408ADE7C()
{
  return sub_2404FA028(&qword_257013FD8, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
}

uint64_t sub_2408ADEA8()
{
  return sub_2404FA028(&qword_257014A70, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
}

unint64_t sub_2408ADED8()
{
  unint64_t result;

  result = qword_257014A78;
  if (!qword_257014A78)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolType, &type metadata for ToolKitProtoToolDefinition.Version1.ToolType);
    atomic_store(result, (unint64_t *)&qword_257014A78);
  }
  return result;
}

unint64_t sub_2408ADF20()
{
  unint64_t result;

  result = qword_257014A80;
  if (!qword_257014A80)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolType, &type metadata for ToolKitProtoToolDefinition.Version1.ToolType);
    atomic_store(result, (unint64_t *)&qword_257014A80);
  }
  return result;
}

unint64_t sub_2408ADF68()
{
  unint64_t result;

  result = qword_257014A88;
  if (!qword_257014A88)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Flag, &type metadata for ToolKitProtoToolDefinition.Version1.Flag);
    atomic_store(result, (unint64_t *)&qword_257014A88);
  }
  return result;
}

unint64_t sub_2408ADFB0()
{
  unint64_t result;

  result = qword_257014A90;
  if (!qword_257014A90)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Flag, &type metadata for ToolKitProtoToolDefinition.Version1.Flag);
    atomic_store(result, (unint64_t *)&qword_257014A90);
  }
  return result;
}

unint64_t sub_2408ADFF8()
{
  unint64_t result;

  result = qword_257014A98;
  if (!qword_257014A98)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.VisibilityFlag, &type metadata for ToolKitProtoToolDefinition.Version1.VisibilityFlag);
    atomic_store(result, (unint64_t *)&qword_257014A98);
  }
  return result;
}

unint64_t sub_2408AE040()
{
  unint64_t result;

  result = qword_257014AA0;
  if (!qword_257014AA0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.VisibilityFlag, &type metadata for ToolKitProtoToolDefinition.Version1.VisibilityFlag);
    atomic_store(result, (unint64_t *)&qword_257014AA0);
  }
  return result;
}

unint64_t sub_2408AE088()
{
  unint64_t result;

  result = qword_257014AA8;
  if (!qword_257014AA8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.AuthenticationPolicy, &type metadata for ToolKitProtoToolDefinition.Version1.AuthenticationPolicy);
    atomic_store(result, (unint64_t *)&qword_257014AA8);
  }
  return result;
}

unint64_t sub_2408AE0D0()
{
  unint64_t result;

  result = qword_257014AB0;
  if (!qword_257014AB0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.AuthenticationPolicy, &type metadata for ToolKitProtoToolDefinition.Version1.AuthenticationPolicy);
    atomic_store(result, (unint64_t *)&qword_257014AB0);
  }
  return result;
}

uint64_t sub_2408AE114()
{
  return sub_2404FA028(&qword_257014AB8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
}

uint64_t sub_2408AE140()
{
  return sub_2404FA028(&qword_257013F48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
}

uint64_t sub_2408AE16C()
{
  return sub_2404FA028(&qword_257013FE8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
}

uint64_t sub_2408AE198()
{
  return sub_2404FA028(&qword_257014AC0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter);
}

unint64_t sub_2408AE1C8()
{
  unint64_t result;

  result = qword_257014AC8;
  if (!qword_257014AC8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.ParameterFlags, &type metadata for ToolKitProtoToolDefinition.Version1.Parameter.ParameterFlags);
    atomic_store(result, (unint64_t *)&qword_257014AC8);
  }
  return result;
}

unint64_t sub_2408AE210()
{
  unint64_t result;

  result = qword_257014AD0;
  if (!qword_257014AD0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.ParameterFlags, &type metadata for ToolKitProtoToolDefinition.Version1.Parameter.ParameterFlags);
    atomic_store(result, (unint64_t *)&qword_257014AD0);
  }
  return result;
}

uint64_t sub_2408AE254()
{
  return sub_2404FA028(&qword_257014AD8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
}

uint64_t sub_2408AE280()
{
  return sub_2404FA028(&qword_257013FE0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
}

uint64_t sub_2408AE2AC()
{
  return sub_2404FA028(&qword_257013FF0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
}

uint64_t sub_2408AE2D8()
{
  return sub_2404FA028(&qword_257014AE0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
}

uint64_t sub_2408AE304()
{
  return sub_2404FA028(&qword_257014AE8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

uint64_t sub_2408AE330()
{
  return sub_2404FA028(&qword_257013F28, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

uint64_t sub_2408AE35C()
{
  return sub_2404FA028(&qword_257013FF8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

uint64_t sub_2408AE388()
{
  return sub_2404FA028(&qword_257014AF0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
}

uint64_t sub_2408AE3B4()
{
  return sub_2404FA028(&qword_257014AF8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
}

uint64_t sub_2408AE3E0()
{
  return sub_2404FA028(&qword_257014B00, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
}

uint64_t sub_2408AE40C()
{
  return sub_2404FA028(&qword_257014000, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
}

uint64_t sub_2408AE438()
{
  return sub_2404FA028(&qword_257014B08, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Equals);
}

uint64_t sub_2408AE464()
{
  return sub_2404FA028(&qword_257014B10, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
}

uint64_t sub_2408AE490()
{
  return sub_2404FA028(&qword_257014B18, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
}

uint64_t sub_2408AE4BC()
{
  return sub_2404FA028(&qword_257014008, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
}

uint64_t sub_2408AE4E8()
{
  return sub_2404FA028(&qword_257014B20, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.NotEquals);
}

uint64_t sub_2408AE514()
{
  return sub_2404FA028(&qword_257014B28, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
}

uint64_t sub_2408AE540()
{
  return sub_2404FA028(&qword_257014B30, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
}

uint64_t sub_2408AE56C()
{
  return sub_2404FA028(&qword_257014010, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
}

uint64_t sub_2408AE598()
{
  return sub_2404FA028(&qword_257014B38, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.GreaterThan);
}

uint64_t sub_2408AE5C4()
{
  return sub_2404FA028(&qword_257014B40, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
}

uint64_t sub_2408AE5F0()
{
  return sub_2404FA028(&qword_257014B48, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
}

uint64_t sub_2408AE61C()
{
  return sub_2404FA028(&qword_257014018, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
}

uint64_t sub_2408AE648()
{
  return sub_2404FA028(&qword_257014B50, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.LessThan);
}

uint64_t sub_2408AE674()
{
  return sub_2404FA028(&qword_257014B58, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
}

uint64_t sub_2408AE6A0()
{
  return sub_2404FA028(&qword_257014B60, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
}

uint64_t sub_2408AE6CC()
{
  return sub_2404FA028(&qword_257014020, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
}

uint64_t sub_2408AE6F8()
{
  return sub_2404FA028(&qword_257014B68, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.Contains);
}

uint64_t sub_2408AE724()
{
  return sub_2404FA028(&qword_257014B70, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
}

uint64_t sub_2408AE750()
{
  return sub_2404FA028(&qword_257014B78, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
}

uint64_t sub_2408AE77C()
{
  return sub_2404FA028(&qword_257014028, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
}

uint64_t sub_2408AE7A8()
{
  return sub_2404FA028(&qword_257014B80, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation.DoesNotContain);
}

uint64_t sub_2408AE7D4()
{
  return sub_2404FA028(&qword_257014B88, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Category);
}

uint64_t sub_2408AE800()
{
  return sub_2404FA028(&qword_257013FC8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Category);
}

uint64_t sub_2408AE82C()
{
  return sub_2404FA028(&qword_257014030, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Category);
}

uint64_t sub_2408AE858()
{
  return sub_2404FA028(&qword_257014B90, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Category);
}

uint64_t sub_2408AE884()
{
  return sub_2404FA028(&qword_257014B98, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon);
}

uint64_t sub_2408AE8B0()
{
  return sub_2404FA028(&qword_257014BA0, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon);
}

uint64_t sub_2408AE8DC()
{
  return sub_2404FA028(&qword_257014038, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon);
}

uint64_t sub_2408AE908()
{
  return sub_2404FA028(&qword_257014BA8, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon);
}

unint64_t sub_2408AE938()
{
  unint64_t result;

  result = qword_257014BB0;
  if (!qword_257014BB0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIconStyle, &type metadata for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIconStyle);
    atomic_store(result, (unint64_t *)&qword_257014BB0);
  }
  return result;
}

unint64_t sub_2408AE980()
{
  unint64_t result;

  result = qword_257014BB8;
  if (!qword_257014BB8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIconStyle, &type metadata for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIconStyle);
    atomic_store(result, (unint64_t *)&qword_257014BB8);
  }
  return result;
}

uint64_t sub_2408AE9C4()
{
  return sub_2404FA028(&qword_257014BC0, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
}

uint64_t sub_2408AE9F0()
{
  return sub_2404FA028(&qword_257014BC8, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
}

uint64_t sub_2408AEA1C()
{
  return sub_2404FA028(&qword_257014040, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
}

uint64_t sub_2408AEA48()
{
  return sub_2404FA028(&qword_257014BD0, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon);
}

uint64_t sub_2408AEA74()
{
  return sub_2404FA028(&qword_257014BD8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Deprecation);
}

uint64_t sub_2408AEAA0()
{
  return sub_2404FA028(&qword_257014BE0, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Deprecation);
}

uint64_t sub_2408AEACC()
{
  return sub_2404FA028(&qword_257014048, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Deprecation);
}

uint64_t sub_2408AEAF8()
{
  return sub_2404FA028(&qword_257014BE8, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1.Deprecation);
}

uint64_t sub_2408AEB24()
{
  return sub_2404FA028(&qword_257014BF0, type metadata accessor for ToolKitProtoAppDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition);
}

uint64_t sub_2408AEB50()
{
  return sub_2404FA028(&qword_257014BF8, type metadata accessor for ToolKitProtoAppDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition);
}

uint64_t sub_2408AEB7C()
{
  return sub_2404FA028(&qword_257014050, type metadata accessor for ToolKitProtoAppDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition);
}

uint64_t sub_2408AEBA8()
{
  return sub_2404FA028(&qword_257014C00, type metadata accessor for ToolKitProtoAppDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition);
}

unint64_t sub_2408AEBD8()
{
  unint64_t result;

  result = qword_257014C08;
  if (!qword_257014C08)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoAppDefinition.Origin, &type metadata for ToolKitProtoAppDefinition.Origin);
    atomic_store(result, (unint64_t *)&qword_257014C08);
  }
  return result;
}

unint64_t sub_2408AEC20()
{
  unint64_t result;

  result = qword_257014C10;
  if (!qword_257014C10)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoAppDefinition.Origin, &type metadata for ToolKitProtoAppDefinition.Origin);
    atomic_store(result, (unint64_t *)&qword_257014C10);
  }
  return result;
}

uint64_t sub_2408AEC64()
{
  return sub_2404FA028(&qword_257014C18, type metadata accessor for ToolKitProtoAppDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition.Device);
}

uint64_t sub_2408AEC90()
{
  return sub_2404FA028(&qword_257014C20, type metadata accessor for ToolKitProtoAppDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition.Device);
}

uint64_t sub_2408AECBC()
{
  return sub_2404FA028(&qword_257014058, type metadata accessor for ToolKitProtoAppDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition.Device);
}

uint64_t sub_2408AECE8()
{
  return sub_2404FA028(&qword_257014C28, type metadata accessor for ToolKitProtoAppDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoAppDefinition.Device);
}

uint64_t sub_2408AED14()
{
  return sub_2404FA028(&qword_257014C30, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
}

uint64_t sub_2408AED40()
{
  return sub_2404FA028(&qword_257014C38, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
}

uint64_t sub_2408AED6C()
{
  return sub_2404FA028(&qword_257014060, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
}

uint64_t sub_2408AED98()
{
  return sub_2404FA028(&qword_257014C40, type metadata accessor for ToolKitProtoContainerDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition);
}

unint64_t sub_2408AEDC8()
{
  unint64_t result;

  result = qword_257014C48;
  if (!qword_257014C48)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoContainerDefinition.Origin, &type metadata for ToolKitProtoContainerDefinition.Origin);
    atomic_store(result, (unint64_t *)&qword_257014C48);
  }
  return result;
}

unint64_t sub_2408AEE10()
{
  unint64_t result;

  result = qword_257014C50;
  if (!qword_257014C50)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoContainerDefinition.Origin, &type metadata for ToolKitProtoContainerDefinition.Origin);
    atomic_store(result, (unint64_t *)&qword_257014C50);
  }
  return result;
}

unint64_t sub_2408AEE58()
{
  unint64_t result;

  result = qword_257014C58;
  if (!qword_257014C58)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoContainerDefinition.TypeEnum, &type metadata for ToolKitProtoContainerDefinition.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_257014C58);
  }
  return result;
}

unint64_t sub_2408AEEA0()
{
  unint64_t result;

  result = qword_257014C60;
  if (!qword_257014C60)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoContainerDefinition.TypeEnum, &type metadata for ToolKitProtoContainerDefinition.TypeEnum);
    atomic_store(result, (unint64_t *)&qword_257014C60);
  }
  return result;
}

uint64_t sub_2408AEEE4()
{
  return sub_2404FA028(&qword_257014C68, type metadata accessor for ToolKitProtoContainerDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition.Device);
}

uint64_t sub_2408AEF10()
{
  return sub_2404FA028(&qword_257014C70, type metadata accessor for ToolKitProtoContainerDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition.Device);
}

uint64_t sub_2408AEF3C()
{
  return sub_2404FA028(&qword_257014068, type metadata accessor for ToolKitProtoContainerDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition.Device);
}

uint64_t sub_2408AEF68()
{
  return sub_2404FA028(&qword_257014C78, type metadata accessor for ToolKitProtoContainerDefinition.Device, (uint64_t)&protocol conformance descriptor for ToolKitProtoContainerDefinition.Device);
}

uint64_t sub_2408AEF94()
{
  return sub_2404FA028(&qword_257014C80, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
}

uint64_t sub_2408AEFC0()
{
  return sub_2404FA028(&qword_2570016E0, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
}

uint64_t sub_2408AEFEC()
{
  return sub_2404FA028(&qword_257014070, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
}

uint64_t sub_2408AF018()
{
  return sub_2404FA028(&qword_257014C88, type metadata accessor for ToolKitProtoTypeDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDisplayRepresentation);
}

uint64_t sub_2408AF044()
{
  return sub_2404FA028(&qword_257014C90, type metadata accessor for ToolKitProtoPluginModelData, (uint64_t)&protocol conformance descriptor for ToolKitProtoPluginModelData);
}

uint64_t sub_2408AF070()
{
  return sub_2404FA028(&qword_257014C98, type metadata accessor for ToolKitProtoPluginModelData, (uint64_t)&protocol conformance descriptor for ToolKitProtoPluginModelData);
}

uint64_t sub_2408AF09C()
{
  return sub_2404FA028(&qword_257014078, type metadata accessor for ToolKitProtoPluginModelData, (uint64_t)&protocol conformance descriptor for ToolKitProtoPluginModelData);
}

uint64_t sub_2408AF0C8()
{
  return sub_2404FA028(&qword_257014CA0, type metadata accessor for ToolKitProtoPluginModelData, (uint64_t)&protocol conformance descriptor for ToolKitProtoPluginModelData);
}

uint64_t sub_2408AF0F4()
{
  return sub_2404FA028(&qword_257014CA8, type metadata accessor for ToolKitProtoDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
}

uint64_t sub_2408AF120()
{
  return sub_2404FA028(&qword_257014CB0, type metadata accessor for ToolKitProtoDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
}

uint64_t sub_2408AF14C()
{
  return sub_2404FA028(&qword_257014080, type metadata accessor for ToolKitProtoDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
}

uint64_t sub_2408AF178()
{
  return sub_2404FA028(&qword_257014CB8, type metadata accessor for ToolKitProtoDisplayRepresentation, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation);
}

uint64_t sub_2408AF1A4()
{
  return sub_2404FA028(&qword_257014CC0, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
}

uint64_t sub_2408AF1D0()
{
  return sub_2404FA028(&qword_257014CC8, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
}

uint64_t sub_2408AF1FC()
{
  return sub_2404FA028(&qword_257014088, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
}

uint64_t sub_2408AF228()
{
  return sub_2404FA028(&qword_257014CD0, type metadata accessor for ToolKitProtoDisplayRepresentation.Storage, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Storage);
}

uint64_t sub_2408AF254()
{
  return sub_2404FA028(&qword_257014CD8, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle);
}

uint64_t sub_2408AF280()
{
  return sub_2404FA028(&qword_257014CE0, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle);
}

uint64_t sub_2408AF2AC()
{
  return sub_2404FA028(&qword_257014090, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle);
}

uint64_t sub_2408AF2D8()
{
  return sub_2404FA028(&qword_257014CE8, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle);
}

uint64_t sub_2408AF304()
{
  return sub_2404FA028(&qword_257014CF0, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

uint64_t sub_2408AF330()
{
  return sub_2404FA028(&qword_257014CF8, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

uint64_t sub_2408AF35C()
{
  return sub_2404FA028(&qword_257014098, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

uint64_t sub_2408AF388()
{
  return sub_2404FA028(&qword_257014D00, type metadata accessor for ToolKitProtoDisplayRepresentation.Subtitle.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Subtitle.Static);
}

uint64_t sub_2408AF3B4()
{
  return sub_2404FA028(&qword_257014D08, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText);
}

uint64_t sub_2408AF3E0()
{
  return sub_2404FA028(&qword_257014D10, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText);
}

uint64_t sub_2408AF40C()
{
  return sub_2404FA028(&qword_2570140A0, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText);
}

uint64_t sub_2408AF438()
{
  return sub_2404FA028(&qword_257014D18, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText);
}

uint64_t sub_2408AF464()
{
  return sub_2404FA028(&qword_257014D20, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t sub_2408AF490()
{
  return sub_2404FA028(&qword_257014D28, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t sub_2408AF4BC()
{
  return sub_2404FA028(&qword_2570140A8, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t sub_2408AF4E8()
{
  return sub_2404FA028(&qword_257014D30, type metadata accessor for ToolKitProtoDisplayRepresentation.AltText.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.AltText.Static);
}

uint64_t sub_2408AF514()
{
  return sub_2404FA028(&qword_257014D38, type metadata accessor for ToolKitProtoDisplayRepresentation.Image, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image);
}

uint64_t sub_2408AF540()
{
  return sub_2404FA028(&qword_257014D40, type metadata accessor for ToolKitProtoDisplayRepresentation.Image, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image);
}

uint64_t sub_2408AF56C()
{
  return sub_2404FA028(&qword_2570140B0, type metadata accessor for ToolKitProtoDisplayRepresentation.Image, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image);
}

uint64_t sub_2408AF598()
{
  return sub_2404FA028(&qword_257014D48, type metadata accessor for ToolKitProtoDisplayRepresentation.Image, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image);
}

uint64_t sub_2408AF5C4()
{
  return sub_2404FA028(&qword_257014D50, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static);
}

uint64_t sub_2408AF5F0()
{
  return sub_2404FA028(&qword_257014D58, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static);
}

uint64_t sub_2408AF61C()
{
  return sub_2404FA028(&qword_2570140B8, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static);
}

uint64_t sub_2408AF648()
{
  return sub_2404FA028(&qword_257014D60, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static);
}

uint64_t sub_2408AF674()
{
  return sub_2404FA028(&qword_257014D68, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
}

uint64_t sub_2408AF6A0()
{
  return sub_2404FA028(&qword_257014D70, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
}

uint64_t sub_2408AF6CC()
{
  return sub_2404FA028(&qword_2570140C0, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
}

uint64_t sub_2408AF6F8()
{
  return sub_2404FA028(&qword_257014D78, type metadata accessor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol, (uint64_t)&protocol conformance descriptor for ToolKitProtoDisplayRepresentation.Image.Static.Symbol);
}

uint64_t sub_2408AF724()
{
  return sub_2404FA028(&qword_257014D80, type metadata accessor for ToolKitProtoCoercionDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoCoercionDefinition);
}

uint64_t sub_2408AF750()
{
  return sub_2404FA028(&qword_257013CC8, type metadata accessor for ToolKitProtoCoercionDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoCoercionDefinition);
}

uint64_t sub_2408AF77C()
{
  return sub_2404FA028(&qword_2570140C8, type metadata accessor for ToolKitProtoCoercionDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoCoercionDefinition);
}

uint64_t sub_2408AF7A8()
{
  return sub_2404FA028(&qword_257014D88, type metadata accessor for ToolKitProtoCoercionDefinition, (uint64_t)&protocol conformance descriptor for ToolKitProtoCoercionDefinition);
}

unint64_t sub_2408AF7D8()
{
  unint64_t result;

  result = qword_257014D90;
  if (!qword_257014D90)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoCoercionDefinition.CoercionDirection, &type metadata for ToolKitProtoCoercionDefinition.CoercionDirection);
    atomic_store(result, (unint64_t *)&qword_257014D90);
  }
  return result;
}

unint64_t sub_2408AF820()
{
  unint64_t result;

  result = qword_257014D98;
  if (!qword_257014D98)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoCoercionDefinition.CoercionDirection, &type metadata for ToolKitProtoCoercionDefinition.CoercionDirection);
    atomic_store(result, (unint64_t *)&qword_257014D98);
  }
  return result;
}

uint64_t sub_2408AF864()
{
  return sub_2404FA028(&qword_257014DA0, type metadata accessor for ToolKitProtoToolDefinitionClosure, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure);
}

uint64_t sub_2408AF890()
{
  return sub_2404FA028(&qword_257014DA8, type metadata accessor for ToolKitProtoToolDefinitionClosure, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure);
}

uint64_t sub_2408AF8BC()
{
  return sub_2404FA028(&qword_2570140D0, type metadata accessor for ToolKitProtoToolDefinitionClosure, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure);
}

uint64_t sub_2408AF8E8()
{
  return sub_2404FA028(&qword_257014DB0, type metadata accessor for ToolKitProtoToolDefinitionClosure, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure);
}

uint64_t sub_2408AF914()
{
  return sub_2404FA028(&qword_257014DB8, type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure.Version1);
}

uint64_t sub_2408AF940()
{
  return sub_2404FA028(&qword_257014DC0, type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure.Version1);
}

uint64_t sub_2408AF96C()
{
  return sub_2404FA028(&qword_2570140D8, type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure.Version1);
}

uint64_t sub_2408AF998()
{
  return sub_2404FA028(&qword_257014DC8, type metadata accessor for ToolKitProtoToolDefinitionClosure.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinitionClosure.Version1);
}

uint64_t sub_2408AF9CC()
{
  return swift_deallocObject();
}

unint64_t sub_2408AF9DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257015538;
  if (!qword_257015538)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257015530);
    result = MEMORY[0x242684578](MEMORY[0x24BE5BF38], v1);
    atomic_store(result, (unint64_t *)&qword_257015538);
  }
  return result;
}

uint64_t ToolKitProtoStringSearchPredicate.Template.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoIdSearchPredicate.Template.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoSearchableItemPredicate.Template.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoTypeDefinition.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoValidPredicate.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoSuggestedPredicate.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoAllPredicate.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

uint64_t ToolKitProtoToolDefinitionClosure.traverse<A>(visitor:)()
{
  return ToolKitProtoToolDefinition.traverse<A>(visitor:)();
}

id sub_2408AFADC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t updated;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  _QWORD v30[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (unsigned int *)((char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001510);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  v13 = *(_QWORD *)(updated - 8);
  MEMORY[0x24BDAC7A8](updated);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_257001510);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, updated) != 1)
  {
    sub_2403A91CC((uint64_t)v11, (uint64_t)v15, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94DB0]), sel_init);
    sub_2403A9210((uint64_t)&v15[*(int *)(updated + 24)], (uint64_t)v4, &qword_256FFA300);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_2403A97FC((uint64_t)v4, &qword_256FFA300);
    }
    else
    {
      sub_2403A91CC((uint64_t)v4, (uint64_t)v8, type metadata accessor for TranscriptProtoStatementID);
      if (v16)
      {
        v17 = objc_allocWithZone(MEMORY[0x24BE94FD8]);
        v18 = v16;
        v19 = objc_msgSend(v17, sel_init);
        objc_msgSend(v18, sel_setLhs_, v19);

        v20 = objc_msgSend(v18, sel_lhs);
        if (v20)
        {
          v21 = v20;
          objc_msgSend(v20, sel_setIndex_, *v8);

        }
      }
      sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoStatementID);
    }
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94DC0]), sel_init);
    if (v22)
    {
      v23 = v22;
      swift_bridgeObjectRetain();
      v24 = (void *)sub_2408E5CE4();
      swift_bridgeObjectRelease();
      objc_msgSend(v23, sel_setParameterName_, v24);

      if (!v16)
      {

LABEL_19:
        sub_240388AE4((uint64_t)v15, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
        return v16;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F0);
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_240900470;
      *(_QWORD *)(v25 + 32) = v23;
      v30[1] = v25;
      sub_2408E5DB0();
      sub_2408AFE9C();
      v26 = v16;
      v27 = v23;
      v28 = (void *)sub_2408E5D8C();
      swift_bridgeObjectRelease();
      objc_msgSend(v26, sel_setPaths_, v28);

    }
    if ((v15[16] & 1) != 0)
    {
      if (v16)
        objc_msgSend(v16, sel_setKind_, 2);
    }
    else if (v16)
    {
      objc_msgSend(v16, sel_setKind_, 1);
    }
    goto LABEL_19;
  }
  sub_2403A97FC((uint64_t)v11, &qword_257001510);
  return 0;
}

unint64_t sub_2408AFE9C()
{
  unint64_t result;

  result = qword_257015668;
  if (!qword_257015668)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257015668);
  }
  return result;
}

id sub_2408AFED8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v20;

  v2 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94F30]), sel_init);
  sub_2408B00CC(a1, (uint64_t)v7);
  v9 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) != 1)
  {
    sub_2408B0114((uint64_t)v7, (uint64_t)v4);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94EB0]), sel_init);
    v11 = v10;
    if (v10)
    {
      v12 = v10;
      v13 = (void *)sub_2408E5CE4();
      objc_msgSend(v12, sel_setDomain_, v13);

    }
    if (v8
      && (v14 = objc_allocWithZone(MEMORY[0x24BE94F38]),
          v15 = v8,
          v16 = objc_msgSend(v14, sel_init),
          objc_msgSend(v15, sel_setPlanGenerationModelOutputError_, v16),
          v15,
          v16,
          (v17 = objc_msgSend(v15, sel_planGenerationModelOutputError)) != 0))
    {
      v18 = v17;
      objc_msgSend(v17, sel_setError_, v11);

      sub_2408B0158((uint64_t)v4);
    }
    else
    {
      sub_2408B0158((uint64_t)v4);

    }
  }
  return v8;
}

uint64_t sub_2408B00CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408B0114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408B0158(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void TranscriptProtoPayloadEnum.eventTypeString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_2403AE1A4(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_2408B0234 + 4 * word_24091D3A8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2408B0234()
{
  uint64_t v0;

  sub_240388AE4(v0, type metadata accessor for TranscriptProtoPayloadEnum);
  return 0x536E6F6973736553;
}

void sub_2408B08BC()
{
  JUMPOUT(0x2408B08A4);
}

void sub_2408B08DC()
{
  JUMPOUT(0x2408B08A4);
}

void TranscriptProtoPayloadEnum.payloadType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_2403AE1A4(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_2408B0984 + 4 * byte_24091D404[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2408B0984()
{
  uint64_t v0;
  _BYTE *v1;

  *v1 = 43;
  return sub_240388AE4(v0, type metadata accessor for TranscriptProtoPayloadEnum);
}

void sub_2408B0B14()
{
  _BYTE *v0;

  *v0 = 7;
  JUMPOUT(0x2408B0B00);
}

void sub_2408B0B20()
{
  _BYTE *v0;

  *v0 = 11;
  JUMPOUT(0x2408B0B00);
}

void sub_2408B0B2C()
{
  _BYTE *v0;

  *v0 = 12;
  JUMPOUT(0x2408B0B00);
}

BOOL static TranscriptProtoPayloadEnum.PayloadType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t TranscriptProtoStatementID.asExprID.getter()
{
  sub_2408E6170();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  return 101;
}

uint64_t TranscriptProtoEvent.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v8);
  v33 = (uint64_t)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = 0;
  v35 = 0xE000000000000000;
  sub_2408E5F84();
  sub_2408E5D50();
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  v13 = (int *)type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(v0 + v13[14], (uint64_t)v12, &qword_256FFA498);
  v14 = sub_2408E5750();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA498);
  }
  else
  {
    v16 = sub_2408E5624();
    v31[1] = v31;
    v32 = v7;
    v17 = v13;
    v18 = *(_QWORD *)(v16 - 8);
    MEMORY[0x24BDAC7A8](v16);
    v20 = v4;
    v21 = (char *)v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_2408E5744();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    sub_2408E5588();
    v22 = *(void (**)(char *, uint64_t))(v18 + 8);
    v13 = v17;
    v7 = v32;
    v23 = v21;
    v4 = v20;
    v22(v23, v16);
  }
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  sub_2403A9210(v0 + v13[11], (uint64_t)v7, &qword_256FFA490);
  v24 = type metadata accessor for TranscriptProtoPayload(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v7, 1, v24) == 1)
  {
    v25 = &qword_256FFA490;
    v26 = (uint64_t)v7;
LABEL_8:
    sub_2403A97FC(v26, v25);
    goto LABEL_10;
  }
  v27 = v33;
  sub_2403A9210((uint64_t)v7, v33, &qword_256FFA488);
  sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPayload);
  v28 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v27, 1, v28) == 1)
  {
    v25 = &qword_256FFA488;
    v26 = v27;
    goto LABEL_8;
  }
  TranscriptProtoPayloadEnum.eventTypeString.getter();
  sub_240388AE4(v27, type metadata accessor for TranscriptProtoPayloadEnum);
LABEL_10:
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  sub_2403A9210(v1 + v13[16], (uint64_t)v4, &qword_256FFA4B0);
  v29 = type metadata accessor for TranscriptProtoSpanID(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v4, 1, v29) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA4B0);
  }
  else
  {
    sub_2404FA028(&qword_256FFF6A0, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
    sub_2408E599C();
    sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSpanID);
  }
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  return v34;
}

void TranscriptProtoStatementOutcomeEnum.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  MEMORY[0x24BDAC7A8](v1);
  sub_2403AE1A4(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_2408B118C + 4 * byte_24091D432[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_2408B118C()
{
  uint64_t v0;

  sub_240388AE4(v0, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  return 0xD000000000000012;
}

void TranscriptProtoPayloadEnum.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t matched;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t Results;
  uint64_t StepResults;
  uint64_t v26;
  uint64_t v27;
  uint64_t Step;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;

  v51 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  MEMORY[0x24BDAC7A8](v51);
  v50 = (char *)&v37 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  MEMORY[0x24BDAC7A8](v49);
  v48 = (char *)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  MEMORY[0x24BDAC7A8](v47);
  v46 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  MEMORY[0x24BDAC7A8](v42);
  v41 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for TranscriptProtoActionConfirmation(0);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for TranscriptProtoActionSuccess(0);
  MEMORY[0x24BDAC7A8](v38);
  v43 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
  MEMORY[0x24BDAC7A8](v7);
  v63 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  MEMORY[0x24BDAC7A8](v9);
  v54 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v11);
  v68 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v65 = *(_QWORD *)(v67 - 8);
  v13 = MEMORY[0x24BDAC7A8](v67);
  v52 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v53 = (char *)&v37 - v15;
  v59 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x24BDAC7A8](v59);
  v66 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  MEMORY[0x24BDAC7A8](v61);
  v60 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  MEMORY[0x24BDAC7A8](matched);
  v62 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  MEMORY[0x24BDAC7A8](v20);
  v58 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for TranscriptProtoClientCustom(0);
  MEMORY[0x24BDAC7A8](v55);
  v64 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = type metadata accessor for TranscriptProtoSessionError(0);
  MEMORY[0x24BDAC7A8](v56);
  v57 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  Results = type metadata accessor for TranscriptProtoQueryResults(0);
  MEMORY[0x24BDAC7A8](Results);
  StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  MEMORY[0x24BDAC7A8](StepResults);
  v69 = (char *)&v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for TranscriptProtoVariableStep(0);
  MEMORY[0x24BDAC7A8](v27);
  Step = type metadata accessor for TranscriptProtoQueryStep(0);
  MEMORY[0x24BDAC7A8](Step);
  v29 = type metadata accessor for TranscriptProtoClientAction(0);
  MEMORY[0x24BDAC7A8](v29);
  v30 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x24BDAC7A8](v30);
  v31 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  MEMORY[0x24BDAC7A8](v31);
  v32 = type metadata accessor for TranscriptProtoTextQuery(0);
  MEMORY[0x24BDAC7A8](v32);
  v33 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  MEMORY[0x24BDAC7A8](v33);
  sub_2403AE1A4(v70, (uint64_t)&v37 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), v35);
  v36 = (char *)&loc_2408B1930 + *((int *)qword_2408B2B30 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_2408B1940()
{
  uint64_t v0;

  sub_240388AE4(v0, type metadata accessor for TranscriptProtoPayloadEnum);
  return 0x536E6F6973736553;
}

uint64_t TranscriptProtoAction.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];
  uint64_t v8;
  unint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (unsigned int *)((char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = 0;
  v9 = 0xE000000000000000;
  sub_2408E5F84();
  sub_2408E5D50();
  v4 = type metadata accessor for TranscriptProtoAction(0);
  sub_2403A9210(v0 + *(int *)(v4 + 28), (uint64_t)v3, &qword_256FFA300);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v3, &qword_256FFA300);
  }
  else
  {
    v7[2] = 101;
    v7[3] = 0xE100000000000000;
    v7[1] = *v3 - 1;
    sub_2408E6170();
    sub_2408E5D50();
    swift_bridgeObjectRelease();
    sub_240388AE4((uint64_t)v3, type metadata accessor for TranscriptProtoStatementID);
  }
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  type metadata accessor for TranscriptProtoActionParameterValue(0);
  swift_bridgeObjectRetain();
  sub_2408E5C9C();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  return v8;
}

unint64_t TranscriptProtoClientAction.description.getter()
{
  sub_2408E5F84();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  type metadata accessor for ToolKitProtoTypedValue(0);
  swift_bridgeObjectRetain();
  sub_2408E5C9C();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  return 0xD000000000000015;
}

uint64_t TranscriptProtoSystemPromptResolution.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = 0;
  v8 = 0xE000000000000000;
  sub_2408E5F84();
  sub_2408E5D50();
  v6 = *(_OWORD *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257015670);
  sub_2408E6014();
  sub_2408E5D50();
  v4 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  sub_2403A9210(v0 + *(int *)(v4 + 24), (uint64_t)v3, &qword_256FFA330);
  sub_2408E5D38();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  return v7;
}

uint64_t TranscriptProtoPayloadEnum.PayloadType.hash(into:)()
{
  return sub_2408E6224();
}

uint64_t TranscriptProtoPayloadEnum.PayloadType.hashValue.getter()
{
  sub_2408E6218();
  sub_2408E6224();
  return sub_2408E623C();
}

void TranscriptProtoActionFailureFailureEnum.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403AE1A4(v0, (uint64_t)v3, v4);
  v5 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  v6 = (char *)sub_2408B32F0
     + 4
     * byte_24091D43D[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 16, v5)];
  __asm { BR              X10 }
}

uint64_t sub_2408B32F0()
{
  uint64_t v0;
  uint64_t v1;

  sub_240388AE4(v0, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
  return v1 + 5;
}

void sub_2408B3460()
{
  JUMPOUT(0x2408B344CLL);
}

void sub_2408B3484()
{
  JUMPOUT(0x2408B344CLL);
}

unint64_t sub_2408B34AC()
{
  unint64_t result;

  result = qword_257015678;
  if (!qword_257015678)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoPayloadEnum.PayloadType, &type metadata for TranscriptProtoPayloadEnum.PayloadType);
    atomic_store(result, (unint64_t *)&qword_257015678);
  }
  return result;
}

uint64_t _s11PayloadTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD1)
    goto LABEL_17;
  if (a2 + 47 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 47) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 47;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 47;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 47;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x30;
  v8 = v6 - 48;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11PayloadTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 47 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 47) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD0)
    return ((uint64_t (*)(void))((char *)&loc_2408B35CC + 4 * byte_24091D453[v4]))();
  *a1 = a2 + 47;
  return ((uint64_t (*)(void))((char *)sub_2408B3600 + 4 * byte_24091D44E[v4]))();
}

uint64_t sub_2408B3600(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B3608(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408B3610);
  return result;
}

uint64_t sub_2408B361C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408B3624);
  *(_BYTE *)result = a2 + 47;
  return result;
}

uint64_t sub_2408B3628(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B3630(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProtoPayloadEnum.PayloadType()
{
  return &type metadata for TranscriptProtoPayloadEnum.PayloadType;
}

uint64_t ReliabilityCategory.name.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2408B3688
                                                                     + 4 * byte_24091D590[*v0 >> 4]))(0xD000000000000010, 0x800000024091D680);
}

uint64_t sub_2408B3688()
{
  return 0x617461444D424549;
}

unint64_t sub_2408B36AC()
{
  return 0xD000000000000011;
}

uint64_t sub_2408B36D4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1;
}

uint64_t sub_2408B371C()
{
  return 0x745372657070614DLL;
}

uint64_t IEBMDataIssues.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2408B3778 + 4 * byte_24091D599[*v0]))(0x6576457974706D65, 0xEE0079646F42746ELL);
}

uint64_t sub_2408B3778()
{
  return 0x5364696C61766E69;
}

unint64_t sub_2408B379C()
{
  return 0xD000000000000016;
}

uint64_t sub_2408B37BC()
{
  return 0x746E6576456C696ELL;
}

unint64_t sub_2408B37E0()
{
  return 0xD000000000000015;
}

unint64_t DataUploadIssues.rawValue.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t DataEncodingError.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000015;
  else
    return 0xD000000000000011;
}

unint64_t DataDecodingError.rawValue.getter()
{
  return 0xD000000000000011;
}

unint64_t FeaturizationError.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000019;
  else
    return 0xD000000000000014;
}

uint64_t AppIntentProcessingIssues.rawValue.getter()
{
  return 0x496C6F6F546C696ELL;
}

uint64_t IFTranscriptSELFMapperIssues.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2408B3914 + 4 * byte_24091D59F[*v0]))(0xD00000000000001DLL, 0x8000000240921540);
}

uint64_t sub_2408B3914@<X0>(uint64_t a1@<X8>)
{
  return a1 - 4;
}

unint64_t IFTelemetryTimestampIssues.rawValue.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t MapperStats.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000014;
  if (*v0 == 1)
    v1 = 0xD000000000000013;
  if (*v0)
    return v1;
  else
    return 0xD000000000000012;
}

LighthouseDataProcessor::IEBMDataIssues_optional __swiftcall IEBMDataIssues.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  LighthouseDataProcessor::IEBMDataIssues_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2408E608C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_2408B3A34(char *a1)
{
  sub_24040D0D4(*a1);
}

void sub_2408B3A40()
{
  char *v0;

  sub_2408D4638(*v0);
}

void sub_2408B3A48(uint64_t a1)
{
  char *v1;

  sub_24040D80C(a1, *v1);
}

void sub_2408B3A50(uint64_t a1)
{
  char *v1;

  sub_24040DD40(a1, *v1);
}

LighthouseDataProcessor::IEBMDataIssues_optional sub_2408B3A58(Swift::String *a1)
{
  return IEBMDataIssues.init(rawValue:)(*a1);
}

uint64_t sub_2408B3A64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = IEBMDataIssues.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t DataUploadIssues.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_2408B3EF0(a1);
}

uint64_t sub_2408B3A94()
{
  return sub_2408B3F5C();
}

uint64_t sub_2408B3AB0()
{
  return sub_2408E5D44();
}

uint64_t sub_2408B3ACC()
{
  return sub_2408B3FE0();
}

uint64_t sub_2408B3AE8@<X0>(BOOL *a1@<X8>)
{
  return sub_2408B4034(a1);
}

void sub_2408B3AF4(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x8000000240921470;
}

LighthouseDataProcessor::DataEncodingError_optional __swiftcall DataEncodingError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (LighthouseDataProcessor::DataEncodingError_optional)sub_2408B3C84(v1);
}

uint64_t sub_2408B3B20(char *a1, char *a2)
{
  return sub_24040D3BC(*a1, *a2);
}

uint64_t sub_2408B3B2C()
{
  return sub_2408D474C();
}

uint64_t sub_2408B3B34()
{
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2408B3B94()
{
  return sub_24040DC20();
}

LighthouseDataProcessor::DataEncodingError_optional sub_2408B3B9C(Swift::String *a1)
{
  return DataEncodingError.init(rawValue:)(*a1);
}

void sub_2408B3BA8(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000015;
  else
    v2 = 0xD000000000000011;
  v3 = 0x8000000240921490;
  if (*v1)
    v3 = 0x80000002409214B0;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t DataDecodingError.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_2408B3EF0(a1);
}

uint64_t sub_2408B3BF8()
{
  return sub_2408B3F5C();
}

uint64_t sub_2408B3C14()
{
  return sub_2408E5D44();
}

uint64_t sub_2408B3C30()
{
  return sub_2408B3FE0();
}

uint64_t sub_2408B3C4C@<X0>(BOOL *a1@<X8>)
{
  return sub_2408B4034(a1);
}

void sub_2408B3C58(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000002409214D0;
}

LighthouseDataProcessor::FeaturizationError_optional __swiftcall FeaturizationError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (LighthouseDataProcessor::FeaturizationError_optional)sub_2408B3C84(v1);
}

uint64_t sub_2408B3C84@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_2408E608C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_2408B3CE0(char *a1, char *a2)
{
  return sub_24040CAD4(*a1, *a2);
}

uint64_t sub_2408B3CEC()
{
  return sub_2408D47D0();
}

uint64_t sub_2408B3CF4()
{
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2408B3D54()
{
  return sub_24040DF74();
}

LighthouseDataProcessor::FeaturizationError_optional sub_2408B3D5C(Swift::String *a1)
{
  return FeaturizationError.init(rawValue:)(*a1);
}

void sub_2408B3D68(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000019;
  else
    v2 = 0xD000000000000014;
  v3 = 0x80000002409214F0;
  if (*v1)
    v3 = 0x8000000240921510;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t AppIntentProcessingIssues.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_2408B3EF0(a1);
}

uint64_t sub_2408B3DB8()
{
  return sub_2408B3F5C();
}

uint64_t sub_2408B3DD4()
{
  return sub_2408E5D44();
}

uint64_t sub_2408B3DF0()
{
  return sub_2408B3FE0();
}

uint64_t sub_2408B3E0C@<X0>(BOOL *a1@<X8>)
{
  return sub_2408B4034(a1);
}

void sub_2408B3E18(_QWORD *a1@<X8>)
{
  *a1 = 0x496C6F6F546C696ELL;
  a1[1] = 0xE900000000000044;
}

LighthouseDataProcessor::IFTranscriptSELFMapperIssues_optional __swiftcall IFTranscriptSELFMapperIssues.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  LighthouseDataProcessor::IFTranscriptSELFMapperIssues_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2408E608C();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_2408B3E90(char *a1)
{
  sub_24040C7E0(*a1);
}

void sub_2408B3E9C()
{
  char *v0;

  sub_2408D4854(*v0);
}

void sub_2408B3EA4(uint64_t a1)
{
  char *v1;

  sub_24040D5E0(a1, *v1);
}

void sub_2408B3EAC(uint64_t a1)
{
  char *v1;

  sub_24040E094(a1, *v1);
}

LighthouseDataProcessor::IFTranscriptSELFMapperIssues_optional sub_2408B3EB4(Swift::String *a1)
{
  return IFTranscriptSELFMapperIssues.init(rawValue:)(*a1);
}

uint64_t sub_2408B3EC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = IFTranscriptSELFMapperIssues.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t IFTelemetryTimestampIssues.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  return sub_2408B3EF0(a1);
}

uint64_t sub_2408B3EF0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2408E608C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_2408B3F40()
{
  return sub_2408B3F5C();
}

uint64_t sub_2408B3F5C()
{
  sub_2408E6218();
  sub_2408E5D44();
  return sub_2408E623C();
}

uint64_t sub_2408B3FA8()
{
  return sub_2408E5D44();
}

uint64_t sub_2408B3FC4()
{
  return sub_2408B3FE0();
}

uint64_t sub_2408B3FE0()
{
  sub_2408E6218();
  sub_2408E5D44();
  return sub_2408E623C();
}

uint64_t sub_2408B4028@<X0>(BOOL *a1@<X8>)
{
  return sub_2408B4034(a1);
}

uint64_t sub_2408B4034@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2408E608C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_2408B4080(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001BLL;
  a1[1] = 0x80000002409215F0;
}

LighthouseDataProcessor::MapperStats_optional __swiftcall MapperStats.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  LighthouseDataProcessor::MapperStats_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2408E608C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

unint64_t sub_2408B40FC()
{
  unint64_t result;

  result = qword_257015680;
  if (!qword_257015680)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for IEBMDataIssues, &type metadata for IEBMDataIssues);
    atomic_store(result, (unint64_t *)&qword_257015680);
  }
  return result;
}

unint64_t sub_2408B4144()
{
  unint64_t result;

  result = qword_257015688;
  if (!qword_257015688)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for DataUploadIssues, &type metadata for DataUploadIssues);
    atomic_store(result, (unint64_t *)&qword_257015688);
  }
  return result;
}

unint64_t sub_2408B418C()
{
  unint64_t result;

  result = qword_257015690;
  if (!qword_257015690)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for DataEncodingError, &type metadata for DataEncodingError);
    atomic_store(result, (unint64_t *)&qword_257015690);
  }
  return result;
}

unint64_t sub_2408B41D4()
{
  unint64_t result;

  result = qword_257015698;
  if (!qword_257015698)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for DataDecodingError, &type metadata for DataDecodingError);
    atomic_store(result, (unint64_t *)&qword_257015698);
  }
  return result;
}

unint64_t sub_2408B421C()
{
  unint64_t result;

  result = qword_2570156A0;
  if (!qword_2570156A0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for FeaturizationError, &type metadata for FeaturizationError);
    atomic_store(result, (unint64_t *)&qword_2570156A0);
  }
  return result;
}

unint64_t sub_2408B4264()
{
  unint64_t result;

  result = qword_2570156A8;
  if (!qword_2570156A8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for AppIntentProcessingIssues, &type metadata for AppIntentProcessingIssues);
    atomic_store(result, (unint64_t *)&qword_2570156A8);
  }
  return result;
}

unint64_t sub_2408B42AC()
{
  unint64_t result;

  result = qword_2570156B0;
  if (!qword_2570156B0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for IFTranscriptSELFMapperIssues, &type metadata for IFTranscriptSELFMapperIssues);
    atomic_store(result, (unint64_t *)&qword_2570156B0);
  }
  return result;
}

unint64_t sub_2408B42F4()
{
  unint64_t result;

  result = qword_2570156B8;
  if (!qword_2570156B8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for IFTelemetryTimestampIssues, &type metadata for IFTelemetryTimestampIssues);
    atomic_store(result, (unint64_t *)&qword_2570156B8);
  }
  return result;
}

uint64_t sub_2408B4338(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24040D2C8(*a1, *a2);
}

unint64_t sub_2408B4348()
{
  unint64_t result;

  result = qword_2570156C0;
  if (!qword_2570156C0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for MapperStats, &type metadata for MapperStats);
    atomic_store(result, (unint64_t *)&qword_2570156C0);
  }
  return result;
}

uint64_t sub_2408B438C()
{
  return sub_2408D492C();
}

uint64_t sub_2408B4394()
{
  return sub_24040DA14();
}

uint64_t sub_2408B439C()
{
  return sub_24040DCA0();
}

LighthouseDataProcessor::MapperStats_optional sub_2408B43A4(Swift::String *a1)
{
  return MapperStats.init(rawValue:)(*a1);
}

unint64_t sub_2408B43B0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = MapperStats.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ReliabilityCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x18)
    goto LABEL_17;
  if (a2 + 232 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 232) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 232;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 232;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 232;
  }
LABEL_17:
  v6 = ((*a1 >> 4) & 0xFFFFFFEF | (16 * ((*a1 >> 3) & 1))) ^ 0x1F;
  if (v6 >= 0x17)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for ReliabilityCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 232 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 232) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x18)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x17)
    return ((uint64_t (*)(void))((char *)&loc_2408B44C0 + 4 * byte_24091D5A9[v4]))();
  *a1 = a2 - 24;
  return ((uint64_t (*)(void))((char *)sub_2408B44F4 + 4 * byte_24091D5A4[v4]))();
}

uint64_t sub_2408B44F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B44FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408B4504);
  return result;
}

uint64_t sub_2408B451C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408B4524);
  *(_BYTE *)result = 8 * (((-a2 & 0x10) != 0) - 2 * a2);
  return result;
}

uint64_t sub_2408B4528(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B4530(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B453C(unsigned __int8 *a1)
{
  return *a1 >> 4;
}

_BYTE *sub_2408B4548(_BYTE *result)
{
  *result &= 0xFu;
  return result;
}

_BYTE *sub_2408B4558(_BYTE *result, char a2)
{
  *result = *result & 7 | (16 * a2);
  return result;
}

ValueMetadata *type metadata accessor for ReliabilityCategory()
{
  return &type metadata for ReliabilityCategory;
}

uint64_t getEnumTagSinglePayload for IEBMDataIssues(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IEBMDataIssues(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2408B4658 + 4 * byte_24091D5B3[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2408B468C + 4 * byte_24091D5AE[v4]))();
}

uint64_t sub_2408B468C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B4694(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408B469CLL);
  return result;
}

uint64_t sub_2408B46A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408B46B0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2408B46B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B46BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IEBMDataIssues()
{
  return &type metadata for IEBMDataIssues;
}

ValueMetadata *type metadata accessor for DataUploadIssues()
{
  return &type metadata for DataUploadIssues;
}

ValueMetadata *type metadata accessor for DataEncodingError()
{
  return &type metadata for DataEncodingError;
}

ValueMetadata *type metadata accessor for DataDecodingError()
{
  return &type metadata for DataDecodingError;
}

uint64_t _s23LighthouseDataProcessor17DataEncodingErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2408B4760 + 4 * byte_24091D5BD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2408B4794 + 4 * byte_24091D5B8[v4]))();
}

uint64_t sub_2408B4794(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B479C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408B47A4);
  return result;
}

uint64_t sub_2408B47B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408B47B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2408B47BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B47C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeaturizationError()
{
  return &type metadata for FeaturizationError;
}

ValueMetadata *type metadata accessor for AppIntentProcessingIssues()
{
  return &type metadata for AppIntentProcessingIssues;
}

uint64_t storeEnumTagSinglePayload for IFTranscriptSELFMapperIssues(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2408B483C + 4 * byte_24091D5C7[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2408B4870 + 4 * byte_24091D5C2[v4]))();
}

uint64_t sub_2408B4870(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B4878(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408B4880);
  return result;
}

uint64_t sub_2408B488C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408B4894);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2408B4898(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B48A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IFTranscriptSELFMapperIssues()
{
  return &type metadata for IFTranscriptSELFMapperIssues;
}

uint64_t _s23LighthouseDataProcessor16DataUploadIssuesOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2408B48FC + 4 * byte_24091D5CC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2408B491C + 4 * byte_24091D5D1[v4]))();
}

_BYTE *sub_2408B48FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2408B491C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2408B4924(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2408B492C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2408B4934(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2408B493C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IFTelemetryTimestampIssues()
{
  return &type metadata for IFTelemetryTimestampIssues;
}

uint64_t storeEnumTagSinglePayload for MapperStats(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2408B49A4 + 4 * byte_24091D5DB[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2408B49D8 + 4 * byte_24091D5D6[v4]))();
}

uint64_t sub_2408B49D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B49E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408B49E8);
  return result;
}

uint64_t sub_2408B49F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408B49FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2408B4A00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B4A08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MapperStats()
{
  return &type metadata for MapperStats;
}

void sub_2408B4A24(uint64_t a1, unint64_t a2, char *a3)
{
  sub_2408B4A3C(a1, a2, a3, MEMORY[0x24BEE7910]);
}

void sub_2408B4A30(uint64_t a1, unint64_t a2, char *a3)
{
  sub_2408B4A3C(a1, a2, a3, MEMORY[0x24BEE7908]);
}

void sub_2408B4A3C(uint64_t a1, unint64_t a2, char *a3, uint64_t (*a4)(void))
{
  char v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a3;
  swift_bridgeObjectRetain_n();
  v8 = sub_2408E5C3C();
  v9 = a4();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v12 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_2403B3ED0(a1, a2, &v12);
    sub_2408E5F3C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240347000, v8, v9, "%s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v11, -1, -1);
    MEMORY[0x242684668](v10, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  LOBYTE(v12) = v7;
  _s23LighthouseDataProcessor20CoreAnalyticsServiceO017submitReliabilityE08category6reasonyAA0H8CategoryO_SStFZ_0((uint64_t)&v12);
}

uint64_t sub_2408B4BB8(uint64_t a1)
{
  return sub_2408B4C48(a1, qword_254356428, &qword_2543563D0, (id *)&qword_254356408);
}

uint64_t sub_2408B4BDC(uint64_t a1)
{
  return sub_2408B4C48(a1, qword_257072498, qword_256FFA0C8, (id *)&qword_2570724C8);
}

uint64_t sub_2408B4C00(uint64_t a1)
{
  return sub_2408B4C48(a1, qword_254356410, qword_2543560D0, (id *)&qword_254356400);
}

uint64_t sub_2408B4C24(uint64_t a1)
{
  return sub_2408B4C48(a1, qword_2570724B0, &qword_256FFA0D8, (id *)&qword_2570724D0);
}

uint64_t sub_2408B4C48(uint64_t a1, uint64_t *a2, _QWORD *a3, id *a4)
{
  uint64_t v7;
  id v8;

  v7 = sub_2408E5C48();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v8 = *a4;
  return sub_2408E5C54();
}

uint64_t sub_2408B4CD0()
{
  uint64_t result;

  sub_2408B4DEC();
  result = sub_2408E5F0C();
  qword_254356408 = result;
  return result;
}

uint64_t sub_2408B4D34()
{
  uint64_t result;

  sub_2408B4DEC();
  result = sub_2408E5F0C();
  qword_2570724C8 = result;
  return result;
}

uint64_t sub_2408B4D98()
{
  uint64_t result;

  sub_2408B4DEC();
  result = sub_2408E5F0C();
  qword_254356400 = result;
  return result;
}

unint64_t sub_2408B4DEC()
{
  unint64_t result;

  result = qword_2543563F8;
  if (!qword_2543563F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2543563F8);
  }
  return result;
}

uint64_t sub_2408B4E28()
{
  uint64_t result;

  sub_2408B4DEC();
  result = sub_2408E5F0C();
  qword_2570724D0 = result;
  return result;
}

void *sub_2408B4E7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94DF0]), sel_init);
  v9 = v8;
  if (v8)
  {
    objc_msgSend(v8, sel_setExists_, 1);
    v10 = objc_allocWithZone(MEMORY[0x24BE94DF8]);
    v11 = v9;
    v12 = objc_msgSend(v10, sel_init);
    objc_msgSend(v11, sel_setFailure_, v12);

  }
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3D8);
  v13 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v4, 1, v13) == 1)
  {
    sub_2408B5400((uint64_t)v4);
    v14 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  else
  {
    sub_2403A9210((uint64_t)v4, (uint64_t)v7, &qword_256FFA3D0);
    sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoActionFailureFailure);
    v15 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v7, 1, v15) != 1)
    {
      v16 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
      v17 = (char *)&loc_2408B5064
          + dword_2408B53BC[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v7, 16, v16)];
      __asm { BR              X10 }
    }
  }
  return v9;
}

uint64_t sub_2408B5400(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SELFPnREmitter.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t static SELFPnREmitter.instance.getter()
{
  return swift_initStaticObject();
}

uint64_t SELFPnREmitter.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t SELFPnREmitter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SELFPnREmitter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void _s23LighthouseDataProcessor14SELFPnREmitterC27uploadProvisionalPnRLatency3foryAA18IELatencySELFEvent_p_tF_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  NSObject *oslog;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  if (v3)
  {
    v4 = (void *)v3;
    objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_sharedStream), sel_emitMessage_, v3);

    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_256FFA0A8 != -1)
      swift_once();
    v5 = sub_2408E5C48();
    __swift_project_value_buffer(v5, (uint64_t)qword_257072498);
    oslog = sub_2408E5C3C();
    v6 = sub_2408E5EA0();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_240347000, oslog, v6, "uploadProvisionalPnRLatency failed due to createSELFEvent is nil.", v7, 2u);
      MEMORY[0x242684668](v7, -1, -1);
    }

  }
}

uint64_t dispatch thunk of SELFPnREmitterInterface.uploadProvisionalPnRLatency(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for SELFPnREmitter()
{
  return objc_opt_self();
}

uint64_t method lookup function for SELFPnREmitter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SELFPnREmitter.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

void CoreAnalyticsEmitter.sendSageMetrics(eventCategory:eventPayload:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  unint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, unint64_t, uint64_t (*)(), uint64_t);
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[4];
  int v50;
  os_log_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  unint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;

  v60 = a2;
  v5 = type metadata accessor for UsageMetricsDefinitions();
  v57 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v57 + 64);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v55 = &v49[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v7);
  v58 = &v49[-v9];
  MEMORY[0x24BDAC7A8](v8);
  v11 = &v49[-v10];
  v12 = sub_2408E5624();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
  MEMORY[0x24BDAC7A8](v15);
  v17 = &v49[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v59 = v5;
  v61 = (_BYTE *)a3;
  sub_2408C5168(0, (uint64_t)v17);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12) == 1)
  {
    sub_2403A97FC((uint64_t)v17, qword_254356330);
    if (qword_256FFA0A8 != -1)
      swift_once();
    v18 = sub_2408E5C48();
    __swift_project_value_buffer(v18, (uint64_t)qword_257072498);
    v19 = v55;
    sub_240502998((uint64_t)v61, (uint64_t)v55);
    v20 = v60;
    swift_bridgeObjectRetain_n();
    v21 = sub_2408E5C3C();
    v22 = sub_2408E5EA0();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v63 = v24;
      *(_DWORD *)v23 = 136315394;
      swift_bridgeObjectRetain();
      v62 = sub_2403B3ED0(a1, v20, &v63);
      sub_2408E5F3C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v23 + 12) = 2080;
      sub_24041CF80();
      v25 = sub_2408E6170();
      v62 = sub_2403B3ED0(v25, v26, &v63);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      sub_2405029DC((uint64_t)v19);
      _os_log_impl(&dword_240347000, v21, v22, "Date can not be fuzzed for: %s, Date: %s, exiting CoreAnalytics logging", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242684668](v24, -1, -1);
      MEMORY[0x242684668](v23, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_2405029DC((uint64_t)v19);
    }

  }
  else
  {
    v27 = a1;
    v55 = *(_BYTE **)(v13 + 32);
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v55)(&v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], v17, v12);
    if (qword_256FFA0A8 != -1)
      swift_once();
    v28 = sub_2408E5C48();
    __swift_project_value_buffer(v28, (uint64_t)qword_257072498);
    sub_240502998((uint64_t)v61, (uint64_t)v11);
    v29 = v60;
    swift_bridgeObjectRetain_n();
    v30 = sub_2408E5C3C();
    v31 = sub_2408E5EA0();
    v32 = v31;
    v33 = os_log_type_enabled(v30, v31);
    v53 = v27;
    v54 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
    if (v33)
    {
      v34 = swift_slowAlloc();
      v51 = v30;
      v35 = v34;
      v52 = swift_slowAlloc();
      v63 = v52;
      *(_DWORD *)v35 = 136315394;
      v50 = v32;
      swift_bridgeObjectRetain();
      v62 = sub_2403B3ED0(v27, v29, &v63);
      sub_2408E5F3C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 12) = 2080;
      sub_24041CF80();
      v36 = sub_2408E6170();
      v62 = sub_2403B3ED0(v36, v37, &v63);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      sub_2405029DC((uint64_t)v11);
      v38 = v51;
      _os_log_impl(&dword_240347000, v51, (os_log_type_t)v50, "Logging CoreAnalytics event type: %s, Date: %s", (uint8_t *)v35, 0x16u);
      v39 = v52;
      swift_arrayDestroy();
      MEMORY[0x242684668](v39, -1, -1);
      MEMORY[0x242684668](v35, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_2405029DC((uint64_t)v11);

    }
    v40 = *(void (**)(uint64_t, unint64_t, uint64_t (*)(), uint64_t))(v56 + 16);
    v41 = v58;
    v42 = sub_240502998((uint64_t)v61, (uint64_t)v58);
    v61 = v49;
    MEMORY[0x24BDAC7A8](v42);
    v43 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
    v44 = v54;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v13 + 16))(v43, v54, v12);
    v45 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    v46 = (v6 + *(unsigned __int8 *)(v13 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v47 = swift_allocObject();
    sub_2408B6B14((uint64_t)v41, v47 + v45);
    ((void (*)(unint64_t, _BYTE *, uint64_t))v55)(v47 + v46, v43, v12);
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = sub_2408B6B58;
    *(_QWORD *)(v48 + 24) = v47;
    v40(v53, v60, sub_2408B6BB8, v48);
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v44, v12);
  }
}

uint64_t static CoreAnalyticsEmitter.instance.getter()
{
  return swift_initStaticObject();
}

uint64_t sub_2408B5C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015808);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E5DF8();
  v11 = sub_2408E5E10();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a1;
  v12[5] = a2;
  v12[6] = a3;
  v12[7] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2408B678C((uint64_t)v10, (uint64_t)&unk_257015818, (uint64_t)v12);
  swift_release();
  return sub_2403A97FC((uint64_t)v10, &qword_257015808);
}

void sub_2408B5D90(uint64_t a1)
{
  uint64_t inited;
  char *v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2408EB750;
  *(_QWORD *)(inited + 32) = 0x6449746E65696C63;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 48) = sub_2408E5CE4();
  *(_QWORD *)(inited + 56) = 0x6D61747365746164;
  *(_QWORD *)(inited + 64) = 0xE900000000000070;
  sub_2408E557C();
  *(_QWORD *)(inited + 72) = sub_2408E5E1C();
  *(_QWORD *)(inited + 80) = 0xD000000000000010;
  *(_QWORD *)(inited + 88) = 0x8000000240927CC0;
  v3 = (char *)sub_2408B5E90
     + 4
     * byte_24091DDA0[*(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for UsageMetricsDefinitions() + 28))];
  __asm { BR              X9 }
}

unint64_t sub_2408B5E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_2408E5CE4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 96) = v2;
  strcpy((char *)(v0 + 104), "errorMessage");
  *(_BYTE *)(v0 + 117) = 0;
  *(_WORD *)(v0 + 118) = -5120;
  *(_QWORD *)(v0 + 120) = sub_2408E5CE4();
  *(_QWORD *)(v0 + 128) = 0x7475626972747461;
  *(_QWORD *)(v0 + 136) = 0xEF687461506E6F69;
  *(_QWORD *)(v0 + 144) = sub_2408E5CE4();
  *(_QWORD *)(v0 + 152) = 0x6F6F54726F727265;
  *(_QWORD *)(v0 + 160) = 0xEB0000000064496CLL;
  *(_QWORD *)(v0 + 168) = sub_2408E5CE4();
  *(_QWORD *)(v0 + 176) = 0x6F4364656C696166;
  *(_QWORD *)(v0 + 184) = 0xEB00000000746E75;
  sub_240422180(0, &qword_257015800);
  *(_QWORD *)(v0 + 192) = sub_2408E5EF4();
  strcpy((char *)(v0 + 200), "successCount");
  *(_BYTE *)(v0 + 213) = 0;
  *(_WORD *)(v0 + 214) = -5120;
  *(_QWORD *)(v0 + 216) = sub_2408E5EF4();
  *(_QWORD *)(v0 + 224) = v1 + 7;
  *(_QWORD *)(v0 + 232) = 0x8000000240927D00;
  *(_QWORD *)(v0 + 240) = sub_2408E5F30();
  *(_QWORD *)(v0 + 248) = v1 + 5;
  *(_QWORD *)(v0 + 256) = 0x8000000240927CE0;
  *(_QWORD *)(v0 + 264) = sub_2408E5F30();
  *(_QWORD *)(v0 + 272) = v1;
  *(_QWORD *)(v0 + 280) = 0x8000000240927D20;
  *(_QWORD *)(v0 + 288) = sub_2408E5F30();
  return sub_2403A864C(v0);
}

Swift::Void __swiftcall CoreAnalyticsEmitter.sendCoreAnalytics(eventName:eventPayload:)(Swift::String eventName, Swift::OpaquePointer eventPayload)
{
  uint64_t v2;
  uint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void (*v12)(uint64_t, void *, uint64_t (*)(), uint64_t);
  Swift::OpaquePointer *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  object = eventName._object;
  countAndFlagsBits = eventName._countAndFlagsBits;
  if (qword_256FFA0A8 != -1)
    swift_once();
  v7 = sub_2408E5C48();
  __swift_project_value_buffer(v7, (uint64_t)qword_257072498);
  swift_bridgeObjectRetain_n();
  v8 = sub_2408E5C3C();
  v9 = sub_2408E5EA0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v15 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_2403B3ED0(countAndFlagsBits, (unint64_t)object, &v15);
    sub_2408E5F3C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240347000, v8, v9, "Logging CoreAnalytics for event type: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v11, -1, -1);
    MEMORY[0x242684668](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = *(void (**)(uint64_t, void *, uint64_t (*)(), uint64_t))(v3 + 16);
  v13 = (Swift::OpaquePointer *)swift_allocObject();
  v13[2]._rawValue = eventPayload._rawValue;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_2408B6BFC;
  *(_QWORD *)(v14 + 24) = v13;
  swift_bridgeObjectRetain();
  v12(countAndFlagsBits, object, sub_2408B6DD8, v14);
  swift_release();
}

uint64_t sub_2408B62B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  return swift_task_switch();
}

uint64_t sub_2408B62D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  os_log_type_t v15;
  const char *v16;
  uint64_t v17;
  os_log_type_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t (*v26)(uint64_t);
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;

  v2 = v0[10];
  v1 = v0[11];
  v3 = (void *)sub_2408E5CE4();
  v0[2] = MEMORY[0x24BDAC760];
  v0[6] = v2;
  v0[7] = v1;
  v0[3] = 1107296256;
  v0[4] = sub_2408E359C;
  v0[5] = &block_descriptor_2;
  v4 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  LOBYTE(v1) = AnalyticsSendEventLazy();
  _Block_release(v4);

  if ((v1 & 1) == 0)
  {
    if (qword_256FFA0A8 != -1)
      swift_once();
    v17 = sub_2408E5C48();
    __swift_project_value_buffer(v17, (uint64_t)qword_257072498);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v6 = sub_2408E5C3C();
    v18 = sub_2408E5EAC();
    if (os_log_type_enabled(v6, v18))
    {
      v19 = v0[9];
      v27 = (uint64_t (*)(uint64_t))v0[10];
      v20 = v0[8];
      v10 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v29 = v28;
      *(_DWORD *)v10 = 136315394;
      swift_bridgeObjectRetain();
      v0[2] = sub_2403B3ED0(v20, v19, &v29);
      sub_2408E5F3C();
      v21 = swift_bridgeObjectRelease_n();
      *(_WORD *)(v10 + 12) = 2080;
      if (!v27(v21))
        sub_2403A864C(MEMORY[0x24BEE4AF8]);
      sub_240422180(0, (unint64_t *)&qword_257001700);
      v22 = sub_2408E5C9C();
      v24 = v23;
      swift_bridgeObjectRelease();
      v0[2] = sub_2403B3ED0(v22, v24, &v29);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      swift_release_n();
      v15 = v18;
      v16 = "CoreAnalytics rejected event type: %s, payload: %s";
      goto LABEL_14;
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
    swift_release_n();
    goto LABEL_16;
  }
  if (qword_256FFA0A8 != -1)
    swift_once();
  v5 = sub_2408E5C48();
  __swift_project_value_buffer(v5, (uint64_t)qword_257072498);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v6 = sub_2408E5C3C();
  v7 = sub_2408E5EA0();
  if (!os_log_type_enabled(v6, v7))
    goto LABEL_15;
  v8 = v0[9];
  v26 = (uint64_t (*)(uint64_t))v0[10];
  v9 = v0[8];
  v10 = swift_slowAlloc();
  v28 = swift_slowAlloc();
  v29 = v28;
  *(_DWORD *)v10 = 136315394;
  swift_bridgeObjectRetain();
  v0[2] = sub_2403B3ED0(v9, v8, &v29);
  sub_2408E5F3C();
  v11 = swift_bridgeObjectRelease_n();
  *(_WORD *)(v10 + 12) = 2080;
  if (!v26(v11))
    sub_2403A864C(MEMORY[0x24BEE4AF8]);
  sub_240422180(0, (unint64_t *)&qword_257001700);
  v12 = sub_2408E5C9C();
  v14 = v13;
  swift_bridgeObjectRelease();
  v0[2] = sub_2403B3ED0(v12, v14, &v29);
  sub_2408E5F3C();
  swift_bridgeObjectRelease();
  swift_release_n();
  v15 = v7;
  v16 = "Logged CoreAnalytics event type: %s, payload: %s";
LABEL_14:
  _os_log_impl(&dword_240347000, v6, v15, v16, (uint8_t *)v10, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x242684668](v28, -1, -1);
  MEMORY[0x242684668](v10, -1, -1);
LABEL_16:

  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_2408B678C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015808);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408B6CE4(a1, (uint64_t)v8);
  v9 = sub_2408E5E10();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_2403A97FC((uint64_t)v8, &qword_257015808);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_2408E5DEC();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_2408E5E04();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t CoreAnalyticsEmitter.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t CoreAnalyticsEmitter.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_2408B695C(uint64_t a1, uint64_t a2, Swift::OpaquePointer a3)
{
  CoreAnalyticsEmitter.sendCoreAnalytics(eventName:eventPayload:)(*(Swift::String *)&a1, a3);
}

uint64_t sub_2408B697C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2408B69E0;
  return v6(a1);
}

uint64_t sub_2408B69E0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2408B6A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(unint64_t, uint64_t);

  v1 = type metadata accessor for UsageMetricsDefinitions();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_2408E5624();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  v8 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v8(v0 + v3 + *(int *)(v1 + 20), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_2408B6B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UsageMetricsDefinitions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2408B6B58()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = type metadata accessor for UsageMetricsDefinitions();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  sub_2408E5624();
  sub_2408B5D90(v0 + v2);
}

uint64_t sub_2408B6BB8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2408B6BD8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2408B6BFC()
{
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of CoreAnalyticsEmitterInterface.sendCoreAnalytics(eventName:eventPayload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for CoreAnalyticsEmitter()
{
  return objc_opt_self();
}

uint64_t method lookup function for CoreAnalyticsEmitter()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_2408B6C38()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2408B6C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_2403B0350;
  *(_QWORD *)(v4 + 88) = v3;
  *(_OWORD *)(v4 + 72) = v5;
  *(_QWORD *)(v4 + 64) = v2;
  return swift_task_switch();
}

uint64_t sub_2408B6CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408B6D2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2408B6D50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2403B0350;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_257015820 + dword_257015820))(a1, v4);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_2408B6DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2408E5C48();
  __swift_allocate_value_buffer(v0, qword_2543560F0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2543560F0);
  if (qword_2543560E0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254356410);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t BiomeEventIngestProcessor.__allocating_init(eventIngestor:config:userDefaults:biomeUseCase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  BiomeEventIngestProcessor.init(eventIngestor:config:userDefaults:biomeUseCase:)(a1, a2, a3, a4, a5);
  return v10;
}

char *BiomeEventIngestProcessor.init(eventIngestor:config:userDefaults:biomeUseCase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  v10 = *(_QWORD *)v5;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v5 + 80) - 8) + 32))(&v5[*(_QWORD *)(*(_QWORD *)v5 + 112)], a1);
  v11 = &v5[*(_QWORD *)(*(_QWORD *)v5 + 120)];
  v14 = type metadata accessor for IngestConfig(0, *(_QWORD *)(v10 + 88), v12, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, a2, v14);
  *((_QWORD *)v5 + 2) = a3;
  v15 = &v5[*(_QWORD *)(*(_QWORD *)v5 + 128)];
  *(_QWORD *)v15 = a4;
  *((_QWORD *)v15 + 1) = a5;
  return v5;
}

uint64_t sub_2408B6F88()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  *(_QWORD *)(v1 + 56) = *v0;
  return swift_task_switch();
}

uint64_t sub_2408B6FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;

  v5 = *(_QWORD *)(v4 + 48);
  v6 = *(_QWORD *)(v4 + 56);
  v7 = *(_QWORD *)(*(_QWORD *)v5 + 120);
  *(_QWORD *)(v4 + 64) = v7;
  v8 = v5 + v7;
  v9 = type metadata accessor for IngestConfig(0, *(_QWORD *)(v6 + 88), a3, a4);
  *(_QWORD *)(v4 + 72) = v9;
  v30 = *(_QWORD *)(v8 + *(int *)(v9 + 36));
  if (CollectionPolicy.canCollect()())
  {
    v10 = sub_24072751C();
    *(_QWORD *)(v4 + 80) = v10;
    v18 = v10;
    v19 = *(_QWORD *)(v4 + 56);
    v20 = (void *)sub_2408E5CE4();
    v21 = objc_msgSend(v18, sel_publisherWithUseCase_, v20);

    *(_QWORD *)(v4 + 88) = sub_2408B73F8(v21, v22, v23, v24);
    swift_beginAccess();
    v25 = *(_QWORD *)(v19 + 96);
    v26 = *(_QWORD *)(v19 + 80);
    v29 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v25 + 16) + *(_QWORD *)(v25 + 16));
    v27 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 96) = v27;
    *v27 = v4;
    v27[1] = sub_2408B72AC;
    return v29(v26, v25);
  }
  else
  {
    if (qword_254355CB0 != -1)
      swift_once();
    v11 = sub_2408E5C48();
    __swift_project_value_buffer(v11, (uint64_t)qword_2543560F0);
    swift_retain_n();
    v12 = sub_2408E5C3C();
    v13 = sub_2408E5E94();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v30 = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = IngestConfig.streamIdString.getter();
      *(_QWORD *)(v4 + 40) = sub_2403B3ED0(v16, v17, &v30);
      sub_2408E5F3C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v12, v13, "Skipping %s: collection demands were not met", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242684668](v15, -1, -1);
      MEMORY[0x242684668](v14, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
}

uint64_t sub_2408B72AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_2408B7318()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *(void **)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  if (v1)
  {
    swift_unknownObjectRetain();
    v3 = sub_2407274D0();
    sub_2408B858C(v1, v3, v4);
    swift_unknownObjectRelease_n();

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2408B73B4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 80);
  swift_endAccess();

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2408B73F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t aBlock;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;

  v5 = v4;
  type metadata accessor for IngestConfig(0, *(_QWORD *)(*(_QWORD *)v4 + 88), a3, a4);
  v7 = sub_2407274D0();
  v9 = sub_2408B8048(v7, v8);
  swift_bridgeObjectRelease();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  v30 = sub_2408B8E74;
  v31 = v10;
  v12 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v27 = 1107296256;
  v28 = sub_2408D55E8;
  v29 = &block_descriptor_3;
  v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v5;
  *(_QWORD *)(v14 + 24) = v11;
  v30 = sub_2408B8EC0;
  v31 = v14;
  aBlock = v12;
  v27 = 1107296256;
  v28 = sub_2408D5AD8;
  v29 = &block_descriptor_13;
  v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v16 = objc_msgSend(a1, sel_drivableSinkWithBookmark_completion_shouldContinue_, v9, v13, v15);
  _Block_release(v15);
  _Block_release(v13);

  if (qword_254355CB0 != -1)
    swift_once();
  v17 = sub_2408E5C48();
  __swift_project_value_buffer(v17, (uint64_t)qword_2543560F0);
  swift_retain_n();
  swift_retain();
  v18 = sub_2408E5C3C();
  v19 = sub_2408E5EA0();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    aBlock = v21;
    *(_DWORD *)v20 = 134218242;
    swift_beginAccess();
    sub_2408E5F3C();
    swift_release();
    *(_WORD *)(v20 + 12) = 2080;
    swift_beginAccess();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254356150);
    v22 = sub_2408E5D38();
    sub_2403B3ED0(v22, v23, &aBlock);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_240347000, v18, v19, "Processed %ld events. End Bookmark: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x242684668](v21, -1, -1);
    MEMORY[0x242684668](v20, -1, -1);
  }
  else
  {
    swift_release();
    swift_release_n();
  }
  swift_unknownObjectRelease();

  swift_beginAccess();
  v24 = *(_QWORD *)(v10 + 16);
  swift_unknownObjectRetain();
  swift_release();
  swift_release();
  return v24;
}

void sub_2408B77D8(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  NSObject *v23;
  uint64_t v24[3];

  v6 = objc_msgSend(a1, sel_state);
  if (v6)
  {
    if (v6 == (id)1)
    {
      if (qword_254355CB0 != -1)
        swift_once();
      v7 = sub_2408E5C48();
      __swift_project_value_buffer(v7, (uint64_t)qword_2543560F0);
      v23 = a1;
      v8 = sub_2408E5C3C();
      v9 = sub_2408E5EAC();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        v11 = swift_slowAlloc();
        v24[0] = v11;
        *(_DWORD *)v10 = 136315138;
        v12 = -[NSObject error](v23, sel_error);
        if (v12)
        {
          v13 = v12;
          swift_getErrorValue();
          v14 = sub_2408E61C4();
          v16 = v15;

        }
        else
        {
          v16 = 0xE300000000000000;
          v14 = 7104878;
        }
        sub_2403B3ED0(v14, v16, v24);
        sub_2408E5F3C();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_240347000, v8, v9, "Error on stream with %s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242684668](v11, -1, -1);
        goto LABEL_20;
      }

    }
    else
    {
      if (qword_254355CB0 != -1)
        swift_once();
      v20 = sub_2408E5C48();
      __swift_project_value_buffer(v20, (uint64_t)qword_2543560F0);
      v23 = sub_2408E5C3C();
      v21 = sub_2408E5EB8();
      if (os_log_type_enabled(v23, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_240347000, v23, v21, "Unexpected completion state on stream", v22, 2u);
        MEMORY[0x242684668](v22, -1, -1);
      }
    }

    return;
  }
  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = a2;
  swift_unknownObjectRelease();
  v17 = qword_254355CB0;
  swift_unknownObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = sub_2408E5C48();
  __swift_project_value_buffer(v18, (uint64_t)qword_2543560F0);
  v8 = sub_2408E5C3C();
  v19 = sub_2408E5E94();
  if (!os_log_type_enabled(v8, v19))
    goto LABEL_21;
  v10 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v10 = 0;
  _os_log_impl(&dword_240347000, v8, v19, "Stream completed", v10, 2u);
LABEL_20:
  MEMORY[0x242684668](v10, -1, -1);
LABEL_21:

}

uint64_t sub_2408B7B64(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  void *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  uint64_t result;

  swift_unknownObjectRetain();
  objc_opt_self();
  v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {
    swift_unknownObjectRelease();
    if (qword_254355CB0 != -1)
      swift_once();
    v13 = sub_2408E5C48();
    __swift_project_value_buffer(v13, (uint64_t)qword_2543560F0);
    v14 = sub_2408E5C3C();
    v15 = sub_2408E5EB8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_240347000, v14, v15, "Can't get BMStoreEvent out of the stream", v16, 2u);
      MEMORY[0x242684668](v16, -1, -1);
    }

    return 1;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, sel_eventBodyData);
  if (!v7)
  {
    if (qword_254355CB0 != -1)
      swift_once();
    v17 = sub_2408E5C48();
    __swift_project_value_buffer(v17, (uint64_t)qword_2543560F0);
    v18 = sub_2408E5C3C();
    v19 = sub_2408E5EB8();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_240347000, v18, v19, "Event missing body data", v20, 2u);
      MEMORY[0x242684668](v20, -1, -1);
    }

    swift_unknownObjectRelease();
    return 1;
  }
  v8 = v7;
  v9 = sub_2408E5564();
  v11 = v10;

  v12 = (void *)MEMORY[0x242684110]();
  sub_2408B7F94(a2, v9, v11, v6);
  objc_autoreleasePoolPop(v12);
  v21 = (_QWORD *)(a3 + 16);
  sub_240363D58(v9, v11);
  swift_unknownObjectRelease();
  result = swift_beginAccess();
  if (!__OFADD__(*v21, 1))
  {
    ++*v21;
    return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408B7F94(uint64_t *a1, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v6;
  double v7;
  double v8;

  v6 = *a1;
  objc_msgSend(a4, sel_timestamp);
  v8 = v7;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, _QWORD, double))(*(_QWORD *)(v6 + 96) + 8))(a2, a3, *(_QWORD *)(v6 + 80), v8);
  return swift_endAccess();
}

uint64_t sub_2408B8048(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  _OWORD v36[2];
  id v37[5];

  v37[4] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = *(void **)(v2 + 16);
  v6 = (void *)sub_2408E5CE4();
  v7 = objc_msgSend(v5, sel_valueForKey_, v6);

  if (v7)
  {
    sub_2408E5F54();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v36, 0, sizeof(v36));
  }
  sub_2408B8DF8((uint64_t)v36, (uint64_t)v37);
  if (!v37[3])
  {
    sub_2403ADA38((uint64_t)v37);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bm_allowedClassesForSecureCodingBMBookmark);
  sub_2408E5E40();

  v10 = (void *)sub_2408E5E34();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_2408E554C();
  v37[0] = 0;
  v12 = objc_msgSend(v8, sel_unarchivedObjectOfClasses_fromData_error_, v10, v11, v37);

  if (!v12)
  {
    v23 = v37[0];
    v24 = (void *)sub_2408E5534();

    swift_willThrow();
    if (qword_254355CB0 != -1)
      swift_once();
    v25 = sub_2408E5C48();
    __swift_project_value_buffer(v25, (uint64_t)qword_2543560F0);
    v26 = v24;
    v27 = v24;
    v28 = sub_2408E5C3C();
    v29 = sub_2408E5EAC();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v30 = 138412290;
      v32 = v24;
      v33 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v37[0] = v33;
      sub_2408E5F3C();
      *v31 = v33;

      _os_log_impl(&dword_240347000, v28, v29, "Error decoding bookmark: %@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257015860);
      swift_arrayDestroy();
      MEMORY[0x242684668](v31, -1, -1);
      MEMORY[0x242684668](v30, -1, -1);
      sub_240363D58(v34, v35);

    }
    else
    {
      sub_240363D58(v34, v35);

    }
    return 0;
  }
  v13 = v37[0];
  sub_2408E5F54();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254356140);
  if (swift_dynamicCast())
    v14 = *(_QWORD *)&v36[0];
  else
    v14 = 0;
  if (qword_254355CB0 != -1)
    swift_once();
  v15 = sub_2408E5C48();
  __swift_project_value_buffer(v15, (uint64_t)qword_2543560F0);
  swift_bridgeObjectRetain_n();
  v16 = sub_2408E5C3C();
  v17 = sub_2408E5EA0();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = (void *)swift_slowAlloc();
    v37[0] = v19;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v36[0] = sub_2403B3ED0(a1, a2, (uint64_t *)v37);
    sub_2408E5F3C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240347000, v16, v17, "Bookmark for %s found", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v19, -1, -1);
    MEMORY[0x242684668](v18, -1, -1);
    v21 = v35;
    v20 = v34;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    v20 = v34;
    v21 = v35;
  }
  sub_240363D58(v20, v21);

  return v14;
}

void sub_2408B858C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD *v28;
  id v29;
  void *v30;
  id v32[2];

  v4 = v3;
  v32[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (qword_254355CB0 != -1)
    swift_once();
  v7 = sub_2408E5C48();
  __swift_project_value_buffer(v7, (uint64_t)qword_2543560F0);
  swift_bridgeObjectRetain_n();
  v8 = sub_2408E5C3C();
  v9 = sub_2408E5EA0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (void *)swift_slowAlloc();
    v32[0] = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_2403B3ED0(a2, a3, (uint64_t *)v32);
    sub_2408E5F3C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240347000, v8, v9, "Saving bookmark for %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v11, -1, -1);
    MEMORY[0x242684668](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = (void *)objc_opt_self();
  v32[0] = 0;
  v13 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v32);
  v14 = v32[0];
  if (v13)
  {
    v15 = sub_2408E5564();
    v17 = v16;

    v18 = *(void **)(v4 + 16);
    sub_240360070(v15, v17);
    v19 = (void *)sub_2408E554C();
    sub_240363D58(v15, v17);
    v20 = (void *)sub_2408E5CE4();
    objc_msgSend(v18, sel_setValue_forKey_, v19, v20);
    sub_240363D58(v15, v17);

  }
  else
  {
    v21 = v14;
    v22 = (void *)sub_2408E5534();

    swift_willThrow();
    v23 = v22;
    v24 = v22;
    v25 = sub_2408E5C3C();
    v26 = sub_2408E5EAC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v27 = 138412290;
      v29 = v22;
      v30 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v32[0] = v30;
      sub_2408E5F3C();
      *v28 = v30;

      _os_log_impl(&dword_240347000, v25, v26, "Error encoding bookmark: %@", v27, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257015860);
      swift_arrayDestroy();
      MEMORY[0x242684668](v28, -1, -1);
      MEMORY[0x242684668](v27, -1, -1);

    }
    else
    {

    }
  }
}

id *BiomeEventIngestProcessor.deinit()
{
  id *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 14));
  v2 = (char *)v0 + *((_QWORD *)*v0 + 15);
  v5 = type metadata accessor for IngestConfig(0, v1[11], v3, v4);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BiomeEventIngestProcessor.__deallocating_deinit()
{
  BiomeEventIngestProcessor.deinit();
  return swift_deallocClassInstance();
}

LighthouseDataProcessor::BiomeEventIngestError_optional __swiftcall BiomeEventIngestError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  LighthouseDataProcessor::BiomeEventIngestError_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2408E608C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

unint64_t BiomeEventIngestError.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000013;
  if (*v0 != 1)
    v1 = 0xD000000000000019;
  if (*v0)
    return v1;
  else
    return 0xD000000000000016;
}

uint64_t sub_2408B8ADC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24040C9E0(*a1, *a2);
}

uint64_t sub_2408B8AE8()
{
  return sub_2408D49D0();
}

uint64_t sub_2408B8AF0()
{
  return sub_24040D68C();
}

uint64_t sub_2408B8AF8()
{
  return sub_24040DFF4();
}

LighthouseDataProcessor::BiomeEventIngestError_optional sub_2408B8B00(Swift::String *a1)
{
  return BiomeEventIngestError.init(rawValue:)(*a1);
}

unint64_t sub_2408B8B0C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = BiomeEventIngestError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_2408B8B44()
{
  unint64_t result;

  result = qword_257015840;
  if (!qword_257015840)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for BiomeEventIngestError, &type metadata for BiomeEventIngestError);
    atomic_store(result, (unint64_t *)&qword_257015840);
  }
  return result;
}

uint64_t sub_2408B8B88(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = swift_checkMetadataState();
  if (v5 <= 0x3F)
  {
    result = type metadata accessor for IngestConfig(319, *(_QWORD *)(a1 + 88), v3, v4);
    if (v6 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for BiomeEventIngestProcessor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BiomeEventIngestProcessor);
}

uint64_t method lookup function for BiomeEventIngestProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BiomeEventIngestProcessor.__allocating_init(eventIngestor:config:userDefaults:biomeUseCase:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of BiomeEventIngestProcessor.ingest()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 168) + *(_QWORD *)(*(_QWORD *)v0 + 168));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_2403B0350;
  return v4();
}

uint64_t storeEnumTagSinglePayload for BiomeEventIngestError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2408B8CF4 + 4 * byte_24091DE45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2408B8D28 + 4 * byte_24091DE40[v4]))();
}

uint64_t sub_2408B8D28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B8D30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408B8D38);
  return result;
}

uint64_t sub_2408B8D44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408B8D4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2408B8D50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408B8D58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BiomeEventIngestError()
{
  return &type metadata for BiomeEventIngestError;
}

uint64_t dispatch thunk of EventIngestor.append(data:timestamp:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of EventIngestor.commit()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 16) + *(_QWORD *)(a2 + 16));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2403B0644;
  return v7(a1, a2);
}

uint64_t sub_2408B8DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543563F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408B8E40()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2408B8E64()
{
  return swift_deallocObject();
}

void sub_2408B8E74(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_2408B77D8(a1, a2, v2);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_2408B8E94()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2408B8EC0(uint64_t a1)
{
  uint64_t v1;

  return sub_2408B7B64(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_2408B8ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570724D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570724D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "sessionId";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "events";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t sub_2408B9020()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for DillSessionEvent(0);
        sub_2404FA028(&qword_257015870, type metadata accessor for DillSessionEvent, (uint64_t)&unk_24091E100);
        sub_2408E5960();
      }
      else if (result == 1)
      {
        sub_2408E58B8();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

void sub_2408B912C()
{
  __asm { BR              X10 }
}

uint64_t sub_2408B9178(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_2408E59F0(), !v2))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16)
      || (type metadata accessor for DillSessionEvent(0),
          sub_2404FA028(&qword_257015870, type metadata accessor for DillSessionEvent, (uint64_t)&unk_24091E100),
          result = sub_2408E5A5C(),
          !v2))
    {
      type metadata accessor for DillSession(0);
      return sub_2408E578C();
    }
  }
  return result;
}

double sub_2408B9268@<D0>(uint64_t a1@<X8>)
{
  double result;

  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = 0.0;
  *(_OWORD *)a1 = xmmword_2408EB790;
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_2408B92A8()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2408B92C4()
{
  return sub_2408B9020();
}

void sub_2408B92D8()
{
  sub_2408B912C();
}

uint64_t sub_2408B92EC()
{
  sub_2404FA028(&qword_2570158A0, type metadata accessor for DillSession, (uint64_t)&unk_24091E230);
  return sub_2408E5828();
}

uint64_t sub_2408B933C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA0E8, (uint64_t)qword_2570724D8, a1);
}

uint64_t sub_2408B9358()
{
  sub_2404FA028(&qword_2570014E0, type metadata accessor for DillSession, (uint64_t)&unk_24091E268);
  return sub_2408E599C();
}

uint64_t sub_2408B9398()
{
  sub_2404FA028(&qword_2570014E0, type metadata accessor for DillSession, (uint64_t)&unk_24091E268);
  return sub_2408E59A8();
}

uint64_t sub_2408B93EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_2570724F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570724F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "timestamp";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 100;
  *(_QWORD *)v11 = "transcript";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 101;
  *(_QWORD *)v13 = "gfi";
  *((_QWORD *)v13 + 1) = 3;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 102;
  *(_QWORD *)v15 = "feedbackLearningUserInteraction";
  *((_QWORD *)v15 + 1) = 31;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 103;
  *(_QWORD *)v16 = "intelligenceFlowTelemetry";
  *(_QWORD *)(v16 + 8) = 25;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t sub_2408B95F4()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 'd':
          sub_2408B9704();
          break;
        case 'e':
          sub_2408B97D0();
          break;
        case 'f':
          sub_2408B98A0();
          break;
        case 'g':
          sub_2408B9970();
          break;
        default:
          if (result == 1)
            sub_2408E5924();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2408B9704()
{
  uint64_t v0;
  uint64_t result;

  result = sub_2408E58AC();
  if (v0)
    return sub_2403C2424(0, 0xF000000000000000);
  return result;
}

uint64_t sub_2408B97D0()
{
  uint64_t v0;
  uint64_t result;

  result = sub_2408E58AC();
  if (v0)
    return sub_2403C2424(0, 0xF000000000000000);
  return result;
}

uint64_t sub_2408B98A0()
{
  uint64_t v0;
  uint64_t result;

  result = sub_2408E58AC();
  if (v0)
    return sub_2403C2424(0, 0xF000000000000000);
  return result;
}

uint64_t sub_2408B9970()
{
  uint64_t v0;
  uint64_t result;

  result = sub_2408E58AC();
  if (v0)
    return sub_2403C2424(0, 0xF000000000000000);
  return result;
}

uint64_t sub_2408B9A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(double *)v0 == 0.0 || (result = sub_2408E5A2C(), !v1))
  {
    if ((*(_BYTE *)(v0 + 24) & 1) == 0)
      __asm { BR              X10 }
    type metadata accessor for DillSessionEvent(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2408B9B8C(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(result + 24) & 1) != 0 || (v1 = *(_QWORD *)(result + 16), (v1 & 0x3000000000000000) != 0))
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(result + 8);
    sub_2408C48D8(v2, v1);
    sub_2408E59F0();
    return sub_2408C48B8(v2, v1, 0);
  }
  return result;
}

uint64_t sub_2408B9C28(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(result + 24) & 1) != 0
    || (v1 = *(_QWORD *)(result + 16), (v1 & 0x3000000000000000) != 0x1000000000000000))
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(result + 8);
    sub_2408C48D8(v2, v1);
    sub_2408E59F0();
    return sub_2408C48B8(v2, v1, 0);
  }
  return result;
}

uint64_t sub_2408B9CD8(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(result + 24) & 1) != 0
    || (v1 = *(_QWORD *)(result + 16), (v1 & 0x3000000000000000) != 0x2000000000000000))
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(result + 8);
    sub_2408C48D8(v2, v1);
    sub_2408E59F0();
    return sub_2408C48B8(v2, v1, 0);
  }
  return result;
}

uint64_t sub_2408B9D88(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(result + 24) & 1) != 0
    || (v1 = *(_QWORD *)(result + 16), (v1 & 0x3000000000000000) != 0x3000000000000000))
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(result + 8);
    sub_2408C48D8(v2, v1);
    sub_2408E59F0();
    return sub_2408C48B8(v2, v1, 0);
  }
  return result;
}

uint64_t sub_2408B9E38@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  return result;
}

unint64_t sub_2408B9E70()
{
  return 0xD000000000000021;
}

uint64_t sub_2408B9E8C()
{
  return sub_2408B95F4();
}

uint64_t sub_2408B9EA0()
{
  return sub_2408B9A40();
}

uint64_t sub_2408B9EB4()
{
  sub_2404FA028(&qword_2570158A8, type metadata accessor for DillSessionEvent, (uint64_t)&unk_24091E0C8);
  return sub_2408E5828();
}

uint64_t sub_2408B9F04@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FFA0F0, (uint64_t)qword_2570724F0, a1);
}

uint64_t sub_2408B9F20()
{
  sub_2404FA028(&qword_257015870, type metadata accessor for DillSessionEvent, (uint64_t)&unk_24091E100);
  return sub_2408E599C();
}

uint64_t sub_2408B9F60()
{
  sub_2404FA028(&qword_257015870, type metadata accessor for DillSessionEvent, (uint64_t)&unk_24091E100);
  return sub_2408E59A8();
}

uint64_t sub_2408B9FB4()
{
  return sub_2404FA028(&qword_257015868, type metadata accessor for DillSessionEvent, (uint64_t)&unk_24091E010);
}

uint64_t sub_2408B9FE0()
{
  return sub_2404FA028(&qword_257015870, type metadata accessor for DillSessionEvent, (uint64_t)&unk_24091E100);
}

uint64_t sub_2408BA00C()
{
  return sub_2404FA028(&qword_257015878, type metadata accessor for DillSessionEvent, (uint64_t)&unk_24091E038);
}

uint64_t sub_2408BA038()
{
  return sub_2404FA028(&qword_257015880, type metadata accessor for DillSessionEvent, (uint64_t)&unk_24091E078);
}

uint64_t sub_2408BA064()
{
  return sub_2404FA028(&qword_257015888, type metadata accessor for DillSession, (uint64_t)&unk_24091E178);
}

uint64_t sub_2408BA090()
{
  return sub_2404FA028(&qword_2570014E0, type metadata accessor for DillSession, (uint64_t)&unk_24091E268);
}

uint64_t sub_2408BA0BC()
{
  return sub_2404FA028(&qword_257015890, type metadata accessor for DillSession, (uint64_t)&unk_24091E1A0);
}

uint64_t sub_2408BA0E8()
{
  return sub_2404FA028(&qword_257015898, type metadata accessor for DillSession, (uint64_t)&unk_24091E1E0);
}

void sub_2408BA114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_2408BA174(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x2408BA358);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_2408BA37C(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t result;
  char v52;
  char *v53;
  char v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;

  v71 = a1;
  v1 = type metadata accessor for ContextProtoEntityMatch(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v56 - v6;
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ContextProtoSpanMatchedEntity(0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v19);
  v26 = *((_QWORD *)v71 + 2);
  if (v26 != *((_QWORD *)v25 + 2))
  {
LABEL_34:
    v54 = 0;
    return v54 & 1;
  }
  v61 = v11;
  v67 = v15;
  v68 = v9;
  v70 = (uint64_t *)((char *)&v56 - v24);
  if (!v26 || v71 == v25)
  {
    v54 = 1;
    return v54 & 1;
  }
  v69 = v22;
  v57 = v2;
  v27 = 0;
  v28 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v63 = &v25[v28];
  v64 = &v71[v28];
  v62 = *(_QWORD *)(v23 + 72);
  v59 = v8;
  v60 = v14;
  v29 = (uint64_t)v17;
  v65 = v17;
  v30 = v8;
  v71 = v21;
  v31 = (uint64_t)v70;
  v58 = v26;
  while (1)
  {
    v32 = v62 * v27;
    sub_2403AE1A4((uint64_t)&v64[v62 * v27], v31, type metadata accessor for ContextProtoSpanMatchedEntity);
    sub_2403AE1A4((uint64_t)&v63[v32], (uint64_t)v21, type metadata accessor for ContextProtoSpanMatchedEntity);
    v33 = *(int *)(v69 + 20);
    v34 = (uint64_t)&v21[v33];
    v35 = v29 + *(int *)(v67 + 48);
    sub_2403A9210(v31 + v33, v29, &qword_256FFA3A8);
    sub_2403A9210(v34, v35, &qword_256FFA3A8);
    v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
    v37 = v36(v29, 1, v30);
    v38 = v29;
    v66 = v27;
    if (v37 == 1)
    {
      if (v36(v35, 1, v30) == 1)
      {
        sub_2403A97FC(v29, &qword_256FFA3A8);
        goto LABEL_15;
      }
      v55 = &qword_257000CA8;
LABEL_32:
      sub_2403A97FC(v38, v55);
LABEL_33:
      sub_240388AE4((uint64_t)v71, type metadata accessor for ContextProtoSpanMatchedEntity);
      sub_240388AE4((uint64_t)v70, type metadata accessor for ContextProtoSpanMatchedEntity);
      goto LABEL_34;
    }
    v39 = v14;
    sub_2403A9210(v29, (uint64_t)v14, &qword_256FFA3A8);
    if (v36(v35, 1, v30) == 1)
    {
      v55 = &qword_257000CA8;
LABEL_31:
      sub_240388AE4((uint64_t)v39, type metadata accessor for ToolKitProtoTypedValue);
      v38 = (uint64_t)v65;
      goto LABEL_32;
    }
    v40 = v61;
    sub_2403A91CC(v35, (uint64_t)v61, type metadata accessor for ToolKitProtoTypedValue);
    v41 = *v39;
    v42 = *v40;
    if ((~*v39 & 0xF000000000000007) == 0)
    {
      if ((~v42 & 0xF000000000000007) != 0)
        goto LABEL_29;
      goto LABEL_14;
    }
    v73 = *v39;
    if ((~v42 & 0xF000000000000007) == 0)
    {
      sub_240422794(v41);
LABEL_29:
      sub_240422794(v42);
      sub_2404227AC(v41);
      sub_2404227AC(v42);
LABEL_30:
      sub_240388AE4((uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
      v55 = &qword_256FFA3A8;
      goto LABEL_31;
    }
    v72 = v42;
    sub_240422794(v41);
    swift_retain();
    v43 = static ToolKitProtoTypedValueKind.== infix(_:_:)(&v73, &v72);
    swift_release();
    sub_2404227AC(v41);
    if ((v43 & 1) == 0)
      goto LABEL_30;
LABEL_14:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v44 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    sub_240388AE4((uint64_t)v39, type metadata accessor for ToolKitProtoTypedValue);
    sub_2403A97FC((uint64_t)v65, &qword_256FFA3A8);
    if ((v44 & 1) == 0)
      goto LABEL_33;
LABEL_15:
    v45 = *v70;
    v46 = *(_QWORD *)v71;
    v47 = *(_QWORD *)(*v70 + 16);
    if (v47 != *(_QWORD *)(*(_QWORD *)v71 + 16))
      goto LABEL_33;
    if (v47 && v45 != v46)
      break;
LABEL_22:
    v31 = (uint64_t)v70;
    v53 = v71;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v21 = v53;
    v54 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v53, type metadata accessor for ContextProtoSpanMatchedEntity);
    sub_240388AE4(v31, type metadata accessor for ContextProtoSpanMatchedEntity);
    if ((v54 & 1) != 0)
    {
      v29 = (uint64_t)v65;
      v27 = v66 + 1;
      v30 = v59;
      v14 = v60;
      if (v66 + 1 != v58)
        continue;
    }
    return v54 & 1;
  }
  v48 = 0;
  v49 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v50 = *(_QWORD *)(v57 + 72);
  while (1)
  {
    result = sub_2403AE1A4(v45 + v49, (uint64_t)v7, type metadata accessor for ContextProtoEntityMatch);
    if (v48 >= *(_QWORD *)(v46 + 16))
      break;
    sub_2403AE1A4(v46 + v49, (uint64_t)v5, type metadata accessor for ContextProtoEntityMatch);
    v52 = static ContextProtoEntityMatch.== infix(_:_:)(v7, v5);
    sub_240388AE4((uint64_t)v5, type metadata accessor for ContextProtoEntityMatch);
    sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoEntityMatch);
    if ((v52 & 1) == 0)
      goto LABEL_33;
    ++v48;
    v49 += v50;
    if (v47 == v48)
      goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408BA984(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ContextProtoRetrievedContext, (uint64_t (*)(char *, char *))static ContextProtoRetrievedContext.== infix(_:_:));
}

uint64_t sub_2408BA998(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ContextProtoRetrievedTool, (uint64_t (*)(char *, char *))static ContextProtoRetrievedTool.== infix(_:_:));
}

uint64_t sub_2408BA9AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_2403AE1A4(a1 + v16, (uint64_t)v14, a3);
        sub_2403AE1A4(a2 + v16, (uint64_t)v11, a3);
        v19 = a4(v14, v11);
        sub_240388AE4((uint64_t)v11, a3);
        sub_240388AE4((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_2408BAAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  BOOL v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v22 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    goto LABEL_20;
  if (!v11 || a1 == a2)
  {
    v18 = 1;
    return v18 & 1;
  }
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v23 = *(_QWORD *)(v8 + 72);
  v13 = v11 - 1;
  while (1)
  {
    sub_2403AE1A4(a1 + v12, (uint64_t)v10, type metadata accessor for ToolKitProtoTypedValue);
    sub_2403AE1A4(a2 + v12, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    v14 = *v10;
    v15 = *v7;
    if ((~*v10 & 0xF000000000000007) != 0)
      break;
    if ((~v15 & 0xF000000000000007) != 0)
      goto LABEL_18;
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v18 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypedValue);
    v20 = v13-- != 0;
    if ((v18 & 1) != 0)
    {
      v12 += v23;
      if (v20)
        continue;
    }
    return v18 & 1;
  }
  v25 = *v10;
  if ((~v15 & 0xF000000000000007) != 0)
  {
    v24 = v15;
    sub_240422794(v14);
    sub_240422794(v14);
    _s23LighthouseDataProcessor26ToolKitProtoTypedValueKindO2eeoiySbAC_ACtFZ_0((uint64_t)&v25, (uint64_t)&v24);
    v17 = v16;
    swift_release();
    sub_2404227AC(v14);
    if ((v17 & 1) == 0)
      goto LABEL_19;
    goto LABEL_10;
  }
  swift_retain();
LABEL_18:
  sub_240422794(v15);
  sub_2404227AC(v14);
  sub_2404227AC(v15);
LABEL_19:
  sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypedValue);
LABEL_20:
  v18 = 0;
  return v18 & 1;
}

uint64_t sub_2408BAD3C(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t (*)(char *, char *))static TranscriptProtoASTFlatExprUpdateVariant.== infix(_:_:));
}

uint64_t sub_2408BAD50(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_2408E617C(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_2408E617C() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_2408BAE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t updated;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  v15 = MEMORY[0x24BDAC7A8](updated);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v38 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
  {
LABEL_34:
    v35 = 0;
    return v35 & 1;
  }
  v47 = v13;
  v44 = v4;
  if (v22 && a1 != a2)
  {
    v46 = v18;
    v42 = v11;
    v43 = v5;
    v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v39 = *(_QWORD *)(v19 + 72);
    v40 = a1;
    v24 = v22 - 1;
    v41 = a2;
    v25 = (uint64_t)v47;
    while (1)
    {
      v45 = v24;
      sub_2403AE1A4(a1 + v23, (uint64_t)v21, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
      sub_2403AE1A4(a2 + v23, (uint64_t)v17, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
      v26 = *(_QWORD *)v21 == *(_QWORD *)v17 && *((_QWORD *)v21 + 1) == *((_QWORD *)v17 + 1);
      if (!v26 && (sub_2408E617C() & 1) == 0 || v21[16] != v17[16])
        break;
      v27 = *(int *)(v46 + 24);
      v28 = (uint64_t)&v17[v27];
      v29 = v25 + *(int *)(v42 + 48);
      sub_2403A9210((uint64_t)&v21[v27], v25, &qword_256FFA300);
      sub_2403A9210(v28, v29, &qword_256FFA300);
      v30 = v44;
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
      if (v31(v25, 1, v44) == 1)
      {
        if (v31(v29, 1, v30) != 1)
        {
          v36 = &qword_257000C50;
          goto LABEL_32;
        }
        sub_2403A97FC((uint64_t)v47, &qword_256FFA300);
      }
      else
      {
        sub_2403A9210(v25, (uint64_t)v10, &qword_256FFA300);
        if (v31(v29, 1, v30) == 1)
        {
          v36 = &qword_257000C50;
LABEL_31:
          sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoStatementID);
LABEL_32:
          sub_2403A97FC((uint64_t)v47, v36);
          break;
        }
        sub_2403A91CC(v29, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
        if (*(_DWORD *)v10 != *(_DWORD *)v7)
          goto LABEL_28;
        v32 = *((_QWORD *)v10 + 2);
        v33 = *((_QWORD *)v7 + 2);
        if (v32)
        {
          if (!v33 || (*((_QWORD *)v10 + 1) != *((_QWORD *)v7 + 1) || v32 != v33) && (sub_2408E617C() & 1) == 0)
          {
LABEL_28:
            sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
            v36 = &qword_256FFA300;
            goto LABEL_31;
          }
        }
        else if (v33)
        {
          goto LABEL_28;
        }
        sub_2408E57A4();
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v34 = sub_2408E5CD8();
        sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
        sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoStatementID);
        sub_2403A97FC((uint64_t)v47, &qword_256FFA300);
        if ((v34 & 1) == 0)
          break;
      }
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v35 = sub_2408E5CD8();
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
      sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
      v24 = v45 - 1;
      if ((v35 & 1) != 0)
      {
        a1 = v40;
        v23 += v39;
        a2 = v41;
        if (v45)
          continue;
      }
      return v35 & 1;
    }
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
    sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
    goto LABEL_34;
  }
  v35 = 1;
  return v35 & 1;
}

uint64_t sub_2408BB2B4(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Entity.Property, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV8Version1V6EntityV8PropertyV2eeoiySbAI_AItFZ_0);
}

uint64_t sub_2408BB2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  _QWORD *v33;
  char v34;
  char v35;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;

  v4 = type metadata accessor for ToolKitProtoDisplayRepresentation(0);
  v39 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC340);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (_QWORD **)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154D0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (_QWORD **)((char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x24BDAC7A8](v14);
  v20 = (_QWORD **)((char *)&v37 - v19);
  v21 = *(_QWORD *)(a1 + 16);
  v40 = a2;
  if (v21 != *(_QWORD *)(a2 + 16))
  {
LABEL_22:
    v35 = 0;
    return v35 & 1;
  }
  if (v21)
  {
    v22 = a1;
    if (a1 != v40)
    {
      v43 = v17;
      v44 = (char *)&v37 - v19;
      v23 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      v24 = *(_QWORD *)(v18 + 72);
      v37 = v6;
      v38 = v24;
      v25 = v21 - 1;
      while (1)
      {
        v42 = v25;
        v26 = v23;
        sub_2403AE1A4(v22 + v23, (uint64_t)v20, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
        v41 = v26;
        sub_2403AE1A4(v40 + v26, (uint64_t)v16, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
        v27 = *v20 == *v16 && v20[1] == v16[1];
        if (!v27 && (sub_2408E617C() & 1) == 0)
          break;
        v28 = *(int *)(v43 + 20);
        v29 = (uint64_t)v20 + v28;
        v30 = (uint64_t)v16 + v28;
        v31 = (uint64_t)&v12[*(int *)(v10 + 48)];
        sub_2403A9210(v29, (uint64_t)v12, &qword_256FFC340);
        sub_2403A9210(v30, v31, &qword_256FFC340);
        v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
        if (v32((uint64_t)v12, 1, v4) == 1)
        {
          if (v32(v31, 1, v4) != 1)
            goto LABEL_20;
          sub_2403A97FC((uint64_t)v12, &qword_256FFC340);
        }
        else
        {
          sub_2403A9210((uint64_t)v12, (uint64_t)v9, &qword_256FFC340);
          if (v32(v31, 1, v4) == 1)
          {
            sub_240388AE4((uint64_t)v9, type metadata accessor for ToolKitProtoDisplayRepresentation);
LABEL_20:
            sub_2403A97FC((uint64_t)v12, &qword_2570154D0);
            v20 = v44;
            break;
          }
          v33 = v37;
          sub_2403A91CC(v31, (uint64_t)v37, type metadata accessor for ToolKitProtoDisplayRepresentation);
          v34 = static ToolKitProtoDisplayRepresentation.== infix(_:_:)(v9, v33);
          sub_240388AE4((uint64_t)v33, type metadata accessor for ToolKitProtoDisplayRepresentation);
          sub_240388AE4((uint64_t)v9, type metadata accessor for ToolKitProtoDisplayRepresentation);
          sub_2403A97FC((uint64_t)v12, &qword_256FFC340);
          v20 = v44;
          if ((v34 & 1) == 0)
            break;
        }
        sub_2408E57A4();
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v20 = v44;
        v35 = sub_2408E5CD8();
        sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
        sub_240388AE4((uint64_t)v20, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
        v25 = v42 - 1;
        if ((v35 & 1) != 0)
        {
          v23 = v41 + v38;
          if (v42)
            continue;
        }
        return v35 & 1;
      }
      sub_240388AE4((uint64_t)v16, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
      sub_240388AE4((uint64_t)v20, type metadata accessor for ToolKitProtoTypeDefinition.Version1.Enumeration.Case);
      goto LABEL_22;
    }
  }
  v35 = 1;
  return v35 & 1;
}

uint64_t sub_2408BB6A0(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for TranscriptProtoStatementResult, (uint64_t (*)(char *, char *))static TranscriptProtoStatementResult.== infix(_:_:));
}

uint64_t sub_2408BB6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  BOOL v38;
  char v39;
  uint64_t *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = (uint64_t *)((char *)&v42 - v20);
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
  {
LABEL_36:
    v37 = 0;
    return v37 & 1;
  }
  v48 = v4;
  if (v22 && a1 != a2)
  {
    v50 = v18;
    v51 = v13;
    v46 = v11;
    v47 = v5;
    v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v43 = *(_QWORD *)(v19 + 72);
    v44 = a1;
    v24 = v22 - 1;
    v45 = a2;
    while (1)
    {
      sub_2403AE1A4(a1 + v23, (uint64_t)v21, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      sub_2403AE1A4(a2 + v23, (uint64_t)v17, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      v25 = *v21 == *v17 && v21[1] == v17[1];
      if (!v25 && (sub_2408E617C() & 1) == 0)
        break;
      v49 = v24;
      v26 = (uint64_t)v51;
      v27 = *(int *)(v50 + 20);
      v28 = (uint64_t)v17 + v27;
      v29 = (uint64_t)&v51[*(int *)(v46 + 48)];
      sub_2403A9210((uint64_t)v21 + v27, (uint64_t)v51, &qword_256FFA300);
      sub_2403A9210(v28, v29, &qword_256FFA300);
      v30 = v48;
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
      if (v31(v26, 1, v48) == 1)
      {
        if (v31(v29, 1, v30) != 1)
        {
          v40 = &qword_257000C50;
          v33 = (uint64_t)v51;
          goto LABEL_34;
        }
        sub_2403A97FC((uint64_t)v51, &qword_256FFA300);
        v32 = v49;
      }
      else
      {
        sub_2403A9210(v26, (uint64_t)v10, &qword_256FFA300);
        if (v31(v29, 1, v30) == 1)
        {
          v40 = &qword_257000C50;
          v33 = (uint64_t)v51;
LABEL_33:
          sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoStatementID);
LABEL_34:
          sub_2403A97FC(v33, v40);
          break;
        }
        sub_2403A91CC(v29, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
        v33 = (uint64_t)v51;
        if (*(_DWORD *)v10 != *(_DWORD *)v7)
          goto LABEL_30;
        v34 = *((_QWORD *)v10 + 2);
        v35 = *((_QWORD *)v7 + 2);
        if (v34)
        {
          if (!v35 || (*((_QWORD *)v10 + 1) != *((_QWORD *)v7 + 1) || v34 != v35) && (sub_2408E617C() & 1) == 0)
          {
LABEL_30:
            sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
            v40 = &qword_256FFA300;
            goto LABEL_33;
          }
        }
        else if (v35)
        {
          goto LABEL_30;
        }
        sub_2408E57A4();
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v36 = sub_2408E5CD8();
        sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
        sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoStatementID);
        sub_2403A97FC(v33, &qword_256FFA300);
        v32 = v49;
        if ((v36 & 1) == 0)
          break;
      }
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v37 = sub_2408E5CD8();
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
      v38 = v32 != 0;
      v24 = v32 - 1;
      v39 = v38;
      if ((v37 & 1) != 0)
      {
        a1 = v44;
        v23 += v43;
        a2 = v45;
        if ((v39 & 1) != 0)
          continue;
      }
      return v37 & 1;
    }
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
    sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoSpeechRequestCandidate);
    goto LABEL_36;
  }
  v37 = 1;
  return v37 & 1;
}

uint64_t sub_2408BBB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;

  v4 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E78);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = *(_QWORD *)(a1 + 16);
  v38 = a2;
  if (v21 != *(_QWORD *)(a2 + 16))
    goto LABEL_17;
  v41 = (char *)&v34 - v20;
  if (!v21 || a1 == v38)
  {
    v31 = 1;
    return v31 & 1;
  }
  v35 = v7;
  v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v36 = *(_QWORD *)(v19 + 72);
  v37 = v18;
  v23 = v21 - 1;
  v24 = (uint64_t)v41;
  while (1)
  {
    v40 = v23;
    v25 = v22;
    sub_2403AE1A4(a1 + v22, v24, type metadata accessor for TranscriptProtoASTFlatValue);
    v39 = v25;
    sub_2403AE1A4(v38 + v25, (uint64_t)v17, type metadata accessor for TranscriptProtoASTFlatValue);
    v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210(v24, (uint64_t)v13, &qword_256FFEC30);
    sub_2403A9210((uint64_t)v17, v26, &qword_256FFEC30);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v27(v13, 1, v4) != 1)
      break;
    if (v27((char *)v26, 1, v4) != 1)
      goto LABEL_15;
    sub_2403A97FC((uint64_t)v13, &qword_256FFEC30);
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v24 = (uint64_t)v41;
    v31 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_240388AE4(v24, type metadata accessor for TranscriptProtoASTFlatValue);
    v23 = v40 - 1;
    if ((v31 & 1) != 0)
    {
      v22 = v39 + v36;
      if (v40)
        continue;
    }
    return v31 & 1;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v10, &qword_256FFEC30);
  if (v27((char *)v26, 1, v4) != 1)
  {
    v28 = (uint64_t)v35;
    sub_2403A91CC(v26, (uint64_t)v35, type metadata accessor for TranscriptProtoAstflatValueEnum);
    v29 = static TranscriptProtoAstflatValueEnum.== infix(_:_:)(v10, v28);
    sub_240388AE4(v28, type metadata accessor for TranscriptProtoAstflatValueEnum);
    sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoAstflatValueEnum);
    sub_2403A97FC((uint64_t)v13, &qword_256FFEC30);
    v30 = v41;
    if ((v29 & 1) == 0)
      goto LABEL_16;
    goto LABEL_10;
  }
  sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoAstflatValueEnum);
LABEL_15:
  sub_2403A97FC((uint64_t)v13, &qword_257000E78);
  v30 = v41;
LABEL_16:
  v32 = (uint64_t)v30;
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_240388AE4(v32, type metadata accessor for TranscriptProtoASTFlatValue);
LABEL_17:
  v31 = 0;
  return v31 & 1;
}

uint64_t sub_2408BBEFC(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t (*)(char *, char *))static ContextProtoToolRetrievalType.== infix(_:_:));
}

uint64_t sub_2408BBF10(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor40TranscriptProtoRetrievedContextStatementV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_2408BBF24(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t (*)(char *, char *))static TranscriptProtoDynamicEnumerationEntityStatement.== infix(_:_:));
}

uint64_t sub_2408BBF38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  BOOL v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v68 = a1;
  v3 = type metadata accessor for TranscriptProtoCandidate(0);
  v69 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F40);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoParameter(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v52 - v17;
  v19 = type metadata accessor for TranscriptProtoParameterSet(0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v25 = *(_QWORD *)(v68 + 16);
  if (v25 != *(_QWORD *)(a2 + 16))
  {
LABEL_36:
    v51 = 0;
    return v51 & 1;
  }
  v61 = (uint64_t *)((char *)&v52 - v23);
  v62 = (uint64_t *)v24;
  v57 = v13;
  v70 = v12;
  v65 = v9;
  if (!v25 || v68 == a2)
  {
    v51 = 1;
    return v51 & 1;
  }
  v56 = v21;
  v58 = v5;
  v26 = 0;
  v27 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v28 = v68 + v27;
  v29 = a2 + v27;
  v30 = *(_QWORD *)(v22 + 72);
  v66 = v3;
  v32 = v61;
  v31 = v62;
  v53 = v29;
  v54 = v28;
  v59 = v8;
  v55 = v25;
  v52 = v30;
  while (1)
  {
    v60 = v26;
    v33 = v30 * v26;
    sub_2403AE1A4(v28 + v30 * v26, (uint64_t)v32, type metadata accessor for TranscriptProtoParameterSet);
    sub_2403AE1A4(v29 + v33, (uint64_t)v31, type metadata accessor for TranscriptProtoParameterSet);
    v34 = *v31;
    v67 = *v32;
    v35 = *(_QWORD *)(v34 + 16);
    v68 = *(_QWORD *)(v67 + 16);
    v36 = v65;
    if (v68 != v35)
    {
LABEL_35:
      sub_240388AE4((uint64_t)v62, type metadata accessor for TranscriptProtoParameterSet);
      sub_240388AE4((uint64_t)v61, type metadata accessor for TranscriptProtoParameterSet);
      goto LABEL_36;
    }
    if (v68 && v67 != v34)
      break;
LABEL_28:
    v32 = v61;
    v31 = v62;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v51 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v31, type metadata accessor for TranscriptProtoParameterSet);
    sub_240388AE4((uint64_t)v32, type metadata accessor for TranscriptProtoParameterSet);
    if ((v51 & 1) != 0)
    {
      v26 = v60 + 1;
      v28 = v54;
      v3 = v66;
      v30 = v52;
      v29 = v53;
      if (v60 + 1 != v55)
        continue;
    }
    return v51 & 1;
  }
  v37 = 0;
  v38 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v63 = *(_QWORD *)(v57 + 72);
  v64 = v34;
  while (1)
  {
    result = sub_2403AE1A4(v67 + v38, (uint64_t)v18, type metadata accessor for TranscriptProtoParameter);
    if (v37 >= *(_QWORD *)(v34 + 16))
      break;
    sub_2403AE1A4(v34 + v38, (uint64_t)v16, type metadata accessor for TranscriptProtoParameter);
    v40 = *(_QWORD *)v18 == *(_QWORD *)v16 && *((_QWORD *)v18 + 1) == *((_QWORD *)v16 + 1);
    v41 = v70;
    if (!v40 && (sub_2408E617C() & 1) == 0)
      goto LABEL_34;
    v42 = v16[24];
    if ((v18[24] & 1) != 0)
    {
      if (!v16[24])
        goto LABEL_34;
    }
    else
    {
      if (*((_QWORD *)v18 + 2) != *((_QWORD *)v16 + 2))
        v42 = 1;
      if ((v42 & 1) != 0)
        goto LABEL_34;
    }
    v43 = *(int *)(v41 + 24);
    v44 = (uint64_t)&v16[v43];
    v45 = (uint64_t)&v11[*(int *)(v36 + 48)];
    sub_2403A9210((uint64_t)&v18[v43], (uint64_t)v11, &qword_256FFA7B8);
    sub_2403A9210(v44, v45, &qword_256FFA7B8);
    v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
    if (v46((uint64_t)v11, 1, v3) == 1)
    {
      if (v46(v45, 1, v3) != 1)
        goto LABEL_33;
      sub_2403A97FC((uint64_t)v11, &qword_256FFA7B8);
      v34 = v64;
    }
    else
    {
      v47 = (uint64_t)v59;
      sub_2403A9210((uint64_t)v11, (uint64_t)v59, &qword_256FFA7B8);
      if (v46(v45, 1, v3) == 1)
      {
        sub_240388AE4(v47, type metadata accessor for TranscriptProtoCandidate);
LABEL_33:
        sub_2403A97FC((uint64_t)v11, &qword_257000F40);
LABEL_34:
        sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoParameter);
        sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoParameter);
        goto LABEL_35;
      }
      v48 = (uint64_t)v58;
      sub_2403A91CC(v45, (uint64_t)v58, type metadata accessor for TranscriptProtoCandidate);
      v49 = static TranscriptProtoCandidate.== infix(_:_:)(v47, v48);
      sub_240388AE4(v48, type metadata accessor for TranscriptProtoCandidate);
      sub_240388AE4(v47, type metadata accessor for TranscriptProtoCandidate);
      sub_2403A97FC((uint64_t)v11, &qword_256FFA7B8);
      v34 = v64;
      v36 = v65;
      if ((v49 & 1) == 0)
        goto LABEL_34;
    }
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v3 = v66;
    v50 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoParameter);
    sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoParameter);
    if ((v50 & 1) == 0)
      goto LABEL_35;
    ++v37;
    v38 += v63;
    if (v68 == v37)
      goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408BC508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  BOOL v41;
  char v42;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  v4 = type metadata accessor for TranscriptProtoCandidate(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F40);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoParameter(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v44 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
  {
LABEL_31:
    v40 = 0;
    return v40 & 1;
  }
  v46 = v18;
  v51 = v4;
  if (v22 && a1 != a2)
  {
    v52 = v13;
    v44 = v7;
    v45 = v10;
    v48 = v5;
    v49 = a1;
    v50 = a2;
    v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v47 = *(_QWORD *)(v19 + 72);
    v24 = v22 - 1;
    v25 = v46;
    while (1)
    {
      sub_2403AE1A4(v49 + v23, (uint64_t)v21, type metadata accessor for TranscriptProtoParameter);
      sub_2403AE1A4(v50 + v23, (uint64_t)v17, type metadata accessor for TranscriptProtoParameter);
      v26 = *(_QWORD *)v21 == *(_QWORD *)v17 && *((_QWORD *)v21 + 1) == *((_QWORD *)v17 + 1);
      if (!v26 && (sub_2408E617C() & 1) == 0)
        break;
      v27 = v17[24];
      if ((v21[24] & 1) != 0)
      {
        if (!v17[24])
          break;
      }
      else
      {
        if (*((_QWORD *)v21 + 2) != *((_QWORD *)v17 + 2))
          v27 = 1;
        if ((v27 & 1) != 0)
          break;
      }
      v53 = v24;
      v28 = *(int *)(v25 + 24);
      v29 = (uint64_t)&v17[v28];
      v30 = (uint64_t)v52;
      v31 = (uint64_t)&v52[*(int *)(v11 + 48)];
      sub_2403A9210((uint64_t)&v21[v28], (uint64_t)v52, &qword_256FFA7B8);
      sub_2403A9210(v29, v31, &qword_256FFA7B8);
      v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
      v33 = v51;
      if (v32(v30, 1, v51) == 1)
      {
        if (v32(v31, 1, v33) != 1)
          goto LABEL_29;
        sub_2403A97FC((uint64_t)v52, &qword_256FFA7B8);
        v34 = v53;
      }
      else
      {
        v35 = v11;
        v36 = v33;
        v37 = (uint64_t)v45;
        sub_2403A9210(v30, (uint64_t)v45, &qword_256FFA7B8);
        if (v32(v31, 1, v36) == 1)
        {
          sub_240388AE4(v37, type metadata accessor for TranscriptProtoCandidate);
LABEL_29:
          sub_2403A97FC((uint64_t)v52, &qword_257000F40);
          break;
        }
        v38 = (uint64_t)v44;
        sub_2403A91CC(v31, (uint64_t)v44, type metadata accessor for TranscriptProtoCandidate);
        v39 = static TranscriptProtoCandidate.== infix(_:_:)(v37, v38);
        sub_240388AE4(v38, type metadata accessor for TranscriptProtoCandidate);
        sub_240388AE4(v37, type metadata accessor for TranscriptProtoCandidate);
        sub_2403A97FC(v30, &qword_256FFA7B8);
        v11 = v35;
        v25 = v46;
        v34 = v53;
        if ((v39 & 1) == 0)
          break;
      }
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v40 = sub_2408E5CD8();
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoParameter);
      sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoParameter);
      v41 = v34 != 0;
      v24 = v34 - 1;
      v42 = v41;
      if ((v40 & 1) != 0)
      {
        v23 += v47;
        if ((v42 & 1) != 0)
          continue;
      }
      return v40 & 1;
    }
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoParameter);
    sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoParameter);
    goto LABEL_31;
  }
  v40 = 1;
  return v40 & 1;
}

uint64_t sub_2408BC91C(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t (*)(char *, char *))static ToolKitProtoToolDefinition.Version1.== infix(_:_:));
}

uint64_t sub_2408BC930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Predicate;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  BOOL v40;
  uint64_t *v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
  v15 = MEMORY[0x24BDAC7A8](Predicate);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = (char *)&v43 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  v51 = a2;
  if (v22 != *(_QWORD *)(a2 + 16))
  {
LABEL_36:
    v38 = 0;
    return v38 & 1;
  }
  if (v22 && a1 != v51)
  {
    v52 = v18;
    v49 = v11;
    v50 = v5;
    v47 = a1;
    v48 = v7;
    v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v45 = *(_QWORD *)(v19 + 72);
    v46 = v4;
    v24 = v22 - 1;
    v44 = v13;
    while (1)
    {
      sub_2403AE1A4(a1 + v23, (uint64_t)v21, type metadata accessor for TranscriptProtoQueryPredicate);
      sub_2403AE1A4(v51 + v23, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryPredicate);
      v25 = *(_QWORD *)v21 == *(_QWORD *)v17 && *((_QWORD *)v21 + 1) == *((_QWORD *)v17 + 1);
      if (!v25 && (sub_2408E617C() & 1) == 0 || v21[16] != v17[16])
        break;
      v26 = *(int *)(v52 + 24);
      v27 = (uint64_t)&v17[v26];
      v28 = (uint64_t)&v13[*(int *)(v49 + 48)];
      sub_2403A9210((uint64_t)&v21[v26], (uint64_t)v13, &qword_256FFA3A8);
      sub_2403A9210(v27, v28, &qword_256FFA3A8);
      v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
      if (v29((uint64_t)v13, 1, v4) == 1)
      {
        if (v29(v28, 1, v4) != 1)
        {
          v41 = &qword_257000CA8;
          goto LABEL_34;
        }
        sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
      }
      else
      {
        sub_2403A9210((uint64_t)v13, (uint64_t)v10, &qword_256FFA3A8);
        if (v29(v28, 1, v4) == 1)
        {
          v41 = &qword_257000CA8;
          goto LABEL_33;
        }
        v30 = v48;
        sub_2403A91CC(v28, (uint64_t)v48, type metadata accessor for ToolKitProtoTypedValue);
        v31 = *v10;
        v32 = *v30;
        if ((~*v10 & 0xF000000000000007) != 0)
        {
          v54 = *v10;
          if ((~v32 & 0xF000000000000007) == 0)
          {
            sub_240422794(v31);
LABEL_31:
            sub_240422794(v32);
            sub_2404227AC(v31);
            sub_2404227AC(v32);
LABEL_32:
            sub_240388AE4((uint64_t)v48, type metadata accessor for ToolKitProtoTypedValue);
            v41 = &qword_256FFA3A8;
LABEL_33:
            sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypedValue);
LABEL_34:
            sub_2403A97FC((uint64_t)v13, v41);
            break;
          }
          v53 = v32;
          sub_240422794(v31);
          swift_retain();
          v33 = static ToolKitProtoTypedValueKind.== infix(_:_:)(&v54, &v53);
          swift_release();
          sub_2404227AC(v31);
          if ((v33 & 1) == 0)
            goto LABEL_32;
        }
        else if ((~v32 & 0xF000000000000007) != 0)
        {
          goto LABEL_31;
        }
        v34 = (uint64_t)v10;
        v35 = (uint64_t)v48;
        sub_2408E57A4();
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v36 = sub_2408E5CD8();
        v37 = v35;
        v10 = (uint64_t *)v34;
        v13 = v44;
        sub_240388AE4(v37, type metadata accessor for ToolKitProtoTypedValue);
        sub_240388AE4(v34, type metadata accessor for ToolKitProtoTypedValue);
        sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
        if ((v36 & 1) == 0)
          break;
      }
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v38 = sub_2408E5CD8();
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryPredicate);
      sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoQueryPredicate);
      v40 = v24-- != 0;
      if ((v38 & 1) != 0)
      {
        v4 = v46;
        v23 += v45;
        a1 = v47;
        if (v40)
          continue;
      }
      return v38 & 1;
    }
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryPredicate);
    sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoQueryPredicate);
    goto LABEL_36;
  }
  v38 = 1;
  return v38 & 1;
}

uint64_t sub_2408BCE10(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t (*)(char *, char *))static ContextProtoDynamicEnumerationEntity.== infix(_:_:));
}

uint64_t sub_2408BCE24(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int EnumCaseMultiPayload;
  _QWORD *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  unsigned __int8 *v51;
  int v52;
  int v53;
  char v54;
  uint64_t v55;
  char v56;
  BOOL v58;
  uint64_t *v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v77 = a1;
  v62 = type metadata accessor for ToolKitProtoTypeIdentifier.Custom(0);
  MEMORY[0x24BDAC7A8](v62);
  v70 = (uint64_t *)((char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v61 = type metadata accessor for ToolKitProtoTypeIdentifier.Primitive(0);
  MEMORY[0x24BDAC7A8](v61);
  v67 = (unsigned __int8 *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570127D0);
  MEMORY[0x24BDAC7A8](v72);
  v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ToolKitProtoTypeIdentifierKind(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v61 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v61 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA800);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015570);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v29 = *(_QWORD *)(v77 + 16);
  if (v29 != *(_QWORD *)(a2 + 16))
    goto LABEL_81;
  v75 = v20;
  v76 = v28;
  v65 = v11;
  v66 = v14;
  v63 = v8;
  v64 = v7;
  v73 = v16;
  v74 = v19;
  if (!v29 || v77 == a2)
  {
    v56 = 1;
    return v56 & 1;
  }
  v71 = v25;
  v30 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v68 = *(_QWORD *)(v26 + 72);
  v69 = a2;
  v31 = v29 - 1;
  v32 = v6;
  v33 = v76;
  v78 = (uint64_t)&v61 - v27;
  v35 = v63;
  v34 = v64;
  v36 = (uint64_t)v22;
  while (1)
  {
    v37 = (uint64_t)v32;
    v38 = v78;
    sub_2403AE1A4(v77 + v30, v78, type metadata accessor for ToolKitProtoTypeIdentifier);
    sub_2403AE1A4(a2 + v30, v33, type metadata accessor for ToolKitProtoTypeIdentifier);
    v39 = v36 + *(int *)(v75 + 48);
    sub_2403A9210(v38, v36, &qword_256FFA800);
    sub_2403A9210(v33, v39, &qword_256FFA800);
    v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
    if (v40(v36, 1, v34) != 1)
      break;
    v32 = (char *)v37;
    if (v40(v39, 1, v34) != 1)
    {
      v59 = &qword_257015570;
      goto LABEL_80;
    }
LABEL_25:
    sub_2403A97FC(v36, &qword_256FFA800);
    v55 = v78;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v33 = v76;
    v56 = sub_2408E5CD8();
    sub_240388AE4(v33, type metadata accessor for ToolKitProtoTypeIdentifier);
    sub_240388AE4(v55, type metadata accessor for ToolKitProtoTypeIdentifier);
    v58 = v31-- != 0;
    if ((v56 & 1) != 0)
    {
      a2 = v69;
      v30 += v68;
      if (v58)
        continue;
    }
    return v56 & 1;
  }
  v41 = (uint64_t)v74;
  sub_2403A9210(v36, (uint64_t)v74, &qword_256FFA800);
  if (v40(v39, 1, v34) == 1)
  {
    v59 = &qword_257015570;
    goto LABEL_79;
  }
  v42 = (uint64_t)v73;
  sub_2403A91CC(v39, (uint64_t)v73, type metadata accessor for ToolKitProtoTypeIdentifierKind);
  v32 = (char *)v37;
  v43 = v37 + *(int *)(v72 + 48);
  sub_2403AE1A4(v41, v37, type metadata accessor for ToolKitProtoTypeIdentifierKind);
  sub_2403AE1A4(v42, v43, type metadata accessor for ToolKitProtoTypeIdentifierKind);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v44 = v65;
    sub_2403AE1A4(v37, (uint64_t)v65, type metadata accessor for ToolKitProtoTypeIdentifierKind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v46 = v70;
    if (EnumCaseMultiPayload != 1)
    {
      sub_240388AE4((uint64_t)v44, type metadata accessor for ToolKitProtoTypeIdentifier.Custom);
      v42 = (uint64_t)v73;
      goto LABEL_77;
    }
    sub_2403A91CC(v43, (uint64_t)v70, type metadata accessor for ToolKitProtoTypeIdentifier.Custom);
    if ((*v44 != *v46 || v44[1] != v46[1]) && (sub_2408E617C() & 1) == 0
      || (v44[2] != v46[2] || v44[3] != v46[3]) && (sub_2408E617C() & 1) == 0
      || (sub_2408E57A4(),
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]), v41 = (uint64_t)v74, v46 = v70, v47 = sub_2408E5CD8(), v44 = v65, (v47 & 1) == 0))
    {
      sub_240388AE4((uint64_t)v46, type metadata accessor for ToolKitProtoTypeIdentifier.Custom);
      sub_240388AE4((uint64_t)v44, type metadata accessor for ToolKitProtoTypeIdentifier.Custom);
      sub_240388AE4(v37, type metadata accessor for ToolKitProtoTypeIdentifierKind);
      v42 = (uint64_t)v73;
      goto LABEL_78;
    }
    sub_240388AE4((uint64_t)v46, type metadata accessor for ToolKitProtoTypeIdentifier.Custom);
    sub_240388AE4((uint64_t)v44, type metadata accessor for ToolKitProtoTypeIdentifier.Custom);
    v42 = (uint64_t)v73;
    v35 = v63;
    v34 = v64;
    goto LABEL_24;
  }
  v48 = (uint64_t)v66;
  sub_2403AE1A4(v37, (uint64_t)v66, type metadata accessor for ToolKitProtoTypeIdentifierKind);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v49 = v43;
    v50 = (unsigned __int8 *)v48;
    v51 = v67;
    sub_2403A91CC(v49, (uint64_t)v67, type metadata accessor for ToolKitProtoTypeIdentifier.Primitive);
    v52 = *v50;
    v53 = *v51;
    if (v52 != 41)
    {
      v35 = v63;
      v34 = v64;
      if (v53 != 41)
      {
        switch(v52)
        {
          case 23:
            if (v53 != 23)
              break;
            goto LABEL_22;
          case 24:
            if (v53 != 24)
              break;
            goto LABEL_22;
          case 25:
            if (v53 != 25)
              break;
            goto LABEL_22;
          case 26:
            if (v53 != 26)
              break;
            goto LABEL_22;
          case 27:
            if (v53 != 27)
              break;
            goto LABEL_22;
          case 28:
            if (v53 != 28)
              break;
            goto LABEL_22;
          case 29:
            if (v53 != 29)
              break;
            goto LABEL_22;
          case 30:
            if (v53 != 30)
              break;
            goto LABEL_22;
          case 31:
            if (v53 != 31)
              break;
            goto LABEL_22;
          case 32:
            if (v53 != 32)
              break;
            goto LABEL_22;
          case 33:
            if (v53 != 33)
              break;
            goto LABEL_22;
          case 34:
            if (v53 != 34)
              break;
            goto LABEL_22;
          case 35:
            if (v53 != 35)
              break;
            goto LABEL_22;
          case 36:
            if (v53 != 36)
              break;
            goto LABEL_22;
          case 37:
            if (v53 != 37)
              break;
            goto LABEL_22;
          case 38:
            if (v53 != 38)
              break;
            goto LABEL_22;
          case 39:
            if (v53 != 39)
              break;
            goto LABEL_22;
          case 40:
            if (v53 != 40)
              break;
            goto LABEL_22;
          default:
            if (v52 != v53 || (v53 - 41) >= 0xFFFFFFEE)
              break;
            goto LABEL_22;
        }
      }
LABEL_71:
      sub_240388AE4((uint64_t)v51, type metadata accessor for ToolKitProtoTypeIdentifier.Primitive);
      sub_240388AE4((uint64_t)v66, type metadata accessor for ToolKitProtoTypeIdentifier.Primitive);
      sub_240388AE4(v37, type metadata accessor for ToolKitProtoTypeIdentifierKind);
      goto LABEL_78;
    }
    v35 = v63;
    v34 = v64;
    if (v53 != 41)
      goto LABEL_71;
LABEL_22:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v42 = (uint64_t)v73;
    v41 = (uint64_t)v74;
    v54 = sub_2408E5CD8();
    v51 = v67;
    if ((v54 & 1) == 0)
      goto LABEL_71;
    sub_240388AE4((uint64_t)v67, type metadata accessor for ToolKitProtoTypeIdentifier.Primitive);
    sub_240388AE4((uint64_t)v66, type metadata accessor for ToolKitProtoTypeIdentifier.Primitive);
LABEL_24:
    sub_240388AE4(v37, type metadata accessor for ToolKitProtoTypeIdentifierKind);
    sub_240388AE4(v42, type metadata accessor for ToolKitProtoTypeIdentifierKind);
    sub_240388AE4(v41, type metadata accessor for ToolKitProtoTypeIdentifierKind);
    goto LABEL_25;
  }
  sub_240388AE4(v48, type metadata accessor for ToolKitProtoTypeIdentifier.Primitive);
LABEL_77:
  sub_2403A97FC(v37, &qword_2570127D0);
LABEL_78:
  sub_240388AE4(v42, type metadata accessor for ToolKitProtoTypeIdentifierKind);
  v59 = &qword_256FFA800;
LABEL_79:
  sub_240388AE4(v41, type metadata accessor for ToolKitProtoTypeIdentifierKind);
  v33 = v76;
LABEL_80:
  sub_2403A97FC(v36, v59);
  sub_240388AE4(v33, type metadata accessor for ToolKitProtoTypeIdentifier);
  sub_240388AE4(v78, type metadata accessor for ToolKitProtoTypeIdentifier);
LABEL_81:
  v56 = 0;
  return v56 & 1;
}

uint64_t sub_2408BD6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t Results;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = type metadata accessor for TranscriptProtoCandidate(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - v9;
  Results = type metadata accessor for TranscriptProtoQueryResults(0);
  v12 = MEMORY[0x24BDAC7A8](Results);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 != *(_QWORD *)(a2 + 16))
  {
LABEL_17:
    v30 = 0;
    return v30 & 1;
  }
  v40 = (uint64_t)&v31 - v16;
  if (!v17 || a1 == a2)
  {
    v30 = 1;
    return v30 & 1;
  }
  v32 = v5;
  v18 = 0;
  v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v37 = a2 + v19;
  v38 = a1 + v19;
  v36 = *(_QWORD *)(v15 + 72);
  v20 = v40;
  v34 = Results;
  v35 = v14;
  v33 = v17;
  while (1)
  {
    v39 = v18;
    v21 = v36 * v18;
    sub_2403AE1A4(v38 + v36 * v18, v20, type metadata accessor for TranscriptProtoQueryResults);
    sub_2403AE1A4(v37 + v21, (uint64_t)v14, type metadata accessor for TranscriptProtoQueryResults);
    v22 = *(_QWORD *)v20;
    v23 = *(_QWORD *)v14;
    v24 = *(_QWORD *)(*(_QWORD *)v20 + 16);
    if (v24 != *(_QWORD *)(*(_QWORD *)v14 + 16))
    {
LABEL_16:
      sub_240388AE4((uint64_t)v35, type metadata accessor for TranscriptProtoQueryResults);
      sub_240388AE4(v40, type metadata accessor for TranscriptProtoQueryResults);
      goto LABEL_17;
    }
    if (v24 && v22 != v23)
      break;
LABEL_12:
    v14 = v35;
    v20 = v40;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v30 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoQueryResults);
    sub_240388AE4(v20, type metadata accessor for TranscriptProtoQueryResults);
    if ((v30 & 1) != 0)
    {
      v18 = v39 + 1;
      if (v39 + 1 != v33)
        continue;
    }
    return v30 & 1;
  }
  v25 = 0;
  v26 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v27 = *(_QWORD *)(v32 + 72);
  while (1)
  {
    result = sub_2403AE1A4(v22 + v26, (uint64_t)v10, type metadata accessor for TranscriptProtoCandidate);
    if (v25 >= *(_QWORD *)(v23 + 16))
      break;
    sub_2403AE1A4(v23 + v26, (uint64_t)v8, type metadata accessor for TranscriptProtoCandidate);
    v29 = static TranscriptProtoCandidate.== infix(_:_:)(v10, v8);
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoCandidate);
    sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoCandidate);
    if ((v29 & 1) == 0)
      goto LABEL_16;
    ++v25;
    v26 += v27;
    if (v24 == v25)
      goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_2408BD9D8(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for TranscriptProtoCandidate, (uint64_t (*)(char *, char *))static TranscriptProtoCandidate.== infix(_:_:));
}

uint64_t sub_2408BD9EC(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor32TranscriptProtoResponseParameterV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_2408BDA00(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t (*)(char *, char *))static TranscriptProtoInterpretedStatementResult.== infix(_:_:));
}

uint64_t sub_2408BDA14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;

  v4 = type metadata accessor for TranscriptProtoUitype(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEA88);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FB8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoUIType(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = *(_QWORD *)(a1 + 16);
  v38 = a2;
  if (v21 != *(_QWORD *)(a2 + 16))
    goto LABEL_17;
  v41 = (char *)&v34 - v20;
  if (!v21 || a1 == v38)
  {
    v31 = 1;
    return v31 & 1;
  }
  v35 = v7;
  v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v36 = *(_QWORD *)(v19 + 72);
  v37 = v18;
  v23 = v21 - 1;
  v24 = (uint64_t)v41;
  while (1)
  {
    v40 = v23;
    v25 = v22;
    sub_2403AE1A4(a1 + v22, v24, type metadata accessor for TranscriptProtoUIType);
    v39 = v25;
    sub_2403AE1A4(v38 + v25, (uint64_t)v17, type metadata accessor for TranscriptProtoUIType);
    v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210(v24, (uint64_t)v13, &qword_256FFEA88);
    sub_2403A9210((uint64_t)v17, v26, &qword_256FFEA88);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v27(v13, 1, v4) != 1)
      break;
    if (v27((char *)v26, 1, v4) != 1)
      goto LABEL_15;
    sub_2403A97FC((uint64_t)v13, &qword_256FFEA88);
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v24 = (uint64_t)v41;
    v31 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoUIType);
    sub_240388AE4(v24, type metadata accessor for TranscriptProtoUIType);
    v23 = v40 - 1;
    if ((v31 & 1) != 0)
    {
      v22 = v39 + v36;
      if (v40)
        continue;
    }
    return v31 & 1;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v10, &qword_256FFEA88);
  if (v27((char *)v26, 1, v4) != 1)
  {
    v28 = (uint64_t)v35;
    sub_2403A91CC(v26, (uint64_t)v35, type metadata accessor for TranscriptProtoUitype);
    v29 = static TranscriptProtoUitype.== infix(_:_:)(v10, v28);
    sub_240388AE4(v28, type metadata accessor for TranscriptProtoUitype);
    sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoUitype);
    sub_2403A97FC((uint64_t)v13, &qword_256FFEA88);
    v30 = v41;
    if ((v29 & 1) == 0)
      goto LABEL_16;
    goto LABEL_10;
  }
  sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoUitype);
LABEL_15:
  sub_2403A97FC((uint64_t)v13, &qword_257000FB8);
  v30 = v41;
LABEL_16:
  v32 = (uint64_t)v30;
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoUIType);
  sub_240388AE4(v32, type metadata accessor for TranscriptProtoUIType);
LABEL_17:
  v31 = 0;
  return v31 & 1;
}

uint64_t sub_2408BDDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  BOOL v38;
  uint64_t *v39;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v41 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  v4 = MEMORY[0x24BDAC7A8](v41);
  v42 = (uint64_t *)((char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v41 - v6;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700BD40);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TranscriptProtoLabel(0);
  v52 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v50 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FA8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FA0);
  MEMORY[0x24BDAC7A8](v51);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for TranscriptProtoUILabel(0);
  v16 = MEMORY[0x24BDAC7A8](v49);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v41 - v20;
  v53 = a1;
  v54 = a2;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
    goto LABEL_28;
  if (!v22 || v53 == v54)
  {
    v36 = 1;
    return v36 & 1;
  }
  v46 = v7;
  v48 = v13;
  v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v24 = *(_QWORD *)(v19 + 72);
  v25 = v22 - 1;
  v45 = v9;
  v47 = (char *)&v41 - v20;
  while (1)
  {
    sub_2403AE1A4(v53 + v23, (uint64_t)v21, type metadata accessor for TranscriptProtoUILabel);
    sub_2403AE1A4(v54 + v23, (uint64_t)v18, type metadata accessor for TranscriptProtoUILabel);
    v26 = (uint64_t)&v15[*(int *)(v51 + 48)];
    sub_2403A9210((uint64_t)v21, (uint64_t)v15, &qword_257000FA8);
    sub_2403A9210((uint64_t)v18, v26, &qword_257000FA8);
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
    if (v27((uint64_t)v15, 1, v9) == 1)
    {
      v28 = v27(v26, 1, v9);
      v21 = v47;
      if (v28 != 1)
      {
        v39 = &qword_257000FA0;
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    v29 = (uint64_t)v48;
    sub_2403A9210((uint64_t)v15, (uint64_t)v48, &qword_257000FA8);
    if (v27(v26, 1, v9) == 1)
      break;
    v30 = v50;
    sub_2403A91CC(v26, v50, type metadata accessor for TranscriptProtoLabel);
    v31 = v43;
    v32 = v43 + *(int *)(v44 + 48);
    sub_2403AE1A4(v29, v43, type metadata accessor for TranscriptProtoLabel);
    sub_2403AE1A4(v30, v32, type metadata accessor for TranscriptProtoLabel);
    v33 = v31;
    v34 = v46;
    sub_2403A91CC(v33, (uint64_t)v46, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    v35 = v42;
    sub_2403A91CC(v32, (uint64_t)v42, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    if ((*v34 != *v35 || v34[1] != v35[1]) && (sub_2408E617C() & 1) == 0
      || (v34[2] != v35[2] || v34[3] != v35[3]) && (sub_2408E617C() & 1) == 0
      || (sub_2408E57A4(),
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]), v34 = v46, (sub_2408E5CD8() & 1) == 0))
    {
      sub_240388AE4((uint64_t)v35, type metadata accessor for TranscriptProtoUIConfirmationLabel);
      sub_240388AE4((uint64_t)v34, type metadata accessor for TranscriptProtoUIConfirmationLabel);
      sub_240388AE4(v50, type metadata accessor for TranscriptProtoLabel);
      v39 = &qword_257000FA8;
      goto LABEL_26;
    }
    sub_240388AE4((uint64_t)v35, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    sub_240388AE4((uint64_t)v34, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    sub_240388AE4(v50, type metadata accessor for TranscriptProtoLabel);
    sub_240388AE4((uint64_t)v48, type metadata accessor for TranscriptProtoLabel);
    v21 = v47;
LABEL_17:
    sub_2403A97FC((uint64_t)v15, &qword_257000FA8);
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v36 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoUILabel);
    sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoUILabel);
    v38 = v25-- != 0;
    if ((v36 & 1) != 0)
    {
      v23 += v24;
      v9 = v45;
      if (v38)
        continue;
    }
    return v36 & 1;
  }
  v39 = &qword_257000FA0;
LABEL_26:
  sub_240388AE4((uint64_t)v48, type metadata accessor for TranscriptProtoLabel);
  v21 = v47;
LABEL_27:
  sub_2403A97FC((uint64_t)v15, v39);
  sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoUILabel);
  sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoUILabel);
LABEL_28:
  v36 = 0;
  return v36 & 1;
}

uint64_t sub_2408BE378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  char v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;

  v4 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE9F8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001028);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoVisualOutput(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = *(_QWORD *)(a1 + 16);
  v39 = a2;
  if (v21 != *(_QWORD *)(a2 + 16))
    goto LABEL_17;
  v42 = (char *)&v35 - v20;
  if (!v21 || a1 == v39)
  {
    v32 = 1;
    return v32 & 1;
  }
  v36 = v7;
  v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v37 = *(_QWORD *)(v19 + 72);
  v38 = v18;
  v23 = v21 - 1;
  v24 = (uint64_t)v42;
  while (1)
  {
    v41 = v23;
    v25 = v22;
    sub_2403AE1A4(a1 + v22, v24, type metadata accessor for TranscriptProtoVisualOutput);
    v40 = v25;
    sub_2403AE1A4(v39 + v25, (uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutput);
    v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210(v24, (uint64_t)v13, &qword_256FFE9F8);
    sub_2403A9210((uint64_t)v17, v26, &qword_256FFE9F8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v27(v13, 1, v4) != 1)
      break;
    if (v27((char *)v26, 1, v4) != 1)
      goto LABEL_15;
    sub_2403A97FC((uint64_t)v13, &qword_256FFE9F8);
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v24 = (uint64_t)v42;
    v32 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutput);
    sub_240388AE4(v24, type metadata accessor for TranscriptProtoVisualOutput);
    v23 = v41 - 1;
    if ((v32 & 1) != 0)
    {
      v22 = v40 + v37;
      if (v41)
        continue;
    }
    return v32 & 1;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v10, &qword_256FFE9F8);
  if (v27((char *)v26, 1, v4) != 1)
  {
    v28 = (uint64_t)v36;
    sub_2403A91CC(v26, (uint64_t)v36, type metadata accessor for TranscriptProtoVisualOutputType);
    static TranscriptProtoVisualOutputType.== infix(_:_:)((uint64_t)v10, v28);
    v30 = v29;
    sub_240388AE4(v28, type metadata accessor for TranscriptProtoVisualOutputType);
    sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoVisualOutputType);
    sub_2403A97FC((uint64_t)v13, &qword_256FFE9F8);
    v31 = v42;
    if ((v30 & 1) == 0)
      goto LABEL_16;
    goto LABEL_10;
  }
  sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoVisualOutputType);
LABEL_15:
  sub_2403A97FC((uint64_t)v13, &qword_257001028);
  v31 = v42;
LABEL_16:
  v33 = (uint64_t)v31;
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutput);
  sub_240388AE4(v33, type metadata accessor for TranscriptProtoVisualOutput);
LABEL_17:
  v32 = 0;
  return v32 & 1;
}

uint64_t sub_2408BE728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v16 = type metadata accessor for TranscriptProtoStatementID(0);
  v4 = MEMORY[0x24BDAC7A8](v16);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v15 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 == *(_QWORD *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
      return 1;
    v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v15 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_2403AE1A4(a1 + v11, (uint64_t)v9, type metadata accessor for TranscriptProtoStatementID);
      sub_2403AE1A4(a2 + v11, (uint64_t)v6, type metadata accessor for TranscriptProtoStatementID);
      if (*(_DWORD *)v9 != *(_DWORD *)v6)
        break;
      v12 = *((_QWORD *)v9 + 2);
      v13 = *((_QWORD *)v6 + 2);
      if (v12)
      {
        if (!v13 || (*((_QWORD *)v9 + 1) != *((_QWORD *)v6 + 1) || v12 != v13) && (sub_2408E617C() & 1) == 0)
          break;
      }
      else if (v13)
      {
        break;
      }
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      if ((sub_2408E5CD8() & 1) == 0)
        break;
      sub_240388AE4((uint64_t)v6, type metadata accessor for TranscriptProtoStatementID);
      sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoStatementID);
      v11 += v15;
      if (!--v10)
        return 1;
    }
    sub_240388AE4((uint64_t)v6, type metadata accessor for TranscriptProtoStatementID);
    sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoStatementID);
  }
  return 0;
}

uint64_t sub_2408BE90C(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ToolKitProtoComparisonPredicate, (uint64_t (*)(char *, char *))static ToolKitProtoComparisonPredicate.== infix(_:_:));
}

uint64_t sub_2408BE920(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ContextProtoEntityMatch, (uint64_t (*)(char *, char *))static ContextProtoEntityMatch.== infix(_:_:));
}

uint64_t sub_2408BE934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t *v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  BOOL v43;
  uint64_t *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;

  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TranscriptProtoVariableSetter(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = (uint64_t *)((char *)&v46 - v20);
  v22 = *(_QWORD *)(a1 + 16);
  v52 = a2;
  if (v22 != *(_QWORD *)(a2 + 16))
    goto LABEL_31;
  if (!v22 || a1 == v52)
  {
    v41 = 1;
    return v41 & 1;
  }
  v54 = v18;
  v55 = v17;
  v50 = v11;
  v51 = v5;
  v49 = v7;
  v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v24 = *(_QWORD *)(v19 + 72);
  v47 = v4;
  v48 = v24;
  v25 = v22 - 1;
  v53 = (uint64_t *)((char *)&v46 - v20);
  while (1)
  {
    sub_2403AE1A4(a1 + v23, (uint64_t)v21, type metadata accessor for TranscriptProtoVariableSetter);
    sub_2403AE1A4(v52 + v23, (uint64_t)v17, type metadata accessor for TranscriptProtoVariableSetter);
    v26 = *(int *)(v54 + 20);
    v27 = (uint64_t)v21 + v26;
    v28 = (uint64_t)v17 + v26;
    v29 = (uint64_t)&v13[*(int *)(v50 + 48)];
    sub_2403A9210(v27, (uint64_t)v13, &qword_256FFA3A8);
    sub_2403A9210(v28, v29, &qword_256FFA3A8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    if (v30(v13, 1, v4) != 1)
      break;
    if (v30((char *)v29, 1, v4) != 1)
    {
      v31 = v55;
      v32 = v53;
      v44 = &qword_257000CA8;
      goto LABEL_29;
    }
    sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
    v31 = v55;
    v32 = v53;
LABEL_15:
    if ((sub_24088FCEC(*v32, *v31) & 1) == 0)
      goto LABEL_30;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v17 = v55;
    v21 = v53;
    v41 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoVariableSetter);
    sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoVariableSetter);
    v43 = v25-- != 0;
    if ((v41 & 1) != 0)
    {
      v23 += v48;
      if (v43)
        continue;
    }
    return v41 & 1;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v10, &qword_256FFA3A8);
  if (v30((char *)v29, 1, v4) == 1)
  {
    v31 = v55;
    v32 = v53;
    v44 = &qword_257000CA8;
    goto LABEL_28;
  }
  v33 = v49;
  sub_2403A91CC(v29, (uint64_t)v49, type metadata accessor for ToolKitProtoTypedValue);
  v34 = *v10;
  v35 = *v33;
  if ((~*v10 & 0xF000000000000007) == 0)
  {
    if ((~v35 & 0xF000000000000007) != 0)
      goto LABEL_26;
    goto LABEL_14;
  }
  v57 = *v10;
  if ((~v35 & 0xF000000000000007) != 0)
  {
    v56 = v35;
    sub_240422794(v34);
    swift_retain();
    v36 = static ToolKitProtoTypedValueKind.== infix(_:_:)(&v57, &v56);
    swift_release();
    sub_2404227AC(v34);
    if ((v36 & 1) == 0)
      goto LABEL_27;
LABEL_14:
    v37 = (uint64_t)v10;
    v38 = (uint64_t)v49;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v39 = sub_2408E5CD8();
    v40 = v38;
    v10 = (uint64_t *)v37;
    v4 = v47;
    sub_240388AE4(v40, type metadata accessor for ToolKitProtoTypedValue);
    sub_240388AE4(v37, type metadata accessor for ToolKitProtoTypedValue);
    sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
    v31 = v55;
    v32 = v53;
    if ((v39 & 1) == 0)
      goto LABEL_30;
    goto LABEL_15;
  }
  sub_240422794(v34);
LABEL_26:
  sub_240422794(v35);
  sub_2404227AC(v34);
  sub_2404227AC(v35);
LABEL_27:
  sub_240388AE4((uint64_t)v49, type metadata accessor for ToolKitProtoTypedValue);
  v44 = &qword_256FFA3A8;
  v31 = v55;
  v32 = v53;
LABEL_28:
  sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypedValue);
LABEL_29:
  sub_2403A97FC((uint64_t)v13, v44);
LABEL_30:
  sub_240388AE4((uint64_t)v31, type metadata accessor for TranscriptProtoVariableSetter);
  sub_240388AE4((uint64_t)v32, type metadata accessor for TranscriptProtoVariableSetter);
LABEL_31:
  v41 = 0;
  return v41 & 1;
}

uint64_t sub_2408BEE24(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ToolKitProtoComparisonPredicate.Template, (uint64_t (*)(char *, char *))sub_240897F68);
}

uint64_t sub_2408BEE38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  _QWORD *v30;
  BOOL v31;
  _QWORD *v32;
  _QWORD *v33;
  BOOL v34;
  uint64_t v36;
  uint64_t v37;

  v4 = type metadata accessor for ToolKitProtoSampleInvocationDefinition(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v36 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v28 = 1;
      return v28 & 1;
    }
    v12 = 0;
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v36 = a2 + v13;
    v37 = a1 + v13;
    v14 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_2403AE1A4(v37 + v14 * v12, (uint64_t)v10, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
      sub_2403AE1A4(v36 + v14 * v12, (uint64_t)v7, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
      v15 = (_QWORD *)*v10;
      v16 = (_QWORD *)*v7;
      v17 = *(_QWORD *)(*v10 + 16);
      if (v17 != *(_QWORD *)(*v7 + 16))
        break;
      if (v17)
        v18 = v15 == v16;
      else
        v18 = 1;
      if (!v18)
      {
        v19 = v15[4] == v16[4] && v15[5] == v16[5];
        if (!v19 && (sub_2408E617C() & 1) == 0)
          break;
        if (v17 != 1)
        {
          v20 = v15[6] == v16[6] && v15[7] == v16[7];
          if (!v20 && (sub_2408E617C() & 1) == 0)
            break;
          v21 = v17 - 2;
          if (v21)
          {
            v29 = v16 + 9;
            v30 = v15 + 9;
            do
            {
              v31 = *(v30 - 1) == *(v29 - 1) && *v30 == *v29;
              if (!v31 && (sub_2408E617C() & 1) == 0)
                goto LABEL_58;
              v29 += 2;
              v30 += 2;
            }
            while (--v21);
          }
        }
      }
      v22 = v10[3];
      v23 = v7[3];
      if (v22)
      {
        if (!v23 || (v10[2] != v7[2] || v22 != v23) && (sub_2408E617C() & 1) == 0)
          break;
      }
      else if (v23)
      {
        break;
      }
      v24 = (_QWORD *)v10[1];
      v25 = (_QWORD *)v7[1];
      v26 = v24[2];
      if (v26 != v25[2])
        break;
      if (v26 && v24 != v25)
      {
        if ((v24[4] != v25[4] || v24[5] != v25[5]) && (sub_2408E617C() & 1) == 0)
          break;
        if (v26 != 1)
        {
          if ((v24[6] != v25[6] || v24[7] != v25[7]) && (sub_2408E617C() & 1) == 0)
            break;
          v27 = v26 - 2;
          if (v27)
          {
            v32 = v25 + 9;
            v33 = v24 + 9;
            do
            {
              v34 = *(v33 - 1) == *(v32 - 1) && *v33 == *v32;
              if (!v34 && (sub_2408E617C() & 1) == 0)
                goto LABEL_58;
              v32 += 2;
              v33 += 2;
            }
            while (--v27);
          }
        }
      }
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v28 = sub_2408E5CD8();
      sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
      sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
      if ((v28 & 1) != 0 && ++v12 != v11)
        continue;
      return v28 & 1;
    }
LABEL_58:
    sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoSampleInvocationDefinition);
  }
  v28 = 0;
  return v28 & 1;
}

uint64_t sub_2408BF1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  char v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;

  v4 = type metadata accessor for ToolKitProtoRuntimeRequirementKind(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C928);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015320);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ToolKitProtoRuntimeRequirement(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = *(_QWORD *)(a1 + 16);
  v39 = a2;
  if (v21 != *(_QWORD *)(a2 + 16))
    goto LABEL_17;
  v42 = (char *)&v35 - v20;
  if (!v21 || a1 == v39)
  {
    v32 = 1;
    return v32 & 1;
  }
  v36 = v7;
  v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v37 = *(_QWORD *)(v19 + 72);
  v38 = v18;
  v23 = v21 - 1;
  v24 = (uint64_t)v42;
  while (1)
  {
    v41 = v23;
    v25 = v22;
    sub_2403AE1A4(a1 + v22, v24, type metadata accessor for ToolKitProtoRuntimeRequirement);
    v40 = v25;
    sub_2403AE1A4(v39 + v25, (uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirement);
    v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210(v24, (uint64_t)v13, &qword_25700C928);
    sub_2403A9210((uint64_t)v17, v26, &qword_25700C928);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v27(v13, 1, v4) != 1)
      break;
    if (v27((char *)v26, 1, v4) != 1)
      goto LABEL_15;
    sub_2403A97FC((uint64_t)v13, &qword_25700C928);
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v24 = (uint64_t)v42;
    v32 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirement);
    sub_240388AE4(v24, type metadata accessor for ToolKitProtoRuntimeRequirement);
    v23 = v41 - 1;
    if ((v32 & 1) != 0)
    {
      v22 = v40 + v37;
      if (v41)
        continue;
    }
    return v32 & 1;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v10, &qword_25700C928);
  if (v27((char *)v26, 1, v4) != 1)
  {
    v28 = (uint64_t)v36;
    sub_2403A91CC(v26, (uint64_t)v36, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    static ToolKitProtoRuntimeRequirementKind.== infix(_:_:)((uint64_t)v10, v28);
    v30 = v29;
    sub_240388AE4(v28, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
    sub_2403A97FC((uint64_t)v13, &qword_25700C928);
    v31 = v42;
    if ((v30 & 1) == 0)
      goto LABEL_16;
    goto LABEL_10;
  }
  sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoRuntimeRequirementKind);
LABEL_15:
  sub_2403A97FC((uint64_t)v13, &qword_257015320);
  v31 = v42;
LABEL_16:
  v33 = (uint64_t)v31;
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoRuntimeRequirement);
  sub_240388AE4(v33, type metadata accessor for ToolKitProtoRuntimeRequirement);
LABEL_17:
  v32 = 0;
  return v32 & 1;
}

uint64_t sub_2408BF558(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  char v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;

  v4 = type metadata accessor for ToolKitProtoSystemTypeProtocolKind(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C898);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015500);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ToolKitProtoSystemTypeProtocol(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = *(_QWORD *)(a1 + 16);
  v39 = a2;
  if (v21 != *(_QWORD *)(a2 + 16))
    goto LABEL_17;
  v42 = (char *)&v35 - v20;
  if (!v21 || a1 == v39)
  {
    v32 = 1;
    return v32 & 1;
  }
  v36 = v7;
  v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v37 = *(_QWORD *)(v19 + 72);
  v38 = v18;
  v23 = v21 - 1;
  v24 = (uint64_t)v42;
  while (1)
  {
    v41 = v23;
    v25 = v22;
    sub_2403AE1A4(a1 + v22, v24, type metadata accessor for ToolKitProtoSystemTypeProtocol);
    v40 = v25;
    sub_2403AE1A4(v39 + v25, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemTypeProtocol);
    v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210(v24, (uint64_t)v13, &qword_25700C898);
    sub_2403A9210((uint64_t)v17, v26, &qword_25700C898);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v27(v13, 1, v4) != 1)
      break;
    if (v27((char *)v26, 1, v4) != 1)
      goto LABEL_15;
    sub_2403A97FC((uint64_t)v13, &qword_25700C898);
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v24 = (uint64_t)v42;
    v32 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemTypeProtocol);
    sub_240388AE4(v24, type metadata accessor for ToolKitProtoSystemTypeProtocol);
    v23 = v41 - 1;
    if ((v32 & 1) != 0)
    {
      v22 = v40 + v37;
      if (v41)
        continue;
    }
    return v32 & 1;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v10, &qword_25700C898);
  if (v27((char *)v26, 1, v4) != 1)
  {
    v28 = (uint64_t)v36;
    sub_2403A91CC(v26, (uint64_t)v36, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
    static ToolKitProtoSystemTypeProtocolKind.== infix(_:_:)((uint64_t)v10, v28);
    v30 = v29;
    sub_240388AE4(v28, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
    sub_2403A97FC((uint64_t)v13, &qword_25700C898);
    v31 = v42;
    if ((v30 & 1) == 0)
      goto LABEL_16;
    goto LABEL_10;
  }
  sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoSystemTypeProtocolKind);
LABEL_15:
  sub_2403A97FC((uint64_t)v13, &qword_257015500);
  v31 = v42;
LABEL_16:
  v33 = (uint64_t)v31;
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemTypeProtocol);
  sub_240388AE4(v33, type metadata accessor for ToolKitProtoSystemTypeProtocol);
LABEL_17:
  v32 = 0;
  return v32 & 1;
}

uint64_t sub_2408BF90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  BOOL v41;
  uint64_t *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unsigned __int8 *v53;
  uint64_t v54;
  uint64_t v55;

  v4 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ToolKitProtoCoercionDefinition(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (unsigned __int8 *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = (unsigned __int8 *)&v44 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  v50 = a2;
  if (v22 != *(_QWORD *)(a2 + 16))
  {
LABEL_31:
    v39 = 0;
    return v39 & 1;
  }
  if (v22 && a1 != v50)
  {
    v52 = v18;
    v53 = v17;
    v48 = v11;
    v49 = v5;
    v47 = v7;
    v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    v24 = *(_QWORD *)(v19 + 72);
    v45 = v4;
    v46 = v24;
    v25 = v22 - 1;
    v51 = (char *)&v44 - v20;
    while (1)
    {
      sub_2403AE1A4(a1 + v23, (uint64_t)v21, type metadata accessor for ToolKitProtoCoercionDefinition);
      sub_2403AE1A4(v50 + v23, (uint64_t)v17, type metadata accessor for ToolKitProtoCoercionDefinition);
      if (*v21 != *v17)
        break;
      v26 = *(int *)(v52 + 20);
      v27 = (uint64_t)&v21[v26];
      v28 = (uint64_t)&v17[v26];
      v29 = (uint64_t)&v13[*(int *)(v48 + 48)];
      sub_2403A9210(v27, (uint64_t)v13, &qword_256FFA428);
      sub_2403A9210(v28, v29, &qword_256FFA428);
      v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
      if (v30((uint64_t)v13, 1, v4) == 1)
      {
        if (v30(v29, 1, v4) != 1)
        {
          v17 = v53;
          v21 = (unsigned __int8 *)v51;
          v42 = &qword_257000CB0;
          goto LABEL_29;
        }
        sub_2403A97FC((uint64_t)v13, &qword_256FFA428);
      }
      else
      {
        sub_2403A9210((uint64_t)v13, (uint64_t)v10, &qword_256FFA428);
        if (v30(v29, 1, v4) == 1)
        {
          v17 = v53;
          v21 = (unsigned __int8 *)v51;
          v42 = &qword_257000CB0;
          goto LABEL_28;
        }
        v31 = v47;
        sub_2403A91CC(v29, (uint64_t)v47, type metadata accessor for ToolKitProtoTypeInstance);
        v32 = *v10;
        v33 = *v31;
        if ((~*v10 & 0xF000000000000007) != 0)
        {
          v55 = *v10;
          if ((~v33 & 0xF000000000000007) == 0)
          {
            sub_240422794(v32);
LABEL_26:
            sub_240422794(v33);
            sub_2404227AC(v32);
            sub_2404227AC(v33);
LABEL_27:
            sub_240388AE4((uint64_t)v47, type metadata accessor for ToolKitProtoTypeInstance);
            v42 = &qword_256FFA428;
            v17 = v53;
            v21 = (unsigned __int8 *)v51;
LABEL_28:
            sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_29:
            sub_2403A97FC((uint64_t)v13, v42);
            break;
          }
          v54 = v33;
          sub_240422794(v32);
          swift_retain();
          v34 = static ToolKitProtoTypeInstanceKind.== infix(_:_:)(&v55, &v54);
          swift_release();
          sub_2404227AC(v32);
          if ((v34 & 1) == 0)
            goto LABEL_27;
        }
        else if ((~v33 & 0xF000000000000007) != 0)
        {
          goto LABEL_26;
        }
        v35 = (uint64_t)v10;
        v36 = (uint64_t)v47;
        sub_2408E57A4();
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v37 = sub_2408E5CD8();
        v38 = v36;
        v10 = (uint64_t *)v35;
        v4 = v45;
        sub_240388AE4(v38, type metadata accessor for ToolKitProtoTypeInstance);
        sub_240388AE4(v35, type metadata accessor for ToolKitProtoTypeInstance);
        sub_2403A97FC((uint64_t)v13, &qword_256FFA428);
        v17 = v53;
        v21 = (unsigned __int8 *)v51;
        if ((v37 & 1) == 0)
          break;
      }
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v17 = v53;
      v21 = (unsigned __int8 *)v51;
      v39 = sub_2408E5CD8();
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoCoercionDefinition);
      sub_240388AE4((uint64_t)v21, type metadata accessor for ToolKitProtoCoercionDefinition);
      v41 = v25-- != 0;
      if ((v39 & 1) != 0)
      {
        v23 += v46;
        if (v41)
          continue;
      }
      return v39 & 1;
    }
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoCoercionDefinition);
    sub_240388AE4((uint64_t)v21, type metadata accessor for ToolKitProtoCoercionDefinition);
    goto LABEL_31;
  }
  v39 = 1;
  return v39 & 1;
}

uint64_t sub_2408BFDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  BOOL v58;
  uint64_t v59;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t *v74;
  uint64_t v75;
  uint64_t v76;

  v4 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v61 - v8;
  v10 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v61 - v14;
  v16 = type metadata accessor for TranscriptProtoASTExpr(0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t *)((char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v17);
  v21 = (uint64_t *)((char *)&v61 - v20);
  v22 = type metadata accessor for TranscriptProtoASTStmt(0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v28 = (uint64_t *)((char *)&v61 - v27);
  v29 = *(_QWORD *)(a1 + 16);
  if (v29 != *(_QWORD *)(a2 + 16))
    goto LABEL_35;
  v74 = (unint64_t *)v26;
  v68 = v16;
  if (!v29 || a1 == a2)
  {
    v56 = 1;
    return v56 & 1;
  }
  v73 = v24;
  v63 = v15;
  v64 = v13;
  v61 = v9;
  v62 = v7;
  v69 = v21;
  v65 = v19;
  v30 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v71 = *(_QWORD *)(v25 + 72);
  v31 = v29 - 1;
  v70 = a2;
  v72 = a1;
  v32 = v74;
  while (1)
  {
    sub_2403AE1A4(a1 + v30, (uint64_t)v28, type metadata accessor for TranscriptProtoASTStmt);
    sub_2403AE1A4(a2 + v30, (uint64_t)v32, type metadata accessor for TranscriptProtoASTStmt);
    v33 = *v28;
    v34 = *v32;
    v35 = v34 & 0xF000000000000007;
    if ((~*v28 & 0xF000000000000007) == 0)
    {
      if (v35 != 0xF000000000000007)
        goto LABEL_31;
      goto LABEL_24;
    }
    if (v35 == 0xF000000000000007)
    {
LABEL_31:
      sub_2404F9F70(*v28);
      sub_2404F9F70(v34);
      sub_2404F9F88(v33);
      v59 = v34;
      goto LABEL_32;
    }
    if (v33 >> 62)
      break;
    if (v34 >> 62)
      goto LABEL_33;
    v41 = swift_projectBox();
    v42 = swift_projectBox();
    v43 = v41;
    v44 = v69;
    sub_2403AE1A4(v43, (uint64_t)v69, type metadata accessor for TranscriptProtoASTExpr);
    v45 = v65;
    sub_2403AE1A4(v42, (uint64_t)v65, type metadata accessor for TranscriptProtoASTExpr);
    v46 = *v44;
    v47 = *v45;
    if ((~v46 & 0xF000000000000007) != 0)
    {
      v76 = v46;
      if ((~v47 & 0xF000000000000007) == 0)
      {
        sub_2404F9F70(v33);
        sub_2404F9F70(v33);
        sub_2404F9F14(v46);
        sub_2404F9F70(v33);
        sub_2404F9F14(v46);
        sub_2404F9F70(v34);
        swift_release();
LABEL_38:
        sub_2404F9F14(v47);
        sub_2404F9F30(v46);
        sub_2404F9F30(v47);
LABEL_39:
        sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoASTExpr);
        sub_240388AE4((uint64_t)v69, type metadata accessor for TranscriptProtoASTExpr);
        swift_release();
        swift_release();
        sub_2404F9F88(v33);
        v59 = v33;
LABEL_32:
        sub_2404F9F88(v59);
        goto LABEL_34;
      }
      v75 = v47;
      sub_2404F9F70(v33);
      sub_2404F9F70(v33);
      sub_2404F9F14(v46);
      sub_2404F9F70(v33);
      sub_2404F9F14(v46);
      sub_2404F9F70(v34);
      v53 = static TranscriptProtoAstexprEnum.== infix(_:_:)(&v76, &v75);
      swift_release();
      sub_2404F9F30(v46);
      if ((v53 & 1) == 0)
        goto LABEL_39;
    }
    else
    {
      sub_2404F9F70(v33);
      sub_2404F9F70(v33);
      sub_2404F9F70(v33);
      sub_2404F9F70(v34);
      if ((~v47 & 0xF000000000000007) != 0)
        goto LABEL_38;
    }
    v54 = (uint64_t)v69;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v55 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoASTExpr);
    sub_240388AE4(v54, type metadata accessor for TranscriptProtoASTExpr);
    swift_release();
    swift_release();
    sub_2404F9F88(v33);
    sub_2404F9F88(v33);
    a2 = v70;
    if ((v55 & 1) == 0)
      goto LABEL_34;
LABEL_24:
    v32 = v74;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v56 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v32, type metadata accessor for TranscriptProtoASTStmt);
    sub_240388AE4((uint64_t)v28, type metadata accessor for TranscriptProtoASTStmt);
    v58 = v31-- != 0;
    if ((v56 & 1) != 0)
    {
      a1 = v72;
      v30 += v71;
      if (v58)
        continue;
    }
    return v56 & 1;
  }
  if (v33 >> 62 == 1)
  {
    if (v34 >> 62 != 1)
      goto LABEL_33;
    v67 = v33 & 0x3FFFFFFFFFFFFFFFLL;
    v36 = swift_projectBox();
    v37 = swift_projectBox();
    v38 = (uint64_t)v63;
    sub_2403AE1A4(v36, (uint64_t)v63, type metadata accessor for TranscriptProtoASTIfStmt);
    v39 = v37;
    v40 = (uint64_t)v64;
    sub_2403AE1A4(v39, (uint64_t)v64, type metadata accessor for TranscriptProtoASTIfStmt);
    sub_2404F9F70(v33);
    sub_2404F9F70(v33);
    sub_2404F9F70(v33);
    sub_2404F9F70(v34);
    LOBYTE(v36) = static TranscriptProtoASTIfStmt.== infix(_:_:)(v38, v40);
    sub_240388AE4(v40, type metadata accessor for TranscriptProtoASTIfStmt);
    sub_240388AE4(v38, type metadata accessor for TranscriptProtoASTIfStmt);
    a2 = v70;
    swift_release();
    swift_release();
    sub_2404F9F88(v33);
    sub_2404F9F88(v33);
    if ((v36 & 1) == 0)
      goto LABEL_34;
    goto LABEL_24;
  }
  if (v34 >> 62 == 2)
  {
    v66 = v34 & 0x3FFFFFFFFFFFFFFFLL;
    v67 = v33 & 0x3FFFFFFFFFFFFFFFLL;
    v48 = swift_projectBox();
    v49 = swift_projectBox();
    v50 = v61;
    sub_2403AE1A4(v48, (uint64_t)v61, type metadata accessor for TranscriptProtoASTForInStmt);
    v51 = v49;
    a2 = v70;
    v52 = v62;
    sub_2403AE1A4(v51, (uint64_t)v62, type metadata accessor for TranscriptProtoASTForInStmt);
    sub_2404F9F70(v33);
    sub_2404F9F70(v33);
    sub_2404F9F70(v33);
    sub_2404F9F70(v34);
    LOBYTE(v48) = _s23LighthouseDataProcessor27TranscriptProtoASTForInStmtV2eeoiySbAC_ACtFZ_0(v50, v52);
    sub_240388AE4((uint64_t)v52, type metadata accessor for TranscriptProtoASTForInStmt);
    sub_240388AE4((uint64_t)v50, type metadata accessor for TranscriptProtoASTForInStmt);
    swift_release();
    swift_release();
    sub_2404F9F88(v33);
    sub_2404F9F88(v33);
    if ((v48 & 1) == 0)
      goto LABEL_34;
    goto LABEL_24;
  }
LABEL_33:
  sub_2404F9F70(*v28);
  sub_2404F9F70(v34);
  swift_release();
  swift_release();
LABEL_34:
  sub_240388AE4((uint64_t)v74, type metadata accessor for TranscriptProtoASTStmt);
  sub_240388AE4((uint64_t)v28, type metadata accessor for TranscriptProtoASTStmt);
LABEL_35:
  v56 = 0;
  return v56 & 1;
}

uint64_t sub_2408C051C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char v16;
  BOOL v17;
  char v18;
  uint64_t v20;
  uint64_t v21;

  v4 = type metadata accessor for ContextProtoSampleInvocation(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v20 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_19:
    v16 = 0;
    return v16 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v20 = *(_QWORD *)(v8 + 72);
    v13 = v11 - 1;
    while (1)
    {
      sub_2403AE1A4(a1 + v12, (uint64_t)v10, type metadata accessor for ContextProtoSampleInvocation);
      sub_2403AE1A4(a2 + v12, (uint64_t)v7, type metadata accessor for ContextProtoSampleInvocation);
      v14 = *(_QWORD *)v10 == *(_QWORD *)v7 && *((_QWORD *)v10 + 1) == *((_QWORD *)v7 + 1);
      if (!v14 && (sub_2408E617C() & 1) == 0 || *((float *)v10 + 4) != *((float *)v7 + 4))
        break;
      v21 = v13;
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v15 = v21;
      v16 = sub_2408E5CD8();
      sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoSampleInvocation);
      sub_240388AE4((uint64_t)v10, type metadata accessor for ContextProtoSampleInvocation);
      v17 = v15 != 0;
      v13 = v15 - 1;
      v18 = v17;
      if ((v16 & 1) != 0)
      {
        v12 += v20;
        if ((v18 & 1) != 0)
          continue;
      }
      return v16 & 1;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoSampleInvocation);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ContextProtoSampleInvocation);
    goto LABEL_19;
  }
  v16 = 1;
  return v16 & 1;
}

uint64_t sub_2408C0714(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor29TranscriptProtoParameterQueryV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_2408C0728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v21 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    goto LABEL_20;
  if (!v11 || a1 == a2)
  {
    v17 = 1;
    return v17 & 1;
  }
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v22 = *(_QWORD *)(v8 + 72);
  v13 = v11 - 1;
  while (1)
  {
    sub_2403AE1A4(a1 + v12, (uint64_t)v10, type metadata accessor for ToolKitProtoTypeInstance);
    sub_2403AE1A4(a2 + v12, (uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    v14 = *v10;
    v15 = *v7;
    if ((~*v10 & 0xF000000000000007) != 0)
      break;
    if ((~v15 & 0xF000000000000007) != 0)
      goto LABEL_18;
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v17 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypeInstance);
    v19 = v13-- != 0;
    if ((v17 & 1) != 0)
    {
      v12 += v22;
      if (v19)
        continue;
    }
    return v17 & 1;
  }
  v24 = *v10;
  if ((~v15 & 0xF000000000000007) != 0)
  {
    v23 = v15;
    swift_retain_n();
    v16 = static ToolKitProtoTypeInstanceKind.== infix(_:_:)(&v24, &v23);
    swift_release();
    sub_2404227AC(v14);
    if ((v16 & 1) == 0)
      goto LABEL_19;
    goto LABEL_10;
  }
  swift_retain();
LABEL_18:
  sub_240422794(v15);
  sub_2404227AC(v14);
  sub_2404227AC(v15);
LABEL_19:
  sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypeInstance);
  sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_20:
  v17 = 0;
  return v17 & 1;
}

uint64_t sub_2408C0978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  BOOL v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = type metadata accessor for ToolKitProtoRestrictionContext(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v22 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    goto LABEL_20;
  if (!v11 || a1 == a2)
  {
    v18 = 1;
    return v18 & 1;
  }
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v23 = *(_QWORD *)(v8 + 72);
  v13 = v11 - 1;
  while (1)
  {
    sub_2403AE1A4(a1 + v12, (uint64_t)v10, type metadata accessor for ToolKitProtoRestrictionContext);
    sub_2403AE1A4(a2 + v12, (uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext);
    v14 = *v10;
    v15 = *v7;
    if ((~*v10 & 0xF000000000000007) != 0)
      break;
    if ((~v15 & 0xF000000000000007) != 0)
      goto LABEL_18;
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v18 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoRestrictionContext);
    v20 = v13-- != 0;
    if ((v18 & 1) != 0)
    {
      v12 += v23;
      if (v20)
        continue;
    }
    return v18 & 1;
  }
  v25 = *v10;
  if ((~v15 & 0xF000000000000007) != 0)
  {
    v24 = v15;
    sub_240422794(v14);
    sub_240422794(v14);
    _s23LighthouseDataProcessor34ToolKitProtoRestrictionContextKindO2eeoiySbAC_ACtFZ_0((uint64_t)&v25);
    v17 = v16;
    swift_release();
    sub_2404227AC(v14);
    if ((v17 & 1) == 0)
      goto LABEL_19;
    goto LABEL_10;
  }
  swift_retain();
LABEL_18:
  sub_240422794(v15);
  sub_2404227AC(v14);
  sub_2404227AC(v15);
LABEL_19:
  sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoRestrictionContext);
  sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoRestrictionContext);
LABEL_20:
  v18 = 0;
  return v18 & 1;
}

uint64_t sub_2408C0BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for TranscriptProtoASTExpr(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v21 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    goto LABEL_20;
  if (!v11 || a1 == a2)
  {
    v17 = 1;
    return v17 & 1;
  }
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v22 = *(_QWORD *)(v8 + 72);
  v13 = v11 - 1;
  while (1)
  {
    sub_2403AE1A4(a1 + v12, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExpr);
    sub_2403AE1A4(a2 + v12, (uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    v14 = *v10;
    v15 = *v7;
    if ((~*v10 & 0xF000000000000007) != 0)
      break;
    if ((~v15 & 0xF000000000000007) != 0)
      goto LABEL_18;
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v17 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoASTExpr);
    v19 = v13-- != 0;
    if ((v17 & 1) != 0)
    {
      v12 += v22;
      if (v19)
        continue;
    }
    return v17 & 1;
  }
  v24 = *v10;
  if ((~v15 & 0xF000000000000007) != 0)
  {
    v23 = v15;
    swift_retain_n();
    v16 = static TranscriptProtoAstexprEnum.== infix(_:_:)(&v24, &v23);
    swift_release();
    sub_2404F9F30(v14);
    if ((v16 & 1) == 0)
      goto LABEL_19;
    goto LABEL_10;
  }
  swift_retain();
LABEL_18:
  sub_2404F9F14(v15);
  sub_2404F9F30(v14);
  sub_2404F9F30(v15);
LABEL_19:
  sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
  sub_240388AE4((uint64_t)v10, type metadata accessor for TranscriptProtoASTExpr);
LABEL_20:
  v17 = 0;
  return v17 & 1;
}

uint64_t sub_2408C0E30(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor31TranscriptProtoProgramStatementV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_2408C0E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v25 = type metadata accessor for DillSessionEvent(0);
  v4 = MEMORY[0x24BDAC7A8](v25);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v23 - v8;
  v26 = a1;
  v27 = a2;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 != *(_QWORD *)(a2 + 16))
  {
LABEL_20:
    v16 = 0;
    return v16 & 1;
  }
  if (v10 && v26 != v27)
  {
    v23[5] = 0;
    v11 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v12 = v10 - 1;
    v24 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_2403AE1A4(v26 + v11, (uint64_t)v9, type metadata accessor for DillSessionEvent);
      sub_2403AE1A4(v27 + v11, (uint64_t)v6, type metadata accessor for DillSessionEvent);
      if (*(double *)v9 != *(double *)v6)
        break;
      v13 = *((_QWORD *)v9 + 2);
      v14 = v9[24];
      v15 = *((_QWORD *)v6 + 2);
      if ((v14 & 1) == 0)
      {
        if ((v6[24] & 1) == 0)
          __asm { BR              X9 }
LABEL_18:
        v19 = *((_QWORD *)v6 + 1);
        v20 = *((_QWORD *)v9 + 2);
        v21 = *((_QWORD *)v9 + 1);
        sub_2408C4898(v21, v13, v9[24]);
        sub_2408C4898(v19, v15, v14 ^ 1);
        sub_2408C48B8(v21, v20, v14);
        sub_2408C48B8(v19, v15, v14 ^ 1);
        break;
      }
      if ((v6[24] & 1) == 0)
        goto LABEL_18;
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v16 = sub_2408E5CD8();
      sub_240388AE4((uint64_t)v6, type metadata accessor for DillSessionEvent);
      sub_240388AE4((uint64_t)v9, type metadata accessor for DillSessionEvent);
      v18 = v12-- != 0;
      if ((v16 & 1) != 0)
      {
        v11 += v24;
        if (v18)
          continue;
      }
      return v16 & 1;
    }
    sub_240388AE4((uint64_t)v6, type metadata accessor for DillSessionEvent);
    sub_240388AE4((uint64_t)v9, type metadata accessor for DillSessionEvent);
    goto LABEL_20;
  }
  v16 = 1;
  return v16 & 1;
}

uint64_t sub_2408C1D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  BOOL v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t Output;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v4 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v65 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C538);
  MEMORY[0x24BDAC7A8](v64);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v73 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v71 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C518);
  MEMORY[0x24BDAC7A8](v72);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Output = type metadata accessor for ContextProtoToolQueryOutput(0);
  v18 = MEMORY[0x24BDAC7A8](Output);
  v78 = (uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v58 - v21;
  v74 = a1;
  v75 = a2;
  v23 = *(_QWORD *)(a1 + 16);
  if (v23 != *(_QWORD *)(a2 + 16))
    goto LABEL_27;
  if (!v23 || v74 == v75)
  {
    v53 = 1;
    return v53 & 1;
  }
  v68 = v15;
  v59 = v6;
  v60 = v9;
  v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = *(_QWORD *)(v20 + 72);
  v26 = v23 - 1;
  v66 = v17;
  v67 = v4;
  v61 = v25;
  v62 = v11;
  v27 = v77;
  v69 = (char *)&v58 - v21;
  while (1)
  {
    sub_2403AE1A4(v74 + v24, (uint64_t)v22, type metadata accessor for ContextProtoToolQueryOutput);
    v28 = v78;
    sub_2403AE1A4(v75 + v24, v78, type metadata accessor for ContextProtoToolQueryOutput);
    v29 = (uint64_t)&v17[*(int *)(v72 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v17, &qword_256FFB050);
    sub_2403A9210(v28, v29, &qword_256FFB050);
    v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
    v31 = v30(v17, 1, v27);
    v76 = v24;
    if (v31 != 1)
      break;
    if (v30((char *)v29, 1, v27) != 1)
    {
      v55 = &qword_25700C518;
      v22 = v69;
      goto LABEL_25;
    }
    v32 = v25;
    v33 = v26;
    sub_2403A97FC((uint64_t)v17, &qword_256FFB050);
    v22 = v69;
    v34 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
    v35 = MEMORY[0x24BE5BF20];
LABEL_15:
    v52 = v78;
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, v34, v35);
    v53 = sub_2408E5CD8();
    sub_240388AE4(v52, type metadata accessor for ContextProtoToolQueryOutput);
    sub_240388AE4((uint64_t)v22, type metadata accessor for ContextProtoToolQueryOutput);
    v26 = v33 - 1;
    v54 = v33 != 0;
    if ((v53 & 1) != 0)
    {
      v25 = v32;
      v24 = v76 + v32;
      v17 = v66;
      v4 = v67;
      v27 = v77;
      if (v54)
        continue;
    }
    return v53 & 1;
  }
  v36 = v27;
  v37 = (uint64_t)v68;
  sub_2403A9210((uint64_t)v17, (uint64_t)v68, &qword_256FFB050);
  if (v30((char *)v29, 1, v36) == 1)
  {
    v56 = v37;
    v55 = &qword_25700C518;
    v22 = v69;
    goto LABEL_24;
  }
  v38 = v71;
  sub_2403A91CC(v29, v71, type metadata accessor for ContextProtoRetrievedTool.Definition);
  v39 = (uint64_t)&v62[*(int *)(v64 + 48)];
  v40 = v37;
  v41 = (uint64_t)v62;
  sub_2403A9210(v40, (uint64_t)v62, &qword_256FFB058);
  sub_2403A9210(v38, v39, &qword_256FFB058);
  v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  if (v42(v41, 1, v4) == 1)
  {
    v43 = v42(v39, 1, v4);
    v22 = v69;
    if (v43 != 1)
      goto LABEL_22;
    sub_2403A97FC(v41, &qword_256FFB058);
    v44 = v71;
    goto LABEL_14;
  }
  v45 = (uint64_t)v60;
  sub_2403A9210(v41, (uint64_t)v60, &qword_256FFB058);
  if (v42(v39, 1, v4) != 1)
  {
    v46 = (uint64_t)v59;
    sub_2403A91CC(v39, (uint64_t)v59, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    _s23LighthouseDataProcessor25ContextProtoRetrievedToolV0dE14DefinitionEnumO2eeoiySbAE_AEtFZ_0(v45, v46);
    v48 = v47;
    sub_240388AE4(v46, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_240388AE4(v45, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_2403A97FC(v41, &qword_256FFB058);
    v44 = v71;
    v22 = v69;
    if ((v48 & 1) == 0)
      goto LABEL_23;
LABEL_14:
    v33 = v26;
    v49 = (uint64_t)v68;
    v63 = &v68[*(int *)(v77 + 20)];
    sub_2408E57A4();
    v50 = (uint64_t)v17;
    v34 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
    v35 = MEMORY[0x24BE5BF20];
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v51 = sub_2408E5CD8();
    sub_240388AE4(v44, type metadata accessor for ContextProtoRetrievedTool.Definition);
    sub_240388AE4(v49, type metadata accessor for ContextProtoRetrievedTool.Definition);
    sub_2403A97FC(v50, &qword_256FFB050);
    v32 = v61;
    if ((v51 & 1) == 0)
      goto LABEL_26;
    goto LABEL_15;
  }
  sub_240388AE4(v45, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  v22 = v69;
LABEL_22:
  sub_2403A97FC(v41, &qword_25700C538);
  v44 = v71;
LABEL_23:
  sub_240388AE4(v44, type metadata accessor for ContextProtoRetrievedTool.Definition);
  v55 = &qword_256FFB050;
  v56 = (uint64_t)v68;
LABEL_24:
  sub_240388AE4(v56, type metadata accessor for ContextProtoRetrievedTool.Definition);
LABEL_25:
  sub_2403A97FC((uint64_t)v17, v55);
LABEL_26:
  sub_240388AE4(v78, type metadata accessor for ContextProtoToolQueryOutput);
  sub_240388AE4((uint64_t)v22, type metadata accessor for ContextProtoToolQueryOutput);
LABEL_27:
  v53 = 0;
  return v53 & 1;
}

uint64_t sub_2408C23CC(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ResponseGenerationProtoStatementResultDigest, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor44ResponseGenerationProtoStatementResultDigestV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_2408C23E0(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD7AddressV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_2408C23F4(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter, (uint64_t (*)(char *, char *))static ToolKitProtoToolDefinition.Version1.Parameter.== infix(_:_:));
}

uint64_t sub_2408C2408(uint64_t a1, uint64_t a2)
{
  return sub_2408BA9AC(a1, a2, type metadata accessor for TranscriptProtoEvent, (uint64_t (*)(char *, char *))_s23LighthouseDataProcessor20TranscriptProtoEventV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_2408C241C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  char v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;

  v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015258);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = *(_QWORD *)(a1 + 16);
  v39 = a2;
  if (v21 != *(_QWORD *)(a2 + 16))
    goto LABEL_17;
  v42 = (char *)&v35 - v20;
  if (!v21 || a1 == v39)
  {
    v32 = 1;
    return v32 & 1;
  }
  v36 = v7;
  v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v37 = *(_QWORD *)(v19 + 72);
  v38 = v18;
  v23 = v21 - 1;
  v24 = (uint64_t)v42;
  while (1)
  {
    v41 = v23;
    v25 = v22;
    sub_2403AE1A4(a1 + v22, v24, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    v40 = v25;
    sub_2403AE1A4(v39 + v25, (uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210(v24, (uint64_t)v13, &qword_25700C958);
    sub_2403A9210((uint64_t)v17, v26, &qword_25700C958);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v27(v13, 1, v4) != 1)
      break;
    if (v27((char *)v26, 1, v4) != 1)
      goto LABEL_15;
    sub_2403A97FC((uint64_t)v13, &qword_25700C958);
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v24 = (uint64_t)v42;
    v32 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    sub_240388AE4(v24, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
    v23 = v41 - 1;
    if ((v32 & 1) != 0)
    {
      v22 = v40 + v37;
      if (v41)
        continue;
    }
    return v32 & 1;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v10, &qword_25700C958);
  if (v27((char *)v26, 1, v4) != 1)
  {
    v28 = (uint64_t)v36;
    sub_2403A91CC(v26, (uint64_t)v36, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind.== infix(_:_:)((uint64_t)v10, v28);
    v30 = v29;
    sub_240388AE4(v28, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
    sub_2403A97FC((uint64_t)v13, &qword_25700C958);
    v31 = v42;
    if ((v30 & 1) == 0)
      goto LABEL_16;
    goto LABEL_10;
  }
  sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
LABEL_15:
  sub_2403A97FC((uint64_t)v13, &qword_257015258);
  v31 = v42;
LABEL_16:
  v33 = (uint64_t)v31;
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
  sub_240388AE4(v33, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
LABEL_17:
  v32 = 0;
  return v32 & 1;
}

uint64_t sub_2408C27CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  char v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;

  v4 = type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBE00);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570154D8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = *(_QWORD *)(a1 + 16);
  v39 = a2;
  if (v21 != *(_QWORD *)(a2 + 16))
    goto LABEL_17;
  v42 = (char *)&v35 - v20;
  if (!v21 || a1 == v39)
  {
    v32 = 1;
    return v32 & 1;
  }
  v36 = v7;
  v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v37 = *(_QWORD *)(v19 + 72);
  v38 = v18;
  v23 = v21 - 1;
  v24 = (uint64_t)v42;
  while (1)
  {
    v41 = v23;
    v25 = v22;
    sub_2403AE1A4(a1 + v22, v24, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
    v40 = v25;
    sub_2403AE1A4(v39 + v25, (uint64_t)v17, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
    v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210(v24, (uint64_t)v13, &qword_256FFBE00);
    sub_2403A9210((uint64_t)v17, v26, &qword_256FFBE00);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v27(v13, 1, v4) != 1)
      break;
    if (v27((char *)v26, 1, v4) != 1)
      goto LABEL_15;
    sub_2403A97FC((uint64_t)v13, &qword_256FFBE00);
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v24 = (uint64_t)v42;
    v32 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
    sub_240388AE4(v24, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
    v23 = v41 - 1;
    if ((v32 & 1) != 0)
    {
      v22 = v40 + v37;
      if (v41)
        continue;
    }
    return v32 & 1;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v10, &qword_256FFBE00);
  if (v27((char *)v26, 1, v4) != 1)
  {
    v28 = (uint64_t)v36;
    sub_2403A91CC(v26, (uint64_t)v36, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
    _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionV0deF12Version1KindO2eeoiySbAE_AEtFZ_0((uint64_t)v10, v28);
    v30 = v29;
    sub_240388AE4(v28, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
    sub_2403A97FC((uint64_t)v13, &qword_256FFBE00);
    v31 = v42;
    if ((v30 & 1) == 0)
      goto LABEL_16;
    goto LABEL_10;
  }
  sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoTypeDefinition.ToolKitProtoVersion1Kind);
LABEL_15:
  sub_2403A97FC((uint64_t)v13, &qword_2570154D8);
  v31 = v42;
LABEL_16:
  v33 = (uint64_t)v31;
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
  sub_240388AE4(v33, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
LABEL_17:
  v32 = 0;
  return v32 & 1;
}

uint64_t sub_2408C2B7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v20;
  BOOL v22;
  _BYTE v24[12];
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = type metadata accessor for ToolKitProtoToolSummaryString.Component(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v10 = &v24[-v9];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    goto LABEL_29;
  if (!v11 || a1 == a2)
  {
    v20 = 1;
    return v20 & 1;
  }
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v26 = *(_QWORD *)(v8 + 72);
  v13 = v11 - 1;
  v27 = a1;
  v28 = a2;
  v29 = v4;
  while (1)
  {
    sub_2403AE1A4(a1 + v12, (uint64_t)v10, type metadata accessor for ToolKitProtoToolSummaryString.Component);
    sub_2403AE1A4(a2 + v12, (uint64_t)v7, type metadata accessor for ToolKitProtoToolSummaryString.Component);
    v15 = *(_QWORD *)v10;
    v14 = *((_QWORD *)v10 + 1);
    v16 = v10[16];
    v18 = *(_QWORD *)v7;
    v17 = *((_QWORD *)v7 + 1);
    v19 = v7[16];
    if (v16 != 255)
      break;
    if (v19 != 255)
    {
LABEL_26:
      sub_2407419B8(*(_QWORD *)v7, *((_QWORD *)v7 + 1), v7[16]);
      sub_2407419B8(v15, v14, v16);
      sub_2407419D8(v15, v14, v16);
      sub_2407419D8(v18, v17, v19);
      goto LABEL_28;
    }
LABEL_19:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v20 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolSummaryString.Component);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoToolSummaryString.Component);
    v22 = v13-- != 0;
    if ((v20 & 1) != 0)
    {
      a1 = v27;
      v12 += v26;
      a2 = v28;
      if (v22)
        continue;
    }
    return v20 & 1;
  }
  if (v19 == 255)
    goto LABEL_26;
  if ((v16 & 1) == 0)
  {
    if ((v19 & 1) != 0)
      goto LABEL_27;
    if (v15 == v18 && v14 == v17)
    {
LABEL_17:
      sub_2407419B8(*(_QWORD *)v10, *((_QWORD *)v10 + 1), v7[16]);
      sub_2407419B8(v15, v14, v16);
      sub_2407419F0();
      sub_2407419F0();
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if ((v19 & 1) != 0)
  {
    if (v15 == v18 && v14 == v17)
      goto LABEL_17;
LABEL_18:
    v25 = sub_2408E617C();
    sub_2407419B8(v18, v17, v19);
    sub_2407419B8(v15, v14, v16);
    sub_2407419F0();
    sub_2407419F0();
    if ((v25 & 1) == 0)
      goto LABEL_28;
    goto LABEL_19;
  }
LABEL_27:
  sub_2407419B8(*(_QWORD *)v7, *((_QWORD *)v7 + 1), v7[16]);
  sub_2407419B8(v15, v14, v16);
  sub_2407419F0();
  sub_2407419F0();
LABEL_28:
  sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolSummaryString.Component);
  sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoToolSummaryString.Component);
LABEL_29:
  v20 = 0;
  return v20 & 1;
}

uint64_t sub_2408C2F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char *v18;

  v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Category(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (uint64_t *)((char *)&v17 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v17 = *(_QWORD *)(v8 + 72);
    v18 = (char *)&v17 - v9;
    while (1)
    {
      sub_2403AE1A4(a1 + v12, (uint64_t)v10, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
      sub_2403AE1A4(a2 + v12, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
      v13 = *v10 == *v7 && v10[1] == v7[1];
      if (!v13 && (sub_2408E617C() & 1) == 0)
        break;
      v14 = v10[3];
      v15 = v7[3];
      if (v14)
      {
        if (!v15 || (v10[2] != v7[2] || v14 != v15) && (sub_2408E617C() & 1) == 0)
          break;
      }
      else if (v15)
      {
        break;
      }
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v10 = v18;
      if ((sub_2408E5CD8() & 1) == 0)
        break;
      sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
      sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
      v12 += v17;
      if (!--v11)
        return 1;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoToolDefinition.Version1.Category);
  }
  return 0;
}

BOOL sub_2408C314C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;
  _BOOL8 result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (char *)(a1 + 32);
  v4 = (char *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v7 = *v3++;
    v6 = v7;
    v8 = *v4++;
    v9 = qword_24091E2E0[v6];
    v10 = qword_24091E2E0[v8];
    v12 = v5-- != 0;
    result = v9 == v10;
  }
  while (v9 == v10 && v12);
  return result;
}

uint64_t sub_2408C31B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  char v29;
  char v30;
  char *v31;
  char v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;

  v4 = type metadata accessor for ToolKitProtoSystemToolProtocolKind(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C948);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015298);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ToolKitProtoSystemToolProtocol(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v21 = *(_QWORD *)(a1 + 16);
  v39 = a2;
  if (v21 != *(_QWORD *)(a2 + 16))
    goto LABEL_17;
  v42 = (char *)&v35 - v20;
  if (!v21 || a1 == v39)
  {
    v32 = 1;
    return v32 & 1;
  }
  v36 = v7;
  v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v37 = *(_QWORD *)(v19 + 72);
  v38 = v18;
  v23 = v21 - 1;
  v24 = (uint64_t)v42;
  while (1)
  {
    v41 = v23;
    v25 = v22;
    sub_2403AE1A4(a1 + v22, v24, type metadata accessor for ToolKitProtoSystemToolProtocol);
    v40 = v25;
    sub_2403AE1A4(v39 + v25, (uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocol);
    v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210(v24, (uint64_t)v13, &qword_25700C948);
    sub_2403A9210((uint64_t)v17, v26, &qword_25700C948);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    if (v27(v13, 1, v4) != 1)
      break;
    if (v27((char *)v26, 1, v4) != 1)
      goto LABEL_15;
    sub_2403A97FC((uint64_t)v13, &qword_25700C948);
LABEL_10:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v24 = (uint64_t)v42;
    v32 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocol);
    sub_240388AE4(v24, type metadata accessor for ToolKitProtoSystemToolProtocol);
    v23 = v41 - 1;
    if ((v32 & 1) != 0)
    {
      v22 = v40 + v37;
      if (v41)
        continue;
    }
    return v32 & 1;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v10, &qword_25700C948);
  if (v27((char *)v26, 1, v4) != 1)
  {
    v28 = v36;
    sub_2403A91CC(v26, (uint64_t)v36, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    static ToolKitProtoSystemToolProtocolKind.== infix(_:_:)((uint64_t)v10, v28);
    v30 = v29;
    sub_240388AE4((uint64_t)v28, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
    sub_2403A97FC((uint64_t)v13, &qword_25700C948);
    v31 = v42;
    if ((v30 & 1) == 0)
      goto LABEL_16;
    goto LABEL_10;
  }
  sub_240388AE4((uint64_t)v10, type metadata accessor for ToolKitProtoSystemToolProtocolKind);
LABEL_15:
  sub_2403A97FC((uint64_t)v13, &qword_257015298);
  v31 = v42;
LABEL_16:
  v33 = (uint64_t)v31;
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoSystemToolProtocol);
  sub_240388AE4(v33, type metadata accessor for ToolKitProtoSystemToolProtocol);
LABEL_17:
  v32 = 0;
  return v32 & 1;
}

uint64_t sub_2408C3568(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (unsigned __int8 *)(a1 + 32);
  v4 = (unsigned __int8 *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v6 = v5;
    v7 = *v3 ^ *v4;
    if ((v7 & 1) != 0)
      break;
    --v5;
    ++v3;
    ++v4;
  }
  while (v6);
  return (v7 ^ 1) & 1;
}

uint64_t sub_2408C35D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char v51;
  BOOL v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v4 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind(0);
  v64 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C958);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015258);
  MEMORY[0x24BDAC7A8](v63);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation(0);
  v69 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v67 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C950);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015290);
  MEMORY[0x24BDAC7A8](v68);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship(0);
  v18 = MEMORY[0x24BDAC7A8](v72);
  v20 = (uint64_t *)((char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v18);
  v23 = (uint64_t *)((char *)&v57 - v22);
  v70 = a1;
  v71 = a2;
  v24 = *(_QWORD *)(a1 + 16);
  if (v24 != *(_QWORD *)(a2 + 16))
  {
LABEL_35:
    v51 = 0;
    return v51 & 1;
  }
  if (v24 && v70 != v71)
  {
    v65 = v15;
    v58 = v6;
    v59 = v9;
    v60 = v4;
    v25 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v62 = *(_QWORD *)(v21 + 72);
    v26 = v24 - 1;
    v27 = (uint64_t)v11;
    v28 = v66;
    while (1)
    {
      sub_2403AE1A4(v70 + v25, (uint64_t)v23, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
      sub_2403AE1A4(v71 + v25, (uint64_t)v20, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
      v29 = *v23 == *v20 && v23[1] == v20[1];
      if (!v29 && (sub_2408E617C() & 1) == 0)
        break;
      v30 = *(int *)(v72 + 20);
      v31 = (uint64_t)v20 + v30;
      v32 = (uint64_t)&v17[*(int *)(v68 + 48)];
      sub_2403A9210((uint64_t)v23 + v30, (uint64_t)v17, &qword_25700C950);
      sub_2403A9210(v31, v32, &qword_25700C950);
      v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
      if (v33((uint64_t)v17, 1, v28) == 1)
      {
        if (v33(v32, 1, v28) != 1)
        {
          v54 = &qword_257015290;
          goto LABEL_33;
        }
        sub_2403A97FC((uint64_t)v17, &qword_25700C950);
      }
      else
      {
        v34 = (uint64_t)v65;
        sub_2403A9210((uint64_t)v17, (uint64_t)v65, &qword_25700C950);
        if (v33(v32, 1, v28) == 1)
        {
          v55 = v34;
          v54 = &qword_257015290;
          goto LABEL_32;
        }
        v35 = v67;
        sub_2403A91CC(v32, v67, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        v36 = v27 + *(int *)(v63 + 48);
        sub_2403A9210(v34, v27, &qword_25700C958);
        sub_2403A9210(v35, v36, &qword_25700C958);
        v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
        v38 = v60;
        if (v37(v27, 1, v60) == 1)
        {
          v39 = v37(v36, 1, v38);
          v40 = v67;
          if (v39 != 1)
            goto LABEL_30;
          sub_2403A97FC(v27, &qword_25700C958);
        }
        else
        {
          v41 = v27;
          v42 = v27;
          v43 = (uint64_t)v59;
          sub_2403A9210(v41, (uint64_t)v59, &qword_25700C958);
          if (v37(v36, 1, v38) == 1)
          {
            sub_240388AE4(v43, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
            v27 = v42;
            v40 = v67;
LABEL_30:
            sub_2403A97FC(v27, &qword_257015258);
LABEL_31:
            sub_240388AE4(v40, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
            v54 = &qword_25700C950;
            v55 = (uint64_t)v65;
LABEL_32:
            sub_240388AE4(v55, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
LABEL_33:
            sub_2403A97FC((uint64_t)v17, v54);
            break;
          }
          v44 = v36;
          v45 = (uint64_t)v58;
          sub_2403A91CC(v44, (uint64_t)v58, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
          static ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind.== infix(_:_:)(v43, v45);
          v47 = v46;
          sub_240388AE4(v45, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
          sub_240388AE4(v43, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.ToolKitProtoRelationKind);
          sub_2403A97FC(v42, &qword_25700C958);
          v27 = v42;
          v40 = v67;
          if ((v47 & 1) == 0)
            goto LABEL_31;
        }
        v48 = (uint64_t)v65;
        sub_2408E57A4();
        v61 = v26;
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v49 = sub_2408E5CD8();
        v26 = v61;
        sub_240388AE4(v40, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        v50 = v48;
        v28 = v66;
        sub_240388AE4(v50, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship.Relation);
        sub_2403A97FC((uint64_t)v17, &qword_25700C950);
        if ((v49 & 1) == 0)
          break;
      }
      sub_2408E57A4();
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v51 = sub_2408E5CD8();
      sub_240388AE4((uint64_t)v20, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
      sub_240388AE4((uint64_t)v23, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
      v53 = v26-- != 0;
      if ((v51 & 1) != 0)
      {
        v25 += v62;
        if (v53)
          continue;
      }
      return v51 & 1;
    }
    sub_240388AE4((uint64_t)v20, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
    sub_240388AE4((uint64_t)v23, type metadata accessor for ToolKitProtoToolDefinition.Version1.Parameter.Relationship);
    goto LABEL_35;
  }
  v51 = 1;
  return v51 & 1;
}

BOOL sub_2408C3C54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v11;
  _BOOL8 result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (unsigned __int8 *)(a1 + 32);
  v4 = (unsigned __int8 *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v7 = *v3++;
    v6 = v7;
    v9 = *v4++;
    v8 = v9;
    v11 = v5-- != 0;
    result = v6 == v8;
  }
  while (v6 == v8 && v11);
  return result;
}

uint64_t sub_2408C3CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  BOOL v37;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for ContextProtoBoundingBox(0);
  v46 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C560);
  MEMORY[0x24BDAC7A8](v45);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoSurroundingText(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v13);
  v18 = (uint64_t *)((char *)&v39 - v17);
  v47 = a1;
  v48 = a2;
  v19 = *(_QWORD *)(a1 + 16);
  if (v19 != *(_QWORD *)(a2 + 16))
    goto LABEL_29;
  if (!v19 || v47 == v48)
  {
    v35 = 1;
    return v35 & 1;
  }
  v44 = v4;
  v40 = v6;
  v41 = v9;
  v20 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v42 = *(_QWORD *)(v16 + 72);
  v21 = v19 - 1;
  v43 = v12;
  while (1)
  {
    sub_2403AE1A4(v47 + v20, (uint64_t)v18, type metadata accessor for ContextProtoSurroundingText);
    sub_2403AE1A4(v48 + v20, (uint64_t)v15, type metadata accessor for ContextProtoSurroundingText);
    v22 = v18[1];
    v23 = v15[1];
    if (v22)
    {
      if (!v23)
        goto LABEL_28;
      v24 = *v18 == *v15 && v22 == v23;
      if (!v24 && (sub_2408E617C() & 1) == 0)
        goto LABEL_28;
    }
    else if (v23)
    {
      goto LABEL_28;
    }
    v25 = *(int *)(v12 + 20);
    v26 = (uint64_t)v15 + v25;
    v27 = (uint64_t)&v11[*(int *)(v45 + 48)];
    sub_2403A9210((uint64_t)v18 + v25, (uint64_t)v11, &qword_256FFB020);
    sub_2403A9210(v26, v27, &qword_256FFB020);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
    v29 = v11;
    v30 = (uint64_t)v11;
    v31 = v44;
    if (v28(v29, 1, v44) != 1)
      break;
    if (v28((char *)v27, 1, v31) != 1)
      goto LABEL_27;
    v11 = (char *)v30;
    sub_2403A97FC(v30, &qword_256FFB020);
    v12 = v43;
LABEL_19:
    sub_2408E57A4();
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v35 = sub_2408E5CD8();
    sub_240388AE4((uint64_t)v15, type metadata accessor for ContextProtoSurroundingText);
    sub_240388AE4((uint64_t)v18, type metadata accessor for ContextProtoSurroundingText);
    v37 = v21-- != 0;
    if ((v35 & 1) != 0)
    {
      v20 += v42;
      if (v37)
        continue;
    }
    return v35 & 1;
  }
  v32 = (uint64_t)v41;
  sub_2403A9210(v30, (uint64_t)v41, &qword_256FFB020);
  if (v28((char *)v27, 1, v31) != 1)
  {
    v33 = (uint64_t)v40;
    sub_2403A91CC(v27, (uint64_t)v40, type metadata accessor for ContextProtoBoundingBox);
    v34 = static ContextProtoBoundingBox.== infix(_:_:)(v32, v33);
    sub_240388AE4(v33, type metadata accessor for ContextProtoBoundingBox);
    sub_240388AE4(v32, type metadata accessor for ContextProtoBoundingBox);
    sub_2403A97FC(v30, &qword_256FFB020);
    v11 = (char *)v30;
    v12 = v43;
    if ((v34 & 1) == 0)
      goto LABEL_28;
    goto LABEL_19;
  }
  sub_240388AE4(v32, type metadata accessor for ContextProtoBoundingBox);
LABEL_27:
  sub_2403A97FC(v30, &qword_25700C560);
LABEL_28:
  sub_240388AE4((uint64_t)v15, type metadata accessor for ContextProtoSurroundingText);
  sub_240388AE4((uint64_t)v18, type metadata accessor for ContextProtoSurroundingText);
LABEL_29:
  v35 = 0;
  return v35 & 1;
}

uint64_t sub_2408C40A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_2408BA114((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_2408C4178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_2408E5504();
  v11 = result;
  if (result)
  {
    result = sub_2408E551C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_2408E5510();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_2408BA114(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_2408C422C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_2408C4278()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_2408C42AC + dword_2408C4484[v0 >> 62]))();
}

uint64_t sub_2408C42BC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_2408C44A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_BYTE *, uint64_t, uint64_t);
  char v20;
  void (*v21)(_BYTE *, uint64_t);
  uint64_t v22;
  _BYTE v24[16];

  v4 = sub_2408E57A4();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v10 = &v24[-v9];
  if (*(double *)a1 != *(double *)a2)
    goto LABEL_7;
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  v14 = *(_QWORD *)(a2 + 8);
  v13 = *(_QWORD *)(a2 + 16);
  v15 = *(_BYTE *)(a2 + 24);
  if ((v12 & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) == 0)
      __asm { BR              X10 }
    goto LABEL_6;
  }
  if ((*(_BYTE *)(a2 + 24) & 1) == 0)
  {
LABEL_6:
    v22 = *(_QWORD *)(a1 + 8);
    sub_2408C4898(v22, *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
    sub_2408C4898(v14, v13, v15);
    sub_2408C48B8(v22, v11, v12);
    sub_2408C48B8(v14, v13, v15);
LABEL_7:
    v20 = 0;
    return v20 & 1;
  }
  v16 = v8;
  v17 = type metadata accessor for DillSessionEvent(0);
  v18 = a1 + *(int *)(v17 + 24);
  v19 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16);
  v19(v10, v18, v4);
  v19(v7, a2 + *(int *)(v17 + 24), v4);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v20 = sub_2408E5CD8();
  v21 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
  v21(v7, v4);
  v21(v10, v4);
  return v20 & 1;
}

void sub_2408C4664()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  if ((v3 & 0x3000000000000000) == 0)
  {
    v6 = v0;
    *(_QWORD *)(v5 - 88) = v1;
    sub_2408C4898(v0, v2, 0);
    sub_2408C4898(v4, v3, 0);
    sub_2408C422C(v6, v2);
    v8 = v7;
    sub_2408C48B8(v4, v3, 0);
    sub_2408C48B8(v6, v2, 0);
    if ((v8 & 1) == 0)
      JUMPOUT(0x2408C4624);
    JUMPOUT(0x2408C4548);
  }
  JUMPOUT(0x2408C4620);
}

uint64_t sub_2408C4754(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  sub_2408C422C(*a1, a1[1]);
  if ((v11 & 1) != 0 && (sub_2408C0E44(a1[2], *(_QWORD *)(a2 + 16)) & 1) != 0)
  {
    v12 = type metadata accessor for DillSession(0);
    v13 = (char *)a1 + *(int *)(v12 + 24);
    v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v8, (char *)(a2 + *(int *)(v12 + 24)), v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v15 = sub_2408E5CD8();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v10, v4);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_2408C4898(uint64_t result, unint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return sub_2408C48D8(result, a2);
  return result;
}

uint64_t sub_2408C48B8(uint64_t result, unint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
    return sub_2408C48D8(result, a2);
  return result;
}

uint64_t sub_2408C48D8(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)sub_2408C48F4 + 4 * byte_24091E00A[(a2 >> 60) & 3]))();
}

uint64_t sub_2408C48F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, unint64_t))
{
  return a3(a1, a2 & 0xCFFFFFFFFFFFFFFFLL);
}

id DillSiriInstrumentationWrapper.__allocating_init(dillData:anyEventType:)(uint64_t a1, unint64_t a2, int a3)
{
  objc_class *v3;
  objc_class *v4;
  char *v8;
  uint64_t *v9;
  id result;
  id v11;
  objc_super v12;

  v4 = v3;
  v8 = (char *)objc_allocWithZone(v4);
  v9 = (uint64_t *)&v8[OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_dillData];
  *v9 = a1;
  v9[1] = a2;
  *(_DWORD *)&v8[OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_anyEventType] = a3;
  sub_240360070(a1, a2);
  v12.receiver = v8;
  v12.super_class = v4;
  result = objc_msgSendSuper2(&v12, sel_init);
  if (result)
  {
    v11 = result;
    sub_240363D58(a1, a2);
    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id DillSiriInstrumentationWrapper.init(dillData:anyEventType:)(uint64_t a1, unint64_t a2, int a3)
{
  char *v3;
  uint64_t *v6;
  id result;
  id v8;
  objc_super v9;

  v6 = (uint64_t *)&v3[OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_dillData];
  *v6 = a1;
  v6[1] = a2;
  *(_DWORD *)&v3[OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_anyEventType] = a3;
  sub_240360070(a1, a2);
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for DillSiriInstrumentationWrapper();
  result = objc_msgSendSuper2(&v9, sel_init);
  if (result)
  {
    v8 = result;
    sub_240363D58(a1, a2);
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for DillSiriInstrumentationWrapper()
{
  return objc_opt_self();
}

id DillSiriInstrumentationWrapper.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void DillSiriInstrumentationWrapper.init(coder:)(void *a1)
{

  sub_2408E602C();
  __break(1u);
}

id DillSiriInstrumentationWrapper.__allocating_init(data:)(uint64_t a1, unint64_t a2)
{
  objc_class *v2;
  void *v3;
  id v6;

  if (a2 >> 60 == 15)
  {
    v3 = 0;
  }
  else
  {
    v3 = (void *)sub_2408E554C();
    sub_2403C2424(a1, a2);
  }
  v6 = objc_msgSend(objc_allocWithZone(v2), sel_initWithData_, v3);

  return v6;
}

void DillSiriInstrumentationWrapper.init(data:)(uint64_t a1, unint64_t a2)
{
  sub_2403C2424(a1, a2);
  sub_2408E602C();
  __break(1u);
}

uint64_t sub_2408C4CFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_dillData);
  sub_240360070(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_dillData + 8));
  return v1;
}

uint64_t sub_2408C4D38()
{
  return 0x676E697373696D3CLL;
}

uint64_t sub_2408C4D98()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + OBJC_IVAR____TtC23LighthouseDataProcessor30DillSiriInstrumentationWrapper_anyEventType);
}

id DillSiriInstrumentationWrapper.__deallocating_deinit()
{
  return sub_2408C50D8(type metadata accessor for DillSiriInstrumentationWrapper);
}

uint64_t method lookup function for DillSiriInstrumentationWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DillSiriInstrumentationWrapper.__allocating_init(dillData:anyEventType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

id sub_2408C4E9C(uint64_t a1, unint64_t a2)
{
  char *v2;
  id v3;
  uint64_t *v6;
  char *v7;
  objc_super v9;

  if (a2 >> 60 == 15)
  {
    type metadata accessor for DillProvisional();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    v6 = (uint64_t *)&v2[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_dillData];
    *v6 = a1;
    v6[1] = a2;
    v7 = &v2[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_eventId];
    *(_QWORD *)v7 = 0;
    *((_QWORD *)v7 + 1) = 0xE000000000000000;
    *(_QWORD *)&v2[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_version] = -1;
    sub_240360070(a1, a2);
    v9.receiver = v2;
    v9.super_class = (Class)type metadata accessor for DillProvisional();
    v3 = objc_msgSendSuper2(&v9, sel_init);
    sub_2403C2424(a1, a2);
    if (v3)

  }
  return v3;
}

id sub_2408C4FD0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  void *v6;

  v3 = (uint64_t *)(a1 + *a3);
  v4 = *v3;
  v5 = v3[1];
  sub_240360070(*v3, v5);
  v6 = (void *)sub_2408E554C();
  sub_240363D58(v4, v5);
  return v6;
}

id sub_2408C50CC()
{
  return sub_2408C50D8(type metadata accessor for DillProvisional);
}

id sub_2408C50D8(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for DillProvisional()
{
  return objc_opt_self();
}

uint64_t sub_2408C5168@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_256FFA0A8 != -1)
    swift_once();
  v4 = sub_2408E5C48();
  __swift_project_value_buffer(v4, (uint64_t)qword_257072498);
  v5 = sub_2408E5C3C();
  v6 = sub_2408E5EA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    v20 = v8;
    if ((a1 & 1) != 0)
      v9 = 1920298824;
    else
      v9 = 7954756;
    if ((a1 & 1) != 0)
      v10 = 0xE400000000000000;
    else
      v10 = 0xE300000000000000;
    v19 = sub_2403B3ED0(v9, v10, &v20);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240347000, v5, v6, "Applying time fuzzing to date with precision: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v8, -1, -1);
    MEMORY[0x242684668](v7, -1, -1);
  }

  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v12 = (void *)sub_2408E5CE4();
  objc_msgSend(v11, sel_setDateFormat_, v12);

  v13 = (void *)sub_2408E55E8();
  v14 = objc_msgSend(v11, sel_stringFromDate_, v13);

  if (!v14)
  {
    sub_2408E5D08();
    v14 = (id)sub_2408E5CE4();
    swift_bridgeObjectRelease();
  }
  v15 = objc_msgSend(v11, sel_dateFromString_, v14, v19, v20);

  if (v15)
  {
    sub_2408E5600();

    v16 = sub_2408E5624();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 0, 1, v16);
  }
  else
  {

    v18 = sub_2408E5624();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

id sub_2408C5444(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App(0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal(0);
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94F50]), sel_init);
  sub_2408C5930(a1, (uint64_t)v6);
  v8 = type metadata accessor for ToolKitProtoTypedValue.ToolKitProtoPrimitiveValueKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1)
  {
    v9 = (char *)&loc_2408C5580 + 4 * byte_24091E380[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return v7;
}

void sub_2408C5888()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;

  sub_2403A91CC(v1, v2, type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.App);
  if (v0)
  {
    v4 = objc_allocWithZone(MEMORY[0x24BE94E20]);
    v5 = v0;
    v6 = objc_msgSend(v4, (SEL)(v3 + 3528));
    v7 = v6;
    if (v6)
    {
      v8 = v6;
      v9 = (void *)sub_2408E5CE4();
      objc_msgSend(v8, sel_setBundleId_, v9);

    }
    objc_msgSend(v5, sel_setApp_, v7);

  }
  JUMPOUT(0x2408C5864);
}

uint64_t sub_2408C5930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2408C5978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2570142A8;
  if (!qword_2570142A8)
  {
    v1 = type metadata accessor for ToolKitProtoTypedValue.PrimitiveValue.Decimal(255);
    result = MEMORY[0x242684578](&protocol conformance descriptor for ToolKitProtoTypedValue.PrimitiveValue.Decimal, v1);
    atomic_store(result, (unint64_t *)&qword_2570142A8);
  }
  return result;
}

double RequestSignature.init()@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_BYTE *)a1 = 1;
  *(_QWORD *)&result = 3;
  *(_OWORD *)(a1 + 8) = xmmword_2408EB210;
  *(_BYTE *)(a1 + 24) = 2;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  *(_QWORD *)(a1 + 48) = MEMORY[0x24BEE4AF8];
  *(_DWORD *)(a1 + 56) = 0;
  *(_WORD *)(a1 + 60) = 2049;
  return result;
}

uint64_t ErrorComponent.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2408C5A30 + 4 * byte_24091E3A0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_2408C5A30()
{
  return 0x726568746FLL;
}

unint64_t sub_2408C5A44()
{
  return 0xD000000000000012;
}

uint64_t sub_2408C5A60()
{
  return 0x72656E6E616C70;
}

uint64_t sub_2408C5A74()
{
  return 0x726F747563657865;
}

uint64_t sub_2408C5A8C()
{
  return 0x74696B6C6F6F74;
}

uint64_t sub_2408C5AA0()
{
  return 0x746E65696C63;
}

uint64_t sub_2408C5AB4()
{
  return 0x6E65746E49707061;
}

uint64_t sub_2408C5AD0()
{
  return 0x696C707041746F6ELL;
}

uint64_t SessionSignature.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  void (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v2 = type metadata accessor for AttributionTraits(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for SessionSignature(0);
  v19 = a1 + v9[7];
  v10 = *(void (**)(void))(v3 + 56);
  v10();
  *(_WORD *)a1 = 769;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  v11 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + v9[8]) = sub_2403A9060(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(a1 + v9[9]) = &unk_2510A6A68;
  *(_QWORD *)(a1 + v9[10]) = v11;
  v5[2] = 0;
  v5[3] = 0;
  v12 = (uint64_t)v5 + *(int *)(v2 + 24);
  v13 = sub_2408E566C();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v15 = (_QWORD *)((char *)v5 + *(int *)(v2 + 28));
  *v5 = 0;
  v5[1] = 0;
  *v15 = 0;
  v15[1] = 0;
  sub_2403A97FC(v12, &qword_256FFA660);
  v14(v12, 1, 1, v13);
  swift_bridgeObjectRelease();
  *v15 = 0;
  v15[1] = 0;
  sub_2403A91CC((uint64_t)v5, (uint64_t)v8, type metadata accessor for AttributionTraits);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v10)(v8, 0, 1, v2);
  result = sub_2403C25A0((uint64_t)v8, v19, &qword_2570014F8);
  *(_QWORD *)(a1 + v9[11]) = MEMORY[0x24BEE4AF8];
  v17 = (_QWORD *)(a1 + v9[12]);
  *v17 = 0;
  v17[1] = 0xE000000000000000;
  return result;
}

uint64_t type metadata accessor for AttributionTraits(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257015FD8);
}

uint64_t type metadata accessor for SessionSignature(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_257015F20);
}

uint64_t (*SessionView.start.modify())()
{
  return nullsub_1;
}

uint64_t SessionView.end.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SessionView(0) + 20);
  v4 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SessionView.end.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SessionView(0) + 20);
  v4 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SessionView.end.modify())()
{
  type metadata accessor for SessionView(0);
  return nullsub_1;
}

uint64_t SessionView.numSessions.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SessionView(0) + 24));
}

uint64_t SessionView.numSessions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SessionView(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*SessionView.numSessions.modify())()
{
  type metadata accessor for SessionView(0);
  return nullsub_1;
}

uint64_t SessionView.sessions.getter()
{
  type metadata accessor for SessionView(0);
  return swift_bridgeObjectRetain();
}

uint64_t SessionView.sessions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for SessionView(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SessionView.sessions.modify())()
{
  type metadata accessor for SessionView(0);
  return nullsub_1;
}

uint64_t (*SessionData.date.modify())()
{
  return nullsub_1;
}

uint64_t SessionData.sessionSignature.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SessionData(0);
  return sub_2403AE1A4(v1 + *(int *)(v3 + 20), a1, type metadata accessor for SessionSignature);
}

uint64_t SessionData.sessionSignature.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SessionData(0) + 20);
  return sub_2408CC604(a1, v3);
}

uint64_t (*SessionData.sessionSignature.modify())()
{
  type metadata accessor for SessionData(0);
  return nullsub_1;
}

uint64_t SessionData.clientSessionId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SessionData(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.clientSessionId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SessionData(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SessionData.clientSessionId.modify())()
{
  type metadata accessor for SessionData(0);
  return nullsub_1;
}

uint64_t SessionData.rawSessionId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SessionData(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionData.rawSessionId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SessionData(0) + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SessionData.rawSessionId.modify())()
{
  type metadata accessor for SessionData(0);
  return nullsub_1;
}

uint64_t SessionData.requests.getter()
{
  type metadata accessor for SessionData(0);
  return swift_bridgeObjectRetain();
}

uint64_t SessionData.requests.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for SessionData(0) + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SessionData.requests.modify())()
{
  type metadata accessor for SessionData(0);
  return nullsub_1;
}

uint64_t (*RequestData.timestamp.modify())()
{
  return nullsub_1;
}

uint64_t RequestData.requestID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RequestData(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RequestData.requestID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RequestData(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RequestData.requestID.modify())()
{
  type metadata accessor for RequestData(0);
  return nullsub_1;
}

uint64_t RequestData.events.getter()
{
  type metadata accessor for RequestData(0);
  return swift_bridgeObjectRetain();
}

uint64_t RequestData.events.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for RequestData(0) + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*RequestData.events.modify())()
{
  type metadata accessor for RequestData(0);
  return nullsub_1;
}

uint64_t RequestData.eventWrapper.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for RequestData(0) + 28));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 RequestData.eventWrapper.setter(__n128 *a1)
{
  uint64_t v1;
  __n128 *v3;
  __n128 result;

  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for RequestData(0) + 28));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *a1;
  *v3 = *a1;
  return result;
}

uint64_t (*RequestData.eventWrapper.modify())()
{
  type metadata accessor for RequestData(0);
  return nullsub_1;
}

uint64_t RequestData.requestSignature.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;

  v3 = v1 + *(int *)(type metadata accessor for RequestData(0) + 32);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_WORD *)(v3 + 60);
  LODWORD(v3) = *(_DWORD *)(v3 + 56);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_WORD *)(a1 + 60) = v11;
  *(_DWORD *)(a1 + 56) = v3;
  return sub_2408CC65C(v4, v5, v6, v7, v8, v9);
}

__n128 RequestData.requestSignature.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  __int16 v4;
  uint64_t v5;
  __n128 result;
  __n128 v7;
  __int128 v8;
  __int128 v9;

  v8 = a1[1];
  v9 = *a1;
  v7 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_DWORD *)a1 + 14);
  v4 = *((_WORD *)a1 + 30);
  v5 = v1 + *(int *)(type metadata accessor for RequestData(0) + 32);
  sub_24051A728(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_QWORD *)(v5 + 40));
  *(_OWORD *)v5 = v9;
  *(_OWORD *)(v5 + 16) = v8;
  result = v7;
  *(__n128 *)(v5 + 32) = v7;
  *(_QWORD *)(v5 + 48) = v2;
  *(_WORD *)(v5 + 60) = v4;
  *(_DWORD *)(v5 + 56) = v3;
  return result;
}

uint64_t (*RequestData.requestSignature.modify())()
{
  type metadata accessor for RequestData(0);
  return nullsub_1;
}

uint64_t sub_2408C6474(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2408C64A4 + 4 * byte_24091E3A9[a1]))(0x746E65696C63, 0xE600000000000000);
}

uint64_t sub_2408C64A4()
{
  return 0x5374736575716572;
}

unint64_t sub_2408C64C8()
{
  return 0xD000000000000013;
}

uint64_t sub_2408C64E4()
{
  return 0x6465747563657865;
}

unint64_t sub_2408C6508()
{
  return 0xD000000000000018;
}

uint64_t sub_2408C6528()
{
  return 0x6D6F43726F727265;
}

uint64_t sub_2408C654C()
{
  unsigned __int8 *v0;

  return sub_2408C6474(*v0);
}

uint64_t sub_2408C6554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2408D2F30(a1, a2);
  *a3 = result;
  return result;
}

void sub_2408C6578(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2408C6584()
{
  sub_2408CC6A0();
  return sub_2408E6278();
}

uint64_t sub_2408C65AC()
{
  sub_2408CC6A0();
  return sub_2408E6284();
}

uint64_t RequestSignature.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  int v25;
  char v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015928);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((_QWORD *)v1 + 1);
  v20 = *((_QWORD *)v1 + 2);
  v21 = v9;
  v25 = v1[24];
  v10 = *((_QWORD *)v1 + 4);
  v18 = *((_QWORD *)v1 + 5);
  v19 = v10;
  v11 = *((_QWORD *)v1 + 6);
  v16 = *((unsigned int *)v1 + 14);
  v17 = v11;
  LODWORD(v11) = v1[60];
  v14 = v1[61];
  v15 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CC6A0();
  sub_2408E626C();
  LOBYTE(v22) = v8;
  v26 = 0;
  sub_2408CC6E4();
  sub_2408E6164();
  if (!v2)
  {
    v12 = v17;
    v22 = v21;
    v23 = v20;
    v24 = v25;
    v26 = 1;
    sub_2408CC728();
    sub_2408E6164();
    LOBYTE(v22) = 2;
    sub_2408E6140();
    v22 = v12;
    v26 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7D8);
    sub_2408CC838(&qword_257015948, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_2408E6164();
    LOBYTE(v22) = 4;
    v26 = v15;
    sub_2408E6134();
    LOBYTE(v22) = v14;
    v26 = 5;
    sub_2408CC76C();
    sub_2408E6164();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RequestSignature.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  int v34;
  char v35;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015958);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CC6A0();
  sub_2408E6254();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v35 = 0;
  sub_2408CC7B0();
  sub_2408E60F8();
  v9 = v31;
  v35 = 1;
  sub_2408CC7F4();
  sub_2408E60F8();
  v11 = v31;
  v12 = v33;
  LOBYTE(v31) = 2;
  v28 = v32;
  v29 = v11;
  sub_2403ADAA8(v11, v32, v33);
  v26 = sub_2408E60D4();
  v27 = v9;
  v34 = v12;
  v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7D8);
  v35 = 3;
  sub_2408CC838(&qword_257015970, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_2408E60F8();
  v30 = v14;
  v15 = v31;
  LOBYTE(v31) = 4;
  swift_bridgeObjectRetain();
  v16 = sub_2408E60C8();
  v25 = v15;
  v35 = 5;
  sub_2408CC898();
  sub_2408E60F8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v31;
  v18 = v28;
  v19 = v29;
  v20 = v34;
  sub_2403ADAA8(v29, v28, v34);
  sub_2403ADB34(v19, v18, v20);
  *(_BYTE *)a2 = v27;
  *(_QWORD *)(a2 + 8) = v19;
  *(_QWORD *)(a2 + 16) = v18;
  *(_BYTE *)(a2 + 24) = v20;
  v21 = v25;
  v22 = v16;
  v23 = v30;
  *(_QWORD *)(a2 + 32) = v26;
  *(_QWORD *)(a2 + 40) = v23;
  *(_QWORD *)(a2 + 48) = v21;
  *(_DWORD *)(a2 + 56) = v22;
  *(_BYTE *)(a2 + 60) = BYTE4(v22) & 1;
  *(_BYTE *)(a2 + 61) = v17;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  sub_2403ADB34(v19, v18, v20);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2408C6CE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RequestSignature.init(from:)(a1, a2);
}

uint64_t sub_2408C6CFC(_QWORD *a1)
{
  return RequestSignature.encode(to:)(a1);
}

uint64_t static PromptType.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_2408E617C();
}

uint64_t sub_2408C6D44()
{
  return 0;
}

uint64_t sub_2408C6D50()
{
  sub_2408CC964();
  return sub_2408E6278();
}

uint64_t sub_2408C6D78()
{
  sub_2408CC964();
  return sub_2408E6284();
}

uint64_t sub_2408C6DA0()
{
  sub_2408CCA30();
  return sub_2408E6278();
}

uint64_t sub_2408C6DC8()
{
  sub_2408CCA30();
  return sub_2408E6284();
}

uint64_t sub_2408C6DF0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2408C6E24 + 4 * byte_24091E3AF[*v0]))(0x6574656C706D6F63, 0xE900000000000064);
}

uint64_t sub_2408C6E24()
{
  return 0x64656C696166;
}

uint64_t sub_2408C6E38()
{
  return 0x64656C65636E6163;
}

uint64_t sub_2408C6E50()
{
  return 0x74706D6F7270;
}

uint64_t sub_2408C6E64()
{
  return 0x656E6F646E616261;
}

uint64_t sub_2408C6E78()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_2408C6E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2408D3208(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2408C6EB4()
{
  sub_2408CC8DC();
  return sub_2408E6278();
}

uint64_t sub_2408C6EDC()
{
  sub_2408CC8DC();
  return sub_2408E6284();
}

uint64_t sub_2408C6F04()
{
  sub_2408CCAB8();
  return sub_2408E6278();
}

uint64_t sub_2408C6F2C()
{
  sub_2408CCAB8();
  return sub_2408E6284();
}

uint64_t sub_2408C6F5C()
{
  return 12383;
}

uint64_t sub_2408C6F6C()
{
  sub_2408CCA74();
  return sub_2408E6278();
}

uint64_t sub_2408C6F94()
{
  sub_2408CCA74();
  return sub_2408E6284();
}

uint64_t sub_2408C6FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2408E617C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2408C7038()
{
  sub_2408CC9A8();
  return sub_2408E6278();
}

uint64_t sub_2408C7060()
{
  sub_2408CC9A8();
  return sub_2408E6284();
}

uint64_t sub_2408C7088()
{
  sub_2408CC920();
  return sub_2408E6278();
}

uint64_t sub_2408C70B0()
{
  sub_2408CC920();
  return sub_2408E6284();
}

uint64_t IERequestStatus.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[11];
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015980);
  v22[9] = *(_QWORD *)(v3 - 8);
  v22[10] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v22[8] = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015988);
  v22[6] = *(_QWORD *)(v5 - 8);
  v22[7] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v22[5] = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015990);
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v25 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015998);
  v22[3] = *(_QWORD *)(v9 - 8);
  v22[4] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v22[2] = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570159A0);
  v24 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570159A8);
  v22[0] = *(_QWORD *)(v14 - 8);
  v22[1] = v14;
  MEMORY[0x24BDAC7A8](v14);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570159B0);
  v29 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v1;
  v23 = v1[1];
  v17 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CC8DC();
  sub_2408E626C();
  if (v17)
  {
    if (v17 != 1)
      __asm { BR              X9 }
    LOBYTE(v30) = 3;
    sub_2408CC9A8();
    v18 = v25;
    v19 = v32;
    sub_2408E6110();
    v30 = v28;
    v31 = v23;
    sub_2408CC9EC();
    v20 = v27;
    sub_2408E6164();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v20);
  }
  else
  {
    LOBYTE(v30) = 1;
    sub_2408CCA74();
    v19 = v32;
    sub_2408E6110();
    LOBYTE(v30) = v28;
    sub_2408CC76C();
    sub_2408E6164();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v11);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v16, v19);
}

uint64_t IERequestStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[4];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;

  v33 = a2;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570159F8);
  v37 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v36 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015A00);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v35 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015A08);
  v28 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015A10);
  v23[2] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v31 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015A18);
  v23[3] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v32 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015A20);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015A28);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_2408CC8DC();
  v17 = v39;
  sub_2408E6254();
  if (!v17)
  {
    v39 = v11;
    v23[0] = v9;
    v23[1] = v8;
    v18 = sub_2408E6104();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X10 }
    v19 = sub_2408E5FC0();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257015A30);
    *v21 = &type metadata for IERequestStatus;
    sub_2408E60A4();
    sub_2408E5FB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v38);
}

uint64_t sub_2408C7C70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IERequestStatus.init(from:)(a1, a2);
}

uint64_t sub_2408C7C84(_QWORD *a1)
{
  return IERequestStatus.encode(to:)(a1);
}

uint64_t sub_2408C7C9C()
{
  return 1701869940;
}

uint64_t sub_2408C7CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2408E617C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2408C7D30()
{
  sub_2408CCB40();
  return sub_2408E6278();
}

uint64_t sub_2408C7D58()
{
  sub_2408CCB40();
  return sub_2408E6284();
}

uint64_t PromptType.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015A40);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CCB40();
  sub_2408E626C();
  sub_2408E6140();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t PromptType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015A50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CCB40();
  sub_2408E6254();
  if (!v2)
  {
    v9 = sub_2408E60D4();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2408C7F88@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PromptType.init(from:)(a1, a2);
}

uint64_t sub_2408C7F9C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015A40);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CCB40();
  sub_2408E626C();
  sub_2408E6140();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2408C8088(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_2408E617C();
}

uint64_t sub_2408C80B8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2408C80E8 + 4 * byte_24091E3BF[a1]))(0x746E65696C63, 0xE600000000000000);
}

unint64_t sub_2408C80E8()
{
  return 0xD000000000000010;
}

uint64_t sub_2408C8194()
{
  return 0x747461506E617073;
}

uint64_t sub_2408C81B8()
{
  unsigned __int8 *v0;

  return sub_2408C80B8(*v0);
}

uint64_t sub_2408C81C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2408D3490(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2408C81E4()
{
  sub_2408CCB84();
  return sub_2408E6278();
}

uint64_t sub_2408C820C()
{
  sub_2408CCB84();
  return sub_2408E6284();
}

uint64_t SessionSignature.encode(to:)(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015A58);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CCB84();
  sub_2408E626C();
  LOBYTE(v12) = *v3;
  v13 = 0;
  sub_2408CC6E4();
  sub_2408E6164();
  if (!v2)
  {
    LOBYTE(v12) = v3[1];
    v13 = 1;
    sub_2405023E4();
    sub_2408E6164();
    LOBYTE(v12) = 2;
    sub_2408E6140();
    v9 = (int *)type metadata accessor for SessionSignature(0);
    LOBYTE(v12) = 3;
    type metadata accessor for AttributionTraits(0);
    sub_2404FA028(&qword_257015A68, type metadata accessor for AttributionTraits, (uint64_t)&protocol conformance descriptor for AttributionTraits);
    sub_2408E6128();
    v12 = *(_QWORD *)&v3[v9[8]];
    v13 = 4;
    sub_2408CCBC8();
    sub_2408E6164();
    v12 = *(_QWORD *)&v3[v9[9]];
    v13 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7D8);
    sub_2408CC838(&qword_257015948, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_2408E6164();
    v12 = *(_QWORD *)&v3[v9[10]];
    v13 = 6;
    sub_2408E6164();
    v12 = *(_QWORD *)&v3[v9[11]];
    v13 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257015A78);
    sub_2408CCC64(&qword_257015A80, &qword_257015A88, (uint64_t)&protocol conformance descriptor for ParticipantInfo, MEMORY[0x24BEE12A0]);
    sub_2408E6164();
    LOBYTE(v12) = 8;
    sub_2408E6140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SessionSignature.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v35 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015A90);
  v6 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SessionSignature(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (int *)v10;
  v14 = *(int *)(v10 + 28);
  v38 = v12;
  v15 = (uint64_t)&v12[v14];
  v16 = type metadata accessor for AttributionTraits(0);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v40 = v15;
  v17(v15, 1, 1, v16);
  v18 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_2408CCB84();
  v19 = v8;
  v20 = v39;
  sub_2408E6254();
  if (v20)
  {
    v24 = v40;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
    return sub_2403A97FC(v24, &qword_2570014F8);
  }
  else
  {
    v21 = (uint64_t)v5;
    v42 = 0;
    sub_2408CC7B0();
    v22 = v19;
    sub_2408E60F8();
    v23 = v13;
    v26 = (uint64_t)v38;
    *v38 = v41;
    v42 = 1;
    sub_240502954();
    sub_2408E60F8();
    *(_BYTE *)(v26 + 1) = v41;
    LOBYTE(v41) = 2;
    v27 = v6;
    *(_QWORD *)(v26 + 8) = sub_2408E60D4();
    *(_QWORD *)(v26 + 16) = v28;
    LOBYTE(v41) = 3;
    sub_2404FA028(&qword_257015A98, type metadata accessor for AttributionTraits, (uint64_t)&protocol conformance descriptor for AttributionTraits);
    sub_2408E60BC();
    sub_2403C25A0(v21, v40, &qword_2570014F8);
    v42 = 4;
    sub_2408CCC20();
    sub_2408E60F8();
    *(_QWORD *)(v26 + v23[8]) = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7D8);
    v42 = 5;
    sub_2408CC838(&qword_257015970, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
    sub_2408E60F8();
    *(_QWORD *)(v26 + v23[9]) = v41;
    v42 = 6;
    sub_2408E60F8();
    *(_QWORD *)(v26 + v23[10]) = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257015A78);
    v42 = 7;
    sub_2408CCC64(&qword_257015AA8, &qword_257015AB0, (uint64_t)&protocol conformance descriptor for ParticipantInfo, MEMORY[0x24BEE12D0]);
    sub_2408E60F8();
    v29 = (uint64_t)v37;
    *(_QWORD *)(v26 + v23[11]) = v41;
    LOBYTE(v41) = 8;
    v30 = sub_2408E60D4();
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v36);
    v33 = (uint64_t *)(v26 + v23[12]);
    *v33 = v30;
    v33[1] = v32;
    sub_2403AE1A4(v26, v35, type metadata accessor for SessionSignature);
    __swift_destroy_boxed_opaque_existential_0(v29);
    return sub_240388AE4(v26, type metadata accessor for SessionSignature);
  }
}

uint64_t sub_2408C8BC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SessionSignature.init(from:)(a1, a2);
}

uint64_t sub_2408C8BDC(_QWORD *a1)
{
  return SessionSignature.encode(to:)(a1);
}

uint64_t SessionSignature.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_256FF8FD0 != -1)
    swift_once();
  type metadata accessor for SessionSignature(0);
  sub_2404FA028(&qword_257015AB8, type metadata accessor for SessionSignature, (uint64_t)&protocol conformance descriptor for SessionSignature);
  v0 = sub_2408E54D4();
  v2 = v1;
  v3 = sub_2408E5D2C();
  MEMORY[0x24BDAC7A8](v3);
  sub_2408E5D20();
  v4 = sub_2408E5D14();
  if (v5)
  {
    v6 = v4;
    sub_240363D58(v0, v2);
  }
  else
  {
    sub_240363D58(v0, v2);
    return 0;
  }
  return v6;
}

uint64_t sub_2408C8D34()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2408C8D70 + 4 * byte_24091E3C8[*v0]))(0x7475626972747461, 0xEF687461506E6F69);
}

unint64_t sub_2408C8D70()
{
  return 0xD000000000000010;
}

uint64_t sub_2408C8D8C()
{
  return 0x75716552746F6F72;
}

uint64_t sub_2408C8DB0()
{
  return 0x526572756C696166;
}

uint64_t sub_2408C8DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2408D3824(a1, a2);
  *a3 = result;
  return result;
}

void sub_2408C8DF8(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_2408C8E04()
{
  sub_2408CCCE8();
  return sub_2408E6278();
}

uint64_t sub_2408C8E2C()
{
  sub_2408CCCE8();
  return sub_2408E6284();
}

uint64_t AttributionTraits.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015AC0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CCCE8();
  sub_2408E626C();
  v8[15] = 0;
  sub_2408E611C();
  if (!v1)
  {
    v8[14] = 1;
    sub_2408E611C();
    type metadata accessor for AttributionTraits(0);
    v8[13] = 2;
    sub_2408E566C();
    sub_2404FA028(&qword_256FFA6E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEA78]);
    sub_2408E6128();
    v8[12] = 3;
    sub_2408E611C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AttributionTraits.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v26 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015AD0);
  v27 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AttributionTraits(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v9 = (uint64_t)&v8[*(int *)(v6 + 24)];
  v10 = sub_2408E566C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = &v8[*(int *)(v5 + 28)];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CCCE8();
  v28 = v4;
  v12 = v30;
  sub_2408E6254();
  if (!v12)
  {
    v30 = v9;
    v25 = v11;
    v14 = v27;
    v13 = v28;
    v34 = 0;
    *(_QWORD *)v8 = sub_2408E60B0();
    *((_QWORD *)v8 + 1) = v15;
    v33 = 1;
    *((_QWORD *)v8 + 2) = sub_2408E60B0();
    *((_QWORD *)v8 + 3) = v17;
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    MEMORY[0x24BDAC7A8](v18);
    v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    v32 = 2;
    sub_2404FA028(&qword_256FFA6F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA50], MEMORY[0x24BDCEAA0]);
    sub_2408E60BC();
    sub_2403C25A0((uint64_t)v20, v30, &qword_256FFA660);
    v31 = 3;
    v21 = sub_2408E60B0();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v13, v29);
    v24 = (uint64_t *)v25;
    swift_bridgeObjectRelease();
    *v24 = v21;
    v24[1] = v23;
    sub_2403AE1A4((uint64_t)v8, v26, type metadata accessor for AttributionTraits);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_240388AE4((uint64_t)v8, type metadata accessor for AttributionTraits);
}

uint64_t sub_2408C9310@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AttributionTraits.init(from:)(a1, a2);
}

uint64_t sub_2408C9324(_QWORD *a1)
{
  return AttributionTraits.encode(to:)(a1);
}

uint64_t sub_2408C9338()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D617453656D6974;
  else
    return 0x7069636974726170;
}

uint64_t sub_2408C9380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2408D3A40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2408C93A4()
{
  sub_2408CCD2C();
  return sub_2408E6278();
}

uint64_t sub_2408C93CC()
{
  sub_2408CCD2C();
  return sub_2408E6284();
}

uint64_t ParticipantInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015AD8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CCD2C();
  sub_2408E626C();
  v8[15] = 0;
  sub_2408E611C();
  if (!v1)
  {
    type metadata accessor for ParticipantInfo(0);
    v8[14] = 1;
    sub_2408E5624();
    sub_2404FA028(&qword_257001530, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE908], MEMORY[0x24BDCE928]);
    sub_2408E6164();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ParticipantInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v22 = a2;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015AE8);
  v4 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ParticipantInfo(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v9 = 0;
  v9[1] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CCD2C();
  sub_2408E6254();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v21 = v7;
    v10 = v4;
    v25 = 0;
    v11 = v23;
    *v9 = sub_2408E60B0();
    v9[1] = v12;
    v13 = sub_2408E5624();
    v20 = &v18;
    v19 = *(_QWORD *)(v13 - 8);
    MEMORY[0x24BDAC7A8](v13);
    v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    v24 = 1;
    sub_2404FA028(&qword_257001548, v16, MEMORY[0x24BDCE968]);
    sub_2408E60F8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))((char *)v9 + *(int *)(v21 + 20), v15, v13);
    sub_2403AE1A4((uint64_t)v9, v22, type metadata accessor for ParticipantInfo);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return sub_240388AE4((uint64_t)v9, type metadata accessor for ParticipantInfo);
  }
}

uint64_t sub_2408C97AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ParticipantInfo.init(from:)(a1, a2);
}

uint64_t sub_2408C97C0(_QWORD *a1)
{
  return ParticipantInfo.encode(to:)(a1);
}

uint64_t sub_2408C97D4()
{
  return 0x6974616974696E69;
}

uint64_t sub_2408C97F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6974616974696E69 && a2 == 0xEF736E617053676ELL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2408E617C();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2408C98B0()
{
  sub_2408CCD70();
  return sub_2408E6278();
}

uint64_t sub_2408C98D8()
{
  sub_2408CCD70();
  return sub_2408E6284();
}

uint64_t SpanRespresentation.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015AF0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CCD70();
  sub_2408E626C();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257015B00);
  sub_2408CCDB4();
  sub_2408E6164();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SpanRespresentation.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CCD70();
  sub_2408E6254();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257015B00);
    sub_2408CCE38();
    sub_2408E60F8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2408C9B30@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SpanRespresentation.init(from:)(a1, a2);
}

uint64_t sub_2408C9B44(_QWORD *a1)
{
  return SpanRespresentation.encode(to:)(a1);
}

uint64_t sub_2408C9B58()
{
  sub_2408CCF44();
  return sub_2408E6278();
}

uint64_t sub_2408C9B80()
{
  sub_2408CCF44();
  return sub_2408E6284();
}

uint64_t sub_2408C9BA8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2408C9BDC + 4 * byte_24091E3CC[*v0]))(0x6574656C706D6F63, 0xE900000000000064);
}

uint64_t sub_2408C9BDC()
{
  return 0x64656C696166;
}

uint64_t sub_2408C9BF0()
{
  return 0x64656C65636E6163;
}

uint64_t sub_2408C9C08()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_2408C9C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2408D3B54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2408C9C44()
{
  sub_2408CCEBC();
  return sub_2408E6278();
}

uint64_t sub_2408C9C6C()
{
  sub_2408CCEBC();
  return sub_2408E6284();
}

uint64_t sub_2408C9C94()
{
  sub_2408CCFCC();
  return sub_2408E6278();
}

uint64_t sub_2408C9CBC()
{
  sub_2408CCFCC();
  return sub_2408E6284();
}

uint64_t sub_2408C9CE4()
{
  sub_2408CCF88();
  return sub_2408E6278();
}

uint64_t sub_2408C9D0C()
{
  sub_2408CCF88();
  return sub_2408E6284();
}

uint64_t sub_2408C9D34()
{
  sub_2408CCF00();
  return sub_2408E6278();
}

uint64_t sub_2408C9D5C()
{
  sub_2408CCF00();
  return sub_2408E6284();
}

void TaskCompletionStatus.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B20);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B28);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B30);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B38);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B40);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CCEBC();
  sub_2408E626C();
  __asm { BR              X9 }
}

uint64_t sub_2408C9F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_2408CCFCC();
  sub_2408E6110();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t TaskCompletionStatus.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B70);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B78);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B80);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B88);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B90);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_2408CCEBC();
  v15 = v28;
  sub_2408E6254();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_2408E6104();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_2408E5FC0();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257015A30);
    *v19 = &type metadata for TaskCompletionStatus;
    sub_2408E60A4();
    sub_2408E5FB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
}

uint64_t sub_2408CA4F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return TaskCompletionStatus.init(from:)(a1, a2);
}

void sub_2408CA50C(_QWORD *a1)
{
  TaskCompletionStatus.encode(to:)(a1);
}

BOOL static UserInteractionType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t UserInteractionType.hash(into:)()
{
  return sub_2408E6224();
}

uint64_t sub_2408CA55C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6769626D61736964;
  if (*v0 != 1)
    v1 = 0x616D7269666E6F63;
  if (*v0)
    return v1;
  else
    return 0x74706D6F7270;
}

uint64_t sub_2408CA5C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2408D3D10(a1, a2);
  *a3 = result;
  return result;
}

void sub_2408CA5EC(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_2408CA5F8()
{
  sub_2408CD010();
  return sub_2408E6278();
}

uint64_t sub_2408CA620()
{
  sub_2408CD010();
  return sub_2408E6284();
}

uint64_t sub_2408CA648()
{
  sub_2408CD054();
  return sub_2408E6278();
}

uint64_t sub_2408CA670()
{
  sub_2408CD054();
  return sub_2408E6284();
}

uint64_t sub_2408CA698()
{
  sub_2408CD098();
  return sub_2408E6278();
}

uint64_t sub_2408CA6C0()
{
  sub_2408CD098();
  return sub_2408E6284();
}

uint64_t sub_2408CA6E8()
{
  sub_2408CD0DC();
  return sub_2408E6278();
}

uint64_t sub_2408CA710()
{
  sub_2408CD0DC();
  return sub_2408E6284();
}

uint64_t UserInteractionType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015B98);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015BA0);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015BA8);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015BB0);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CD010();
  sub_2408E626C();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_2408CD098();
      sub_2408E6110();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_2408CD054();
      v16 = v21;
      sub_2408E6110();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_2408CD0DC();
    sub_2408E6110();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t UserInteractionType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015BD8);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015BE0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015BE8);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015BF0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CD010();
  v13 = v41;
  sub_2408E6254();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_2408E6104();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_2408E5FC0();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257015A30);
    *v25 = &type metadata for UserInteractionType;
    sub_2408E60A4();
    sub_2408E5FB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_2408CD098();
      v20 = v9;
      sub_2408E6098();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_2408CD054();
      v28 = v15;
      sub_2408E6098();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_2408CD0DC();
    sub_2408E6098();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

uint64_t sub_2408CADE4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return UserInteractionType.init(from:)(a1, a2);
}

uint64_t sub_2408CADF8(_QWORD *a1)
{
  return UserInteractionType.encode(to:)(a1);
}

BOOL static SageClient.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SageClient.hash(into:)()
{
  return sub_2408E6224();
}

uint64_t sub_2408CAE4C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E776F6E6B6E75;
  else
    return 0x30303169726973;
}

uint64_t sub_2408CAE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2408D3E98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2408CAEA4()
{
  sub_2408CD120();
  return sub_2408E6278();
}

uint64_t sub_2408CAECC()
{
  sub_2408CD120();
  return sub_2408E6284();
}

uint64_t sub_2408CAEF4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_2408CAF20()
{
  sub_2408CD1A8();
  return sub_2408E6278();
}

uint64_t sub_2408CAF48()
{
  sub_2408CD1A8();
  return sub_2408E6284();
}

uint64_t sub_2408CAF70()
{
  sub_2408CD164();
  return sub_2408E6278();
}

uint64_t sub_2408CAF98()
{
  sub_2408CD164();
  return sub_2408E6284();
}

uint64_t SageClient.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015BF8);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015C00);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015C08);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CD120();
  sub_2408E626C();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_2408CD164();
    sub_2408E6110();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_2408CD1A8();
    sub_2408E6110();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t SageClient.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015C28);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015C30);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015C38);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CD120();
  v11 = v33;
  sub_2408E6254();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_2408E6104();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_2408E5FC0();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257015A30);
    *v21 = &type metadata for SageClient;
    sub_2408E60A4();
    sub_2408E5FB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_2408CD164();
    sub_2408E6098();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_2408CD1A8();
    v22 = v6;
    sub_2408E6098();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_2408CB4F0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return SageClient.init(from:)(a1, a2);
}

uint64_t sub_2408CB504(_QWORD *a1)
{
  return SageClient.encode(to:)(a1);
}

uint64_t sub_2408CB518()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E776F6E6B6E75;
  else
    return 1769105779;
}

uint64_t sub_2408CB54C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2408D3F88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2408CB570()
{
  sub_2408CD1EC();
  return sub_2408E6278();
}

uint64_t sub_2408CB598()
{
  sub_2408CD1EC();
  return sub_2408E6284();
}

uint64_t sub_2408CB5C0()
{
  sub_2408CD274();
  return sub_2408E6278();
}

uint64_t sub_2408CB5E8()
{
  sub_2408CD274();
  return sub_2408E6284();
}

uint64_t sub_2408CB610()
{
  sub_2408CD230();
  return sub_2408E6278();
}

uint64_t sub_2408CB638()
{
  sub_2408CD230();
  return sub_2408E6284();
}

uint64_t IEClient.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015C40);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015C48);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015C50);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CD1EC();
  sub_2408E626C();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_2408CD230();
    sub_2408E6110();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_2408CD274();
    sub_2408E6110();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t IEClient.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015C70);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015C78);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257015C80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408CD1EC();
  v11 = v33;
  sub_2408E6254();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_2408E6104();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_2408E5FC0();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257015A30);
    *v21 = &type metadata for IEClient;
    sub_2408E60A4();
    sub_2408E5FB4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_2408CD230();
    sub_2408E6098();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_2408CD274();
    v22 = v6;
    sub_2408E6098();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_2408CBB90@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return IEClient.init(from:)(a1, a2);
}

uint64_t sub_2408CBBA4(_QWORD *a1)
{
  return IEClient.encode(to:)(a1);
}

LighthouseDataProcessor::ErrorComponent_optional __swiftcall ErrorComponent.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  LighthouseDataProcessor::ErrorComponent_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2408E608C();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_2408CBC10()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_2408E6218();
  sub_24040D8FC((uint64_t)v3, v1);
  return sub_2408E623C();
}

void sub_2408CBC54(uint64_t a1)
{
  char *v1;

  sub_24040D8FC(a1, *v1);
}

uint64_t sub_2408CBC5C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_2408E6218();
  sub_24040D8FC((uint64_t)v3, v1);
  return sub_2408E623C();
}

LighthouseDataProcessor::ErrorComponent_optional sub_2408CBC9C(Swift::String *a1)
{
  return ErrorComponent.init(rawValue:)(*a1);
}

uint64_t sub_2408CBCA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ErrorComponent.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2408CBCCC()
{
  sub_2408D4068();
  return sub_2408E5D74();
}

uint64_t sub_2408CBD28()
{
  sub_2408D4068();
  return sub_2408E5D68();
}

void sub_2408CBD74(char *a1)
{
  sub_24040CE5C(*a1);
}

uint64_t sub_2408CBD80@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  unint64_t *v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[4];
  uint64_t v19;

  v19 = a4;
  v13 = a5;
  v14 = a3;
  v8 = sub_2408E5810();
  MEMORY[0x24BDAC7A8](v8);
  v9 = a2(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408E6248();
  if (!v5)
  {
    __swift_project_boxed_opaque_existential_1(v18, v18[3]);
    sub_2408CD2B8();
    sub_2408E6188();
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
    sub_2408E5804();
    sub_2404FA028(v14, a2, v19);
    sub_2408E5984();
    sub_2403A91CC((uint64_t)v11, v13, a2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t CodableMessage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[7];

  v21[6] = a3;
  v17 = a4;
  v7 = sub_2408E5810();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408E6248();
  if (!v4)
  {
    v15 = v9;
    v16 = v11;
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    sub_2408CD2B8();
    sub_2408E6188();
    v20 = 0;
    v18 = 0u;
    v19 = 0u;
    sub_2408E5804();
    v12 = v16;
    sub_2408E5984();
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v12, a2);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2408CC0E0(_QWORD *a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v13[24];
  uint64_t v14;

  a2(0);
  sub_2404FA028(a3, a2, a4);
  result = sub_2408E5990();
  if (!v4)
  {
    v11 = result;
    v12 = v10;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2408E6260();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v13, v14);
    sub_2408CD2FC();
    sub_2408E61A0();
    sub_240363D58(v11, v12);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  return result;
}

uint64_t CodableMessage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _BYTE v7[24];
  uint64_t v8;

  result = sub_2408E5990();
  if (!v1)
  {
    v5 = result;
    v6 = v4;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_2408E6260();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    sub_2408CD2FC();
    sub_2408E61A0();
    sub_240363D58(v5, v6);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
  return result;
}

uint64_t sub_2408CC2BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408CBD80(a1, type metadata accessor for TranscriptProtoParticipantID, &qword_256FFF688, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID, a2);
}

uint64_t sub_2408CC2E8(_QWORD *a1)
{
  return sub_2408CC0E0(a1, type metadata accessor for TranscriptProtoParticipantID, &qword_256FFF688, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
}

uint64_t sub_2408CC314@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408CBD80(a1, type metadata accessor for TranscriptProtoActionOutcome, &qword_256FFF498, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome, a2);
}

uint64_t sub_2408CC340(_QWORD *a1)
{
  return sub_2408CC0E0(a1, type metadata accessor for TranscriptProtoActionOutcome, &qword_256FFF498, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
}

uint64_t sub_2408CC36C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2408CBD80(a1, type metadata accessor for TranscriptProtoEvent, (unint64_t *)&qword_256FFC9F0, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent, a2);
}

uint64_t sub_2408CC398(_QWORD *a1)
{
  return sub_2408CC0E0(a1, type metadata accessor for TranscriptProtoEvent, (unint64_t *)&qword_256FFC9F0, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
}

uint64_t _s23LighthouseDataProcessor15IERequestStatusO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v9;
  char v10;
  char v11;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v4 != 1)
      __asm { BR              X9 }
    if (v7 == 1)
    {
      if (v3 == v6 && v2 == v5)
        v9 = 1;
      else
        v9 = sub_2408E617C();
      sub_2403ADAA8(v6, v5, 1);
      sub_2403ADAA8(v3, v2, 1);
      sub_2403ADB34(v3, v2, 1);
      sub_2403ADB34(v6, v5, 1);
      return v9 & 1;
    }
    swift_bridgeObjectRetain();
  }
  else if (!*(_BYTE *)(a2 + 16))
  {
    sub_24040CE5C(*(_QWORD *)a1);
    v11 = v10;
    sub_2403ADB34(v3, v2, 0);
    sub_2403ADB34(v6, v5, 0);
    return v11 & 1;
  }
  sub_2403ADAA8(v6, v5, v7);
  sub_2403ADB34(v3, v2, v4);
  sub_2403ADB34(v6, v5, v7);
  v9 = 0;
  return v9 & 1;
}

uint64_t type metadata accessor for SessionView(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257015D48);
}

uint64_t type metadata accessor for SessionData(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257015DE0);
}

uint64_t sub_2408CC604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionSignature(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for RequestData(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257015E80);
}

uint64_t sub_2408CC65C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6)
  {
    sub_2403ADAA8(a2, a3, a4);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_2408CC6A0()
{
  unint64_t result;

  result = qword_257015930;
  if (!qword_257015930)
  {
    result = MEMORY[0x242684578](&unk_2409205FC, &type metadata for RequestSignature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015930);
  }
  return result;
}

unint64_t sub_2408CC6E4()
{
  unint64_t result;

  result = qword_257015938;
  if (!qword_257015938)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for IEClient, &type metadata for IEClient);
    atomic_store(result, (unint64_t *)&qword_257015938);
  }
  return result;
}

unint64_t sub_2408CC728()
{
  unint64_t result;

  result = qword_257015940;
  if (!qword_257015940)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for IERequestStatus, &type metadata for IERequestStatus);
    atomic_store(result, (unint64_t *)&qword_257015940);
  }
  return result;
}

unint64_t sub_2408CC76C()
{
  unint64_t result;

  result = qword_257015950;
  if (!qword_257015950)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ErrorComponent, &type metadata for ErrorComponent);
    atomic_store(result, (unint64_t *)&qword_257015950);
  }
  return result;
}

unint64_t sub_2408CC7B0()
{
  unint64_t result;

  result = qword_257015960;
  if (!qword_257015960)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for IEClient, &type metadata for IEClient);
    atomic_store(result, (unint64_t *)&qword_257015960);
  }
  return result;
}

unint64_t sub_2408CC7F4()
{
  unint64_t result;

  result = qword_257015968;
  if (!qword_257015968)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for IERequestStatus, &type metadata for IERequestStatus);
    atomic_store(result, (unint64_t *)&qword_257015968);
  }
  return result;
}

uint64_t sub_2408CC838(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FFA7D8);
    v8 = a2;
    result = MEMORY[0x242684578](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2408CC898()
{
  unint64_t result;

  result = qword_257015978;
  if (!qword_257015978)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ErrorComponent, &type metadata for ErrorComponent);
    atomic_store(result, (unint64_t *)&qword_257015978);
  }
  return result;
}

unint64_t sub_2408CC8DC()
{
  unint64_t result;

  result = qword_2570159B8;
  if (!qword_2570159B8)
  {
    result = MEMORY[0x242684578](&unk_2409205AC, &type metadata for IERequestStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570159B8);
  }
  return result;
}

unint64_t sub_2408CC920()
{
  unint64_t result;

  result = qword_2570159C0;
  if (!qword_2570159C0)
  {
    result = MEMORY[0x242684578](&unk_24092055C, &type metadata for IERequestStatus.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570159C0);
  }
  return result;
}

unint64_t sub_2408CC964()
{
  unint64_t result;

  result = qword_2570159C8;
  if (!qword_2570159C8)
  {
    result = MEMORY[0x242684578](&unk_24092050C, &type metadata for IERequestStatus.AbandonedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570159C8);
  }
  return result;
}

unint64_t sub_2408CC9A8()
{
  unint64_t result;

  result = qword_2570159D0;
  if (!qword_2570159D0)
  {
    result = MEMORY[0x242684578](&unk_2409204BC, &type metadata for IERequestStatus.PromptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570159D0);
  }
  return result;
}

unint64_t sub_2408CC9EC()
{
  unint64_t result;

  result = qword_2570159D8;
  if (!qword_2570159D8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for PromptType, &type metadata for PromptType);
    atomic_store(result, (unint64_t *)&qword_2570159D8);
  }
  return result;
}

unint64_t sub_2408CCA30()
{
  unint64_t result;

  result = qword_2570159E0;
  if (!qword_2570159E0)
  {
    result = MEMORY[0x242684578](&unk_24092046C, &type metadata for IERequestStatus.CanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570159E0);
  }
  return result;
}

unint64_t sub_2408CCA74()
{
  unint64_t result;

  result = qword_2570159E8;
  if (!qword_2570159E8)
  {
    result = MEMORY[0x242684578](&unk_24092041C, &type metadata for IERequestStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570159E8);
  }
  return result;
}

unint64_t sub_2408CCAB8()
{
  unint64_t result;

  result = qword_2570159F0;
  if (!qword_2570159F0)
  {
    result = MEMORY[0x242684578](&unk_2409203CC, &type metadata for IERequestStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570159F0);
  }
  return result;
}

unint64_t sub_2408CCAFC()
{
  unint64_t result;

  result = qword_257015A38;
  if (!qword_257015A38)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for PromptType, &type metadata for PromptType);
    atomic_store(result, (unint64_t *)&qword_257015A38);
  }
  return result;
}

unint64_t sub_2408CCB40()
{
  unint64_t result;

  result = qword_257015A48;
  if (!qword_257015A48)
  {
    result = MEMORY[0x242684578](&unk_24092037C, &type metadata for PromptType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015A48);
  }
  return result;
}

unint64_t sub_2408CCB84()
{
  unint64_t result;

  result = qword_257015A60;
  if (!qword_257015A60)
  {
    result = MEMORY[0x242684578](&unk_24092032C, &type metadata for SessionSignature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015A60);
  }
  return result;
}

unint64_t sub_2408CCBC8()
{
  unint64_t result;

  result = qword_257015A70;
  if (!qword_257015A70)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for SpanRespresentation, &type metadata for SpanRespresentation);
    atomic_store(result, (unint64_t *)&qword_257015A70);
  }
  return result;
}

uint64_t type metadata accessor for ParticipantInfo(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257016078);
}

unint64_t sub_2408CCC20()
{
  unint64_t result;

  result = qword_257015AA0;
  if (!qword_257015AA0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for SpanRespresentation, &type metadata for SpanRespresentation);
    atomic_store(result, (unint64_t *)&qword_257015AA0);
  }
  return result;
}

uint64_t sub_2408CCC64(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257015A78);
    v10 = sub_2404FA028(a2, type metadata accessor for ParticipantInfo, a3);
    result = MEMORY[0x242684578](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2408CCCE8()
{
  unint64_t result;

  result = qword_257015AC8;
  if (!qword_257015AC8)
  {
    result = MEMORY[0x242684578](&unk_2409202DC, &type metadata for AttributionTraits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015AC8);
  }
  return result;
}

unint64_t sub_2408CCD2C()
{
  unint64_t result;

  result = qword_257015AE0;
  if (!qword_257015AE0)
  {
    result = MEMORY[0x242684578](&unk_24092028C, &type metadata for ParticipantInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015AE0);
  }
  return result;
}

unint64_t sub_2408CCD70()
{
  unint64_t result;

  result = qword_257015AF8;
  if (!qword_257015AF8)
  {
    result = MEMORY[0x242684578](&unk_24092023C, &type metadata for SpanRespresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015AF8);
  }
  return result;
}

unint64_t sub_2408CCDB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257015B08;
  if (!qword_257015B08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257015B00);
    v2 = sub_2404FA028(&qword_257015A88, type metadata accessor for ParticipantInfo, (uint64_t)&protocol conformance descriptor for ParticipantInfo);
    v3[0] = MEMORY[0x24BEE4570];
    v3[1] = v2;
    result = MEMORY[0x242684578](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257015B08);
  }
  return result;
}

unint64_t sub_2408CCE38()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_257015B18;
  if (!qword_257015B18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257015B00);
    v2 = sub_2404FA028(&qword_257015AB0, type metadata accessor for ParticipantInfo, (uint64_t)&protocol conformance descriptor for ParticipantInfo);
    v3[0] = MEMORY[0x24BEE4598];
    v3[1] = v2;
    result = MEMORY[0x242684578](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_257015B18);
  }
  return result;
}

unint64_t sub_2408CCEBC()
{
  unint64_t result;

  result = qword_257015B48;
  if (!qword_257015B48)
  {
    result = MEMORY[0x242684578](&unk_2409201EC, &type metadata for TaskCompletionStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015B48);
  }
  return result;
}

unint64_t sub_2408CCF00()
{
  unint64_t result;

  result = qword_257015B50;
  if (!qword_257015B50)
  {
    result = MEMORY[0x242684578](&unk_24092019C, &type metadata for TaskCompletionStatus.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015B50);
  }
  return result;
}

unint64_t sub_2408CCF44()
{
  unint64_t result;

  result = qword_257015B58;
  if (!qword_257015B58)
  {
    result = MEMORY[0x242684578](&unk_24092014C, &type metadata for TaskCompletionStatus.CanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015B58);
  }
  return result;
}

unint64_t sub_2408CCF88()
{
  unint64_t result;

  result = qword_257015B60;
  if (!qword_257015B60)
  {
    result = MEMORY[0x242684578](&unk_2409200FC, &type metadata for TaskCompletionStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015B60);
  }
  return result;
}

unint64_t sub_2408CCFCC()
{
  unint64_t result;

  result = qword_257015B68;
  if (!qword_257015B68)
  {
    result = MEMORY[0x242684578](&unk_2409200AC, &type metadata for TaskCompletionStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015B68);
  }
  return result;
}

unint64_t sub_2408CD010()
{
  unint64_t result;

  result = qword_257015BB8;
  if (!qword_257015BB8)
  {
    result = MEMORY[0x242684578](&unk_24092005C, &type metadata for UserInteractionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015BB8);
  }
  return result;
}

unint64_t sub_2408CD054()
{
  unint64_t result;

  result = qword_257015BC0;
  if (!qword_257015BC0)
  {
    result = MEMORY[0x242684578](&unk_24092000C, &type metadata for UserInteractionType.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015BC0);
  }
  return result;
}

unint64_t sub_2408CD098()
{
  unint64_t result;

  result = qword_257015BC8;
  if (!qword_257015BC8)
  {
    result = MEMORY[0x242684578](&unk_24091FFBC, &type metadata for UserInteractionType.DisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015BC8);
  }
  return result;
}

unint64_t sub_2408CD0DC()
{
  unint64_t result;

  result = qword_257015BD0;
  if (!qword_257015BD0)
  {
    result = MEMORY[0x242684578](&unk_24091FF6C, &type metadata for UserInteractionType.PromptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015BD0);
  }
  return result;
}

unint64_t sub_2408CD120()
{
  unint64_t result;

  result = qword_257015C10;
  if (!qword_257015C10)
  {
    result = MEMORY[0x242684578](&unk_24091FF1C, &type metadata for SageClient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015C10);
  }
  return result;
}

unint64_t sub_2408CD164()
{
  unint64_t result;

  result = qword_257015C18;
  if (!qword_257015C18)
  {
    result = MEMORY[0x242684578](&unk_24091FECC, &type metadata for SageClient.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015C18);
  }
  return result;
}

unint64_t sub_2408CD1A8()
{
  unint64_t result;

  result = qword_257015C20;
  if (!qword_257015C20)
  {
    result = MEMORY[0x242684578](&unk_24091FE7C, &type metadata for SageClient.Siri100CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015C20);
  }
  return result;
}

unint64_t sub_2408CD1EC()
{
  unint64_t result;

  result = qword_257015C58;
  if (!qword_257015C58)
  {
    result = MEMORY[0x242684578](&unk_24091FE2C, &type metadata for IEClient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015C58);
  }
  return result;
}

unint64_t sub_2408CD230()
{
  unint64_t result;

  result = qword_257015C60;
  if (!qword_257015C60)
  {
    result = MEMORY[0x242684578](&unk_24091FDDC, &type metadata for IEClient.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015C60);
  }
  return result;
}

unint64_t sub_2408CD274()
{
  unint64_t result;

  result = qword_257015C68;
  if (!qword_257015C68)
  {
    result = MEMORY[0x242684578](&unk_24091FD8C, &type metadata for IEClient.SiriCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257015C68);
  }
  return result;
}

unint64_t sub_2408CD2B8()
{
  unint64_t result;

  result = qword_257015C88;
  if (!qword_257015C88)
  {
    result = MEMORY[0x242684578](MEMORY[0x24BDCDE30], MEMORY[0x24BDCDDF0]);
    atomic_store(result, (unint64_t *)&qword_257015C88);
  }
  return result;
}

unint64_t sub_2408CD2FC()
{
  unint64_t result;

  result = qword_257015C90;
  if (!qword_257015C90)
  {
    result = MEMORY[0x242684578](MEMORY[0x24BDCDE00], MEMORY[0x24BDCDDF0]);
    atomic_store(result, (unint64_t *)&qword_257015C90);
  }
  return result;
}

unint64_t sub_2408CD344()
{
  unint64_t result;

  result = qword_257015C98;
  if (!qword_257015C98)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TaskCompletionStatus, &type metadata for TaskCompletionStatus);
    atomic_store(result, (unint64_t *)&qword_257015C98);
  }
  return result;
}

unint64_t sub_2408CD38C()
{
  unint64_t result;

  result = qword_257015CA0;
  if (!qword_257015CA0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for UserInteractionType, &type metadata for UserInteractionType);
    atomic_store(result, (unint64_t *)&qword_257015CA0);
  }
  return result;
}

unint64_t sub_2408CD3D4()
{
  unint64_t result;

  result = qword_257015CA8;
  if (!qword_257015CA8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for SageClient, &type metadata for SageClient);
    atomic_store(result, (unint64_t *)&qword_257015CA8);
  }
  return result;
}

unint64_t sub_2408CD41C()
{
  unint64_t result;

  result = qword_257015CB0;
  if (!qword_257015CB0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for IEClient, &type metadata for IEClient);
    atomic_store(result, (unint64_t *)&qword_257015CB0);
  }
  return result;
}

unint64_t sub_2408CD464()
{
  unint64_t result;

  result = qword_257015CB8;
  if (!qword_257015CB8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ErrorComponent, &type metadata for ErrorComponent);
    atomic_store(result, (unint64_t *)&qword_257015CB8);
  }
  return result;
}

uint64_t sub_2408CD4A8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_2404FA028(&qword_256FFF688, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  a1[2] = sub_2404FA028(&qword_257015CC0, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  result = sub_2404FA028(&qword_257015CC8, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  a1[3] = result;
  return result;
}

uint64_t sub_2408CD520(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_2404FA028(&qword_256FFF498, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
  a1[2] = sub_2404FA028(&qword_257015CD0, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
  result = sub_2404FA028(&qword_257015CD8, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
  a1[3] = result;
  return result;
}

uint64_t sub_2408CD598(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_2404FA028((unint64_t *)&qword_256FFC9F0, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
  a1[2] = sub_2404FA028(&qword_257015CE0, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
  result = sub_2404FA028(&qword_257015CE8, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
  a1[3] = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SessionView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408CD61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2408E5624();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408CD6A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2408E5624();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SessionData(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v50;
  char *__dst;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2408E5624();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v55 = a2;
    v10 = (char *)a2 + v8;
    *v9 = *((_BYTE *)a2 + v8);
    v9[1] = *((_BYTE *)a2 + v8 + 1);
    v11 = *(_QWORD *)((char *)a2 + v8 + 16);
    *((_QWORD *)v9 + 1) = *(_QWORD *)((char *)a2 + v8 + 8);
    *((_QWORD *)v9 + 2) = v11;
    v12 = (int *)type metadata accessor for SessionSignature(0);
    v13 = v12[7];
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = type metadata accessor for AttributionTraits(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v19 = v16;
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v19))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v21 = v55;
    }
    else
    {
      v52 = v17;
      v23 = v19;
      v24 = *((_QWORD *)v15 + 1);
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_QWORD *)v14 + 1) = v24;
      v25 = *((_QWORD *)v15 + 3);
      *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
      *((_QWORD *)v14 + 3) = v25;
      v53 = v23;
      v54 = v14;
      v26 = *(int *)(v23 + 24);
      __dst = &v14[v26];
      v27 = &v15[v26];
      v28 = sub_2408E566C();
      v50 = *(_QWORD *)(v28 - 8);
      v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
      v30 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29(v27, 1, v30))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
        memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(__dst, v27, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v30);
      }
      v21 = v55;
      v32 = *(int *)(v53 + 28);
      v33 = (_QWORD *)((char *)v54 + v32);
      v34 = &v15[v32];
      v35 = *((_QWORD *)v34 + 1);
      *v33 = *(_QWORD *)v34;
      v33[1] = v35;
      v36 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56);
      swift_bridgeObjectRetain();
      v36(v54, 0, 1, v53);
    }
    *(_QWORD *)&v9[v12[8]] = *(_QWORD *)&v10[v12[8]];
    *(_QWORD *)&v9[v12[9]] = *(_QWORD *)&v10[v12[9]];
    *(_QWORD *)&v9[v12[10]] = *(_QWORD *)&v10[v12[10]];
    *(_QWORD *)&v9[v12[11]] = *(_QWORD *)&v10[v12[11]];
    v37 = v12[12];
    v38 = &v9[v37];
    v39 = &v10[v37];
    v40 = *((_QWORD *)v39 + 1);
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *((_QWORD *)v38 + 1) = v40;
    v41 = a3[6];
    v42 = a3[7];
    v43 = (_QWORD *)((char *)a1 + v41);
    v44 = (_QWORD *)((char *)v21 + v41);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = (_QWORD *)((char *)a1 + v42);
    v47 = (_QWORD *)((char *)v21 + v42);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)v21 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SessionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for SessionSignature(0) + 28);
  v7 = type metadata accessor for AttributionTraits(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v6 + *(int *)(v7 + 24);
    v9 = sub_2408E566C();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(_QWORD *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  char *__dst;
  uint64_t v47;
  int *v48;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v47 = a2;
  v48 = a3;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_BYTE *)(v8 + 1) = *(_BYTE *)(a2 + v7 + 1);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  v11 = (int *)type metadata accessor for SessionSignature(0);
  v12 = v11[7];
  v13 = (_QWORD *)(v8 + v12);
  v14 = (_QWORD *)(v9 + v12);
  v15 = type metadata accessor for AttributionTraits(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v45 = v16;
    v19 = v14[1];
    *v13 = *v14;
    v13[1] = v19;
    v20 = v14[3];
    v13[2] = v14[2];
    v13[3] = v20;
    v21 = *(int *)(v15 + 24);
    __dst = (char *)v13 + v21;
    v43 = (char *)v14 + v21;
    v22 = sub_2408E566C();
    v42 = *(_QWORD *)(v22 - 8);
    v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v44(v43, 1, v22))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
      memcpy(__dst, v43, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(__dst, v43, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(__dst, 0, 1, v22);
    }
    v24 = *(int *)(v15 + 28);
    v25 = (_QWORD *)((char *)v13 + v24);
    v26 = (_QWORD *)((char *)v14 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56);
    swift_bridgeObjectRetain();
    v28(v13, 0, 1, v15);
  }
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  *(_QWORD *)(v8 + v11[9]) = *(_QWORD *)(v9 + v11[9]);
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  *(_QWORD *)(v8 + v11[11]) = *(_QWORD *)(v9 + v11[11]);
  v29 = v11[12];
  v30 = (_QWORD *)(v8 + v29);
  v31 = (_QWORD *)(v9 + v29);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = v48[6];
  v34 = v48[7];
  v35 = (_QWORD *)(a1 + v33);
  v36 = (_QWORD *)(v47 + v33);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = (_QWORD *)(a1 + v34);
  v39 = (_QWORD *)(v47 + v34);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  *(_QWORD *)(a1 + v48[8]) = *(_QWORD *)(v47 + v48[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  size_t v28;
  void *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  void (*v33)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  void *v51;
  char *__dst;
  char *__dsta;
  int *v54;
  uint64_t v55;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v54 = a3;
  v55 = a2;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)v9;
  *(_BYTE *)(v8 + 1) = *(_BYTE *)(v9 + 1);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = (int *)type metadata accessor for SessionSignature(0);
  v11 = v10[7];
  v12 = (_QWORD *)(v8 + v11);
  v13 = (_QWORD *)(v9 + v11);
  v14 = type metadata accessor for AttributionTraits(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_240388AE4((uint64_t)v12, type metadata accessor for AttributionTraits);
      goto LABEL_7;
    }
    *v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v12[2] = v13[2];
    v12[3] = v13[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v23 = *(int *)(v14 + 24);
    v24 = (char *)v12 + v23;
    __dsta = (char *)v13 + v23;
    v25 = sub_2408E566C();
    v50 = *(_QWORD *)(v25 - 8);
    v51 = v24;
    v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
    LODWORD(v24) = v26(v24, 1, v25);
    v27 = v26(__dsta, 1, v25);
    if ((_DWORD)v24)
    {
      if (!v27)
      {
        (*(void (**)(void *, char *, uint64_t))(v50 + 16))(v51, __dsta, v25);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v25);
        goto LABEL_18;
      }
      v28 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660) - 8) + 64);
      v29 = v51;
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(void *, char *, uint64_t))(v50 + 24))(v51, __dsta, v25);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v50 + 8))(v51, v25);
      v28 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660) - 8) + 64);
      v29 = v51;
    }
    memcpy(v29, __dsta, v28);
LABEL_18:
    v34 = *(int *)(v14 + 28);
    v35 = (_QWORD *)((char *)v12 + v34);
    v36 = (_QWORD *)((char *)v13 + v34);
    *v35 = *v36;
    v35[1] = v36[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v18)
  {
LABEL_7:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_19;
  }
  *v12 = *v13;
  v12[1] = v13[1];
  v12[2] = v13[2];
  v12[3] = v13[3];
  v19 = *(int *)(v14 + 24);
  __dst = (char *)v12 + v19;
  v49 = (char *)v13 + v19;
  v20 = sub_2408E566C();
  v47 = *(_QWORD *)(v20 - 8);
  v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v48(v49, 1, v20))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    memcpy(__dst, v49, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, v49, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v20);
  }
  v30 = *(int *)(v14 + 28);
  v31 = (_QWORD *)((char *)v12 + v30);
  v32 = (_QWORD *)((char *)v13 + v30);
  *v31 = *v32;
  v31[1] = v32[1];
  v33 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56);
  swift_bridgeObjectRetain();
  v33(v12, 0, 1, v14);
LABEL_19:
  *(_QWORD *)(v8 + v10[8]) = *(_QWORD *)(v9 + v10[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v10[9]) = *(_QWORD *)(v9 + v10[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v10[10]) = *(_QWORD *)(v9 + v10[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v10[11]) = *(_QWORD *)(v9 + v10[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v10[12];
  v38 = (_QWORD *)(v8 + v37);
  v39 = (_QWORD *)(v9 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = v54[6];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(v55 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = v54[7];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(v55 + v43);
  *v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v54[8]) = *(_QWORD *)(v55 + v54[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  char *__dst;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_BYTE *)(v8 + 1) = *(_BYTE *)(a2 + v7 + 1);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(a2 + v7 + 8);
  v10 = (int *)type metadata accessor for SessionSignature(0);
  v11 = v10[7];
  v12 = (_OWORD *)(v8 + v11);
  v13 = (_OWORD *)(v9 + v11);
  v14 = type metadata accessor for AttributionTraits(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v25 = a3;
    v17 = v13[1];
    *v12 = *v13;
    v12[1] = v17;
    v18 = *(int *)(v14 + 24);
    v26 = v15;
    __dst = (char *)v12 + v18;
    v19 = (char *)v13 + v18;
    v20 = sub_2408E566C();
    v24 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v19, 1, v20))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(__dst, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v20);
    }
    *(_OWORD *)((char *)v12 + *(int *)(v14 + 28)) = *(_OWORD *)((char *)v13 + *(int *)(v14 + 28));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v12, 0, 1, v14);
    a3 = v25;
  }
  *(_QWORD *)(v8 + v10[8]) = *(_QWORD *)(v9 + v10[8]);
  *(_QWORD *)(v8 + v10[9]) = *(_QWORD *)(v9 + v10[9]);
  *(_QWORD *)(v8 + v10[10]) = *(_QWORD *)(v9 + v10[10]);
  *(_QWORD *)(v8 + v10[11]) = *(_QWORD *)(v9 + v10[11]);
  *(_OWORD *)(v8 + v10[12]) = *(_OWORD *)(v9 + v10[12]);
  v22 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for SessionData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, uint64_t);
  int v18;
  int v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  size_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char *__src;
  char *__srca;
  uint64_t v62;
  int *v63;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v62 = a2;
  v63 = a3;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_BYTE *)v8 = *(_BYTE *)(a2 + v7);
  *(_BYTE *)(v8 + 1) = *(_BYTE *)(a2 + v7 + 1);
  v10 = *(_QWORD *)(a2 + v7 + 16);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)(v8 + 16) = v10;
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for SessionSignature(0);
  v12 = v11[7];
  v13 = (_QWORD *)(v8 + v12);
  v14 = (_QWORD *)(v9 + v12);
  v15 = type metadata accessor for AttributionTraits(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_240388AE4((uint64_t)v13, type metadata accessor for AttributionTraits);
      goto LABEL_7;
    }
    v26 = v14[1];
    *v13 = *v14;
    v13[1] = v26;
    swift_bridgeObjectRelease();
    v27 = v14[3];
    v13[2] = v14[2];
    v13[3] = v27;
    swift_bridgeObjectRelease();
    v28 = *(int *)(v15 + 24);
    v29 = (char *)v13 + v28;
    __srca = (char *)v14 + v28;
    v30 = sub_2408E566C();
    v58 = *(_QWORD *)(v30 - 8);
    v59 = v29;
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
    LODWORD(v29) = v31(v29, 1, v30);
    v32 = v31(__srca, 1, v30);
    if ((_DWORD)v29)
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v58 + 32))(v59, __srca, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v59, 0, 1, v30);
        goto LABEL_20;
      }
      v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660) - 8) + 64);
      v34 = v59;
    }
    else
    {
      if (!v32)
      {
        (*(void (**)(void *, char *, uint64_t))(v58 + 40))(v59, __srca, v30);
        goto LABEL_20;
      }
      (*(void (**)(void *, uint64_t))(v58 + 8))(v59, v30);
      v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660) - 8) + 64);
      v34 = v59;
    }
    memcpy(v34, __srca, v33);
LABEL_20:
    v35 = v62;
    v52 = *(int *)(v15 + 28);
    v53 = (_QWORD *)((char *)v13 + v52);
    v54 = (_QWORD *)((char *)v14 + v52);
    v56 = *v54;
    v55 = v54[1];
    *v53 = v56;
    v53[1] = v55;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (!v19)
  {
    v20 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v13 = *(_OWORD *)v14;
    *((_OWORD *)v13 + 1) = v20;
    v21 = *(int *)(v15 + 24);
    __src = (char *)v13 + v21;
    v22 = (char *)v14 + v21;
    v23 = sub_2408E566C();
    v57 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v22, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
      memcpy(__src, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(__src, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(__src, 0, 1, v23);
    }
    *(_OWORD *)((char *)v13 + *(int *)(v15 + 28)) = *(_OWORD *)((char *)v14 + *(int *)(v15 + 28));
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    goto LABEL_13;
  }
LABEL_7:
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
  memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_13:
  v35 = v62;
LABEL_14:
  *(_QWORD *)(v8 + v11[8]) = *(_QWORD *)(v9 + v11[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v11[9]) = *(_QWORD *)(v9 + v11[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v11[10]) = *(_QWORD *)(v9 + v11[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + v11[11]) = *(_QWORD *)(v9 + v11[11]);
  swift_bridgeObjectRelease();
  v36 = v11[12];
  v37 = (_QWORD *)(v8 + v36);
  v38 = (uint64_t *)(v9 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = v63[6];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (uint64_t *)(v35 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v46 = v63[7];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (uint64_t *)(v35 + v46);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v63[8]) = *(_QWORD *)(v35 + v63[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408CE8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_2408E5624();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for SessionSignature(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408CE9A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_2408E5624();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for SessionSignature(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2408CEA4C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2408E5624();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for SessionSignature(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RequestData(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v25 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2408E5624();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v13 = a3[7];
    v14 = a3[8];
    v15 = (uint64_t *)((char *)a1 + v13);
    v16 = (uint64_t *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (char *)a1 + v14;
    v19 = (char *)a2 + v14;
    v20 = *(uint64_t *)((char *)a2 + v14 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      *v18 = *v19;
      v21 = *((_QWORD *)v19 + 1);
      v22 = *((_QWORD *)v19 + 2);
      v23 = v19[24];
      sub_2403ADAA8(v21, v22, v23);
      *((_QWORD *)v18 + 1) = v21;
      *((_QWORD *)v18 + 2) = v22;
      v18[24] = v23;
      v24 = *((_QWORD *)v19 + 5);
      *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
      *((_QWORD *)v18 + 5) = v24;
      *((_QWORD *)v18 + 6) = *((_QWORD *)v19 + 6);
      *((_DWORD *)v18 + 14) = *((_DWORD *)v19 + 14);
      *((_WORD *)v18 + 30) = *((_WORD *)v19 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v26;
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *(_OWORD *)(v18 + 46) = *(_OWORD *)(v19 + 46);
    }
  }
  return a1;
}

uint64_t destroy for RequestData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 32);
  if (*(_QWORD *)(v6 + 40))
  {
    sub_2403ADB34(*(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_BYTE *)(v6 + 24));
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for RequestData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __int128 v24;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[7];
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v12);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = a1 + v13;
  v18 = a2 + v13;
  v19 = *(_QWORD *)(a2 + v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    *(_BYTE *)v17 = *(_BYTE *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_BYTE *)(v18 + 24);
    sub_2403ADAA8(v20, v21, v22);
    *(_QWORD *)(v17 + 8) = v20;
    *(_QWORD *)(v17 + 16) = v21;
    *(_BYTE *)(v17 + 24) = v22;
    v23 = *(_QWORD *)(v18 + 40);
    *(_QWORD *)(v17 + 32) = *(_QWORD *)(v18 + 32);
    *(_QWORD *)(v17 + 40) = v23;
    *(_QWORD *)(v17 + 48) = *(_QWORD *)(v18 + 48);
    *(_DWORD *)(v17 + 56) = *(_DWORD *)(v18 + 56);
    *(_WORD *)(v17 + 60) = *(_WORD *)(v18 + 60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v24 = *(_OWORD *)(v18 + 16);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *(_OWORD *)(v17 + 16) = v24;
    *(_OWORD *)(v17 + 32) = *(_OWORD *)(v18 + 32);
    *(_OWORD *)(v17 + 46) = *(_OWORD *)(v18 + 46);
  }
  return a1;
}

uint64_t assignWithCopy for RequestData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = (__int128 *)(a2 + v13);
  v16 = *(_QWORD *)(a1 + v13 + 40);
  v17 = *(_QWORD *)(a2 + v13 + 40);
  if (v16)
  {
    if (v17)
    {
      *(_BYTE *)v14 = *(_BYTE *)v15;
      v18 = *((_QWORD *)v15 + 1);
      v19 = *((_QWORD *)v15 + 2);
      v20 = *((_BYTE *)v15 + 24);
      sub_2403ADAA8(v18, v19, v20);
      v21 = *(_QWORD *)(v14 + 8);
      v22 = *(_QWORD *)(v14 + 16);
      *(_QWORD *)(v14 + 8) = v18;
      *(_QWORD *)(v14 + 16) = v19;
      v23 = *(_BYTE *)(v14 + 24);
      *(_BYTE *)(v14 + 24) = v20;
      sub_2403ADB34(v21, v22, v23);
      *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
      *(_QWORD *)(v14 + 40) = *((_QWORD *)v15 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v14 + 48) = *((_QWORD *)v15 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *((_DWORD *)v15 + 14);
      *(_BYTE *)(v14 + 60) = *((_BYTE *)v15 + 60);
      *(_DWORD *)(v14 + 56) = v24;
      *(_BYTE *)(v14 + 61) = *((_BYTE *)v15 + 61);
    }
    else
    {
      sub_2408CF044(v14);
      v30 = v15[1];
      v29 = v15[2];
      v31 = *v15;
      *(_OWORD *)(v14 + 46) = *(__int128 *)((char *)v15 + 46);
      *(_OWORD *)(v14 + 16) = v30;
      *(_OWORD *)(v14 + 32) = v29;
      *(_OWORD *)v14 = v31;
    }
  }
  else if (v17)
  {
    *(_BYTE *)v14 = *(_BYTE *)v15;
    v25 = *((_QWORD *)v15 + 1);
    v26 = *((_QWORD *)v15 + 2);
    v27 = *((_BYTE *)v15 + 24);
    sub_2403ADAA8(v25, v26, v27);
    *(_QWORD *)(v14 + 8) = v25;
    *(_QWORD *)(v14 + 16) = v26;
    *(_BYTE *)(v14 + 24) = v27;
    *(_QWORD *)(v14 + 32) = *((_QWORD *)v15 + 4);
    *(_QWORD *)(v14 + 40) = *((_QWORD *)v15 + 5);
    *(_QWORD *)(v14 + 48) = *((_QWORD *)v15 + 6);
    v28 = *((_DWORD *)v15 + 14);
    *(_BYTE *)(v14 + 60) = *((_BYTE *)v15 + 60);
    *(_DWORD *)(v14 + 56) = v28;
    *(_BYTE *)(v14 + 61) = *((_BYTE *)v15 + 61);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v32 = *v15;
    v33 = v15[1];
    v34 = v15[2];
    *(_OWORD *)(v14 + 46) = *(__int128 *)((char *)v15 + 46);
    *(_OWORD *)(v14 + 16) = v33;
    *(_OWORD *)(v14 + 32) = v34;
    *(_OWORD *)v14 = v32;
  }
  return a1;
}

uint64_t sub_2408CF044(uint64_t a1)
{
  destroy for RequestSignature(a1);
  return a1;
}

uint64_t initializeWithTake for RequestData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (__int128 *)(a2 + v8);
  *(_OWORD *)((char *)v9 + 46) = *(__int128 *)((char *)v10 + 46);
  v11 = v10[2];
  v12 = *v10;
  v9[1] = v10[1];
  v9[2] = v11;
  *v9 = v12;
  return a1;
}

uint64_t assignWithTake for RequestData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  __int128 v23;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  if (!*(_QWORD *)(a1 + v15 + 40))
    goto LABEL_5;
  if (!*(_QWORD *)(v17 + 40))
  {
    sub_2408CF044(v16);
LABEL_5:
    v23 = *(_OWORD *)(v17 + 16);
    *(_OWORD *)v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v23;
    *(_OWORD *)(v16 + 32) = *(_OWORD *)(v17 + 32);
    *(_OWORD *)(v16 + 46) = *(_OWORD *)(v17 + 46);
    return a1;
  }
  *(_BYTE *)v16 = *(_BYTE *)v17;
  v18 = *(_BYTE *)(v17 + 24);
  v19 = *(_QWORD *)(v16 + 8);
  v20 = *(_QWORD *)(v16 + 16);
  *(_OWORD *)(v16 + 8) = *(_OWORD *)(v17 + 8);
  v21 = *(_BYTE *)(v16 + 24);
  *(_BYTE *)(v16 + 24) = v18;
  sub_2403ADB34(v19, v20, v21);
  v22 = *(_QWORD *)(v17 + 40);
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  *(_QWORD *)(v16 + 40) = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v16 + 48) = *(_QWORD *)(v17 + 48);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v16 + 56) = *(_DWORD *)(v17 + 56);
  *(_WORD *)(v16 + 60) = *(_WORD *)(v17 + 60);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408CF254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2408E5624();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408CF2E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2408E5624();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2408CF35C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E5624();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for RequestSignature(uint64_t a1)
{
  sub_2403ADB34(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RequestSignature(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2403ADAA8(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RequestSignature(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_2403ADAA8(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v9 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_2403ADB34(v7, v8, v9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(_DWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 60) = *(_BYTE *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 61) = *(_BYTE *)(a2 + 61);
  return a1;
}

__n128 __swift_memcpy62_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 46) = *(_OWORD *)(a2 + 46);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RequestSignature(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_2403ADB34(v5, v6, v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestSignature(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 62))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RequestSignature(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 60) = 0;
    *(_DWORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 62) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 62) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RequestSignature()
{
  return &type metadata for RequestSignature;
}

uint64_t destroy for IERequestStatus(uint64_t a1)
{
  return sub_2403ADB34(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s23LighthouseDataProcessor15IERequestStatusOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2403ADAA8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for IERequestStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2403ADAA8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2403ADB34(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for IERequestStatus(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2403ADB34(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for IERequestStatus(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IERequestStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2408CF824(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2408CF83C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IERequestStatus()
{
  return &type metadata for IERequestStatus;
}

uint64_t getEnumTagSinglePayload for PromptType(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PromptType(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptType()
{
  return &type metadata for PromptType;
}

_QWORD *initializeBufferWithCopyOfBuffer for SessionSignature(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v34;
  char *__dst;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_BYTE *)(a1 + 1) = *((_BYTE *)a2 + 1);
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    v8 = a3[7];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for AttributionTraits(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v37 = v12;
      v16 = v10[1];
      *v9 = *v10;
      v9[1] = v16;
      v17 = v10[3];
      v9[2] = v10[2];
      v9[3] = v17;
      v18 = *(int *)(v11 + 24);
      __dst = (char *)v9 + v18;
      v19 = (char *)v10 + v18;
      v20 = sub_2408E566C();
      v34 = *(_QWORD *)(v20 - 8);
      v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v36(v19, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
        memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dst, v19, v20);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v20);
      }
      v22 = *(int *)(v11 + 28);
      v23 = (_QWORD *)((char *)v9 + v22);
      v24 = (_QWORD *)((char *)v10 + v22);
      v25 = v24[1];
      *v23 = *v24;
      v23[1] = v25;
      v26 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56);
      swift_bridgeObjectRetain();
      v26(v9, 0, 1, v11);
    }
    v27 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(_QWORD *)((char *)v4 + v27) = *(uint64_t *)((char *)a2 + v27);
    v28 = a3[11];
    *(_QWORD *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(_QWORD *)((char *)v4 + v28) = *(uint64_t *)((char *)a2 + v28);
    v29 = a3[12];
    v30 = (_QWORD *)((char *)v4 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SessionSignature(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for AttributionTraits(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_2408E566C();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionSignature(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v35;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for AttributionTraits(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v9[1];
    *v8 = *v9;
    v8[1] = v14;
    v15 = v9[3];
    v8[2] = v9[2];
    v8[3] = v15;
    v16 = *(int *)(v10 + 24);
    __dst = (char *)v8 + v16;
    v35 = v11;
    v17 = (char *)v9 + v16;
    v18 = sub_2408E566C();
    v32 = *(_QWORD *)(v18 - 8);
    v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33(v17, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
      memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v18);
    }
    v20 = *(int *)(v10 + 28);
    v21 = (_QWORD *)((char *)v8 + v20);
    v22 = (_QWORD *)((char *)v9 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56);
    swift_bridgeObjectRetain();
    v24(v8, 0, 1, v10);
  }
  v25 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v25) = *(_QWORD *)(a2 + v25);
  v26 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  v27 = a3[12];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionSignature(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  size_t v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  void (*v29)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unsigned int (*__src)(char *, uint64_t, uint64_t);
  char *__dst;
  void *__dsta;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for AttributionTraits(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for AttributionTraits);
      goto LABEL_7;
    }
    *v7 = *v8;
    v7[1] = v8[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7[2] = v8[2];
    v7[3] = v8[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18 = *(int *)(v9 + 24);
    v19 = (char *)v7 + v18;
    v20 = (char *)v8 + v18;
    v21 = sub_2408E566C();
    v39 = *(_QWORD *)(v21 - 8);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
    __dsta = v19;
    LODWORD(v19) = v22(v19, 1, v21);
    v23 = v22(v20, 1, v21);
    if ((_DWORD)v19)
    {
      if (!v23)
      {
        (*(void (**)(void *, char *, uint64_t))(v39 + 16))(__dsta, v20, v21);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dsta, 0, 1, v21);
        goto LABEL_18;
      }
      v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660) - 8) + 64);
      v25 = __dsta;
    }
    else
    {
      if (!v23)
      {
        (*(void (**)(void *, char *, uint64_t))(v39 + 24))(__dsta, v20, v21);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v39 + 8))(__dsta, v21);
      v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660) - 8) + 64);
      v25 = __dsta;
    }
    memcpy(v25, v20, v24);
LABEL_18:
    v30 = *(int *)(v9 + 28);
    v31 = (_QWORD *)((char *)v7 + v30);
    v32 = (_QWORD *)((char *)v8 + v30);
    *v31 = *v32;
    v31[1] = v32[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_19;
  }
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v14 = *(int *)(v9 + 24);
  __dst = (char *)v7 + v14;
  v38 = (char *)v8 + v14;
  v15 = sub_2408E566C();
  v37 = *(_QWORD *)(v15 - 8);
  __src = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__src(v38, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v38, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v15);
  }
  v26 = *(int *)(v9 + 28);
  v27 = (_QWORD *)((char *)v7 + v26);
  v28 = (_QWORD *)((char *)v8 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  v29 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56);
  swift_bridgeObjectRetain();
  v29(v7, 0, 1, v9);
LABEL_19:
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = a3[12];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SessionSignature(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *__dst;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[7];
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = type metadata accessor for AttributionTraits(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    v13 = *(int *)(v9 + 24);
    __dst = (char *)v7 + v13;
    v14 = (char *)v8 + v13;
    v15 = sub_2408E566C();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
      memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(__dst, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    *(_OWORD *)((char *)v7 + *(int *)(v9 + 28)) = *(_OWORD *)((char *)v8 + *(int *)(v9 + 28));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v18 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  v19 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v19) = *(_QWORD *)(a2 + v19);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for SessionSignature(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char *__dst;
  void *__dsta;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[7];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for AttributionTraits(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_240388AE4((uint64_t)v8, type metadata accessor for AttributionTraits);
      goto LABEL_7;
    }
    v22 = v9[1];
    *v8 = *v9;
    v8[1] = v22;
    swift_bridgeObjectRelease();
    v23 = v9[3];
    v8[2] = v9[2];
    v8[3] = v23;
    swift_bridgeObjectRelease();
    v24 = *(int *)(v10 + 24);
    v25 = (char *)v8 + v24;
    v26 = (char *)v9 + v24;
    v27 = sub_2408E566C();
    v43 = *(_QWORD *)(v27 - 8);
    v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
    __dsta = v25;
    LODWORD(v25) = v28(v25, 1, v27);
    v29 = v28(v26, 1, v27);
    if ((_DWORD)v25)
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v43 + 32))(__dsta, v26, v27);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dsta, 0, 1, v27);
        goto LABEL_18;
      }
      v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660) - 8) + 64);
      v31 = __dsta;
    }
    else
    {
      if (!v29)
      {
        (*(void (**)(void *, char *, uint64_t))(v43 + 40))(__dsta, v26, v27);
        goto LABEL_18;
      }
      (*(void (**)(void *, uint64_t))(v43 + 8))(__dsta, v27);
      v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660) - 8) + 64);
      v31 = __dsta;
    }
    memcpy(v31, v26, v30);
LABEL_18:
    v32 = *(int *)(v10 + 28);
    v33 = (_QWORD *)((char *)v8 + v32);
    v34 = (_QWORD *)((char *)v9 + v32);
    v36 = *v34;
    v35 = v34[1];
    *v33 = v36;
    v33[1] = v35;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (v14)
  {
LABEL_7:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  v15 = *((_OWORD *)v9 + 1);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v15;
  v16 = *(int *)(v10 + 24);
  __dst = (char *)v8 + v16;
  v17 = (char *)v9 + v16;
  v18 = sub_2408E566C();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
  }
  *(_OWORD *)((char *)v8 + *(int *)(v10 + 28)) = *(_OWORD *)((char *)v9 + *(int *)(v10 + 28));
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_19:
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v37 = a3[12];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (uint64_t *)(a2 + v37);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionSignature()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408D0780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SessionSignature()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408D080C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570014F8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_2408D0884()
{
  unint64_t v0;

  sub_2403C8BE4(319, qword_257015F30, (void (*)(uint64_t))type metadata accessor for AttributionTraits);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for AttributionTraits(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2408E566C();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = *(int *)(a3 + 28);
    v18 = (uint64_t *)((char *)v4 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for AttributionTraits(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2408E566C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AttributionTraits(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2408E566C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AttributionTraits(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2408E566C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for AttributionTraits(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2408E566C();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for AttributionTraits(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2408E566C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = *(int *)(a3 + 28);
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AttributionTraits()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408D0F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for AttributionTraits()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408D1034(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_2408D10AC()
{
  unint64_t v0;

  sub_2403C8BE4(319, qword_257015FE8, (void (*)(uint64_t))MEMORY[0x24BDCEA50]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *initializeBufferWithCopyOfBuffer for ParticipantInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2408E5624();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for ParticipantInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ParticipantInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2408E5624();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for ParticipantInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2408E5624();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ParticipantInfo(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2408E5624();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ParticipantInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2408E5624();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParticipantInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408D13D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_2408E5624();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ParticipantInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408D1468(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_2408E5624();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2408D14DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E5624();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SpanRespresentation()
{
  return &type metadata for SpanRespresentation;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus()
{
  return &type metadata for TaskCompletionStatus;
}

ValueMetadata *type metadata accessor for UserInteractionType()
{
  return &type metadata for UserInteractionType;
}

ValueMetadata *type metadata accessor for SageClient()
{
  return &type metadata for SageClient;
}

ValueMetadata *type metadata accessor for IEClient()
{
  return &type metadata for IEClient;
}

ValueMetadata *type metadata accessor for ErrorComponent()
{
  return &type metadata for ErrorComponent;
}

ValueMetadata *type metadata accessor for IEClient.CodingKeys()
{
  return &type metadata for IEClient.CodingKeys;
}

ValueMetadata *type metadata accessor for IEClient.SiriCodingKeys()
{
  return &type metadata for IEClient.SiriCodingKeys;
}

ValueMetadata *type metadata accessor for IEClient.UnknownCodingKeys()
{
  return &type metadata for IEClient.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for SageClient.CodingKeys()
{
  return &type metadata for SageClient.CodingKeys;
}

ValueMetadata *type metadata accessor for SageClient.Siri100CodingKeys()
{
  return &type metadata for SageClient.Siri100CodingKeys;
}

ValueMetadata *type metadata accessor for SageClient.UnknownCodingKeys()
{
  return &type metadata for SageClient.UnknownCodingKeys;
}

uint64_t _s23LighthouseDataProcessor19UserInteractionTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2408D1670 + 4 * byte_24091E3E1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2408D16A4 + 4 * byte_24091E3DC[v4]))();
}

uint64_t sub_2408D16A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D16AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408D16B4);
  return result;
}

uint64_t sub_2408D16C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408D16C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2408D16CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D16D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserInteractionType.CodingKeys()
{
  return &type metadata for UserInteractionType.CodingKeys;
}

ValueMetadata *type metadata accessor for UserInteractionType.PromptCodingKeys()
{
  return &type metadata for UserInteractionType.PromptCodingKeys;
}

ValueMetadata *type metadata accessor for UserInteractionType.DisambiguationCodingKeys()
{
  return &type metadata for UserInteractionType.DisambiguationCodingKeys;
}

ValueMetadata *type metadata accessor for UserInteractionType.ConfirmationCodingKeys()
{
  return &type metadata for UserInteractionType.ConfirmationCodingKeys;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus.CodingKeys()
{
  return &type metadata for TaskCompletionStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus.CompletedCodingKeys()
{
  return &type metadata for TaskCompletionStatus.CompletedCodingKeys;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus.FailedCodingKeys()
{
  return &type metadata for TaskCompletionStatus.FailedCodingKeys;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus.CanceledCodingKeys()
{
  return &type metadata for TaskCompletionStatus.CanceledCodingKeys;
}

ValueMetadata *type metadata accessor for TaskCompletionStatus.UnknownCodingKeys()
{
  return &type metadata for TaskCompletionStatus.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for SpanRespresentation.CodingKeys()
{
  return &type metadata for SpanRespresentation.CodingKeys;
}

uint64_t _s23LighthouseDataProcessor8IEClientOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2408D17D0 + 4 * byte_24091E3EB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2408D1804 + 4 * byte_24091E3E6[v4]))();
}

uint64_t sub_2408D1804(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D180C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408D1814);
  return result;
}

uint64_t sub_2408D1820(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408D1828);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2408D182C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D1834(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParticipantInfo.CodingKeys()
{
  return &type metadata for ParticipantInfo.CodingKeys;
}

uint64_t _s23LighthouseDataProcessor20TaskCompletionStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2408D189C + 4 * byte_24091E3F5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2408D18D0 + 4 * byte_24091E3F0[v4]))();
}

uint64_t sub_2408D18D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D18D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408D18E0);
  return result;
}

uint64_t sub_2408D18EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408D18F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2408D18F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D1900(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttributionTraits.CodingKeys()
{
  return &type metadata for AttributionTraits.CodingKeys;
}

uint64_t _s23LighthouseDataProcessor14ErrorComponentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2408D1968 + 4 * byte_24091E3FF[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2408D199C + 4 * byte_24091E3FA[v4]))();
}

uint64_t sub_2408D199C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D19A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408D19ACLL);
  return result;
}

uint64_t sub_2408D19B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408D19C0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_2408D19C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D19CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionSignature.CodingKeys()
{
  return &type metadata for SessionSignature.CodingKeys;
}

ValueMetadata *type metadata accessor for PromptType.CodingKeys()
{
  return &type metadata for PromptType.CodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.CodingKeys()
{
  return &type metadata for IERequestStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.CompletedCodingKeys()
{
  return &type metadata for IERequestStatus.CompletedCodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.FailedCodingKeys()
{
  return &type metadata for IERequestStatus.FailedCodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.CanceledCodingKeys()
{
  return &type metadata for IERequestStatus.CanceledCodingKeys;
}

uint64_t _s23LighthouseDataProcessor19SpanRespresentationV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2408D1A80 + 4 * byte_24091E404[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2408D1AA0 + 4 * byte_24091E409[v4]))();
}

_BYTE *sub_2408D1A80(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2408D1AA0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2408D1AA8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2408D1AB0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2408D1AB8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2408D1AC0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IERequestStatus.PromptCodingKeys()
{
  return &type metadata for IERequestStatus.PromptCodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.AbandonedCodingKeys()
{
  return &type metadata for IERequestStatus.AbandonedCodingKeys;
}

ValueMetadata *type metadata accessor for IERequestStatus.UnknownCodingKeys()
{
  return &type metadata for IERequestStatus.UnknownCodingKeys;
}

uint64_t _s23LighthouseDataProcessor15IERequestStatusO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2408D1B48 + 4 * byte_24091E413[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2408D1B7C + 4 * byte_24091E40E[v4]))();
}

uint64_t sub_2408D1B7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D1B84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408D1B8CLL);
  return result;
}

uint64_t sub_2408D1B98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408D1BA0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2408D1BA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D1BAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RequestSignature.CodingKeys()
{
  return &type metadata for RequestSignature.CodingKeys;
}

unint64_t sub_2408D1BCC()
{
  unint64_t result;

  result = qword_2570160B0;
  if (!qword_2570160B0)
  {
    result = MEMORY[0x242684578](&unk_24091F014, &type metadata for RequestSignature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570160B0);
  }
  return result;
}

unint64_t sub_2408D1C14()
{
  unint64_t result;

  result = qword_2570160B8;
  if (!qword_2570160B8)
  {
    result = MEMORY[0x242684578](&unk_24091F16C, &type metadata for IERequestStatus.PromptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570160B8);
  }
  return result;
}

unint64_t sub_2408D1C5C()
{
  unint64_t result;

  result = qword_2570160C0;
  if (!qword_2570160C0)
  {
    result = MEMORY[0x242684578](&unk_24091F274, &type metadata for IERequestStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570160C0);
  }
  return result;
}

unint64_t sub_2408D1CA4()
{
  unint64_t result;

  result = qword_2570160C8;
  if (!qword_2570160C8)
  {
    result = MEMORY[0x242684578](&unk_24091F37C, &type metadata for IERequestStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570160C8);
  }
  return result;
}

unint64_t sub_2408D1CEC()
{
  unint64_t result;

  result = qword_2570160D0;
  if (!qword_2570160D0)
  {
    result = MEMORY[0x242684578](&unk_24091F434, &type metadata for PromptType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570160D0);
  }
  return result;
}

unint64_t sub_2408D1D34()
{
  unint64_t result;

  result = qword_2570160D8;
  if (!qword_2570160D8)
  {
    result = MEMORY[0x242684578](&unk_24091F4EC, &type metadata for SessionSignature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570160D8);
  }
  return result;
}

unint64_t sub_2408D1D7C()
{
  unint64_t result;

  result = qword_2570160E0;
  if (!qword_2570160E0)
  {
    result = MEMORY[0x242684578](&unk_24091F5A4, &type metadata for AttributionTraits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570160E0);
  }
  return result;
}

unint64_t sub_2408D1DC4()
{
  unint64_t result;

  result = qword_2570160E8;
  if (!qword_2570160E8)
  {
    result = MEMORY[0x242684578](&unk_24091F65C, &type metadata for ParticipantInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570160E8);
  }
  return result;
}

unint64_t sub_2408D1E0C()
{
  unint64_t result;

  result = qword_2570160F0;
  if (!qword_2570160F0)
  {
    result = MEMORY[0x242684578](&unk_24091F714, &type metadata for SpanRespresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570160F0);
  }
  return result;
}

unint64_t sub_2408D1E54()
{
  unint64_t result;

  result = qword_2570160F8;
  if (!qword_2570160F8)
  {
    result = MEMORY[0x242684578](&unk_24091F90C, &type metadata for TaskCompletionStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570160F8);
  }
  return result;
}

unint64_t sub_2408D1E9C()
{
  unint64_t result;

  result = qword_257016100;
  if (!qword_257016100)
  {
    result = MEMORY[0x242684578](&unk_24091FAB4, &type metadata for UserInteractionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016100);
  }
  return result;
}

unint64_t sub_2408D1EE4()
{
  unint64_t result;

  result = qword_257016108;
  if (!qword_257016108)
  {
    result = MEMORY[0x242684578](&unk_24091FC0C, &type metadata for SageClient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016108);
  }
  return result;
}

unint64_t sub_2408D1F2C()
{
  unint64_t result;

  result = qword_257016110;
  if (!qword_257016110)
  {
    result = MEMORY[0x242684578](&unk_24091FD64, &type metadata for IEClient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016110);
  }
  return result;
}

unint64_t sub_2408D1F74()
{
  unint64_t result;

  result = qword_257016118;
  if (!qword_257016118)
  {
    result = MEMORY[0x242684578](&unk_24091FC84, &type metadata for IEClient.SiriCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016118);
  }
  return result;
}

unint64_t sub_2408D1FBC()
{
  unint64_t result;

  result = qword_257016120;
  if (!qword_257016120)
  {
    result = MEMORY[0x242684578](&unk_24091FCAC, &type metadata for IEClient.SiriCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016120);
  }
  return result;
}

unint64_t sub_2408D2004()
{
  unint64_t result;

  result = qword_257016128;
  if (!qword_257016128)
  {
    result = MEMORY[0x242684578](&unk_24091FC34, &type metadata for IEClient.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016128);
  }
  return result;
}

unint64_t sub_2408D204C()
{
  unint64_t result;

  result = qword_257016130;
  if (!qword_257016130)
  {
    result = MEMORY[0x242684578](&unk_24091FC5C, &type metadata for IEClient.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016130);
  }
  return result;
}

unint64_t sub_2408D2094()
{
  unint64_t result;

  result = qword_257016138;
  if (!qword_257016138)
  {
    result = MEMORY[0x242684578](&unk_24091FCD4, &type metadata for IEClient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016138);
  }
  return result;
}

unint64_t sub_2408D20DC()
{
  unint64_t result;

  result = qword_257016140;
  if (!qword_257016140)
  {
    result = MEMORY[0x242684578](&unk_24091FCFC, &type metadata for IEClient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016140);
  }
  return result;
}

unint64_t sub_2408D2124()
{
  unint64_t result;

  result = qword_257016148;
  if (!qword_257016148)
  {
    result = MEMORY[0x242684578](&unk_24091FB2C, &type metadata for SageClient.Siri100CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016148);
  }
  return result;
}

unint64_t sub_2408D216C()
{
  unint64_t result;

  result = qword_257016150;
  if (!qword_257016150)
  {
    result = MEMORY[0x242684578](&unk_24091FB54, &type metadata for SageClient.Siri100CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016150);
  }
  return result;
}

unint64_t sub_2408D21B4()
{
  unint64_t result;

  result = qword_257016158;
  if (!qword_257016158)
  {
    result = MEMORY[0x242684578](&unk_24091FADC, &type metadata for SageClient.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016158);
  }
  return result;
}

unint64_t sub_2408D21FC()
{
  unint64_t result;

  result = qword_257016160;
  if (!qword_257016160)
  {
    result = MEMORY[0x242684578](&unk_24091FB04, &type metadata for SageClient.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016160);
  }
  return result;
}

unint64_t sub_2408D2244()
{
  unint64_t result;

  result = qword_257016168;
  if (!qword_257016168)
  {
    result = MEMORY[0x242684578](&unk_24091FB7C, &type metadata for SageClient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016168);
  }
  return result;
}

unint64_t sub_2408D228C()
{
  unint64_t result;

  result = qword_257016170;
  if (!qword_257016170)
  {
    result = MEMORY[0x242684578](&unk_24091FBA4, &type metadata for SageClient.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016170);
  }
  return result;
}

unint64_t sub_2408D22D4()
{
  unint64_t result;

  result = qword_257016178;
  if (!qword_257016178)
  {
    result = MEMORY[0x242684578](&unk_24091F9D4, &type metadata for UserInteractionType.PromptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016178);
  }
  return result;
}

unint64_t sub_2408D231C()
{
  unint64_t result;

  result = qword_257016180;
  if (!qword_257016180)
  {
    result = MEMORY[0x242684578](&unk_24091F9FC, &type metadata for UserInteractionType.PromptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016180);
  }
  return result;
}

unint64_t sub_2408D2364()
{
  unint64_t result;

  result = qword_257016188;
  if (!qword_257016188)
  {
    result = MEMORY[0x242684578](&unk_24091F984, &type metadata for UserInteractionType.DisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016188);
  }
  return result;
}

unint64_t sub_2408D23AC()
{
  unint64_t result;

  result = qword_257016190;
  if (!qword_257016190)
  {
    result = MEMORY[0x242684578](&unk_24091F9AC, &type metadata for UserInteractionType.DisambiguationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016190);
  }
  return result;
}

unint64_t sub_2408D23F4()
{
  unint64_t result;

  result = qword_257016198;
  if (!qword_257016198)
  {
    result = MEMORY[0x242684578](&unk_24091F934, &type metadata for UserInteractionType.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016198);
  }
  return result;
}

unint64_t sub_2408D243C()
{
  unint64_t result;

  result = qword_2570161A0;
  if (!qword_2570161A0)
  {
    result = MEMORY[0x242684578](&unk_24091F95C, &type metadata for UserInteractionType.ConfirmationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161A0);
  }
  return result;
}

unint64_t sub_2408D2484()
{
  unint64_t result;

  result = qword_2570161A8;
  if (!qword_2570161A8)
  {
    result = MEMORY[0x242684578](&unk_24091FA24, &type metadata for UserInteractionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161A8);
  }
  return result;
}

unint64_t sub_2408D24CC()
{
  unint64_t result;

  result = qword_2570161B0;
  if (!qword_2570161B0)
  {
    result = MEMORY[0x242684578](&unk_24091FA4C, &type metadata for UserInteractionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161B0);
  }
  return result;
}

unint64_t sub_2408D2514()
{
  unint64_t result;

  result = qword_2570161B8;
  if (!qword_2570161B8)
  {
    result = MEMORY[0x242684578](&unk_24091F82C, &type metadata for TaskCompletionStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161B8);
  }
  return result;
}

unint64_t sub_2408D255C()
{
  unint64_t result;

  result = qword_2570161C0;
  if (!qword_2570161C0)
  {
    result = MEMORY[0x242684578](&unk_24091F854, &type metadata for TaskCompletionStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161C0);
  }
  return result;
}

unint64_t sub_2408D25A4()
{
  unint64_t result;

  result = qword_2570161C8;
  if (!qword_2570161C8)
  {
    result = MEMORY[0x242684578](&unk_24091F7DC, &type metadata for TaskCompletionStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161C8);
  }
  return result;
}

unint64_t sub_2408D25EC()
{
  unint64_t result;

  result = qword_2570161D0;
  if (!qword_2570161D0)
  {
    result = MEMORY[0x242684578](&unk_24091F804, &type metadata for TaskCompletionStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161D0);
  }
  return result;
}

unint64_t sub_2408D2634()
{
  unint64_t result;

  result = qword_2570161D8;
  if (!qword_2570161D8)
  {
    result = MEMORY[0x242684578](&unk_24091F78C, &type metadata for TaskCompletionStatus.CanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161D8);
  }
  return result;
}

unint64_t sub_2408D267C()
{
  unint64_t result;

  result = qword_2570161E0;
  if (!qword_2570161E0)
  {
    result = MEMORY[0x242684578](&unk_24091F7B4, &type metadata for TaskCompletionStatus.CanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161E0);
  }
  return result;
}

unint64_t sub_2408D26C4()
{
  unint64_t result;

  result = qword_2570161E8;
  if (!qword_2570161E8)
  {
    result = MEMORY[0x242684578](&unk_24091F73C, &type metadata for TaskCompletionStatus.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161E8);
  }
  return result;
}

unint64_t sub_2408D270C()
{
  unint64_t result;

  result = qword_2570161F0;
  if (!qword_2570161F0)
  {
    result = MEMORY[0x242684578](&unk_24091F764, &type metadata for TaskCompletionStatus.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161F0);
  }
  return result;
}

unint64_t sub_2408D2754()
{
  unint64_t result;

  result = qword_2570161F8;
  if (!qword_2570161F8)
  {
    result = MEMORY[0x242684578](&unk_24091F87C, &type metadata for TaskCompletionStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570161F8);
  }
  return result;
}

unint64_t sub_2408D279C()
{
  unint64_t result;

  result = qword_257016200;
  if (!qword_257016200)
  {
    result = MEMORY[0x242684578](&unk_24091F8A4, &type metadata for TaskCompletionStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016200);
  }
  return result;
}

unint64_t sub_2408D27E4()
{
  unint64_t result;

  result = qword_257016208;
  if (!qword_257016208)
  {
    result = MEMORY[0x242684578](&unk_24091F684, &type metadata for SpanRespresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016208);
  }
  return result;
}

unint64_t sub_2408D282C()
{
  unint64_t result;

  result = qword_257016210;
  if (!qword_257016210)
  {
    result = MEMORY[0x242684578](&unk_24091F6AC, &type metadata for SpanRespresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016210);
  }
  return result;
}

unint64_t sub_2408D2874()
{
  unint64_t result;

  result = qword_257016218;
  if (!qword_257016218)
  {
    result = MEMORY[0x242684578](&unk_24091F5CC, &type metadata for ParticipantInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016218);
  }
  return result;
}

unint64_t sub_2408D28BC()
{
  unint64_t result;

  result = qword_257016220;
  if (!qword_257016220)
  {
    result = MEMORY[0x242684578](&unk_24091F5F4, &type metadata for ParticipantInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016220);
  }
  return result;
}

unint64_t sub_2408D2904()
{
  unint64_t result;

  result = qword_257016228;
  if (!qword_257016228)
  {
    result = MEMORY[0x242684578](&unk_24091F514, &type metadata for AttributionTraits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016228);
  }
  return result;
}

unint64_t sub_2408D294C()
{
  unint64_t result;

  result = qword_257016230;
  if (!qword_257016230)
  {
    result = MEMORY[0x242684578](&unk_24091F53C, &type metadata for AttributionTraits.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016230);
  }
  return result;
}

unint64_t sub_2408D2994()
{
  unint64_t result;

  result = qword_257016238;
  if (!qword_257016238)
  {
    result = MEMORY[0x242684578](&unk_24091F45C, &type metadata for SessionSignature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016238);
  }
  return result;
}

unint64_t sub_2408D29DC()
{
  unint64_t result;

  result = qword_257016240;
  if (!qword_257016240)
  {
    result = MEMORY[0x242684578](&unk_24091F484, &type metadata for SessionSignature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016240);
  }
  return result;
}

unint64_t sub_2408D2A24()
{
  unint64_t result;

  result = qword_257016248;
  if (!qword_257016248)
  {
    result = MEMORY[0x242684578](&unk_24091F3A4, &type metadata for PromptType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016248);
  }
  return result;
}

unint64_t sub_2408D2A6C()
{
  unint64_t result;

  result = qword_257016250;
  if (!qword_257016250)
  {
    result = MEMORY[0x242684578](&unk_24091F3CC, &type metadata for PromptType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016250);
  }
  return result;
}

unint64_t sub_2408D2AB4()
{
  unint64_t result;

  result = qword_257016258;
  if (!qword_257016258)
  {
    result = MEMORY[0x242684578](&unk_24091F29C, &type metadata for IERequestStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016258);
  }
  return result;
}

unint64_t sub_2408D2AFC()
{
  unint64_t result;

  result = qword_257016260;
  if (!qword_257016260)
  {
    result = MEMORY[0x242684578](&unk_24091F2C4, &type metadata for IERequestStatus.CompletedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016260);
  }
  return result;
}

unint64_t sub_2408D2B44()
{
  unint64_t result;

  result = qword_257016268;
  if (!qword_257016268)
  {
    result = MEMORY[0x242684578](&unk_24091F1E4, &type metadata for IERequestStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016268);
  }
  return result;
}

unint64_t sub_2408D2B8C()
{
  unint64_t result;

  result = qword_257016270;
  if (!qword_257016270)
  {
    result = MEMORY[0x242684578](&unk_24091F20C, &type metadata for IERequestStatus.FailedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016270);
  }
  return result;
}

unint64_t sub_2408D2BD4()
{
  unint64_t result;

  result = qword_257016278;
  if (!qword_257016278)
  {
    result = MEMORY[0x242684578](&unk_24091F194, &type metadata for IERequestStatus.CanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016278);
  }
  return result;
}

unint64_t sub_2408D2C1C()
{
  unint64_t result;

  result = qword_257016280;
  if (!qword_257016280)
  {
    result = MEMORY[0x242684578](&unk_24091F1BC, &type metadata for IERequestStatus.CanceledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016280);
  }
  return result;
}

unint64_t sub_2408D2C64()
{
  unint64_t result;

  result = qword_257016288;
  if (!qword_257016288)
  {
    result = MEMORY[0x242684578](&unk_24091F0DC, &type metadata for IERequestStatus.PromptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016288);
  }
  return result;
}

unint64_t sub_2408D2CAC()
{
  unint64_t result;

  result = qword_257016290;
  if (!qword_257016290)
  {
    result = MEMORY[0x242684578](&unk_24091F104, &type metadata for IERequestStatus.PromptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016290);
  }
  return result;
}

unint64_t sub_2408D2CF4()
{
  unint64_t result;

  result = qword_257016298;
  if (!qword_257016298)
  {
    result = MEMORY[0x242684578](&unk_24091F08C, &type metadata for IERequestStatus.AbandonedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016298);
  }
  return result;
}

unint64_t sub_2408D2D3C()
{
  unint64_t result;

  result = qword_2570162A0;
  if (!qword_2570162A0)
  {
    result = MEMORY[0x242684578](&unk_24091F0B4, &type metadata for IERequestStatus.AbandonedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570162A0);
  }
  return result;
}

unint64_t sub_2408D2D84()
{
  unint64_t result;

  result = qword_2570162A8;
  if (!qword_2570162A8)
  {
    result = MEMORY[0x242684578](&unk_24091F03C, &type metadata for IERequestStatus.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570162A8);
  }
  return result;
}

unint64_t sub_2408D2DCC()
{
  unint64_t result;

  result = qword_2570162B0;
  if (!qword_2570162B0)
  {
    result = MEMORY[0x242684578](&unk_24091F064, &type metadata for IERequestStatus.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570162B0);
  }
  return result;
}

unint64_t sub_2408D2E14()
{
  unint64_t result;

  result = qword_2570162B8;
  if (!qword_2570162B8)
  {
    result = MEMORY[0x242684578](&unk_24091F2EC, &type metadata for IERequestStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570162B8);
  }
  return result;
}

unint64_t sub_2408D2E5C()
{
  unint64_t result;

  result = qword_2570162C0;
  if (!qword_2570162C0)
  {
    result = MEMORY[0x242684578](&unk_24091F314, &type metadata for IERequestStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570162C0);
  }
  return result;
}

unint64_t sub_2408D2EA4()
{
  unint64_t result;

  result = qword_2570162C8;
  if (!qword_2570162C8)
  {
    result = MEMORY[0x242684578](&unk_24091EF84, &type metadata for RequestSignature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570162C8);
  }
  return result;
}

unint64_t sub_2408D2EEC()
{
  unint64_t result;

  result = qword_2570162D0;
  if (!qword_2570162D0)
  {
    result = MEMORY[0x242684578](&unk_24091EFAC, &type metadata for RequestSignature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2570162D0);
  }
  return result;
}

uint64_t sub_2408D2F30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65696C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5374736575716572 && a2 == 0xED00007375746174 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024092CAC0 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465747563657865 && a2 == 0xEF7344496C6F6F54 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000240925D90 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6D6F43726F727265 && a2 == 0xEE00746E656E6F70)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_2408D3208(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C65636E6163 && a2 == 0xE800000000000000 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656E6F646E616261 && a2 == 0xE900000000000064 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_2408D3490(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65696C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000240927CC0 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6552737574617473 && a2 == 0xEC0000006E6F7361 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEB000000006E6F69 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024092CAE0 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024092CB00 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024092CB20 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024092CB40 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x747461506E617073 && a2 == 0xEB000000006E7265)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_2408D3824(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7475626972747461 && a2 == 0xEF687461506E6F69;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024092CB60 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x75716552746F6F72 && a2 == 0xED00006449747365 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x526572756C696166 && a2 == 0xED00006E6F736165)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2408D3A40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7069636974726170 && a2 == 0xEB00000000746E61;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617453656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2408D3B54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C65636E6163 && a2 == 0xE800000000000000 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2408D3D10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74706D6F7270 && a2 == 0xE600000000000000;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6769626D61736964 && a2 == 0xEE006E6F69746175 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616D7269666E6F63 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2408D3E98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x30303169726973 && a2 == 0xE700000000000000;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2408D3F88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1769105779 && a2 == 0xE400000000000000;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2408D4068()
{
  unint64_t result;

  result = qword_2570162D8;
  if (!qword_2570162D8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ErrorComponent, &type metadata for ErrorComponent);
    atomic_store(result, (unint64_t *)&qword_2570162D8);
  }
  return result;
}

void *sub_2408D40C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF80);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TranscriptProtoSearchExpression(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408D42AC(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_2408D42F4((uint64_t)v6);
    return 0;
  }
  else
  {
    sub_2408D4334((uint64_t)v6, (uint64_t)v10);
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D90]), sel_init);
    v11 = v12;
    if (v12)
      objc_msgSend(v12, sel_setExists_, 1);
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D98]), sel_init);
    v14 = v13;
    if (v13)
    {
      v15 = v13;
      v16 = (void *)sub_2408E5CE4();
      objc_msgSend(v15, sel_setQuery_, v16);

      objc_msgSend(v15, sel_setLinkId_, a2);
    }
    v17 = objc_msgSend(v14, sel_linkId);
    objc_msgSend(v11, sel_setLinkId_, v17);
    if (v11)
      objc_msgSend(v11, sel_setIsLowConfidenceKnowledge_, v10[16]);
    sub_2408D4378((uint64_t)v10);

  }
  return v11;
}

uint64_t sub_2408D42AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408D42F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408D4334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoSearchExpression(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408D4378(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoSearchExpression(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_2408D43B4(uint64_t *a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v17;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95038]), sel_init);
  v3 = v2;
  if (v2)
  {
    v4 = (void *)a1[2];
    v5 = v2;
    if (v4)
      v4 = (void *)sub_2408E5CE4();
    objc_msgSend(v3, sel_setAssistantSchemaKind_, v4);

    sub_2408D45FC();
    v6 = v3;
    v7 = (void *)sub_2408E5D8C();
    objc_msgSend(v6, sel_setTools_, v7);

  }
  v8 = *(_QWORD *)(*a1 + 16);
  if (v8)
  {
    v17 = *a1;
    swift_bridgeObjectRetain();
    do
    {
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95030]), sel_init);
      if (v9)
      {
        v10 = v9;
        if (v3)
        {
          v11 = v3;
          v12 = objc_msgSend(v11, sel_tools);
          if (v12)
          {
            v13 = v12;
            sub_2408D45FC();
            v14 = sub_2408E5D98();

            v15 = v10;
            MEMORY[0x242683B40]();
            if (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_2408E5DBC();
            sub_2408E5DD4();
            sub_2408E5DB0();
            if (v14)
            {
              v10 = (void *)sub_2408E5D8C();
              swift_bridgeObjectRelease();
            }
            else
            {
              v10 = 0;
            }
            objc_msgSend(v11, sel_setTools_, v10, v17);

          }
          else
          {
            objc_msgSend(v11, sel_setTools_, 0);
            swift_bridgeObjectRelease();
          }

        }
        else
        {

        }
      }
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  return v3;
}

unint64_t sub_2408D45FC()
{
  unint64_t result;

  result = qword_2570162E0;
  if (!qword_2570162E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2570162E0);
  }
  return result;
}

void sub_2408D4638(char a1)
{
  sub_2408E6218();
  __asm { BR              X10 }
}

uint64_t sub_2408D4694()
{
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

uint64_t sub_2408D474C()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

uint64_t sub_2408D47D0()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

void sub_2408D4854(char a1)
{
  sub_2408E6218();
  __asm { BR              X10 }
}

uint64_t sub_2408D48B0()
{
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

uint64_t sub_2408D492C()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

uint64_t sub_2408D49D0()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

void sub_2408D4A74(char a1)
{
  sub_2408E6218();
  __asm { BR              X10 }
}

uint64_t sub_2408D4AD0()
{
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

_QWORD *sub_2408D4B54()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  id v4;
  unint64_t v5;
  char v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    v9[0] = 0;
    v3 = objc_msgSend((id)BiomeLibrary(), sel_streamWithIdentifier_error_, v2, v9);
    swift_unknownObjectRelease();
    if (v3)
    {
      v4 = v9[0];
    }
    else
    {
      v3 = v9[0];
      sub_2408E5534();

      swift_willThrow();
    }
    sub_240420B24(v2, v1, 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    v3 = (_QWORD *)sub_2408E5B70();
    if (v3[2])
    {
      v5 = sub_240509E28((uint64_t)v2, v1);
      if ((v6 & 1) != 0)
      {
        v7 = *(id *)(v3[7] + 8 * v5);
        swift_bridgeObjectRelease();
        sub_240420B24(v2, v1, 0);
        return v7;
      }
    }
    swift_bridgeObjectRelease();
    sub_240420B24(v2, v1, 0);
    sub_240727788();
    swift_allocError();
    swift_willThrow();
  }
  return v3;
}

uint64_t sub_2408D4D10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = v0;
  return swift_task_switch();
}

uint64_t sub_2408D4D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  id v15;
  _QWORD *v16;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(v0 + 56) = v2;
  v3 = v1 + v2;
  v18 = *(_QWORD *)(v1 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257001420) + 36));
  if (CollectionPolicy.canCollect()())
  {
    v4 = sub_2408D4B54();
    *(_QWORD *)(v0 + 64) = v4;
    v13 = v4;
    v14 = (void *)sub_2408E5CE4();
    v15 = objc_msgSend(v13, sel_publisherWithUseCase_, v14);

    *(_QWORD *)(v0 + 72) = sub_2408D51B8(v15);
    swift_beginAccess();
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v16;
    *v16 = v0;
    v16[1] = sub_2408D5018;
    return sub_2404FCE64();
  }
  else
  {
    if (qword_254355CB0 != -1)
      swift_once();
    v5 = sub_2408E5C48();
    __swift_project_value_buffer(v5, (uint64_t)qword_2543560F0);
    swift_retain_n();
    v6 = sub_2408E5C3C();
    v7 = sub_2408E5E94();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v18 = v9;
      *(_DWORD *)v8 = 136315138;
      v10 = *(_QWORD *)v3;
      if ((*(_BYTE *)(v3 + 16) & 1) != 0)
      {
        v10 = sub_2408E5D08();
        v12 = v11;
      }
      else
      {
        v12 = *(_QWORD *)(v3 + 8);
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(v0 + 40) = sub_2403B3ED0(v10, v12, &v18);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_240347000, v6, v7, "Skipping %s: collection demands were not met", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242684668](v9, -1, -1);
      MEMORY[0x242684668](v8, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2408D5018()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_2408D5084()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    if ((*(_BYTE *)(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v0 + 56) + 16) & 1) != 0)
      sub_2408E5D08();
    else
      swift_bridgeObjectRetain();
    v2 = *(void **)(v0 + 64);
    swift_unknownObjectRetain();
    sub_2408E5D50();
    swift_bridgeObjectRelease();
    sub_2408D6080(v1, 6253922, 0xE300000000000000);
    swift_unknownObjectRelease_n();

    swift_bridgeObjectRelease();
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2408D5174()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 64);
  swift_endAccess();

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2408D51B8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t aBlock;
  unint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;

  v2 = v1;
  v4 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  aBlock = 6253922;
  v23 = 0xE300000000000000;
  if ((*(_BYTE *)(v4 + 16) & 1) != 0)
    sub_2408E5D08();
  else
    swift_bridgeObjectRetain();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  v5 = sub_2408D5B2C(aBlock, v23);
  swift_bridgeObjectRelease();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = 0;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  v26 = sub_2408B8E74;
  v27 = v6;
  v8 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v23 = 1107296256;
  v24 = sub_2408D55E8;
  v25 = &block_descriptor_4;
  v9 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v2;
  *(_QWORD *)(v10 + 24) = v7;
  v26 = sub_2408D7FDC;
  v27 = v10;
  aBlock = v8;
  v23 = 1107296256;
  v24 = sub_2408D5AD8;
  v25 = &block_descriptor_12;
  v11 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v12 = objc_msgSend(a1, sel_drivableSinkWithBookmark_completion_shouldContinue_, v5, v9, v11);
  _Block_release(v11);
  _Block_release(v9);

  if (qword_254355CB0 != -1)
    swift_once();
  v13 = sub_2408E5C48();
  __swift_project_value_buffer(v13, (uint64_t)qword_2543560F0);
  swift_retain_n();
  swift_retain();
  v14 = sub_2408E5C3C();
  v15 = sub_2408E5EA0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    aBlock = v17;
    *(_DWORD *)v16 = 134218242;
    swift_beginAccess();
    sub_2408E5F3C();
    swift_release();
    *(_WORD *)(v16 + 12) = 2080;
    swift_beginAccess();
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254356150);
    v18 = sub_2408E5D38();
    sub_2403B3ED0(v18, v19, &aBlock);
    sub_2408E5F3C();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240347000, v14, v15, "Processed %ld events. End Bookmark: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x242684668](v17, -1, -1);
    MEMORY[0x242684668](v16, -1, -1);

    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease();
    swift_release_n();
    swift_release();
  }
  swift_beginAccess();
  v20 = *(_QWORD *)(v6 + 16);
  swift_unknownObjectRetain();
  swift_release();
  swift_release();
  return v20;
}

void sub_2408D55E8(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v5)(id, uint64_t);
  id v6;

  v5 = *(void (**)(id, uint64_t))(a1 + 32);
  swift_retain();
  v6 = a2;
  swift_unknownObjectRetain();
  v5(v6, a3);
  swift_release();
  swift_unknownObjectRelease();

}

uint64_t sub_2408D5658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  double v12;
  double v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD *v22;
  uint64_t result;

  swift_unknownObjectRetain();
  objc_opt_self();
  v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_eventBodyData);
    if (v6)
    {
      v7 = v6;
      v8 = sub_2408E5564();
      v10 = v9;

      v11 = (void *)MEMORY[0x242684110]();
      objc_msgSend(v5, sel_timestamp);
      v13 = v12;
      swift_beginAccess();
      sub_2404FCABC(v8, v10, v13);
      v22 = (_QWORD *)(a3 + 16);
      swift_endAccess();
      objc_autoreleasePoolPop(v11);
      sub_240363D58(v8, v10);
      swift_unknownObjectRelease();
      result = swift_beginAccess();
      if (__OFADD__(*v22, 1))
      {
        __break(1u);
      }
      else
      {
        ++*v22;
        return 1;
      }
    }
    else
    {
      if (qword_254355CB0 != -1)
        swift_once();
      v18 = sub_2408E5C48();
      __swift_project_value_buffer(v18, (uint64_t)qword_2543560F0);
      v19 = sub_2408E5C3C();
      v20 = sub_2408E5EB8();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_240347000, v19, v20, "Event missing body data", v21, 2u);
        MEMORY[0x242684668](v21, -1, -1);
      }

      swift_unknownObjectRelease();
      return 1;
    }
  }
  else
  {
    swift_unknownObjectRelease();
    if (qword_254355CB0 != -1)
      swift_once();
    v14 = sub_2408E5C48();
    __swift_project_value_buffer(v14, (uint64_t)qword_2543560F0);
    v15 = sub_2408E5C3C();
    v16 = sub_2408E5EB8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_240347000, v15, v16, "Can't get BMStoreEvent out of the stream", v17, 2u);
      MEMORY[0x242684668](v17, -1, -1);
    }

    return 1;
  }
  return result;
}

uint64_t sub_2408D5AD8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  return v1 & 1;
}

uint64_t sub_2408D5B2C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  uint64_t v20;
  unint64_t v21;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  id v32;
  void *v33;
  uint64_t v34;
  unint64_t v35;
  _OWORD v36[2];
  id v37[5];

  v37[4] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = *(void **)(v2 + 16);
  v6 = (void *)sub_2408E5CE4();
  v7 = objc_msgSend(v5, sel_valueForKey_, v6);

  if (v7)
  {
    sub_2408E5F54();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v36, 0, sizeof(v36));
  }
  sub_2403B80A4((uint64_t)v36, (uint64_t)v37, &qword_2543563F0);
  if (!v37[3])
  {
    sub_2403A97FC((uint64_t)v37, &qword_2543563F0);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bm_allowedClassesForSecureCodingBMBookmark);
  sub_2408E5E40();

  v10 = (void *)sub_2408E5E34();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_2408E554C();
  v37[0] = 0;
  v12 = objc_msgSend(v8, sel_unarchivedObjectOfClasses_fromData_error_, v10, v11, v37);

  if (!v12)
  {
    v23 = v37[0];
    v24 = (void *)sub_2408E5534();

    swift_willThrow();
    if (qword_254355CB0 != -1)
      swift_once();
    v25 = sub_2408E5C48();
    __swift_project_value_buffer(v25, (uint64_t)qword_2543560F0);
    v26 = v24;
    v27 = v24;
    v28 = sub_2408E5C3C();
    v29 = sub_2408E5EAC();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v30 = 138412290;
      v32 = v24;
      v33 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v37[0] = v33;
      sub_2408E5F3C();
      *v31 = v33;

      _os_log_impl(&dword_240347000, v28, v29, "Error decoding bookmark: %@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257015860);
      swift_arrayDestroy();
      MEMORY[0x242684668](v31, -1, -1);
      MEMORY[0x242684668](v30, -1, -1);
      sub_240363D58(v34, v35);

    }
    else
    {
      sub_240363D58(v34, v35);

    }
    return 0;
  }
  v13 = v37[0];
  sub_2408E5F54();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254356140);
  if (swift_dynamicCast())
    v14 = *(_QWORD *)&v36[0];
  else
    v14 = 0;
  if (qword_254355CB0 != -1)
    swift_once();
  v15 = sub_2408E5C48();
  __swift_project_value_buffer(v15, (uint64_t)qword_2543560F0);
  swift_bridgeObjectRetain_n();
  v16 = sub_2408E5C3C();
  v17 = sub_2408E5EA0();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = (void *)swift_slowAlloc();
    v37[0] = v19;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v36[0] = sub_2403B3ED0(a1, a2, (uint64_t *)v37);
    sub_2408E5F3C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240347000, v16, v17, "Bookmark for %s found", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v19, -1, -1);
    MEMORY[0x242684668](v18, -1, -1);
    v21 = v35;
    v20 = v34;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    v20 = v34;
    v21 = v35;
  }
  sub_240363D58(v20, v21);

  return v14;
}

void sub_2408D6080(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  _QWORD *v28;
  id v29;
  void *v30;
  id v32[2];

  v4 = v3;
  v32[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (qword_254355CB0 != -1)
    swift_once();
  v7 = sub_2408E5C48();
  __swift_project_value_buffer(v7, (uint64_t)qword_2543560F0);
  swift_bridgeObjectRetain_n();
  v8 = sub_2408E5C3C();
  v9 = sub_2408E5EA0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (void *)swift_slowAlloc();
    v32[0] = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain();
    sub_2403B3ED0(a2, a3, (uint64_t *)v32);
    sub_2408E5F3C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_240347000, v8, v9, "Saving bookmark for %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v11, -1, -1);
    MEMORY[0x242684668](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = (void *)objc_opt_self();
  v32[0] = 0;
  v13 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v32);
  v14 = v32[0];
  if (v13)
  {
    v15 = sub_2408E5564();
    v17 = v16;

    v18 = *(void **)(v4 + 16);
    sub_240360070(v15, v17);
    v19 = (void *)sub_2408E554C();
    sub_240363D58(v15, v17);
    v20 = (void *)sub_2408E5CE4();
    objc_msgSend(v18, sel_setValue_forKey_, v19, v20);
    sub_240363D58(v15, v17);

  }
  else
  {
    v21 = v14;
    v22 = (void *)sub_2408E5534();

    swift_willThrow();
    v23 = v22;
    v24 = v22;
    v25 = sub_2408E5C3C();
    v26 = sub_2408E5EAC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v27 = 138412290;
      v29 = v22;
      v30 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v32[0] = v30;
      sub_2408E5F3C();
      *v28 = v30;

      _os_log_impl(&dword_240347000, v25, v26, "Error encoding bookmark: %@", v27, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257015860);
      swift_arrayDestroy();
      MEMORY[0x242684668](v28, -1, -1);
      MEMORY[0x242684668](v27, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_2408D6468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2408E5C48();
  __swift_allocate_value_buffer(v0, qword_2570162F0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2570162F0);
  if (qword_2543560E0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254356410);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void BiomeUploadProcessor.init(biomeUseCase:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v7 = (void *)sub_2408E5CE4();
  v8 = objc_msgSend(v6, sel_initWithSuiteName_, v7);

  if (v8)
  {
    sub_2408E56D8();
    swift_allocObject();
    v9 = sub_2408E56CC();
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE30DE0]), sel_init);
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE30DD8]), sel_initWithContext_, v10);

    __swift_instantiateConcreteTypeFromMangledName(&qword_257016308);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_2408EADC0;
    v13 = type metadata accessor for RequireDiagnosticsAndUsageOptIn();
    v14 = swift_allocObject();
    *(_QWORD *)(v12 + 56) = v13;
    *(_QWORD *)(v12 + 64) = &protocol witness table for RequireDiagnosticsAndUsageOptIn;
    *(_QWORD *)(v12 + 32) = v14;
    v15 = type metadata accessor for RequireInternalBuild();
    v16 = swift_allocObject();
    *(_QWORD *)(v12 + 96) = v15;
    *(_QWORD *)(v12 + 104) = &protocol witness table for RequireInternalBuild;
    *(_QWORD *)(v12 + 72) = v16;
    *a3 = v8;
    a3[1] = v9;
    a3[2] = v11;
    a3[3] = a1;
    a3[4] = a2;
    a3[5] = v12;
  }
  else
  {
    __break(1u);
  }
}

uint64_t BiomeUploadProcessor.doWork(context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 24) = type metadata accessor for DillSession(0);
  *(_QWORD *)(v1 + 32) = swift_task_alloc();
  *(_QWORD *)(v1 + 40) = type metadata accessor for BiomeProvisionalUploader();
  *(_QWORD *)(v1 + 48) = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001420);
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v1 + 72) = swift_task_alloc();
  *(_QWORD *)(v1 + 80) = swift_task_alloc();
  *(_QWORD *)(v1 + 88) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
  *(_QWORD *)(v1 + 96) = swift_task_alloc();
  v3 = swift_task_alloc();
  v4 = *v0;
  *(_QWORD *)(v1 + 104) = v3;
  *(_QWORD *)(v1 + 112) = v4;
  *(_QWORD *)(v1 + 120) = v0[3];
  *(_OWORD *)(v1 + 128) = *((_OWORD *)v0 + 2);
  return swift_task_switch();
}

uint64_t sub_2408D67AC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  unint64_t v18;
  uint64_t (**v19)@<X0>(uint64_t@<X0>, unint64_t@<X1>, uint64_t *@<X8>);
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  v1 = *(void **)(v0 + 112);
  v2 = (void *)sub_2408E5CE4();
  LODWORD(v1) = objc_msgSend(v1, sel_BOOLForKey_, v2);

  v3 = MEMORY[0x24BEE4AF8];
  v4 = MEMORY[0x24BEE4AF8];
  if ((_DWORD)v1)
  {
    v5 = *(_QWORD *)(v0 + 96);
    v6 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 64);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257016330);
    v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_2408EADA0;
    v9 = v4 + v8;
    v10 = sub_2408E5CE4();
    v11 = sub_2408E5C6C();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v12(v6, 1, 1, v11);
    sub_2408E5C78();
    v12(v5, 0, 1, v11);
    sub_2408D7B10();
    swift_bridgeObjectRetain();
    static BMIntelligenceFlowTranscriptDatastreamEvent.messageFilteringPolicy()((uint64_t)&v55);
    v13 = v55;
    LOBYTE(v6) = v56;
    v14 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 96);
    v15 = *(_QWORD *)(v0 + 104);
    v17 = *(int **)(v0 + 56);
    *(_QWORD *)v9 = v10;
    *(_QWORD *)(v9 + 8) = 0;
    *(_BYTE *)(v9 + 16) = 1;
    sub_2403B80A4(v15, v9 + v17[7], &qword_254355CD0);
    sub_2403B80A4(v16, v9 + v17[8], &qword_254355CD0);
    *(_QWORD *)(v9 + v17[9]) = v14;
    v18 = v9 + v17[10];
    *(_QWORD *)v18 = v13;
    *(_BYTE *)(v18 + 8) = v6;
    v19 = (uint64_t (**)@<X0>(uint64_t@<X0>, unint64_t@<X1>, uint64_t *@<X8>))(v9 + v17[11]);
    *v19 = sub_2408D7748;
    v19[1] = 0;
    *(_QWORD *)(v9 + v17[12]) = v3;
  }
  *(_QWORD *)(v0 + 144) = v4;
  v20 = *(_QWORD *)(v4 + 16);
  *(_QWORD *)(v0 + 152) = v20;
  if (v20)
  {
    v21 = *(_QWORD *)(v0 + 64);
    v22 = *(uint64_t **)(v0 + 32);
    v23 = *(_DWORD *)(v21 + 80);
    *(_DWORD *)(v0 + 200) = v23;
    *(_QWORD *)(v0 + 160) = *(_QWORD *)(v21 + 72);
    *(_QWORD *)(v0 + 168) = 0;
    v53 = *(_QWORD *)(v0 + 120);
    v54 = *(_QWORD *)(v0 + 128);
    v52 = *(void **)(v0 + 112);
    v25 = *(_QWORD *)(v0 + 80);
    v24 = *(_QWORD *)(v0 + 88);
    v51 = v24;
    v26 = *(_QWORD *)(v0 + 40);
    v27 = *(_QWORD *)(v0 + 48);
    sub_2408D7AC8(v4 + ((v23 + 32) & ~(unint64_t)v23), v24);
    sub_2408D7AC8(v24, v25);
    v28 = *(int *)(v26 + 28);
    v50 = v26;
    sub_2408E56D8();
    swift_allocObject();
    *(_QWORD *)(v27 + v28) = sub_2408E56CC();
    sub_2408D7AC8(v25, v27);
    sub_2408D7AC8(v25, v27 + *(int *)(v26 + 20));
    v29 = sub_2408E566C();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = swift_task_alloc();
    sub_2408E5660();
    *(_QWORD *)(v0 + 204) = sub_2408E5654();
    *(_BYTE *)(v0 + 212) = v32;
    *(_BYTE *)(v0 + 213) = v33;
    *(_BYTE *)(v0 + 214) = v34;
    *(_BYTE *)(v0 + 215) = v35;
    *(_BYTE *)(v0 + 216) = v36;
    *(_BYTE *)(v0 + 217) = v37;
    *(_BYTE *)(v0 + 218) = v38;
    *(_BYTE *)(v0 + 219) = v39;
    v40 = sub_2408D7A1C((_BYTE *)(v0 + 204), 16);
    v41 = v3;
    v43 = v42;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v29);
    _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
    *v22 = v40;
    v22[1] = v43;
    v22[2] = v41;
    sub_2403A97FC(v25, &qword_257001420);
    swift_task_dealloc();
    sub_2403A91CC((uint64_t)v22, v27 + *(int *)(v50 + 24), type metadata accessor for DillSession);
    sub_2408D7AC8(v51, v25);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257016320);
    v44 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 176) = v44;
    sub_2403A91CC(v27, (uint64_t)v44 + *(_QWORD *)(*v44 + 112), (uint64_t (*)(_QWORD))type metadata accessor for BiomeProvisionalUploader);
    sub_2403B80A4(v25, (uint64_t)v44 + *(_QWORD *)(*v44 + 120), &qword_257001420);
    v44[2] = v52;
    v45 = (_QWORD *)((char *)v44 + *(_QWORD *)(*v44 + 128));
    *v45 = v53;
    v45[1] = v54;
    v46 = dword_257016318;
    v47 = v52;
    swift_bridgeObjectRetain();
    v48 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v48;
    *v48 = v0;
    v48[1] = sub_2408D6D00;
    return ((uint64_t (__cdecl *)())((char *)&dword_257016318 + v46))();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2408D6D00()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2408D6DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 88);
  swift_release();
  sub_2403A97FC(v1, &qword_257001420);
  v2 = *(_QWORD *)(v0 + 168) + 1;
  if (v2 == *(_QWORD *)(v0 + 152))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 168) = v2;
    v31 = *(_QWORD *)(v0 + 120);
    v32 = *(_QWORD *)(v0 + 128);
    v5 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 88);
    v29 = v4;
    v30 = *(void **)(v0 + 112);
    v6 = *(int **)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(uint64_t **)(v0 + 32);
    sub_2408D7AC8(*(_QWORD *)(v0 + 144)+ ((*(unsigned __int8 *)(v0 + 200) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 200))+ *(_QWORD *)(v0 + 160) * v2, v4);
    sub_2408D7AC8(v4, v5);
    v9 = v6[7];
    sub_2408E56D8();
    swift_allocObject();
    *(_QWORD *)(v7 + v9) = sub_2408E56CC();
    sub_2408D7AC8(v5, v7);
    sub_2408D7AC8(v5, v7 + v6[5]);
    v10 = sub_2408E566C();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = swift_task_alloc();
    sub_2408E5660();
    *(_QWORD *)(v0 + 204) = sub_2408E5654();
    *(_BYTE *)(v0 + 212) = v13;
    *(_BYTE *)(v0 + 213) = v14;
    *(_BYTE *)(v0 + 214) = v15;
    *(_BYTE *)(v0 + 215) = v16;
    *(_BYTE *)(v0 + 216) = v17;
    *(_BYTE *)(v0 + 217) = v18;
    *(_BYTE *)(v0 + 218) = v19;
    *(_BYTE *)(v0 + 219) = v20;
    v21 = sub_2408D7A1C((_BYTE *)(v0 + 204), 16);
    v23 = v22;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
    _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
    *v8 = v21;
    v8[1] = v23;
    v8[2] = MEMORY[0x24BEE4AF8];
    sub_2403A97FC(v5, &qword_257001420);
    swift_task_dealloc();
    sub_2403A91CC((uint64_t)v8, v7 + v6[6], type metadata accessor for DillSession);
    sub_2408D7AC8(v29, v5);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257016320);
    v24 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 176) = v24;
    sub_2403A91CC(v7, (uint64_t)v24 + *(_QWORD *)(*v24 + 112), (uint64_t (*)(_QWORD))type metadata accessor for BiomeProvisionalUploader);
    sub_2403B80A4(v5, (uint64_t)v24 + *(_QWORD *)(*v24 + 120), &qword_257001420);
    v24[2] = v30;
    v25 = (_QWORD *)((char *)v24 + *(_QWORD *)(*v24 + 128));
    *v25 = v31;
    v25[1] = v32;
    v26 = dword_257016318;
    v27 = v30;
    swift_bridgeObjectRetain();
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v28;
    *v28 = v0;
    v28[1] = sub_2408D6D00;
    return ((uint64_t (__cdecl *)())((char *)&dword_257016318 + v26))();
  }
}

uint64_t sub_2408D714C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  if (qword_256FFA0F8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = sub_2408E5C48();
  __swift_project_value_buffer(v4, (uint64_t)qword_2570162F0);
  sub_2408D7AC8(v2, v3);
  v5 = v1;
  v6 = v1;
  v7 = sub_2408E5C3C();
  v8 = sub_2408E5EAC();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = *(_QWORD *)(v0 + 72);
    v10 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_QWORD *)(v0 + 16) = v12;
    *(_DWORD *)v10 = 136315394;
    v13 = *(_QWORD *)v9;
    v52 = v12;
    if ((*(_BYTE *)(v9 + 16) & 1) != 0)
    {
      v13 = sub_2408E5D08();
      v15 = v14;
      v16 = *(_QWORD *)(v0 + 72);
    }
    else
    {
      v16 = *(_QWORD *)(v0 + 72);
      v15 = *(_QWORD *)(v16 + 8);
      swift_bridgeObjectRetain();
    }
    v21 = *(void **)(v0 + 192);
    v55 = *(_QWORD *)(v0 + 88);
    *(_QWORD *)(v10 + 4) = sub_2403B3ED0(v13, v15, (uint64_t *)(v0 + 16));
    swift_bridgeObjectRelease();
    sub_2403A97FC(v16, &qword_257001420);
    *(_WORD *)(v10 + 12) = 2112;
    v22 = v21;
    v23 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v10 + 14) = v23;
    *v11 = v23;

    _os_log_impl(&dword_240347000, v7, v8, "Error uploading %s: %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257015860);
    swift_arrayDestroy();
    MEMORY[0x242684668](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x242684668](v52, -1, -1);
    MEMORY[0x242684668](v10, -1, -1);
    swift_release();

    v20 = v55;
  }
  else
  {
    v17 = *(void **)(v0 + 192);
    v18 = *(_QWORD *)(v0 + 88);
    v19 = *(_QWORD *)(v0 + 72);
    swift_release();

    sub_2403A97FC(v19, &qword_257001420);
    v20 = v18;
  }
  sub_2403A97FC(v20, &qword_257001420);
  v24 = *(_QWORD *)(v0 + 168) + 1;
  if (v24 == *(_QWORD *)(v0 + 152))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 168) = v24;
    v54 = *(_QWORD *)(v0 + 120);
    v56 = *(_QWORD *)(v0 + 128);
    v27 = *(_QWORD *)(v0 + 80);
    v26 = *(_QWORD *)(v0 + 88);
    v51 = v26;
    v53 = *(void **)(v0 + 112);
    v28 = *(int **)(v0 + 40);
    v29 = *(_QWORD *)(v0 + 48);
    v30 = *(uint64_t **)(v0 + 32);
    sub_2408D7AC8(*(_QWORD *)(v0 + 144)+ ((*(unsigned __int8 *)(v0 + 200) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 200))+ *(_QWORD *)(v0 + 160) * v24, v26);
    sub_2408D7AC8(v26, v27);
    v31 = v28[7];
    sub_2408E56D8();
    swift_allocObject();
    *(_QWORD *)(v29 + v31) = sub_2408E56CC();
    sub_2408D7AC8(v27, v29);
    sub_2408D7AC8(v27, v29 + v28[5]);
    v32 = sub_2408E566C();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = swift_task_alloc();
    sub_2408E5660();
    *(_QWORD *)(v0 + 204) = sub_2408E5654();
    *(_BYTE *)(v0 + 212) = v35;
    *(_BYTE *)(v0 + 213) = v36;
    *(_BYTE *)(v0 + 214) = v37;
    *(_BYTE *)(v0 + 215) = v38;
    *(_BYTE *)(v0 + 216) = v39;
    *(_BYTE *)(v0 + 217) = v40;
    *(_BYTE *)(v0 + 218) = v41;
    *(_BYTE *)(v0 + 219) = v42;
    v43 = sub_2408D7A1C((_BYTE *)(v0 + 204), 16);
    v45 = v44;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v34, v32);
    _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
    *v30 = v43;
    v30[1] = v45;
    v30[2] = MEMORY[0x24BEE4AF8];
    sub_2403A97FC(v27, &qword_257001420);
    swift_task_dealloc();
    sub_2403A91CC((uint64_t)v30, v29 + v28[6], type metadata accessor for DillSession);
    sub_2408D7AC8(v51, v27);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257016320);
    v46 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v0 + 176) = v46;
    sub_2403A91CC(v29, (uint64_t)v46 + *(_QWORD *)(*v46 + 112), (uint64_t (*)(_QWORD))type metadata accessor for BiomeProvisionalUploader);
    sub_2403B80A4(v27, (uint64_t)v46 + *(_QWORD *)(*v46 + 120), &qword_257001420);
    v46[2] = v53;
    v47 = (_QWORD *)((char *)v46 + *(_QWORD *)(*v46 + 128));
    *v47 = v54;
    v47[1] = v56;
    v48 = dword_257016318;
    v49 = v53;
    swift_bridgeObjectRetain();
    v50 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v50;
    *v50 = v0;
    v50[1] = sub_2408D6D00;
    return ((uint64_t (__cdecl *)())((char *)&dword_257016318 + v48))();
  }
}

uint64_t sub_2408D7748@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return sub_240360070(a1, a2);
}

LighthouseDataProcessor::BiomeUploadProcessorError_optional __swiftcall BiomeUploadProcessorError.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  LighthouseDataProcessor::BiomeUploadProcessorError_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2408E608C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t BiomeUploadProcessorError.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_2408D77E0 + 4 * byte_24092065F[*v0]))(0xD000000000000016, 0x8000000240921670);
}

unint64_t sub_2408D77E0()
{
  return 0xD000000000000013;
}

uint64_t sub_2408D77FC()
{
  return 0x4364696C61766E69;
}

uint64_t sub_2408D7820@<X0>(uint64_t a1@<X8>)
{
  return a1 + 6;
}

void sub_2408D7838(char *a1)
{
  sub_24040D464(*a1);
}

void sub_2408D7844()
{
  char *v0;

  sub_2408D4A74(*v0);
}

void sub_2408D784C(uint64_t a1)
{
  char *v1;

  sub_24040DA90(a1, *v1);
}

void sub_2408D7854(uint64_t a1)
{
  char *v1;

  sub_24040DB44(a1, *v1);
}

LighthouseDataProcessor::BiomeUploadProcessorError_optional sub_2408D785C(Swift::String *a1)
{
  return BiomeUploadProcessorError.init(rawValue:)(*a1);
}

uint64_t sub_2408D7868@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BiomeUploadProcessorError.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2408D788C(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_2408D78AC(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_2408E5F3C();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_2408D795C(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_2408D7A1C(_BYTE *__src, uint64_t a2)
{
  uint64_t result;

  if (!a2)
    return 0;
  if (a2 <= 14)
    return sub_2408D795C(__src, &__src[a2]);
  sub_2408E5528();
  swift_allocObject();
  sub_2408E54F8();
  if ((unint64_t)a2 < 0x7FFFFFFF)
    return a2 << 32;
  sub_2408E5540();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_2408D7AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2408D7B10()
{
  unint64_t result;

  result = qword_257016338;
  if (!qword_257016338)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257016338);
  }
  return result;
}

unint64_t sub_2408D7B50()
{
  unint64_t result;

  result = qword_257016340;
  if (!qword_257016340)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for BiomeUploadProcessorError, &type metadata for BiomeUploadProcessorError);
    atomic_store(result, (unint64_t *)&qword_257016340);
  }
  return result;
}

unint64_t sub_2408D7B9C()
{
  unint64_t result;

  result = qword_257016350;
  if (!qword_257016350)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for BiomeUploadProcessorError, &type metadata for BiomeUploadProcessorError);
    atomic_store(result, (unint64_t *)&qword_257016350);
  }
  return result;
}

unint64_t sub_2408D7BE4()
{
  unint64_t result;

  result = qword_257016358;
  if (!qword_257016358)
  {
    result = MEMORY[0x242684578](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257016358);
  }
  return result;
}

uint64_t destroy for BiomeUploadProcessor(id *a1)
{

  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for BiomeUploadProcessor(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = v6;
  a1[3] = v5;
  v7 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v7;
  v8 = v3;
  swift_retain();
  v9 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BiomeUploadProcessor(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BiomeUploadProcessor(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BiomeUploadProcessor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BiomeUploadProcessor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BiomeUploadProcessor()
{
  return &type metadata for BiomeUploadProcessor;
}

uint64_t storeEnumTagSinglePayload for BiomeUploadProcessorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2408D7EE4 + 4 * byte_240920668[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2408D7F18 + 4 * byte_240920663[v4]))();
}

uint64_t sub_2408D7F18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D7F20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408D7F28);
  return result;
}

uint64_t sub_2408D7F34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408D7F3CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2408D7F40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D7F48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BiomeUploadProcessorError()
{
  return &type metadata for BiomeUploadProcessorError;
}

uint64_t sub_2408D7F64()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2408D7F88()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_2408D7FB0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2408D7FDC(uint64_t a1)
{
  uint64_t v1;

  return sub_2408D5658(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void AppIntentMetricsDefinitions.clientId.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t AppIntentMetricsDefinitions.dateStamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AppIntentMetricsDefinitions.dateStamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*AppIntentMetricsDefinitions.dateStamp.modify())()
{
  return nullsub_1;
}

uint64_t AppIntentMetricsDefinitions.executedToolId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for AppIntentMetricsDefinitions()
{
  uint64_t result;

  result = qword_2570163D0;
  if (!qword_2570163D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t AppIntentMetricsDefinitions.executedToolId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AppIntentMetricsDefinitions.executedToolId.modify())()
{
  type metadata accessor for AppIntentMetricsDefinitions();
  return nullsub_1;
}

uint64_t AppIntentMetricsDefinitions.runtimeErrorComponent.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for AppIntentMetricsDefinitions();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AppIntentMetricsDefinitions.runtimeErrorComponent.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for AppIntentMetricsDefinitions();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*AppIntentMetricsDefinitions.runtimeErrorComponent.modify())()
{
  type metadata accessor for AppIntentMetricsDefinitions();
  return nullsub_1;
}

uint64_t AppIntentMetricsDefinitions.toolCompletionStatus.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = v1 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 28);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_BYTE *)(v3 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  return sub_2403ADAA8(v4, v5, v6);
}

uint64_t AppIntentMetricsDefinitions.toolCompletionStatus.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = v1 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 28);
  result = sub_2403ADB34(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = v4;
  return result;
}

uint64_t (*AppIntentMetricsDefinitions.toolCompletionStatus.modify())()
{
  type metadata accessor for AppIntentMetricsDefinitions();
  return nullsub_1;
}

uint64_t AppIntentMetricsDefinitions.errorMessage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppIntentMetricsDefinitions.errorMessage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for AppIntentMetricsDefinitions() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AppIntentMetricsDefinitions.errorMessage.modify())()
{
  type metadata accessor for AppIntentMetricsDefinitions();
  return nullsub_1;
}

uint64_t sub_2408D8338(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2408D8370 + 4 * byte_240920810[a1]))(0x6D61745365746164, 0xE900000000000070);
}

uint64_t sub_2408D8370()
{
  return 0x6465747563657865;
}

unint64_t sub_2408D8394()
{
  return 0xD000000000000015;
}

unint64_t sub_2408D83B4()
{
  return 0xD000000000000014;
}

uint64_t sub_2408D83D0()
{
  return 0x73654D726F727265;
}

uint64_t sub_2408D83F0()
{
  unsigned __int8 *v0;

  return sub_2408D8338(*v0);
}

uint64_t sub_2408D83F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2408D92C8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2408D841C(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2408D8428()
{
  sub_2408D868C();
  return sub_2408E6278();
}

uint64_t sub_2408D8450()
{
  sub_2408D868C();
  return sub_2408E6284();
}

uint64_t AppIntentMetricsDefinitions.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 *v10;
  char v11;
  __int128 v13;
  char v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257016360);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408D868C();
  sub_2408E626C();
  LOBYTE(v13) = 0;
  sub_2408E5624();
  sub_240502914(&qword_257001530, MEMORY[0x24BDCE928]);
  sub_2408E6164();
  if (!v2)
  {
    v9 = type metadata accessor for AppIntentMetricsDefinitions();
    LOBYTE(v13) = 1;
    sub_2408E6140();
    LOBYTE(v13) = *(_BYTE *)(v3 + *(int *)(v9 + 24));
    v15 = 2;
    sub_2408CC76C();
    sub_2408E6164();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 28));
    v11 = *((_BYTE *)v10 + 16);
    v13 = *v10;
    v14 = v11;
    v15 = 3;
    sub_2408CC728();
    sub_2408E6164();
    LOBYTE(v13) = 4;
    sub_2408E6140();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2408D868C()
{
  unint64_t result;

  result = qword_257016368;
  if (!qword_257016368)
  {
    result = MEMORY[0x242684578](&unk_2409209FC, &type metadata for AppIntentMetricsDefinitions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016368);
  }
  return result;
}

uint64_t AppIntentMetricsDefinitions.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD v30[3];
  int *v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  char v39;
  char v40;

  v35 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257016370);
  v4 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AppIntentMetricsDefinitions();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408D868C();
  v36 = v6;
  sub_2408E6254();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v33 = a1;
  v34 = v4;
  v31 = (int *)v7;
  v32 = v9;
  v10 = sub_2408E5624();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v38) = 0;
  sub_240502914(&qword_257001548, MEMORY[0x24BDCE968]);
  v14 = v36;
  v15 = v37;
  sub_2408E60F8();
  v16 = (uint64_t)v32;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v32, v13, v10);
  LOBYTE(v38) = 1;
  v17 = sub_2408E60D4();
  v18 = v34;
  v19 = v31;
  v20 = (uint64_t *)(v16 + v31[5]);
  *v20 = v17;
  v20[1] = v21;
  v40 = 2;
  sub_2408CC898();
  v30[2] = 0;
  sub_2408E60F8();
  v22 = v16;
  *(_BYTE *)(v16 + v19[6]) = v38;
  v40 = 3;
  sub_2408CC7F4();
  sub_2408E60F8();
  v30[1] = v11;
  v23 = v39;
  v24 = v16 + v19[7];
  *(_OWORD *)v24 = v38;
  *(_BYTE *)(v24 + 16) = v23;
  LOBYTE(v38) = 4;
  v25 = sub_2408E60D4();
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v14, v15);
  v28 = (uint64_t *)(v22 + v19[8]);
  *v28 = v25;
  v28[1] = v27;
  sub_2408D8A84(v22, v35);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  return sub_2408D8AC8(v22);
}

uint64_t sub_2408D8A84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppIntentMetricsDefinitions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408D8AC8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppIntentMetricsDefinitions();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408D8B04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppIntentMetricsDefinitions.init(from:)(a1, a2);
}

uint64_t sub_2408D8B18(_QWORD *a1)
{
  return AppIntentMetricsDefinitions.encode(to:)(a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for AppIntentMetricsDefinitions(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2408E5624();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_QWORD *)v15;
    v17 = *((_QWORD *)v15 + 1);
    v18 = v15[16];
    swift_bridgeObjectRetain();
    sub_2403ADAA8(v16, v17, v18);
    *(_QWORD *)v14 = v16;
    *((_QWORD *)v14 + 1) = v17;
    v14[16] = v18;
    v19 = a3[8];
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  sub_2403ADB34(*(_QWORD *)(a1 + *(int *)(a2 + 28)), *(_QWORD *)(a1 + *(int *)(a2 + 28) + 8), *(_BYTE *)(a1 + *(int *)(a2 + 28) + 16));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(_BYTE *)(v14 + 16);
  swift_bridgeObjectRetain();
  sub_2403ADAA8(v15, v16, v17);
  *(_QWORD *)v13 = v15;
  *(_QWORD *)(v13 + 8) = v16;
  *(_BYTE *)(v13 + 16) = v17;
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  v15 = *(_BYTE *)(v12 + 16);
  sub_2403ADAA8(*(_QWORD *)v12, v14, v15);
  v16 = *(_QWORD *)v11;
  v17 = *(_QWORD *)(v11 + 8);
  *(_QWORD *)v11 = v13;
  *(_QWORD *)(v11 + 8) = v14;
  v18 = *(_BYTE *)(v11 + 16);
  *(_BYTE *)(v11 + 16) = v15;
  sub_2403ADB34(v16, v17, v18);
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[7];
  v9 = a3[8];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t assignWithTake for AppIntentMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_BYTE *)(v14 + 16);
  v16 = *(_QWORD *)v13;
  v17 = *(_QWORD *)(v13 + 8);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v18 = *(_BYTE *)(v13 + 16);
  *(_BYTE *)(v13 + 16) = v15;
  sub_2403ADB34(v16, v17, v18);
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppIntentMetricsDefinitions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408D8F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2408E5624();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for AppIntentMetricsDefinitions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408D9020(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2408E5624();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_2408D909C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E5624();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppIntentMetricsDefinitions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2408D9170 + 4 * byte_24092081A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2408D91A4 + 4 * byte_240920815[v4]))();
}

uint64_t sub_2408D91A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D91AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408D91B4);
  return result;
}

uint64_t sub_2408D91C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408D91C8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2408D91CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408D91D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppIntentMetricsDefinitions.CodingKeys()
{
  return &type metadata for AppIntentMetricsDefinitions.CodingKeys;
}

unint64_t sub_2408D91F4()
{
  unint64_t result;

  result = qword_257016418;
  if (!qword_257016418)
  {
    result = MEMORY[0x242684578](&unk_2409209D4, &type metadata for AppIntentMetricsDefinitions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016418);
  }
  return result;
}

unint64_t sub_2408D923C()
{
  unint64_t result;

  result = qword_257016420;
  if (!qword_257016420)
  {
    result = MEMORY[0x242684578](&unk_240920944, &type metadata for AppIntentMetricsDefinitions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016420);
  }
  return result;
}

unint64_t sub_2408D9284()
{
  unint64_t result;

  result = qword_257016428;
  if (!qword_257016428)
  {
    result = MEMORY[0x242684578](&unk_24092096C, &type metadata for AppIntentMetricsDefinitions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016428);
  }
  return result;
}

uint64_t sub_2408D92C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D61745365746164 && a2 == 0xE900000000000070;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465747563657865 && a2 == 0xEE0064496C6F6F54 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024092CBE0 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024092CC00 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73654D726F727265 && a2 == 0xEC00000065676173)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t SampleMetricsProducer.SessionStats.num_sessions.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SampleMetricsProducer.SessionStats.num_requests.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t SampleMetricsProducer.SessionStats.num_events.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_2408D9534()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x757165725F6D756ELL;
  if (*v0 != 1)
    v1 = 0x6E6576655F6D756ELL;
  if (*v0)
    return v1;
  else
    return 0x737365735F6D756ELL;
}

uint64_t sub_2408D95A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2408DA320(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2408D95C8()
{
  sub_2408D9764();
  return sub_2408E6278();
}

uint64_t sub_2408D95F0()
{
  sub_2408D9764();
  return sub_2408E6284();
}

uint64_t SampleMetricsProducer.SessionStats.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257016430);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v10[0] = *(_QWORD *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408D9764();
  sub_2408E626C();
  v13 = 0;
  sub_2408E614C();
  if (!v2)
  {
    v12 = 1;
    sub_2408E614C();
    v11 = 2;
    sub_2408E614C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_2408D9764()
{
  unint64_t result;

  result = qword_257016438;
  if (!qword_257016438)
  {
    result = MEMORY[0x242684578](&unk_240920C8C, &type metadata for SampleMetricsProducer.SessionStats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016438);
  }
  return result;
}

uint64_t SampleMetricsProducer.SessionStats.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257016440);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2408D9764();
  sub_2408E6254();
  if (!v2)
  {
    v16 = 0;
    v9 = sub_2408E60E0();
    v15 = 1;
    v11 = sub_2408E60E0();
    v14 = 2;
    v12 = sub_2408E60E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_2408D991C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SampleMetricsProducer.SessionStats.init(from:)(a1, a2);
}

uint64_t sub_2408D9930(_QWORD *a1)
{
  return SampleMetricsProducer.SessionStats.encode(to:)(a1);
}

uint64_t static SampleMetricsProducer.createSessionStats(sessionView:_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  int64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v47 = a2;
  v3 = type metadata accessor for RequestData(0);
  v58 = *(_QWORD *)(v3 - 8);
  v59 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SessionData(0);
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v51 = (uint64_t)&v44 - v10;
  v45 = type metadata accessor for SessionView(0);
  v46 = a1;
  v11 = *(_QWORD *)(a1 + *(int *)(v45 + 28));
  v12 = *(_QWORD *)(v11 + 64);
  v48 = v11 + 64;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  if (v13 < 64)
    v14 = ~(-1 << v13);
  else
    v14 = -1;
  v15 = v14 & v12;
  v49 = (unint64_t)(v13 + 63) >> 6;
  v54 = v11;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v50 = v9;
  while (2)
  {
    if (!v15)
    {
      v23 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_53;
      if (v23 >= v49)
        goto LABEL_49;
      v24 = *(_QWORD *)(v48 + 8 * v23);
      ++v19;
      if (!v24)
      {
        v19 = v23 + 1;
        if (v23 + 1 >= v49)
          goto LABEL_49;
        v24 = *(_QWORD *)(v48 + 8 * v19);
        if (!v24)
        {
          v19 = v23 + 2;
          if (v23 + 2 >= v49)
            goto LABEL_49;
          v24 = *(_QWORD *)(v48 + 8 * v19);
          if (!v24)
          {
            v19 = v23 + 3;
            if (v23 + 3 >= v49)
              goto LABEL_49;
            v24 = *(_QWORD *)(v48 + 8 * v19);
            if (!v24)
            {
              v25 = v23 + 4;
              if (v25 < v49)
              {
                v24 = *(_QWORD *)(v48 + 8 * v25);
                if (v24)
                {
                  v19 = v25;
                  goto LABEL_23;
                }
                while (1)
                {
                  v19 = v25 + 1;
                  if (__OFADD__(v25, 1))
                    goto LABEL_54;
                  if (v19 >= v49)
                    break;
                  v24 = *(_QWORD *)(v48 + 8 * v19);
                  ++v25;
                  if (v24)
                    goto LABEL_23;
                }
              }
LABEL_49:
              result = swift_release();
              v43 = v47;
              *v47 = *(_QWORD *)(v46 + *(int *)(v45 + 24));
              v43[1] = v18;
              v43[2] = v17;
              return result;
            }
          }
        }
      }
LABEL_23:
      v21 = (v24 - 1) & v24;
      v22 = __clz(__rbit64(v24)) + (v19 << 6);
      goto LABEL_24;
    }
    v20 = __clz(__rbit64(v15));
    v21 = (v15 - 1) & v15;
    v22 = v20 | (v19 << 6);
LABEL_24:
    v26 = v51;
    sub_2403AE1A4(*(_QWORD *)(v54 + 56) + *(_QWORD *)(v52 + 72) * v22, v51, type metadata accessor for SessionData);
    result = sub_2408D9D80(v26, (uint64_t)v9);
    v27 = *(_QWORD *)&v9[*(int *)(v53 + 32)];
    v28 = *(_QWORD *)(v27 + 16);
    v29 = __OFADD__(v18, v28);
    v30 = v18 + v28;
    if (v29)
      goto LABEL_52;
    v55 = v21;
    v56 = v19;
    v57 = v30;
    v31 = v27 + 64;
    v32 = 1 << *(_BYTE *)(v27 + 32);
    if (v32 < 64)
      v33 = ~(-1 << v32);
    else
      v33 = -1;
    v34 = v33 & *(_QWORD *)(v27 + 64);
    v35 = (unint64_t)(v32 + 63) >> 6;
    result = swift_bridgeObjectRetain();
    v36 = 0;
    while (v34)
    {
      v37 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      v38 = v37 | (v36 << 6);
LABEL_30:
      sub_2403AE1A4(*(_QWORD *)(v27 + 56) + *(_QWORD *)(v58 + 72) * v38, (uint64_t)v5, type metadata accessor for RequestData);
      v18 = *(_QWORD *)&v5[*(int *)(v59 + 24)];
      swift_bridgeObjectRetain();
      sub_240388AE4((uint64_t)v5, type metadata accessor for RequestData);
      v39 = *(_QWORD *)(v18 + 16);
      result = swift_bridgeObjectRelease();
      v29 = __OFADD__(v17, v39);
      v17 += v39;
      if (v29)
      {
        __break(1u);
        goto LABEL_49;
      }
    }
    v40 = v36 + 1;
    if (__OFADD__(v36, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v40 >= v35)
      goto LABEL_5;
    v41 = *(_QWORD *)(v31 + 8 * v40);
    ++v36;
    if (v41)
      goto LABEL_47;
    v36 = v40 + 1;
    if (v40 + 1 >= v35)
      goto LABEL_5;
    v41 = *(_QWORD *)(v31 + 8 * v36);
    if (v41)
      goto LABEL_47;
    v36 = v40 + 2;
    if (v40 + 2 >= v35)
      goto LABEL_5;
    v41 = *(_QWORD *)(v31 + 8 * v36);
    if (v41)
      goto LABEL_47;
    v36 = v40 + 3;
    if (v40 + 3 >= v35)
      goto LABEL_5;
    v41 = *(_QWORD *)(v31 + 8 * v36);
    if (v41)
    {
LABEL_47:
      v34 = (v41 - 1) & v41;
      v38 = __clz(__rbit64(v41)) + (v36 << 6);
      goto LABEL_30;
    }
    v42 = v40 + 4;
    if (v42 >= v35)
    {
LABEL_5:
      swift_release();
      v9 = v50;
      result = sub_240388AE4((uint64_t)v50, type metadata accessor for SessionData);
      v19 = v56;
      v18 = v57;
      v15 = v55;
      continue;
    }
    break;
  }
  v41 = *(_QWORD *)(v31 + 8 * v42);
  if (v41)
  {
    v36 = v42;
    goto LABEL_47;
  }
  while (1)
  {
    v36 = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    if (v36 >= v35)
      goto LABEL_5;
    v41 = *(_QWORD *)(v31 + 8 * v36);
    ++v42;
    if (v41)
      goto LABEL_47;
  }
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_2408D9D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

LighthouseDataProcessor::SampleMetricsProducer::DateRange_optional __swiftcall SampleMetricsProducer.DateRange.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  LighthouseDataProcessor::SampleMetricsProducer::DateRange_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2408E608C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t SampleMetricsProducer.DateRange.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x796C6B656577;
  else
    return 0x796C696164;
}

uint64_t sub_2408D9E58(char *a1, char *a2)
{
  return sub_24040C944(*a1, *a2);
}

unint64_t sub_2408D9E68()
{
  unint64_t result;

  result = qword_257016448;
  if (!qword_257016448)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for SampleMetricsProducer.DateRange, &type metadata for SampleMetricsProducer.DateRange);
    atomic_store(result, (unint64_t *)&qword_257016448);
  }
  return result;
}

uint64_t sub_2408D9EAC()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

uint64_t sub_2408D9F24()
{
  sub_2408E5D44();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2408D9F78()
{
  sub_2408E6218();
  sub_2408E5D44();
  swift_bridgeObjectRelease();
  return sub_2408E623C();
}

LighthouseDataProcessor::SampleMetricsProducer::DateRange_optional sub_2408D9FEC(Swift::String *a1)
{
  return SampleMetricsProducer.DateRange.init(rawValue:)(*a1);
}

void sub_2408D9FF8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x796C696164;
  if (*v1)
    v2 = 0x796C6B656577;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

ValueMetadata *type metadata accessor for SampleMetricsProducer()
{
  return &type metadata for SampleMetricsProducer;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SampleMetricsProducer.SessionStats(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SampleMetricsProducer.SessionStats(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SampleMetricsProducer.SessionStats()
{
  return &type metadata for SampleMetricsProducer.SessionStats;
}

uint64_t storeEnumTagSinglePayload for SampleMetricsProducer.DateRange(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2408DA0FC + 4 * byte_240920A55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2408DA130 + 4 * byte_240920A50[v4]))();
}

uint64_t sub_2408DA130(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408DA138(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408DA140);
  return result;
}

uint64_t sub_2408DA14C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408DA154);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2408DA158(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408DA160(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SampleMetricsProducer.DateRange()
{
  return &type metadata for SampleMetricsProducer.DateRange;
}

uint64_t storeEnumTagSinglePayload for SampleMetricsProducer.SessionStats.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2408DA1C8 + 4 * byte_240920A5F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2408DA1FC + 4 * byte_240920A5A[v4]))();
}

uint64_t sub_2408DA1FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408DA204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408DA20CLL);
  return result;
}

uint64_t sub_2408DA218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408DA220);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2408DA224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408DA22C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SampleMetricsProducer.SessionStats.CodingKeys()
{
  return &type metadata for SampleMetricsProducer.SessionStats.CodingKeys;
}

unint64_t sub_2408DA24C()
{
  unint64_t result;

  result = qword_257016450;
  if (!qword_257016450)
  {
    result = MEMORY[0x242684578](&unk_240920C64, &type metadata for SampleMetricsProducer.SessionStats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016450);
  }
  return result;
}

unint64_t sub_2408DA294()
{
  unint64_t result;

  result = qword_257016458;
  if (!qword_257016458)
  {
    result = MEMORY[0x242684578](&unk_240920BD4, &type metadata for SampleMetricsProducer.SessionStats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016458);
  }
  return result;
}

unint64_t sub_2408DA2DC()
{
  unint64_t result;

  result = qword_257016460;
  if (!qword_257016460)
  {
    result = MEMORY[0x242684578](&unk_240920BFC, &type metadata for SampleMetricsProducer.SessionStats.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257016460);
  }
  return result;
}

uint64_t sub_2408DA320(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737365735F6D756ELL && a2 == 0xEC000000736E6F69;
  if (v2 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x757165725F6D756ELL && a2 == 0xEC00000073747365 || (sub_2408E617C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6576655F6D756ELL && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2408E617C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t DataProcessorBookmarkProvider.lastCollectionDate.setter(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32[3];
  uint64_t v33;

  v3 = v1[4];
  v4 = v1[3] & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v4 = HIBYTE(v3) & 0xF;
  if (v4)
  {
    v5 = v1;
    sub_2408E557C();
    v7 = v6;
    if (qword_254355DF0 != -1)
      swift_once();
    v8 = sub_2408E5C48();
    __swift_project_value_buffer(v8, (uint64_t)qword_254356428);
    swift_retain();
    v9 = sub_2408E5C3C();
    v10 = sub_2408E5EA0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v32[0] = v12;
      *(_DWORD *)v11 = 136315394;
      swift_beginAccess();
      v13 = v1[5];
      v14 = v1[6];
      swift_bridgeObjectRetain();
      v33 = sub_2403B3ED0(v13, v14, v32);
      sub_2408E5F3C();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2048;
      v33 = v7;
      sub_2408E5F3C();
      _os_log_impl(&dword_240347000, v9, v10, "Set key %s to %f", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x242684668](v12, -1, -1);
      MEMORY[0x242684668](v11, -1, -1);

      v15 = (void *)v1[2];
      if (v15)
      {
LABEL_8:
        v16 = v15;
        v17 = (void *)sub_2408E5E1C();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v18 = (void *)sub_2408E5CE4();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_setValue_forKey_, v17, v18);

LABEL_19:
        v31 = sub_2408E5624();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(a1, v31);
      }
    }
    else
    {

      swift_release();
      v15 = (void *)v1[2];
      if (v15)
        goto LABEL_8;
    }
    swift_retain_n();
    v25 = sub_2408E5C3C();
    v26 = sub_2408E5EA0();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v33 = v28;
      *(_DWORD *)v27 = 136315138;
      swift_beginAccess();
      v29 = v5[5];
      v30 = v5[6];
      swift_bridgeObjectRetain();
      sub_2403B3ED0(v29, v30, &v33);
      sub_2408E5F3C();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v25, v26, "Fail to set key %s due to empty userdefaults", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242684668](v28, -1, -1);
      MEMORY[0x242684668](v27, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    goto LABEL_19;
  }
  if (qword_254355DF0 != -1)
    swift_once();
  v19 = sub_2408E5C48();
  __swift_project_value_buffer(v19, (uint64_t)qword_254356428);
  v20 = sub_2408E5C3C();
  v21 = sub_2408E5EA0();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_240347000, v20, v21, "Skip userDefault set due to empty identifier", v22, 2u);
    MEMORY[0x242684668](v22, -1, -1);
  }

  v23 = sub_2408E5624();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
}

uint64_t DataProcessorBookmarkProvider.lastCollectionDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  char v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;
  __int128 v42;
  __int128 v43;

  v2 = v1;
  v39 = a1;
  v3 = sub_2408E5624();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2408E55F4();
  v7 = *(void **)(v1 + 16);
  if (v7)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v8 = (void *)sub_2408E5CE4();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v7, sel_valueForKey_, v8);

    if (v9)
    {
      sub_2408E5F54();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v40, 0, sizeof(v40));
    }
    sub_2408B8DF8((uint64_t)v40, (uint64_t)&v42);
    if (*((_QWORD *)&v43 + 1))
    {
      sub_2403ADA38((uint64_t)&v42);
      swift_bridgeObjectRetain();
      v10 = (void *)sub_2408E5CE4();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_doubleForKey_, v10);
      v12 = v11;

      if (qword_254355DF0 != -1)
        swift_once();
      v37 = v4;
      v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
      v13 = sub_2408E5C48();
      __swift_project_value_buffer(v13, (uint64_t)qword_254356428);
      swift_retain();
      v14 = sub_2408E5C3C();
      v15 = sub_2408E5EA0();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = swift_slowAlloc();
        v17 = swift_slowAlloc();
        *(_QWORD *)&v42 = v17;
        *(_DWORD *)v16 = 136315394;
        v18 = *(_QWORD *)(v2 + 40);
        v19 = *(_QWORD *)(v2 + 48);
        swift_bridgeObjectRetain();
        *(_QWORD *)&v40[0] = sub_2403B3ED0(v18, v19, (uint64_t *)&v42);
        sub_2408E5F3C();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2048;
        *(_QWORD *)&v40[0] = v12;
        sub_2408E5F3C();
        _os_log_impl(&dword_240347000, v14, v15, "The userdefault has key %s with the value %f", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x242684668](v17, -1, -1);
        MEMORY[0x242684668](v16, -1, -1);

      }
      else
      {

        v20 = swift_release();
      }
      MEMORY[0x24BDAC7A8](v20);
      sub_2408E5570();
      sub_2408DB254();
      v31 = v38;
      v32 = sub_2408E5CCC();
      v33 = v37;
      if ((v32 & 1) != 0)
        v34 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
      else
        v34 = v31;
      (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v39, v34, v3);
      v35 = *(void (**)(char *, uint64_t))(v33 + 8);
      v35((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
      return ((uint64_t (*)(char *, uint64_t))v35)(v31, v3);
    }
  }
  else
  {
    v42 = 0u;
    v43 = 0u;
  }
  sub_2403ADA38((uint64_t)&v42);
  if (qword_254355DF0 != -1)
    swift_once();
  v21 = sub_2408E5C48();
  __swift_project_value_buffer(v21, (uint64_t)qword_254356428);
  swift_retain();
  v22 = sub_2408E5C3C();
  v23 = sub_2408E5EA0();
  if (os_log_type_enabled(v22, v23))
  {
    v38 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    *(_QWORD *)&v40[0] = v25;
    v37 = v4;
    *(_DWORD *)v24 = 136315138;
    swift_beginAccess();
    v26 = v3;
    v28 = *(_QWORD *)(v2 + 40);
    v27 = *(_QWORD *)(v2 + 48);
    swift_bridgeObjectRetain();
    v29 = v28;
    v3 = v26;
    v41 = sub_2403B3ED0(v29, v27, (uint64_t *)v40);
    v4 = v37;
    sub_2408E5F3C();
    swift_release();
    v6 = v38;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_240347000, v22, v23, "The userdefault contained no value for %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v25, -1, -1);
    MEMORY[0x242684668](v24, -1, -1);

  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v39, v6, v3);
}

uint64_t DataProcessorBookmarkProvider.__allocating_init(streamIdentifier:domain:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  DataProcessorBookmarkProvider.init(streamIdentifier:domain:)(a1, a2);
  return v4;
}

unint64_t static DataProcessorBookmarkProvider.sharedDomain.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t DataProcessorBookmarkProvider.userDefaultsKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *DataProcessorBookmarkProvider.init(streamIdentifier:domain:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  id v6;
  void *v7;
  id v8;

  v3 = v2;
  v6 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v7 = (void *)sub_2408E5CE4();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithSuiteName_, v7);

  v3[2] = v8;
  v3[3] = a1;
  v3[4] = a2;
  swift_bridgeObjectRetain();
  sub_2408E5D50();
  v3[5] = a1;
  v3[6] = a2;
  return v3;
}

uint64_t sub_2408DB044(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_2408E5624();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return DataProcessorBookmarkProvider.lastCollectionDate.setter((uint64_t)v4);
}

void (*DataProcessorBookmarkProvider.lastCollectionDate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_2408E5624();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v3[2] = v5;
  v3[3] = v6;
  v7 = malloc(v6);
  v3[4] = v7;
  DataProcessorBookmarkProvider.lastCollectionDate.getter((uint64_t)v7);
  return sub_2408DB134;
}

void sub_2408DB134(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v4 = v2[2];
    v5 = v2[1];
    MEMORY[0x24BDAC7A8](a1);
    v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, void *, uint64_t))(v4 + 16))(v7, v3, v5);
    DataProcessorBookmarkProvider.lastCollectionDate.setter((uint64_t)v7);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    DataProcessorBookmarkProvider.lastCollectionDate.setter(*(_QWORD *)(*(_QWORD *)a1 + 32));
  }
  free(v3);
  free(v2);
}

uint64_t DataProcessorBookmarkProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DataProcessorBookmarkProvider.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_2408DB254()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254356318;
  if (!qword_254356318)
  {
    v1 = sub_2408E5624();
    result = MEMORY[0x242684578](MEMORY[0x24BDCE940], v1);
    atomic_store(result, (unint64_t *)&qword_254356318);
  }
  return result;
}

uint64_t sub_2408DB29C@<X0>(uint64_t a1@<X8>)
{
  return DataProcessorBookmarkProvider.lastCollectionDate.getter(a1);
}

uint64_t type metadata accessor for DataProcessorBookmarkProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for DataProcessorBookmarkProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DataProcessorBookmarkProvider.__allocating_init(streamIdentifier:domain:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

id sub_2408DB2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F80);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v19 - v8;
  sub_2408DB4B0(a1, (uint64_t)&v19 - v8);
  v10 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v12 = v11(v9, 1, v10);
  sub_2408DB4F8((uint64_t)v9);
  v13 = 0;
  if (v12 != 1)
  {
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94FA8]), sel_init);
    if (v13)
    {
      sub_2408DB4B0(a1, (uint64_t)v7);
      if (v11(v7, 1, v10) == 1)
      {
        v14 = v13;
        sub_2408DB4F8((uint64_t)v7);
        v15 = 0;
      }
      else
      {
        v16 = v13;
        swift_bridgeObjectRetain();
        sub_2408DB538((uint64_t)v7);
        v15 = (void *)sub_2408E5CE4();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v13, sel_setTextQuery_, v15);

      objc_msgSend(v13, sel_setLinkId_, a2);
      v17 = objc_msgSend(v13, sel_linkId);
    }
  }
  return v13;
}

uint64_t sub_2408DB4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408DB4F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408DB538(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408DB574(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257016468);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_2403A97FC(a1, &qword_257016468);
    sub_2403AA738(a2, (uint64_t)v8);
    v13 = sub_2408E5AB0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_2403A97FC((uint64_t)v8, &qword_257016468);
  }
  else
  {
    sub_2403A91CC(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_2403AC6C8((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_2408E5AB0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

_QWORD *IntelligenceFlowTelemetryLatencyCalculator.__allocating_init()()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;

  v0 = (_QWORD *)swift_allocObject();
  v1 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v0[2] = sub_2403A8CFC(MEMORY[0x24BEE4AF8]);
  v2 = sub_2403A8DF8(v1);
  v3 = MEMORY[0x24BEE4B08];
  v0[3] = v2;
  v0[4] = v3;
  v0[5] = 0;
  return v0;
}

void (*sub_2408DB750(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2408DFA10(v4, a2);
  return sub_2408DB79C;
}

void sub_2408DB79C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t (*sub_2408DB7CC(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_2408DFAC8(v6, a2, a3);
  return sub_2408DB838;
}

uint64_t (*sub_2408DB83C(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_2408DFB5C(v6, a2, a3);
  return sub_2408DB838;
}

void sub_2408DB8A8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_2408DB8E0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2408DB93C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2408DB970(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2408DB9B4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2408DB9F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2408DBA4C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2408DBA80(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2408DBAC4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2408DBB00(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2408DBB5C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2408DBB90(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2408DBBD4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2408DBC14()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_2408DBC44(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*sub_2408DBC80())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *IntelligenceFlowTelemetryLatencyCalculator.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v0[2] = sub_2403A8CFC(MEMORY[0x24BEE4AF8]);
  v2 = sub_2403A8DF8(v1);
  v3 = MEMORY[0x24BEE4B08];
  v0[3] = v2;
  v0[4] = v3;
  v0[5] = 0;
  return v0;
}

uint64_t sub_2408DBD04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v2 = sub_2408E5B10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for RequestData(0);
  v7 = *(_QWORD *)(a1 + *(int *)(result + 28) + 8);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = v7 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    swift_bridgeObjectRetain();
    do
    {
      v11(v5, v9, v2);
      sub_2408DBDF4((uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v9 += v10;
      --v8;
    }
    while (v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2408DBDF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  char *v108;
  uint8_t *v109;
  uint8_t *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  int v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  os_log_t v144;
  _QWORD *v145;
  void (*v146)(char *, uint64_t, uint64_t);
  char *v147;
  uint64_t v148;
  char *v149;
  NSObject *v150;
  _BOOL4 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  int v157;
  char *v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(char *, _QWORD);
  uint64_t v164;
  os_log_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  unint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(char *, _QWORD);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char v183;
  char v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  os_log_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void (*v196)(uint64_t, uint64_t, uint64_t);
  uint64_t v197;
  void (**v198)(char *, uint64_t, uint64_t);
  os_log_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  uint64_t v204;
  char *v205;
  void (**v206)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  unint64_t v213;
  char v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  char v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  void (*v224)(char *, uint64_t, uint64_t, uint64_t);
  char *v225;
  char *v226;
  uint64_t v227;
  void (*v228)(char *, uint64_t, uint64_t, uint64_t);
  int v229;
  int v230;
  void (*v231)(void);
  uint64_t v232;
  void (*v233)(void);
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  char isUniquelyReferenced_nonNull_native;
  char *v242;
  void (*v243)(char *, uint64_t, uint64_t, uint64_t);
  void (**v244)(char *, uint64_t, uint64_t, uint64_t);
  char *v245;
  uint64_t v246;
  uint64_t v247;
  _DWORD *v248;
  char *v249;
  uint64_t v250;
  char *v251;
  NSObject *v252;
  int v253;
  uint64_t v254;
  uint64_t v255;
  unint64_t v256;
  char *v257;
  int v258;
  uint64_t v259;
  unint64_t v260;
  void (*v261)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  void (*v266)(char *, uint64_t, uint64_t, uint64_t);
  int v267;
  int v268;
  char *v269;
  uint64_t v270;
  char *v271;
  void (*v272)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v273;
  uint64_t v274;
  void (*v275)(char *, uint64_t, uint64_t);
  void (*v276)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v277;
  uint64_t v278;
  uint64_t (*v279)();
  void (*v280)(_QWORD *);
  _QWORD *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  NSObject *v286;
  int v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  unint64_t v291;
  char *v292;
  uint64_t v293;
  int v294;
  uint64_t v295;
  unint64_t v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  void (*v302)(char *, uint64_t, uint64_t, uint64_t);
  int v303;
  char *v304;
  char *v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  int *v310;
  uint64_t v311;
  unint64_t v312;
  double v313;
  uint64_t v314;
  uint64_t (*v315)();
  void (*v316)(_QWORD *);
  _QWORD *v317;
  uint64_t v318;
  uint64_t v319;
  void (*v320)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  char *v325;
  NSObject *v326;
  int v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  unint64_t v331;
  char *v332;
  int v333;
  uint64_t v334;
  uint64_t v335;
  unint64_t v336;
  uint64_t v337;
  os_log_t v338;
  uint64_t v339;
  int v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  char v350;
  void (*v351)(_QWORD, _QWORD);
  char *v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  NSObject *v356;
  int v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  char *v362;
  int v363;
  uint64_t v364;
  uint64_t *v365;
  uint64_t v366;
  void (**v367)(char *, uint64_t, uint64_t, uint64_t);
  void (*v368)(char *, uint64_t);
  char *v369;
  uint64_t v370;
  uint64_t v371;
  unint64_t v372;
  unint64_t v373;
  char *v374;
  uint64_t v375;
  unint64_t v376;
  void (*v377)(char *, uint64_t);
  char *v378;
  uint64_t v379;
  int v380;
  uint64_t v381;
  unint64_t v382;
  char *v383;
  uint64_t v384;
  void (**v385)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v386;
  unint64_t v387;
  os_log_t v388;
  char *v389;
  void (*v390)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v391;
  uint64_t v392;
  os_log_t v393;
  void (*v394)(char *, uint64_t, uint64_t);
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  char *v398;
  char *v399;
  char *v400;
  char *v401;
  char *v402;
  char *v403;
  uint64_t v404;
  char *v405;
  uint64_t v406;
  char *v407;
  char *v408;
  char *v409;
  char *v410;
  char *v411;
  char *v412;
  char *v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  char *v417;
  char *v418;
  char *v419;
  char *v420;
  char *v421;
  char *v422;
  char *v423;
  uint64_t v424;
  char *v425;
  uint64_t v426;
  char *v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  char *v431;
  char *v432;
  char *v433;
  char *v434;
  char *v435;
  uint64_t v436;
  char *v437;
  uint64_t v438;
  uint64_t v439;
  char *v440;
  char *v441;
  uint64_t v442;
  char *v443;
  os_log_t v444;
  unint64_t v445;
  char *v446;
  char *v447;
  char *v448;
  uint64_t v449;
  char *v450;
  uint64_t v451;
  void (**v452)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v453;
  uint64_t v454;
  _QWORD *v455;
  os_log_t v456;
  void (*v457)(char *, uint64_t, uint64_t, uint64_t);
  char *v458;
  uint64_t v459;
  uint64_t v460;
  void (*v461)(_QWORD, _QWORD);
  char *v462;
  char *v463;
  uint64_t v464;
  uint64_t v465;
  unint64_t v466;
  unsigned __int8 v467;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570016F8);
  MEMORY[0x24BDAC7A8](v2);
  v419 = (char *)&v391 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v428 = sub_2408E5B94();
  v426 = *(_QWORD *)(v428 - 8);
  MEMORY[0x24BDAC7A8](v428);
  v425 = (char *)&v391 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257016468);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v404 = (uint64_t)&v391 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v415 = (uint64_t)&v391 - v8;
  v424 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  v414 = *(_QWORD *)(v424 - 8);
  v9 = MEMORY[0x24BDAC7A8](v424);
  v417 = (char *)&v391 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v408 = (char *)&v391 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v400 = (char *)&v391 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v406 = (uint64_t)&v391 - v15;
  v454 = sub_2408E5BA0();
  v452 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v454 - 8);
  v16 = MEMORY[0x24BDAC7A8](v454);
  v410 = (char *)&v391 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v423 = (char *)&v391 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v427 = (char *)&v391 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v411 = (char *)&v391 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v420 = (char *)&v391 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v391 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26);
  v407 = (char *)&v391 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v412 = (char *)&v391 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v421 = (char *)&v391 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v398 = (char *)&v391 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v401 = (char *)&v391 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v405 = (char *)&v391 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v432 = (char *)&v391 - v41;
  v451 = sub_2408E5AB0();
  v453 = *(_QWORD *)(v451 - 8);
  v42 = MEMORY[0x24BDAC7A8](v451);
  v418 = (char *)&v391 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v416 = (char *)&v391 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v413 = (char *)&v391 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v399 = (char *)&v391 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v403 = (char *)&v391 - v51;
  MEMORY[0x24BDAC7A8](v50);
  v433 = (uint64_t)&v391 - v52;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_257016470);
  v54 = MEMORY[0x24BDAC7A8](v53);
  v445 = (unint64_t)&v391 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v54);
  v435 = (char *)&v391 - v56;
  v57 = sub_2408E5B10();
  v455 = *(_QWORD **)(v57 - 8);
  v58 = MEMORY[0x24BDAC7A8](v57);
  v422 = (char *)&v391 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = MEMORY[0x24BDAC7A8](v58);
  v458 = (char *)&v391 - v61;
  v62 = MEMORY[0x24BDAC7A8](v60);
  v456 = (os_log_t)((char *)&v391 - v63);
  MEMORY[0x24BDAC7A8](v62);
  v448 = (char *)&v391 - v64;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_257002098);
  v66 = MEMORY[0x24BDAC7A8](v65);
  v409 = (char *)&v391 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = MEMORY[0x24BDAC7A8](v66);
  v434 = (char *)&v391 - v69;
  v70 = MEMORY[0x24BDAC7A8](v68);
  v441 = (char *)&v391 - v71;
  MEMORY[0x24BDAC7A8](v70);
  v457 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v391 - v72);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570020A0);
  v74 = MEMORY[0x24BDAC7A8](v73);
  v402 = (char *)&v391 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = MEMORY[0x24BDAC7A8](v74);
  v431 = (char *)&v391 - v77;
  v78 = MEMORY[0x24BDAC7A8](v76);
  v430 = (char *)&v391 - v79;
  MEMORY[0x24BDAC7A8](v78);
  v440 = (char *)&v391 - v80;
  v439 = sub_2408E5BB8();
  v438 = *(_QWORD *)(v439 - 8);
  MEMORY[0x24BDAC7A8](v439);
  v437 = (char *)&v391 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  v442 = __swift_instantiateConcreteTypeFromMangledName(&qword_257016478);
  v82 = MEMORY[0x24BDAC7A8](v442);
  v444 = (os_log_t)((char *)&v391 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84 = MEMORY[0x24BDAC7A8](v82);
  v436 = (uint64_t)&v391 - v85;
  MEMORY[0x24BDAC7A8](v84);
  v462 = (char *)&v391 - v86;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
  MEMORY[0x24BDAC7A8](v87);
  v89 = (char *)&v391 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  v460 = sub_2408E5BE8();
  v459 = *(_QWORD *)(v460 - 8);
  v90 = MEMORY[0x24BDAC7A8](v460);
  v443 = (char *)&v391 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = MEMORY[0x24BDAC7A8](v90);
  v446 = (char *)&v391 - v93;
  MEMORY[0x24BDAC7A8](v92);
  v463 = (char *)&v391 - v94;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_257016480);
  MEMORY[0x24BDAC7A8](v95);
  v97 = (char *)&v391 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_2408E5AF8();
  v99 = *(_QWORD *)(v98 - 8);
  v100 = MEMORY[0x24BDAC7A8](v98);
  v447 = (char *)&v391 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v100);
  v103 = (char *)&v391 - v102;
  if (qword_256FFA0A8 != -1)
    swift_once();
  v104 = sub_2408E5C48();
  v449 = __swift_project_value_buffer(v104, (uint64_t)qword_257072498);
  v105 = sub_2408E5C3C();
  v106 = sub_2408E5EA0();
  if (os_log_type_enabled(v105, v106))
  {
    v107 = (uint8_t *)swift_slowAlloc();
    v450 = v28;
    v461 = (void (*)(_QWORD, _QWORD))v57;
    v108 = v89;
    v109 = v107;
    *(_WORD *)v107 = 0;
    _os_log_impl(&dword_240347000, v105, v106, "IF Telemetry Event", v107, 2u);
    v110 = v109;
    v89 = v108;
    v57 = (uint64_t)v461;
    v28 = v450;
    MEMORY[0x242684668](v110, -1, -1);
  }

  sub_2408E5B04();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v103, v97, v98);
    sub_2408E5ABC();
    v113 = sub_2408E5BDC();
    v114 = *(_QWORD *)(v113 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v89, 1, v113) == 1)
    {
      sub_2403A97FC((uint64_t)v89, &qword_256FFCDA8);
      return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v103, v98);
    }
    v450 = v28;
    v397 = a1;
    v116 = v446;
    sub_2408E5BD0();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v89, v113);
    v117 = v459;
    v118 = v460;
    (*(void (**)(char *, char *, uint64_t))(v459 + 32))(v463, v116, v460);
    v452[7](v462, 1, 1, v454);
    v119 = v447;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v447, v103, v98);
    if ((*(unsigned int (**)(char *, uint64_t))(v99 + 88))(v119, v98) == *MEMORY[0x24BE58768])
    {
      (*(void (**)(char *, uint64_t))(v99 + 96))(v119, v98);
      v120 = v117;
      v121 = v438;
      v122 = v437;
      v123 = v439;
      (*(void (**)(char *, char *, uint64_t))(v438 + 32))(v437, v119, v439);
      v124 = v436;
      sub_2408E5BAC();
      v125 = *(void (**)(char *, uint64_t))(v121 + 8);
      v117 = v120;
      v126 = (uint64_t)v462;
      v125(v122, v123);
      sub_2408E0654(v124, v126);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v99 + 8))(v119, v98);
    }
    v127 = v443;
    v466 = 0;
    v467 = 1;
    (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v443, v463, v118);
    if ((*(unsigned int (**)(char *, uint64_t))(v117 + 88))(v127, v118) == *MEMORY[0x24BE59C58])
    {
      (*(void (**)(char *, uint64_t))(v117 + 96))(v127, v118);
      v128 = *(_QWORD *)v127;
      v129 = v103;
      v130 = *(_QWORD *)(v128 + 16);
      swift_release();
      v466 = v130;
      v103 = v129;
      v467 = 0;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v117 + 8))(v127, v118);
    }
    sub_2408E5AEC();
    v131 = (uint64_t)v457;
    v132 = sub_2408E5AE0();
    v133 = *(char **)(v132 - 8);
    v446 = (char *)*((_QWORD *)v133 + 6);
    v134 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v446)(v131, 1, v132);
    v447 = (char *)v132;
    v395 = v98;
    v396 = v99;
    v443 = v133;
    if (v134 == 1)
    {
      sub_2403A97FC(v131, &qword_257002098);
      v436 = 0;
      LODWORD(v457) = 1;
    }
    else
    {
      v135 = v57;
      v136 = v103;
      v137 = (uint64_t)v440;
      sub_2408E5AD4();
      (*((void (**)(uint64_t, uint64_t))v133 + 1))(v131, v132);
      v138 = sub_2408E5B40();
      v139 = *(_QWORD *)(v138 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48))(v137, 1, v138) == 1)
      {
        sub_2403A97FC(v137, &qword_2570020A0);
        v436 = 0;
        LODWORD(v457) = 1;
      }
      else
      {
        v140 = sub_2408E5B34();
        v142 = v141;
        (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v137, v138);
        LODWORD(v457) = v142 & 1;
        if ((v142 & 1) != 0)
          v143 = 0;
        else
          v143 = v140;
        v436 = v143;
      }
      v103 = v136;
      v117 = v459;
      v57 = v135;
    }
    v144 = v456;
    v145 = v455;
    v146 = (void (*)(char *, uint64_t, uint64_t))v455[2];
    v147 = v448;
    v148 = v397;
    v146(v448, v397, v57);
    v146((char *)v144, v148, v57);
    v149 = v458;
    v146(v458, v148, v57);
    v439 = v466;
    LODWORD(v438) = v467;
    v150 = sub_2408E5C3C();
    LODWORD(v440) = sub_2408E5EA0();
    v151 = os_log_type_enabled(v150, (os_log_type_t)v440);
    v461 = (void (*)(_QWORD, _QWORD))v57;
    v394 = (void (*)(char *, uint64_t, void (*)(_QWORD, _QWORD)))v146;
    if (v151)
    {
      v393 = v150;
      v437 = v103;
      v152 = 7104878;
      v153 = swift_slowAlloc();
      v154 = swift_slowAlloc();
      v465 = v154;
      *(_DWORD *)v153 = 136316162;
      v155 = (uint64_t)v441;
      sub_2408E5AEC();
      v156 = v447;
      v157 = ((uint64_t (*)(uint64_t, uint64_t, char *))v446)(v155, 1, v447);
      v158 = v147;
      v392 = v154;
      if (v157 == 1)
      {
        sub_2403A97FC(v155, &qword_257002098);
        v159 = 0xE300000000000000;
        v160 = 7104878;
        v161 = (uint64_t)v435;
        v162 = (uint64_t)v434;
      }
      else
      {
        v169 = (uint64_t)v430;
        sub_2408E5AD4();
        (*((void (**)(uint64_t, char *))v443 + 1))(v155, v156);
        v170 = sub_2408E5B40();
        v171 = *(_QWORD *)(v170 - 8);
        v172 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + 48))(v169, 1, v170);
        v161 = (uint64_t)v435;
        v162 = (uint64_t)v434;
        if (v172 == 1)
        {
          sub_2403A97FC(v169, &qword_2570020A0);
          v159 = 0xE300000000000000;
          v160 = 7104878;
        }
        else
        {
          v160 = sub_2408E5B1C();
          v159 = v173;
          (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v169, v170);
        }
      }
      v167 = (uint64_t)v462;
      v464 = sub_2403B3ED0(v160, v159, &v465);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      v163 = (void (*)(char *, _QWORD))v455[1];
      v163(v158, v461);
      *(_WORD *)(v153 + 12) = 2048;
      sub_2408E5AEC();
      v174 = v447;
      if (((unsigned int (*)(uint64_t, uint64_t, char *))v446)(v162, 1, v447) == 1)
      {
        sub_2403A97FC(v162, &qword_257002098);
        v175 = 0;
        v176 = v451;
        v117 = v459;
      }
      else
      {
        v177 = (void (*)(_QWORD, _QWORD))v163;
        v178 = (uint64_t)v431;
        sub_2408E5AD4();
        (*((void (**)(uint64_t, char *))v443 + 1))(v162, v174);
        v179 = sub_2408E5B40();
        v180 = *(_QWORD *)(v179 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48))(v178, 1, v179) == 1)
        {
          sub_2403A97FC(v178, &qword_2570020A0);
          v175 = 0;
        }
        else
        {
          v181 = sub_2408E5B34();
          v182 = v178;
          v184 = v183;
          (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v182, v179);
          if ((v184 & 1) != 0)
            v175 = 0;
          else
            v175 = v181;
        }
        v167 = (uint64_t)v462;
        v117 = v459;
        v163 = (void (*)(char *, _QWORD))v177;
        v176 = v451;
      }
      v168 = (char)v457;
      v163((char *)v456, v461);
      v464 = v175;
      sub_2408E5F3C();
      *(_WORD *)(v153 + 22) = 2080;
      sub_2408E5AC8();
      v185 = v453;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v453 + 48))(v161, 1, v176) == 1)
      {
        sub_2403A97FC(v161, &qword_257016470);
        v186 = 0xE300000000000000;
      }
      else
      {
        v152 = sub_2408E5AA4();
        v186 = v187;
        (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v161, v176);
      }
      v464 = sub_2403B3ED0(v152, v186, &v465);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      v163(v458, v461);
      *(_WORD *)(v153 + 32) = 2080;
      swift_beginAccess();
      v188 = sub_2408E5F18();
      v464 = sub_2403B3ED0(v188, v189, &v465);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      *(_WORD *)(v153 + 42) = 2048;
      v190 = v439;
      if ((_DWORD)v438)
        v190 = 0;
      v464 = v190;
      sub_2408E5F3C();
      v191 = v393;
      _os_log_impl(&dword_240347000, v393, (os_log_type_t)v440, "IF Telemetry Event -\n    clientRequestId: %s,\n    spanId: %llu\n    Target: %s,\n    state: %s,\n    with suspending timestamp: %llu,", (uint8_t *)v153, 0x34u);
      v192 = v392;
      swift_arrayDestroy();
      MEMORY[0x242684668](v192, -1, -1);
      MEMORY[0x242684668](v153, -1, -1);

      v166 = v460;
      v103 = v437;
      v164 = v445;
      v165 = v444;
    }
    else
    {
      v163 = (void (*)(char *, _QWORD))v145[1];
      v163((char *)v144, v57);
      v163(v147, v57);
      v163(v149, v57);

      v164 = v445;
      v165 = v444;
      v166 = v460;
      v167 = (uint64_t)v462;
      v168 = (char)v457;
    }
    v193 = v395;
    if ((v168 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v117 + 8))(v463, v166);
      (*(void (**)(char *, uint64_t))(v396 + 8))(v103, v193);
LABEL_49:
      v111 = &qword_257016478;
      v112 = v167;
      return sub_2403A97FC(v112, v111);
    }
    sub_2408E5AC8();
    v194 = v453;
    v195 = v451;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v453 + 48))(v164, 1, v451) == 1)
    {
      (*(void (**)(char *, uint64_t))(v117 + 8))(v463, v460);
      (*(void (**)(char *, uint64_t))(v396 + 8))(v103, v193);
      sub_2403A97FC(v164, &qword_257016470);
      goto LABEL_49;
    }
    v196 = *(void (**)(uint64_t, uint64_t, uint64_t))(v194 + 32);
    v197 = v433;
    v196(v433, v164, v195);
    swift_beginAccess();
    sub_2403A9210(v167, (uint64_t)v165, &qword_257016478);
    v198 = (void (**)(char *, uint64_t, uint64_t))v452;
    v199 = v165;
    v200 = v167;
    v201 = (uint64_t)v165;
    v202 = v454;
    v203 = ((uint64_t (*)(os_log_t, uint64_t, uint64_t))v452[6])(v199, 1, v454);
    v204 = v396;
    if (v203 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v453 + 8))(v197, v195);
      (*(void (**)(char *, uint64_t))(v459 + 8))(v463, v460);
      (*(void (**)(char *, uint64_t))(v204 + 8))(v103, v193);
      sub_2403A97FC(v201, &qword_257016478);
      v112 = v200;
      v111 = &qword_257016478;
      return sub_2403A97FC(v112, v111);
    }
    v437 = v103;
    v205 = v432;
    v198[4](v432, v201, v202);
    swift_beginAccess();
    v206 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v198;
    if (v467 == 1)
    {
      ((void (*)(char *, uint64_t))v198[1])(v205, v202);
      (*(void (**)(uint64_t, uint64_t))(v453 + 8))(v197, v451);
      (*(void (**)(char *, uint64_t))(v459 + 8))(v463, v460);
      (*(void (**)(char *, uint64_t))(v396 + 8))(v437, v193);
      v111 = &qword_257016478;
      v112 = v200;
      return sub_2403A97FC(v112, v111);
    }
    v207 = v466;
    v208 = v429;
    v209 = (uint64_t *)(v429 + 16);
    swift_beginAccess();
    v210 = *(_QWORD *)(v208 + 16);
    v211 = *(_QWORD *)(v210 + 16);
    v455 = v163;
    v445 = v207;
    if (!v211 || (sub_240509F54(v436), (v212 & 1) == 0))
    {
      v224 = v206[2];
      v225 = v450;
      v226 = v432;
      v227 = v454;
      ((void (*)(char *, char *, uint64_t))v224)(v450, v432, v454);
      v228 = v206[11];
      v229 = ((uint64_t (*)(char *, uint64_t))v228)(v225, v227);
      v230 = *MEMORY[0x24BE59908];
      v231 = *(void (**)(void))(v453 + 16);
      v448 = (char *)v231;
      if (v229 != v230)
      {
        LODWORD(v456) = v230;
        v249 = v416;
        v250 = v451;
        ((void (*)(char *, char *, uint64_t))v231)(v416, (char *)v433, v451);
        v251 = v420;
        ((void (*)(char *, char *, uint64_t))v224)(v420, v226, v227);
        v252 = sub_2408E5C3C();
        v253 = sub_2408E5EAC();
        if (os_log_type_enabled(v252, (os_log_type_t)v253))
        {
          LODWORD(v444) = v253;
          v254 = swift_slowAlloc();
          v442 = swift_slowAlloc();
          v465 = v442;
          *(_DWORD *)v254 = 136315650;
          v255 = sub_2408E5AA4();
          v464 = sub_2403B3ED0(v255, v256, &v465);
          sub_2408E5F3C();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v453 + 8))(v249, v451);
          *(_WORD *)(v254 + 12) = 2048;
          v464 = v436;
          sub_2408E5F3C();
          *(_WORD *)(v254 + 22) = 2080;
          v257 = v411;
          ((void (*)(char *, char *, uint64_t))v224)(v411, v251, v227);
          v458 = (char *)v228;
          v258 = ((uint64_t (*)(char *, uint64_t))v228)(v257, v227);
          v245 = v427;
          v457 = v224;
          if (v258 == (_DWORD)v456)
          {
            v259 = 0x64657472617473;
            v260 = 0xE700000000000000;
          }
          else if (v258 == *MEMORY[0x24BE598F8])
          {
            v259 = 0x6465646E65;
            v260 = 0xE500000000000000;
          }
          else
          {
            if (v258 == *MEMORY[0x24BE59900])
              v259 = 0x64656C696166;
            else
              v259 = 0x6E776F6E6B6E75;
            if (v258 == *MEMORY[0x24BE59900])
              v260 = 0xE600000000000000;
            else
              v260 = 0xE700000000000000;
          }
          v320 = v452[1];
          ((void (*)(char *, uint64_t))v320)(v257, v227);
          v321 = v259;
          v244 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v320;
          v464 = sub_2403B3ED0(v321, v260, &v465);
          sub_2408E5F3C();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v320)(v420, v227);
          _os_log_impl(&dword_240347000, v252, (os_log_type_t)v444, "Unexpected IF telemetry event before begin event for %s, span: %llu, stateInfo: %s", (uint8_t *)v254, 0x20u);
          v322 = v442;
          swift_arrayDestroy();
          MEMORY[0x242684668](v322, -1, -1);
          MEMORY[0x242684668](v254, -1, -1);

          v224 = v457;
          v243 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v458;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v453 + 8))(v249, v250);
          v244 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v452[1];
          ((void (*)(char *, uint64_t))v244)(v251, v227);

          v245 = v427;
          v243 = v228;
        }
        v248 = (_DWORD *)MEMORY[0x24BE59900];
        ((void (*)(char *, uint64_t))v244)(v450, v227);
        v242 = v432;
        v246 = v428;
        v247 = v396;
        goto LABEL_107;
      }
      v458 = (char *)v228;
      v232 = (uint64_t)v417;
      LODWORD(v456) = v229;
      v233 = v231;
      ((void (*)(char *, char *, uint64_t))v231)(v417, (char *)v433, v451);
      v234 = v424;
      ((void (*)(uint64_t, char *, uint64_t))v224)(v232 + *(int *)(v424 + 28), v226, v227);
      *(_QWORD *)(v232 + *(int *)(v234 + 20)) = v207;
      *(_QWORD *)(v232 + *(int *)(v234 + 24)) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257016488);
      v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA558);
      v236 = *(unsigned __int8 *)(*(_QWORD *)(v235 - 8) + 80);
      v237 = (v236 + 32) & ~v236;
      v238 = swift_allocObject();
      *(_OWORD *)(v238 + 16) = xmmword_2408EADA0;
      v239 = v238 + v237 + *(int *)(v235 + 48);
      v233();
      sub_2408E0400(v232, v239);
      v240 = sub_2403A8894(v238);
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v464 = *v209;
      *v209 = 0x8000000000000000;
      sub_2403AC590(v240, v436, isUniquelyReferenced_nonNull_native);
      v242 = v432;
      *v209 = v464;
      swift_bridgeObjectRelease();
      swift_endAccess();
      v243 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v458;
      sub_2408E0444(v232);
      v244 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v452[1];
      ((void (*)(char *, uint64_t))v244)(v225, v227);
      v245 = v427;
      v246 = v428;
      v247 = v396;
      goto LABEL_63;
    }
    v213 = sub_240509F54(v436);
    if ((v214 & 1) == 0 || (v215 = *(_QWORD *)(*(_QWORD *)(v210 + 56) + 8 * v213), !*(_QWORD *)(v215 + 16)))
    {
      v261 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v414 + 56);
      v220 = v415;
      v261(v415, 1, 1, v424);
      v262 = v432;
      v263 = v453;
LABEL_68:
      sub_2403A97FC(v220, &qword_257016468);
      v224 = v206[2];
      v264 = v421;
      v265 = v454;
      ((void (*)(char *, char *, uint64_t))v224)(v421, v262, v454);
      v266 = v206[11];
      v267 = ((uint64_t (*)(char *, uint64_t))v266)(v264, v265);
      v268 = *MEMORY[0x24BE59908];
      v269 = *(char **)(v263 + 16);
      v270 = v433;
      v271 = v413;
      v458 = (char *)v266;
      v448 = v269;
      if (v267 == v268)
      {
        v272 = v261;
        LODWORD(v456) = v267;
        v273 = (uint64_t)v408;
        v274 = v451;
        v275 = (void (*)(char *, uint64_t, uint64_t))v269;
        ((void (*)(char *, char *, uint64_t))v269)(v408, (char *)v433, v451);
        v276 = v224;
        v277 = v424;
        v278 = v273 + *(int *)(v424 + 28);
        v457 = v276;
        ((void (*)(uint64_t, char *, uint64_t))v276)(v278, v262, v454);
        *(_QWORD *)(v273 + *(int *)(v277 + 20)) = v445;
        *(_QWORD *)(v273 + *(int *)(v277 + 24)) = 0;
        v279 = sub_2408DB9B4();
        v280 = sub_2408DB750(&v464, v436);
        if (*v281)
        {
          v282 = (uint64_t)v403;
          v275(v403, v270, v274);
          v283 = v404;
          sub_2408E0400(v273, v404);
          v272(v283, 0, 1, v277);
          sub_2408DB574(v283, v282);
        }
        ((void (*)(uint64_t *, _QWORD))v280)(&v464, 0);
        ((void (*)(uint64_t *, _QWORD))v279)(&v465, 0);
        v248 = (_DWORD *)MEMORY[0x24BE59900];
        sub_2408E0444(v273);
        v244 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v452[1];
        v227 = v454;
        ((void (*)(char *, uint64_t))v244)(v421, v454);
        v242 = v432;
        v247 = v396;
        v245 = v427;
        v224 = v457;
        v243 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v458;
        v246 = v428;
        ((void (*)(char *, char *, uint64_t))v457)(v427, v432, v227);
LABEL_108:
        v340 = ((uint64_t (*)(char *, uint64_t))v243)(v245, v227);
        if (v340 == *v248)
        {
          LODWORD(v450) = v340;
          v457 = v224;
          v341 = v247;
          ((void (*)(char *, uint64_t))v452[12])(v245, v227);
          v342 = v426;
          v343 = v425;
          v344 = (*(uint64_t (**)(char *, char *, uint64_t))(v426 + 32))(v425, v245, v246);
          v345 = (uint64_t)v419;
          MEMORY[0x242683948](v344);
          v346 = v433;
          v347 = getPlannerFailureInfo(from:iferror:)(v433, v345);
          sub_2403A97FC(v345, &qword_2570016F8);
          if (v347)
          {
            v452 = v244;
            v348 = v227;
            v349 = v429;
            swift_beginAccess();
            swift_retain();
            v350 = swift_isUniquelyReferenced_nonNull_native();
            v464 = *(_QWORD *)(v349 + 24);
            *(_QWORD *)(v349 + 24) = 0x8000000000000000;
            sub_2403AC458(v347, v436, v350);
            *(_QWORD *)(v349 + 24) = v464;
            swift_bridgeObjectRelease();
            swift_endAccess();
            v351 = v461;
            v394(v422, v397, v461);
            v352 = v418;
            v353 = v451;
            ((void (*)(char *, uint64_t, uint64_t))v448)(v418, v346, v451);
            v354 = v423;
            v355 = v348;
            ((void (*)(char *, char *, uint64_t))v457)(v423, v432, v348);
            swift_retain_n();
            v356 = sub_2408E5C3C();
            v357 = sub_2408E5EA0();
            if (!os_log_type_enabled(v356, (os_log_type_t)v357))
            {
              swift_release_n();

              v367 = v452;
              ((void (*)(char *, uint64_t))v452)(v354, v355);
              v368 = *(void (**)(char *, uint64_t))(v453 + 8);
              v368(v352, v353);
              ((void (*)(char *, _QWORD))v455)(v422, v351);
              swift_release();
              (*(void (**)(char *, uint64_t))(v426 + 8))(v425, v428);
              ((void (*)(char *, uint64_t))v367)(v432, v355);
              v368((char *)v433, v353);
LABEL_131:
              (*(void (**)(char *, uint64_t))(v459 + 8))(v463, v460);
              (*(void (**)(char *, uint64_t))(v396 + 8))(v437, v395);
              goto LABEL_132;
            }
            LODWORD(v449) = v357;
            v442 = v347;
            v458 = (char *)v243;
            v358 = swift_slowAlloc();
            v359 = swift_slowAlloc();
            v465 = v359;
            *(_DWORD *)v358 = 136316418;
            v360 = v409;
            v361 = v422;
            sub_2408E5AEC();
            v362 = v447;
            v363 = ((uint64_t (*)(char *, uint64_t, char *))v446)(v360, 1, v447);
            v448 = (char *)v359;
            if (v363 == 1)
            {
              v364 = 7104878;
              v365 = &qword_257002098;
              v366 = (uint64_t)v360;
            }
            else
            {
              v369 = v402;
              sub_2408E5AD4();
              (*((void (**)(char *, char *))v443 + 1))(v360, v362);
              v370 = sub_2408E5B40();
              v371 = *(_QWORD *)(v370 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v371 + 48))(v369, 1, v370) != 1)
              {
                v364 = sub_2408E5B1C();
                v372 = v373;
                (*(void (**)(char *, uint64_t))(v371 + 8))(v369, v370);
                goto LABEL_120;
              }
              v364 = 7104878;
              v365 = &qword_2570020A0;
              v366 = (uint64_t)v369;
            }
            sub_2403A97FC(v366, v365);
            v372 = 0xE300000000000000;
LABEL_120:
            v464 = sub_2403B3ED0(v364, v372, &v465);
            sub_2408E5F3C();
            swift_bridgeObjectRelease();
            ((void (*)(char *, _QWORD))v455)(v361, v351);
            *(_WORD *)(v358 + 12) = 2048;
            v464 = v436;
            sub_2408E5F3C();
            *(_WORD *)(v358 + 22) = 2080;
            v374 = v418;
            v375 = sub_2408E5AA4();
            v464 = sub_2403B3ED0(v375, v376, &v465);
            sub_2408E5F3C();
            swift_bridgeObjectRelease();
            v377 = *(void (**)(char *, uint64_t))(v453 + 8);
            v377(v374, v451);
            *(_WORD *)(v358 + 32) = 2080;
            v378 = v410;
            v379 = v454;
            ((void (*)(char *, char *, uint64_t))v457)(v410, v423, v454);
            v380 = ((uint64_t (*)(char *, uint64_t))v458)(v378, v379);
            v461 = (void (*)(_QWORD, _QWORD))v377;
            v444 = v356;
            if (v380 == (_DWORD)v456)
            {
              v381 = 0x64657472617473;
              v382 = 0xE700000000000000;
            }
            else if (v380 == *MEMORY[0x24BE598F8])
            {
              v381 = 0x6465646E65;
              v382 = 0xE500000000000000;
            }
            else
            {
              if (v380 == (_DWORD)v450)
                v381 = 0x64656C696166;
              else
                v381 = 0x6E776F6E6B6E75;
              if (v380 == (_DWORD)v450)
                v382 = 0xE600000000000000;
              else
                v382 = 0xE700000000000000;
            }
            v383 = v378;
            v384 = v454;
            v385 = v452;
            ((void (*)(char *, uint64_t))v452)(v383, v454);
            v464 = sub_2403B3ED0(v381, v382, &v465);
            sub_2408E5F3C();
            swift_bridgeObjectRelease();
            ((void (*)(char *, uint64_t))v385)(v423, v384);
            *(_WORD *)(v358 + 42) = 2048;
            v464 = v445;
            sub_2408E5F3C();
            *(_WORD *)(v358 + 52) = 2080;
            v386 = sub_240509A88();
            v464 = sub_2403B3ED0(v386, v387, &v465);
            sub_2408E5F3C();
            swift_release_n();
            swift_bridgeObjectRelease();
            v388 = v444;
            _os_log_impl(&dword_240347000, v444, (os_log_type_t)v449, "IF Telemetry - Found a Failure in Planner Steps\n    clientRequestId: %s,\n    spanId: %llu\n    Target: %s,\n    state: %s,\n    with suspending timestamp: %llu,\n    %s", (uint8_t *)v358, 0x3Eu);
            v389 = v448;
            swift_arrayDestroy();
            MEMORY[0x242684668](v389, -1, -1);
            MEMORY[0x242684668](v358, -1, -1);
            swift_release();

            (*(void (**)(char *, uint64_t))(v426 + 8))(v425, v428);
            ((void (*)(char *, uint64_t))v385)(v432, v384);
            v461((char *)v433, v451);
            goto LABEL_131;
          }
          (*(void (**)(char *, uint64_t))(v342 + 8))(v343, v246);
          ((void (*)(char *, uint64_t))v244)(v432, v227);
          (*(void (**)(uint64_t, uint64_t))(v453 + 8))(v346, v451);
          (*(void (**)(char *, uint64_t))(v459 + 8))(v463, v460);
          (*(void (**)(char *, uint64_t))(v341 + 8))(v437, v395);
        }
        else
        {
          ((void (*)(char *, uint64_t))v244)(v242, v227);
          (*(void (**)(char *, uint64_t))(v453 + 8))((char *)v433, v451);
          (*(void (**)(char *, uint64_t))(v459 + 8))(v463, v460);
          (*(void (**)(char *, uint64_t))(v247 + 8))(v437, v395);
          ((void (*)(char *, uint64_t))v244)(v245, v227);
        }
LABEL_132:
        v111 = &qword_257016478;
        v112 = (uint64_t)v462;
        return sub_2403A97FC(v112, v111);
      }
      v284 = v451;
      ((void (*)(char *, char *, uint64_t))v269)(v413, (char *)v433, v451);
      v285 = v412;
      ((void (*)(char *, char *, uint64_t))v224)(v412, v262, v454);
      v286 = sub_2408E5C3C();
      v287 = sub_2408E5EAC();
      if (os_log_type_enabled(v286, (os_log_type_t)v287))
      {
        LODWORD(v450) = v287;
        v456 = v286;
        v288 = swift_slowAlloc();
        v289 = swift_slowAlloc();
        v465 = v289;
        *(_DWORD *)v288 = 136315650;
        v290 = sub_2408E5AA4();
        v464 = sub_2403B3ED0(v290, v291, &v465);
        sub_2408E5F3C();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v453 + 8))(v271, v451);
        *(_WORD *)(v288 + 12) = 2048;
        v464 = v436;
        sub_2408E5F3C();
        *(_WORD *)(v288 + 22) = 2080;
        v292 = v407;
        v293 = v454;
        ((void (*)(char *, char *, uint64_t))v224)(v407, v412, v454);
        v294 = ((uint64_t (*)(char *, uint64_t))v458)(v292, v293);
        v245 = v427;
        v457 = v224;
        if (v294 == v268)
        {
          v295 = 0x64657472617473;
          v296 = 0xE700000000000000;
        }
        else if (v294 == *MEMORY[0x24BE598F8])
        {
          v295 = 0x6465646E65;
          v296 = 0xE500000000000000;
        }
        else
        {
          if (v294 == *MEMORY[0x24BE59900])
            v295 = 0x64656C696166;
          else
            v295 = 0x6E776F6E6B6E75;
          if (v294 == *MEMORY[0x24BE59900])
            v296 = 0xE600000000000000;
          else
            v296 = 0xE700000000000000;
        }
        v244 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v452[1];
        v337 = v454;
        ((void (*)(char *, uint64_t))v244)(v407, v454);
        v464 = sub_2403B3ED0(v295, v296, &v465);
        sub_2408E5F3C();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v244)(v412, v337);
        v338 = v456;
        _os_log_impl(&dword_240347000, v456, (os_log_type_t)v450, "Unexpected IF telemetry event for exisiting interval %s, span: %llu, stateInfo: %s", (uint8_t *)v288, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x242684668](v289, -1, -1);
        MEMORY[0x242684668](v288, -1, -1);

        v224 = v457;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v453 + 8))(v271, v284);
        v297 = v285;
        v244 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v206[1];
        ((void (*)(char *, uint64_t))v244)(v297, v454);

        v245 = v427;
      }
      v339 = v454;
      ((void (*)(char *, uint64_t))v244)(v421, v454);
      LODWORD(v456) = v268;
      v227 = v339;
      v242 = v432;
      v247 = v396;
      v246 = v428;
      v248 = (_DWORD *)MEMORY[0x24BE59900];
      v243 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v458;
LABEL_107:
      ((void (*)(char *, char *, uint64_t))v224)(v245, v242, v227);
      goto LABEL_108;
    }
    swift_bridgeObjectRetain();
    v216 = sub_240509F84(v433);
    v217 = v424;
    v219 = v414;
    if ((v218 & 1) != 0)
    {
      v220 = v415;
      sub_2408E0400(*(_QWORD *)(v215 + 56) + *(_QWORD *)(v414 + 72) * v216, v415);
      v221 = *(char **)(v219 + 56);
      v222 = v220;
      v223 = 0;
    }
    else
    {
      v221 = *(char **)(v414 + 56);
      v220 = v415;
      v222 = v415;
      v223 = 1;
    }
    v450 = v221;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v221)(v222, v223, 1, v217);
    v298 = v406;
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v219 + 48))(v220, 1, v217) == 1)
    {
      v262 = v432;
      v263 = v453;
      v261 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v450;
      goto LABEL_68;
    }
    sub_2403A91CC(v220, v298, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
    v299 = v298 + *(int *)(v217 + 28);
    v300 = v405;
    v301 = v298;
    v227 = v454;
    v457 = v206[2];
    ((void (*)(char *, uint64_t, uint64_t))v457)(v405, v299, v454);
    v302 = v206[11];
    v303 = ((uint64_t (*)(char *, uint64_t))v302)(v300, v227);
    v304 = *(char **)(v453 + 16);
    LODWORD(v456) = *MEMORY[0x24BE59908];
    v305 = v432;
    v458 = (char *)v302;
    v448 = v304;
    if (v303 == (_DWORD)v456)
    {
      v306 = v400;
      v307 = v227;
      v308 = v433;
      v309 = v451;
      ((void (*)(char *, char *, uint64_t))v304)(v400, (char *)v433, v451);
      v310 = (int *)v424;
      v311 = v301;
      v312 = *(_QWORD *)(v301 + *(int *)(v424 + 20));
      v313 = sub_2408E0480(v312, v445);
      v314 = (uint64_t)v306;
      ((void (*)(char *, char *, uint64_t))v457)(&v306[v310[7]], v305, v307);
      *(_QWORD *)&v306[v310[5]] = v312;
      *(double *)&v306[v310[6]] = v313;
      v315 = sub_2408DB9B4();
      v316 = sub_2408DB750(&v464, v436);
      if (*v317)
      {
        v318 = (uint64_t)v403;
        ((void (*)(char *, uint64_t, uint64_t))v304)(v403, v308, v309);
        v319 = v404;
        sub_2408E0400(v314, v404);
        ((void (*)(uint64_t, _QWORD, uint64_t, int *))v450)(v319, 0, 1, v310);
        sub_2408DB574(v319, v318);
      }
      ((void (*)(uint64_t *, _QWORD))v316)(&v464, 0);
      ((void (*)(uint64_t *, _QWORD))v315)(&v465, 0);
      sub_2408E0444(v314);
      sub_2408E0444(v311);
      v227 = v454;
      v206 = v452;
    }
    else
    {
      v323 = v399;
      v324 = v451;
      ((void (*)(char *, char *, uint64_t))v304)(v399, (char *)v433, v451);
      v325 = v401;
      ((void (*)(char *, char *, uint64_t))v457)(v401, v305, v227);
      v326 = sub_2408E5C3C();
      v327 = sub_2408E5EAC();
      if (os_log_type_enabled(v326, (os_log_type_t)v327))
      {
        LODWORD(v450) = v327;
        v328 = swift_slowAlloc();
        v329 = swift_slowAlloc();
        v465 = v329;
        *(_DWORD *)v328 = 136315650;
        v330 = sub_2408E5AA4();
        v464 = sub_2403B3ED0(v330, v331, &v465);
        sub_2408E5F3C();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v453 + 8))(v323, v451);
        *(_WORD *)(v328 + 12) = 2048;
        v464 = v436;
        sub_2408E5F3C();
        *(_WORD *)(v328 + 22) = 2080;
        v332 = v398;
        ((void (*)(char *, char *, uint64_t))v457)(v398, v325, v227);
        v333 = ((uint64_t (*)(char *, uint64_t))v458)(v332, v227);
        v334 = v329;
        if (v333 == (_DWORD)v456)
        {
          v335 = 0x64657472617473;
          v336 = 0xE700000000000000;
        }
        else if (v333 == *MEMORY[0x24BE598F8])
        {
          v335 = 0x6465646E65;
          v336 = 0xE500000000000000;
        }
        else
        {
          if (v333 == *MEMORY[0x24BE59900])
            v335 = 0x64656C696166;
          else
            v335 = 0x6E776F6E6B6E75;
          if (v333 == *MEMORY[0x24BE59900])
            v336 = 0xE600000000000000;
          else
            v336 = 0xE700000000000000;
        }
        v206 = v452;
        v390 = v452[1];
        v227 = v454;
        ((void (*)(char *, uint64_t))v390)(v398, v454);
        v464 = sub_2403B3ED0(v335, v336, &v465);
        sub_2408E5F3C();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v390)(v401, v227);
        _os_log_impl(&dword_240347000, v326, (os_log_type_t)v450, "Unexpected IF telemetry event for exisiting interval %s, span: %llu, stateInfo: %s", (uint8_t *)v328, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x242684668](v334, -1, -1);
        MEMORY[0x242684668](v328, -1, -1);

        sub_2408E0444(v406);
        v247 = v396;
        v243 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v458;
        goto LABEL_144;
      }

      ((void (*)(char *, uint64_t))v206[1])(v325, v227);
      (*(void (**)(char *, uint64_t))(v453 + 8))(v323, v324);
      sub_2408E0444(v406);
    }
    v243 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v458;
    v247 = v396;
LABEL_144:
    v244 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v206[1];
    ((void (*)(char *, uint64_t))v244)(v405, v227);
    v242 = v432;
    v245 = v427;
    v224 = v457;
    v246 = v428;
LABEL_63:
    v248 = (_DWORD *)MEMORY[0x24BE59900];
    goto LABEL_107;
  }
  v111 = &qword_257016480;
  v112 = (uint64_t)v97;
  return sub_2403A97FC(v112, v111);
}

uint64_t sub_2408DEEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t result;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257016468);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2 + 56;
  v10 = *(_QWORD *)(a2 + 56);
  v12 = *(_BYTE *)(a2 + 32);
  v38 = 1;
  v13 = 1 << v12;
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v10;
  v16 = (uint64_t *)(v2 + 16);
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v37 = 0.0;
  v18 = 0;
  v19 = (unint64_t)(v13 + 63) >> 6;
  if (v15)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v22 = v18 + 1;
    if (!__OFADD__(v18, 1))
    {
      if (v22 < v19)
      {
        v23 = *(_QWORD *)(v11 + 8 * v22);
        ++v18;
        if (v23)
          goto LABEL_21;
        v18 = v22 + 1;
        if (v22 + 1 >= v19)
          goto LABEL_34;
        v23 = *(_QWORD *)(v11 + 8 * v18);
        if (v23)
          goto LABEL_21;
        v18 = v22 + 2;
        if (v22 + 2 >= v19)
          goto LABEL_34;
        v23 = *(_QWORD *)(v11 + 8 * v18);
        if (v23)
        {
LABEL_21:
          v15 = (v23 - 1) & v23;
          for (i = __clz(__rbit64(v23)) + (v18 << 6); ; i = v20 | (v18 << 6))
          {
            v25 = *v16;
            if (!*(_QWORD *)(*v16 + 16))
              break;
            v26 = sub_240509F54(*(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * i));
            if ((v27 & 1) == 0)
              break;
            v28 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v26);
            if (!*(_QWORD *)(v28 + 16))
              break;
            swift_bridgeObjectRetain();
            v29 = sub_240509F84(v39);
            if ((v30 & 1) != 0)
            {
              sub_2408E0400(*(_QWORD *)(v28 + 56) + *(_QWORD *)(v8 + 72) * v29, (uint64_t)v6);
              v31 = 0;
            }
            else
            {
              v31 = 1;
            }
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v31, 1, v7);
            swift_bridgeObjectRelease();
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
              goto LABEL_6;
            v32 = v36;
            sub_2403A91CC((uint64_t)v6, v36, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval);
            if ((v38 & 1) != 0)
              v33 = 0.0;
            else
              v33 = v37;
            v34 = *(double *)(v32 + *(int *)(v7 + 24));
            result = sub_2408E0444(v32);
            v38 = 0;
            v37 = v33 + v34;
            if (!v15)
              goto LABEL_8;
LABEL_7:
            v20 = __clz(__rbit64(v15));
            v15 &= v15 - 1;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_6:
          result = sub_2403A97FC((uint64_t)v6, &qword_257016468);
          if (!v15)
            continue;
          goto LABEL_7;
        }
        v24 = v22 + 3;
        if (v24 < v19)
        {
          v23 = *(_QWORD *)(v11 + 8 * v24);
          if (v23)
          {
            v18 = v24;
            goto LABEL_21;
          }
          while (1)
          {
            v18 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_36;
            if (v18 >= v19)
              break;
            v23 = *(_QWORD *)(v11 + 8 * v18);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
      }
LABEL_34:
      swift_release();
      return *(_QWORD *)&v37;
    }
    break;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t IntelligenceFlowTelemetryLatencyCalculator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t IntelligenceFlowTelemetryLatencyCalculator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_2408DF218(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2408E5F60();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_2408E6218();
        swift_bridgeObjectRetain();
        sub_2408E5D44();
        v10 = sub_2408E623C();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2408DF3EC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_2408E5F60();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_2408E620C();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2408DF580(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;

  v4 = sub_2408E5AB0();
  v33 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v34 = a2 + 64;
    result = sub_2408E5F60();
    v11 = v34;
    if ((*(_QWORD *)(v34 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (result + 1) & v10;
      v13 = *(_QWORD *)(v33 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v33 + 16);
      do
      {
        v14 = v13 * v9;
        v32(v7, *(_QWORD *)(a2 + 48) + v13 * v9, v4);
        sub_2403AE1E8();
        v15 = sub_2408E5CA8();
        result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v7, v4);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 < v12 || a1 < (uint64_t)v16)
            goto LABEL_6;
        }
        else if (v16 < v12 && a1 < (uint64_t)v16)
        {
          goto LABEL_6;
        }
        if (v13 * a1 < v14 || *(_QWORD *)(a2 + 48) + v13 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v14 + v13))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v13 * a1 != v14)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v19 = *(_QWORD *)(a2 + 56);
        v20 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval()
                                    - 8)
                        + 72);
        v21 = v20 * a1;
        result = v19 + v20 * a1;
        v22 = v20 * v9;
        v23 = v19 + v20 * v9 + v20;
        if (v21 < v22 || result >= v23)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v21 == v22)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
        v11 = v34;
      }
      while (((*(_QWORD *)(v34 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v25 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2408DF808(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_2408E5F60();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_2408E6218();
        swift_bridgeObjectRetain();
        sub_2408E5D44();
        v11 = sub_2408E623C();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void (*sub_2408DFA10(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_2408E01B8(v4);
  v4[9] = sub_2408DFC3C(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_2408DFA8C;
}

void sub_2408DFA8C(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

uint64_t (*sub_2408DFAC8(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_2408E01B8(v6);
  v6[10] = sub_2408DFDD8(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_2408DFB58;
}

uint64_t (*sub_2408DFB5C(_QWORD *a1, uint64_t a2, uint64_t a3))()
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_2408E01D8(v6);
  v6[10] = sub_2408DFF90(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_2408DFB58;
}

void sub_2408DFBEC(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_2408DFC3C(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_240509F54(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_2408DFD58;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_2403AD110();
      goto LABEL_7;
    }
    sub_2403AB130(v14, a3 & 1);
    v18 = sub_240509F54(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_2408E61B8();
  __break(1u);
  return result;
}

void sub_2408DFD58(uint64_t **a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  _QWORD *v5;

  v1 = *a1;
  v2 = **a1;
  v3 = *((_BYTE *)*a1 + 32);
  if (v2)
  {
    v4 = v1[3];
    v5 = *(_QWORD **)v1[2];
    if ((v3 & 1) != 0)
      *(_QWORD *)(v5[7] + 8 * v4) = v2;
    else
      sub_2403ACA2C(v4, v1[1], v2, v5);
  }
  else if (((*a1)[4] & 1) != 0)
  {
    sub_2408DF3EC(v1[3], *(_QWORD *)v1[2]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  free(v1);
}

void (*sub_2408DFDD8(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*result)(uint64_t **, uint64_t);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  v10[2] = v4;
  *v10 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001500);
  v12 = malloc(*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  v10[3] = v12;
  v13 = *v4;
  v15 = sub_240509E28(a2, a3);
  *((_BYTE *)v10 + 40) = v14 & 1;
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v21 = *(_QWORD *)(*v5 + 56);
        v22 = type metadata accessor for SessionData(0);
        v23 = *(_QWORD *)(v22 - 8);
        sub_2403A91CC(v21 + *(_QWORD *)(v23 + 72) * v15, (uint64_t)v12, type metadata accessor for SessionData);
        v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_2408DFF74;
      }
LABEL_11:
      v22 = type metadata accessor for SessionData(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_2403AD7A4();
      goto LABEL_7;
    }
    sub_2403ABB08(v18, a4 & 1);
    v25 = sub_240509E28(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      v15 = v25;
      v10[4] = v25;
      if ((v19 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **, uint64_t))sub_2408E61B8();
  __break(1u);
  return result;
}

void sub_2408DFF74(uint64_t **a1, uint64_t a2)
{
  sub_2408E0148(a1, a2, &qword_257001500, type metadata accessor for SessionData, (void (*)(unint64_t, uint64_t, uint64_t, char *, uint64_t))sub_2403ACB2C);
}

void (*sub_2408DFF90(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*result)(uint64_t **, uint64_t);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  v10[2] = v4;
  *v10 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257002088);
  v12 = malloc(*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  v10[3] = v12;
  v13 = *v4;
  v15 = sub_240509E28(a2, a3);
  *((_BYTE *)v10 + 40) = v14 & 1;
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v21 = *(_QWORD *)(*v5 + 56);
        v22 = type metadata accessor for RequestData(0);
        v23 = *(_QWORD *)(v22 - 8);
        sub_2403A91CC(v21 + *(_QWORD *)(v23 + 72) * v15, (uint64_t)v12, type metadata accessor for RequestData);
        v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_2408E012C;
      }
LABEL_11:
      v22 = type metadata accessor for RequestData(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_2403AD7B8();
      goto LABEL_7;
    }
    sub_2403ABB1C(v18, a4 & 1);
    v25 = sub_240509E28(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      v15 = v25;
      v10[4] = v25;
      if ((v19 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **, uint64_t))sub_2408E61B8();
  __break(1u);
  return result;
}

void sub_2408E012C(uint64_t **a1, uint64_t a2)
{
  sub_2408E0148(a1, a2, &qword_257002088, type metadata accessor for RequestData, (void (*)(unint64_t, uint64_t, uint64_t, char *, uint64_t))sub_2403ACB38);
}

void sub_2408E0148(uint64_t **a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD), void (*a5)(unint64_t, uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t *v6;
  void *v7;

  v6 = *a1;
  v7 = (void *)(*a1)[3];
  sub_2408E0204((uint64_t)v7, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[2], (*a1)[4], **a1, (*a1)[1], a3, a4, a5);
  sub_2403A97FC((uint64_t)v7, a3);
  free(v7);
  free(v6);
}

uint64_t (*sub_2408E01B8(_QWORD *a1))()
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2408E0E0C;
}

uint64_t (*sub_2408E01D8(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2408E01F8;
}

uint64_t sub_2408E01F8(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

unint64_t sub_2408E0204(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t (*a8)(_QWORD), void (*a9)(unint64_t, uint64_t, uint64_t, char *, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unint64_t result;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v28 = a5;
  v29 = a6;
  v30 = a4;
  v14 = __swift_instantiateConcreteTypeFromMangledName(a7);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a8(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v27 - v22;
  sub_2403A9210(a1, (uint64_t)v16, a7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    result = sub_2403A97FC((uint64_t)v16, a7);
    if ((a2 & 1) != 0)
    {
      v25 = v30;
      swift_arrayDestroy();
      return sub_2408DF808(v25, *a3, a8);
    }
  }
  else
  {
    sub_2403A91CC((uint64_t)v16, (uint64_t)v23, a8);
    v26 = *a3;
    if ((a2 & 1) != 0)
    {
      return sub_2403A91CC((uint64_t)v23, *(_QWORD *)(v26 + 56) + *(_QWORD *)(v18 + 72) * v30, a8);
    }
    else
    {
      sub_2403A91CC((uint64_t)v23, (uint64_t)v21, a8);
      a9(v30, v28, v29, v21, v26);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval()
{
  uint64_t result;

  result = qword_257016620;
  if (!qword_257016620)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2408E0400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408E0444(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_2408E0480(unint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v4 = sub_2408E5C48();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >= a1)
    return (double)(a2 - a1) / 1000000000.0;
  if (qword_256FFA0A8 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v4, (uint64_t)qword_257072498);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_2408E5F84();
  swift_bridgeObjectRelease();
  v13 = 0xD000000000000010;
  v14 = 0x800000024092CD00;
  v12 = a1;
  sub_2408E6170();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  sub_2408E5D50();
  v12 = a2;
  sub_2408E6170();
  sub_2408E5D50();
  swift_bridgeObjectRelease();
  v9 = v13;
  LOBYTE(v13) = 112;
  sub_2408B4A24(v9, v14, (char *)&v13);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0.0;
}

uint64_t sub_2408E0654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257016478);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408E069C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2408E06E8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2408E0734@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2408E0780@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return result;
}

uint64_t sub_2408E07C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

uint64_t type metadata accessor for IntelligenceFlowTelemetryLatencyCalculator()
{
  return objc_opt_self();
}

uint64_t method lookup function for IntelligenceFlowTelemetryLatencyCalculator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanIntervals.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanIntervals.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanIntervals.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanfailureInfo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanfailureInfo.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.spanfailureInfo.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.targetsAdded.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.targetsAdded.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.targetsAdded.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.numFailed.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.numFailed.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.numFailed.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.extractLatencies(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.handleEvent(event:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.sumTargetForSpans(target:spanIds:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of IntelligenceFlowTelemetryLatencyCalculator.computeMetrics(startTime:endTime:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t *initializeBufferWithCopyOfBuffer for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2408E5AB0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2408E5BA0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t destroy for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_2408E5AB0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_2408E5BA0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_2408E5AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2408E5BA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t assignWithCopy for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_2408E5AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2408E5BA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_2408E5AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2408E5BA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_2408E5AB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2408E5BA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408E0C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_2408E5AB0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_2408E5BA0();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for IntelligenceFlowTelemetryLatencyCalculator.IFTelemetryInterval()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408E0CFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_2408E5AB0();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_2408E5BA0();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2408E0D78()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2408E5AB0();
  if (v1 <= 0x3F)
  {
    result = sub_2408E5BA0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_2408E0E14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v38;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (unsigned int *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012B8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for TranscriptProtoAction(0);
  v9 = *((_QWORD *)v8 - 1);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v7, &qword_2570012B8);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v7, &qword_2570012B8);
    return 0;
  }
  else
  {
    sub_2408E1290((uint64_t)v7, (uint64_t)v11);
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94DD8]), sel_init);
    v12 = v13;
    if (v13)
    {
      objc_msgSend(v13, sel_setExists_, 1);
      v14 = (uint64_t)&v11[v8[7]];
      v15 = objc_allocWithZone(MEMORY[0x24BE94FD8]);
      v16 = v12;
      v17 = objc_msgSend(v15, sel_init);
      sub_2403A9210(v14, (uint64_t)v4, &qword_256FFA300);
      v18 = type metadata accessor for TranscriptProtoStatementID(0);
      if ((*(unsigned int (**)(unsigned int *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v4, 1, v18) == 1)
      {
        sub_2403A97FC((uint64_t)v4, &qword_256FFA300);
      }
      else
      {
        v19 = *v4;
        sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementID);
        objc_msgSend(v17, sel_setIndex_, v19);
      }
      objc_msgSend(v16, sel_setStatementId_, v17);

      v20 = v16;
      swift_bridgeObjectRetain();
      v21 = (void *)sub_2408E5CE4();
      swift_bridgeObjectRelease();
      objc_msgSend(v20, sel_setToolId_, v21);

      if (*(_QWORD *)&v11[v8[8] + 8])
      {
        v22 = v20;
        swift_bridgeObjectRetain();
        v23 = (void *)sub_2408E5CE4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v24 = v20;
        v23 = 0;
      }
      objc_msgSend(v20, sel_setBundleId_, v23);

      objc_msgSend(v20, sel_setIsConfirmed_, v11[16]);
    }
    v25 = sub_2408E566C();
    v26 = *(_QWORD *)(v25 - 8);
    MEMORY[0x24BDAC7A8](v25);
    v28 = (char *)&v38 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA660);
    MEMORY[0x24BDAC7A8](v29);
    v31 = (char *)&v38 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    v32 = *(_QWORD *)&v11[v8[10] + 8];
    swift_bridgeObjectRetain();
    sub_24041DE64(v32, 5u, (uint64_t)v31);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v31, 1, v25) == 1)
    {
      sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoAction);
      sub_2403A97FC((uint64_t)v31, &qword_256FFA660);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v31, v25);
      if (v12)
      {
        v33 = objc_allocWithZone(MEMORY[0x24BE95C78]);
        v34 = v12;
        v35 = (void *)sub_2408E5648();
        v36 = objc_msgSend(v33, sel_initWithNSUUID_, v35);

        objc_msgSend(v34, sel_setPlanEventId_, v36);
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
      sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoAction);
    }
  }
  return v12;
}

uint64_t sub_2408E1290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_2408E12D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF90);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPickExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2408E1450(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_2408E1498((uint64_t)v4);
    return 0;
  }
  else
  {
    sub_2408E14D8((uint64_t)v4, (uint64_t)v8);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D68]), sel_init);
    v9 = v10;
    if (v10)
    {
      objc_msgSend(v10, sel_setExists_, 1);
      v11 = *v8;
      v12 = objc_allocWithZone(MEMORY[0x24BE94DC8]);
      v13 = v9;
      v14 = objc_msgSend(v12, sel_init);
      objc_msgSend(v14, sel_setIndex_, v11);
      objc_msgSend(v13, sel_setPickType_, v14);

    }
    sub_2408E151C((uint64_t)v8);
  }
  return v9;
}

uint64_t sub_2408E1450(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408E1498(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2408E14D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TranscriptProtoPickExpression(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2408E151C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TranscriptProtoPickExpression(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for IFTranscriptProcessingUtils()
{
  return &type metadata for IFTranscriptProcessingUtils;
}

unint64_t sub_2408E1568(char *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t *v81;
  char *v82;
  uint64_t (*v83)(uint64_t);
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;

  v143 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v3);
  v104 = (uint64_t)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v101 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v100 = (uint64_t)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D8);
  MEMORY[0x24BDAC7A8](v6);
  v108 = (uint64_t)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v102 = (uint64_t)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TranscriptProtoActionFailure(0);
  MEMORY[0x24BDAC7A8](v9);
  v109 = (uint64_t)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v11);
  v123 = (uint64_t)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v121 = *(_QWORD *)(v122 - 8);
  v13 = MEMORY[0x24BDAC7A8](v122);
  v117 = (uint64_t)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v118 = (uint64_t)&v99 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  MEMORY[0x24BDAC7A8](v16);
  v131 = (uint64_t)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v129 = *(_QWORD *)(v18 - 8);
  v130 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v124 = (uint64_t)&v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
  MEMORY[0x24BDAC7A8](v20);
  v139 = (uint64_t)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  v137 = *(_QWORD *)(v22 - 8);
  v138 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v132 = (uint64_t)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x24BDAC7A8](v136);
  v141 = (uint64_t)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA380);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v112 = (char *)&v99 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v128 = (char *)&v99 - v28;
  v116 = type metadata accessor for TranscriptProtoExecutorError(0);
  v29 = MEMORY[0x24BDAC7A8](v116);
  v115 = (char *)&v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v134 = (char *)&v99 - v31;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA378);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v111 = (char *)&v99 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v127 = (char *)&v99 - v35;
  v114 = type metadata accessor for TranscriptProtoPlannerError(0);
  v36 = MEMORY[0x24BDAC7A8](v114);
  v113 = (char *)&v99 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v133 = (char *)&v99 - v38;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA370);
  v40 = MEMORY[0x24BDAC7A8](v39);
  v135 = (char *)&v99 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v142 = (char *)&v99 - v42;
  v110 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
  v43 = MEMORY[0x24BDAC7A8](v110);
  v140 = (char *)&v99 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v125 = (char *)&v99 - v45;
  v120 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v119 = *(_QWORD *)(v120 - 8);
  v46 = MEMORY[0x24BDAC7A8](v120);
  v105 = (char *)&v99 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v46);
  v126 = (char *)&v99 - v48;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  v50 = MEMORY[0x24BDAC7A8](v49);
  v52 = (char *)&v99 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v50);
  v54 = (char *)&v99 - v53;
  v55 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v56 = MEMORY[0x24BDAC7A8](v55);
  v58 = (char *)&v99 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v56);
  v60 = (char *)&v99 - v59;
  v61 = type metadata accessor for TranscriptProtoSessionError(0);
  v62 = MEMORY[0x24BDAC7A8](v61);
  v64 = (char *)&v99 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v62);
  v66 = (char *)&v99 - v65;
  sub_2403AE1A4(a2, (uint64_t)v60, type metadata accessor for TranscriptProtoPayloadEnum);
  if (swift_getEnumCaseMultiPayload() != 10)
  {
    sub_240388AE4((uint64_t)v60, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403AE1A4(a2, (uint64_t)v58, type metadata accessor for TranscriptProtoPayloadEnum);
    if (swift_getEnumCaseMultiPayload() == 29)
    {
      v78 = v141;
      sub_2403A91CC((uint64_t)v58, v141, type metadata accessor for TranscriptProtoStatementResult);
      v79 = v139;
      sub_2403A9210(v78 + *(int *)(v136 + 24), v139, &qword_256FFA420);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))(v79, 1, v138) == 1)
      {
        v80 = 0xD000000000000015;
        sub_240388AE4(v78, type metadata accessor for TranscriptProtoStatementResult);
        v81 = &qword_256FFA420;
LABEL_17:
        v87 = v79;
LABEL_18:
        sub_2403A97FC(v87, v81);
        goto LABEL_19;
      }
      v86 = v132;
      sub_2403A91CC(v79, v132, type metadata accessor for TranscriptProtoStatementResultPayload);
      v79 = v131;
      sub_2403A9210(v86, v131, &qword_256FFA3E8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v79, 1, v130) == 1)
      {
        v80 = 0xD000000000000015;
        sub_240388AE4(v86, type metadata accessor for TranscriptProtoStatementResultPayload);
        sub_240388AE4(v78, type metadata accessor for TranscriptProtoStatementResult);
        v81 = &qword_256FFA3E8;
        goto LABEL_17;
      }
      v89 = v124;
      sub_2403A91CC(v79, v124, type metadata accessor for TranscriptProtoStatementOutcome);
      v90 = v123;
      sub_2403A9210(v89, v123, &qword_256FFA3E0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48))(v90, 1, v122) == 1)
      {
        v80 = 0xD000000000000015;
        sub_240388AE4(v89, type metadata accessor for TranscriptProtoStatementOutcome);
        sub_240388AE4(v86, type metadata accessor for TranscriptProtoStatementResultPayload);
        sub_240388AE4(v78, type metadata accessor for TranscriptProtoStatementResult);
        v81 = &qword_256FFA3E0;
        v87 = v90;
        goto LABEL_18;
      }
      v91 = v118;
      sub_2403A91CC(v90, v118, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v92 = v117;
      sub_2403AE1A4(v91, v117, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        v93 = v109;
        sub_2403A91CC(v92, v109, type metadata accessor for TranscriptProtoActionFailure);
        v94 = v108;
        sub_2403A9210(v93, v108, &qword_256FFA3D8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v94, 1, v107) == 1)
        {
          v80 = 0xD000000000000015;
          sub_240388AE4(v93, type metadata accessor for TranscriptProtoActionFailure);
          sub_240388AE4(v91, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          sub_240388AE4(v89, type metadata accessor for TranscriptProtoStatementOutcome);
          sub_240388AE4(v86, type metadata accessor for TranscriptProtoStatementResultPayload);
          sub_240388AE4(v78, type metadata accessor for TranscriptProtoStatementResult);
          v95 = &qword_256FFA3D8;
        }
        else
        {
          v96 = v102;
          sub_2403A91CC(v94, v102, type metadata accessor for TranscriptProtoActionFailureFailure);
          v94 = v104;
          sub_2403A9210(v96, v104, &qword_256FFA3D0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v94, 1, v103) != 1)
          {
            v97 = v100;
            sub_2403A91CC(v94, v100, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
            TranscriptProtoActionFailureFailureEnum.description.getter();
            v80 = v98;
            sub_240388AE4(v97, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
            sub_240388AE4(v96, type metadata accessor for TranscriptProtoActionFailureFailure);
            sub_240388AE4(v93, type metadata accessor for TranscriptProtoActionFailure);
            sub_240388AE4(v91, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
            sub_240388AE4(v89, type metadata accessor for TranscriptProtoStatementOutcome);
            sub_240388AE4(v86, type metadata accessor for TranscriptProtoStatementResultPayload);
            sub_240388AE4(v78, type metadata accessor for TranscriptProtoStatementResult);
            goto LABEL_31;
          }
          v80 = 0xD000000000000015;
          sub_240388AE4(v96, type metadata accessor for TranscriptProtoActionFailureFailure);
          sub_240388AE4(v93, type metadata accessor for TranscriptProtoActionFailure);
          sub_240388AE4(v91, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          sub_240388AE4(v89, type metadata accessor for TranscriptProtoStatementOutcome);
          sub_240388AE4(v86, type metadata accessor for TranscriptProtoStatementResultPayload);
          sub_240388AE4(v78, type metadata accessor for TranscriptProtoStatementResult);
          v95 = &qword_256FFA3D0;
        }
        sub_2403A97FC(v94, v95);
LABEL_31:
        v85 = 7;
        goto LABEL_20;
      }
      v80 = 0xD000000000000015;
      sub_240388AE4(v91, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      sub_240388AE4(v89, type metadata accessor for TranscriptProtoStatementOutcome);
      sub_240388AE4(v86, type metadata accessor for TranscriptProtoStatementResultPayload);
      sub_240388AE4(v78, type metadata accessor for TranscriptProtoStatementResult);
      v84 = v92;
      v83 = type metadata accessor for TranscriptProtoStatementOutcomeEnum;
    }
    else
    {
      v80 = 0xD000000000000015;
      v83 = type metadata accessor for TranscriptProtoPayloadEnum;
      v84 = (uint64_t)v58;
    }
    sub_240388AE4(v84, v83);
LABEL_19:
    v85 = 1;
    goto LABEL_20;
  }
  sub_2403A91CC((uint64_t)v60, (uint64_t)v66, type metadata accessor for TranscriptProtoSessionError);
  sub_2403A9210((uint64_t)v66, (uint64_t)v54, &qword_256FFA388);
  v67 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v68 = (uint64_t)v66;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 48))(v54, 1, v67) != 1)
  {
    sub_2403A9210((uint64_t)v54, (uint64_t)v52, &qword_256FFA388);
    v82 = (char *)&loc_2408E1F3C + dword_2408E2FBC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  if (qword_254355DF0 != -1)
    swift_once();
  v69 = sub_2408E5C48();
  __swift_project_value_buffer(v69, (uint64_t)qword_254356428);
  sub_2403AE1A4((uint64_t)v66, (uint64_t)v64, type metadata accessor for TranscriptProtoSessionError);
  v70 = sub_2408E5C3C();
  v71 = sub_2408E5EA0();
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc();
    v73 = swift_slowAlloc();
    v142 = (char *)v68;
    v74 = v73;
    v145 = v73;
    *(_DWORD *)v72 = 136315138;
    sub_2404FA028((unint64_t *)&qword_256FFC350, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
    v75 = sub_2408E599C();
    v144 = sub_2403B3ED0(v75, v76, &v145);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    sub_240388AE4((uint64_t)v64, type metadata accessor for TranscriptProtoSessionError);
    _os_log_impl(&dword_240347000, v70, v71, "Unrecognized error from sessionError: %s", v72, 0xCu);
    swift_arrayDestroy();
    v77 = v74;
    v68 = (uint64_t)v142;
    MEMORY[0x242684668](v77, -1, -1);
    MEMORY[0x242684668](v72, -1, -1);
  }
  else
  {
    sub_240388AE4((uint64_t)v64, type metadata accessor for TranscriptProtoSessionError);
  }

  sub_240388AE4(v68, type metadata accessor for TranscriptProtoSessionError);
  v80 = 0xD000000000000020;
  v85 = 1;
  sub_2403A97FC((uint64_t)v54, &qword_256FFA388);
LABEL_20:
  *v143 = v85;
  return v80;
}

uint64_t sub_2408E2FCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint8_t *v45;
  const char *v46;
  uint64_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCFA0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v6);
  v57 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v58 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v53 = (char *)&v49 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v49 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v16);
  v60 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for TranscriptProtoProgramStatement(0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(a1 + 32);
  v24 = *(_QWORD *)(v23 + 16);
  if (!v24)
  {
LABEL_12:
    v38 = type metadata accessor for TranscriptProtoStatementID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(a2, 1, 1, v38);
  }
  v51 = v11;
  v52 = v15;
  v49 = v23;
  v50 = a2;
  v25 = (uint64_t)&v22[*(int *)(v19 + 20)];
  v55 = v22;
  v56 = v25;
  v26 = v23 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  v54 = *(_QWORD *)(v20 + 72);
  swift_bridgeObjectRetain();
  v27 = &qword_256FFA300;
  v28 = (uint64_t)v53;
  while (1)
  {
    v31 = v8;
    v32 = (uint64_t)v55;
    sub_2403AE1A4(v26, (uint64_t)v55, type metadata accessor for TranscriptProtoProgramStatement);
    v33 = v27;
    sub_2403A9210(v32, v60, v27);
    v34 = v59;
    sub_2403A9210(v56, v59, &qword_256FFCFA0);
    sub_240388AE4(v32, type metadata accessor for TranscriptProtoProgramStatement);
    v35 = type metadata accessor for TranscriptProtoExpression(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35) == 1)
    {
      sub_2403A97FC(v34, &qword_256FFCFA0);
      v29 = v57;
      v8 = v31;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v57, 1, 1, v31);
LABEL_4:
      v30 = v29;
      v27 = v33;
      sub_2403A97FC(v60, v33);
      sub_2403A97FC(v30, &qword_256FFCF98);
      goto LABEL_5;
    }
    v29 = v57;
    sub_2403A9210(v34, v57, &qword_256FFCF98);
    sub_240388AE4(v34, type metadata accessor for TranscriptProtoExpression);
    v8 = v31;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v29, 1, v31) == 1)
      goto LABEL_4;
    v36 = (uint64_t)v52;
    sub_2403A91CC(v29, (uint64_t)v52, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403AE1A4(v36, v28, type metadata accessor for TranscriptProtoExpressionEnum);
    if (swift_getEnumCaseMultiPayload() == 7)
      break;
    v27 = v33;
    sub_240388AE4(v28, type metadata accessor for TranscriptProtoExpressionEnum);
    v37 = (uint64_t)v51;
    sub_2403AE1A4(v36, (uint64_t)v51, type metadata accessor for TranscriptProtoExpressionEnum);
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      swift_bridgeObjectRelease();
      sub_240388AE4(v37, type metadata accessor for TranscriptProtoExpressionEnum);
      if (qword_254355DF0 != -1)
        swift_once();
      v47 = sub_2408E5C48();
      __swift_project_value_buffer(v47, (uint64_t)qword_254356428);
      v41 = sub_2408E5C3C();
      v42 = sub_2408E5EA0();
      v48 = os_log_type_enabled(v41, v42);
      v44 = (uint64_t)v52;
      if (v48)
      {
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        v46 = "Derive valid originalStatementID from PlanCreated Search expression";
        goto LABEL_21;
      }
      goto LABEL_22;
    }
    sub_240388AE4(v36, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A97FC(v60, v33);
    sub_240388AE4(v37, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = (uint64_t)v53;
LABEL_5:
    v26 += v54;
    if (!--v24)
    {
      swift_bridgeObjectRelease();
      a2 = v50;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  sub_240388AE4(v28, type metadata accessor for TranscriptProtoExpressionEnum);
  if (qword_254355DF0 != -1)
    swift_once();
  v40 = sub_2408E5C48();
  __swift_project_value_buffer(v40, (uint64_t)qword_254356428);
  v41 = sub_2408E5C3C();
  v42 = sub_2408E5EA0();
  v43 = os_log_type_enabled(v41, v42);
  v44 = (uint64_t)v52;
  if (v43)
  {
    v45 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v45 = 0;
    v46 = "Derive valid originalStatementID from PlanCreated Call expression";
LABEL_21:
    _os_log_impl(&dword_240347000, v41, v42, v46, v45, 2u);
    MEMORY[0x242684668](v45, -1, -1);
  }
LABEL_22:

  sub_240388AE4(v44, type metadata accessor for TranscriptProtoExpressionEnum);
  return sub_2408E3554(v60, v50);
}

uint64_t sub_2408E3554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_2408E359C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_2408E4C34();
    v4 = (void *)sub_2408E5C90();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t AppIntentMetricsProducer.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0xD000000000000023;
  *(_QWORD *)(result + 24) = 0x800000024092CDF0;
  return result;
}

uint64_t AppIntentMetricsProducer.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0xD000000000000023;
  *(_QWORD *)(v0 + 24) = 0x800000024092CDF0;
  return result;
}

void AppIntentMetricsProducer.produce(from:with:)(uint64_t a1, Swift::OpaquePointer a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  NSObject *oslog;

  if (qword_256FFA0A8 != -1)
    swift_once();
  v4 = sub_2408E5C48();
  __swift_project_value_buffer(v4, (uint64_t)qword_257072498);
  v5 = sub_2408E5C3C();
  v6 = sub_2408E5EA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_240347000, v5, v6, "#AppIntentMetricsProducer producing metrics", v7, 2u);
    MEMORY[0x242684668](v7, -1, -1);
  }

  v8 = _s23LighthouseDataProcessor24AppIntentMetricsProducerC09formulateF04fromSayAA0deF11DefinitionsVGAA11SessionViewV_tF_0(a1);
  if (*(_QWORD *)(v8 + 16))
  {
    AppIntentMetricsProducer.produceMetricsFor(results:reportTypes:)((Swift::OpaquePointer)v8, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    oslog = sub_2408E5C3C();
    v9 = sub_2408E5EA0();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_240347000, oslog, v9, "#AppIntentMetricsProducer No metrics formulated for reporting", v10, 2u);
      MEMORY[0x242684668](v10, -1, -1);
    }

  }
}

Swift::Void __swiftcall AppIntentMetricsProducer.produceMetricsFor(results:reportTypes:)(Swift::OpaquePointer results, Swift::OpaquePointer reportTypes)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v2 = *((_QWORD *)reportTypes._rawValue + 2);
  if (v2)
  {
    v3 = (char *)reportTypes._rawValue + 32;
    swift_bridgeObjectRetain();
    v4 = 0;
    v5 = &qword_256FFA000;
    v6 = qword_257072498;
    do
    {
      v7 = v5[21];
      if ((v3[v4] & 1) != 0)
      {
        if (v7 != -1)
          swift_once();
        v8 = sub_2408E5C48();
        __swift_project_value_buffer(v8, (uint64_t)v6);
        v9 = sub_2408E5C3C();
        v10 = sub_2408E5EA0();
        if (os_log_type_enabled(v9, v10))
        {
          v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v11 = 0;
          _os_log_impl(&dword_240347000, v9, v10, "#AppIntentMetricsProducer TODO: Implement SELF", v11, 2u);
          MEMORY[0x242684668](v11, -1, -1);
        }

      }
      else
      {
        if (v7 != -1)
          swift_once();
        v12 = sub_2408E5C48();
        __swift_project_value_buffer(v12, (uint64_t)v6);
        v13 = sub_2408E5C3C();
        v14 = sub_2408E5EA0();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v15 = 0;
          _os_log_impl(&dword_240347000, v13, v14, "#AppIntentMetricsProducer Uploading to CoreAnalytics", v15, 2u);
          MEMORY[0x242684668](v15, -1, -1);
        }

        v16 = *((_QWORD *)results._rawValue + 2);
        if (v16)
        {
          v17 = v3;
          v18 = v6;
          v19 = v5;
          v20 = *(_QWORD *)(type metadata accessor for AppIntentMetricsDefinitions() - 8);
          v21 = (char *)results._rawValue
              + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
          v22 = *(_QWORD *)(v20 + 72);
          swift_bridgeObjectRetain();
          do
          {
            sub_2408E3A7C((uint64_t)v21);
            v21 += v22;
            --v16;
          }
          while (v16);
          swift_bridgeObjectRelease();
          v5 = v19;
          v6 = v18;
          v3 = v17;
        }
      }
      ++v4;
    }
    while (v4 != v2);
    swift_bridgeObjectRelease();
  }
}

void sub_2408E3A7C(uint64_t a1)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2408EB740;
  *(_QWORD *)(inited + 32) = 0xD000000000000013;
  *(_QWORD *)(inited + 40) = 0x800000024092CE80;
  *(_QWORD *)(inited + 48) = sub_2408E5CE4();
  *(_QWORD *)(inited + 56) = 0x44496C6F6F74;
  *(_QWORD *)(inited + 64) = 0xE600000000000000;
  v3 = type metadata accessor for AppIntentMetricsDefinitions();
  *(_QWORD *)(inited + 72) = sub_2408E5CE4();
  *(_QWORD *)(inited + 80) = 0xD000000000000014;
  *(_QWORD *)(inited + 88) = 0x800000024092CC00;
  v4 = a1 + *(int *)(v3 + 28);
  if (*(_BYTE *)(v4 + 16))
  {
    if (*(_BYTE *)(v4 + 16) != 1)
      __asm { BR              X10 }
  }
  v5 = sub_2408E5CE4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = v5;
  *(_QWORD *)(inited + 104) = 0xD000000000000015;
  *(_QWORD *)(inited + 112) = 0x800000024092CBE0;
  __asm { BR              X10 }
}

uint64_t sub_2408E3C54()
{
  Swift::String *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = sub_2408E5CE4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 120) = v2;
  strcpy((char *)(v1 + 128), "errorMessage");
  *(_BYTE *)(v1 + 141) = 0;
  *(_WORD *)(v1 + 142) = -5120;
  *(_QWORD *)(v1 + 144) = sub_2408E5CE4();
  v3 = sub_2403A864C(v1);
  type metadata accessor for CoreAnalyticsEmitter();
  swift_initStaticObject();
  CoreAnalyticsEmitter.sendCoreAnalytics(eventName:eventPayload:)(v0[1], (Swift::OpaquePointer)v3);
  return swift_bridgeObjectRelease();
}

uint64_t AppIntentMetricsProducer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AppIntentMetricsProducer.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_2408E3E0C(Swift::OpaquePointer *a1, Swift::OpaquePointer *a2)
{
  AppIntentMetricsProducer.produceMetricsFor(results:reportTypes:)((Swift::OpaquePointer)a1->_rawValue, (Swift::OpaquePointer)a2->_rawValue);
}

uint64_t sub_2408E3E34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor24AppIntentMetricsProducerC09formulateF04fromSayAA0deF11DefinitionsVGAA11SessionViewV_tF_0(a1);
  *a2 = result;
  return result;
}

void sub_2408E3E58(uint64_t a1, void **a2)
{
  Swift::OpaquePointer v2;

  v2._rawValue = *a2;
  AppIntentMetricsProducer.produce(from:with:)(a1, v2);
}

uint64_t _s23LighthouseDataProcessor24AppIntentMetricsProducerC09formulateF04fromSayAA0deF11DefinitionsVGAA11SessionViewV_tF_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  int64_t v26;
  unint64_t v27;
  __int128 v28;
  unint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint8_t *v52;
  unint64_t v53;
  int64_t v54;
  unint64_t v55;
  int64_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  unint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  _QWORD *v86;
  unint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  void (*v96)(uint64_t, char *, uint64_t);
  uint64_t v97;
  int *v98;
  uint64_t *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  _QWORD v106[2];
  uint64_t v107;
  int64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int64_t v113;
  char *v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  int64_t v120;
  __int128 v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint8_t *v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t aBlock[6];

  v128 = type metadata accessor for AppIntentMetricsDefinitions();
  v127 = *(_QWORD *)(v128 - 8);
  v2 = MEMORY[0x24BDAC7A8](v128);
  v126 = (uint64_t)v106 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v139 = (uint64_t)v106 - v4;
  v5 = type metadata accessor for RequestData(0);
  v124 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v141 = (uint64_t)v106 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v122 = (uint64_t)v106 - v11;
  v12 = type metadata accessor for SessionData(0);
  v110 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v106 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v109 = (uint64_t)v106 - v19;
  v20 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for SessionView(0) + 28));
  v21 = *(_QWORD *)(v20 + 64);
  v107 = v20 + 64;
  v22 = 1 << *(_BYTE *)(v20 + 32);
  if (v22 < 64)
    v23 = ~(-1 << v22);
  else
    v23 = -1;
  v24 = v23 & v21;
  v108 = (unint64_t)(v22 + 63) >> 6;
  v106[1] = aBlock;
  v111 = v20;
  result = swift_bridgeObjectRetain();
  v26 = 0;
  v27 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v28 = 136315138;
  v121 = v28;
  v106[0] = MEMORY[0x24BEE4AD8] + 8;
  v118 = (unint64_t)"clientApplicationID";
  v115 = 0x800000024092CEA0;
  v117 = 0x8000000240923470;
  v116 = 0x8000000240923500;
  v125 = v5;
  v123 = v8;
  v130 = v12;
  v129 = v15;
  v114 = v18;
  while (2)
  {
    if (v24)
    {
      v112 = (v24 - 1) & v24;
      v113 = v26;
      v29 = __clz(__rbit64(v24)) | (v26 << 6);
      goto LABEL_24;
    }
    v30 = v26 + 1;
    if (__OFADD__(v26, 1))
      goto LABEL_75;
    if (v30 >= v108)
      goto LABEL_72;
    v31 = *(_QWORD *)(v107 + 8 * v30);
    v32 = v26 + 1;
    if (!v31)
    {
      v32 = v26 + 2;
      if (v26 + 2 >= v108)
        goto LABEL_72;
      v31 = *(_QWORD *)(v107 + 8 * v32);
      if (!v31)
      {
        v32 = v26 + 3;
        if (v26 + 3 >= v108)
          goto LABEL_72;
        v31 = *(_QWORD *)(v107 + 8 * v32);
        if (!v31)
        {
          v32 = v26 + 4;
          if (v26 + 4 >= v108)
            goto LABEL_72;
          v31 = *(_QWORD *)(v107 + 8 * v32);
          if (!v31)
          {
            v33 = v26 + 5;
            if (v26 + 5 < v108)
            {
              v31 = *(_QWORD *)(v107 + 8 * v33);
              if (v31)
              {
                v32 = v26 + 5;
                goto LABEL_23;
              }
              while (1)
              {
                v32 = v33 + 1;
                if (__OFADD__(v33, 1))
                  goto LABEL_76;
                if (v32 >= v108)
                  break;
                v31 = *(_QWORD *)(v107 + 8 * v32);
                ++v33;
                if (v31)
                  goto LABEL_23;
              }
            }
LABEL_72:
            swift_release();
            return v27;
          }
        }
      }
    }
LABEL_23:
    v112 = (v31 - 1) & v31;
    v113 = v32;
    v29 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_24:
    v34 = v109;
    sub_2403AE1A4(*(_QWORD *)(v111 + 56) + *(_QWORD *)(v110 + 72) * v29, v109, type metadata accessor for SessionData);
    sub_2403A91CC(v34, (uint64_t)v18, type metadata accessor for SessionData);
    if (qword_256FFA0A8 != -1)
      swift_once();
    v35 = sub_2408E5C48();
    v36 = __swift_project_value_buffer(v35, (uint64_t)qword_257072498);
    sub_2403AE1A4((uint64_t)v18, (uint64_t)v15, type metadata accessor for SessionData);
    v134 = v36;
    v37 = sub_2408E5C3C();
    v38 = sub_2408E5EA0();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v140 = v27;
      v41 = v40;
      *(_DWORD *)v39 = v121;
      aBlock[0] = v40;
      v138 = v39 + 4;
      v42 = (uint64_t *)&v15[*(int *)(v12 + 24)];
      v44 = *v42;
      v43 = v42[1];
      swift_bridgeObjectRetain();
      v45 = v44;
      v12 = v130;
      v142 = sub_2403B3ED0(v45, v43, aBlock);
      sub_2408E5F3C();
      v15 = v129;
      swift_bridgeObjectRelease();
      sub_240388AE4((uint64_t)v15, type metadata accessor for SessionData);
      _os_log_impl(&dword_240347000, v37, v38, "#AppIntentMetricsProducer Formulating metrics from sessionId:  %s", v39, 0xCu);
      swift_arrayDestroy();
      v46 = v41;
      v27 = v140;
      MEMORY[0x242684668](v46, -1, -1);
      MEMORY[0x242684668](v39, -1, -1);
    }
    else
    {
      sub_240388AE4((uint64_t)v15, type metadata accessor for SessionData);
    }

    v47 = *(_QWORD *)&v114[*(int *)(v12 + 32)];
    v48 = *(_QWORD *)(v47 + 64);
    v119 = v47 + 64;
    v49 = 1 << *(_BYTE *)(v47 + 32);
    if (v49 < 64)
      v50 = ~(-1 << v49);
    else
      v50 = -1;
    v51 = v50 & v48;
    v120 = (unint64_t)(v49 + 63) >> 6;
    v131 = v47;
    result = swift_bridgeObjectRetain();
    v52 = 0;
    if (v51)
    {
LABEL_33:
      v137 = (v51 - 1) & v51;
      v138 = v52;
      v53 = __clz(__rbit64(v51)) | ((_QWORD)v52 << 6);
      goto LABEL_50;
    }
    while (1)
    {
      v54 = (int64_t)(v52 + 1);
      if (__OFADD__(v52, 1))
      {
        __break(1u);
        goto LABEL_74;
      }
      if (v54 >= v120)
        goto LABEL_5;
      v55 = *(_QWORD *)(v119 + 8 * v54);
      v56 = (int64_t)(v52 + 1);
      if (!v55)
      {
        v56 = (int64_t)(v52 + 2);
        if ((uint64_t)(v52 + 2) >= v120)
          goto LABEL_5;
        v55 = *(_QWORD *)(v119 + 8 * v56);
        if (!v55)
        {
          v56 = (int64_t)(v52 + 3);
          if ((uint64_t)(v52 + 3) >= v120)
            goto LABEL_5;
          v55 = *(_QWORD *)(v119 + 8 * v56);
          if (!v55)
          {
            v56 = (int64_t)(v52 + 4);
            if ((uint64_t)(v52 + 4) >= v120)
              goto LABEL_5;
            v55 = *(_QWORD *)(v119 + 8 * v56);
            if (!v55)
              break;
          }
        }
      }
LABEL_49:
      v137 = (v55 - 1) & v55;
      v138 = (uint8_t *)v56;
      v53 = __clz(__rbit64(v55)) + (v56 << 6);
LABEL_50:
      v58 = v122;
      sub_2403AE1A4(*(_QWORD *)(v131 + 56) + *(_QWORD *)(v124 + 72) * v53, v122, type metadata accessor for RequestData);
      v59 = v58;
      v60 = v141;
      sub_2403A91CC(v59, v141, type metadata accessor for RequestData);
      sub_2403AE1A4(v60, (uint64_t)v8, type metadata accessor for RequestData);
      v61 = sub_2408E5C3C();
      v62 = sub_2408E5EA0();
      v63 = os_log_type_enabled(v61, v62);
      v140 = v27;
      if (v63)
      {
        v64 = swift_slowAlloc();
        v65 = swift_slowAlloc();
        aBlock[0] = v65;
        *(_DWORD *)v64 = v121;
        v66 = (uint64_t *)&v8[*(int *)(v5 + 20)];
        v67 = *v66;
        v68 = v66[1];
        swift_bridgeObjectRetain();
        *(_QWORD *)(v64 + 4) = sub_2403B3ED0(v67, v68, aBlock);
        swift_bridgeObjectRelease();
        sub_240388AE4((uint64_t)v8, type metadata accessor for RequestData);
        _os_log_impl(&dword_240347000, v61, v62, "#AppIntentMetricsProducer Formulating metrics from requestId:  %s", (uint8_t *)v64, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x242684668](v65, -1, -1);
        MEMORY[0x242684668](v64, -1, -1);
      }
      else
      {
        sub_240388AE4((uint64_t)v8, type metadata accessor for RequestData);
      }

      v69 = v141 + *(int *)(v5 + 32);
      v71 = *(_QWORD *)(v69 + 8);
      v70 = *(_QWORD *)(v69 + 16);
      v73 = *(_QWORD *)(v69 + 24);
      v72 = *(_QWORD *)(v69 + 32);
      v74 = *(unsigned __int16 *)(v69 + 60);
      v75 = *(_QWORD *)(v69 + 40);
      v132 = *(unsigned int *)(v69 + 56);
      v133 = v72;
      if (v75 && (v76 = *(_QWORD **)(v69 + 48), v76[2]))
      {
        v77 = v74;
        v78 = v73;
        v79 = v76[4];
        v80 = v76[5];
        swift_bridgeObjectRetain();
      }
      else
      {
        v81 = sub_2408E5C3C();
        v82 = sub_2408E5EA0();
        v77 = v74;
        if (os_log_type_enabled(v81, v82))
        {
          v83 = swift_slowAlloc();
          v84 = swift_slowAlloc();
          aBlock[0] = v84;
          *(_DWORD *)v83 = v121;
          *(_QWORD *)(v83 + 4) = sub_2403B3ED0(0xD000000000000024, v115, aBlock);
          _os_log_impl(&dword_240347000, v81, v82, "%s", (uint8_t *)v83, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x242684668](v84, -1, -1);
          MEMORY[0x242684668](v83, -1, -1);
        }

        v78 = v73;
        v85 = (void *)sub_2408E5CE4();
        v86 = (_QWORD *)swift_allocObject();
        v87 = v116;
        v86[2] = 0xD000000000000019;
        v86[3] = v87;
        v86[4] = 0x496C6F6F546C696ELL;
        v86[5] = 0xE900000000000044;
        v86[6] = 0xD000000000000024;
        v86[7] = v118 | 0x8000000000000000;
        aBlock[4] = (uint64_t)sub_24042D904;
        aBlock[5] = (uint64_t)v86;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_2408E359C;
        aBlock[3] = (uint64_t)&block_descriptor_5;
        v88 = _Block_copy(aBlock);
        swift_release();
        AnalyticsSendEventLazy();
        _Block_release(v88);

        v79 = 0;
        v80 = 0;
      }
      v89 = sub_2408E5624();
      v136 = v106;
      v90 = *(_QWORD *)(v89 - 8);
      MEMORY[0x24BDAC7A8](v89);
      v92 = (char *)v106 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v92, v141, v89);
      v93 = 0x6E776F6E6B6E75;
      if (v80)
        v93 = v79;
      v135 = v93;
      if (!v80)
        v80 = 0xE700000000000000;
      if (v75)
      {
        v94 = (unsigned __int16)((v132 | (unint64_t)(v77 << 32)) >> 32) >> 8;
        sub_2403ADAA8(v71, v70, v78);
        swift_bridgeObjectRetain();
        v95 = v133;
      }
      else
      {
        v95 = 0;
        v70 = 0;
        v94 = 0;
        v78 = 2;
        v75 = 0xE000000000000000;
        v71 = 3;
      }
      v96 = *(void (**)(uint64_t, char *, uint64_t))(v90 + 32);
      v97 = v139;
      v96(v139, v92, v89);
      v98 = (int *)v128;
      v99 = (uint64_t *)(v97 + *(int *)(v128 + 20));
      *v99 = v135;
      v99[1] = v80;
      *(_BYTE *)(v97 + v98[6]) = v94;
      v100 = v97 + v98[7];
      *(_QWORD *)v100 = v71;
      *(_QWORD *)(v100 + 8) = v70;
      *(_BYTE *)(v100 + 16) = v78;
      v101 = (_QWORD *)(v97 + v98[8]);
      *v101 = v95;
      v101[1] = v75;
      v102 = v97;
      v103 = v126;
      sub_2403AE1A4(v102, v126, (uint64_t (*)(_QWORD))type metadata accessor for AppIntentMetricsDefinitions);
      v27 = v140;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_24050AF4C(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
      v5 = v125;
      v12 = v130;
      v15 = v129;
      v52 = v138;
      v105 = *(_QWORD *)(v27 + 16);
      v104 = *(_QWORD *)(v27 + 24);
      if (v105 >= v104 >> 1)
        v27 = sub_24050AF4C(v104 > 1, v105 + 1, 1, v27);
      *(_QWORD *)(v27 + 16) = v105 + 1;
      sub_2403A91CC(v103, v27+ ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80))+ *(_QWORD *)(v127 + 72) * v105, (uint64_t (*)(_QWORD))type metadata accessor for AppIntentMetricsDefinitions);
      sub_240388AE4(v139, (uint64_t (*)(_QWORD))type metadata accessor for AppIntentMetricsDefinitions);
      result = sub_240388AE4(v141, type metadata accessor for RequestData);
      v8 = v123;
      v51 = v137;
      if (v137)
        goto LABEL_33;
    }
    v57 = v52 + 5;
    if ((uint64_t)(v52 + 5) >= v120)
    {
LABEL_5:
      swift_release();
      v18 = v114;
      result = sub_240388AE4((uint64_t)v114, type metadata accessor for SessionData);
      v26 = v113;
      v24 = v112;
      continue;
    }
    break;
  }
  v55 = *(_QWORD *)(v119 + 8 * (_QWORD)v57);
  if (v55)
  {
    v56 = (int64_t)(v52 + 5);
    goto LABEL_49;
  }
  while (1)
  {
    v56 = (int64_t)(v57 + 1);
    if (__OFADD__(v57, 1))
      break;
    if (v56 >= v120)
      goto LABEL_5;
    v55 = *(_QWORD *)(v119 + 8 * v56);
    ++v57;
    if (v55)
      goto LABEL_49;
  }
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AppIntentMetricsProducer()
{
  return objc_opt_self();
}

uint64_t method lookup function for AppIntentMetricsProducer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppIntentMetricsProducer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_2408E4BE8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_2408E4C34()
{
  unint64_t result;

  result = qword_257001700;
  if (!qword_257001700)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257001700);
  }
  return result;
}

BOOL static RequestLinkConfig.Direction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RequestLinkConfig.Direction.hash(into:)()
{
  return sub_2408E6224();
}

uint64_t RequestLinkConfig.Direction.hashValue.getter()
{
  sub_2408E6218();
  sub_2408E6224();
  return sub_2408E623C();
}

void RequestLinkConfig.direction.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t RequestLinkConfig.componentName.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t RequestLinkConfig.componentIdTagPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RequestLinkConfig() + 24);
  v4 = sub_2408E5C6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for RequestLinkConfig()
{
  uint64_t result;

  result = qword_2543560C0;
  if (!qword_2543560C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RequestLinkConfig.traceIdTagPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RequestLinkConfig() + 28);
  v4 = sub_2408E5C6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RequestLinkConfig.init(direction:componentName:componentIdTagPath:traceIdTagPath:)@<X0>(_BYTE *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a5 = *a1;
  *(_DWORD *)(a5 + 4) = a2;
  v8 = type metadata accessor for RequestLinkConfig();
  v9 = a5 + *(int *)(v8 + 24);
  v10 = sub_2408E5C6C();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v12(v9, a3, v10);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(a5 + *(int *)(v8 + 28), a4, v10);
}

unint64_t sub_2408E4E74()
{
  unint64_t result;

  result = qword_257016738;
  if (!qword_257016738)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for RequestLinkConfig.Direction, &type metadata for RequestLinkConfig.Direction);
    atomic_store(result, (unint64_t *)&qword_257016738);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for RequestLinkConfig(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    v7 = *(int *)(a3 + 24);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_2408E5C6C();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11((uint64_t)v4 + *(int *)(a3 + 28), (uint64_t)a2 + *(int *)(a3 + 28), v10);
  }
  return v4;
}

uint64_t destroy for RequestLinkConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2408E5C6C();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 28), v5);
}

uint64_t initializeWithCopy for RequestLinkConfig(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2408E5C6C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v9);
  return a1;
}

uint64_t assignWithCopy for RequestLinkConfig(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2408E5C6C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v9);
  return a1;
}

uint64_t initializeWithTake for RequestLinkConfig(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2408E5C6C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v9);
  return a1;
}

uint64_t assignWithTake for RequestLinkConfig(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2408E5C6C();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 28), a2 + *(int *)(a3 + 28), v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestLinkConfig()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2408E5244(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = sub_2408E5C6C();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for RequestLinkConfig()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2408E52C4(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_2408E5C6C();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2408E5334()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E5C6C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RequestLinkConfig.Direction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2408E5400 + 4 * byte_240920EC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2408E5434 + 4 * byte_240920EC0[v4]))();
}

uint64_t sub_2408E5434(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408E543C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2408E5444);
  return result;
}

uint64_t sub_2408E5450(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2408E5458);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2408E545C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2408E5464(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RequestLinkConfig.Direction()
{
  return &type metadata for RequestLinkConfig.Direction;
}

uint64_t sub_2408E5480()
{
  return MEMORY[0x24BDCB298]();
}

uint64_t sub_2408E548C()
{
  return MEMORY[0x24BDCB2B0]();
}

uint64_t sub_2408E5498()
{
  return MEMORY[0x24BDCB2D8]();
}

uint64_t sub_2408E54A4()
{
  return MEMORY[0x24BDCB308]();
}

uint64_t sub_2408E54B0()
{
  return MEMORY[0x24BDCB310]();
}

uint64_t sub_2408E54BC()
{
  return MEMORY[0x24BDCB368]();
}

uint64_t sub_2408E54C8()
{
  return MEMORY[0x24BDCB380]();
}

uint64_t sub_2408E54D4()
{
  return MEMORY[0x24BDCB3C0]();
}

uint64_t sub_2408E54E0()
{
  return MEMORY[0x24BDCB3F0]();
}

uint64_t sub_2408E54EC()
{
  return MEMORY[0x24BDCB418]();
}

uint64_t sub_2408E54F8()
{
  return MEMORY[0x24BDCBBB8]();
}

uint64_t sub_2408E5504()
{
  return MEMORY[0x24BDCBBC0]();
}

uint64_t sub_2408E5510()
{
  return MEMORY[0x24BDCBBE0]();
}

uint64_t sub_2408E551C()
{
  return MEMORY[0x24BDCBBE8]();
}

uint64_t sub_2408E5528()
{
  return MEMORY[0x24BDCBC08]();
}

uint64_t sub_2408E5534()
{
  return MEMORY[0x24BDCD300]();
}

uint64_t sub_2408E5540()
{
  return MEMORY[0x24BDCDC18]();
}

uint64_t sub_2408E554C()
{
  return MEMORY[0x24BDCDC98]();
}

uint64_t sub_2408E5558()
{
  return MEMORY[0x24BDCDCB0]();
}

uint64_t sub_2408E5564()
{
  return MEMORY[0x24BDCDCE8]();
}

uint64_t sub_2408E5570()
{
  return MEMORY[0x24BDCDE80]();
}

uint64_t sub_2408E557C()
{
  return MEMORY[0x24BDCDE88]();
}

uint64_t sub_2408E5588()
{
  return MEMORY[0x24BDCE2C8]();
}

uint64_t sub_2408E5594()
{
  return MEMORY[0x24BDCE2E0]();
}

uint64_t sub_2408E55A0()
{
  return MEMORY[0x24BDCE358]();
}

uint64_t sub_2408E55AC()
{
  return MEMORY[0x24BDCE380]();
}

uint64_t sub_2408E55B8()
{
  return MEMORY[0x24BDCE3A8]();
}

uint64_t sub_2408E55C4()
{
  return MEMORY[0x24BDCE3B0]();
}

uint64_t sub_2408E55D0()
{
  return MEMORY[0x24BDCE3E0]();
}

uint64_t sub_2408E55DC()
{
  return MEMORY[0x24BDCE450]();
}

uint64_t sub_2408E55E8()
{
  return MEMORY[0x24BDCE5D0]();
}

uint64_t sub_2408E55F4()
{
  return MEMORY[0x24BDCE618]();
}

uint64_t sub_2408E5600()
{
  return MEMORY[0x24BDCE870]();
}

uint64_t sub_2408E560C()
{
  return MEMORY[0x24BDCE8E0]();
}

uint64_t sub_2408E5618()
{
  return MEMORY[0x24BDCE8F0]();
}

uint64_t sub_2408E5624()
{
  return MEMORY[0x24BDCE908]();
}

uint64_t sub_2408E5630()
{
  return MEMORY[0x24BDCE9A0]();
}

uint64_t sub_2408E563C()
{
  return MEMORY[0x24BDCE9A8]();
}

uint64_t sub_2408E5648()
{
  return MEMORY[0x24BDCE9C8]();
}

uint64_t sub_2408E5654()
{
  return MEMORY[0x24BDCEA20]();
}

uint64_t sub_2408E5660()
{
  return MEMORY[0x24BDCEA48]();
}

uint64_t sub_2408E566C()
{
  return MEMORY[0x24BDCEA50]();
}

uint64_t sub_2408E5678()
{
  return MEMORY[0x24BDCF4C0]();
}

uint64_t sub_2408E5684()
{
  return MEMORY[0x24BDCF508]();
}

uint64_t sub_2408E5690()
{
  return MEMORY[0x24BE908D8]();
}

uint64_t sub_2408E569C()
{
  return MEMORY[0x24BE908E0]();
}

uint64_t sub_2408E56A8()
{
  return MEMORY[0x24BE90918]();
}

uint64_t sub_2408E56B4()
{
  return MEMORY[0x24BE90920]();
}

uint64_t sub_2408E56C0()
{
  return MEMORY[0x24BE90928]();
}

uint64_t sub_2408E56CC()
{
  return MEMORY[0x24BE90958]();
}

uint64_t sub_2408E56D8()
{
  return MEMORY[0x24BE90960]();
}

uint64_t sub_2408E56E4()
{
  return MEMORY[0x24BE94840]();
}

uint64_t sub_2408E56F0()
{
  return MEMORY[0x24BE94848]();
}

uint64_t sub_2408E56FC()
{
  return MEMORY[0x24BE94860]();
}

uint64_t sub_2408E5708()
{
  return MEMORY[0x24BE5B940]();
}

uint64_t sub_2408E5714()
{
  return MEMORY[0x24BE5B948]();
}

uint64_t sub_2408E5720()
{
  return MEMORY[0x24BE5B958]();
}

uint64_t sub_2408E572C()
{
  return MEMORY[0x24BE5B960]();
}

uint64_t sub_2408E5738()
{
  return MEMORY[0x24BE5B968]();
}

uint64_t sub_2408E5744()
{
  return MEMORY[0x24BE5B970]();
}

uint64_t sub_2408E5750()
{
  return MEMORY[0x24BE5B990]();
}

uint64_t sub_2408E575C()
{
  return MEMORY[0x24BE5BDE8]();
}

uint64_t sub_2408E5768()
{
  return MEMORY[0x24BE5BEC0]();
}

uint64_t sub_2408E5774()
{
  return MEMORY[0x24BE5BED8]();
}

uint64_t sub_2408E5780()
{
  return MEMORY[0x24BE5BEF0]();
}

uint64_t sub_2408E578C()
{
  return MEMORY[0x24BE5BF00]();
}

uint64_t _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0()
{
  return MEMORY[0x24BE5BF08]();
}

uint64_t sub_2408E57A4()
{
  return MEMORY[0x24BE5BF10]();
}

uint64_t sub_2408E57B0()
{
  return MEMORY[0x24BE5BF28]();
}

uint64_t sub_2408E57BC()
{
  return MEMORY[0x24BE5BF40]();
}

uint64_t sub_2408E57C8()
{
  return MEMORY[0x24BE5BF48]();
}

uint64_t sub_2408E57D4()
{
  return MEMORY[0x24BE5BF50]();
}

uint64_t sub_2408E57E0()
{
  return MEMORY[0x24BE5BF58]();
}

uint64_t sub_2408E57EC()
{
  return MEMORY[0x24BE5BF60]();
}

uint64_t sub_2408E57F8()
{
  return MEMORY[0x24BE5BF68]();
}

uint64_t sub_2408E5804()
{
  return MEMORY[0x24BE5BFC0]();
}

uint64_t sub_2408E5810()
{
  return MEMORY[0x24BE5BFC8]();
}

uint64_t sub_2408E581C()
{
  return MEMORY[0x24BE5C008]();
}

uint64_t sub_2408E5828()
{
  return MEMORY[0x24BE5C010]();
}

uint64_t sub_2408E5834()
{
  return MEMORY[0x24BE5C018]();
}

uint64_t sub_2408E5840()
{
  return MEMORY[0x24BE5C028]();
}

uint64_t sub_2408E584C()
{
  return MEMORY[0x24BE5C030]();
}

uint64_t sub_2408E5858()
{
  return MEMORY[0x24BE5C038]();
}

uint64_t sub_2408E5864()
{
  return MEMORY[0x24BE5C048]();
}

uint64_t sub_2408E5870()
{
  return MEMORY[0x24BE5C058]();
}

uint64_t sub_2408E587C()
{
  return MEMORY[0x24BE5C060]();
}

uint64_t sub_2408E5888()
{
  return MEMORY[0x24BE5C068]();
}

uint64_t sub_2408E5894()
{
  return MEMORY[0x24BE5C070]();
}

uint64_t sub_2408E58A0()
{
  return MEMORY[0x24BE5C078]();
}

uint64_t sub_2408E58AC()
{
  return MEMORY[0x24BE5C0A0]();
}

uint64_t sub_2408E58B8()
{
  return MEMORY[0x24BE5C0A8]();
}

uint64_t sub_2408E58C4()
{
  return MEMORY[0x24BE5C0B0]();
}

uint64_t sub_2408E58D0()
{
  return MEMORY[0x24BE5C0B8]();
}

uint64_t sub_2408E58DC()
{
  return MEMORY[0x24BE5C0C0]();
}

uint64_t sub_2408E58E8()
{
  return MEMORY[0x24BE5C0C8]();
}

uint64_t sub_2408E58F4()
{
  return MEMORY[0x24BE5C0D0]();
}

uint64_t sub_2408E5900()
{
  return MEMORY[0x24BE5C0D8]();
}

uint64_t sub_2408E590C()
{
  return MEMORY[0x24BE5C0E8]();
}

uint64_t sub_2408E5918()
{
  return MEMORY[0x24BE5C100]();
}

uint64_t sub_2408E5924()
{
  return MEMORY[0x24BE5C108]();
}

uint64_t sub_2408E5930()
{
  return MEMORY[0x24BE5C118]();
}

uint64_t sub_2408E593C()
{
  return MEMORY[0x24BE5C120]();
}

uint64_t sub_2408E5948()
{
  return MEMORY[0x24BE5C130]();
}

uint64_t sub_2408E5954()
{
  return MEMORY[0x24BE5C140]();
}

uint64_t sub_2408E5960()
{
  return MEMORY[0x24BE5C148]();
}

uint64_t sub_2408E596C()
{
  return MEMORY[0x24BE5C160]();
}

uint64_t sub_2408E5978()
{
  return MEMORY[0x24BE5C1B0]();
}

uint64_t sub_2408E5984()
{
  return MEMORY[0x24BE5C1B8]();
}

uint64_t sub_2408E5990()
{
  return MEMORY[0x24BE5C1C0]();
}

uint64_t sub_2408E599C()
{
  return MEMORY[0x24BE5C1D0]();
}

uint64_t sub_2408E59A8()
{
  return MEMORY[0x24BE5C1E8]();
}

uint64_t sub_2408E59B4()
{
  return MEMORY[0x24BE5C210]();
}

uint64_t sub_2408E59C0()
{
  return MEMORY[0x24BE5C218]();
}

uint64_t sub_2408E59CC()
{
  return MEMORY[0x24BE5C230]();
}

uint64_t sub_2408E59D8()
{
  return MEMORY[0x24BE5C270]();
}

uint64_t sub_2408E59E4()
{
  return MEMORY[0x24BE5C278]();
}

uint64_t sub_2408E59F0()
{
  return MEMORY[0x24BE5C298]();
}

uint64_t sub_2408E59FC()
{
  return MEMORY[0x24BE5C2A0]();
}

uint64_t sub_2408E5A08()
{
  return MEMORY[0x24BE5C2A8]();
}

uint64_t sub_2408E5A14()
{
  return MEMORY[0x24BE5C2B0]();
}

uint64_t sub_2408E5A20()
{
  return MEMORY[0x24BE5C2C0]();
}

uint64_t sub_2408E5A2C()
{
  return MEMORY[0x24BE5C2D8]();
}

uint64_t sub_2408E5A38()
{
  return MEMORY[0x24BE5C2E8]();
}

uint64_t sub_2408E5A44()
{
  return MEMORY[0x24BE5C2F0]();
}

uint64_t sub_2408E5A50()
{
  return MEMORY[0x24BE5C2F8]();
}

uint64_t sub_2408E5A5C()
{
  return MEMORY[0x24BE5C300]();
}

uint64_t sub_2408E5A68()
{
  return MEMORY[0x24BE5C310]();
}

uint64_t sub_2408E5A74()
{
  return MEMORY[0x24BE5C330]();
}

uint64_t sub_2408E5A80()
{
  return MEMORY[0x24BE5C340]();
}

uint64_t sub_2408E5A8C()
{
  return MEMORY[0x24BE5C348]();
}

uint64_t sub_2408E5A98()
{
  return MEMORY[0x24BE5C350]();
}

uint64_t sub_2408E5AA4()
{
  return MEMORY[0x24BE58598]();
}

uint64_t sub_2408E5AB0()
{
  return MEMORY[0x24BE586C8]();
}

uint64_t sub_2408E5ABC()
{
  return MEMORY[0x24BE586F0]();
}

uint64_t sub_2408E5AC8()
{
  return MEMORY[0x24BE58700]();
}

uint64_t sub_2408E5AD4()
{
  return MEMORY[0x24BE58710]();
}

uint64_t sub_2408E5AE0()
{
  return MEMORY[0x24BE58730]();
}

uint64_t sub_2408E5AEC()
{
  return MEMORY[0x24BE58740]();
}

uint64_t sub_2408E5AF8()
{
  return MEMORY[0x24BE58770]();
}

uint64_t sub_2408E5B04()
{
  return MEMORY[0x24BE58780]();
}

uint64_t sub_2408E5B10()
{
  return MEMORY[0x24BE587A0]();
}

uint64_t sub_2408E5B1C()
{
  return MEMORY[0x24BE587C0]();
}

uint64_t sub_2408E5B28()
{
  return MEMORY[0x24BE587D0]();
}

uint64_t sub_2408E5B34()
{
  return MEMORY[0x24BE587F0]();
}

uint64_t sub_2408E5B40()
{
  return MEMORY[0x24BE58818]();
}

uint64_t sub_2408E5B4C()
{
  return MEMORY[0x24BE59798]();
}

uint64_t sub_2408E5B58()
{
  return MEMORY[0x24BE597A8]();
}

uint64_t sub_2408E5B64()
{
  return MEMORY[0x24BE597C0]();
}

uint64_t sub_2408E5B70()
{
  return MEMORY[0x24BE597D0]();
}

uint64_t sub_2408E5B7C()
{
  return MEMORY[0x24BE59830]();
}

uint64_t sub_2408E5B88()
{
  return MEMORY[0x24BE598D0]();
}

uint64_t sub_2408E5B94()
{
  return MEMORY[0x24BE598E8]();
}

uint64_t sub_2408E5BA0()
{
  return MEMORY[0x24BE59910]();
}

uint64_t sub_2408E5BAC()
{
  return MEMORY[0x24BE59930]();
}

uint64_t sub_2408E5BB8()
{
  return MEMORY[0x24BE59948]();
}

uint64_t sub_2408E5BC4()
{
  return MEMORY[0x24BE59A90]();
}

uint64_t sub_2408E5BD0()
{
  return MEMORY[0x24BE59C20]();
}

uint64_t sub_2408E5BDC()
{
  return MEMORY[0x24BE59C38]();
}

uint64_t sub_2408E5BE8()
{
  return MEMORY[0x24BE59C70]();
}

uint64_t sub_2408E5BF4()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_2408E5C00()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_2408E5C0C()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_2408E5C18()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t sub_2408E5C24()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_2408E5C30()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_2408E5C3C()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2408E5C48()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2408E5C54()
{
  return MEMORY[0x24BEE78E8]();
}

uint64_t sub_2408E5C60()
{
  return MEMORY[0x24BDB9FB0]();
}

uint64_t sub_2408E5C6C()
{
  return MEMORY[0x24BE2BD08]();
}

uint64_t sub_2408E5C78()
{
  return MEMORY[0x24BE2BD20]();
}

uint64_t sub_2408E5C84()
{
  return MEMORY[0x24BE2BD50]();
}

uint64_t sub_2408E5C90()
{
  return MEMORY[0x24BDCF800]();
}

uint64_t sub_2408E5C9C()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_2408E5CA8()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_2408E5CB4()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_2408E5CC0()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_2408E5CCC()
{
  return MEMORY[0x24BEE07E8]();
}

uint64_t sub_2408E5CD8()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2408E5CE4()
{
  return MEMORY[0x24BDCF9E8]();
}

uint64_t sub_2408E5CF0()
{
  return MEMORY[0x24BDCFA00]();
}

uint64_t sub_2408E5CFC()
{
  return MEMORY[0x24BDCFA10]();
}

uint64_t sub_2408E5D08()
{
  return MEMORY[0x24BDCFA20]();
}

uint64_t sub_2408E5D14()
{
  return MEMORY[0x24BDCFA40]();
}

uint64_t sub_2408E5D20()
{
  return MEMORY[0x24BDCFAD0]();
}

uint64_t sub_2408E5D2C()
{
  return MEMORY[0x24BDCFAF0]();
}

uint64_t sub_2408E5D38()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_2408E5D44()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2408E5D50()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2408E5D5C()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2408E5D68()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_2408E5D74()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_2408E5D80()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_2408E5D8C()
{
  return MEMORY[0x24BDCFBA0]();
}

uint64_t sub_2408E5D98()
{
  return MEMORY[0x24BDCFBD0]();
}

uint64_t sub_2408E5DA4()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_2408E5DB0()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_2408E5DBC()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_2408E5DC8()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_2408E5DD4()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_2408E5DE0()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_2408E5DEC()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_2408E5DF8()
{
  return MEMORY[0x24BEE6938]();
}

uint64_t sub_2408E5E04()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_2408E5E10()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_2408E5E1C()
{
  return MEMORY[0x24BDCFC50]();
}

uint64_t sub_2408E5E28()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_2408E5E34()
{
  return MEMORY[0x24BDCFCB8]();
}

uint64_t sub_2408E5E40()
{
  return MEMORY[0x24BDCFCE0]();
}

uint64_t sub_2408E5E4C()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_2408E5E58()
{
  return MEMORY[0x24BE2BD58]();
}

uint64_t sub_2408E5E64()
{
  return MEMORY[0x24BE2BD60]();
}

uint64_t sub_2408E5E70()
{
  return MEMORY[0x24BE2BD68]();
}

uint64_t sub_2408E5E7C()
{
  return MEMORY[0x24BE2BD70]();
}

uint64_t sub_2408E5E88()
{
  return MEMORY[0x24BE948A0]();
}

uint64_t sub_2408E5E94()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_2408E5EA0()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_2408E5EAC()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_2408E5EB8()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_2408E5EC4()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2408E5ED0()
{
  return MEMORY[0x24BEE7958]();
}

uint64_t sub_2408E5EDC()
{
  return MEMORY[0x24BE948E0]();
}

uint64_t sub_2408E5EE8()
{
  return MEMORY[0x24BE948F8]();
}

uint64_t sub_2408E5EF4()
{
  return MEMORY[0x24BDD0200]();
}

uint64_t sub_2408E5F00()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_2408E5F0C()
{
  return MEMORY[0x24BEE79A0]();
}

uint64_t sub_2408E5F18()
{
  return MEMORY[0x24BEE1C58]();
}

uint64_t sub_2408E5F24()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2408E5F30()
{
  return MEMORY[0x24BDD04A0]();
}

uint64_t sub_2408E5F3C()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2408E5F48()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2408E5F54()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_2408E5F60()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_2408E5F6C()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_2408E5F78()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_2408E5F84()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_2408E5F90()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2408E5F9C()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_2408E5FA8()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2408E5FB4()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_2408E5FC0()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_2408E5FCC()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2408E5FD8()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_2408E5FE4()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_2408E5FF0()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_2408E5FFC()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_2408E6008()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_2408E6014()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_2408E6020()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_2408E602C()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_2408E6038()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_2408E6044()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_2408E6050()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_2408E605C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_2408E6068()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_2408E6074()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_2408E6080()
{
  return MEMORY[0x24BEE3280]();
}

uint64_t sub_2408E608C()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_2408E6098()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_2408E60A4()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_2408E60B0()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_2408E60BC()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_2408E60C8()
{
  return MEMORY[0x24BEE3340]();
}

uint64_t sub_2408E60D4()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_2408E60E0()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_2408E60EC()
{
  return MEMORY[0x24BEE3378]();
}

uint64_t sub_2408E60F8()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_2408E6104()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_2408E6110()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_2408E611C()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_2408E6128()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_2408E6134()
{
  return MEMORY[0x24BEE3488]();
}

uint64_t sub_2408E6140()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_2408E614C()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_2408E6158()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_2408E6164()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_2408E6170()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_2408E617C()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2408E6188()
{
  return MEMORY[0x24BEE3A88]();
}

uint64_t sub_2408E6194()
{
  return MEMORY[0x24BEE3AF0]();
}

uint64_t sub_2408E61A0()
{
  return MEMORY[0x24BEE3B20]();
}

uint64_t sub_2408E61AC()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_2408E61B8()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_2408E61C4()
{
  return MEMORY[0x24BDD0700]();
}

uint64_t sub_2408E61D0()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_2408E61DC()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_2408E61E8()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_2408E61F4()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_2408E6200()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_2408E620C()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_2408E6218()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2408E6224()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2408E6230()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_2408E623C()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2408E6248()
{
  return MEMORY[0x24BEE45F8]();
}

uint64_t sub_2408E6254()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_2408E6260()
{
  return MEMORY[0x24BEE4628]();
}

uint64_t sub_2408E626C()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_2408E6278()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_2408E6284()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_2408E6290()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x24BE1A1C8]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x24BE0C258]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x24BE7AF90]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x24BE7AFA8]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x24BE7AFB0]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x24BE7AFD8]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x24BE7AFE8]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x24BE7B018]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x24BE7B030]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x24BE7B038]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x24BE7B048]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x24BEDCE10]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x24BEDCE18]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAE3F0](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x24BEDCF68](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x24BEDCF88]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x24BEDCFE8]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x24BEDD068](obj);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x24BEDD130]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x24BEDD138]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x24BEDD408](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x24BDAF4D0]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x24BEE4E38]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x24BEE4E50]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x24BEE4F28]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x24BEE4F78]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

