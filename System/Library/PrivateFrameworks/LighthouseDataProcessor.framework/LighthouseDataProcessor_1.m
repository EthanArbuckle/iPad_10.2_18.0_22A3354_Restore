uint64_t initializeWithTake for PerfMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for PerfMetricsDefinitions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2408E5624();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for PerfMetricsDefinitions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24042D220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_2408E5624();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PerfMetricsDefinitions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24042D2AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_2408E5624();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_24042D328()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E5624();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24042D3B8()
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2408EB470;
  *(_QWORD *)(inited + 32) = 0xD000000000000013;
  *(_QWORD *)(inited + 40) = 0x8000000240923450;
  *(_QWORD *)(inited + 48) = sub_2408E5CE4();
  *(_QWORD *)(inited + 56) = 0x6D614E726F727265;
  *(_QWORD *)(inited + 64) = 0xE900000000000065;
  *(_QWORD *)(inited + 72) = sub_2408E5CE4();
  *(_QWORD *)(inited + 80) = 0x6E6F73616572;
  *(_QWORD *)(inited + 88) = 0xE600000000000000;
  *(_QWORD *)(inited + 96) = sub_2408E5CE4();
  return sub_2403A864C(inited);
}

void _s23LighthouseDataProcessor20CoreAnalyticsServiceO017submitReliabilityE08category6reasonyAA0H8CategoryO_SStFZ_0(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_24042D524()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)sub_24042D57C + 4 * byte_2408EB48E[v0]))();
}

void sub_24042D57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[16];

  v4 = (void *)sub_2408E5CE4();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_QWORD *)(v5 + 24) = v2;
  strcpy((char *)(v5 + 32), "invalidStream");
  *(_WORD *)(v5 + 46) = -4864;
  *(_QWORD *)(v5 + 48) = v1;
  *(_QWORD *)(v5 + 56) = v0;
  v7[4] = sub_24042D904;
  v7[5] = v5;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2408E359C;
  v7[3] = &block_descriptor_0;
  v6 = _Block_copy(v7);
  swift_bridgeObjectRetain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v6);

}

ValueMetadata *type metadata accessor for CoreAnalyticsService()
{
  return &type metadata for CoreAnalyticsService;
}

uint64_t sub_24042D8D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_24042D904()
{
  return sub_24042D3B8();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t static BMFeedbackLearningUserInteraction.messageFilteringPolicy()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_2408E5E70();
  if (!v1)
  {
    *(_QWORD *)a1 = result;
    *(_BYTE *)(a1 + 8) = 1;
  }
  return result;
}

id IFSELFMessageEventWrapper.message.getter()
{
  id *v0;

  return *v0;
}

void IFSELFMessageEventWrapper.message.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*IFSELFMessageEventWrapper.message.modify())()
{
  return nullsub_1;
}

uint64_t IFSELFMessageEventWrapper.bridgedMonotonicTimeStamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for IFSELFMessageEventWrapper(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 20), a1, &qword_256FFCDA0);
}

uint64_t type metadata accessor for IFSELFMessageEventWrapper(uint64_t a1)
{
  return sub_2403BA700(a1, qword_254355DD8);
}

uint64_t IFSELFMessageEventWrapper.bridgedMonotonicTimeStamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IFSELFMessageEventWrapper(0) + 20);
  return sub_24042DA24(a1, v3);
}

uint64_t sub_24042DA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*IFSELFMessageEventWrapper.bridgedMonotonicTimeStamp.modify())()
{
  type metadata accessor for IFSELFMessageEventWrapper(0);
  return nullsub_1;
}

uint64_t IFSELFMessageEventWrapper.monotonicTimeStampForSELF.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = sub_2408E5BDC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v24 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v24 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = type metadata accessor for IFSELFMessageEventWrapper(0);
  sub_2403A9210(v1 + *(int *)(v19 + 20), (uint64_t)v18, &qword_256FFCDA0);
  v20 = type metadata accessor for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v18, 1, v20) != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if (*v18)
        return sub_2408E56B4();
    }
    else
    {
      sub_24042DD30((uint64_t)v18, (uint64_t)v15);
      sub_2403A9210((uint64_t)v15, (uint64_t)v13, &qword_256FFCDA8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v13, v3);
        (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
        sub_2408E56A8();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
        sub_2403A97FC((uint64_t)v15, &qword_256FFCDA8);
        v23 = sub_2408E56C0();
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 0, 1, v23);
      }
      sub_2403A97FC((uint64_t)v15, &qword_256FFCDA8);
      sub_2403A97FC((uint64_t)v13, &qword_256FFCDA8);
    }
  }
  v22 = sub_2408E56C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 1, 1, v22);
}

uint64_t type metadata accessor for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_2543563B8);
}

uint64_t sub_24042DD30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id IFSELFMessageEventWrapper.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  id result;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = (uint64_t)a1 + *(int *)(type metadata accessor for IFSELFMessageEventWrapper(0) + 20);
  v3 = type metadata accessor for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(0);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v5(v2, 1, 1, v3);
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE95BA0]), sel_init);
  if (result)
  {
    *a1 = result;
    sub_2403A97FC(v2, &qword_256FFCDA0);
    return (id)((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v5)(v2, 1, 1, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *SwiftSELFMapper.__allocating_init(stream:bookmarkProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  swift_allocObject();
  v6 = sub_24042EB1C(a1, a2, a3);
  swift_release();
  return v6;
}

_QWORD *SwiftSELFMapper.init(stream:bookmarkProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3 = sub_24042EB1C(a1, a2, a3);
  swift_release();
  return v3;
}

uint64_t sub_24042DEB8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  *(_QWORD *)(v1 + 32) = *v0;
  return swift_task_switch();
}

uint64_t sub_24042DED8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  v1 = (uint64_t *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v2 + 80);
  if (sub_240419E84(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 32), *(_QWORD *)(v2 + 80), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 24), *(_QWORD *)(v2 + 80), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 32), *(_QWORD *)(v2 + 88), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 40))&& (__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256FFCDB8), v11 = sub_2408E6080(), swift_bridgeObjectRelease(), v11))
  {
    if (qword_254355DF0 != -1)
      swift_once();
    v13 = sub_2408E5C48();
    __swift_project_value_buffer(v13, (uint64_t)qword_254356428);
    swift_bridgeObjectRetain();
    v14 = sub_2408E5C3C();
    v15 = sub_2408E5EA0();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 134217984;
      *v1 = MEMORY[0x242683BA0](v11, v3);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v14, v15, "#SwiftSELFMapper Number of Biome events loaded: %ld", v16, 0xCu);
      MEMORY[0x242684668](v16, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

  }
  else
  {
    if (qword_254355DF0 != -1)
      swift_once();
    v4 = sub_2408E5C48();
    __swift_project_value_buffer(v4, (uint64_t)qword_254356428);
    swift_retain_n();
    v5 = sub_2408E5C3C();
    v6 = sub_2408E5EA0();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v17 = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = sub_2408E6290();
      *v1 = sub_2403B3ED0(v9, v10, &v17);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_240347000, v5, v6, "#SwiftSELFMapper event loaded from %s are Nil!", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242684668](v8, -1, -1);
      MEMORY[0x242684668](v7, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    v11 = sub_2408E5DC8();
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t sub_24042E220()
{
  return swift_task_switch();
}

uint64_t sub_24042E234()
{
  return sub_2408E602C();
}

uint64_t SwiftSELFMapper.deinit()
{
  uint64_t v0;

  swift_release();

  return v0;
}

uint64_t SwiftSELFMapper.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24042E2F0(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_240430B94;
  v4[3] = v3;
  v4[4] = *v3;
  return swift_task_switch();
}

uint64_t ObjCSELFMapper.__allocating_init(bmStreamIdentifier:bookmarkProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_24042F098(a1, a2);
  swift_release();
  return v4;
}

uint64_t ObjCSELFMapper.init(bmStreamIdentifier:bookmarkProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_24042F098(a1, a2);
  swift_release();
  return v2;
}

uint64_t sub_24042E3E4()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = v0;
  *(_QWORD *)(v1 + 40) = *v0;
  return swift_task_switch();
}

uint64_t sub_24042E404()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[4];
  v2 = v0[5];
  v3 = *(_QWORD *)(v1 + 32);
  v0[6] = v3;
  v4 = *(_QWORD *)(v1 + 24);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256FFCA10 + dword_256FFCA10);
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  v6 = *(_QWORD *)(v2 + 80);
  v0[8] = v6;
  *v5 = v0;
  v5[1] = sub_24042E49C;
  return v8(v3, v4, 0xD000000000000022, 0x8000000240922BC0, v6);
}

uint64_t sub_24042E49C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_24042E4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  if (*(_QWORD *)(v0 + 72)
    && (sub_240422180(0, &qword_2543563E0), v1 = sub_2408E6080(), swift_bridgeObjectRelease(), v1))
  {
    if (qword_254355DF0 != -1)
      swift_once();
    v2 = sub_2408E5C48();
    __swift_project_value_buffer(v2, (uint64_t)qword_254356428);
    swift_bridgeObjectRetain();
    v3 = sub_2408E5C3C();
    v4 = sub_2408E5EA0();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = *(_QWORD *)(v0 + 64);
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134217984;
      *(_QWORD *)(v0 + 24) = MEMORY[0x242683BA0](v1, v5);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_240347000, v3, v4, "#ObjCSELFMapper Number of Biome events loaded: %ld", v6, 0xCu);
      MEMORY[0x242684668](v6, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
  }
  else
  {
    if (qword_254355DF0 != -1)
      swift_once();
    v7 = sub_2408E5C48();
    __swift_project_value_buffer(v7, (uint64_t)qword_254356428);
    swift_retain_n();
    v8 = sub_2408E5C3C();
    v9 = sub_2408E5EA0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v16 = v11;
      *(_DWORD *)v10 = 136315138;
      v12 = sub_2408E5D08();
      *(_QWORD *)(v0 + 16) = sub_2403B3ED0(v12, v13, &v16);
      sub_2408E5F3C();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_240347000, v8, v9, "#ObjCSELFMapper event loaded from %s are Nil!", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x242684668](v11, -1, -1);
      MEMORY[0x242684668](v10, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    v14 = sub_2408E5DC8();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
  }
}

uint64_t sub_24042E818()
{
  return swift_task_switch();
}

uint64_t sub_24042E82C()
{
  return sub_2408E602C();
}

uint64_t ObjCSELFMapper.deinit()
{
  uint64_t v0;

  swift_release();

  return v0;
}

uint64_t ObjCSELFMapper.__deallocating_deinit()
{
  ObjCSELFMapper.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24042E8E4(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v3 = *v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_24042E950;
  v4[4] = v3;
  v4[5] = *v3;
  return swift_task_switch();
}

uint64_t sub_24042E950(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v5;

  v3 = *(_QWORD **)(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();
  *v3 = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_24042E9A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v3 = *a1;
  v6 = (uint64_t (*)(uint64_t))(**(int **)(**(_QWORD **)v1 + 128) + *(_QWORD *)(**(_QWORD **)v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24042EA0C;
  return v6(v3);
}

uint64_t sub_24042EA0C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_24042EA60@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

void *sub_24042EA88(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_2408E6068();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

_QWORD *sub_24042EB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  id v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v46;
  char **v47;
  char **v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  void (*v54)(char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;

  v51 = a1;
  v52 = a2;
  *(_QWORD *)(v3 + 16) = a3;
  v4 = sub_2408E5624();
  v5 = *(_QWORD **)(v4 - 8);
  v6 = v5[8];
  MEMORY[0x24BDAC7A8](v4);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  swift_retain();
  DataProcessorBookmarkProvider.lastCollectionDate.getter((uint64_t)&v46 - v7);
  if (qword_254355DF0 != -1)
    swift_once();
  v8 = sub_2408E5C48();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_254356428);
  MEMORY[0x24BDAC7A8](v9);
  v10 = (char *)&v46 - v7;
  v11 = (void (*)(char *, char *, uint64_t))v5[2];
  v50 = (char *)&v46 - v7;
  v55 = v11;
  v11((char *)&v46 - v7, (char *)&v46 - v7, v4);
  v12 = sub_2408E5C3C();
  v13 = sub_2408E5EA0();
  v14 = os_log_type_enabled(v12, v13);
  v49 = v5;
  if (v14)
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v54 = (void (*)(char *, uint64_t))v9;
    v48 = &v46;
    v17 = v16;
    v57 = v16;
    *(_DWORD *)v15 = 136315138;
    v47 = (char **)(v15 + 4);
    sub_24041CF80();
    v18 = sub_2408E6170();
    v56 = sub_2403B3ED0(v18, v19, &v57);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    v20 = (void (*)(char *, uint64_t))v5[1];
    v20(v10, v4);
    _os_log_impl(&dword_240347000, v12, v13, "#SwiftSELFMapper Original bookmark start date: collecting from %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v17, -1, -1);
    MEMORY[0x242684668](v15, -1, -1);
  }
  else
  {
    v20 = (void (*)(char *, uint64_t))v5[1];
    v20((char *)&v46 - v7, v4);
  }

  v48 = &v46;
  MEMORY[0x24BDAC7A8](v21);
  v22 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v23 = sub_2408E5618();
  MEMORY[0x24BDAC7A8](v23);
  v55((char *)&v46 - v22, (char *)&v46 - v22, v4);
  v24 = sub_2408E5C3C();
  v25 = sub_2408E5EA0();
  v26 = os_log_type_enabled(v24, v25);
  v54 = v20;
  if (v26)
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v47 = &v46;
    v29 = v28;
    v57 = v28;
    *(_DWORD *)v27 = 136315138;
    v46 = (char *)(v27 + 4);
    sub_24041CF80();
    v30 = sub_2408E6170();
    v56 = sub_2403B3ED0(v30, v31, &v57);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    v54((char *)&v46 - v22, v4);
    _os_log_impl(&dword_240347000, v24, v25, "#SwiftSELFMapper Bookmark: updating lastCollectionDate to current Date %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v29, -1, -1);
    MEMORY[0x242684668](v27, -1, -1);
  }
  else
  {
    v20((char *)&v46 - v22, v4);
  }

  v32 = v53;
  MEMORY[0x24BDAC7A8](v33);
  v46 = (char *)&v46 - v22;
  v34 = v55;
  v55((char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v46 - v22, v4);
  DataProcessorBookmarkProvider.lastCollectionDate.setter((uint64_t)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240422180(0, (unint64_t *)&qword_2543563E8);
  v35 = __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
  v47 = &v46;
  v36 = *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v46 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v50;
  v34(v37, v50, v4);
  v39 = (uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v49[7];
  v40 = v39(v37, 0, 1, v4);
  MEMORY[0x24BDAC7A8](v40);
  v41 = v46;
  v34(v37, v46, v4);
  v39(v37, 0, 1, v4);
  v42 = sub_240728534((uint64_t)v37, (uint64_t)v37, 0, 0, 0);
  v43 = v54;
  v54(v41, v4);
  v43(v38, v4);
  v44 = v51;
  v32[3] = v42;
  v32[4] = v44;
  v32[5] = v52;
  return v32;
}

uint64_t sub_24042F098(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t (*v38)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v39;
  uint8_t *v40;
  id v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v45;
  uint8_t *v46;
  uint64_t *v47;
  uint64_t *v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;

  v51 = a1;
  *(_QWORD *)(v2 + 16) = a2;
  v3 = sub_2408E5624();
  v4 = *(_QWORD **)(v3 - 8);
  v5 = v4[8];
  MEMORY[0x24BDAC7A8](v3);
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  swift_retain();
  DataProcessorBookmarkProvider.lastCollectionDate.getter((uint64_t)&v45 - v6);
  if (qword_254355DF0 != -1)
    swift_once();
  v7 = sub_2408E5C48();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_254356428);
  v48 = &v45;
  MEMORY[0x24BDAC7A8](v8);
  v9 = (char *)&v45 - v6;
  v54 = (void (*)(char *, char *, uint64_t))v4[2];
  v54((char *)&v45 - v6, (char *)&v45 - v6, v3);
  v47 = (uint64_t *)v8;
  v10 = sub_2408E5C3C();
  v11 = sub_2408E5EA0();
  v12 = os_log_type_enabled(v10, v11);
  v49 = v4;
  v50 = (char *)&v45 - v6;
  if (v12)
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v56 = v14;
    *(_DWORD *)v13 = 136315138;
    v53 = (void (*)(char *, uint64_t))(v13 + 4);
    sub_24041CF80();
    v15 = sub_2408E6170();
    v55 = sub_2403B3ED0(v15, v16, &v56);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    v17 = (void (*)(char *, uint64_t))v4[1];
    v17(v9, v3);
    _os_log_impl(&dword_240347000, v10, v11, "#ObjCSELFMapper Original bookmark start date: collecting from %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v14, -1, -1);
    MEMORY[0x242684668](v13, -1, -1);
  }
  else
  {
    v17 = (void (*)(char *, uint64_t))v4[1];
    v17((char *)&v45 - v6, v3);
  }

  v48 = &v45;
  MEMORY[0x24BDAC7A8](v18);
  v19 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  v20 = (uint8_t *)&v45 - v19;
  v21 = sub_2408E5618();
  MEMORY[0x24BDAC7A8](v21);
  v22 = (char *)&v45 - v19;
  v54((char *)&v45 - v19, (char *)&v45 - v19, v3);
  v23 = sub_2408E5C3C();
  v24 = sub_2408E5EA0();
  v25 = os_log_type_enabled(v23, v24);
  v53 = v17;
  if (v25)
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v56 = v27;
    v47 = &v45;
    *(_DWORD *)v26 = 136315138;
    v46 = v26 + 4;
    sub_24041CF80();
    v28 = sub_2408E6170();
    v55 = sub_2403B3ED0(v28, v29, &v56);
    sub_2408E5F3C();
    swift_bridgeObjectRelease();
    v53(v22, v3);
    _os_log_impl(&dword_240347000, v23, v24, "#ObjCSELFMapper Bookmark: updating lastCollectionDate to current Date %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x242684668](v27, -1, -1);
    MEMORY[0x242684668](v26, -1, -1);
  }
  else
  {
    v17((char *)&v45 - v19, v3);
  }

  v30 = v52;
  MEMORY[0x24BDAC7A8](v31);
  v32 = v20;
  v46 = v20;
  v33 = v54;
  v54((char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)v32, v3);
  DataProcessorBookmarkProvider.lastCollectionDate.setter((uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240422180(0, (unint64_t *)&qword_2543563E8);
  v34 = __swift_instantiateConcreteTypeFromMangledName(qword_254356330);
  v47 = &v45;
  v35 = *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v45 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v50;
  v33(v36, v50, v3);
  v38 = (uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v49[7];
  v39 = v38(v36, 0, 1, v3);
  MEMORY[0x24BDAC7A8](v39);
  v40 = v46;
  v33(v36, (char *)v46, v3);
  v38(v36, 0, 1, v3);
  v41 = sub_240728534((uint64_t)v36, (uint64_t)v36, 0, 0, 0);
  v42 = v53;
  v53((char *)v40, v3);
  v42(v37, v3);
  v43 = v51;
  *(_QWORD *)(v30 + 24) = v41;
  *(_QWORD *)(v30 + 32) = v43;
  return v30;
}

void **initializeBufferWithCopyOfBuffer for IFSELFMessageEventWrapper(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v5;
  uint64_t v6;
  void **v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(void **, uint64_t, uint64_t);
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (void **)((char *)a1 + v6);
    v8 = (void **)((char *)a2 + v6);
    v9 = type metadata accessor for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(0);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v10 + 48);
    v12 = v4;
    if (v11(v8, 1, v9))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA0);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v14 = *v8;
        *v7 = *v8;
        v15 = v14;
      }
      else
      {
        v16 = sub_2408E5BDC();
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(void **, void **, uint64_t))(v17 + 16))(v7, v8, v16);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v17 + 56))(v7, 0, 1, v16);
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v5;
}

void destroy for IFSELFMessageEventWrapper(id *a1, uint64_t a2)
{
  id *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (id *)((char *)a1 + *(int *)(a2 + 20));
  v5 = type metadata accessor for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(0);
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {

    }
    else
    {
      v6 = sub_2408E5BDC();
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
        (*(void (**)(id *, uint64_t))(v7 + 8))(v4, v6);
    }
  }
}

void **initializeWithCopy for IFSELFMessageEventWrapper(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  void **v6;
  void **v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(void **, uint64_t, uint64_t);
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (void **)((char *)a1 + v5);
  v7 = (void **)((char *)a2 + v5);
  v8 = type metadata accessor for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v9 + 48);
  v11 = v4;
  if (v10(v7, 1, v8))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = *v7;
      *v6 = *v7;
      v14 = v13;
    }
    else
    {
      v15 = sub_2408E5BDC();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v16 + 16))(v6, v7, v15);
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v16 + 56))(v6, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void **assignWithCopy for IFSELFMessageEventWrapper(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void **v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void **, uint64_t, uint64_t);
  int v15;
  int v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (void **)((char *)a1 + v9);
  v11 = (void **)((char *)a2 + v9);
  v12 = type metadata accessor for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v17 = *v11;
        *v10 = *v11;
        v18 = v17;
      }
      else
      {
        v22 = sub_2408E5BDC();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v23 + 48))(v11, 1, v22))
        {
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(void **, void **, uint64_t))(v23 + 16))(v10, v11, v22);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v22);
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      return a1;
    }
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  if (v16)
  {
    sub_24042FC24((uint64_t)v10);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_24042FC24((uint64_t)v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = *v11;
      *v10 = *v11;
      v21 = v20;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v25 = sub_2408E5BDC();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48))(v11, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v26 + 16))(v10, v11, v25);
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v26 + 56))(v10, 0, 1, v25);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_24042FC24(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeWithTake for IFSELFMessageEventWrapper(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v5, v6, *(_QWORD *)(v8 + 64));
    }
    else
    {
      v10 = sub_2408E5BDC();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
        memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v5, v6, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void **assignWithTake for IFSELFMessageEventWrapper(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      if (a1 == a2)
        return a1;
      sub_24042FC24((uint64_t)v8);
      if (!swift_getEnumCaseMultiPayload())
      {
        v19 = sub_2408E5BDC();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v19))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v8, v9, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
        }
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v15 = *(_QWORD *)(v11 + 64);
LABEL_8:
      memcpy(v8, v9, v15);
      return a1;
    }
    sub_24042FC24((uint64_t)v8);
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA0) - 8) + 64);
    goto LABEL_8;
  }
  if (v14)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v8, v9, *(_QWORD *)(v11 + 64));
  }
  else
  {
    v16 = sub_2408E5BDC();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v8, v9, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for IFSELFMessageEventWrapper()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24043000C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for IFSELFMessageEventWrapper()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_240430098(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_240430110()
{
  unint64_t v0;

  sub_2403C8BE4(319, &qword_2543563C8, (void (*)(uint64_t))type metadata accessor for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

char *initializeBufferWithCopyOfBuffer for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = *a2;
      *(_QWORD *)a1 = *a2;
      v7 = v6;
    }
    else
    {
      v9 = sub_2408E5BDC();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char **, uint64_t))(v10 + 16))(a1, a2, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(id *a1)
{
  uint64_t v2;
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    v2 = sub_2408E5BDC();
    v3 = *(_QWORD *)(v2 - 8);
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
      (*(void (**)(id *, uint64_t))(v3 + 8))(a1, v2);
  }
}

void **initializeWithCopy for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(void **a1, void **a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = *a2;
    *a1 = *a2;
    v5 = v4;
  }
  else
  {
    v6 = sub_2408E5BDC();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void **, void **, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(void **a1, void **a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_24042FC24((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *a2;
      *a1 = *a2;
      v5 = v4;
    }
    else
    {
      v6 = sub_2408E5BDC();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_2408E5BDC();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for IFSELFMessageEventWrapper.BridgedMonotonicTimeStamp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_24042FC24((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_2408E5BDC();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCDA8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_24043070C()
{
  unint64_t v0;

  sub_2403C8BE4(319, &qword_2543563D8, (void (*)(uint64_t))MEMORY[0x24BE59C38]);
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

uint64_t dispatch thunk of SELFMapperProtocol.loadBiomeEvent()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2403B0350;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SELFMapperProtocol.adaptToSELF(events:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_24043087C;
  return v9(a1, a2, a3);
}

uint64_t sub_24043087C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_2404308D0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SwiftSELFMapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SwiftSELFMapper);
}

uint64_t method lookup function for SwiftSELFMapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SwiftSELFMapper.__allocating_init(stream:bookmarkProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SwiftSELFMapper.loadBiomeEvent()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 128) + *(_QWORD *)(*(_QWORD *)v0 + 128));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_240430B90;
  return v4();
}

uint64_t dispatch thunk of SwiftSELFMapper.adaptToSELF(events:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 136) + *(_QWORD *)(*(_QWORD *)v1 + 136));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240430B90;
  return v6(a1);
}

uint64_t sub_240430A08()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ObjCSELFMapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObjCSELFMapper);
}

uint64_t method lookup function for ObjCSELFMapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjCSELFMapper.__allocating_init(bmStreamIdentifier:bookmarkProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ObjCSELFMapper.loadBiomeEvent()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 120) + *(_QWORD *)(*(_QWORD *)v0 + 120));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_240430B90;
  return v4();
}

uint64_t dispatch thunk of ObjCSELFMapper.adaptToSELF(events:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 128) + *(_QWORD *)(*(_QWORD *)v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240430B40;
  return v6(a1);
}

uint64_t sub_240430B40(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_240430B98(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for MessageFilteringPolicy(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MessageFilteringPolicy()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for MessageFilteringPolicy(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for MessageFilteringPolicy(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageFilteringPolicy(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageFilteringPolicy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_240430D04(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_240430D1C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MessageFilteringPolicy()
{
  return &type metadata for MessageFilteringPolicy;
}

id sub_240430D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t updated;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  id v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  void *v82;
  uint64_t (*v83)(uint64_t);
  id v84;
  id v85;
  uint64_t v86;
  id v87;
  void *v88;
  uint64_t (*v89)(uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  void *v113;
  id v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  id v137;
  void *v138;
  id v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t (*v142)(uint64_t);
  uint64_t v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  uint64_t v190;

  v182 = a2;
  v190 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF58);
  MEMORY[0x24BDAC7A8](v2);
  v185 = (uint64_t)&v150 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  v183 = *(_QWORD *)(updated - 8);
  v184 = updated;
  MEMORY[0x24BDAC7A8](updated);
  v181 = (uint64_t)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF60);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v172 = (uint64_t)&v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v174 = (uint64_t)&v150 - v9;
  v10 = type metadata accessor for TranscriptProtoCancelExpression(0);
  v170 = *(_QWORD *)(v10 - 8);
  v171 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v179 = (uint64_t)&v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF68);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v169 = (uint64_t)&v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v173 = (uint64_t)&v150 - v15;
  v168 = type metadata accessor for TranscriptProtoRejectExpression(0);
  v167 = *(_QWORD *)(v168 - 8);
  MEMORY[0x24BDAC7A8](v168);
  v189 = (char *)&v150 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
  MEMORY[0x24BDAC7A8](v17);
  v180 = (uint64_t)&v150 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF70);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v165 = (uint64_t)&v150 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v166 = (uint64_t)&v150 - v22;
  v164 = type metadata accessor for TranscriptProtoUndoExpression(0);
  v163 = *(_QWORD *)(v164 - 8);
  MEMORY[0x24BDAC7A8](v164);
  v188 = (char *)&v150 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF78);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v162 = (uint64_t)&v150 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v160 = (uint64_t)&v150 - v27;
  v161 = type metadata accessor for TranscriptProtoPickOneExpression(0);
  v159 = *(_QWORD *)(v161 - 8);
  MEMORY[0x24BDAC7A8](v161);
  v187 = (char *)&v150 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF80);
  MEMORY[0x24BDAC7A8](v29);
  v177 = (uint64_t)&v150 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for TranscriptProtoSearchExpression(0);
  v175 = *(_QWORD *)(v31 - 8);
  v176 = v31;
  MEMORY[0x24BDAC7A8](v31);
  v178 = (uint64_t)&v150 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF88);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v157 = (uint64_t)&v150 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v158 = (uint64_t)&v150 - v36;
  v156 = type metadata accessor for TranscriptProtoConfirmExpression(0);
  v155 = *(_QWORD *)(v156 - 8);
  MEMORY[0x24BDAC7A8](v156);
  v186 = (char *)&v150 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF90);
  MEMORY[0x24BDAC7A8](v38);
  v154 = (uint64_t)&v150 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for TranscriptProtoPickExpression(0);
  v41 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v150 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v47 = (char *)&v150 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v45);
  v49 = (char *)&v150 - v48;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCFA0);
  MEMORY[0x24BDAC7A8](v50);
  v52 = (char *)&v150 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for TranscriptProtoExpression(0);
  v54 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v56 = (char *)&v150 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v190, (uint64_t)v52, &qword_256FFCFA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53) == 1)
  {
    v57 = &qword_256FFCFA0;
    v58 = (uint64_t)v52;
LABEL_6:
    sub_2403A97FC(v58, v57);
    return 0;
  }
  v153 = v41;
  v190 = v40;
  v59 = (uint64_t)v43;
  v60 = (uint64_t)v186;
  v61 = (uint64_t)v187;
  v62 = (uint64_t)v188;
  v63 = (uint64_t)v189;
  sub_2403A91CC((uint64_t)v52, (uint64_t)v56, type metadata accessor for TranscriptProtoExpression);
  v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94DD0]), sel_init);
  sub_2403A9210((uint64_t)v56, (uint64_t)v49, &qword_256FFCF98);
  v65 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v49, 1, v65) == 1)
  {

    sub_240388AE4((uint64_t)v56, type metadata accessor for TranscriptProtoExpression);
LABEL_5:
    v57 = &qword_256FFCF98;
    v58 = (uint64_t)v49;
    goto LABEL_6;
  }
  v152 = v56;
  v151 = v49;
  v66 = (uint64_t)v49;
  v67 = (uint64_t)v47;
  sub_2403A9210(v66, (uint64_t)v47, &qword_256FFCF98);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v68 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94DB8]), sel_init);
      v69 = v68;
      if (v68)
        objc_msgSend(v68, sel_setExists_, 1);
      v70 = (uint64_t)v152;
      if (!v64)
        goto LABEL_74;
      objc_msgSend(v64, sel_setValue_, v69);
      goto LABEL_73;
    case 2u:
      v71 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D70]), sel_init);
      v69 = v71;
      if (v71)
        objc_msgSend(v71, sel_setExists_, 1);
      v70 = (uint64_t)v152;
      if (!v64)
        goto LABEL_74;
      objc_msgSend(v64, sel_setPrefix_, v69);
      goto LABEL_73;
    case 3u:
      v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D58]), sel_init);
      v69 = v72;
      if (v72)
        objc_msgSend(v72, sel_setExists_, 1);
      v70 = (uint64_t)v152;
      if (!v64)
        goto LABEL_74;
      objc_msgSend(v64, sel_setInfix_, v69);
      goto LABEL_73;
    case 4u:
      v73 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D48]), sel_init);
      v69 = v73;
      if (v73)
        objc_msgSend(v73, sel_setExists_, 1);
      v70 = (uint64_t)v152;
      if (!v64)
        goto LABEL_74;
      objc_msgSend(v64, sel_setDot_, v69);
      goto LABEL_73;
    case 5u:
      v74 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D50]), sel_init);
      v69 = v74;
      if (v74)
        objc_msgSend(v74, sel_setExists_, 1);
      v70 = (uint64_t)v152;
      if (!v64)
        goto LABEL_74;
      objc_msgSend(v64, sel_setIndex_, v69);
      goto LABEL_73;
    case 6u:
      v75 = v181;
      sub_2403A91CC((uint64_t)v47, v181, type metadata accessor for TranscriptProtoUpdateParametersExpression);
      v76 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94DB0]), sel_init);
      v77 = v76;
      if (v76)
        objc_msgSend(v76, sel_setExists_, 1);
      objc_msgSend(v64, sel_setUpdate_, v77);
      v78 = v184;
      v79 = v185;
      v80 = v183;
      if (v64)
      {
        sub_2403AE1A4(v75, v185, type metadata accessor for TranscriptProtoUpdateParametersExpression);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56))(v79, 0, 1, v78);
        v81 = v64;
        v82 = sub_24050160C(v79);
        sub_2403A97FC(v79, &qword_256FFCF58);
        objc_msgSend(v81, sel_setUpdateParameters_, v82);

        v77 = v82;
      }
      v67 = (uint64_t)v152;

      sub_240388AE4(v75, type metadata accessor for TranscriptProtoUpdateParametersExpression);
      v83 = type metadata accessor for TranscriptProtoExpression;
      goto LABEL_80;
    case 7u:
      v84 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D30]), sel_init);
      v69 = v84;
      if (v84)
        objc_msgSend(v84, sel_setExists_, 1);
      v70 = (uint64_t)v152;
      if (!v64)
        goto LABEL_74;
      objc_msgSend(v64, sel_setCall_, v69);
      goto LABEL_73;
    case 8u:
      v85 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D88]), sel_init);
      v69 = v85;
      if (v85)
        objc_msgSend(v85, sel_setExists_, 1);
      v70 = (uint64_t)v152;
      if (!v64)
        goto LABEL_74;
      objc_msgSend(v64, sel_setSay_, v69);
      goto LABEL_73;
    case 9u:
      sub_2403A91CC((uint64_t)v47, v59, type metadata accessor for TranscriptProtoPickExpression);
      if (v64)
      {
        v86 = v154;
        sub_2403AE1A4(v59, v154, type metadata accessor for TranscriptProtoPickExpression);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v153 + 56))(v86, 0, 1, v190);
        v87 = v64;
        v88 = sub_2408E12D4(v86);
        sub_2403A97FC(v86, &qword_256FFCF90);
        objc_msgSend(v87, sel_setPick_, v88);

      }
      v89 = type metadata accessor for TranscriptProtoPickExpression;
      v90 = v59;
      goto LABEL_104;
    case 0xAu:
      v91 = (uint64_t)v47;
      v92 = v60;
      sub_2403A91CC(v91, v60, type metadata accessor for TranscriptProtoConfirmExpression);
      if (v64)
      {
        v93 = v60;
        v94 = v158;
        sub_2403AE1A4(v93, v158, type metadata accessor for TranscriptProtoConfirmExpression);
        v95 = v155;
        v96 = v156;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v155 + 56))(v94, 0, 1, v156);
        v97 = v157;
        sub_2403A9210(v94, v157, &qword_256FFCF88);
        LODWORD(v95) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v97, 1, v96);
        v98 = v64;
        sub_2403A97FC(v97, &qword_256FFCF88);
        if ((_DWORD)v95 == 1)
        {
          v99 = 0;
        }
        else
        {
          v144 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D40]), sel_init);
          v99 = v144;
          if (v144)
            objc_msgSend(v144, sel_setExists_, 1);
        }
        sub_2403A97FC(v94, &qword_256FFCF88);
        objc_msgSend(v98, sel_setConfirm_, v99);

      }
      v89 = type metadata accessor for TranscriptProtoConfirmExpression;
      goto LABEL_103;
    case 0xBu:
      v100 = (uint64_t)v47;
      v101 = v178;
      sub_2403A91CC(v100, v178, type metadata accessor for TranscriptProtoSearchExpression);
      v102 = v177;
      sub_2403AE1A4(v101, v177, type metadata accessor for TranscriptProtoSearchExpression);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v175 + 56))(v102, 0, 1, v176);
      v103 = sub_2408D40C4(v102, v182);
      sub_2403A97FC(v102, &qword_256FFCF80);
      if (v64)
        objc_msgSend(v64, sel_setSearch_, v103);
      sub_240388AE4(v101, type metadata accessor for TranscriptProtoSearchExpression);
      sub_240388AE4((uint64_t)v152, type metadata accessor for TranscriptProtoExpression);

      goto LABEL_106;
    case 0xCu:
      sub_2403A91CC((uint64_t)v47, v61, type metadata accessor for TranscriptProtoPickOneExpression);
      if (v64)
      {
        v104 = v160;
        sub_2403AE1A4(v61, v160, type metadata accessor for TranscriptProtoPickOneExpression);
        v105 = v159;
        v106 = v161;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v159 + 56))(v104, 0, 1, v161);
        v107 = v162;
        sub_2403A9210(v104, v162, &qword_256FFCF78);
        LODWORD(v105) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v107, 1, v106);
        v108 = v64;
        sub_2403A97FC(v107, &qword_256FFCF78);
        if ((_DWORD)v105 == 1)
        {
          v109 = 0;
        }
        else
        {
          v145 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D60]), sel_init);
          v109 = v145;
          if (v145)
            objc_msgSend(v145, sel_setExists_, 1);
        }
        sub_2403A97FC(v104, &qword_256FFCF78);
        objc_msgSend(v108, sel_setPickOne_, v109);

      }
      v89 = type metadata accessor for TranscriptProtoPickOneExpression;
      v90 = v61;
      goto LABEL_104;
    case 0xDu:
      v110 = (uint64_t)v151;
      v111 = v180;
      sub_2403A91CC((uint64_t)v47, v180, type metadata accessor for TranscriptProtoResolveToolExpression);
      v112 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D80]), sel_init);
      v113 = v112;
      if (v112)
      {
        objc_msgSend(v112, sel_setExists_, 1);
        v114 = v113;
        v115 = (void *)sub_2408E5D8C();
        objc_msgSend(v114, sel_setToolIds_, v115);

      }
      v116 = (uint64_t)v152;
      if (v64)
      {
        objc_msgSend(v64, sel_setResolveTool_, v113);

        sub_240388AE4(v116, type metadata accessor for TranscriptProtoExpression);
      }
      else
      {
        sub_240388AE4((uint64_t)v152, type metadata accessor for TranscriptProtoExpression);

      }
      v141 = v110;
      v142 = type metadata accessor for TranscriptProtoResolveToolExpression;
      v140 = v111;
      goto LABEL_76;
    case 0xEu:
      v117 = (uint64_t)v47;
      v92 = v62;
      sub_2403A91CC(v117, v62, type metadata accessor for TranscriptProtoUndoExpression);
      if (v64)
      {
        v118 = v62;
        v119 = v166;
        sub_2403AE1A4(v118, v166, type metadata accessor for TranscriptProtoUndoExpression);
        v120 = v163;
        v121 = v164;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v163 + 56))(v119, 0, 1, v164);
        v122 = v165;
        sub_2403A9210(v119, v165, &qword_256FFCF70);
        LODWORD(v120) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v122, 1, v121);
        v123 = v64;
        sub_2403A97FC(v122, &qword_256FFCF70);
        if ((_DWORD)v120 == 1)
        {
          v124 = 0;
        }
        else
        {
          v146 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94DA0]), sel_init);
          v124 = v146;
          if (v146)
            objc_msgSend(v146, sel_setExists_, 1);
        }
        sub_2403A97FC(v119, &qword_256FFCF70);
        objc_msgSend(v123, sel_setUndo_, v124);

      }
      v89 = type metadata accessor for TranscriptProtoUndoExpression;
      goto LABEL_103;
    case 0xFu:
      v125 = (uint64_t)v47;
      v92 = v63;
      sub_2403A91CC(v125, v63, type metadata accessor for TranscriptProtoRejectExpression);
      if (v64)
      {
        v126 = v173;
        sub_2403AE1A4(v63, v173, type metadata accessor for TranscriptProtoRejectExpression);
        v127 = v167;
        v128 = v168;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v167 + 56))(v126, 0, 1, v168);
        v129 = v169;
        sub_2403A9210(v126, v169, &qword_256FFCF68);
        LODWORD(v127) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v129, 1, v128);
        v130 = v64;
        sub_2403A97FC(v129, &qword_256FFCF68);
        if ((_DWORD)v127 == 1)
        {
          v131 = 0;
        }
        else
        {
          v147 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D78]), sel_init);
          v131 = v147;
          if (v147)
            objc_msgSend(v147, sel_setExists_, 1);
        }
        sub_2403A97FC(v126, &qword_256FFCF68);
        objc_msgSend(v130, sel_setReject_, v131);

      }
      v89 = type metadata accessor for TranscriptProtoRejectExpression;
      goto LABEL_103;
    case 0x10u:
      v132 = (uint64_t)v47;
      v92 = v179;
      sub_2403A91CC(v132, v179, type metadata accessor for TranscriptProtoCancelExpression);
      if (v64)
      {
        v133 = v174;
        sub_2403AE1A4(v92, v174, type metadata accessor for TranscriptProtoCancelExpression);
        v135 = v170;
        v134 = v171;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v170 + 56))(v133, 0, 1, v171);
        v136 = v172;
        sub_2403A9210(v133, v172, &qword_256FFCF60);
        LODWORD(v135) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v136, 1, v134);
        v137 = v64;
        sub_2403A97FC(v136, &qword_256FFCF60);
        if ((_DWORD)v135 == 1)
        {
          v138 = 0;
        }
        else
        {
          v148 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D38]), sel_init);
          v138 = v148;
          if (v148)
            objc_msgSend(v148, sel_setExists_, 1);
        }
        sub_2403A97FC(v133, &qword_256FFCF60);
        objc_msgSend(v137, sel_setCancel_, v138);

      }
      v89 = type metadata accessor for TranscriptProtoCancelExpression;
LABEL_103:
      v90 = v92;
LABEL_104:
      sub_240388AE4(v90, v89);
      v83 = type metadata accessor for TranscriptProtoExpression;
      v143 = (uint64_t)v152;
      goto LABEL_105;
    case 0x11u:
      if (v64)
        objc_msgSend(v64, sel_setNoMatchingTool_, 1);
      goto LABEL_79;
    case 0x12u:
      v139 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE94D28]), sel_init);
      v69 = v139;
      if (v139)
        objc_msgSend(v139, sel_setExists_, 1);
      v70 = (uint64_t)v152;
      if (v64)
      {
        objc_msgSend(v64, sel_setContinuePlanning_, v69);
LABEL_73:

        sub_240388AE4(v70, type metadata accessor for TranscriptProtoExpression);
      }
      else
      {
LABEL_74:
        sub_240388AE4(v70, type metadata accessor for TranscriptProtoExpression);

      }
      v140 = (uint64_t)v47;
      v141 = (uint64_t)v151;
      v142 = type metadata accessor for TranscriptProtoExpressionEnum;
LABEL_76:
      sub_240388AE4(v140, v142);
      break;
    case 0x13u:
      if (v64)
        objc_msgSend(v64, sel_setEndOfPlan_, 1);
LABEL_79:
      sub_240388AE4((uint64_t)v152, type metadata accessor for TranscriptProtoExpression);
      v83 = type metadata accessor for TranscriptProtoExpressionEnum;
LABEL_80:
      v143 = v67;
LABEL_105:
      sub_240388AE4(v143, v83);
LABEL_106:
      v141 = (uint64_t)v151;
      break;
    default:

      sub_240388AE4((uint64_t)v152, type metadata accessor for TranscriptProtoExpression);
      sub_240388AE4((uint64_t)v47, type metadata accessor for TranscriptProtoExpressionEnum);
      v49 = v151;
      goto LABEL_5;
  }
  sub_2403A97FC(v141, &qword_256FFCF98);
  return v64;
}

uint64_t sub_2404320F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFCFA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFCFA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8A00;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "ENTITY_QUERY";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "SIRI_VOCABULARY";
  *(_QWORD *)(v11 + 8) = 15;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "USER_FEEDBACK_LEARNING";
  *((_QWORD *)v13 + 1) = 22;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "MEGADOME_ECR";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "CONTEXT_REGISTRY";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "RETURN_VALUE";
  *((_QWORD *)v19 + 1) = 12;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "USER_PROMPT";
  *((_QWORD *)v21 + 1) = 11;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "OMNISEARCH";
  *((_QWORD *)v23 + 1) = 10;
  v23[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoCandidateSource._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF8FE8, (uint64_t)qword_256FFCFA8, a1);
}

uint64_t sub_2404323B0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF8FE8, (uint64_t)qword_256FFCFA8, a1);
}

void sub_2404323CC(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2404323D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFCFC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFCFC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "deviceUnlockRequired";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "appLaunchRequired";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSystemRequirement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF8FF0, (uint64_t)qword_256FFCFC0, a1);
}

uint64_t sub_240432544@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_2408E5A98();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_2404325AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF8FF0, (uint64_t)qword_256FFCFC0, a1);
}

uint64_t sub_2404325C8@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_2408E5A98();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_240432634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFCFD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFCFD8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "notSet";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "prescribedPlanGenerator";
  *(_QWORD *)(v11 + 8) = 23;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "dummyPlanner";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "planOverride";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 4;
  *(_QWORD *)v16 = "fullPlanner";
  *(_QWORD *)(v16 + 8) = 11;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPlanSource._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF8FF8, (uint64_t)qword_256FFCFD8, a1);
}

uint64_t sub_240432854@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF8FF8, (uint64_t)qword_256FFCFD8, a1);
}

uint64_t sub_240432874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFCFF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFCFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB750;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "QueryOperator_UNKNOWN";
  *(_QWORD *)(v7 + 8) = 21;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "QueryOperator_EQUALTO";
  *(_QWORD *)(v11 + 8) = 21;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "QueryOperator_NOTEQUALTO";
  *((_QWORD *)v13 + 1) = 24;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "QueryOperator_GREATERTHAN_OP";
  *((_QWORD *)v15 + 1) = 28;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "QueryOperator_GREATERTHANOREQUALTO";
  *((_QWORD *)v17 + 1) = 34;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "QueryOperator_LESSTHAN_OP";
  *((_QWORD *)v19 + 1) = 25;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "QueryOperator_LESSTHANOREQUALTO";
  *((_QWORD *)v21 + 1) = 31;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 7;
  *(_QWORD *)v23 = "QueryOperator_CONTAINS";
  *((_QWORD *)v23 + 1) = 22;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 8 * v3) = 8;
  *(_QWORD *)v24 = "QueryOperator_HASPREFIX";
  *(_QWORD *)(v24 + 8) = 23;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v3);
  v26 = (char *)v25 + *(int *)(v1 + 48);
  *v25 = 9;
  *(_QWORD *)v26 = "QueryOperator_HASSUFFIX";
  *((_QWORD *)v26 + 1) = 23;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v6 + 10 * v3);
  v28 = (char *)v27 + *(int *)(v1 + 48);
  *v27 = 10;
  *(_QWORD *)v28 = "QueryOperator_ISBETWEEN";
  *((_QWORD *)v28 + 1) = 23;
  v28[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoQueryOperator._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9000, (uint64_t)qword_256FFCFF0, a1);
}

uint64_t sub_240432BCC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9000, (uint64_t)qword_256FFCFF0, a1);
}

uint64_t sub_240432BEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD008);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD008);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "Completion";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "Disambiguation";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "Confirmation";
  *(_QWORD *)(v12 + 8) = 12;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoResponseType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9008, (uint64_t)qword_256FFD008, a1);
}

uint64_t sub_240432D98@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9008, (uint64_t)qword_256FFD008, a1);
}

uint64_t sub_240432DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD020);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "NONE";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "SUPPRESS_PRINT";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoResponseDialogPresentationHint._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9010, (uint64_t)qword_256FFD020, a1);
}

uint64_t sub_240432F24@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9010, (uint64_t)qword_256FFD020, a1);
}

uint64_t sub_240432F40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD038);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD038);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "ASTUpdateKind_APPEND";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "ASTUpdateKind_REPLACE";
  *((_QWORD *)v11 + 1) = 21;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTUpdateKind._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9018, (uint64_t)qword_256FFD038, a1);
}

uint64_t sub_2404330AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9018, (uint64_t)qword_256FFD038, a1);
}

uint64_t sub_2404330C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD050);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD050);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "plus";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "minus";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "not";
  *(_QWORD *)(v12 + 8) = 3;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPrefixExpression_PrefixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9020, (uint64_t)qword_256FFD050, a1);
}

uint64_t sub_240433274@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9020, (uint64_t)qword_256FFD050, a1);
}

uint64_t sub_240433294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  uint64_t v44;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD068);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_2408EB760;
  v5 = v44 + v4;
  v6 = v44 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v44 + v4) = 0;
  *(_QWORD *)v6 = "assign";
  *(_QWORD *)(v6 + 8) = 6;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v44 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "add";
  *(_QWORD *)(v10 + 8) = 3;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v44 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 2;
  *(_QWORD *)v12 = "addAssign";
  *((_QWORD *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v44 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "subtract";
  *((_QWORD *)v14 + 1) = 8;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v44 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "subtractAssign";
  *((_QWORD *)v16 + 1) = 14;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v44 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "divide";
  *((_QWORD *)v18 + 1) = 6;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v44 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "divideAssign";
  *((_QWORD *)v20 + 1) = 12;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v44 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "multiply";
  *((_QWORD *)v22 + 1) = 8;
  v22[16] = 2;
  v9();
  v23 = v44 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 8;
  *(_QWORD *)v23 = "multiplyAssign";
  *(_QWORD *)(v23 + 8) = 14;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v44 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "exponent";
  *((_QWORD *)v25 + 1) = 8;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v44 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "equal";
  *((_QWORD *)v27 + 1) = 5;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v44 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "notEqual";
  *((_QWORD *)v29 + 1) = 8;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v44 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "in";
  *((_QWORD *)v31 + 1) = 2;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v44 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "greaterThanEqual";
  *((_QWORD *)v33 + 1) = 16;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v44 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "greaterThan";
  *((_QWORD *)v35 + 1) = 11;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v44 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "lessThanEqual";
  *((_QWORD *)v37 + 1) = 13;
  v37[16] = 2;
  v9();
  v38 = v44 + v4 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 16;
  *(_QWORD *)v38 = "lessThan";
  *(_QWORD *)(v38 + 8) = 8;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v44 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 17;
  *(_QWORD *)v40 = "and";
  *((_QWORD *)v40 + 1) = 3;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v44 + v4 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 18;
  *(_QWORD *)v42 = "or";
  *((_QWORD *)v42 + 1) = 2;
  v42[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoInfixExpression_InfixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9028, (uint64_t)qword_256FFD068, a1);
}

uint64_t sub_24043377C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9028, (uint64_t)qword_256FFD068, a1);
}

uint64_t sub_24043379C()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_2404337A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  uint64_t v44;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD080);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD080);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_2408EB760;
  v5 = v44 + v4;
  v6 = v44 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v44 + v4) = 0;
  *(_QWORD *)v6 = "ASTInfixOp_ASSIGN";
  *(_QWORD *)(v6 + 8) = 17;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v44 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "ASTInfixOp_ADD";
  *(_QWORD *)(v10 + 8) = 14;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v44 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 2;
  *(_QWORD *)v12 = "ASTInfixOp_ADDASSIGN";
  *((_QWORD *)v12 + 1) = 20;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v44 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "ASTInfixOp_SUBTRACT";
  *((_QWORD *)v14 + 1) = 19;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v44 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "ASTInfixOp_SUBTRACTASSIGN";
  *((_QWORD *)v16 + 1) = 25;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v44 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "ASTInfixOp_DIVIDE";
  *((_QWORD *)v18 + 1) = 17;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v44 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "ASTInfixOp_DIVIDEASSIGN";
  *((_QWORD *)v20 + 1) = 23;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v44 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "ASTInfixOp_MULTIPLY";
  *((_QWORD *)v22 + 1) = 19;
  v22[16] = 2;
  v9();
  v23 = v44 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 8;
  *(_QWORD *)v23 = "ASTInfixOp_MULTIPLYASSIGN";
  *(_QWORD *)(v23 + 8) = 25;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v44 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "ASTInfixOp_EXPONENT";
  *((_QWORD *)v25 + 1) = 19;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v44 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "ASTInfixOp_EQUAL";
  *((_QWORD *)v27 + 1) = 16;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v44 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "ASTInfixOp_NOTEQUAL";
  *((_QWORD *)v29 + 1) = 19;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v44 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "ASTInfixOp_IN";
  *((_QWORD *)v31 + 1) = 13;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v44 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "ASTInfixOp_GREATERTHANEQUAL";
  *((_QWORD *)v33 + 1) = 27;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v44 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "ASTInfixOp_GREATERTHAN";
  *((_QWORD *)v35 + 1) = 22;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v44 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "ASTInfixOp_LESSTHANEQUAL";
  *((_QWORD *)v37 + 1) = 24;
  v37[16] = 2;
  v9();
  v38 = v44 + v4 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 16;
  *(_QWORD *)v38 = "ASTInfixOp_LESSTHAN";
  *(_QWORD *)(v38 + 8) = 19;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v44 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 17;
  *(_QWORD *)v40 = "ASTInfixOp_AND";
  *((_QWORD *)v40 + 1) = 14;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v44 + v4 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 18;
  *(_QWORD *)v42 = "ASTInfixOp_OR";
  *((_QWORD *)v42 + 1) = 13;
  v42[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTInfixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9030, (uint64_t)qword_256FFD080, a1);
}

uint64_t sub_240433C9C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9030, (uint64_t)qword_256FFD080, a1);
}

uint64_t sub_240433CBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD098);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD098);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "ASTPrefixOp_PLUS";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "ASTPrefixOp_MINUS";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "ASTPrefixOp_NOT";
  *(_QWORD *)(v12 + 8) = 15;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTPrefixOp._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9038, (uint64_t)qword_256FFD098, a1);
}

uint64_t sub_240433E68@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9038, (uint64_t)qword_256FFD098, a1);
}

uint64_t sub_240433E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD0B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD0B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "append";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "replace";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoUpdateParameterExpression_UpdateKind._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9040, (uint64_t)qword_256FFD0B0, a1);
}

uint64_t sub_240433FF4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9040, (uint64_t)qword_256FFD0B0, a1);
}

uint64_t sub_240434010@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!result)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_24043402C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD0C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD0C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "undo";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "redo";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoUndoOperation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9048, (uint64_t)qword_256FFD0C8, a1);
}

uint64_t sub_24043419C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9048, (uint64_t)qword_256FFD0C8, a1);
}

unint64_t static TranscriptProtoEvent.protoMessageName.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_2404341D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  uint64_t v33;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD0E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD0E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_2408EB770;
  v5 = v33 + v4;
  v6 = v33 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v33 + v4) = 11;
  *(_QWORD *)v6 = "rawId";
  *(_QWORD *)(v6 + 8) = 5;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v33 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "rawSessionId";
  *(_QWORD *)(v10 + 8) = 12;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v33 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 12;
  *(_QWORD *)v12 = "rawQueryEventId";
  *((_QWORD *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v33 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "rawPayload";
  *((_QWORD *)v14 + 1) = 10;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v33 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "clientRequestId";
  *((_QWORD *)v16 + 1) = 15;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v33 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "clientSessionId";
  *((_QWORD *)v18 + 1) = 15;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v33 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 9;
  *(_QWORD *)v20 = "clientApplicationId";
  *((_QWORD *)v20 + 1) = 19;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v33 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 10;
  *(_QWORD *)v22 = "clientGroupId";
  *((_QWORD *)v22 + 1) = 13;
  v22[16] = 2;
  v9();
  v23 = v33 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 13;
  *(_QWORD *)v23 = "timepoint";
  *(_QWORD *)(v23 + 8) = 9;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v33 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 5;
  *(_QWORD *)v25 = "rawTimestamp";
  *((_QWORD *)v25 + 1) = 12;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v33 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 6;
  *(_QWORD *)v27 = "sender";
  *((_QWORD *)v27 + 1) = 6;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v33 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 7;
  *(_QWORD *)v29 = "postingSpan";
  *((_QWORD *)v29 + 1) = 11;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v33 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 8;
  *(_QWORD *)v31 = "rawInitiatedSpans";
  *((_QWORD *)v31 + 1) = 17;
  v31[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoEvent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9050, (uint64_t)qword_256FFD0E0, a1);
}

uint64_t TranscriptProtoEvent.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
        case 9:
        case 11:
          sub_2408E593C();
          break;
        case 2:
          sub_2404347A4();
          break;
        case 5:
          sub_240434838();
          break;
        case 6:
          sub_2404348CC();
          break;
        case 7:
          sub_240434960();
          break;
        case 8:
          sub_2404349F4();
          break;
        case 10:
          type metadata accessor for TranscriptProtoEvent(0);
          goto LABEL_12;
        case 12:
LABEL_12:
          sub_2408E5930();
          break;
        case 13:
          sub_240434A70();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2404347A4()
{
  type metadata accessor for TranscriptProtoEvent(0);
  type metadata accessor for TranscriptProtoPayload(0);
  sub_2404FA028(&qword_256FFF068, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
  return sub_2408E596C();
}

uint64_t sub_240434838()
{
  type metadata accessor for TranscriptProtoEvent(0);
  sub_2408E5750();
  sub_2404FA028(&qword_2570012A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
  return sub_2408E596C();
}

uint64_t sub_2404348CC()
{
  type metadata accessor for TranscriptProtoEvent(0);
  type metadata accessor for TranscriptProtoParticipantID(0);
  sub_2404FA028(&qword_256FFF688, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  return sub_2408E596C();
}

uint64_t sub_240434960()
{
  type metadata accessor for TranscriptProtoEvent(0);
  type metadata accessor for TranscriptProtoSpanID(0);
  sub_2404FA028(&qword_256FFF6A0, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
  return sub_2408E596C();
}

uint64_t sub_2404349F4()
{
  sub_2408E5768();
  sub_2408E5780();
  return sub_2408E584C();
}

uint64_t sub_240434A70()
{
  type metadata accessor for TranscriptProtoEvent(0);
  type metadata accessor for TranscriptProtoTimepoint(0);
  sub_2404FA028(&qword_256FFF098, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
  return sub_2408E596C();
}

uint64_t TranscriptProtoEvent.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v8 = v3[3];
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = v3[2] & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    result = sub_240434DD8((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      v11 = v3[5];
      v12 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0)
        v12 = v3[4] & 0xFFFFFFFFFFFFLL;
      if (v12)
        sub_2408E5A38();
      v13 = v3[7];
      v14 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0)
        v14 = v3[6] & 0xFFFFFFFFFFFFLL;
      if (v14)
        sub_2408E5A38();
      sub_240434F4C((uint64_t)v3, a1, a2, a3);
      sub_2404350C4((uint64_t)v3, a1, a2, a3);
      sub_240435238((uint64_t)v3, a1, a2, a3);
      if (*(_QWORD *)(v3[10] + 16))
      {
        sub_2408E5768();
        sub_2408E5780();
        sub_2408E59C0();
      }
      v15 = v3[9];
      v16 = HIBYTE(v15) & 0xF;
      if ((v15 & 0x2000000000000000) == 0)
        v16 = v3[8] & 0xFFFFFFFFFFFFLL;
      if (v16)
        sub_2408E5A38();
      sub_2404353AC((uint64_t)v3);
      v17 = v3[1];
      v18 = HIBYTE(v17) & 0xF;
      if ((v17 & 0x2000000000000000) == 0)
        v18 = *v3 & 0xFFFFFFFFFFFFLL;
      if (v18)
        sub_2408E5A38();
      if (v3[12])
        sub_2408E5A38();
      sub_240435420((uint64_t)v3, a1, a2, a3);
      type metadata accessor for TranscriptProtoEvent(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_240434DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA490);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoPayload(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v12 + 44), (uint64_t)v7, &qword_256FFA490);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA490);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoPayload);
  sub_2404FA028(&qword_256FFF068, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoPayload);
}

uint64_t sub_240434F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2408E5750();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v12 + 56), (uint64_t)v7, &qword_256FFA498);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA498);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2404FA028(&qword_2570012A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
  sub_2408E5A68();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_2404350C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoParticipantID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v12 + 60), (uint64_t)v7, &qword_256FFA4A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA4A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoParticipantID);
  sub_2404FA028(&qword_256FFF688, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoParticipantID);
}

uint64_t sub_240435238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4B0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSpanID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v12 + 64), (uint64_t)v7, &qword_256FFA4B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA4B0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoSpanID);
  sub_2404FA028(&qword_256FFF6A0, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoSpanID);
}

uint64_t sub_2404353AC(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for TranscriptProtoEvent(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 48) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t sub_240435420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA4A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoTimepoint(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoEvent(0);
  sub_2403A9210(a1 + *(int *)(v12 + 52), (uint64_t)v7, &qword_256FFA4A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA4A0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoTimepoint);
  sub_2404FA028(&qword_256FFF098, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoTimepoint);
}

uint64_t TranscriptProtoEvent.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoEvent, &qword_256FFE688, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
}

unint64_t sub_2404355B4@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t result;

  a2[11] = 0;
  a2[12] = 0;
  v4 = (char *)a2 + a1[11];
  v5 = type metadata accessor for TranscriptProtoPayload(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a1[13];
  v7 = (_QWORD *)((char *)a2 + a1[12]);
  *v7 = 0;
  v7[1] = 0;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for TranscriptProtoTimepoint(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (char *)a2 + a1[14];
  v11 = sub_2408E5750();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = (char *)a2 + a1[15];
  v13 = type metadata accessor for TranscriptProtoParticipantID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (char *)a2 + a1[16];
  v15 = type metadata accessor for TranscriptProtoSpanID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = 0;
  a2[5] = 0xE000000000000000;
  a2[6] = 0;
  a2[7] = 0xE000000000000000;
  a2[8] = 0;
  a2[9] = 0xE000000000000000;
  result = sub_240357018(MEMORY[0x24BEE4AF8]);
  a2[10] = result;
  return result;
}

unint64_t sub_2404356F8()
{
  return 0xD000000000000010;
}

uint64_t sub_240435718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 68);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_240435758(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 68);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_240435798())()
{
  return nullsub_1;
}

uint64_t sub_2404357AC()
{
  return TranscriptProtoEvent.decodeMessage<A>(decoder:)();
}

uint64_t sub_2404357C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoEvent.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404357D8()
{
  sub_2404FA028(&qword_257000C30, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
  return sub_2408E5828();
}

uint64_t sub_24043582C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9050, (uint64_t)qword_256FFD0E0, a1);
}

uint64_t sub_240435848()
{
  sub_2404FA028((unint64_t *)&qword_256FFC9F0, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
  return sub_2408E599C();
}

uint64_t sub_24043588C()
{
  sub_2404FA028((unint64_t *)&qword_256FFC9F0, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoPayload.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_240435900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  _QWORD *v51;
  char *v52;
  _QWORD *v53;
  char *v54;
  _QWORD *v55;
  char *v56;
  _QWORD *v57;
  char *v58;
  _QWORD *v59;
  char *v60;
  _QWORD *v61;
  char *v62;
  _QWORD *v63;
  char *v64;
  _QWORD *v65;
  char *v66;
  _QWORD *v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  _QWORD *v72;
  char *v73;
  _QWORD *v74;
  char *v75;
  _QWORD *v76;
  char *v77;
  _QWORD *v78;
  char *v79;
  _QWORD *v80;
  char *v81;
  _QWORD *v82;
  char *v83;
  _QWORD *v84;
  char *v85;
  _QWORD *v86;
  char *v87;
  _QWORD *v88;
  char *v89;
  _QWORD *v90;
  char *v91;
  _QWORD *v92;
  char *v93;
  _QWORD *v94;
  char *v95;
  uint64_t v97;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD0F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD0F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v97 = swift_allocObject();
  *(_OWORD *)(v97 + 16) = xmmword_2408EB780;
  v5 = v97 + v4;
  v6 = v97 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v97 + v4) = 46;
  *(_QWORD *)v6 = "sessionStart";
  *(_QWORD *)(v6 + 8) = 12;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v97 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "textQuery";
  *(_QWORD *)(v10 + 8) = 9;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v97 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 2;
  *(_QWORD *)v12 = "speechQuery";
  *((_QWORD *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v97 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 41;
  *(_QWORD *)v14 = "request";
  *((_QWORD *)v14 + 1) = 7;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v97 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "planCreated";
  *((_QWORD *)v16 + 1) = 11;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v97 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "actionCreated";
  *((_QWORD *)v18 + 1) = 13;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v97 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "clientActionCreated";
  *((_QWORD *)v20 + 1) = 19;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v97 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 6;
  *(_QWORD *)v22 = "queriesCreated";
  *((_QWORD *)v22 + 1) = 14;
  v22[16] = 2;
  v9();
  v23 = v97 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 7;
  *(_QWORD *)v23 = "variablesSet";
  *(_QWORD *)(v23 + 8) = 12;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v97 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "executorFinished";
  *((_QWORD *)v25 + 1) = 16;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v97 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "clientIdentifier";
  *((_QWORD *)v27 + 1) = 16;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v97 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "criticalError";
  *((_QWORD *)v29 + 1) = 13;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v97 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 47;
  *(_QWORD *)v31 = "recoverableError";
  *((_QWORD *)v31 + 1) = 16;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v97 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 12;
  *(_QWORD *)v33 = "clientCustom";
  *((_QWORD *)v33 + 1) = 12;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v97 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "endOfPlan";
  *((_QWORD *)v35 + 1) = 9;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v97 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "terminate";
  *((_QWORD *)v37 + 1) = 9;
  v37[16] = 2;
  v9();
  v38 = v97 + v4 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 17;
  *(_QWORD *)v38 = "systemPromptResolved";
  *(_QWORD *)(v38 + 8) = 20;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v97 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 18;
  *(_QWORD *)v40 = "actionExecuted";
  *((_QWORD *)v40 + 1) = 14;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v97 + v4 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 19;
  *(_QWORD *)v42 = "queriesExecuted";
  *((_QWORD *)v42 + 1) = 15;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v97 + v4 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 20;
  *(_QWORD *)v44 = "actionResponseGenerated";
  *((_QWORD *)v44 + 1) = 23;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v97 + v4 + 20 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 21;
  *(_QWORD *)v46 = "actionResolverRequestCreated";
  *((_QWORD *)v46 + 1) = 28;
  v46[16] = 2;
  v9();
  v47 = (_QWORD *)(v97 + v4 + 21 * v3);
  v48 = (char *)v47 + *(int *)(v1 + 48);
  *v47 = 22;
  *(_QWORD *)v48 = "clientInitiatedClientAction";
  *((_QWORD *)v48 + 1) = 27;
  v48[16] = 2;
  v9();
  v49 = (_QWORD *)(v97 + v4 + 22 * v3);
  v50 = (char *)v49 + *(int *)(v1 + 48);
  *v49 = 23;
  *(_QWORD *)v50 = "contextPrewarmRequest";
  *((_QWORD *)v50 + 1) = 21;
  v50[16] = 2;
  v9();
  v51 = (_QWORD *)(v97 + v4 + 23 * v3);
  v52 = (char *)v51 + *(int *)(v1 + 48);
  *v51 = 24;
  *(_QWORD *)v52 = "contextPrewarmCompleted";
  *((_QWORD *)v52 + 1) = 23;
  v52[16] = 2;
  v9();
  v53 = (_QWORD *)(v97 + v4 + 24 * v3);
  v54 = (char *)v53 + *(int *)(v1 + 48);
  *v53 = 25;
  *(_QWORD *)v54 = "safetyModeRelease";
  *((_QWORD *)v54 + 1) = 17;
  v54[16] = 2;
  v9();
  v55 = (_QWORD *)(v97 + v4 + 25 * v3);
  v56 = (char *)v55 + *(int *)(v1 + 48);
  *v55 = 26;
  *(_QWORD *)v56 = "safetyModeException";
  *((_QWORD *)v56 + 1) = 19;
  v56[16] = 2;
  v9();
  v57 = (_QWORD *)(v97 + v4 + 26 * v3);
  v58 = (char *)v57 + *(int *)(v1 + 48);
  *v57 = 27;
  *(_QWORD *)v58 = "responseGenerationRequest";
  *((_QWORD *)v58 + 1) = 25;
  v58[16] = 2;
  v9();
  v59 = (_QWORD *)(v97 + v4 + 27 * v3);
  v60 = (char *)v59 + *(int *)(v1 + 48);
  *v59 = 28;
  *(_QWORD *)v60 = "entitySpanMatched";
  *((_QWORD *)v60 + 1) = 17;
  v60[16] = 2;
  v9();
  v61 = (_QWORD *)(v97 + v4 + 28 * v3);
  v62 = (char *)v61 + *(int *)(v1 + 48);
  *v61 = 29;
  *(_QWORD *)v62 = "ContextRetrieved";
  *((_QWORD *)v62 + 1) = 16;
  v62[16] = 2;
  v9();
  v63 = (_QWORD *)(v97 + v4 + 29 * v3);
  v64 = (char *)v63 + *(int *)(v1 + 48);
  *v63 = 30;
  *(_QWORD *)v64 = "actionCanceled";
  *((_QWORD *)v64 + 1) = 14;
  v64[16] = 2;
  v9();
  v65 = (_QWORD *)(v97 + v4 + 30 * v3);
  v66 = (char *)v65 + *(int *)(v1 + 48);
  *v65 = 31;
  *(_QWORD *)v66 = "toolsRetrieved";
  *((_QWORD *)v66 + 1) = 14;
  v66[16] = 2;
  v9();
  v67 = (_QWORD *)(v97 + v4 + 31 * v3);
  v68 = (char *)v67 + *(int *)(v1 + 48);
  *v67 = 32;
  *(_QWORD *)v68 = "systemResponseGenerated";
  *((_QWORD *)v68 + 1) = 23;
  v68[16] = 2;
  v9();
  v69 = v97 + v4 + 32 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 32 * v3) = 33;
  *(_QWORD *)v69 = "statementEvaluated";
  *(_QWORD *)(v69 + 8) = 18;
  *(_BYTE *)(v69 + 16) = 2;
  v9();
  v70 = (_QWORD *)(v97 + v4 + 33 * v3);
  v71 = (char *)v70 + *(int *)(v1 + 48);
  *v70 = 34;
  *(_QWORD *)v71 = "externalAgentTextQuery";
  *((_QWORD *)v71 + 1) = 22;
  v71[16] = 2;
  v9();
  v72 = (_QWORD *)(v97 + v4 + 34 * v3);
  v73 = (char *)v72 + *(int *)(v1 + 48);
  *v72 = 35;
  *(_QWORD *)v73 = "externalAgentSpeechQuery";
  *((_QWORD *)v73 + 1) = 24;
  v73[16] = 2;
  v9();
  v74 = (_QWORD *)(v97 + v4 + 35 * v3);
  v75 = (char *)v74 + *(int *)(v1 + 48);
  *v74 = 42;
  *(_QWORD *)v75 = "externalAgentRequest";
  *((_QWORD *)v75 + 1) = 20;
  v75[16] = 2;
  v9();
  v76 = (_QWORD *)(v97 + v4 + 36 * v3);
  v77 = (char *)v76 + *(int *)(v1 + 48);
  *v76 = 36;
  *(_QWORD *)v77 = "externalAgentOutcome";
  *((_QWORD *)v77 + 1) = 20;
  v77[16] = 2;
  v9();
  v78 = (_QWORD *)(v97 + v4 + 37 * v3);
  v79 = (char *)v78 + *(int *)(v1 + 48);
  *v78 = 37;
  *(_QWORD *)v79 = "externalAgentRequestRewriteMetadata";
  *((_QWORD *)v79 + 1) = 35;
  v79[16] = 2;
  v9();
  v80 = (_QWORD *)(v97 + v4 + 38 * v3);
  v81 = (char *)v80 + *(int *)(v1 + 48);
  *v80 = 38;
  *(_QWORD *)v81 = "ToolResolution";
  *((_QWORD *)v81 + 1) = 14;
  v81[16] = 2;
  v9();
  v82 = (_QWORD *)(v97 + v4 + 39 * v3);
  v83 = (char *)v82 + *(int *)(v1 + 48);
  *v82 = 39;
  *(_QWORD *)v83 = "undoRedoRequest";
  *((_QWORD *)v83 + 1) = 15;
  v83[16] = 2;
  v9();
  v84 = (_QWORD *)(v97 + v4 + 40 * v3);
  v85 = (char *)v84 + *(int *)(v1 + 48);
  *v84 = 40;
  *(_QWORD *)v85 = "clientUndoRedoRequest";
  *((_QWORD *)v85 + 1) = 21;
  v85[16] = 2;
  v9();
  v86 = (_QWORD *)(v97 + v4 + 41 * v3);
  v87 = (char *)v86 + *(int *)(v1 + 48);
  *v86 = 43;
  *(_QWORD *)v87 = "typeConversionRequest";
  *((_QWORD *)v87 + 1) = 21;
  v87[16] = 2;
  v9();
  v88 = (_QWORD *)(v97 + v4 + 42 * v3);
  v89 = (char *)v88 + *(int *)(v1 + 48);
  *v88 = 44;
  *(_QWORD *)v89 = "typeConversionResult";
  *((_QWORD *)v89 + 1) = 20;
  v89[16] = 2;
  v9();
  v90 = (_QWORD *)(v97 + v4 + 43 * v3);
  v91 = (char *)v90 + *(int *)(v1 + 48);
  *v90 = 45;
  *(_QWORD *)v91 = "queryDecorationResult";
  *((_QWORD *)v91 + 1) = 21;
  v91[16] = 2;
  v9();
  v92 = (_QWORD *)(v97 + v4 + 44 * v3);
  v93 = (char *)v92 + *(int *)(v1 + 48);
  *v92 = 48;
  *(_QWORD *)v93 = 0x240926000;
  *((_QWORD *)v93 + 1) = 16;
  v93[16] = 2;
  v9();
  v94 = (_QWORD *)(v97 + v4 + 45 * v3);
  v95 = (char *)v94 + *(int *)(v1 + 48);
  *v94 = 49;
  *(_QWORD *)v95 = "queryDecorationPrePlannerResult";
  *((_QWORD *)v95 + 1) = 31;
  v95[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9058, (uint64_t)qword_256FFD0F8, a1);
}

uint64_t TranscriptProtoPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_24043694C((uint64_t)v5, a1, a2, a3);
          break;
        case 2:
          sub_240436D90((uint64_t)v5, a1, a2, a3);
          break;
        case 3:
          sub_2404371D4((uint64_t)v5, a1, a2, a3);
          break;
        case 4:
          sub_240437618((uint64_t)v5, a1, a2, a3);
          break;
        case 5:
          sub_240437A5C((uint64_t)v5, a1, a2, a3);
          break;
        case 6:
          sub_240437EA0((uint64_t)v5, a1, a2, a3);
          break;
        case 7:
          sub_2404382E4((uint64_t)v5, a1, a2, a3);
          break;
        case 9:
          v11 = a1;
          v12 = (uint64_t)v5;
          v13 = a2;
          v14 = a3;
          v15 = 43;
          goto LABEL_5;
        case 10:
          sub_240499908(a1, v5, a2, a3, &qword_256FFA488, type metadata accessor for TranscriptProtoPayloadEnum, 9);
          break;
        case 11:
          sub_240438728((uint64_t)v5, a1, a2, a3);
          break;
        case 12:
          sub_240438B6C((uint64_t)v5, a1, a2, a3);
          break;
        case 14:
          v11 = a1;
          v12 = (uint64_t)v5;
          v13 = a2;
          v14 = a3;
          v15 = 44;
          goto LABEL_5;
        case 15:
          v11 = a1;
          v12 = (uint64_t)v5;
          v13 = a2;
          v14 = a3;
          v15 = 45;
LABEL_5:
          sub_240438FB0(v11, v12, v13, v14, &qword_256FFA488, type metadata accessor for TranscriptProtoPayloadEnum, v15);
          break;
        case 17:
          sub_240439210((uint64_t)v5, a1, a2, a3);
          break;
        case 18:
          sub_240439654((uint64_t)v5, a1, a2, a3);
          break;
        case 19:
          sub_240439A98((uint64_t)v5, a1, a2, a3);
          break;
        case 20:
          sub_240439EDC((uint64_t)v5, a1, a2, a3);
          break;
        case 21:
          sub_24043A320((uint64_t)v5, a1, a2, a3);
          break;
        case 22:
          sub_24043A764((uint64_t)v5, a1, a2, a3);
          break;
        case 23:
          sub_24043ABA8((uint64_t)v5, a1, a2, a3);
          break;
        case 24:
          sub_24043AFEC((uint64_t)v5, a1, a2, a3);
          break;
        case 25:
          sub_24043B430((uint64_t)v5, a1, a2, a3);
          break;
        case 26:
          sub_24043B874((uint64_t)v5, a1, a2, a3);
          break;
        case 27:
          sub_24043BCB8((uint64_t)v5, a1, a2, a3);
          break;
        case 28:
          sub_24043C0FC((uint64_t)v5, a1, a2, a3);
          break;
        case 29:
          sub_24043C540((uint64_t)v5, a1, a2, a3);
          break;
        case 30:
          sub_24043C984((uint64_t)v5, a1, a2, a3);
          break;
        case 31:
          sub_24043CDC8((uint64_t)v5, a1, a2, a3);
          break;
        case 32:
          sub_24043D20C((uint64_t)v5, a1, a2, a3);
          break;
        case 33:
          sub_24043D650((uint64_t)v5, a1, a2, a3);
          break;
        case 34:
          sub_24043DA94((uint64_t)v5, a1, a2, a3);
          break;
        case 35:
          sub_24043DED8((uint64_t)v5, a1, a2, a3);
          break;
        case 36:
          sub_24043E31C((uint64_t)v5, a1, a2, a3);
          break;
        case 37:
          sub_24043E760((uint64_t)v5, a1, a2, a3);
          break;
        case 38:
          sub_24043EBA4((uint64_t)v5, a1, a2, a3);
          break;
        case 39:
          sub_24043EFE8((uint64_t)v5, a1, a2, a3);
          break;
        case 40:
          sub_24043F42C((uint64_t)v5, a1, a2, a3);
          break;
        case 41:
          sub_24043F870((uint64_t)v5, a1, a2, a3);
          break;
        case 42:
          sub_24043FCB4((uint64_t)v5, a1, a2, a3);
          break;
        case 43:
          sub_2404400F8((uint64_t)v5, a1, a2, a3);
          break;
        case 44:
          sub_24044053C((uint64_t)v5, a1, a2, a3);
          break;
        case 45:
          sub_240440980((uint64_t)v5, a1, a2, a3);
          break;
        case 46:
          sub_240440DC4((uint64_t)v5, a1, a2, a3);
          break;
        case 47:
          sub_240441204((uint64_t)v5, a1, a2, a3);
          break;
        case 48:
          sub_240441648((uint64_t)v5, a1, a2, a3);
          break;
        case 49:
          sub_240441A8C((uint64_t)v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24043694C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoTextQuery(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570012A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoTextQuery);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoTextQuery);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000498, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570012A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570012A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570012A8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570012A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoTextQuery);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570012A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoTextQuery);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240436D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012B0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570012B0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSpeechQuery);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSpeechQuery);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570004C8, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570012B0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570012B0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570012B0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570012B0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSpeechQuery);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570012B0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSpeechQuery);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404371D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoPlan(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA40);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFCA40);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoPlan);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoPlan);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF6B8, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFCA40);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFCA40);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFCA40);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFCA40);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoPlan);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFCA40);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoPlan);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240437618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoAction(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012B8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570012B8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoAction);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoAction);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF228, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570012B8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570012B8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570012B8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570012B8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoAction);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570012B8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoAction);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240437A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoClientAction(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFC358);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFC358);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoClientAction);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoClientAction);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF3A0, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFC358);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFC358);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFC358);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFC358);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoClientAction);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFC358);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoClientAction);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240437EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t Step;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  Step = type metadata accessor for TranscriptProtoQueryStep(0);
  v6 = *(_QWORD *)(Step - 8);
  v7 = MEMORY[0x24BDAC7A8](Step);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB000);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = Step;
  v25(&v36[-v23], 1, 1, Step);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFB000);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryStep);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryStep);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF7C8, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFB000);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFB000);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFB000);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFB000);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryStep);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFB000);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryStep);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404382E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoVariableStep(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012C0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570012C0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoVariableStep);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoVariableStep);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFB80, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570012C0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570012C0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570012C0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570012C0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoVariableStep);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570012C0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoVariableStep);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240438728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSessionError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012C8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570012C8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSessionError);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSessionError);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028((unint64_t *)&qword_256FFC350, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570012C8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570012C8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570012C8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570012C8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSessionError);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570012C8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSessionError);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240438B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoClientCustom(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012D0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570012D0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoClientCustom);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoClientCustom);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF3E0, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570012D0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570012D0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570012D0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570012D0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoClientCustom);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570012D0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoClientCustom);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240438FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD), int a7)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v28;
  _DWORD v29[2];
  uint64_t (*v30)(_QWORD);
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  v29[1] = a7;
  v30 = a6;
  v31 = a5;
  v32 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v29 - v15;
  v17 = sub_2408E5714();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v19 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v16, 1, 1, v17);
  sub_2404FA028(&qword_257000D10, v18, MEMORY[0x24BE5B938]);
  v20 = v33;
  sub_2408E5894();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D48);
  v33 = a4;
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D48);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v17);
  sub_2403A97FC((uint64_t)v14, &qword_257000D48);
  if (v21 == 1)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D48);
  v22 = v31;
  v23 = (uint64_t)v10;
  sub_2403A9210(v32, (uint64_t)v10, v31);
  v24 = v30(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v24);
  sub_2403A97FC(v23, v22);
  if (v26 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v16, &qword_257000D48);
  v28 = v32;
  sub_2403A97FC(v32, v31);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v28, 0, 1, v24);
}

uint64_t sub_240439210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC40);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFAC40);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSystemPromptResolution);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemPromptResolution);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFA10, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFAC40);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFAC40);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFAC40);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFAC40);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSystemPromptResolution);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFAC40);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSystemPromptResolution);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240439654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoActionStepResult(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012D8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570012D8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoActionStepResult);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoActionStepResult);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF320, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570012D8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570012D8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570012D8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570012D8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoActionStepResult);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570012D8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoActionStepResult);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240439A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t StepResults;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  v6 = *(_QWORD *)(StepResults - 8);
  v7 = MEMORY[0x24BDAC7A8](StepResults);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012E0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = StepResults;
  v25(&v36[-v23], 1, 1, StepResults);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 15)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570012E0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryStepResults);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryStepResults);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF7F0, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570012E0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570012E0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570012E0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570012E0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryStepResults);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570012E0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryStepResults);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240439EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoActionResponse(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012E8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 16)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570012E8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoActionResponse);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoActionResponse);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFA40, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570012E8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570012E8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570012E8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570012E8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoActionResponse);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570012E8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoActionResponse);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043A320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012F0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570012F0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoActionResolverRequest);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoActionResolverRequest);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFA58, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570012F0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570012F0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570012F0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570012F0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoActionResolverRequest);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570012F0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoActionResolverRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043A764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012F8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 18)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570012F8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFAF8, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570012F8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570012F8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570012F8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570012F8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570012F8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043ABA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoContextPrewarmRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001300);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 19)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001300);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoContextPrewarmRequest);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoContextPrewarmRequest);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF2C0, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001300);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001300);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001300);
    return sub_2403A97FC((uint64_t)v33, &qword_257001300);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoContextPrewarmRequest);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001300);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoContextPrewarmRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043AFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoContextPrewarmCompleted(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001308);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 20)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001308);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF2D8, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001308);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001308);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001308);
    return sub_2403A97FC((uint64_t)v33, &qword_257001308);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001308);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043B430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSafetyModeRelease(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001310);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 21)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001310);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSafetyModeRelease);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSafetyModeRelease);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFAA8, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001310);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001310);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001310);
    return sub_2403A97FC((uint64_t)v33, &qword_257001310);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSafetyModeRelease);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001310);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSafetyModeRelease);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043B874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSafetyModeException(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001318);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 22)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001318);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSafetyModeException);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSafetyModeException);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFAC0, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001318);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001318);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001318);
    return sub_2403A97FC((uint64_t)v33, &qword_257001318);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSafetyModeException);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001318);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSafetyModeException);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043BCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001320);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 23)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001320);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoResponseGenerationRequest);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoResponseGenerationRequest);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF360, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001320);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001320);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001320);
    return sub_2403A97FC((uint64_t)v33, &qword_257001320);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoResponseGenerationRequest);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001320);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoResponseGenerationRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043C0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t matched;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  v6 = *(_QWORD *)(matched - 8);
  v7 = MEMORY[0x24BDAC7A8](matched);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001328);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = matched;
  v25(&v36[-v23], 1, 1, matched);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 24)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001328);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000288, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001328);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001328);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001328);
    return sub_2403A97FC((uint64_t)v33, &qword_257001328);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001328);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043C540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001330);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 25)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001330);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoContextRetrieved);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoContextRetrieved);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFA70, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001330);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001330);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001330);
    return sub_2403A97FC((uint64_t)v33, &qword_257001330);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoContextRetrieved);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001330);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoContextRetrieved);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043C984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoActionCancellation(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA6C8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 26)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA6C8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoActionCancellation);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoActionCancellation);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF250, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA6C8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA6C8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA6C8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA6C8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoActionCancellation);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA6C8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoActionCancellation);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043CDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001338);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 27)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001338);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoToolRetrievalResponse);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoToolRetrievalResponse);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570002A0, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001338);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001338);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001338);
    return sub_2403A97FC((uint64_t)v33, &qword_257001338);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoToolRetrievalResponse);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001338);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoToolRetrievalResponse);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043D20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSystemResponse(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA30);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 28)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFCA30);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSystemResponse);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemResponse);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570002B8, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFCA30);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFCA30);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFCA30);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFCA30);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSystemResponse);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFCA30);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSystemResponse);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043D650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoStatementResult(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA658);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 29)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA658);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoStatementResult);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoStatementResult);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7C0, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA658);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA658);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA658);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA658);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoStatementResult);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA658);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoStatementResult);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043DA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001340);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 30)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001340);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570004B0, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001340);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001340);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001340);
    return sub_2403A97FC((uint64_t)v33, &qword_257001340);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001340);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043DED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001348);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 31)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001348);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570004E0, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001348);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001348);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001348);
    return sub_2403A97FC((uint64_t)v33, &qword_257001348);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001348);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043E31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001350);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 33)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001350);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoExternalAgentOutcome);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoExternalAgentOutcome);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF308, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001350);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001350);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001350);
    return sub_2403A97FC((uint64_t)v33, &qword_257001350);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoExternalAgentOutcome);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001350);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoExternalAgentOutcome);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043E760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 34)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA368);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF168, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA368);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA368);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA368);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA368);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA368);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043EBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoToolResolution(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001358);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 35)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001358);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoToolResolution);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoToolResolution);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000348, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001358);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001358);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001358);
    return sub_2403A97FC((uint64_t)v33, &qword_257001358);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoToolResolution);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001358);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoToolResolution);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043EFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001360);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 36)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001360);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoUndoRedoRequest);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoUndoRedoRequest);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000360, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001360);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001360);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001360);
    return sub_2403A97FC((uint64_t)v33, &qword_257001360);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoUndoRedoRequest);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001360);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoUndoRedoRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043F42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001368);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 37)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001368);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000378, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001368);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001368);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001368);
    return sub_2403A97FC((uint64_t)v33, &qword_257001368);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001368);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043F870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA88);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFCA88);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequest);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequest);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF0C8, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFCA88);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFCA88);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFCA88);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFCA88);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequest);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFCA88);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24043FCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001370);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 32)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001370);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoExternalAgentRequest);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoExternalAgentRequest);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF150, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001370);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001370);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001370);
    return sub_2403A97FC((uint64_t)v33, &qword_257001370);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoExternalAgentRequest);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001370);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoExternalAgentRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404400F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001378);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 38)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001378);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoTypeConversionRequest);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoTypeConversionRequest);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000390, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001378);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001378);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001378);
    return sub_2403A97FC((uint64_t)v33, &qword_257001378);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoTypeConversionRequest);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001378);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoTypeConversionRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24044053C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001380);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 39)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001380);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoTypeConversionResult);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoTypeConversionResult);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570003A8, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001380);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001380);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001380);
    return sub_2403A97FC((uint64_t)v33, &qword_257001380);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoTypeConversionResult);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001380);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoTypeConversionResult);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240440980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationResult;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  v6 = *(_QWORD *)(DecorationResult - 8);
  v7 = MEMORY[0x24BDAC7A8](DecorationResult);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001388);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = DecorationResult;
  v25(&v36[-v23], 1, 1, DecorationResult);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 40)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001388);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryDecorationResult);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationResult);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570003C0, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001388);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001388);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001388);
    return sub_2403A97FC((uint64_t)v33, &qword_257001388);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryDecorationResult);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001388);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryDecorationResult);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240440DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSessionStart(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001390);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001390);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSessionStart);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSessionStart);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF0B0, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001390);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001390);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001390);
    return sub_2403A97FC((uint64_t)v33, &qword_257001390);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSessionStart);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001390);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSessionStart);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240441204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRecoverableError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001398);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001398);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRecoverableError);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRecoverableError);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF6D0, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001398);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001398);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001398);
    return sub_2403A97FC((uint64_t)v33, &qword_257001398);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRecoverableError);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001398);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRecoverableError);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240441648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoContinuePlanning(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570013A0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 41)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570013A0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoContinuePlanning);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoContinuePlanning);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570004F8, type metadata accessor for TranscriptProtoContinuePlanning, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570013A0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570013A0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570013A0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570013A0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoContinuePlanning);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570013A0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoContinuePlanning);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240441A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResult;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  v6 = *(_QWORD *)(DecorationPrePlannerResult - 8);
  v7 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResult);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570013A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = DecorationPrePlannerResult;
  v25(&v36[-v23], 1, 1, DecorationPrePlannerResult);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA488);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA488);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 42)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570013A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_2570003D8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570013A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570013A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570013A8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570013A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570013A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA488);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoPayload.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v1, (uint64_t)v4, &qword_256FFA488);
  v5 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) != 1)
  {
    v6 = (char *)&loc_240441F9C + 4 * word_2408EB840[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoPayload(0);
  return sub_2408E578C();
}

void sub_2404424C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_240443080(v3, v4, v2, v1);
  if (!v0)
    JUMPOUT(0x24044247CLL);
  JUMPOUT(0x2404424A4);
}

void sub_2404424E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_240443680(v3, v4, v2, v1);
  if (!v0)
    JUMPOUT(0x24044247CLL);
  JUMPOUT(0x2404424A4);
}

void sub_2404424FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_240443818(v2, v3, v1, v0);
  JUMPOUT(0x240442514);
}

uint64_t sub_240442520(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoTextQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoTextQuery);
    sub_2404FA028(&qword_257000498, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoTextQuery);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404426C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSpeechQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSpeechQuery);
    sub_2404FA028(&qword_2570004C8, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSpeechQuery);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240442860(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPlan(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPlan);
    sub_2404FA028(&qword_256FFF6B8, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPlan);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240442A00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoAction(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoAction);
    sub_2404FA028(&qword_256FFF228, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAction);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240442BA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoClientAction(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoClientAction);
    sub_2404FA028(&qword_256FFF3A0, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoClientAction);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240442D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Step;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Step = type metadata accessor for TranscriptProtoQueryStep(0);
  MEMORY[0x24BDAC7A8](Step);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryStep);
    sub_2404FA028(&qword_256FFF7C8, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryStep);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240442EE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoVariableStep(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 8)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoVariableStep);
    sub_2404FA028(&qword_256FFFB80, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoVariableStep);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240443080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA488);
  v12 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA488);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoPayloadEnum);
    if (EnumCaseMultiPayload == 43)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240443218(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v5 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 9)
  {
    sub_2408E5A38();
    return swift_bridgeObjectRelease();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240443340(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSessionError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 10)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSessionError);
    sub_2404FA028((unint64_t *)&qword_256FFC350, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSessionError);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404434E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoClientCustom(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 12)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoClientCustom);
    sub_2404FA028(&qword_256FFF3E0, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoClientCustom);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240443680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA488);
  v12 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA488);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoPayloadEnum);
    if (EnumCaseMultiPayload == 44)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240443818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA488);
  v12 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA488);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoPayloadEnum);
    if (EnumCaseMultiPayload == 45)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2404439B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 13)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolution);
    sub_2404FA028(&qword_256FFFA10, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolution);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240443B50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionStepResult(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 14)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionStepResult);
    sub_2404FA028(&qword_256FFF320, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoActionStepResult);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240443CF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t StepResults;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  MEMORY[0x24BDAC7A8](StepResults);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 15)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryStepResults);
    sub_2404FA028(&qword_256FFF7F0, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryStepResults);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240443E90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 16)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionResponse);
    sub_2404FA028(&qword_256FFFA40, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoActionResponse);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240444030(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 17)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionResolverRequest);
    sub_2404FA028(&qword_256FFFA58, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoActionResolverRequest);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404441D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 18)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
    sub_2404FA028(&qword_256FFFAF8, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoClientInitiatedClientAction);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240444370(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoContextPrewarmRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 19)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoContextPrewarmRequest);
    sub_2404FA028(&qword_256FFF2C0, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoContextPrewarmRequest);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240444510(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoContextPrewarmCompleted(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 20)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
    sub_2404FA028(&qword_256FFF2D8, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoContextPrewarmCompleted);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404446B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSafetyModeRelease(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 21)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSafetyModeRelease);
    sub_2404FA028(&qword_256FFFAA8, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSafetyModeRelease);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240444850(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSafetyModeException(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 22)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSafetyModeException);
    sub_2404FA028(&qword_256FFFAC0, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSafetyModeException);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404449F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 23)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoResponseGenerationRequest);
    sub_2404FA028(&qword_256FFF360, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoResponseGenerationRequest);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240444B90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t matched;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = type metadata accessor for TranscriptProtoEntitySpanMatchResult(0);
  MEMORY[0x24BDAC7A8](matched);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 24)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
    sub_2404FA028(&qword_257000288, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoEntitySpanMatchResult);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240444D30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoContextRetrieved(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 25)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoContextRetrieved);
    sub_2404FA028(&qword_256FFFA70, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoContextRetrieved);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240444ED0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionCancellation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 26)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionCancellation);
    sub_2404FA028(&qword_256FFF250, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoActionCancellation);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240445070(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 27)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoToolRetrievalResponse);
    sub_2404FA028(&qword_2570002A0, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoToolRetrievalResponse);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240445210(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemResponse(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 28)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemResponse);
    sub_2404FA028(&qword_2570002B8, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSystemResponse);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404453B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementResult(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 29)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementResult);
    sub_2404FA028(&qword_256FFE7C0, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementResult);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240445550(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 30)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
    sub_2404FA028(&qword_2570004B0, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentTextQuery);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404456F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 31)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
    sub_2404FA028(&qword_2570004E0, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240445890(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 33)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentOutcome);
    sub_2404FA028(&qword_256FFF308, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentOutcome);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240445A30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 34)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_2404FA028(&qword_256FFF168, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240445BD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoToolResolution(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 35)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoToolResolution);
    sub_2404FA028(&qword_257000348, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoToolResolution);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240445D70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 36)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUndoRedoRequest);
    sub_2404FA028(&qword_257000360, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoUndoRedoRequest);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240445F10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 37)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
    sub_2404FA028(&qword_257000378, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoClientUndoRedoRequest);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404460B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequest);
    sub_2404FA028(&qword_256FFF0C8, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequest);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240446250(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 32)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequest);
    sub_2404FA028(&qword_256FFF150, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequest);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404463F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 38)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoTypeConversionRequest);
    sub_2404FA028(&qword_257000390, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoTypeConversionRequest);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240446590(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 39)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoTypeConversionResult);
    sub_2404FA028(&qword_2570003A8, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoTypeConversionResult);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240446730(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationResult;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  MEMORY[0x24BDAC7A8](DecorationResult);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 40)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationResult);
    sub_2404FA028(&qword_2570003C0, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationResult);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404468D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSessionStart(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSessionStart);
    sub_2404FA028(&qword_256FFF0B0, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSessionStart);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240446A6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRecoverableError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 11)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRecoverableError);
    sub_2404FA028(&qword_256FFF6D0, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRecoverableError);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240446C0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoContinuePlanning(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 41)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoContinuePlanning);
    sub_2404FA028(&qword_2570004F8, type metadata accessor for TranscriptProtoContinuePlanning, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoContinuePlanning);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_240446DAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResult;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA488);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResult);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA488);
  v8 = type metadata accessor for TranscriptProtoPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA488);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 42)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
    sub_2404FA028(&qword_2570003D8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPayloadEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoPayload.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPayload, &qword_256FFE690, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
}

uint64_t sub_240446F6C(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  sub_2408E6218();
  a1(0);
  sub_2404FA028(a2, a1, a3);
  sub_2408E5CB4();
  return sub_2408E623C();
}

uint64_t sub_240446FE8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoPayloadEnum, a1);
}

unint64_t sub_240446FF4()
{
  return 0xD000000000000012;
}

uint64_t (*sub_240447018())()
{
  return nullsub_1;
}

uint64_t sub_24044702C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPayload.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240447040()
{
  return TranscriptProtoPayload.traverse<A>(visitor:)();
}

uint64_t sub_240447054()
{
  sub_2404FA028(&qword_257000C28, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
  return sub_2408E5828();
}

uint64_t sub_2404470A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9058, (uint64_t)qword_256FFD0F8, a1);
}

uint64_t sub_2404470C0()
{
  sub_2404FA028(&qword_256FFF068, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
  return sub_2408E599C();
}

uint64_t sub_240447100()
{
  sub_2404FA028(&qword_256FFF068, type metadata accessor for TranscriptProtoPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPayload);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoTranscript.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_240447170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD110);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD110);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "sessionId";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "clientSessionId";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "events";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoTranscript._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9060, (uint64_t)qword_256FFD110, a1);
}

uint64_t TranscriptProtoTranscript.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v4 = v3;
        sub_2408E5930();
        goto LABEL_5;
      }
      if (result == 1)
      {
        v4 = v3;
        sub_2408E593C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    type metadata accessor for TranscriptProtoEvent(0);
    sub_2404FA028((unint64_t *)&qword_256FFC9F0, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
    v4 = v3;
    sub_2408E5960();
LABEL_5:
    v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoTranscript.traverse<A>(visitor:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = *v0;
  v3 = v0[1];
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v4 || (result = sub_2408E5A38(), !v1))
  {
    if (v0[4])
      result = sub_2408E5A38();
    if (!v1)
    {
      if (*(_QWORD *)(v0[2] + 16))
      {
        type metadata accessor for TranscriptProtoEvent(0);
        sub_2404FA028((unint64_t *)&qword_256FFC9F0, type metadata accessor for TranscriptProtoEvent, (uint64_t)&protocol conformance descriptor for TranscriptProtoEvent);
        sub_2408E5A5C();
      }
      type metadata accessor for TranscriptProtoTranscript(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t TranscriptProtoTranscript.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoTranscript, &qword_256FFE698, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
}

uint64_t sub_24044758C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  a1[3] = 0;
  a1[4] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_2404475CC()
{
  return 0xD000000000000015;
}

uint64_t (*sub_2404475F0())()
{
  return nullsub_1;
}

uint64_t sub_240447604()
{
  return TranscriptProtoTranscript.decodeMessage<A>(decoder:)();
}

uint64_t sub_240447618()
{
  return TranscriptProtoTranscript.traverse<A>(visitor:)();
}

uint64_t sub_24044762C()
{
  sub_2404FA028(&qword_257000C20, type metadata accessor for TranscriptProtoTranscript, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
  return sub_2408E5828();
}

uint64_t sub_24044767C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9060, (uint64_t)qword_256FFD110, a1);
}

uint64_t sub_240447698()
{
  sub_2404FA028(&qword_256FFF080, type metadata accessor for TranscriptProtoTranscript, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
  return sub_2408E599C();
}

uint64_t sub_2404476D8()
{
  sub_2404FA028(&qword_256FFF080, type metadata accessor for TranscriptProtoTranscript, (uint64_t)&protocol conformance descriptor for TranscriptProtoTranscript);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoTimepoint.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_240447748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD128);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "rawDate";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "suspendingClockInstantNs";
  *(_QWORD *)(v11 + 8) = 24;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "continuousClockInstantNs";
  *((_QWORD *)v13 + 1) = 24;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "rawBootSessionUUID";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoTimepoint._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9068, (uint64_t)qword_256FFD128, a1);
}

uint64_t TranscriptProtoTimepoint.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    v11 = MEMORY[0x24BE5B980];
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoTimepoint, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], &qword_2570012A0, v11);
          break;
        case 2:
        case 3:
          sub_2408E5954();
          break;
        case 4:
          sub_2408E593C();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoTimepoint.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  result = sub_240447B48((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3)
      sub_2408E5A50();
    if (v3[1])
      sub_2408E5A50();
    v6 = v3[3];
    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v3[2] & 0xFFFFFFFFFFFFLL;
    if (v7)
      sub_2408E5A38();
    type metadata accessor for TranscriptProtoTimepoint(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240447B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA498);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2408E5750();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoTimepoint(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFA498);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA498);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_2404FA028(&qword_2570012A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B990], MEMORY[0x24BE5B980]);
  sub_2408E5A68();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t TranscriptProtoTimepoint.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoTimepoint, &qword_256FFE6A0, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
}

uint64_t sub_240447CE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v3;
  uint64_t v4;
  uint64_t result;

  v3 = (char *)a2 + *(int *)(a1 + 28);
  v4 = sub_2408E5750();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  return result;
}

unint64_t sub_240447D4C()
{
  return 0xD000000000000014;
}

uint64_t (*sub_240447D70())()
{
  return nullsub_1;
}

uint64_t sub_240447D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoTimepoint.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240447D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoTimepoint.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240447DAC()
{
  sub_2404FA028(&qword_257000C18, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
  return sub_2408E5828();
}

uint64_t sub_240447DFC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9068, (uint64_t)qword_256FFD128, a1);
}

uint64_t sub_240447E18()
{
  sub_2404FA028(&qword_256FFF098, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
  return sub_2408E599C();
}

uint64_t sub_240447E58()
{
  sub_2404FA028(&qword_256FFF098, type metadata accessor for TranscriptProtoTimepoint, (uint64_t)&protocol conformance descriptor for TranscriptProtoTimepoint);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSessionStart.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_240447EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD140);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD140);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "initialLocaleSettings";
  *(_QWORD *)(v7 + 8) = 21;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "originatingDevice";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 4;
  *(_QWORD *)v12 = "originatingDeviceWasLocal";
  *(_QWORD *)(v12 + 8) = 25;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSessionStart._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9070, (uint64_t)qword_256FFD140, a1);
}

uint64_t TranscriptProtoSessionStart.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 4:
          sub_2408E5888();
          break;
        case 3:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSessionStart, type metadata accessor for TranscriptProtoDeviceDetails, &qword_257000320, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
          break;
        case 2:
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSessionStart, type metadata accessor for TranscriptProtoLocaleSettings, &qword_2570002F0, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoSessionStart.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_24044826C((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    sub_2404483E0((uint64_t)v3, a1, a2, a3);
    if (*v3 == 1)
      sub_2408E59D8();
    type metadata accessor for TranscriptProtoSessionStart(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24044826C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA310);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoSessionStart(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA310);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA310);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoLocaleSettings);
  sub_2404FA028(&qword_2570002F0, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoLocaleSettings);
}

uint64_t sub_2404483E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA320);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoSessionStart(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA320);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA320);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoDeviceDetails);
  sub_2404FA028(&qword_257000320, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoDeviceDetails);
}

uint64_t TranscriptProtoSessionStart.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSessionStart, &qword_256FFE6A8, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
}

uint64_t sub_240448574@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t result;

  v4 = &a2[*(int *)(a1 + 20)];
  v5 = type metadata accessor for TranscriptProtoLocaleSettings(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &a2[*(int *)(a1 + 24)];
  v7 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  return result;
}

unint64_t sub_240448604()
{
  return 0xD000000000000017;
}

uint64_t sub_240448620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSessionStart.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240448634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSessionStart.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240448648()
{
  sub_2404FA028(&qword_257000C10, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
  return sub_2408E5828();
}

uint64_t sub_240448698@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9070, (uint64_t)qword_256FFD140, a1);
}

uint64_t sub_2404486B4()
{
  sub_2404FA028(&qword_256FFF0B0, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
  return sub_2408E599C();
}

uint64_t sub_2404486F4()
{
  sub_2404FA028(&qword_256FFF0B0, type metadata accessor for TranscriptProtoSessionStart, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionStart);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoRequest.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_240448764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD158);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD158);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "content";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "safetyMode";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "prescribedPlan";
  *((_QWORD *)v13 + 1) = 14;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "rawRewriteMetadataEventId";
  *((_QWORD *)v15 + 1) = 25;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "rewriteMetadataInlined";
  *(_QWORD *)(v16 + 8) = 22;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9078, (uint64_t)qword_256FFD158, a1);
}

uint64_t TranscriptProtoRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequest, type metadata accessor for TranscriptProtoRequestContent, &qword_256FFF0E0, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_2408E5888();
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequest, type metadata accessor for TranscriptProtoRequestPrescribedPlan, &qword_256FFF180, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
          goto LABEL_5;
        case 4:
          type metadata accessor for TranscriptProtoRequest(0);
          v12 = v11;
          sub_2408E5930();
          goto LABEL_5;
        case 5:
          v12 = v11;
          sub_2404557D8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequest, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, &qword_256FFF168, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240448B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_2404FA028(a7, a6, a8);
  return sub_2408E596C();
}

uint64_t sub_240448BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_2404FA028(a7, a6, a8);
  return sub_2408E596C();
}

uint64_t TranscriptProtoRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_240448D80((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3 == 1)
      sub_2408E59D8();
    sub_240448EF4((uint64_t)v3, a1, a2, a3);
    sub_2404C7E70((uint64_t)v3, a1, a2, a3, type metadata accessor for TranscriptProtoRequest);
    sub_240449068((uint64_t)v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoRequest(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240448D80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoRequestContent(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA350);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA350);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoRequestContent);
  sub_2404FA028(&qword_256FFF0E0, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoRequestContent);
}

uint64_t sub_240448EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA360);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA360);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA360);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
  sub_2404FA028(&qword_256FFF180, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoRequestPrescribedPlan);
}

uint64_t sub_240449068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_256FFA368);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA368);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_2404FA028(&qword_256FFF168, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t TranscriptProtoRequest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequest, &qword_256FFE6B0, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
}

uint64_t sub_2404491FC@<X0>(int *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t result;

  v4 = &a2[a1[5]];
  v5 = type metadata accessor for TranscriptProtoRequestContent(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &a2[a1[6]];
  v7 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = a1[8];
  v9 = &a2[a1[7]];
  *v9 = 0;
  v9[1] = 0;
  v10 = &a2[v8];
  v11 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  return result;
}

unint64_t sub_2404492C0()
{
  return 0xD000000000000012;
}

uint64_t (*sub_2404492E4())()
{
  return nullsub_1;
}

uint64_t sub_2404492F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24044930C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240449320()
{
  sub_2404FA028(&qword_257000C08, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
  return sub_2408E5828();
}

uint64_t sub_240449370@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9078, (uint64_t)qword_256FFD158, a1);
}

uint64_t sub_24044938C()
{
  sub_2404FA028(&qword_256FFF0C8, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
  return sub_2408E599C();
}

uint64_t sub_2404493CC()
{
  sub_2404FA028(&qword_256FFF0C8, type metadata accessor for TranscriptProtoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequest);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoRequestContent.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_24044943C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD170);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD170);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "text";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "speech";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "promptResolution";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "stop";
  *((_QWORD *)v15 + 1) = 4;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoRequestContent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9080, (uint64_t)qword_256FFD170, a1);
}

uint64_t TranscriptProtoRequestContent.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24045B00C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24044964C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240449A8C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240449ED0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24044A314);
}

uint64_t sub_24044964C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F80);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA348);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA348);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoRequestContentEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoRequestContentEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoRequestContentEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000F80);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequestContentTextContent);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestContentTextContent);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF110, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000F80);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000F80);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000F80);
    return sub_2403A97FC((uint64_t)v33, &qword_257000F80);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequestContentTextContent);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000F80);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA348);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequestContentTextContent);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240449A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F88);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA348);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA348);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoRequestContentEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoRequestContentEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000F88);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoRequestContentEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF128, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000F88);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000F88);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000F88);
    return sub_2403A97FC((uint64_t)v33, &qword_257000F88);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000F88);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA348);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240449ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAC40);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA348);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA348);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoRequestContentEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoRequestContentEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFAC40);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSystemPromptResolution);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemPromptResolution);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoRequestContentEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFA10, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFAC40);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFAC40);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFAC40);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFAC40);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSystemPromptResolution);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFAC40);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA348);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSystemPromptResolution);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24044A314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequestContentStopContent(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001270);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA348);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA348);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoRequestContentEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoRequestContentEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001270);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequestContentStopContent);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestContentStopContent);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoRequestContentEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF0F8, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001270);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001270);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001270);
    return sub_2403A97FC((uint64_t)v33, &qword_257001270);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequestContentStopContent);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001270);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA348);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequestContentStopContent);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoRequestContent.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFA348);
  v4 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_24044A824 + 4 * byte_2408EB8A5[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoRequestContent(0);
  return sub_2408E578C();
}

uint64_t sub_24044A8F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA348);
  v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA348);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentTextContent);
    sub_2404FA028(&qword_256FFF110, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentTextContent);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoRequestContentEnum);
  __break(1u);
  return result;
}

uint64_t sub_24044AA8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA348);
  v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA348);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
    sub_2404FA028(&qword_256FFF128, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoRequestContentEnum);
  __break(1u);
  return result;
}

uint64_t sub_24044AC2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA348);
  v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA348);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolution);
    sub_2404FA028(&qword_256FFFA10, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolution);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoRequestContentEnum);
  __break(1u);
  return result;
}

uint64_t sub_24044ADCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA348);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestContentStopContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA348);
  v8 = type metadata accessor for TranscriptProtoRequestContentEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA348);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentStopContent);
    sub_2404FA028(&qword_256FFF0F8, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentStopContent);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoRequestContentEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoRequestContent.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequestContent, &qword_256FFE6B8, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
}

uint64_t sub_24044AF8C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoRequestContentEnum, a1);
}

unint64_t sub_24044AF98()
{
  return 0xD000000000000019;
}

uint64_t sub_24044AFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestContent.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24044AFC8()
{
  return TranscriptProtoRequestContent.traverse<A>(visitor:)();
}

uint64_t sub_24044AFDC()
{
  sub_2404FA028(&qword_257000C00, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
  return sub_2408E5828();
}

uint64_t sub_24044B02C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9080, (uint64_t)qword_256FFD170, a1);
}

uint64_t sub_24044B048()
{
  sub_2404FA028(&qword_256FFF0E0, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
  return sub_2408E599C();
}

uint64_t sub_24044B088()
{
  sub_2404FA028(&qword_256FFF0E0, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoRequestContentStopContent.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_24044B0F8(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFD188);
}

uint64_t static TranscriptProtoRequestContentStopContent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9088, (uint64_t)qword_256FFD188, a1);
}

uint64_t TranscriptProtoRequestContentStopContent.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)()
{
  return sub_2408E578C();
}

uint64_t TranscriptProtoRequestContentStopContent.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequestContentStopContent, &qword_256FFE6C8, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
}

unint64_t sub_24044B16C()
{
  return 0xD000000000000024;
}

uint64_t sub_24044B190()
{
  return TranscriptProtoRequestContentStopContent.decodeMessage<A>(decoder:)();
}

uint64_t sub_24044B1A4()
{
  return TranscriptProtoRequestContentStopContent.traverse<A>(visitor:)();
}

uint64_t sub_24044B1B8()
{
  sub_2404FA028(&qword_257000BF8, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
  return sub_2408E5828();
}

uint64_t sub_24044B208@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9088, (uint64_t)qword_256FFD188, a1);
}

uint64_t sub_24044B224()
{
  sub_2404FA028(&qword_256FFF0F8, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
  return sub_2408E599C();
}

uint64_t sub_24044B264()
{
  sub_2404FA028(&qword_256FFF0F8, type metadata accessor for TranscriptProtoRequestContentStopContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentStopContent);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoRequestContentTextContent.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_24044B2D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD1A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD1A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "text";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoRequestContentTextContent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9090, (uint64_t)qword_256FFD1A0, a1);
}

uint64_t TranscriptProtoRequestContentTextContent.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BF2D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestContentTextContent, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoRequestContentTextContent.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24044BC48(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_24044B498, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestContentTextContent);
}

uint64_t sub_24044B498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t static TranscriptProtoRequestContentTextContent.== infix(_:_:)(uint64_t *a1, char *a2)
{
  return sub_2404EC218(a1, a2, type metadata accessor for TranscriptProtoRequestContentTextContent) & 1;
}

uint64_t TranscriptProtoRequestContentTextContent.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequestContentTextContent, &qword_256FFE6D0, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
}

uint64_t sub_24044B648@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404BF554(a1, type metadata accessor for TranscriptProtoStatementID, a2);
}

unint64_t sub_24044B654()
{
  return 0xD000000000000024;
}

uint64_t (*sub_24044B678())()
{
  return nullsub_1;
}

uint64_t sub_24044B68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestContentTextContent.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24044B6A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestContentTextContent.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24044B6B4()
{
  sub_2404FA028(&qword_257000BF0, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
  return sub_2408E5828();
}

uint64_t sub_24044B704@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9090, (uint64_t)qword_256FFD1A0, a1);
}

uint64_t sub_24044B720()
{
  sub_2404FA028(&qword_256FFF110, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
  return sub_2408E599C();
}

uint64_t sub_24044B760()
{
  sub_2404FA028(&qword_256FFF110, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
  return sub_2408E59A8();
}

uint64_t sub_24044B7B0(uint64_t *a1, char *a2)
{
  return sub_2404EC218(a1, a2, type metadata accessor for TranscriptProtoRequestContentTextContent) & 1;
}

unint64_t static TranscriptProtoRequestContentSpeechContent.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_24044B7EC(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD1B8, 1, (uint64_t)"candidates", 10);
}

uint64_t static TranscriptProtoRequestContentSpeechContent._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9098, (uint64_t)qword_256FFD1B8, a1);
}

uint64_t TranscriptProtoRequestContentSpeechContent.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for TranscriptProtoSpeechRequestCandidate, &qword_256FFE6D8, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
}

uint64_t TranscriptProtoRequestContentSpeechContent.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for TranscriptProtoSpeechRequestCandidate, &qword_256FFE6D8, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestContentSpeechContent);
}

uint64_t static TranscriptProtoRequestContentSpeechContent.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BB6B4, type metadata accessor for TranscriptProtoRequestContentSpeechContent) & 1;
}

uint64_t TranscriptProtoRequestContentSpeechContent.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequestContentSpeechContent, &qword_256FFE6E0, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
}

uint64_t sub_24044B8C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_24044B8FC()
{
  return 0xD000000000000026;
}

uint64_t sub_24044B918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestContentSpeechContent.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24044B92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestContentSpeechContent.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24044B940()
{
  sub_2404FA028(&qword_257000BE8, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
  return sub_2408E5828();
}

uint64_t sub_24044B990@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9098, (uint64_t)qword_256FFD1B8, a1);
}

uint64_t sub_24044B9AC()
{
  sub_2404FA028(&qword_256FFF128, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
  return sub_2408E599C();
}

uint64_t sub_24044B9EC()
{
  sub_2404FA028(&qword_256FFF128, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
  return sub_2408E59A8();
}

uint64_t sub_24044BA3C(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BB6B4, type metadata accessor for TranscriptProtoRequestContentSpeechContent) & 1;
}

unint64_t static TranscriptProtoSpeechRequestCandidate.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_24044BA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD1D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD1D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "recognition";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSpeechRequestCandidate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90A0, (uint64_t)qword_256FFD1D0, a1);
}

uint64_t TranscriptProtoSpeechRequestCandidate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BF2D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSpeechRequestCandidate, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoSpeechRequestCandidate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24044BC48(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_24044BD18, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSpeechRequestCandidate);
}

uint64_t sub_24044BC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t, uint64_t), void (*a5)(_QWORD))
{
  _QWORD *v5;
  uint64_t v6;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;

  v12 = v5[1];
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = *v5 & 0xFFFFFFFFFFFFLL;
  if (!v13 || (result = sub_2408E5A38(), !v6))
  {
    result = a4(v5, a1, a2, a3);
    if (!v6)
    {
      a5(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_24044BD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t static TranscriptProtoSpeechRequestCandidate.== infix(_:_:)(uint64_t *a1, char *a2)
{
  return sub_2404EC218(a1, a2, type metadata accessor for TranscriptProtoSpeechRequestCandidate) & 1;
}

uint64_t TranscriptProtoSpeechRequestCandidate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSpeechRequestCandidate, &qword_256FFE6E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
}

unint64_t sub_24044BEC8()
{
  return 0xD000000000000021;
}

uint64_t sub_24044BEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSpeechRequestCandidate.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24044BEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSpeechRequestCandidate.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24044BF0C()
{
  sub_2404FA028(&qword_257000BE0, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
  return sub_2408E5828();
}

uint64_t sub_24044BF5C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90A0, (uint64_t)qword_256FFD1D0, a1);
}

uint64_t sub_24044BF78()
{
  sub_2404FA028(&qword_256FFE6D8, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
  return sub_2408E599C();
}

uint64_t sub_24044BFB8()
{
  sub_2404FA028(&qword_256FFE6D8, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
  return sub_2408E59A8();
}

uint64_t sub_24044C008(uint64_t *a1, char *a2)
{
  return sub_2404EC218(a1, a2, type metadata accessor for TranscriptProtoSpeechRequestCandidate) & 1;
}

unint64_t static TranscriptProtoExternalAgentRequest.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_24044C044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD1E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD1E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "content";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "rawRewriteMetadataEventId";
  *((_QWORD *)v11 + 1) = 25;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "rewriteMetadataInlined";
  *(_QWORD *)(v12 + 8) = 22;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoExternalAgentRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90A8, (uint64_t)qword_256FFD1E8, a1);
}

uint64_t TranscriptProtoExternalAgentRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        type metadata accessor for TranscriptProtoExternalAgentRequest(0);
        v12 = v11;
        sub_2408E5930();
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for TranscriptProtoRequestContent(0);
        sub_2404FA028(&qword_256FFF0E0, type metadata accessor for TranscriptProtoRequestContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
        v12 = v11;
        sub_2408E596C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    v12 = v11;
    sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoExternalAgentRequest, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, &qword_256FFF168, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoExternalAgentRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA350, type metadata accessor for TranscriptProtoRequestContent, &qword_256FFF0E0, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContent);
  if (!v4)
  {
    sub_24044C424(v3);
    sub_24044C498(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoExternalAgentRequest(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24044C424(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 20) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t sub_24044C498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA368);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA368);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_2404FA028(&qword_256FFF168, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t TranscriptProtoExternalAgentRequest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoExternalAgentRequest, &qword_256FFE6F0, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
}

uint64_t sub_24044C62C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for TranscriptProtoRequestContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  v5 = *(int *)(a1 + 24);
  v6 = (_QWORD *)(a2 + *(int *)(a1 + 20));
  *v6 = 0;
  v6[1] = 0;
  v7 = a2 + v5;
  v8 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_24044C6B8()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_24044C6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExternalAgentRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24044C6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExternalAgentRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24044C6FC()
{
  sub_2404FA028(&qword_257000BD8, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
  return sub_2408E5828();
}

uint64_t sub_24044C74C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90A8, (uint64_t)qword_256FFD1E8, a1);
}

uint64_t sub_24044C768()
{
  sub_2404FA028(&qword_256FFF150, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
  return sub_2408E599C();
}

uint64_t sub_24044C7A8()
{
  sub_2404FA028(&qword_256FFF150, type metadata accessor for TranscriptProtoExternalAgentRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequest);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoExternalAgentRequestRewriteMetadata.protoMessageName.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_24044C818()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD200);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD200);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "originalRequest";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "rewrites";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoExternalAgentRequestRewriteMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90B0, (uint64_t)qword_256FFD200, a1);
}

uint64_t TranscriptProtoExternalAgentRequestRewriteMetadata.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24045AAD0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0E8]);
}

uint64_t TranscriptProtoExternalAgentRequestRewriteMetadata.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    if (!*(_QWORD *)(v0[2] + 16) || (result = sub_2408E5A20(), !v1))
    {
      type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t static TranscriptProtoExternalAgentRequestRewriteMetadata.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404D07D8(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata) & 1;
}

uint64_t TranscriptProtoExternalAgentRequestRewriteMetadata.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, &qword_256FFE6F8, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t sub_24044CAB0@<X0>(_QWORD *a1@<X8>)
{
  return sub_24045AC64(MEMORY[0x24BEE4AF8], a1);
}

unint64_t sub_24044CABC()
{
  return 0xD00000000000002ELL;
}

uint64_t sub_24044CAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExternalAgentRequestRewriteMetadata.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24044CAEC()
{
  return TranscriptProtoExternalAgentRequestRewriteMetadata.traverse<A>(visitor:)();
}

uint64_t sub_24044CB00()
{
  sub_2404FA028(&qword_257000BD0, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  return sub_2408E5828();
}

uint64_t sub_24044CB50@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90B0, (uint64_t)qword_256FFD200, a1);
}

uint64_t sub_24044CB6C()
{
  sub_2404FA028(&qword_256FFF168, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  return sub_2408E599C();
}

uint64_t sub_24044CBAC()
{
  sub_2404FA028(&qword_256FFF168, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoRequestPrescribedPlan.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_24044CC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD218);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD218);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "searchTool";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "lowConfidenceKnowledgeTool";
  *(_QWORD *)(v11 + 8) = 26;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 6;
  *(_QWORD *)v13 = "textTool";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 7;
  *(_QWORD *)v15 = "convertTool";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 8;
  *(_QWORD *)v17 = "displayTool";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 9;
  *(_QWORD *)v19 = "knowledgeTool";
  *((_QWORD *)v19 + 1) = 13;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoRequestPrescribedPlan._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90B8, (uint64_t)qword_256FFD218, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlan.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_24044CF94(v5, a1, a2, a3);
          break;
        case 2:
          sub_24044D3D4(v5, a1, a2, a3);
          break;
        case 6:
          sub_24044D818(v5, a1, a2, a3);
          break;
        case 7:
          sub_24044DC5C(v5, a1, a2, a3);
          break;
        case 8:
          sub_24044E0A0(v5, a1, a2, a3);
          break;
        case 9:
          sub_24044E4E4(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24044CF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001230);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA358);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA358);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001230);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF198, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001230);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001230);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001230);
    return sub_2403A97FC((uint64_t)v33, &qword_257001230);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001230);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA358);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24044D3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001238);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA358);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA358);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001238);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF1B0, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001238);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001238);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001238);
    return sub_2403A97FC((uint64_t)v33, &qword_257001238);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001238);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA358);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24044D818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001240);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA358);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA358);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001240);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF1C8, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001240);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001240);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001240);
    return sub_2403A97FC((uint64_t)v33, &qword_257001240);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001240);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA358);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24044DC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001248);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA358);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA358);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001248);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF1E0, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001248);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001248);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001248);
    return sub_2403A97FC((uint64_t)v33, &qword_257001248);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001248);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA358);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24044E0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001250);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA358);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA358);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001250);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF1F8, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001250);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001250);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001250);
    return sub_2403A97FC((uint64_t)v33, &qword_257001250);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001250);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA358);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24044E4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001258);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA358);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA358);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001258);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF210, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001258);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001258);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001258);
    return sub_2403A97FC((uint64_t)v33, &qword_257001258);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001258);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA358);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoRequestPrescribedPlan.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFA358);
  v4 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_24044E9F4 + 4 * byte_2408EB8B2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  return sub_2408E578C();
}

uint64_t sub_24044EAF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA358);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA358);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
    sub_2404FA028(&qword_256FFF198, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  __break(1u);
  return result;
}

uint64_t sub_24044EC94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA358);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA358);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
    sub_2404FA028(&qword_256FFF1B0, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  __break(1u);
  return result;
}

uint64_t sub_24044EE34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA358);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA358);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
    sub_2404FA028(&qword_256FFF1C8, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  __break(1u);
  return result;
}

uint64_t sub_24044EFD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA358);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA358);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
    sub_2404FA028(&qword_256FFF1E0, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  __break(1u);
  return result;
}

uint64_t sub_24044F174(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA358);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA358);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
    sub_2404FA028(&qword_256FFF1F8, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  __break(1u);
  return result;
}

uint64_t sub_24044F314(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA358);
  v8 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA358);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
    sub_2404FA028(&qword_256FFF210, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoRequestPrescribedPlan.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequestPrescribedPlan, &qword_256FFE700, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
}

uint64_t sub_24044F4D4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum, a1);
}

unint64_t sub_24044F4E0()
{
  return 0xD000000000000020;
}

uint64_t sub_24044F4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestPrescribedPlan.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24044F510()
{
  return TranscriptProtoRequestPrescribedPlan.traverse<A>(visitor:)();
}

uint64_t sub_24044F524()
{
  sub_2404FA028(&qword_257000BC8, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
  return sub_2408E5828();
}

uint64_t sub_24044F574@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90B8, (uint64_t)qword_256FFD218, a1);
}

uint64_t sub_24044F590()
{
  sub_2404FA028(&qword_256FFF180, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
  return sub_2408E599C();
}

uint64_t sub_24044F5D0()
{
  sub_2404FA028(&qword_256FFF180, type metadata accessor for TranscriptProtoRequestPrescribedPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlan);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoRequestPrescribedPlanSearchTool.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_24044F640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD230);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD230);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isLowConfidenceKnowledge";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoRequestPrescribedPlanSearchTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90C0, (uint64_t)qword_256FFD230, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanSearchTool.decodeMessage<A>(decoder:)()
{
  return sub_240450700();
}

uint64_t TranscriptProtoRequestPrescribedPlanSearchTool.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404507BC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool);
}

uint64_t static TranscriptProtoRequestPrescribedPlanSearchTool.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2404CA5BC(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool) & 1;
}

uint64_t TranscriptProtoRequestPrescribedPlanSearchTool.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, &qword_256FFE708, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
}

unint64_t sub_24044F81C()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_24044F838()
{
  return TranscriptProtoRequestPrescribedPlanTextTool.decodeMessage<A>(decoder:)();
}

uint64_t sub_24044F84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestPrescribedPlanSearchTool.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24044F860()
{
  sub_2404FA028(&qword_257000BC0, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
  return sub_2408E5828();
}

uint64_t sub_24044F8B0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90C0, (uint64_t)qword_256FFD230, a1);
}

uint64_t sub_24044F8CC()
{
  sub_2404FA028(&qword_256FFF198, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
  return sub_2408E599C();
}

uint64_t sub_24044F90C()
{
  sub_2404FA028(&qword_256FFF198, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanSearchTool);
  return sub_2408E59A8();
}

uint64_t sub_24044F95C(uint64_t a1, uint64_t a2)
{
  return sub_2404CA5BC(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanSearchTool) & 1;
}

unint64_t static TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.protoMessageName.getter()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_24044F998(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD248, 1, (uint64_t)"query", 5);
}

uint64_t static TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90C8, (uint64_t)qword_256FFD248, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
}

uint64_t static TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool) & 1;
}

uint64_t TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, &qword_256FFE710, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
}

unint64_t sub_24044FA44()
{
  return 0xD00000000000003ALL;
}

uint64_t sub_24044FA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSonicText.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24044FA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24044FA88()
{
  sub_2404FA028(&qword_257000BB8, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  return sub_2408E5828();
}

uint64_t sub_24044FAD8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90C8, (uint64_t)qword_256FFD248, a1);
}

uint64_t sub_24044FAF4()
{
  sub_2404FA028(&qword_256FFF1B0, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  return sub_2408E599C();
}

uint64_t sub_24044FB34()
{
  sub_2404FA028(&qword_256FFF1B0, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool);
  return sub_2408E59A8();
}

uint64_t sub_24044FB84(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanLowConfidenceKnowledgeTool) & 1;
}

unint64_t static TranscriptProtoRequestPrescribedPlanTextTool.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_24044FBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD260);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD260);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isExplicit";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoRequestPrescribedPlanTextTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90D0, (uint64_t)qword_256FFD260, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanTextTool.decodeMessage<A>(decoder:)()
{
  return sub_240450700();
}

uint64_t TranscriptProtoRequestPrescribedPlanTextTool.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404507BC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool);
}

uint64_t static TranscriptProtoRequestPrescribedPlanTextTool.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2404CA5BC(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool) & 1;
}

uint64_t TranscriptProtoRequestPrescribedPlanTextTool.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, &qword_256FFE718, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
}

unint64_t sub_24044FD98()
{
  return 0xD000000000000028;
}

uint64_t sub_24044FDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestPrescribedPlanTextTool.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24044FDC8()
{
  sub_2404FA028(&qword_257000BB0, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
  return sub_2408E5828();
}

uint64_t sub_24044FE18@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90D0, (uint64_t)qword_256FFD260, a1);
}

uint64_t sub_24044FE34()
{
  sub_2404FA028(&qword_256FFF1C8, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
  return sub_2408E599C();
}

uint64_t sub_24044FE74()
{
  sub_2404FA028(&qword_256FFF1C8, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanTextTool);
  return sub_2408E59A8();
}

uint64_t sub_24044FEC4(uint64_t a1, uint64_t a2)
{
  return sub_2404CA5BC(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanTextTool) & 1;
}

unint64_t static TranscriptProtoRequestPrescribedPlanConvertTool.protoMessageName.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_24044FF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD278);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD278);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isExplicit";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoRequestPrescribedPlanConvertTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90D8, (uint64_t)qword_256FFD278, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanConvertTool.decodeMessage<A>(decoder:)()
{
  return sub_240450700();
}

uint64_t TranscriptProtoRequestPrescribedPlanConvertTool.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404507BC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool);
}

uint64_t static TranscriptProtoRequestPrescribedPlanConvertTool.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2404CA5BC(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool) & 1;
}

uint64_t TranscriptProtoRequestPrescribedPlanConvertTool.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, &qword_256FFE720, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
}

unint64_t sub_2404500D8()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_2404500F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestPrescribedPlanConvertTool.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240450108()
{
  sub_2404FA028(&qword_257000BA8, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
  return sub_2408E5828();
}

uint64_t sub_240450158@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90D8, (uint64_t)qword_256FFD278, a1);
}

uint64_t sub_240450174()
{
  sub_2404FA028(&qword_256FFF1E0, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
  return sub_2408E599C();
}

uint64_t sub_2404501B4()
{
  sub_2404FA028(&qword_256FFF1E0, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanConvertTool);
  return sub_2408E59A8();
}

uint64_t sub_240450204(uint64_t a1, uint64_t a2)
{
  return sub_2404CA5BC(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanConvertTool) & 1;
}

unint64_t static TranscriptProtoRequestPrescribedPlanDisplayTool.protoMessageName.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_240450240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD290);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD290);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isExplicit";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoRequestPrescribedPlanDisplayTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90E0, (uint64_t)qword_256FFD290, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanDisplayTool.decodeMessage<A>(decoder:)()
{
  return sub_240450700();
}

uint64_t TranscriptProtoRequestPrescribedPlanDisplayTool.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404507BC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool);
}

uint64_t static TranscriptProtoRequestPrescribedPlanDisplayTool.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2404CA5BC(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool) & 1;
}

uint64_t TranscriptProtoRequestPrescribedPlanDisplayTool.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, &qword_256FFE728, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
}

unint64_t sub_240450418()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_240450434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestPrescribedPlanDisplayTool.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240450448()
{
  sub_2404FA028(&qword_257000BA0, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  return sub_2408E5828();
}

uint64_t sub_240450498@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90E0, (uint64_t)qword_256FFD290, a1);
}

uint64_t sub_2404504B4()
{
  sub_2404FA028(&qword_256FFF1F8, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  return sub_2408E599C();
}

uint64_t sub_2404504F4()
{
  sub_2404FA028(&qword_256FFF1F8, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanDisplayTool);
  return sub_2408E59A8();
}

uint64_t sub_240450544(uint64_t a1, uint64_t a2)
{
  return sub_2404CA5BC(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanDisplayTool) & 1;
}

unint64_t static TranscriptProtoRequestPrescribedPlanKnowledgeTool.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_240450580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD2A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD2A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isExplicit";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoRequestPrescribedPlanKnowledgeTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90E8, (uint64_t)qword_256FFD2A8, a1);
}

uint64_t TranscriptProtoRequestPrescribedPlanKnowledgeTool.decodeMessage<A>(decoder:)()
{
  return sub_240450700();
}

uint64_t sub_240450700()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2408E5888();
      }
      else if (result == 1)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoRequestPrescribedPlanKnowledgeTool.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404507BC(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
}

uint64_t sub_2404507BC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v7 = *(_QWORD *)(v4 + 8);
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = *(_QWORD *)v4 & 0xFFFFFFFFFFFFLL;
  if (!v8 || (result = sub_2408E5A38(), !v5))
  {
    if (*(_BYTE *)(v4 + 16) != 1 || (result = sub_2408E59D8(), !v5))
    {
      a4(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t static TranscriptProtoRequestPrescribedPlanKnowledgeTool.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2404CA5BC(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool) & 1;
}

uint64_t TranscriptProtoRequestPrescribedPlanKnowledgeTool.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, &qword_256FFE730, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
}

uint64_t sub_2404508D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

unint64_t sub_240450908()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_240450924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRequestPrescribedPlanKnowledgeTool.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240450938()
{
  sub_2404FA028(&qword_257000B98, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  return sub_2408E5828();
}

uint64_t sub_240450988@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90E8, (uint64_t)qword_256FFD2A8, a1);
}

uint64_t sub_2404509A4()
{
  sub_2404FA028(&qword_256FFF210, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  return sub_2408E599C();
}

uint64_t sub_2404509E4()
{
  sub_2404FA028(&qword_256FFF210, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestPrescribedPlanKnowledgeTool);
  return sub_2408E59A8();
}

uint64_t sub_240450A34(uint64_t a1, uint64_t a2)
{
  return sub_2404CA5BC(a1, a2, type metadata accessor for TranscriptProtoRequestPrescribedPlanKnowledgeTool) & 1;
}

unint64_t static TranscriptProtoAction.protoMessageName.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_240450A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD2C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD2C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EAD90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 10;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "toolId";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "bundleId";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "deviceId";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "isConfirmed";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "parameterValues";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "planEventId";
  *((_QWORD *)v21 + 1) = 11;
  v21[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoAction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90F0, (uint64_t)qword_256FFD2C0, a1);
}

uint64_t TranscriptProtoAction.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          sub_2408E593C();
          break;
        case 3:
        case 4:
        case 8:
          type metadata accessor for TranscriptProtoAction(0);
          sub_2408E5930();
          break;
        case 6:
          sub_2408E5888();
          break;
        case 7:
          sub_240450E9C();
          break;
        case 10:
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoAction, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240450E9C()
{
  sub_2408E5768();
  type metadata accessor for TranscriptProtoActionParameterValue(0);
  sub_2404FA028(&qword_256FFE738, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
  sub_2404FA028(&qword_256FFE740, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
  return sub_2408E5840();
}

uint64_t sub_240450F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_2404FA028(a7, a6, a8);
  return sub_2408E596C();
}

uint64_t TranscriptProtoAction.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = *(_QWORD *)(v3 + 8);
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    result = sub_2404BDCD0(v3, a1, a2, a3, type metadata accessor for TranscriptProtoAction);
    if (!v4)
    {
      sub_24045122C(v3);
      if (*(_BYTE *)(v3 + 16) == 1)
        sub_2408E59D8();
      if (*(_QWORD *)(*(_QWORD *)(v3 + 24) + 16))
      {
        sub_2408E5768();
        type metadata accessor for TranscriptProtoActionParameterValue(0);
        sub_2404FA028(&qword_256FFE738, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
        sub_2404FA028(&qword_256FFE740, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
        sub_2408E59B4();
      }
      sub_2404BD104(v3, a1, a2, a3, type metadata accessor for TranscriptProtoAction);
      sub_2404512A0(v3, a1, a2, a3);
      type metadata accessor for TranscriptProtoAction(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_24045122C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for TranscriptProtoAction(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 36) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t sub_2404512A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoAction(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoAction.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoAction, &qword_256FFE748, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
}

unint64_t sub_240451434@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t result;

  v4 = a2 + a1[7];
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a1[9];
  v7 = (_QWORD *)(a2 + a1[8]);
  *v7 = 0;
  v7[1] = 0;
  v8 = (_QWORD *)(a2 + v6);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(a2 + a1[10]);
  *v9 = 0;
  v9[1] = 0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  result = sub_2403A8A4C(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(a2 + 24) = result;
  return result;
}

unint64_t sub_2404514CC()
{
  return 0xD000000000000011;
}

uint64_t (*sub_2404514F0())()
{
  return nullsub_1;
}

uint64_t sub_240451504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoAction.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240451518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoAction.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24045152C()
{
  sub_2404FA028(&qword_257000B90, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
  return sub_2408E5828();
}

uint64_t sub_24045157C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90F0, (uint64_t)qword_256FFD2C0, a1);
}

uint64_t sub_240451598()
{
  sub_2404FA028(&qword_256FFF228, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
  return sub_2408E599C();
}

uint64_t sub_2404515D8()
{
  sub_2404FA028(&qword_256FFF228, type metadata accessor for TranscriptProtoAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoAction);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionParameterValue.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_240451648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD2D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD2D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "promptSelection";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoActionParameterValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF90F8, (uint64_t)qword_256FFD2D8, a1);
}

uint64_t TranscriptProtoActionParameterValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionParameterValue, type metadata accessor for TranscriptProtoPromptSelection, &qword_256FFF268, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
      }
      else if (result == 1)
      {
        type metadata accessor for TranscriptProtoToolParameterValue(0);
        sub_2404FA028(&qword_257000270, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoActionParameterValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240452040(a1, a2, a3, sub_240451910, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240451A78, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionParameterValue);
}

uint64_t sub_240451910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001220);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v7, &qword_257001220);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257001220);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoToolParameterValue);
  sub_2404FA028(&qword_257000270, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoToolParameterValue);
}

uint64_t sub_240451A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001210);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoPromptSelection(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257001210);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257001210);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoPromptSelection);
  sub_2404FA028(&qword_256FFF268, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoPromptSelection);
}

uint64_t TranscriptProtoActionParameterValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionParameterValue, &qword_256FFE740, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
}

uint64_t sub_240451C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404892F4(a1, type metadata accessor for TranscriptProtoToolParameterValue, type metadata accessor for TranscriptProtoPromptSelection, a2);
}

unint64_t sub_240451C20()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_240451C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionParameterValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240451C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionParameterValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240451C64()
{
  sub_2404FA028(&qword_257000B88, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
  return sub_2408E5828();
}

uint64_t sub_240451CB4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF90F8, (uint64_t)qword_256FFD2D8, a1);
}

uint64_t sub_240451CD0()
{
  sub_2404FA028(&qword_256FFE738, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
  return sub_2408E599C();
}

uint64_t sub_240451D10()
{
  sub_2404FA028(&qword_256FFE738, type metadata accessor for TranscriptProtoActionParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterValue);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionCancellation.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240451D80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD2F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD2F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 4;
  *(_QWORD *)v7 = "cancelledActionStatementId";
  *(_QWORD *)(v7 + 8) = 26;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 5;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoActionCancellation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9100, (uint64_t)qword_256FFD2F0, a1);
}

uint64_t TranscriptProtoActionCancellation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 5)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionCancellation, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
      }
      else if (result == 4)
      {
        type metadata accessor for TranscriptProtoStatementID(0);
        sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoActionCancellation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240452040(a1, a2, a3, sub_2404520F4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24045225C, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionCancellation);
}

uint64_t sub_240452040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a6)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  result = a4(v6, a1, a2, a3);
  if (!v7)
  {
    a5(v6, a1, a2, a3);
    a6(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404520F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];

  v13[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_24045225C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoActionCancellation(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoActionCancellation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionCancellation, &qword_256FFE750, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
}

uint64_t sub_2404523F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404B7BA4(a1, type metadata accessor for TranscriptProtoStatementID, a2);
}

unint64_t sub_2404523FC()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240452418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionCancellation.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24045242C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionCancellation.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240452440()
{
  sub_2404FA028(&qword_257000B80, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
  return sub_2408E5828();
}

uint64_t sub_240452490@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9100, (uint64_t)qword_256FFD2F0, a1);
}

uint64_t sub_2404524AC()
{
  sub_2404FA028(&qword_256FFF250, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
  return sub_2408E599C();
}

uint64_t sub_2404524EC()
{
  sub_2404FA028(&qword_256FFF250, type metadata accessor for TranscriptProtoActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionCancellation);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoPromptSelection.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_24045255C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD308);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD308);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "confirmed";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "selectedInDisambiguation";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "denied";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPromptSelection._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9108, (uint64_t)qword_256FFD308, a1);
}

uint64_t TranscriptProtoPromptSelection.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  while (1)
  {
    result = sub_2408E5858();
    if (v4 || (v10 & 1) != 0)
      break;
    switch(result)
    {
      case 3:
        sub_2404527D0(a1, v5, a2, a3, 1);
        break;
      case 2:
        sub_24045710C();
        break;
      case 1:
        sub_2404527D0(a1, v5, a2, a3, 0);
        break;
    }
  }
  return result;
}

uint64_t sub_2404527D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  int v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a5;
  v20 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v18 - v10;
  v12 = sub_2408E5714();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v14 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, 1, 1, v12);
  sub_2404FA028(&qword_257000D10, v13, MEMORY[0x24BE5B938]);
  sub_2408E5894();
  if (v5)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  sub_2403A9210((uint64_t)v11, (uint64_t)v9, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v12);
  sub_2403A97FC((uint64_t)v9, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  if ((*(_BYTE *)(v20 + 9) & 1) == 0)
    sub_2408E5864();
  result = sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  v17 = v20;
  *(_QWORD *)v20 = v19;
  *(_WORD *)(v17 + 8) = 1;
  return result;
}

uint64_t TranscriptProtoPromptSelection.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 9) & 1) != 0)
    goto LABEL_7;
  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
  {
    result = sub_240457484(v0);
    if (v1)
      return result;
    goto LABEL_7;
  }
  if (*(_QWORD *)v0)
  {
    result = sub_24045737C(v0);
    if (v1)
      return result;
    goto LABEL_7;
  }
  result = sub_240457284(v0);
  if (!v1)
  {
LABEL_7:
    type metadata accessor for TranscriptProtoPromptSelection(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoPromptSelection.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPromptSelection, &qword_256FFE758, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
}

unint64_t sub_240452A9C()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_240452AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPromptSelection.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240452ACC()
{
  return TranscriptProtoPromptSelection.traverse<A>(visitor:)();
}

uint64_t sub_240452AE0()
{
  sub_2404FA028(&qword_257000B78, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
  return sub_2408E5828();
}

uint64_t sub_240452B30@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9108, (uint64_t)qword_256FFD308, a1);
}

uint64_t sub_240452B4C()
{
  sub_2404FA028(&qword_256FFF268, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
  return sub_2408E599C();
}

uint64_t sub_240452B8C()
{
  sub_2404FA028(&qword_256FFF268, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionConfirmation.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240452BFC(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD320, 3, (uint64_t)"parameterValues", 15);
}

uint64_t static TranscriptProtoActionConfirmation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9110, (uint64_t)qword_256FFD320, a1);
}

uint64_t TranscriptProtoActionConfirmation.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2408E5858();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 3)
      sub_240452CA4();
  }
  return result;
}

uint64_t sub_240452CA4()
{
  sub_2408E5768();
  type metadata accessor for TranscriptProtoParameterValue(0);
  sub_2404FA028(&qword_256FFE760, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
  sub_2404FA028(&qword_256FFE768, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
  return sub_2408E5840();
}

uint64_t TranscriptProtoActionConfirmation.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (sub_2408E5768(),
        type metadata accessor for TranscriptProtoParameterValue(0),
        sub_2404FA028(&qword_256FFE760, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue), sub_2404FA028(&qword_256FFE768, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue), result = sub_2408E59B4(), !v1))
  {
    type metadata accessor for TranscriptProtoActionConfirmation(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoActionConfirmation.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_240890190, type metadata accessor for TranscriptProtoActionConfirmation) & 1;
}

uint64_t TranscriptProtoActionConfirmation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionConfirmation, &qword_256FFE770, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
}

uint64_t sub_240452EDC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2404AFDC8((uint64_t (*)(_QWORD))sub_2403A8A68, a1);
}

unint64_t sub_240452EE8()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240452F04()
{
  return TranscriptProtoActionConfirmation.decodeMessage<A>(decoder:)();
}

uint64_t sub_240452F18()
{
  return TranscriptProtoActionConfirmation.traverse<A>(visitor:)();
}

uint64_t sub_240452F2C()
{
  sub_2404FA028(&qword_257000B70, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
  return sub_2408E5828();
}

uint64_t sub_240452F7C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9110, (uint64_t)qword_256FFD320, a1);
}

uint64_t sub_240452F98()
{
  sub_2404FA028(&qword_256FFF280, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
  return sub_2408E599C();
}

uint64_t sub_240452FD8()
{
  sub_2404FA028(&qword_256FFF280, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
  return sub_2408E59A8();
}

uint64_t sub_240453028(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_240890190, type metadata accessor for TranscriptProtoActionConfirmation) & 1;
}

unint64_t static TranscriptProtoParameterValue.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_24045306C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD338);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD338);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "promptSelection";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoParameterValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9118, (uint64_t)qword_256FFD338, a1);
}

uint64_t TranscriptProtoParameterValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterValue, type metadata accessor for TranscriptProtoPromptSelection, &qword_256FFF268, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
      }
      else if (result == 1)
      {
        type metadata accessor for ToolKitProtoTypedValue(0);
        sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoParameterValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA3A8, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  if (!v4)
  {
    sub_240453520(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoParameterValue(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404533C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v21 = a8;
  v22 = a2;
  v24 = a4;
  v23 = a3;
  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a6(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v20 - v17;
  sub_2403A9210(a1, (uint64_t)v14, a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    return sub_2403A97FC((uint64_t)v14, a5);
  sub_2403A91CC((uint64_t)v14, (uint64_t)v18, a6);
  sub_2404FA028(a7, a6, v21);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v18, a6);
}

uint64_t sub_240453520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001210);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoPromptSelection(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoParameterValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257001210);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257001210);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoPromptSelection);
  sub_2404FA028(&qword_256FFF268, type metadata accessor for TranscriptProtoPromptSelection, (uint64_t)&protocol conformance descriptor for TranscriptProtoPromptSelection);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoPromptSelection);
}

uint64_t TranscriptProtoParameterValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoParameterValue, &qword_256FFE768, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
}

uint64_t sub_2404536B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404892F4(a1, type metadata accessor for ToolKitProtoTypedValue, type metadata accessor for TranscriptProtoPromptSelection, a2);
}

unint64_t sub_2404536C8()
{
  return 0xD000000000000019;
}

uint64_t sub_2404536E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404536F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24045370C()
{
  sub_2404FA028(&qword_257000B68, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
  return sub_2408E5828();
}

uint64_t sub_24045375C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9118, (uint64_t)qword_256FFD338, a1);
}

uint64_t sub_240453778()
{
  sub_2404FA028(&qword_256FFE760, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
  return sub_2408E599C();
}

uint64_t sub_2404537B8()
{
  sub_2404FA028(&qword_256FFE760, type metadata accessor for TranscriptProtoParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterValue);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoToolDisambiguation.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240453828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD350);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD350);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "assistantSchemaKind";
  *(_QWORD *)(v7 + 8) = 19;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "tools";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoToolDisambiguation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9120, (uint64_t)qword_256FFD350, a1);
}

uint64_t TranscriptProtoToolDisambiguation.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
        sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
        sub_2408E5960();
      }
      else if (result == 1)
      {
        sub_2408E5930();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoToolDisambiguation.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (v0[2])
    result = sub_2408E5A38();
  if (!v1)
  {
    if (*(_QWORD *)(*v0 + 16))
    {
      type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
      sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
      sub_2408E5A5C();
    }
    type metadata accessor for TranscriptProtoToolDisambiguation(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoToolDisambiguation.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404D64E8(a1, a2, sub_2408BC91C, type metadata accessor for TranscriptProtoToolDisambiguation) & 1;
}

uint64_t TranscriptProtoToolDisambiguation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoToolDisambiguation, &qword_256FFE780, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
}

uint64_t sub_240453BE0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  a1[1] = 0;
  a1[2] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_240453C18()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240453C34()
{
  return TranscriptProtoToolDisambiguation.decodeMessage<A>(decoder:)();
}

uint64_t sub_240453C48()
{
  return TranscriptProtoToolDisambiguation.traverse<A>(visitor:)();
}

uint64_t sub_240453C5C()
{
  sub_2404FA028(&qword_257000B60, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
  return sub_2408E5828();
}

uint64_t sub_240453CAC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9120, (uint64_t)qword_256FFD350, a1);
}

uint64_t sub_240453CC8()
{
  sub_2404FA028(&qword_256FFF2A8, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
  return sub_2408E599C();
}

uint64_t sub_240453D08()
{
  sub_2404FA028(&qword_256FFF2A8, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
  return sub_2408E59A8();
}

uint64_t sub_240453D58(_QWORD *a1, char *a2)
{
  return sub_2404D64E8(a1, a2, sub_2408BC91C, type metadata accessor for TranscriptProtoToolDisambiguation) & 1;
}

unint64_t static TranscriptProtoContextPrewarmRequest.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_240453D9C(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFD368);
}

uint64_t static TranscriptProtoContextPrewarmRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9128, (uint64_t)qword_256FFD368, a1);
}

uint64_t TranscriptProtoContextPrewarmRequest.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v4 = sub_2408E57A4();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)&v15 - v10, a1, v4);
  v12(v9, a2, v4);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, v5, MEMORY[0x24BE5BF20]);
  LOBYTE(a2) = sub_2408E5CD8();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v4);
  v13(v11, v4);
  return a2 & 1;
}

uint64_t TranscriptProtoContextPrewarmRequest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoContextPrewarmRequest, &qword_256FFE788, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
}

unint64_t sub_240453F04()
{
  return 0xD000000000000020;
}

uint64_t sub_240453F20()
{
  sub_2404FA028(&qword_257000B58, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
  return sub_2408E5828();
}

uint64_t sub_240453F70@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9128, (uint64_t)qword_256FFD368, a1);
}

uint64_t sub_240453F8C()
{
  sub_2404FA028(&qword_256FFF2C0, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
  return sub_2408E599C();
}

uint64_t sub_240453FCC()
{
  sub_2404FA028(&qword_256FFF2C0, type metadata accessor for TranscriptProtoContextPrewarmRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmRequest);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoContextPrewarmCompleted.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_240454038(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFD380);
}

uint64_t static TranscriptProtoContextPrewarmCompleted._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9130, (uint64_t)qword_256FFD380, a1);
}

uint64_t TranscriptProtoContextPrewarmCompleted.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoContextPrewarmCompleted.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoContextPrewarmCompleted, &qword_256FFE790, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
}

unint64_t sub_240454094()
{
  return 0xD000000000000022;
}

uint64_t sub_2404540B0()
{
  sub_2404FA028(&qword_257000B50, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
  return sub_2408E5828();
}

uint64_t sub_240454100@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9130, (uint64_t)qword_256FFD380, a1);
}

uint64_t sub_24045411C()
{
  sub_2404FA028(&qword_256FFF2D8, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
  return sub_2408E599C();
}

uint64_t sub_24045415C()
{
  sub_2404FA028(&qword_256FFF2D8, type metadata accessor for TranscriptProtoContextPrewarmCompleted, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextPrewarmCompleted);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionResult.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_2404541C8(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFD398);
}

uint64_t static TranscriptProtoActionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9138, (uint64_t)qword_256FFD398, a1);
}

uint64_t TranscriptProtoActionResult.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoActionResult.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionResult, &qword_256FFE798, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
}

unint64_t sub_240454224()
{
  return 0xD000000000000017;
}

uint64_t sub_240454240()
{
  sub_2404FA028(&qword_257000B48, type metadata accessor for TranscriptProtoActionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
  return sub_2408E5828();
}

uint64_t sub_240454290@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9138, (uint64_t)qword_256FFD398, a1);
}

uint64_t sub_2404542AC()
{
  sub_2404FA028(&qword_256FFF2F0, type metadata accessor for TranscriptProtoActionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
  return sub_2408E599C();
}

uint64_t sub_2404542EC()
{
  sub_2404FA028(&qword_256FFF2F0, type metadata accessor for TranscriptProtoActionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResult);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoExternalAgentOutcome.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_240454358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD3B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD3B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "responseText";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 4;
  *(_QWORD *)v12 = "statementOutcome";
  *(_QWORD *)(v12 + 8) = 16;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoExternalAgentOutcome._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9140, (uint64_t)qword_256FFD3B0, a1);
}

uint64_t TranscriptProtoExternalAgentOutcome.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 4:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoExternalAgentOutcome, type metadata accessor for TranscriptProtoStatementOutcome, &qword_256FFF618, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
          break;
        case 3:
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoExternalAgentOutcome, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        case 2:
          sub_2408E590C();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoExternalAgentOutcome.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v3 + 16) || (result = sub_2408E5A20(), !v4))
  {
    result = sub_240454700(v3, a1, a2, a3);
    if (!v4)
    {
      sub_240454874(v3, a1, a2, a3);
      type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_240454700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_240454874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA3E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3E8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2404FA028(&qword_256FFF618, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementOutcome);
}

uint64_t TranscriptProtoExternalAgentOutcome.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoExternalAgentOutcome, &qword_256FFE7A0, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
}

uint64_t sub_240454A08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;

  v4 = (char *)a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + *(int *)(a1 + 24);
  v7 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_240454AA0()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_240454ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExternalAgentOutcome.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240454AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExternalAgentOutcome.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240454AE4()
{
  sub_2404FA028(&qword_257000B40, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
  return sub_2408E5828();
}

uint64_t sub_240454B34@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9140, (uint64_t)qword_256FFD3B0, a1);
}

uint64_t sub_240454B50()
{
  sub_2404FA028(&qword_256FFF308, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
  return sub_2408E599C();
}

uint64_t sub_240454B90()
{
  sub_2404FA028(&qword_256FFF308, type metadata accessor for TranscriptProtoExternalAgentOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentOutcome);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionStepResult.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240454C00(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFD3C8);
}

uint64_t static TranscriptProtoActionStepResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9148, (uint64_t)qword_256FFD3C8, a1);
}

uint64_t TranscriptProtoActionStepResult.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoActionStepResult.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionStepResult, &qword_256FFE7A8, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
}

unint64_t sub_240454C5C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240454C78()
{
  sub_2404FA028(&qword_257000B38, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
  return sub_2408E5828();
}

uint64_t sub_240454CC8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9148, (uint64_t)qword_256FFD3C8, a1);
}

uint64_t sub_240454CE4()
{
  sub_2404FA028(&qword_256FFF320, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
  return sub_2408E599C();
}

uint64_t sub_240454D24()
{
  sub_2404FA028(&qword_256FFF320, type metadata accessor for TranscriptProtoActionStepResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionStepResult);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoStatementResultPayload.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_240454D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD3E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD3E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "outcome";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "response";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoStatementResultPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9150, (uint64_t)qword_256FFD3E0, a1);
}

uint64_t TranscriptProtoStatementResultPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoStatementResultPayload, type metadata accessor for TranscriptProtoResponseManifest, &qword_256FFF938, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
      }
      else if (result == 1)
      {
        type metadata accessor for TranscriptProtoStatementOutcome(0);
        sub_2404FA028(&qword_256FFF618, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoStatementResultPayload.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA3E8, type metadata accessor for TranscriptProtoStatementOutcome, &qword_256FFF618, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  if (!v4)
  {
    sub_2404550EC(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoStatementResultPayload(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404550EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoResponseManifest(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA418);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA418);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoResponseManifest);
  sub_2404FA028(&qword_256FFF938, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoResponseManifest);
}

uint64_t TranscriptProtoStatementResultPayload.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoStatementResultPayload, &qword_256FFE7B0, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
}

uint64_t sub_240455280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404892F4(a1, type metadata accessor for TranscriptProtoStatementOutcome, type metadata accessor for TranscriptProtoResponseManifest, a2);
}

unint64_t sub_240455294()
{
  return 0xD000000000000021;
}

uint64_t sub_2404552B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoStatementResultPayload.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404552C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoStatementResultPayload.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404552D8()
{
  sub_2404FA028(&qword_257000B30, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
  return sub_2408E5828();
}

uint64_t sub_240455328@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9150, (uint64_t)qword_256FFD3E0, a1);
}

uint64_t sub_240455344()
{
  sub_2404FA028(&qword_256FFF338, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
  return sub_2408E599C();
}

uint64_t sub_240455384()
{
  sub_2404FA028(&qword_256FFF338, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoStatementResult.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2404553F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD3F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD3F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "actionEventId";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "toolId";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "payload";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "resultStatementId";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "originProgramStatementId";
  *((_QWORD *)v17 + 1) = 24;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "originTaskStatementId";
  *((_QWORD *)v19 + 1) = 21;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoStatementResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9158, (uint64_t)qword_256FFD3F8, a1);
}

uint64_t TranscriptProtoStatementResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          sub_2408E5930();
          break;
        case 3:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoStatementResult, type metadata accessor for TranscriptProtoStatementResultPayload, &qword_256FFF338, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
          break;
        case 4:
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoStatementResult, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        case 5:
          sub_2404557D8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoStatementResult, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        case 6:
          sub_240457AD4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoStatementResult, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2404557D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_2404FA028(a7, a6, a8);
  return sub_2408E596C();
}

uint64_t TranscriptProtoStatementResult.traverse<A>(visitor:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  v7 = result;
  if (*(_QWORD *)(v3 + 8))
    result = sub_2408E5A38();
  if (!v4)
  {
    if (*(_QWORD *)(v3 + 24))
      sub_2408E5A38();
    sub_2404559CC(v3, v7, a2, a3);
    sub_240455B40(v3, v7, a2, a3);
    sub_240455CB4(v3, v7, a2, a3);
    sub_240457DE0(v3, v7, a2, a3, type metadata accessor for TranscriptProtoStatementResult, 6);
    type metadata accessor for TranscriptProtoStatementResult(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404559CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoStatementResult(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA420);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA420);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementResultPayload);
  sub_2404FA028(&qword_256FFF338, type metadata accessor for TranscriptProtoStatementResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResultPayload);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementResultPayload);
}

uint64_t sub_240455B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoStatementResult(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_240455CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoStatementResult(0);
  sub_2403A9210(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoStatementResult.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoStatementResult, &qword_256FFE7B8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
}

uint64_t sub_240455E48@<X0>(int *a1@<X0>, char *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a2 = 0u;
  *((_OWORD *)a2 + 1) = 0u;
  v4 = &a2[a1[6]];
  v5 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &a2[a1[7]];
  v7 = type metadata accessor for TranscriptProtoStatementID(0);
  v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v8(&a2[a1[8]], 1, 1, v7);
  v8(&a2[a1[9]], 1, 1, v7);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_240455F18()
{
  return 0xD00000000000001ALL;
}

uint64_t (*sub_240455F3C())()
{
  return nullsub_1;
}

uint64_t sub_240455F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoStatementResult.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240455F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoStatementResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240455F78()
{
  sub_2404FA028(&qword_257000B28, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
  return sub_2408E5828();
}

uint64_t sub_240455FC8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9158, (uint64_t)qword_256FFD3F8, a1);
}

uint64_t sub_240455FE4()
{
  sub_2404FA028(&qword_256FFE7C0, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
  return sub_2408E599C();
}

uint64_t sub_240456024()
{
  sub_2404FA028(&qword_256FFE7C0, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoResponseGenerationRequest.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_240456094(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD410, 2, (uint64_t)"statementResults", 16);
}

uint64_t static TranscriptProtoResponseGenerationRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9160, (uint64_t)qword_256FFD410, a1);
}

uint64_t TranscriptProtoResponseGenerationRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404898F8(a1, a2, a3, type metadata accessor for TranscriptProtoStatementResult, &qword_256FFE7C0, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult);
}

uint64_t TranscriptProtoResponseGenerationRequest.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (type metadata accessor for TranscriptProtoStatementResult(0),
        sub_2404FA028(&qword_256FFE7C0, type metadata accessor for TranscriptProtoStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementResult), result = sub_2408E5A5C(), !v1))
  {
    type metadata accessor for TranscriptProtoResponseGenerationRequest(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoResponseGenerationRequest.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BB6A0, type metadata accessor for TranscriptProtoResponseGenerationRequest) & 1;
}

uint64_t TranscriptProtoResponseGenerationRequest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoResponseGenerationRequest, &qword_256FFE7C8, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
}

unint64_t sub_24045620C()
{
  return 0xD000000000000024;
}

uint64_t sub_240456228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoResponseGenerationRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24045623C()
{
  return TranscriptProtoResponseGenerationRequest.traverse<A>(visitor:)();
}

uint64_t sub_240456250()
{
  sub_2404FA028(&qword_257000B20, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
  return sub_2408E5828();
}

uint64_t sub_2404562A0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9160, (uint64_t)qword_256FFD410, a1);
}

uint64_t sub_2404562BC()
{
  sub_2404FA028(&qword_256FFF360, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
  return sub_2408E599C();
}

uint64_t sub_2404562FC()
{
  sub_2404FA028(&qword_256FFF360, type metadata accessor for TranscriptProtoResponseGenerationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseGenerationRequest);
  return sub_2408E59A8();
}

uint64_t sub_24045634C(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BB6A0, type metadata accessor for TranscriptProtoResponseGenerationRequest) & 1;
}

unint64_t static TranscriptProtoCandidate.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_240456390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD428);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD428);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "source";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "promptStatus";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "statementId";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoCandidate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9168, (uint64_t)qword_256FFD428, a1);
}

uint64_t TranscriptProtoCandidate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoCandidate, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
          goto LABEL_5;
        case 2:
          sub_2404EF628();
          v12 = v11;
          sub_2408E58A0();
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoCandidate, type metadata accessor for TranscriptProtoCandidatePromptStatus, &qword_256FFF388, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoCandidate, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoCandidate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_240456800((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3)
    {
      sub_2404EF628();
      sub_2408E59E4();
    }
    sub_240456974((uint64_t)v3, a1, a2, a3);
    sub_240456AE8((uint64_t)v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoCandidate(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240456800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoCandidate(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t sub_240456974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoCandidate(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA7B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA7B0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoCandidatePromptStatus);
  sub_2404FA028(&qword_256FFF388, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoCandidatePromptStatus);
}

uint64_t sub_240456AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoCandidate(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoCandidate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoCandidate, &qword_256FFE7D8, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
}

uint64_t sub_240456C7C@<X0>(int *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t result;

  v4 = &a2[a1[5]];
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &a2[a1[6]];
  v7 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = &a2[a1[7]];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  return result;
}

unint64_t sub_240456D38()
{
  return 0xD000000000000014;
}

uint64_t sub_240456D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoCandidate.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240456D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoCandidate.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240456D7C()
{
  sub_2404FA028(&qword_257000B18, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
  return sub_2408E5828();
}

uint64_t sub_240456DCC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9168, (uint64_t)qword_256FFD428, a1);
}

uint64_t sub_240456DE8()
{
  sub_2404FA028(&qword_256FFE998, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
  return sub_2408E599C();
}

uint64_t sub_240456E28()
{
  sub_2404FA028(&qword_256FFE998, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoCandidatePromptStatus.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_240456E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD440);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD440);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "notPrompted";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "confirmed";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "picked";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoCandidatePromptStatus._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9170, (uint64_t)qword_256FFD440, a1);
}

uint64_t TranscriptProtoCandidatePromptStatus.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  while (1)
  {
    result = sub_2408E5858();
    if (v4 || (v10 & 1) != 0)
      break;
    switch(result)
    {
      case 3:
        sub_24045710C();
        break;
      case 2:
        sub_2404527D0(a1, v5, a2, a3, 1);
        break;
      case 1:
        sub_2404527D0(a1, v5, a2, a3, 0);
        break;
    }
  }
  return result;
}

uint64_t sub_24045710C()
{
  return sub_2408E58F4();
}

uint64_t TranscriptProtoCandidatePromptStatus.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 9) & 1) != 0)
    goto LABEL_7;
  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
  {
    result = sub_240457484(v0);
    if (v1)
      return result;
    goto LABEL_7;
  }
  if (*(_QWORD *)v0)
  {
    result = sub_24045737C(v0);
    if (v1)
      return result;
    goto LABEL_7;
  }
  result = sub_240457284(v0);
  if (!v1)
  {
LABEL_7:
    type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240457284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 9) & 1) != 0 || (*(_BYTE *)(a1 + 8) & 1) == 0 || *(_QWORD *)a1)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_24045737C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 9) & 1) == 0 && (*(_BYTE *)(a1 + 8) & 1) != 0 && *(_QWORD *)a1)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240457484(uint64_t result)
{
  if ((*(_BYTE *)(result + 9) & 1) == 0 && (*(_BYTE *)(result + 8) & 1) == 0)
    return sub_2408E5A14();
  __break(1u);
  return result;
}

uint64_t TranscriptProtoCandidatePromptStatus.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoCandidatePromptStatus, &qword_256FFE7E0, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
}

uint64_t sub_2404574E0@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_240457508()
{
  return 0xD000000000000020;
}

uint64_t sub_240457524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoCandidatePromptStatus.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240457538()
{
  return TranscriptProtoCandidatePromptStatus.traverse<A>(visitor:)();
}

uint64_t sub_24045754C()
{
  sub_2404FA028(&qword_257000B10, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
  return sub_2408E5828();
}

uint64_t sub_24045759C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9170, (uint64_t)qword_256FFD440, a1);
}

uint64_t sub_2404575B8()
{
  sub_2404FA028(&qword_256FFF388, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
  return sub_2408E599C();
}

uint64_t sub_2404575F8()
{
  sub_2404FA028(&qword_256FFF388, type metadata accessor for TranscriptProtoCandidatePromptStatus, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidatePromptStatus);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoClientAction.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_240457668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD458);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD458);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "toolId";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "parameters";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "clientQueryId";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "planEventId";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "shimParameterResolution";
  *((_QWORD *)v17 + 1) = 23;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "statementId";
  *((_QWORD *)v19 + 1) = 11;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoClientAction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9178, (uint64_t)qword_256FFD458, a1);
}

uint64_t TranscriptProtoClientAction.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          sub_2408E593C();
          break;
        case 3:
          sub_24048A564();
          break;
        case 4:
        case 5:
          sub_2408E5930();
          break;
        case 6:
          sub_240457A08();
          break;
        case 7:
          sub_240457AD4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoClientAction, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240457A08()
{
  sub_2408E5768();
  type metadata accessor for TranscriptProtoShimParameterResolution(0);
  sub_2404FA028(&qword_256FFE7F8, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
  sub_2404FA028(&qword_256FFE800, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
  return sub_2408E5840();
}

uint64_t sub_240457AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_2404FA028(a7, a6, a8);
  return sub_2408E596C();
}

uint64_t TranscriptProtoClientAction.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;

  v5 = v3;
  result = *v5;
  v10 = v5[1];
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = *v5 & 0xFFFFFFFFFFFFLL;
  if (!v11 || (result = sub_2408E5A38(), !v4))
  {
    if (!*(_QWORD *)(v5[2] + 16)
      || (sub_2408E5768(),
          type metadata accessor for ToolKitProtoTypedValue(0),
          sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue), sub_2404FA028(&qword_256FFE7F0, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue), result = sub_2408E59B4(), !v4))
    {
      if (v5[5])
        result = sub_2408E5A38();
      if (!v4)
      {
        if (v5[7])
          sub_2408E5A38();
        if (*(_QWORD *)(v5[3] + 16))
        {
          sub_2408E5768();
          type metadata accessor for TranscriptProtoShimParameterResolution(0);
          sub_2404FA028(&qword_256FFE7F8, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
          sub_2404FA028(&qword_256FFE800, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
          sub_2408E59B4();
        }
        sub_240457DE0((uint64_t)v5, a1, a2, a3, type metadata accessor for TranscriptProtoClientAction, 7);
        type metadata accessor for TranscriptProtoClientAction(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t sub_240457DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[4];

  v17[0] = a6;
  v17[1] = a3;
  v17[3] = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TranscriptProtoStatementID(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a5(0);
  sub_2403A9210(a1 + *(int *)(v15 + 36), (uint64_t)v10, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v10, (uint64_t)v14, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v14, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoClientAction.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoClientAction, &qword_256FFE808, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
}

unint64_t sub_240457F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;

  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  v3 = a2 + *(int *)(a1 + 36);
  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a2 + 16) = sub_2403A8C1C(MEMORY[0x24BEE4AF8]);
  result = sub_2403A8C38(v5);
  *(_QWORD *)(a2 + 24) = result;
  return result;
}

unint64_t sub_24045800C()
{
  return 0xD000000000000017;
}

uint64_t sub_240458028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoClientAction.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24045803C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoClientAction.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240458050()
{
  sub_2404FA028(&qword_257000B08, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
  return sub_2408E5828();
}

uint64_t sub_2404580A0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9178, (uint64_t)qword_256FFD458, a1);
}

uint64_t sub_2404580BC()
{
  sub_2404FA028(&qword_256FFF3A0, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
  return sub_2408E599C();
}

uint64_t sub_2404580FC()
{
  sub_2404FA028(&qword_256FFF3A0, type metadata accessor for TranscriptProtoClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientAction);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoShimParameterResolution.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_24045816C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD470);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD470);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "resolved";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "unresolved";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoShimParameterResolution._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9180, (uint64_t)qword_256FFD470, a1);
}

uint64_t TranscriptProtoShimParameterResolution.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  while (1)
  {
    result = sub_2408E5858();
    if (v4 || (v10 & 1) != 0)
      break;
    if (result == 2)
    {
      sub_2404587AC(v5, a1, a2, a3);
    }
    else if (result == 1)
    {
      sub_240458368(v5, a1, a2, a3);
    }
  }
  return result;
}

uint64_t sub_240458368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE810);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE810);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE810);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE810);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404587AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE810);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011E8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE810);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE810);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570011E8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF3C8, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570011E8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570011E8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570011E8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570011E8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570011E8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE810);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoShimParameterResolution.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE810);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v4, &qword_256FFE810);
  v5 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    goto LABEL_6;
  if (swift_getEnumCaseMultiPayload() == 1)
    sub_240458EDC(v0);
  else
    sub_240458D3C(v0);
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
  if (!v1)
  {
LABEL_6:
    type metadata accessor for TranscriptProtoShimParameterResolution(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240458D3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE810);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE810);
  v8 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE810);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
  __break(1u);
  return result;
}

uint64_t sub_240458EDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE810);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE810);
  v8 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE810);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
    sub_2404FA028(&qword_256FFF3C8, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoUnresolvedParameterValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoShimParameterResolution.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoShimParameterResolution, &qword_256FFE800, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
}

uint64_t sub_24045909C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoShimParameterResolutionEnum, a1);
}

unint64_t sub_2404590A8()
{
  return 0xD000000000000022;
}

uint64_t sub_2404590C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoShimParameterResolution.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404590D8()
{
  return TranscriptProtoShimParameterResolution.traverse<A>(visitor:)();
}

uint64_t sub_2404590EC()
{
  sub_2404FA028(&qword_257000B00, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
  return sub_2408E5828();
}

uint64_t sub_24045913C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9180, (uint64_t)qword_256FFD470, a1);
}

uint64_t sub_240459158()
{
  sub_2404FA028(&qword_256FFE7F8, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
  return sub_2408E599C();
}

uint64_t sub_240459198()
{
  sub_2404FA028(&qword_256FFE7F8, type metadata accessor for TranscriptProtoShimParameterResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoShimParameterResolution);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoUnresolvedParameterValue.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_240459208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD488);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD488);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "raw";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "candidates";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoUnresolvedParameterValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9188, (uint64_t)qword_256FFD488, a1);
}

uint64_t TranscriptProtoUnresolvedParameterValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for ToolKitProtoTypedValue(0);
        sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
        sub_2408E5960();
      }
      else if (result == 1)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUnresolvedParameterValue, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoUnresolvedParameterValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_240459580(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for ToolKitProtoTypedValue(0);
      sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      sub_2408E5A5C();
    }
    type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240459580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoUnresolvedParameterValue(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t static TranscriptProtoUnresolvedParameterValue.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404DD4D4(a1, a2, (char *)type metadata accessor for TranscriptProtoUnresolvedParameterValue, sub_2408BAAE8) & 1;
}

uint64_t TranscriptProtoUnresolvedParameterValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoUnresolvedParameterValue, &qword_256FFE818, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
}

uint64_t sub_240459738@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404AA538(a1, type metadata accessor for ToolKitProtoTypedValue, MEMORY[0x24BEE4AF8], a2);
}

unint64_t sub_24045974C()
{
  return 0xD000000000000023;
}

uint64_t sub_240459768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUnresolvedParameterValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24045977C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUnresolvedParameterValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240459790()
{
  sub_2404FA028(&qword_257000AF8, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
  return sub_2408E5828();
}

uint64_t sub_2404597E0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9188, (uint64_t)qword_256FFD488, a1);
}

uint64_t sub_2404597FC()
{
  sub_2404FA028(&qword_256FFF3C8, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
  return sub_2408E599C();
}

uint64_t sub_24045983C()
{
  sub_2404FA028(&qword_256FFF3C8, type metadata accessor for TranscriptProtoUnresolvedParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnresolvedParameterValue);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoClientCustom.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_2404598AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD4A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD4A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "tag";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "debugDescription";
  *(_QWORD *)(v12 + 8) = 16;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoClientCustom._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9190, (uint64_t)qword_256FFD4A0, a1);
}

uint64_t TranscriptProtoClientCustom.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BEA68(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A8], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A8], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

void TranscriptProtoClientCustom.traverse<A>(visitor:)()
{
  __asm { BR              X10 }
}

uint64_t sub_240459ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_2408E59F0(), !v2))
    __asm { BR              X10 }
  return result;
}

uint64_t TranscriptProtoClientCustom.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoClientCustom, &qword_256FFE820, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
}

double sub_240459C1C@<D0>(uint64_t a1@<X8>)
{
  double result;

  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = 0.0;
  *(_OWORD *)a1 = xmmword_2408EB790;
  *(_OWORD *)(a1 + 16) = xmmword_2408EB790;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0xE000000000000000;
  return result;
}

unint64_t sub_240459C58()
{
  return 0xD000000000000017;
}

uint64_t sub_240459C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoClientCustom.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_240459C88()
{
  TranscriptProtoClientCustom.traverse<A>(visitor:)();
}

uint64_t sub_240459C9C()
{
  sub_2404FA028(&qword_257000AF0, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
  return sub_2408E5828();
}

uint64_t sub_240459CEC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9190, (uint64_t)qword_256FFD4A0, a1);
}

uint64_t sub_240459D08()
{
  sub_2404FA028(&qword_256FFF3E0, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
  return sub_2408E599C();
}

uint64_t sub_240459D48()
{
  sub_2404FA028(&qword_256FFF3E0, type metadata accessor for TranscriptProtoClientCustom, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientCustom);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoDecompositionResult.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240459DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD4B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD4B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "prompt";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "queries";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoDecompositionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9198, (uint64_t)qword_256FFD4B8, a1);
}

uint64_t TranscriptProtoDecompositionResult.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2408E590C();
      }
      else if (result == 1)
      {
        sub_2408E5930();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoDecompositionResult.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (v0[2])
    result = sub_2408E5A38();
  if (!v1)
  {
    if (*(_QWORD *)(*v0 + 16))
      sub_2408E5A20();
    type metadata accessor for TranscriptProtoDecompositionResult(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoDecompositionResult.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404D64E8(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoDecompositionResult) & 1;
}

uint64_t TranscriptProtoDecompositionResult.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoDecompositionResult, &qword_256FFE828, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
}

unint64_t sub_24045A0C8()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_24045A0E4()
{
  return TranscriptProtoDecompositionResult.decodeMessage<A>(decoder:)();
}

uint64_t sub_24045A0F8()
{
  return TranscriptProtoDecompositionResult.traverse<A>(visitor:)();
}

uint64_t sub_24045A10C()
{
  sub_2404FA028(&qword_257000AE8, type metadata accessor for TranscriptProtoDecompositionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
  return sub_2408E5828();
}

uint64_t sub_24045A15C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9198, (uint64_t)qword_256FFD4B8, a1);
}

uint64_t sub_24045A178()
{
  sub_2404FA028(&qword_256FFF3F8, type metadata accessor for TranscriptProtoDecompositionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
  return sub_2408E599C();
}

uint64_t sub_24045A1B8()
{
  sub_2404FA028(&qword_256FFF3F8, type metadata accessor for TranscriptProtoDecompositionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoDecompositionResult);
  return sub_2408E59A8();
}

uint64_t sub_24045A208(_QWORD *a1, char *a2)
{
  return sub_2404D64E8(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoDecompositionResult) & 1;
}

unint64_t static TranscriptProtoActionParameterContext.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_24045A24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD4D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD4D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 4;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "toolId";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "parameterId";
  *(_QWORD *)(v12 + 8) = 11;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoActionParameterContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91A0, (uint64_t)qword_256FFD4D0, a1);
}

uint64_t TranscriptProtoActionParameterContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 4)
      {
        sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionParameterContext, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
      }
      else if (result == 3 || result == 2)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoActionParameterContext.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;

  v8 = v3[1];
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    v11 = v3[3];
    v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0)
      v12 = v3[2] & 0xFFFFFFFFFFFFLL;
    if (!v12 || (result = sub_2408E5A38(), !v4))
    {
      result = sub_24045A5E8((uint64_t)v3, a1, a2, a3);
      if (!v4)
      {
        type metadata accessor for TranscriptProtoActionParameterContext(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t sub_24045A5E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoActionParameterContext.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionParameterContext, &qword_256FFE830, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
}

uint64_t sub_24045A77C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v3;
  uint64_t v4;
  uint64_t result;

  v3 = (char *)a2 + *(int *)(a1 + 24);
  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  return result;
}

unint64_t sub_24045A7E8()
{
  return 0xD000000000000021;
}

uint64_t sub_24045A804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionParameterContext.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24045A818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionParameterContext.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24045A82C()
{
  sub_2404FA028(&qword_257000AE0, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
  return sub_2408E5828();
}

uint64_t sub_24045A87C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91A0, (uint64_t)qword_256FFD4D0, a1);
}

uint64_t sub_24045A898()
{
  sub_2404FA028(&qword_256FFF410, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
  return sub_2408E599C();
}

uint64_t sub_24045A8D8()
{
  sub_2404FA028(&qword_256FFF410, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoIntelligenceFlowError.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_24045A948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD4E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD4E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "domain";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "code";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoIntelligenceFlowError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91A8, (uint64_t)qword_256FFD4E8, a1);
}

uint64_t TranscriptProtoIntelligenceFlowError.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24045AAD0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0D8]);
}

uint64_t sub_24045AAD0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  result = sub_2408E5858();
  if (!v5)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        a4(v4 + 16, a2, a3);
      }
      else if (result == 1)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoIntelligenceFlowError.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    if (!v0[2] || (result = sub_2408E5A14(), !v1))
    {
      type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t TranscriptProtoIntelligenceFlowError.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoIntelligenceFlowError, &qword_256FFE838, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
}

uint64_t sub_24045AC5C@<X0>(_QWORD *a1@<X8>)
{
  return sub_24045AC64(0, a1);
}

uint64_t sub_24045AC64@<X0>(uint64_t a1@<X2>, _QWORD *a2@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = a1;
  return result;
}

unint64_t sub_24045AC9C()
{
  return 0xD000000000000020;
}

uint64_t sub_24045ACB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoIntelligenceFlowError.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24045ACCC()
{
  return TranscriptProtoIntelligenceFlowError.traverse<A>(visitor:)();
}

uint64_t sub_24045ACE0()
{
  sub_2404FA028(&qword_257000AD8, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  return sub_2408E5828();
}

uint64_t sub_24045AD30@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91A8, (uint64_t)qword_256FFD4E8, a1);
}

uint64_t sub_24045AD4C()
{
  sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  return sub_2408E599C();
}

uint64_t sub_24045AD8C()
{
  sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSessionError.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_24045ADFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD500);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD500);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "other";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "sessionCoordinatorError";
  *(_QWORD *)(v11 + 8) = 23;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "plannerError";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "executorError";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSessionError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91B0, (uint64_t)qword_256FFD500, a1);
}

uint64_t TranscriptProtoSessionError.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24045B00C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24045B11C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24045B55C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24045B9A0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24045BDE4);
}

uint64_t sub_24045B00C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t result;
  char v18;

  v13 = v7;
  result = sub_2408E5858();
  if (!v8)
  {
    while ((v18 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          a4(v13, a1, a2, a3);
          break;
        case 2:
          a5(v13, a1, a2, a3);
          break;
        case 3:
          a6(v13, a1, a2, a3);
          break;
        case 4:
          a7(v13, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24045B11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA388);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA388);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSessionErrorEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSessionErrorEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570011A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570011A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA388);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24045B55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011C8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA388);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA388);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSessionErrorEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570011C8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSessionCoordinatorError);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSessionCoordinatorError);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSessionErrorEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF450, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570011C8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570011C8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570011C8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570011C8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSessionCoordinatorError);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570011C8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA388);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSessionCoordinatorError);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24045B9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoPlannerError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011D0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA388);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA388);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSessionErrorEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570011D0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoPlannerError);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoPlannerError);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSessionErrorEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF480, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570011D0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570011D0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570011D0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570011D0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoPlannerError);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570011D0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA388);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoPlannerError);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24045BDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoExecutorError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011D8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA388);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA388);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSessionErrorEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSessionErrorEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570011D8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoExecutorError);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoExecutorError);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSessionErrorEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF468, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570011D8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570011D8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570011D8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570011D8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoExecutorError);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570011D8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA388);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoExecutorError);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoSessionError.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFA388);
  v4 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_24045C2F4 + 4 * byte_2408EB8DD[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoSessionError(0);
  return sub_2408E578C();
}

uint64_t sub_24045C3C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA388);
  v8 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA388);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSessionErrorEnum);
  __break(1u);
  return result;
}

uint64_t sub_24045C55C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA388);
  v8 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA388);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSessionCoordinatorError);
    sub_2404FA028(&qword_256FFF450, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSessionCoordinatorError);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSessionErrorEnum);
  __break(1u);
  return result;
}

uint64_t sub_24045C6FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPlannerError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA388);
  v8 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA388);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPlannerError);
    sub_2404FA028(&qword_256FFF480, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPlannerError);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSessionErrorEnum);
  __break(1u);
  return result;
}

uint64_t sub_24045C89C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA388);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoExecutorError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA388);
  v8 = type metadata accessor for TranscriptProtoSessionErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA388);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoExecutorError);
    sub_2404FA028(&qword_256FFF468, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoExecutorError);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSessionErrorEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoSessionError.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSessionError, &qword_256FFE840, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
}

uint64_t sub_24045CA5C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoSessionErrorEnum, a1);
}

unint64_t sub_24045CA68()
{
  return 0xD000000000000017;
}

uint64_t sub_24045CA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSessionError.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24045CA98()
{
  return TranscriptProtoSessionError.traverse<A>(visitor:)();
}

uint64_t sub_24045CAAC()
{
  sub_2404FA028(&qword_257000AD0, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
  return sub_2408E5828();
}

uint64_t sub_24045CAFC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91B0, (uint64_t)qword_256FFD500, a1);
}

uint64_t sub_24045CB18()
{
  sub_2404FA028((unint64_t *)&qword_256FFC350, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
  return sub_2408E599C();
}

uint64_t sub_24045CB58()
{
  sub_2404FA028((unint64_t *)&qword_256FFC350, type metadata accessor for TranscriptProtoSessionError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionError);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSessionCoordinatorError.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_24045CBC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD518);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD518);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "other";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "failedToWriteTranscript";
  *((_QWORD *)v11 + 1) = 23;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "failedToConvertClientEvent";
  *(_QWORD *)(v12 + 8) = 26;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSessionCoordinatorError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91B8, (uint64_t)qword_256FFD518, a1);
}

uint64_t TranscriptProtoSessionCoordinatorError.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404760FC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24045CDA4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24045D1E4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24045D628);
}

uint64_t sub_24045CDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA370);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA370);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA370);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570011A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570011A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA370);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24045D1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA370);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA370);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA370);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570011A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570011A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA370);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24045D628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA370);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA370);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA370);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570011A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570011A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570011A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA370);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoSessionCoordinatorError.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA370);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v4, &qword_256FFA370);
  v5 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    goto LABEL_8;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_24045DD74(v0);
    else
      sub_24045DF14(v0);
  }
  else
  {
    sub_24045DBD8(v0);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
  if (!v1)
  {
LABEL_8:
    type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24045DBD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA370);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA370);
  v8 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA370);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
  __break(1u);
  return result;
}

uint64_t sub_24045DD74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA370);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA370);
  v8 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA370);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
  __break(1u);
  return result;
}

uint64_t sub_24045DF14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA370);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA370);
  v8 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA370);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoSessionCoordinatorError.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSessionCoordinatorError, &qword_256FFE848, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
}

uint64_t sub_24045E0D4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum, a1);
}

unint64_t sub_24045E0E0()
{
  return 0xD000000000000022;
}

uint64_t sub_24045E0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSessionCoordinatorError.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24045E110()
{
  return TranscriptProtoSessionCoordinatorError.traverse<A>(visitor:)();
}

uint64_t sub_24045E124()
{
  sub_2404FA028(&qword_257000AC8, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
  return sub_2408E5828();
}

uint64_t sub_24045E174@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91B8, (uint64_t)qword_256FFD518, a1);
}

uint64_t sub_24045E190()
{
  sub_2404FA028(&qword_256FFF450, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
  return sub_2408E599C();
}

uint64_t sub_24045E1D0()
{
  sub_2404FA028(&qword_256FFF450, type metadata accessor for TranscriptProtoSessionCoordinatorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoSessionCoordinatorError);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoExecutorError.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_24045E240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD530);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD530);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "other";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "failedToExecute";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoExecutorError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91C0, (uint64_t)qword_256FFD530, a1);
}

uint64_t TranscriptProtoExecutorError.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24045E9AC(a1, a2, a3, &qword_256FFA380, type metadata accessor for TranscriptProtoExecutorErrorEnum, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24045E3D8);
}

uint64_t sub_24045E3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA380);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA380);
  v17 = type metadata accessor for TranscriptProtoExecutorErrorEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA380);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA380);
  v21 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t TranscriptProtoExecutorError.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24045F138(a1, a2, a3, &qword_256FFA380, type metadata accessor for TranscriptProtoExecutorErrorEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoExecutorError);
}

uint64_t TranscriptProtoExecutorError.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoExecutorError, &qword_256FFE850, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
}

uint64_t sub_24045E6A8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoExecutorErrorEnum, a1);
}

unint64_t sub_24045E6B4()
{
  return 0xD000000000000018;
}

uint64_t sub_24045E6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExecutorError.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24045E6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExecutorError.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24045E6F8()
{
  sub_2404FA028(&qword_257000AC0, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
  return sub_2408E5828();
}

uint64_t sub_24045E748@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91C0, (uint64_t)qword_256FFD530, a1);
}

uint64_t sub_24045E764()
{
  sub_2404FA028(&qword_256FFF468, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
  return sub_2408E599C();
}

uint64_t sub_24045E7A4()
{
  sub_2404FA028(&qword_256FFF468, type metadata accessor for TranscriptProtoExecutorError, (uint64_t)&protocol conformance descriptor for TranscriptProtoExecutorError);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoPlannerError.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_24045E814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD548);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD548);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "other";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "failedToPlan";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPlannerError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91C8, (uint64_t)qword_256FFD548, a1);
}

uint64_t TranscriptProtoPlannerError.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24045E9AC(a1, a2, a3, &qword_256FFA378, type metadata accessor for TranscriptProtoPlannerErrorEnum, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24045EE88);
}

uint64_t sub_24045E9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t result;
  char v16;

  v11 = v6;
  while (1)
  {
    result = sub_2408E5858();
    if (v7 || (v16 & 1) != 0)
      break;
    if (result == 2)
    {
      a6(a1, v11, a2, a3);
    }
    else if (result == 1)
    {
      sub_24045EA60(v11, a1, a2, a3, a4, a5);
    }
  }
  return result;
}

uint64_t sub_24045EA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v45)(_QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v47 = a2;
  v48 = a3;
  v49 = a4;
  v50 = a1;
  v8 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v41 = (uint64_t)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v42 = (uint64_t)&v38 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a6;
  v16 = a6(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v38 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011A8);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v43 = (uint64_t)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v38 - v26;
  v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v44((char *)&v38 - v26, 1, 1, v8);
  sub_2403A9210(v50, (uint64_t)v15, a5);
  v38 = v17;
  v39 = v16;
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (v40 == 1)
  {
    sub_2403A97FC((uint64_t)v15, a5);
    v28 = v8;
    v29 = v9;
  }
  else
  {
    v30 = v45;
    sub_2403A91CC((uint64_t)v15, (uint64_t)v22, v45);
    sub_2403A91CC((uint64_t)v22, (uint64_t)v20, v30);
    v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v20, 1, v8);
    v28 = v8;
    v29 = v9;
    if (v31 == 1)
    {
      sub_240388AE4((uint64_t)v20, v30);
    }
    else
    {
      sub_2403A97FC((uint64_t)v27, &qword_2570011A8);
      v32 = v42;
      sub_2403A91CC((uint64_t)v20, v42, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      sub_2403A91CC(v32, (uint64_t)v27, type metadata accessor for TranscriptProtoIntelligenceFlowError);
      v44(v27, 0, 1, v28);
    }
  }
  v33 = v46;
  sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
  sub_2408E596C();
  if (v33)
    return sub_2403A97FC((uint64_t)v27, &qword_2570011A8);
  v35 = v43;
  sub_2403A9210((uint64_t)v27, v43, &qword_2570011A8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v35, 1, v28) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_2570011A8);
    return sub_2403A97FC(v35, &qword_2570011A8);
  }
  else
  {
    v36 = v41;
    sub_2403A91CC(v35, v41, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    if (v40 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v27, &qword_2570011A8);
    v37 = v50;
    sub_2403A97FC(v50, a5);
    sub_2403A91CC(v36, v37, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    v44((char *)v37, 0, 1, v28);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v37, 0, 1, v39);
  }
}

uint64_t sub_24045EE88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA378);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA378);
  v17 = type metadata accessor for TranscriptProtoPlannerErrorEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA378);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA378);
  v21 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t TranscriptProtoPlannerError.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24045F138(a1, a2, a3, &qword_256FFA378, type metadata accessor for TranscriptProtoPlannerErrorEnum, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPlannerError);
}

uint64_t sub_24045F138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), void (*a6)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD);

  v20 = a6;
  v13 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v6, (uint64_t)v15, a4);
  v16 = a5(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
    goto LABEL_2;
  v18 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v15, 1, v18) == 1)
  {
    result = sub_24045F45C(v6, a1, a2, a3, a4, a5);
    if (!v7)
    {
LABEL_2:
      v20(0);
      return sub_2408E578C();
    }
  }
  else
  {
    sub_24045F2BC(v6, a1, a2, a3, a4, a5);
    result = sub_240388AE4((uint64_t)v15, a5);
    if (!v7)
      goto LABEL_2;
  }
  return result;
}

uint64_t sub_24045F2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[4];

  v18[3] = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v11, 1, v16) == 1)
  {
    sub_2403A97FC((uint64_t)v11, a5);
    __break(1u);
  }
  else if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    sub_2403A91CC((uint64_t)v11, (uint64_t)v15, type metadata accessor for TranscriptProtoIntelligenceFlowError);
    sub_2404FA028(&qword_256FFF428, type metadata accessor for TranscriptProtoIntelligenceFlowError, (uint64_t)&protocol conformance descriptor for TranscriptProtoIntelligenceFlowError);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v15, type metadata accessor for TranscriptProtoIntelligenceFlowError);
  }
  result = sub_240388AE4((uint64_t)v11, a6);
  __break(1u);
  return result;
}

uint64_t sub_24045F45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t result;
  _QWORD v20[4];

  v20[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    v17 = type metadata accessor for TranscriptProtoIntelligenceFlowError(0);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v15, 1, v17);
    result = sub_240388AE4((uint64_t)v15, a6);
    if (v18 == 1)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t TranscriptProtoPlannerError.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPlannerError, &qword_256FFE858, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
}

uint64_t sub_24045F620@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoPlannerErrorEnum, a1);
}

unint64_t sub_24045F62C()
{
  return 0xD000000000000017;
}

uint64_t sub_24045F648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPlannerError.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24045F65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPlannerError.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24045F670()
{
  sub_2404FA028(&qword_257000AB8, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
  return sub_2408E5828();
}

uint64_t sub_24045F6C0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91C8, (uint64_t)qword_256FFD548, a1);
}

uint64_t sub_24045F6DC()
{
  sub_2404FA028(&qword_256FFF480, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
  return sub_2408E599C();
}

uint64_t sub_24045F71C()
{
  sub_2404FA028(&qword_256FFF480, type metadata accessor for TranscriptProtoPlannerError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlannerError);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionOutcome.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_24045F78C(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFD560);
}

uint64_t static TranscriptProtoActionOutcome._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91D0, (uint64_t)qword_256FFD560, a1);
}

uint64_t TranscriptProtoActionOutcome.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoActionOutcome.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionOutcome, &qword_256FFE860, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
}

unint64_t sub_24045F7E8()
{
  return 0xD000000000000018;
}

uint64_t sub_24045F804()
{
  sub_2404FA028(&qword_257000AB0, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
  return sub_2408E5828();
}

uint64_t sub_24045F854@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91D0, (uint64_t)qword_256FFD560, a1);
}

uint64_t sub_24045F870()
{
  sub_2404FA028(&qword_256FFF498, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
  return sub_2408E599C();
}

uint64_t sub_24045F8B0()
{
  sub_2404FA028(&qword_256FFF498, type metadata accessor for TranscriptProtoActionOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionOutcome);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionRequirement.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_24045F91C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD578);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD578);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "unsupported";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "appRequirement";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "permissionRequirement";
  *((_QWORD *)v13 + 1) = 21;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "systemRequirement";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoActionRequirement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91D8, (uint64_t)qword_256FFD578, a1);
}

uint64_t TranscriptProtoActionRequirement.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240438FB0(a1, v5, a2, a3, &qword_256FFA3C8, type metadata accessor for TranscriptProtoActionRequirementEnum, 3);
          break;
        case 3:
          sub_24045FC10(v5, a1, a2, a3);
          break;
        case 4:
          sub_240460050(v5, a1, a2, a3);
          break;
        case 5:
          sub_240460494(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24045FC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoAppRequirement(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001188);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3C8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3C8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoActionRequirementEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoActionRequirementEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoActionRequirementEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001188);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoAppRequirement);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoAppRequirement);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF528, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001188);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001188);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001188);
    return sub_2403A97FC((uint64_t)v33, &qword_257001188);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoAppRequirement);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001188);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3C8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoAppRequirement);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240460050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001190);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3C8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3C8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoActionRequirementEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoActionRequirementEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001190);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoPermissionRequirement);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoPermissionRequirement);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoActionRequirementEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF540, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001190);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001190);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001190);
    return sub_2403A97FC((uint64_t)v33, &qword_257001190);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoPermissionRequirement);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001190);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3C8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoPermissionRequirement);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240460494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001198);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3C8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3C8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoActionRequirementEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoActionRequirementEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001198);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSystemRequirementMessage);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemRequirementMessage);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoActionRequirementEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF4C8, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001198);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001198);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001198);
    return sub_2403A97FC((uint64_t)v33, &qword_257001198);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSystemRequirementMessage);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001198);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3C8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSystemRequirementMessage);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoActionRequirement.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFA3C8);
  v4 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_2404609A4 + 4 * byte_2408EB8E6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoActionRequirement(0);
  return sub_2408E578C();
}

uint64_t sub_240460A8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoAppRequirement(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3C8);
  v8 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3C8);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoAppRequirement);
    sub_2404FA028(&qword_256FFF528, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAppRequirement);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoActionRequirementEnum);
  __break(1u);
  return result;
}

uint64_t sub_240460C28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3C8);
  v8 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3C8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPermissionRequirement);
    sub_2404FA028(&qword_256FFF540, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPermissionRequirement);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoActionRequirementEnum);
  __break(1u);
  return result;
}

uint64_t sub_240460DC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3C8);
  v8 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3C8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementMessage);
    sub_2404FA028(&qword_256FFF4C8, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementMessage);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoActionRequirementEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoActionRequirement.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionRequirement, &qword_256FFE868, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
}

uint64_t sub_240460F88@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoActionRequirementEnum, a1);
}

unint64_t sub_240460F94()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_240460FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionRequirement.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240460FC4()
{
  return TranscriptProtoActionRequirement.traverse<A>(visitor:)();
}

uint64_t sub_240460FD8()
{
  sub_2404FA028(&qword_257000AA8, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
  return sub_2408E5828();
}

uint64_t sub_240461028@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91D8, (uint64_t)qword_256FFD578, a1);
}

uint64_t sub_240461044()
{
  sub_2404FA028(&qword_256FFF4B0, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
  return sub_2408E599C();
}

uint64_t sub_240461084()
{
  sub_2404FA028(&qword_256FFF4B0, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSystemRequirementMessage.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_2404610F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD590);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD590);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EAD90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "deviceUnlockRequired";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "appLaunchRequired";
  *(_QWORD *)(v11 + 8) = 17;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "carPlayIncompatible";
  *((_QWORD *)v13 + 1) = 19;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "carBluetoothIncompatible";
  *((_QWORD *)v15 + 1) = 24;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "protectedAppApprovalRequired";
  *((_QWORD *)v17 + 1) = 28;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "authenticationRequired";
  *((_QWORD *)v19 + 1) = 22;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "userAuthenticationRequired";
  *((_QWORD *)v21 + 1) = 26;
  v21[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSystemRequirementMessage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91E0, (uint64_t)qword_256FFD590, a1);
}

uint64_t TranscriptProtoSystemRequirementMessage.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 2;
          goto LABEL_5;
        case 2:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 3;
          goto LABEL_5;
        case 3:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 4;
          goto LABEL_5;
        case 4:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 5;
          goto LABEL_5;
        case 5:
          sub_2404614F0(v5, a1, a2, a3);
          break;
        case 6:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 6;
LABEL_5:
          sub_240438FB0(v11, v12, v13, v14, &qword_256FFA3C0, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum, v15);
          break;
        case 7:
          sub_240461930(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2404614F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001170);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3C0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3C0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001170);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF4E0, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001170);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001170);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001170);
    return sub_2403A97FC((uint64_t)v33, &qword_257001170);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001170);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3C0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240461930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001178);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3C0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3C0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001178);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF4F8, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001178);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001178);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001178);
    return sub_2403A97FC((uint64_t)v33, &qword_257001178);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001178);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3C0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoSystemRequirementMessage.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFA3C0);
  v4 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_240461E40 + 4 * byte_2408EB8F1[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
  return sub_2408E578C();
}

uint64_t sub_240461FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[0] = a3;
  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 3)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240462134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3C0);
  v12 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3C0);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    if (EnumCaseMultiPayload == 4)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2404622CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3C0);
  v12 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3C0);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
    if (EnumCaseMultiPayload == 5)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240462464(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3C0);
  v8 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3C0);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
    sub_2404FA028(&qword_256FFF4E0, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
  __break(1u);
  return result;
}

uint64_t sub_240462600(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3C0);
  v8 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3C0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
    sub_2404FA028(&qword_256FFF4F8, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoSystemRequirementMessage.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemRequirementMessage, &qword_256FFE870, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
}

uint64_t sub_2404627C0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoSystemRequirementMessageEnum, a1);
}

unint64_t sub_2404627CC()
{
  return 0xD000000000000023;
}

uint64_t sub_2404627E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSystemRequirementMessage.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404627FC()
{
  return TranscriptProtoSystemRequirementMessage.traverse<A>(visitor:)();
}

uint64_t sub_240462810()
{
  sub_2404FA028(&qword_257000AA0, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
  return sub_2408E5828();
}

uint64_t sub_240462860@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91E0, (uint64_t)qword_256FFD590, a1);
}

uint64_t sub_24046287C()
{
  sub_2404FA028(&qword_256FFF4C8, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
  return sub_2408E599C();
}

uint64_t sub_2404628BC()
{
  sub_2404FA028(&qword_256FFF4C8, type metadata accessor for TranscriptProtoSystemRequirementMessage, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementMessage);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSystemRequirementProtectedAppRequest.protoMessageName.getter()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_24046292C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD5A8, 1, (uint64_t)"bundleIdentifier", 16);
}

uint64_t static TranscriptProtoSystemRequirementProtectedAppRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91E8, (uint64_t)qword_256FFD5A8, a1);
}

uint64_t TranscriptProtoSystemRequirementProtectedAppRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoSystemRequirementProtectedAppRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest);
}

uint64_t static TranscriptProtoSystemRequirementProtectedAppRequest.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest) & 1;
}

uint64_t TranscriptProtoSystemRequirementProtectedAppRequest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, &qword_256FFE878, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
}

unint64_t sub_2404629D8()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_2404629F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSystemRequirementProtectedAppRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240462A08()
{
  sub_2404FA028(&qword_257000A98, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
  return sub_2408E5828();
}

uint64_t sub_240462A58@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91E8, (uint64_t)qword_256FFD5A8, a1);
}

uint64_t sub_240462A74()
{
  sub_2404FA028(&qword_256FFF4E0, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
  return sub_2408E599C();
}

uint64_t sub_240462AB4()
{
  sub_2404FA028(&qword_256FFF4E0, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementProtectedAppRequest);
  return sub_2408E59A8();
}

uint64_t sub_240462B04(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest) & 1;
}

unint64_t static TranscriptProtoSystemRequirementAuthenticationRequest.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_240462B40(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD5C0, 1, (uint64_t)"authenticationLevel", 19);
}

uint64_t static TranscriptProtoSystemRequirementAuthenticationRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91F0, (uint64_t)qword_256FFD5C0, a1);
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240464D60(a1, a2, a3, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, &qword_256FFF510, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA3B8, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, &qword_256FFF510, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
  if (!v4)
  {
    type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, &qword_256FFE880, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
}

uint64_t sub_240462C64@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, a1);
}

unint64_t sub_240462C70()
{
  return 0xD000000000000031;
}

uint64_t sub_240462C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSystemRequirementAuthenticationRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240462CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSystemRequirementAuthenticationRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240462CB4()
{
  sub_2404FA028(&qword_257000A90, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
  return sub_2408E5828();
}

uint64_t sub_240462D04@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91F0, (uint64_t)qword_256FFD5C0, a1);
}

uint64_t sub_240462D20()
{
  sub_2404FA028(&qword_256FFF4F8, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
  return sub_2408E599C();
}

uint64_t sub_240462D60()
{
  sub_2404FA028(&qword_256FFF4F8, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequest);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.protoMessageName.getter()
{
  return 0xD000000000000044;
}

uint64_t sub_240462DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD5D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD5D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "alternativeAuthenticationPermitted";
  *(_QWORD *)(v7 + 8) = 34;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "originDeviceAuthenticationRequired";
  *((_QWORD *)v11 + 1) = 34;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF91F8, (uint64_t)qword_256FFD5D8, a1);
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  char v10;

  v5 = v3;
  while (1)
  {
    result = sub_2408E5858();
    if (v4 || (v10 & 1) != 0)
      break;
    if (result == 2)
    {
      sub_240462FE0(a1, v5, a2, a3, 1);
    }
    else if (result == 1)
    {
      sub_240462FE0(a1, v5, a2, a3, 0);
    }
  }
  return result;
}

uint64_t sub_240462FE0(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  int v15;
  uint64_t result;
  _BYTE v17[12];
  int v18;
  _BYTE *v19;

  v18 = a5;
  v19 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v17[-v10];
  v12 = sub_2408E5714();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v14 = *(_QWORD *)(v12 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, 1, 1, v12);
  sub_2404FA028(&qword_257000D10, v13, MEMORY[0x24BE5B938]);
  sub_2408E5894();
  if (v5)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  sub_2403A9210((uint64_t)v11, (uint64_t)v9, &qword_257000D48);
  v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v12);
  sub_2403A97FC((uint64_t)v9, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  if (*v19 != 2)
    sub_2408E5864();
  result = sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  *v19 = v18;
  return result;
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.traverse<A>(visitor:)()
{
  unsigned __int8 *v0;
  uint64_t v1;
  int v2;
  uint64_t result;

  v2 = *v0;
  if (v2 != 2)
  {
    if ((v2 & 1) != 0)
    {
      result = sub_240463330(v0);
      if (v1)
        return result;
    }
    else
    {
      result = sub_24046323C(v0);
      if (v1)
        return result;
    }
  }
  type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  return sub_2408E578C();
}

uint64_t sub_24046323C(unsigned __int8 *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v9;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  if (v7 != 2 && (v7 & 1) == 0)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240463330(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*a1 & 1) != 0)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, &qword_256FFE888, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
}

uint64_t sub_240463438@<X0>(_BYTE *a1@<X8>)
{
  *a1 = 2;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_24046345C()
{
  return 0xD000000000000044;
}

uint64_t sub_240463478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24046348C()
{
  return TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel.traverse<A>(visitor:)();
}

uint64_t sub_2404634A0()
{
  sub_2404FA028(&qword_257000A88, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
  return sub_2408E5828();
}

uint64_t sub_2404634F0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF91F8, (uint64_t)qword_256FFD5D8, a1);
}

uint64_t sub_24046350C()
{
  sub_2404FA028(&qword_256FFF510, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
  return sub_2408E599C();
}

uint64_t sub_24046354C()
{
  sub_2404FA028(&qword_256FFF510, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoAppRequirement.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2404635BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD5F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD5F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "signInRequired";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "accountSetupRequired";
  *((_QWORD *)v11 + 1) = 20;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "userConfirmationRequired";
  *(_QWORD *)(v12 + 8) = 24;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoAppRequirement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9200, (uint64_t)qword_256FFD5F0, a1);
}

uint64_t TranscriptProtoAppRequirement.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  char v15;

  v5 = v3;
  while (1)
  {
    result = sub_2408E5858();
    if (v4 || (v15 & 1) != 0)
      return result;
    switch(result)
    {
      case 3:
        v9 = a1;
        v10 = v5;
        v11 = a2;
        v12 = a3;
        v13 = 2;
        goto LABEL_3;
      case 2:
        v9 = a1;
        v10 = v5;
        v11 = a2;
        v12 = a3;
        v13 = 1;
LABEL_3:
        sub_240463820(v9, v10, v11, v12, v13);
        break;
      case 1:
        v9 = a1;
        v10 = v5;
        v11 = a2;
        v12 = a3;
        v13 = 0;
        goto LABEL_3;
    }
  }
}

uint64_t sub_240463820(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  int v15;
  uint64_t result;
  _BYTE v17[12];
  int v18;
  _BYTE *v19;

  v18 = a5;
  v19 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v17[-v10];
  v12 = sub_2408E5714();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v14 = *(_QWORD *)(v12 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, 1, 1, v12);
  sub_2404FA028(&qword_257000D10, v13, MEMORY[0x24BE5B938]);
  sub_2408E5894();
  if (v5)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  sub_2403A9210((uint64_t)v11, (uint64_t)v9, &qword_257000D48);
  v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v12);
  sub_2403A97FC((uint64_t)v9, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  if (*v19 != 3)
    sub_2408E5864();
  result = sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  *v19 = v18;
  return result;
}

void TranscriptProtoAppRequirement.traverse<A>(visitor:)()
{
  __asm { BR              X10 }
}

uint64_t sub_240463A18()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t result;

  result = sub_2404643FC(v1);
  if (!v0)
  {
    type metadata accessor for TranscriptProtoAppRequirement(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoAppRequirement.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoAppRequirement, &qword_256FFE890, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
}

uint64_t sub_240463AE0@<X0>(_BYTE *a1@<X8>)
{
  *a1 = 3;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_240463B04()
{
  return 0xD000000000000019;
}

uint64_t sub_240463B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoAppRequirement.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_240463B34()
{
  TranscriptProtoAppRequirement.traverse<A>(visitor:)();
}

uint64_t sub_240463B48()
{
  sub_2404FA028(&qword_257000A80, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
  return sub_2408E5828();
}

uint64_t sub_240463B98@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9200, (uint64_t)qword_256FFD5F0, a1);
}

uint64_t sub_240463BB4()
{
  sub_2404FA028(&qword_256FFF528, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
  return sub_2408E599C();
}

uint64_t sub_240463BF4()
{
  sub_2404FA028(&qword_256FFF528, type metadata accessor for TranscriptProtoAppRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoAppRequirement);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoPermissionRequirement.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_240463C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD608);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD608);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8A00;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "siriPermissionRequired";
  *(_QWORD *)(v7 + 8) = 22;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "shortcutsPermissionRequired";
  *(_QWORD *)(v11 + 8) = 27;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "preciseLocationPermissionRequired";
  *((_QWORD *)v13 + 1) = 33;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "locationPermissionRequired";
  *((_QWORD *)v15 + 1) = 26;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "wifiPermissionRequired";
  *((_QWORD *)v17 + 1) = 22;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "bluetoothPermissionRequired";
  *((_QWORD *)v19 + 1) = 27;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "photosPermissionRequired";
  *((_QWORD *)v21 + 1) = 24;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "contactsPermissionRequired";
  *((_QWORD *)v23 + 1) = 26;
  v23[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPermissionRequirement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9208, (uint64_t)qword_256FFD608, a1);
}

uint64_t TranscriptProtoPermissionRequirement.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2404640A8(a1, v5, a2, a3, 0);
          break;
        case 2:
          sub_2404640A8(a1, v5, a2, a3, 1);
          break;
        case 3:
          sub_2404640A8(a1, v5, a2, a3, 2);
          break;
        case 4:
          sub_2404640A8(a1, v5, a2, a3, 3);
          break;
        case 5:
          sub_2404640A8(a1, v5, a2, a3, 4);
          break;
        case 6:
          sub_2404640A8(a1, v5, a2, a3, 5);
          break;
        case 7:
          sub_2404640A8(a1, v5, a2, a3, 6);
          break;
        case 8:
          sub_2404640A8(a1, v5, a2, a3, 7);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2404640A8(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  int v15;
  uint64_t result;
  _BYTE v17[12];
  int v18;
  _BYTE *v19;

  v18 = a5;
  v19 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v11 = &v17[-v10];
  v12 = sub_2408E5714();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v14 = *(_QWORD *)(v12 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, 1, 1, v12);
  sub_2404FA028(&qword_257000D10, v13, MEMORY[0x24BE5B938]);
  sub_2408E5894();
  if (v5)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  sub_2403A9210((uint64_t)v11, (uint64_t)v9, &qword_257000D48);
  v15 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v12);
  sub_2403A97FC((uint64_t)v9, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  if (*v19 != 8)
    sub_2408E5864();
  result = sub_2403A97FC((uint64_t)v11, &qword_257000D48);
  *v19 = v18;
  return result;
}

void TranscriptProtoPermissionRequirement.traverse<A>(visitor:)()
{
  __asm { BR              X10 }
}

uint64_t sub_2404642A0()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  result = sub_2404643FC(v0);
  if (!v1)
  {
    type metadata accessor for TranscriptProtoPermissionRequirement(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404643FC(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    __break(1u);
  }
  else
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_2404644E4(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404645D0(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 2)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404646BC(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 3)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404647A8(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 4)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240464894(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 5)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240464980(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 6)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240464A6C(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 7)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t TranscriptProtoPermissionRequirement.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPermissionRequirement, &qword_256FFE898, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
}

uint64_t sub_240464B78@<X0>(_BYTE *a1@<X8>)
{
  *a1 = 8;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_240464B9C()
{
  return 0xD000000000000020;
}

uint64_t sub_240464BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPermissionRequirement.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_240464BCC()
{
  TranscriptProtoPermissionRequirement.traverse<A>(visitor:)();
}

uint64_t sub_240464BE0()
{
  sub_2404FA028(&qword_257000A78, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
  return sub_2408E5828();
}

uint64_t sub_240464C30@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9208, (uint64_t)qword_256FFD608, a1);
}

uint64_t sub_240464C4C()
{
  sub_2404FA028(&qword_256FFF540, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
  return sub_2408E599C();
}

uint64_t sub_240464C8C()
{
  sub_2404FA028(&qword_256FFF540, type metadata accessor for TranscriptProtoPermissionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoPermissionRequirement);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionFailure.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_240464CFC(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD620, 1, (uint64_t)"failure", 7);
}

uint64_t static TranscriptProtoActionFailure._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9210, (uint64_t)qword_256FFD620, a1);
}

uint64_t TranscriptProtoActionFailure.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240464D60(a1, a2, a3, type metadata accessor for TranscriptProtoActionFailureFailure, &qword_256FFF570, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
}

uint64_t sub_240464D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;
  char v11;

  while (1)
  {
    result = sub_2408E5858();
    if (v6 || (v11 & 1) != 0)
      break;
    if (result == 1)
    {
      a4(0);
      sub_2404FA028(a5, a4, a6);
      sub_2408E596C();
    }
    v6 = 0;
  }
  return result;
}

uint64_t TranscriptProtoActionFailure.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA3D8, type metadata accessor for TranscriptProtoActionFailureFailure, &qword_256FFF570, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
  if (!v4)
  {
    type metadata accessor for TranscriptProtoActionFailure(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoActionFailure.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionFailure, &qword_256FFE8A0, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
}

uint64_t sub_240464EE8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoActionFailureFailure, a1);
}

unint64_t sub_240464EF4()
{
  return 0xD000000000000018;
}

uint64_t sub_240464F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionFailure.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240464F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionFailure.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240464F38()
{
  sub_2404FA028(&qword_257000A70, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
  return sub_2408E5828();
}

uint64_t sub_240464F88@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9210, (uint64_t)qword_256FFD620, a1);
}

uint64_t sub_240464FA4()
{
  sub_2404FA028(&qword_256FFF558, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
  return sub_2408E599C();
}

uint64_t sub_240464FE4()
{
  sub_2404FA028(&qword_256FFF558, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionFailureFailure.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_240465054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD638);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD638);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_2408E8FC0;
  v5 = v40 + v4;
  v6 = v40 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v40 + v4) = 1;
  *(_QWORD *)v6 = "preflightCheckFailure";
  *(_QWORD *)(v6 + 8) = 21;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "preciseLocationDisabled";
  *(_QWORD *)(v10 + 8) = 23;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "locationDisabled";
  *((_QWORD *)v12 + 1) = 16;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "wifiDisabled";
  *((_QWORD *)v14 + 1) = 12;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "bluetoothDisabled";
  *((_QWORD *)v16 + 1) = 17;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "networkFailure";
  *((_QWORD *)v18 + 1) = 14;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "partialFailure";
  *((_QWORD *)v20 + 1) = 14;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "unsupportedOnDevice";
  *((_QWORD *)v22 + 1) = 19;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "featureCurrentlyRestricted";
  *(_QWORD *)(v23 + 8) = 26;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v5 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "entityNotFound";
  *((_QWORD *)v25 + 1) = 14;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v5 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "actionNotAllowed";
  *((_QWORD *)v27 + 1) = 16;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v5 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "unableToUndo";
  *((_QWORD *)v29 + 1) = 12;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v5 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "actionCanceled";
  *((_QWORD *)v31 + 1) = 14;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v5 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "valueDisambiguationRejected";
  *((_QWORD *)v33 + 1) = 27;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v5 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "noMatchingTool";
  *((_QWORD *)v35 + 1) = 14;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v5 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 16;
  *(_QWORD *)v37 = "developerDefinedError";
  *((_QWORD *)v37 + 1) = 21;
  v37[16] = 2;
  v9();
  v38 = v5 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 17;
  *(_QWORD *)v38 = "unableToCancel";
  *(_QWORD *)(v38 + 8) = 14;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoActionFailureFailure._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9218, (uint64_t)qword_256FFD638, a1);
}

uint64_t TranscriptProtoActionFailureFailure.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_24046573C(a1, v5);
          break;
        case 2:
          sub_2404659C0(a1, v5);
          break;
        case 3:
          sub_240465C44(a1, v5);
          break;
        case 4:
          sub_240465EC8(a1, v5);
          break;
        case 5:
          sub_24046614C(a1, v5);
          break;
        case 6:
          sub_2404663D0(a1, v5);
          break;
        case 7:
          sub_240466654(a1, v5);
          break;
        case 8:
          sub_2404668D8(a1, v5);
          break;
        case 9:
          sub_240466B5C(a1, v5);
          break;
        case 10:
          sub_240466DE0(a1, v5);
          break;
        case 11:
          sub_240467064(a1, v5);
          break;
        case 12:
          sub_2404672E8(a1, v5);
          break;
        case 13:
          sub_24046756C(a1, v5);
          break;
        case 14:
          sub_2404677F0(a1, v5);
          break;
        case 15:
          sub_240467A74(a1, v5);
          break;
        case 16:
          sub_240467CF8(v5, a1, a2, a3);
          break;
        case 17:
          sub_240468120(a1, v5);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24046573C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_2404659C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 2, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_240465C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 3, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_240465EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 4, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_24046614C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 5, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_2404663D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 6, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_240466654(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 7, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_2404668D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 8, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_240466B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 9, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_240466DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 10, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_240467064(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 11, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_2404672E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 12, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_24046756C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 13, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_2404677F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 14, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_240467A74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 15, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t sub_240467CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v42 = a2;
  v44 = a4;
  v43 = a3;
  v5 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v37 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (char *)&v34 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v34 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001150);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v39 = (uint64_t)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v34 - v23;
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v38((char *)&v34 - v23, 1, 1, v5);
  v36 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3D0);
  v34 = v14;
  v35 = v13;
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v25 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3D0);
    v26 = v41;
    v27 = v5;
  }
  else
  {
    v28 = (uint64_t)v40;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    v27 = v5;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 16, v5))
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001150);
      sub_2403A91CC((uint64_t)v17, v28, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
      sub_2403A91CC(v28, (uint64_t)v24, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
      v38(v24, 0, 1, v5);
    }
    v26 = v41;
  }
  sub_2404FA028(&qword_256FFF588, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
  sub_2408E596C();
  if (v26)
    return sub_2403A97FC((uint64_t)v24, &qword_257001150);
  v30 = v39;
  sub_2403A9210((uint64_t)v24, v39, &qword_257001150);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v30, 1, v27) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001150);
    return sub_2403A97FC(v30, &qword_257001150);
  }
  else
  {
    v31 = v30;
    v32 = v37;
    sub_2403A91CC(v31, v37, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
    if (v25 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001150);
    v33 = v36;
    sub_2403A97FC(v36, &qword_256FFA3D0);
    sub_2403A91CC(v32, v33, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
    v38((char *)v33, 0, 16, v27);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v33, 0, 1, v35);
  }
}

uint64_t sub_240468120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v23 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = sub_2408E5714();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v13 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v10, 1, 1, v11);
  sub_2404FA028(&qword_257000D10, v12, MEMORY[0x24BE5B938]);
  v14 = (uint64_t)v24;
  sub_2408E5894();
  if (v14)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v24 = v4;
  sub_2403A9210((uint64_t)v10, (uint64_t)v8, &qword_257000D48);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v11);
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if (v15 == 1)
    return sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v16 = (uint64_t)v24;
  sub_2403A9210(v23, (uint64_t)v24, &qword_256FFA3D0);
  v17 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  v22 = *(_QWORD *)(v17 - 8);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v16, 1, v17);
  sub_2403A97FC(v16, &qword_256FFA3D0);
  if (v18 != 1)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v10, &qword_257000D48);
  v20 = v23;
  sub_2403A97FC(v23, &qword_256FFA3D0);
  v21 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 16, 16, v21);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v17);
}

uint64_t TranscriptProtoActionFailureFailure.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFA3D0);
  v4 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v6 = (char *)&loc_240468480
       + 4
       * byte_2408EB91E[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 16, v5)];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoActionFailureFailure(0);
  return sub_2408E578C();
}

uint64_t sub_2404686C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 1)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240468868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 2)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240468A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 3)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240468BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 4)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240468D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 5)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240468F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 6)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2404690B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 7)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240469258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 8)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240469400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 9)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2404695A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 10)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240469750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 11)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2404698F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 12)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240469AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 13)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240469C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 14)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240469DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 15)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240469F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v7, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v7, 1, v12) == 1)
  {
    sub_2403A97FC((uint64_t)v7, &qword_256FFA3D0);
    __break(1u);
  }
  else if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 16, v8))
  {
    sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
    sub_2404FA028(&qword_256FFF588, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError);
  }
  result = sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
  __break(1u);
  return result;
}

uint64_t sub_24046A138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  _QWORD v16[2];

  v16[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA3D0);
  v12 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA3D0);
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
    v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 16, v13);
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionFailureFailureEnum);
    if (v14 == 16)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t TranscriptProtoActionFailureFailure.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionFailureFailure, &qword_256FFE8A8, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
}

uint64_t sub_24046A300@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoActionFailureFailureEnum, a1);
}

unint64_t sub_24046A30C()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_24046A328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionFailureFailure.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24046A33C()
{
  return TranscriptProtoActionFailureFailure.traverse<A>(visitor:)();
}

uint64_t sub_24046A350()
{
  sub_2404FA028(&qword_257000A68, type metadata accessor for TranscriptProtoActionFailureFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
  return sub_2408E5828();
}

uint64_t sub_24046A3A0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9218, (uint64_t)qword_256FFD638, a1);
}

uint64_t sub_24046A3BC()
{
  sub_2404FA028(&qword_256FFF570, type metadata accessor for TranscriptProtoActionFailureFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
  return sub_2408E599C();
}

uint64_t sub_24046A3FC()
{
  sub_2404FA028(&qword_256FFF570, type metadata accessor for TranscriptProtoActionFailureFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureFailure);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionFailureDeveloperDefinedError.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_24046A46C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD650);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD650);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "localizedString";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "domain";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "code";
  *(_QWORD *)(v12 + 8) = 4;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoActionFailureDeveloperDefinedError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9220, (uint64_t)qword_256FFD650, a1);
}

uint64_t TranscriptProtoActionFailureDeveloperDefinedError.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        sub_2408E5900();
      }
      else if (result == 2 || result == 1)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoActionFailureDeveloperDefinedError.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    v5 = v0[3];
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_2408E5A38(), !v1))
    {
      if (!v0[4] || (result = sub_2408E5A14(), !v1))
      {
        type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t TranscriptProtoActionFailureDeveloperDefinedError.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, &qword_256FFE8B0, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
}

uint64_t sub_24046A7F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  return result;
}

unint64_t sub_24046A828()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_24046A844()
{
  return TranscriptProtoActionFailureDeveloperDefinedError.decodeMessage<A>(decoder:)();
}

uint64_t sub_24046A858()
{
  return TranscriptProtoActionFailureDeveloperDefinedError.traverse<A>(visitor:)();
}

uint64_t sub_24046A86C()
{
  sub_2404FA028(&qword_257000A60, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
  return sub_2408E5828();
}

uint64_t sub_24046A8BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9220, (uint64_t)qword_256FFD650, a1);
}

uint64_t sub_24046A8D8()
{
  sub_2404FA028(&qword_256FFF588, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
  return sub_2408E599C();
}

uint64_t sub_24046A918()
{
  sub_2404FA028(&qword_256FFF588, type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailureDeveloperDefinedError);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionSuccess.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_24046A988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD668);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD668);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "returnValue";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "appLaunched";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "undoContext";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "didShowInAppResult";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoActionSuccess._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9228, (uint64_t)qword_256FFD668, a1);
}

uint64_t TranscriptProtoActionSuccess.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionSuccess, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
          break;
        case 2:
        case 4:
          sub_2408E5888();
          break;
        case 3:
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionSuccess, type metadata accessor for TranscriptProtoUndoContext, &qword_256FFF5B8, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoActionSuccess.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_24046AD98((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3 == 1)
      sub_2408E59D8();
    sub_24046AF0C((uint64_t)v3, a1, a2, a3);
    if (v3[1] == 1)
      sub_2408E59D8();
    type metadata accessor for TranscriptProtoActionSuccess(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24046AD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoActionSuccess(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t sub_24046AF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3B0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoUndoContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoActionSuccess(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFA3B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3B0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoUndoContext);
  sub_2404FA028(&qword_256FFF5B8, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoUndoContext);
}

uint64_t TranscriptProtoActionSuccess.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionSuccess, &qword_256FFE8B8, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
}

uint64_t sub_24046B0A0@<X0>(uint64_t a1@<X0>, _WORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;

  v4 = (char *)a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + *(int *)(a1 + 28);
  v7 = type metadata accessor for TranscriptProtoUndoContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  return result;
}

unint64_t sub_24046B130()
{
  return 0xD000000000000018;
}

uint64_t sub_24046B14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionSuccess.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24046B160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionSuccess.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24046B174()
{
  sub_2404FA028(&qword_257000A58, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
  return sub_2408E5828();
}

uint64_t sub_24046B1C4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9228, (uint64_t)qword_256FFD668, a1);
}

uint64_t sub_24046B1E0()
{
  sub_2404FA028(&qword_256FFF5A0, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
  return sub_2408E599C();
}

uint64_t sub_24046B220()
{
  sub_2404FA028(&qword_256FFF5A0, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoUndoContext.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_24046B290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD680);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD680);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "token";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "bundleIdentifier";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "actionDescription";
  *(_QWORD *)(v12 + 8) = 17;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoUndoContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9230, (uint64_t)qword_256FFD680, a1);
}

uint64_t TranscriptProtoUndoContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BEA68(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoUndoContext.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BEB64(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUndoContext);
}

uint64_t static TranscriptProtoUndoContext.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404E4C74(a1, a2, type metadata accessor for TranscriptProtoUndoContext) & 1;
}

uint64_t TranscriptProtoUndoContext.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoUndoContext, &qword_256FFE8C0, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
}

unint64_t sub_24046B4C0()
{
  return 0xD000000000000016;
}

uint64_t sub_24046B4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUndoContext.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24046B4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUndoContext.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24046B504()
{
  sub_2404FA028(&qword_257000A50, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
  return sub_2408E5828();
}

uint64_t sub_24046B554@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9230, (uint64_t)qword_256FFD680, a1);
}

uint64_t sub_24046B570()
{
  sub_2404FA028(&qword_256FFF5B8, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
  return sub_2408E599C();
}

uint64_t sub_24046B5B0()
{
  sub_2404FA028(&qword_256FFF5B8, type metadata accessor for TranscriptProtoUndoContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoContext);
  return sub_2408E59A8();
}

uint64_t sub_24046B600(_QWORD *a1, char *a2)
{
  return sub_2404E4C74(a1, a2, type metadata accessor for TranscriptProtoUndoContext) & 1;
}

unint64_t static TranscriptProtoParameterConfirmation.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_24046B63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD698);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD698);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 5;
  *(_QWORD *)v11 = "parameterIndex";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "item";
  *(_QWORD *)(v12 + 8) = 4;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoParameterConfirmation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9238, (uint64_t)qword_256FFD698, a1);
}

uint64_t TranscriptProtoParameterConfirmation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 5:
          sub_2408E58F4();
          break;
        case 2:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterConfirmation, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
          break;
        case 1:
          sub_2408E593C();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoParameterConfirmation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = *(_QWORD *)(v3 + 8);
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    result = sub_24046B9DC(v3, a1, a2, a3);
    if (!v4)
    {
      if ((*(_BYTE *)(v3 + 24) & 1) == 0)
        sub_2408E5A14();
      type metadata accessor for TranscriptProtoParameterConfirmation(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_24046B9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t TranscriptProtoParameterConfirmation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoParameterConfirmation, &qword_256FFE8C8, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
}

uint64_t sub_24046BB70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24048A198(a1, type metadata accessor for ToolKitProtoTypedValue, a2);
}

unint64_t sub_24046BB7C()
{
  return 0xD000000000000020;
}

uint64_t sub_24046BB98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterConfirmation.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24046BBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterConfirmation.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24046BBC0()
{
  sub_2404FA028(&qword_257000A48, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
  return sub_2408E5828();
}

uint64_t sub_24046BC10@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9238, (uint64_t)qword_256FFD698, a1);
}

uint64_t sub_24046BC2C()
{
  sub_2404FA028(&qword_256FFF5D0, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
  return sub_2408E599C();
}

uint64_t sub_24046BC6C()
{
  sub_2404FA028(&qword_256FFF5D0, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoParameterDisambiguation.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_24046BCDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD6B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD6B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 5;
  *(_QWORD *)v11 = "parameterIndex";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "items";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoParameterDisambiguation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9240, (uint64_t)qword_256FFD6B0, a1);
}

uint64_t TranscriptProtoParameterDisambiguation.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 5)
        break;
      if (result == 2)
      {
        type metadata accessor for ToolKitProtoTypedValue(0);
        sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
        v4 = v3;
        sub_2408E5960();
        goto LABEL_5;
      }
      if (result == 1)
      {
        v4 = v3;
        sub_2408E593C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    v4 = v3;
    sub_2408E58F4();
LABEL_5:
    v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoParameterDisambiguation.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = *(_QWORD *)v0;
  v3 = *(_QWORD *)(v0 + 8);
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v4 || (result = sub_2408E5A38(), !v1))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16)
      || (type metadata accessor for ToolKitProtoTypedValue(0),
          sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue), result = sub_2408E5A5C(), !v1))
    {
      if ((*(_BYTE *)(v0 + 32) & 1) == 0)
        result = sub_2408E5A14();
      if (!v1)
      {
        type metadata accessor for TranscriptProtoParameterDisambiguation(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t TranscriptProtoParameterDisambiguation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoParameterDisambiguation, &qword_256FFE8D0, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
}

uint64_t sub_24046C0F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 32) = 1;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_24046C13C()
{
  return 0xD000000000000022;
}

uint64_t sub_24046C158()
{
  return TranscriptProtoParameterDisambiguation.decodeMessage<A>(decoder:)();
}

uint64_t sub_24046C16C()
{
  return TranscriptProtoParameterDisambiguation.traverse<A>(visitor:)();
}

uint64_t sub_24046C180()
{
  sub_2404FA028(&qword_257000A40, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
  return sub_2408E5828();
}

uint64_t sub_24046C1D0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9240, (uint64_t)qword_256FFD6B0, a1);
}

uint64_t sub_24046C1EC()
{
  sub_2404FA028(&qword_256FFF5E8, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
  return sub_2408E599C();
}

uint64_t sub_24046C22C()
{
  sub_2404FA028(&qword_256FFF5E8, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoValueDisambiguation.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_24046C29C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD6C8, 1, (uint64_t)"items", 5);
}

uint64_t static TranscriptProtoValueDisambiguation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9248, (uint64_t)qword_256FFD6C8, a1);
}

uint64_t TranscriptProtoValueDisambiguation.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t sub_24046C300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;
  char v11;

  while (1)
  {
    result = sub_2408E5858();
    if (v6 || (v11 & 1) != 0)
      break;
    if (result == 1)
    {
      a4(0);
      sub_2404FA028(a5, a4, a6);
      sub_2408E5960();
    }
    v6 = 0;
  }
  return result;
}

uint64_t TranscriptProtoValueDisambiguation.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue, (void (*)(_QWORD))type metadata accessor for TranscriptProtoValueDisambiguation);
}

uint64_t sub_24046C3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6, void (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v13)(_QWORD);

  if (!*(_QWORD *)(*(_QWORD *)v7 + 16)
    || (v13 = a7, a4(0), sub_2404FA028(a5, a4, a6), result = sub_2408E5A5C(), a7 = v13, !v8))
  {
    a7(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoValueDisambiguation.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BAAE8, type metadata accessor for TranscriptProtoValueDisambiguation) & 1;
}

uint64_t TranscriptProtoValueDisambiguation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoValueDisambiguation, &qword_256FFE8D8, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
}

unint64_t sub_24046C538()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_24046C554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoValueDisambiguation.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24046C568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoValueDisambiguation.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24046C57C()
{
  sub_2404FA028(&qword_257000A38, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
  return sub_2408E5828();
}

uint64_t sub_24046C5CC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9248, (uint64_t)qword_256FFD6C8, a1);
}

uint64_t sub_24046C5E8()
{
  sub_2404FA028(&qword_256FFF600, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
  return sub_2408E599C();
}

uint64_t sub_24046C628()
{
  sub_2404FA028(&qword_256FFF600, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
  return sub_2408E59A8();
}

uint64_t sub_24046C678(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BAAE8, type metadata accessor for TranscriptProtoValueDisambiguation) & 1;
}

unint64_t static TranscriptProtoStatementOutcome.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_24046C6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;
  _QWORD *v27;
  char *v28;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD6E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD6E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB750;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "success";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "actionConfirmation";
  *(_QWORD *)(v11 + 8) = 18;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "parameterNeedsValue";
  *((_QWORD *)v13 + 1) = 19;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "parameterConfirmation";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "parameterDisambiguation";
  *((_QWORD *)v17 + 1) = 23;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "parameterNotAllowed";
  *((_QWORD *)v19 + 1) = 19;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "parameterCandidatesNotFound";
  *((_QWORD *)v21 + 1) = 27;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "actionRequirement";
  *((_QWORD *)v23 + 1) = 17;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 8 * v3) = 9;
  *(_QWORD *)v24 = "toolDisambiguation";
  *(_QWORD *)(v24 + 8) = 18;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v3);
  v26 = (char *)v25 + *(int *)(v1 + 48);
  *v25 = 10;
  *(_QWORD *)v26 = "failure";
  *((_QWORD *)v26 + 1) = 7;
  v26[16] = 2;
  v10();
  v27 = (_QWORD *)(v6 + 10 * v3);
  v28 = (char *)v27 + *(int *)(v1 + 48);
  *v27 = 11;
  *(_QWORD *)v28 = "valueDisambiguation";
  *((_QWORD *)v28 + 1) = 19;
  v28[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoStatementOutcome._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9250, (uint64_t)qword_256FFD6E0, a1);
}

uint64_t TranscriptProtoStatementOutcome.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_24046CBD4(v5, a1, a2, a3);
          break;
        case 2:
          sub_24046D014(v5, a1, a2, a3);
          break;
        case 3:
          sub_24046D458(v5, a1, a2, a3);
          break;
        case 4:
          sub_24046D89C(v5, a1, a2, a3);
          break;
        case 5:
          sub_24046DCE0(v5, a1, a2, a3);
          break;
        case 6:
          sub_24046E124(v5, a1, a2, a3);
          break;
        case 7:
          sub_24046E568(v5, a1, a2, a3);
          break;
        case 8:
          sub_24046E9AC(v5, a1, a2, a3);
          break;
        case 9:
          sub_24046EDF0(v5, a1, a2, a3);
          break;
        case 10:
          sub_24046F234(v5, a1, a2, a3);
          break;
        case 11:
          sub_24046F678(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24046CBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoActionSuccess(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570010E8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3E0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570010E8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoActionSuccess);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoActionSuccess);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF5A0, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570010E8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570010E8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570010E8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570010E8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoActionSuccess);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570010E8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3E0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoActionSuccess);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24046D014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoActionConfirmation(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570010F0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3E0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570010F0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoActionConfirmation);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoActionConfirmation);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF280, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570010F0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570010F0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570010F0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570010F0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoActionConfirmation);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570010F0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3E0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoActionConfirmation);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24046D458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570010F8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3E0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570010F8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoParameterNeedsValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoParameterNeedsValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF630, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570010F8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570010F8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570010F8);
    return sub_2403A97FC((uint64_t)v33, &qword_2570010F8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoParameterNeedsValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570010F8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3E0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoParameterNeedsValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24046D89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001100);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3E0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001100);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoParameterConfirmation);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoParameterConfirmation);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF5D0, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001100);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001100);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001100);
    return sub_2403A97FC((uint64_t)v33, &qword_257001100);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoParameterConfirmation);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001100);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3E0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoParameterConfirmation);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24046DCE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001108);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3E0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001108);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoParameterDisambiguation);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoParameterDisambiguation);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF5E8, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001108);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001108);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001108);
    return sub_2403A97FC((uint64_t)v33, &qword_257001108);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoParameterDisambiguation);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001108);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3E0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoParameterDisambiguation);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24046E124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001110);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3E0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001110);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoParameterNotAllowed);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoParameterNotAllowed);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF648, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001110);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001110);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001110);
    return sub_2403A97FC((uint64_t)v33, &qword_257001110);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoParameterNotAllowed);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001110);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3E0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoParameterNotAllowed);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24046E568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001118);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3E0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001118);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF670, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001118);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001118);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001118);
    return sub_2403A97FC((uint64_t)v33, &qword_257001118);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001118);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3E0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24046E9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoActionRequirement(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001120);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3E0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001120);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoActionRequirement);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoActionRequirement);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF4B0, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001120);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001120);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001120);
    return sub_2403A97FC((uint64_t)v33, &qword_257001120);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoActionRequirement);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001120);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3E0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoActionRequirement);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24046EDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoToolDisambiguation(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001128);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3E0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001128);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoToolDisambiguation);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoToolDisambiguation);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF2A8, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001128);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001128);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001128);
    return sub_2403A97FC((uint64_t)v33, &qword_257001128);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoToolDisambiguation);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001128);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3E0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoToolDisambiguation);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24046F234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoActionFailure(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001130);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3E0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001130);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoActionFailure);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoActionFailure);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF558, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001130);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001130);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001130);
    return sub_2403A97FC((uint64_t)v33, &qword_257001130);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoActionFailure);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001130);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3E0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoActionFailure);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24046F678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001138);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3E0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3E0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001138);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoValueDisambiguation);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoValueDisambiguation);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF600, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001138);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001138);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001138);
    return sub_2403A97FC((uint64_t)v33, &qword_257001138);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoValueDisambiguation);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001138);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3E0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoValueDisambiguation);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoStatementOutcome.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFA3E0);
  v4 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_24046FB88 + 4 * byte_2408EB93E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoStatementOutcome(0);
  return sub_2408E578C();
}

uint64_t sub_24046FD38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionSuccess(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3E0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3E0);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionSuccess);
    sub_2404FA028(&qword_256FFF5A0, type metadata accessor for TranscriptProtoActionSuccess, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionSuccess);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoActionSuccess);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  __break(1u);
  return result;
}

uint64_t sub_24046FED4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionConfirmation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3E0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3E0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionConfirmation);
    sub_2404FA028(&qword_256FFF280, type metadata accessor for TranscriptProtoActionConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionConfirmation);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoActionConfirmation);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  __break(1u);
  return result;
}

uint64_t sub_240470074(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3E0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3E0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParameterNeedsValue);
    sub_2404FA028(&qword_256FFF630, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoParameterNeedsValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  __break(1u);
  return result;
}

uint64_t sub_240470214(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3E0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3E0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParameterConfirmation);
    sub_2404FA028(&qword_256FFF5D0, type metadata accessor for TranscriptProtoParameterConfirmation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterConfirmation);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoParameterConfirmation);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404703B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3E0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3E0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParameterDisambiguation);
    sub_2404FA028(&qword_256FFF5E8, type metadata accessor for TranscriptProtoParameterDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterDisambiguation);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoParameterDisambiguation);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  __break(1u);
  return result;
}

uint64_t sub_240470554(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3E0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3E0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParameterNotAllowed);
    sub_2404FA028(&qword_256FFF648, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoParameterNotAllowed);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404706F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3E0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3E0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
    sub_2404FA028(&qword_256FFF670, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  __break(1u);
  return result;
}

uint64_t sub_240470894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionRequirement(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3E0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3E0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionRequirement);
    sub_2404FA028(&qword_256FFF4B0, type metadata accessor for TranscriptProtoActionRequirement, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionRequirement);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoActionRequirement);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  __break(1u);
  return result;
}

uint64_t sub_240470A34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoToolDisambiguation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3E0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3E0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 8)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoToolDisambiguation);
    sub_2404FA028(&qword_256FFF2A8, type metadata accessor for TranscriptProtoToolDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolDisambiguation);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoToolDisambiguation);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  __break(1u);
  return result;
}

uint64_t sub_240470BD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoActionFailure(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3E0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3E0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 9)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoActionFailure);
    sub_2404FA028(&qword_256FFF558, type metadata accessor for TranscriptProtoActionFailure, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionFailure);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoActionFailure);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  __break(1u);
  return result;
}

uint64_t sub_240470D74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3E0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3E0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 10)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoValueDisambiguation);
    sub_2404FA028(&qword_256FFF600, type metadata accessor for TranscriptProtoValueDisambiguation, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueDisambiguation);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoValueDisambiguation);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoStatementOutcome.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoStatementOutcome, &qword_256FFE8E0, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
}

uint64_t sub_240470F34@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoStatementOutcomeEnum, a1);
}

unint64_t sub_240470F40()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240470F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoStatementOutcome.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240470F70()
{
  return TranscriptProtoStatementOutcome.traverse<A>(visitor:)();
}

uint64_t sub_240470F84()
{
  sub_2404FA028(&qword_257000A30, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  return sub_2408E5828();
}

uint64_t sub_240470FD4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9250, (uint64_t)qword_256FFD6E0, a1);
}

uint64_t sub_240470FF0()
{
  sub_2404FA028(&qword_256FFF618, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  return sub_2408E599C();
}

uint64_t sub_240471030()
{
  sub_2404FA028(&qword_256FFF618, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoParameterNeedsValue.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2404710A0(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD6F8, 1, (uint64_t)"parameterId", 11);
}

uint64_t static TranscriptProtoParameterNeedsValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9258, (uint64_t)qword_256FFD6F8, a1);
}

uint64_t TranscriptProtoParameterNeedsValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoParameterNeedsValue.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterNeedsValue);
}

uint64_t static TranscriptProtoParameterNeedsValue.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoParameterNeedsValue) & 1;
}

uint64_t TranscriptProtoParameterNeedsValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoParameterNeedsValue, &qword_256FFE8E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
}

unint64_t sub_24047114C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240471168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterNeedsValue.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24047117C()
{
  sub_2404FA028(&qword_257000A28, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
  return sub_2408E5828();
}

uint64_t sub_2404711CC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9258, (uint64_t)qword_256FFD6F8, a1);
}

uint64_t sub_2404711E8()
{
  sub_2404FA028(&qword_256FFF630, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
  return sub_2408E599C();
}

uint64_t sub_240471228()
{
  sub_2404FA028(&qword_256FFF630, type metadata accessor for TranscriptProtoParameterNeedsValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNeedsValue);
  return sub_2408E59A8();
}

uint64_t sub_240471278(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoParameterNeedsValue) & 1;
}

unint64_t static TranscriptProtoParameterNotAllowed.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2404712B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD710);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD710);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "reason";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoParameterNotAllowed._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9260, (uint64_t)qword_256FFD710, a1);
}

uint64_t TranscriptProtoParameterNotAllowed.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v12 = v11;
        sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterNotAllowed, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
        goto LABEL_5;
      }
      if (result == 1)
      {
        v12 = v11;
        sub_2408E593C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    sub_2404EF66C();
    v12 = v11;
    sub_2408E58A0();
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoParameterNotAllowed.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = *(_QWORD *)(v3 + 8);
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    result = sub_240471694(v3, a1, a2, a3);
    if (!v4)
    {
      if (*(_BYTE *)(v3 + 16))
      {
        sub_2404EF66C();
        sub_2408E59E4();
      }
      type metadata accessor for TranscriptProtoParameterNotAllowed(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_240471694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t TranscriptProtoParameterNotAllowed.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoParameterNotAllowed, &qword_256FFE8F8, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
}

uint64_t sub_240471828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404A9718(a1, type metadata accessor for ToolKitProtoTypedValue, a2);
}

unint64_t sub_240471834()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240471850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterNotAllowed.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240471864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterNotAllowed.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240471878()
{
  sub_2404FA028(&qword_257000A20, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
  return sub_2408E5828();
}

uint64_t sub_2404718C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9260, (uint64_t)qword_256FFD710, a1);
}

uint64_t sub_2404718E4()
{
  sub_2404FA028(&qword_256FFF648, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
  return sub_2408E599C();
}

uint64_t sub_240471924()
{
  sub_2404FA028(&qword_256FFF648, type metadata accessor for TranscriptProtoParameterNotAllowed, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterNotAllowed);
  return sub_2408E59A8();
}

uint64_t sub_240471978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD728);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD728);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "unknown";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "missingRequiredPhoneNumber";
  *((_QWORD *)v11 + 1) = 26;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "missingRequiredEmailAddress";
  *(_QWORD *)(v12 + 8) = 27;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoParameterNotAllowed.Reason._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9268, (uint64_t)qword_256FFD728, a1);
}

uint64_t sub_240471B24@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9268, (uint64_t)qword_256FFD728, a1);
}

unint64_t static TranscriptProtoParameterCandidatesNotFound.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_240471B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD740);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD740);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoParameterCandidatesNotFound._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9270, (uint64_t)qword_256FFD740, a1);
}

uint64_t TranscriptProtoParameterCandidatesNotFound.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BF2D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterCandidatesNotFound, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t TranscriptProtoParameterCandidatesNotFound.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24044BC48(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_240471D24, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterCandidatesNotFound);
}

uint64_t sub_240471D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t TranscriptProtoParameterCandidatesNotFound.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoParameterCandidatesNotFound, &qword_256FFE900, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
}

uint64_t sub_240471EB8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404BF554(a1, type metadata accessor for ToolKitProtoTypedValue, a2);
}

unint64_t sub_240471EC4()
{
  return 0xD000000000000026;
}

uint64_t sub_240471EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterCandidatesNotFound.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240471EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterCandidatesNotFound.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240471F08()
{
  sub_2404FA028(&qword_257000A18, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
  return sub_2408E5828();
}

uint64_t sub_240471F58@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9270, (uint64_t)qword_256FFD740, a1);
}

uint64_t sub_240471F74()
{
  sub_2404FA028(&qword_256FFF670, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
  return sub_2408E599C();
}

uint64_t sub_240471FB4()
{
  sub_2404FA028(&qword_256FFF670, type metadata accessor for TranscriptProtoParameterCandidatesNotFound, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterCandidatesNotFound);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoParticipantID.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_240472024(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD758, 1, (uint64_t)"name", 4);
}

uint64_t static TranscriptProtoParticipantID._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9278, (uint64_t)qword_256FFD758, a1);
}

uint64_t TranscriptProtoParticipantID.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoParticipantID.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParticipantID);
}

uint64_t static TranscriptProtoParticipantID.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoParticipantID) & 1;
}

uint64_t TranscriptProtoParticipantID.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoParticipantID, &qword_256FFE908, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
}

unint64_t sub_2404720D0()
{
  return 0xD000000000000018;
}

uint64_t sub_2404720EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParticipantID.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240472100()
{
  sub_2404FA028(&qword_257000A10, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  return sub_2408E5828();
}

uint64_t sub_240472150@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9278, (uint64_t)qword_256FFD758, a1);
}

uint64_t sub_24047216C()
{
  sub_2404FA028(&qword_256FFF688, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  return sub_2408E599C();
}

uint64_t sub_2404721AC()
{
  sub_2404FA028(&qword_256FFF688, type metadata accessor for TranscriptProtoParticipantID, (uint64_t)&protocol conformance descriptor for TranscriptProtoParticipantID);
  return sub_2408E59A8();
}

uint64_t sub_2404721FC(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoParticipantID) & 1;
}

unint64_t static TranscriptProtoSpanID.protoMessageName.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_240472238(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD770, 1, (uint64_t)"value", 5);
}

uint64_t static TranscriptProtoSpanID._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9280, (uint64_t)qword_256FFD770, a1);
}

uint64_t TranscriptProtoSpanID.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C140]);
}

uint64_t TranscriptProtoSpanID.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (result = sub_2408E5A50(), !v1))
  {
    type metadata accessor for TranscriptProtoSpanID(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoSpanID.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSpanID, &qword_256FFE910, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
}

uint64_t sub_24047233C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  return result;
}

unint64_t sub_240472368()
{
  return 0xD000000000000011;
}

uint64_t sub_240472384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSpanID.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240472398()
{
  return TranscriptProtoSpanID.traverse<A>(visitor:)();
}

uint64_t sub_2404723AC()
{
  sub_2404FA028(&qword_257000A08, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
  return sub_2408E5828();
}

uint64_t sub_2404723FC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9280, (uint64_t)qword_256FFD770, a1);
}

uint64_t sub_240472418()
{
  sub_2404FA028(&qword_256FFF6A0, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
  return sub_2408E599C();
}

uint64_t sub_240472458()
{
  sub_2404FA028(&qword_256FFF6A0, type metadata accessor for TranscriptProtoSpanID, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpanID);
  return sub_2408E59A8();
}

uint64_t static TranscriptProtoPlan.protoMessageName.getter()
{
  return 0x697263736E617254;
}

uint64_t sub_2404724D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD788);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD788);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 3;
  *(_QWORD *)v7 = "prompt";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 4;
  *(_QWORD *)v11 = "promptResponse";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 9;
  *(_QWORD *)v13 = "statements";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 10;
  *(_QWORD *)v15 = "overrideId";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 11;
  *(_QWORD *)v16 = "planSource";
  *(_QWORD *)(v16 + 8) = 10;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPlan._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9288, (uint64_t)qword_256FFD788, a1);
}

uint64_t TranscriptProtoPlan.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 3:
        case 4:
          v4 = v3;
          sub_2408E593C();
          goto LABEL_5;
        case 9:
          type metadata accessor for TranscriptProtoProgramStatement(0);
          sub_2404FA028(&qword_256FFE918, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
          v4 = v3;
          sub_2408E5960();
          goto LABEL_5;
        case 10:
          v4 = v3;
          sub_2408E5930();
          goto LABEL_5;
        case 11:
          sub_2404F9FE4();
          v4 = v3;
          sub_2408E5894();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoPlan.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    result = v0[2];
    v5 = v0[3];
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = result & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_2408E5A38(), !v1))
    {
      if (!*(_QWORD *)(v0[4] + 16)
        || (type metadata accessor for TranscriptProtoProgramStatement(0),
            sub_2404FA028(&qword_256FFE918, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement), result = sub_2408E5A5C(), !v1))
      {
        if (v0[6])
          result = sub_2408E5A38();
        if (!v1)
        {
          sub_2404729E0((uint64_t)v0);
          type metadata accessor for TranscriptProtoPlan(0);
          return sub_2408E578C();
        }
      }
    }
  }
  return result;
}

uint64_t sub_2404729E0(uint64_t result)
{
  if (*(_BYTE *)(result + 56) != 5)
  {
    sub_2404F9FE4();
    return sub_2408E59E4();
  }
  return result;
}

uint64_t TranscriptProtoPlan.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPlan, &qword_256FFE920, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
}

uint64_t sub_240472A78@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 5;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_QWORD *)(a1 + 32) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_240472AC4()
{
  return 0x697263736E617254;
}

uint64_t sub_240472AE8()
{
  return TranscriptProtoPlan.decodeMessage<A>(decoder:)();
}

uint64_t sub_240472AFC()
{
  return TranscriptProtoPlan.traverse<A>(visitor:)();
}

uint64_t sub_240472B10()
{
  sub_2404FA028(&qword_257000A00, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
  return sub_2408E5828();
}

uint64_t sub_240472B60@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9288, (uint64_t)qword_256FFD788, a1);
}

uint64_t sub_240472B7C()
{
  sub_2404FA028(&qword_256FFF6B8, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
  return sub_2408E599C();
}

uint64_t sub_240472BBC()
{
  sub_2404FA028(&qword_256FFF6B8, type metadata accessor for TranscriptProtoPlan, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlan);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoRecoverableError.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240472C2C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD7A0, 1, (uint64_t)"planGenerationError", 19);
}

uint64_t static TranscriptProtoRecoverableError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9290, (uint64_t)qword_256FFD7A0, a1);
}

uint64_t TranscriptProtoRecoverableError.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404733C8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240472C80);
}

uint64_t sub_240472C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v45 = a4;
  v44 = a3;
  v5 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v38 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (uint64_t)&v33 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v33 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570010D0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v33 - v23;
  v39 = v6;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v25((char *)&v33 - v23, 1, 1, v5);
  v36 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA398);
  v34 = v14;
  v35 = v13;
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v37 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA398);
  }
  else
  {
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
    sub_2403A97FC((uint64_t)v24, &qword_2570010D0);
    v26 = v40;
    sub_2403A91CC((uint64_t)v17, v40, type metadata accessor for TranscriptProtoPlanGenerationError);
    sub_2403A91CC(v26, (uint64_t)v24, type metadata accessor for TranscriptProtoPlanGenerationError);
    v25(v24, 0, 1, v5);
  }
  v28 = (uint64_t)v41;
  v27 = v42;
  sub_2404FA028(&qword_256FFF6E8, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
  sub_2408E596C();
  if (v27)
    return sub_2403A97FC((uint64_t)v24, &qword_2570010D0);
  sub_2403A9210((uint64_t)v24, v28, &qword_2570010D0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v28, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570010D0);
    return sub_2403A97FC(v28, &qword_2570010D0);
  }
  else
  {
    v30 = v28;
    v31 = v38;
    sub_2403A91CC(v30, v38, type metadata accessor for TranscriptProtoPlanGenerationError);
    if (v37 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570010D0);
    v32 = v36;
    sub_2403A97FC(v36, &qword_256FFA398);
    sub_2403A91CC(v31, v32, type metadata accessor for TranscriptProtoPlanGenerationError);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v35);
  }
}

uint64_t TranscriptProtoRecoverableError.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240483ED0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240473074, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRecoverableError);
}

uint64_t sub_240473074(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA398);
  v8 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v4, &qword_256FFA398);
  sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPlanGenerationError);
  sub_2404FA028(&qword_256FFF6E8, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPlanGenerationError);
}

uint64_t TranscriptProtoRecoverableError.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRecoverableError, &qword_256FFE928, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
}

uint64_t sub_240473208@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoRecoverableErrorEnum, a1);
}

unint64_t sub_240473214()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240473230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRecoverableError.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240473244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRecoverableError.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240473258()
{
  sub_2404FA028(&qword_2570009F8, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
  return sub_2408E5828();
}

uint64_t sub_2404732A8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9290, (uint64_t)qword_256FFD7A0, a1);
}

uint64_t sub_2404732C4()
{
  sub_2404FA028(&qword_256FFF6D0, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
  return sub_2408E599C();
}

uint64_t sub_240473304()
{
  sub_2404FA028(&qword_256FFF6D0, type metadata accessor for TranscriptProtoRecoverableError, (uint64_t)&protocol conformance descriptor for TranscriptProtoRecoverableError);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoPlanGenerationError.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240473374(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD7B8, 1, (uint64_t)"modelOutputError", 16);
}

uint64_t static TranscriptProtoPlanGenerationError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9298, (uint64_t)qword_256FFD7B8, a1);
}

uint64_t TranscriptProtoPlanGenerationError.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404733C8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240473444);
}

uint64_t sub_2404733C8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;
  char v12;

  v7 = v4;
  while (1)
  {
    result = sub_2408E5858();
    if (v5 || (v12 & 1) != 0)
      break;
    if (result == 1)
      a4(v7, a1, a2, a3);
  }
  return result;
}

uint64_t sub_240473444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v45 = a4;
  v44 = a3;
  v5 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v38 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (uint64_t)&v33 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v33 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570010B8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v33 - v23;
  v39 = v6;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v25((char *)&v33 - v23, 1, 1, v5);
  v36 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA390);
  v34 = v14;
  v35 = v13;
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v37 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA390);
  }
  else
  {
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
    sub_2403A97FC((uint64_t)v24, &qword_2570010B8);
    v26 = v40;
    sub_2403A91CC((uint64_t)v17, v40, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    sub_2403A91CC(v26, (uint64_t)v24, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    v25(v24, 0, 1, v5);
  }
  v28 = (uint64_t)v41;
  v27 = v42;
  sub_2404FA028(&qword_256FFF700, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
  sub_2408E596C();
  if (v27)
    return sub_2403A97FC((uint64_t)v24, &qword_2570010B8);
  sub_2403A9210((uint64_t)v24, v28, &qword_2570010B8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v28, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570010B8);
    return sub_2403A97FC(v28, &qword_2570010B8);
  }
  else
  {
    v30 = v28;
    v31 = v38;
    sub_2403A91CC(v30, v38, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    if (v37 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570010B8);
    v32 = v36;
    sub_2403A97FC(v36, &qword_256FFA390);
    sub_2403A91CC(v31, v32, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v35);
  }
}

uint64_t TranscriptProtoPlanGenerationError.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240483ED0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240473838, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPlanGenerationError);
}

uint64_t sub_240473838(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA390);
  v8 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v4, &qword_256FFA390);
  sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
  sub_2404FA028(&qword_256FFF700, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
}

uint64_t TranscriptProtoPlanGenerationError.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPlanGenerationError, &qword_256FFE930, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
}

uint64_t sub_2404739CC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoPlanGenerationErrorEnum, a1);
}

unint64_t sub_2404739D8()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2404739F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPlanGenerationError.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240473A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPlanGenerationError.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240473A1C()
{
  sub_2404FA028(&qword_2570009F0, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
  return sub_2408E5828();
}

uint64_t sub_240473A6C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9298, (uint64_t)qword_256FFD7B8, a1);
}

uint64_t sub_240473A88()
{
  sub_2404FA028(&qword_256FFF6E8, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
  return sub_2408E599C();
}

uint64_t sub_240473AC8()
{
  sub_2404FA028(&qword_256FFF6E8, type metadata accessor for TranscriptProtoPlanGenerationError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationError);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoPlanGenerationModelOutputError.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_240473B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD7D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD7D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "rawModelOutput";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "prompt";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "errorDescription";
  *(_QWORD *)(v12 + 8) = 16;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPlanGenerationModelOutputError._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92A0, (uint64_t)qword_256FFD7D0, a1);
}

uint64_t TranscriptProtoPlanGenerationModelOutputError.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BEA68(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoPlanGenerationModelOutputError.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BEB64(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
}

uint64_t static TranscriptProtoPlanGenerationModelOutputError.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404E4C74(a1, a2, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError) & 1;
}

uint64_t TranscriptProtoPlanGenerationModelOutputError.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, &qword_256FFE938, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
}

unint64_t sub_240473D64()
{
  return 0xD000000000000029;
}

uint64_t sub_240473D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUndoContext.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240473D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPlanGenerationModelOutputError.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240473DA8()
{
  sub_2404FA028(&qword_2570009E8, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
  return sub_2408E5828();
}

uint64_t sub_240473DF8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92A0, (uint64_t)qword_256FFD7D0, a1);
}

uint64_t sub_240473E14()
{
  sub_2404FA028(&qword_256FFF700, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
  return sub_2408E599C();
}

uint64_t sub_240473E54()
{
  sub_2404FA028(&qword_256FFF700, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError, (uint64_t)&protocol conformance descriptor for TranscriptProtoPlanGenerationModelOutputError);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoQuery.protoMessageName.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_240473EC4(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFD7E8);
}

uint64_t static TranscriptProtoQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92A8, (uint64_t)qword_256FFD7E8, a1);
}

uint64_t TranscriptProtoQuery.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQuery, &qword_256FFE940, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
}

unint64_t sub_240473F20()
{
  return 0xD000000000000010;
}

uint64_t sub_240473F3C()
{
  sub_2404FA028(&qword_2570009E0, type metadata accessor for TranscriptProtoQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
  return sub_2408E5828();
}

uint64_t sub_240473F8C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92A8, (uint64_t)qword_256FFD7E8, a1);
}

uint64_t sub_240473FA8()
{
  sub_2404FA028(&qword_256FFF718, type metadata accessor for TranscriptProtoQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
  return sub_2408E599C();
}

uint64_t sub_240473FE8()
{
  sub_2404FA028(&qword_256FFF718, type metadata accessor for TranscriptProtoQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoQuery);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoQueryData.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_240474054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD800);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD800);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "identifierQuery";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "stringQuery";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "propertyQuery";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "systemQuery";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoQueryData._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92B0, (uint64_t)qword_256FFD800, a1);
}

uint64_t TranscriptProtoQueryData.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24045B00C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240474268, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2404746A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240474AEC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240474F30);
}

uint64_t sub_240474268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t DataEnum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v14 = *(_QWORD *)(DataEnum - 8);
  v15 = MEMORY[0x24BDAC7A8](DataEnum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001090);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, DataEnum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE948);
    v28 = DataEnum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoQueryDataEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryDataEnum);
    v28 = DataEnum;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryDataEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001090);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoIdentifierQuery);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoIdentifierQuery);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF790, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001090);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001090);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001090);
    return sub_2403A97FC((uint64_t)v33, &qword_257001090);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoIdentifierQuery);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001090);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoIdentifierQuery);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404746A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t DataEnum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoStringQuery(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v14 = *(_QWORD *)(DataEnum - 8);
  v15 = MEMORY[0x24BDAC7A8](DataEnum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001098);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, DataEnum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE948);
    v28 = DataEnum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoQueryDataEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryDataEnum);
    v28 = DataEnum;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001098);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoStringQuery);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoStringQuery);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryDataEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF748, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001098);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001098);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001098);
    return sub_2403A97FC((uint64_t)v33, &qword_257001098);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoStringQuery);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001098);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoStringQuery);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240474AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t DataEnum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoPropertyQuery(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v14 = *(_QWORD *)(DataEnum - 8);
  v15 = MEMORY[0x24BDAC7A8](DataEnum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570010A0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, DataEnum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE948);
    v28 = DataEnum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoQueryDataEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryDataEnum);
    v28 = DataEnum;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_2570010A0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoPropertyQuery);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoPropertyQuery);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryDataEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF760, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_2570010A0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_2570010A0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_2570010A0);
    return sub_2403A97FC((uint64_t)v33, &qword_2570010A0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoPropertyQuery);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_2570010A0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoPropertyQuery);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240474F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t DataEnum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoStringQuery(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE948);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  v14 = *(_QWORD *)(DataEnum - 8);
  v15 = MEMORY[0x24BDAC7A8](DataEnum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001098);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE948);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, DataEnum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE948);
    v28 = DataEnum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoQueryDataEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryDataEnum);
    v28 = DataEnum;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001098);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoStringQuery);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoStringQuery);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryDataEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF748, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001098);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001098);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001098);
    return sub_2403A97FC((uint64_t)v33, &qword_257001098);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoStringQuery);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001098);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE948);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoStringQuery);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoQueryData.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t DataEnum;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE948);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFE948);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataEnum - 8) + 48))(v3, 1, DataEnum) != 1)
  {
    v5 = (char *)&loc_240475440 + 4 * byte_2408EB952[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoQueryData(0);
  return sub_2408E578C();
}

uint64_t sub_24047550C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DataEnum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIdentifierQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE948);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataEnum - 8) + 48))(v4, 1, DataEnum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE948);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIdentifierQuery);
    sub_2404FA028(&qword_256FFF790, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoIdentifierQuery);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDataEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404756A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DataEnum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStringQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE948);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataEnum - 8) + 48))(v4, 1, DataEnum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE948);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStringQuery);
    sub_2404FA028(&qword_256FFF748, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStringQuery);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDataEnum);
  __break(1u);
  return result;
}

uint64_t sub_240475848(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DataEnum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPropertyQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE948);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataEnum - 8) + 48))(v4, 1, DataEnum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE948);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPropertyQuery);
    sub_2404FA028(&qword_256FFF760, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPropertyQuery);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDataEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404759E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DataEnum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE948);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStringQuery(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE948);
  DataEnum = type metadata accessor for TranscriptProtoQueryDataEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DataEnum - 8) + 48))(v4, 1, DataEnum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE948);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStringQuery);
    sub_2404FA028(&qword_256FFF748, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStringQuery);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDataEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoQueryData.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryData, &qword_256FFE950, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
}

uint64_t sub_240475BA8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoQueryDataEnum, a1);
}

unint64_t sub_240475BB4()
{
  return 0xD000000000000014;
}

uint64_t sub_240475BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryData.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240475BE4()
{
  return TranscriptProtoQueryData.traverse<A>(visitor:)();
}

uint64_t sub_240475BF8()
{
  sub_2404FA028(&qword_2570009D8, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
  return sub_2408E5828();
}

uint64_t sub_240475C48@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92B0, (uint64_t)qword_256FFD800, a1);
}

uint64_t sub_240475C64()
{
  sub_2404FA028(&qword_256FFF730, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
  return sub_2408E599C();
}

uint64_t sub_240475CA4()
{
  sub_2404FA028(&qword_256FFF730, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoStringQuery.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_240475D14(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD818, 1, (uint64_t)"searchString", 12);
}

uint64_t static TranscriptProtoStringQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92B8, (uint64_t)qword_256FFD818, a1);
}

uint64_t TranscriptProtoStringQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoStringQuery.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoStringQuery);
}

uint64_t static TranscriptProtoStringQuery.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoStringQuery) & 1;
}

uint64_t TranscriptProtoStringQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoStringQuery, &qword_256FFE958, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
}

unint64_t sub_240475DC0()
{
  return 0xD000000000000016;
}

uint64_t sub_240475DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoStringQuery.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240475DF0()
{
  sub_2404FA028(&qword_2570009D0, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
  return sub_2408E5828();
}

uint64_t sub_240475E40@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92B8, (uint64_t)qword_256FFD818, a1);
}

uint64_t sub_240475E5C()
{
  sub_2404FA028(&qword_256FFF748, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
  return sub_2408E599C();
}

uint64_t sub_240475E9C()
{
  sub_2404FA028(&qword_256FFF748, type metadata accessor for TranscriptProtoStringQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoStringQuery);
  return sub_2408E59A8();
}

uint64_t sub_240475EEC(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoStringQuery) & 1;
}

unint64_t static TranscriptProtoPropertyQuery.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_240475F28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD830);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD830);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "compare";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "and";
  *((_QWORD *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "or";
  *(_QWORD *)(v12 + 8) = 2;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPropertyQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92C0, (uint64_t)qword_256FFD830, a1);
}

uint64_t TranscriptProtoPropertyQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404760FC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2404761CC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24047660C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240476A50);
}

uint64_t sub_2404760FC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t result;
  char v16;

  v11 = v6;
  while (1)
  {
    result = sub_2408E5858();
    if (v7 || (v16 & 1) != 0)
      break;
    switch(result)
    {
      case 3:
        a6(v11, a1, a2, a3);
        break;
      case 2:
        a5(v11, a1, a2, a3);
        break;
      case 1:
        a4(v11, a1, a2, a3);
        break;
    }
  }
  return result;
}

uint64_t sub_2404761CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t Predicate;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Enum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
  v6 = *(_QWORD *)(Predicate - 8);
  v7 = MEMORY[0x24BDAC7A8](Predicate);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE960);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  v14 = *(_QWORD *)(Enum - 8);
  v15 = MEMORY[0x24BDAC7A8](Enum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001078);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = Predicate;
  v25(&v36[-v23], 1, 1, Predicate);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE960);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, Enum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE960);
    v28 = Enum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    v28 = Enum;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPropertyQueryEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001078);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryPredicate);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryPredicate);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE970, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001078);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001078);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001078);
    return sub_2403A97FC((uint64_t)v33, &qword_257001078);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryPredicate);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001078);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE960);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryPredicate);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24047660C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t PredicateList;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Enum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  PredicateList = type metadata accessor for TranscriptProtoQueryPredicateList(0);
  v6 = *(_QWORD *)(PredicateList - 8);
  v7 = MEMORY[0x24BDAC7A8](PredicateList);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE960);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  v14 = *(_QWORD *)(Enum - 8);
  v15 = MEMORY[0x24BDAC7A8](Enum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001080);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = PredicateList;
  v25(&v36[-v23], 1, 1, PredicateList);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE960);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, Enum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE960);
    v28 = Enum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    v28 = Enum;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001080);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryPredicateList);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryPredicateList);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPropertyQueryEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF778, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001080);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001080);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001080);
    return sub_2403A97FC((uint64_t)v33, &qword_257001080);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryPredicateList);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001080);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE960);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryPredicateList);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240476A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t PredicateList;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t Enum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  PredicateList = type metadata accessor for TranscriptProtoQueryPredicateList(0);
  v6 = *(_QWORD *)(PredicateList - 8);
  v7 = MEMORY[0x24BDAC7A8](PredicateList);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE960);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  v14 = *(_QWORD *)(Enum - 8);
  v15 = MEMORY[0x24BDAC7A8](Enum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001080);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = PredicateList;
  v25(&v36[-v23], 1, 1, PredicateList);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE960);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, Enum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE960);
    v28 = Enum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoPropertyQueryEnum);
    v28 = Enum;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001080);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryPredicateList);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryPredicateList);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoPropertyQueryEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF778, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001080);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001080);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001080);
    return sub_2403A97FC((uint64_t)v33, &qword_257001080);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryPredicateList);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001080);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE960);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryPredicateList);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoPropertyQuery.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Enum;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE960);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v4, &qword_256FFE960);
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Enum - 8) + 48))(v4, 1, Enum) == 1)
    goto LABEL_8;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_24047719C(v0);
    else
      sub_24047733C(v0);
  }
  else
  {
    sub_240477000(v0);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPropertyQueryEnum);
  if (!v1)
  {
LABEL_8:
    type metadata accessor for TranscriptProtoPropertyQuery(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240477000(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t Predicate;
  uint64_t v6;
  char *v7;
  uint64_t Enum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE960);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
  MEMORY[0x24BDAC7A8](Predicate);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE960);
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Enum - 8) + 48))(v4, 1, Enum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE960);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicate);
    sub_2404FA028(&qword_256FFE970, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicate);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPropertyQueryEnum);
  __break(1u);
  return result;
}

uint64_t sub_24047719C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t PredicateList;
  uint64_t v6;
  char *v7;
  uint64_t Enum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE960);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  PredicateList = type metadata accessor for TranscriptProtoQueryPredicateList(0);
  MEMORY[0x24BDAC7A8](PredicateList);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE960);
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Enum - 8) + 48))(v4, 1, Enum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE960);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicateList);
    sub_2404FA028(&qword_256FFF778, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicateList);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPropertyQueryEnum);
  __break(1u);
  return result;
}

uint64_t sub_24047733C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t PredicateList;
  uint64_t v6;
  char *v7;
  uint64_t Enum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE960);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  PredicateList = type metadata accessor for TranscriptProtoQueryPredicateList(0);
  MEMORY[0x24BDAC7A8](PredicateList);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE960);
  Enum = type metadata accessor for TranscriptProtoPropertyQueryEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(Enum - 8) + 48))(v4, 1, Enum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE960);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicateList);
    sub_2404FA028(&qword_256FFF778, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryPredicateList);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoPropertyQueryEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoPropertyQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPropertyQuery, &qword_256FFE968, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
}

uint64_t sub_2404774FC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoPropertyQueryEnum, a1);
}

unint64_t sub_240477508()
{
  return 0xD000000000000018;
}

uint64_t sub_240477524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPropertyQuery.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240477538()
{
  return TranscriptProtoPropertyQuery.traverse<A>(visitor:)();
}

uint64_t sub_24047754C()
{
  sub_2404FA028(&qword_2570009C8, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
  return sub_2408E5828();
}

uint64_t sub_24047759C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92C0, (uint64_t)qword_256FFD830, a1);
}

uint64_t sub_2404775B8()
{
  sub_2404FA028(&qword_256FFF760, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
  return sub_2408E599C();
}

uint64_t sub_2404775F8()
{
  sub_2404FA028(&qword_256FFF760, type metadata accessor for TranscriptProtoPropertyQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoPropertyQuery);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoQueryPredicateList.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240477668(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD848, 1, (uint64_t)"predicates", 10);
}

uint64_t static TranscriptProtoQueryPredicateList._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92C8, (uint64_t)qword_256FFD848, a1);
}

uint64_t TranscriptProtoQueryPredicateList.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for TranscriptProtoQueryPredicate, &qword_256FFE970, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
}

uint64_t TranscriptProtoQueryPredicateList.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for TranscriptProtoQueryPredicate, &qword_256FFE970, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryPredicateList);
}

uint64_t static TranscriptProtoQueryPredicateList.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BC930, type metadata accessor for TranscriptProtoQueryPredicateList) & 1;
}

uint64_t TranscriptProtoQueryPredicateList.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryPredicateList, &qword_256FFE978, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
}

unint64_t sub_240477744()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240477760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryPredicateList.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240477774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryPredicateList.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240477788()
{
  sub_2404FA028(&qword_2570009C0, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
  return sub_2408E5828();
}

uint64_t sub_2404777D8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92C8, (uint64_t)qword_256FFD848, a1);
}

uint64_t sub_2404777F4()
{
  sub_2404FA028(&qword_256FFF778, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
  return sub_2408E599C();
}

uint64_t sub_240477834()
{
  sub_2404FA028(&qword_256FFF778, type metadata accessor for TranscriptProtoQueryPredicateList, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicateList);
  return sub_2408E59A8();
}

uint64_t sub_240477884(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BC930, type metadata accessor for TranscriptProtoQueryPredicateList) & 1;
}

unint64_t static TranscriptProtoIdentifierQuery.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2404778C8(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD860, 1, (uint64_t)"identifiers", 11);
}

uint64_t static TranscriptProtoIdentifierQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92D0, (uint64_t)qword_256FFD860, a1);
}

uint64_t TranscriptProtoIdentifierQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0E8]);
}

uint64_t TranscriptProtoIdentifierQuery.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404C3EA4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoIdentifierQuery);
}

uint64_t static TranscriptProtoIdentifierQuery.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoIdentifierQuery) & 1;
}

uint64_t TranscriptProtoIdentifierQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoIdentifierQuery, &qword_256FFE980, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
}

unint64_t sub_24047797C()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_240477998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoIdentifierQuery.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404779AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoIdentifierQuery.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404779C0()
{
  sub_2404FA028(&qword_2570009B8, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
  return sub_2408E5828();
}

uint64_t sub_240477A10@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92D0, (uint64_t)qword_256FFD860, a1);
}

uint64_t sub_240477A2C()
{
  sub_2404FA028(&qword_256FFF790, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
  return sub_2408E599C();
}

uint64_t sub_240477A6C()
{
  sub_2404FA028(&qword_256FFF790, type metadata accessor for TranscriptProtoIdentifierQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoIdentifierQuery);
  return sub_2408E59A8();
}

uint64_t sub_240477ABC(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoIdentifierQuery) & 1;
}

unint64_t static TranscriptProtoQueryPredicate.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_240477B00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD878);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD878);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "op";
  *((_QWORD *)v11 + 1) = 2;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "value";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoQueryPredicate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92D8, (uint64_t)qword_256FFD878, a1);
}

uint64_t TranscriptProtoQueryPredicate.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        sub_2404EF6B0();
        v12 = v11;
        sub_2408E58A0();
        goto LABEL_5;
      }
      if (result == 1)
      {
        v12 = v11;
        sub_2408E593C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    v12 = v11;
    sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryPredicate, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoQueryPredicate.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = *(_QWORD *)(v3 + 8);
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    if (!*(_BYTE *)(v3 + 16) || (sub_2404EF6B0(), result = sub_2408E59E4(), !v4))
    {
      result = sub_240477EDC(v3, a1, a2, a3);
      if (!v4)
      {
        type metadata accessor for TranscriptProtoQueryPredicate(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t sub_240477EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Predicate;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Predicate = type metadata accessor for TranscriptProtoQueryPredicate(0);
  sub_2403A9210(a1 + *(int *)(Predicate + 24), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t TranscriptProtoQueryPredicate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryPredicate, &qword_256FFE990, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
}

unint64_t sub_240478070()
{
  return 0xD000000000000019;
}

uint64_t sub_24047808C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryPredicate.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404780A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryPredicate.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404780B4()
{
  sub_2404FA028(&qword_2570009B0, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
  return sub_2408E5828();
}

uint64_t sub_240478104@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92D8, (uint64_t)qword_256FFD878, a1);
}

uint64_t sub_240478120()
{
  sub_2404FA028(&qword_256FFE970, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
  return sub_2408E599C();
}

uint64_t sub_240478160()
{
  sub_2404FA028(&qword_256FFE970, type metadata accessor for TranscriptProtoQueryPredicate, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryPredicate);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoQueryResults.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_2404781D0(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD890, 3, (uint64_t)"candidates", 10);
}

uint64_t static TranscriptProtoQueryResults._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92E0, (uint64_t)qword_256FFD890, a1);
}

uint64_t TranscriptProtoQueryResults.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3)
      {
        type metadata accessor for TranscriptProtoCandidate(0);
        sub_2404FA028(&qword_256FFE998, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
        sub_2408E5960();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoQueryResults.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (type metadata accessor for TranscriptProtoCandidate(0),
        sub_2404FA028(&qword_256FFE998, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate), result = sub_2408E5A5C(), !v1))
  {
    type metadata accessor for TranscriptProtoQueryResults(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoQueryResults.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BD9D8, type metadata accessor for TranscriptProtoQueryResults) & 1;
}

uint64_t TranscriptProtoQueryResults.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryResults, &qword_256FFE9A0, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
}

unint64_t sub_240478400()
{
  return 0xD000000000000017;
}

uint64_t sub_24047841C()
{
  return TranscriptProtoQueryResults.decodeMessage<A>(decoder:)();
}

uint64_t sub_240478430()
{
  return TranscriptProtoQueryResults.traverse<A>(visitor:)();
}

uint64_t sub_240478444()
{
  sub_2404FA028(&qword_2570009A8, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
  return sub_2408E5828();
}

uint64_t sub_240478494@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92E0, (uint64_t)qword_256FFD890, a1);
}

uint64_t sub_2404784B0()
{
  sub_2404FA028(&qword_256FFE9C0, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
  return sub_2408E599C();
}

uint64_t sub_2404784F0()
{
  sub_2404FA028(&qword_256FFE9C0, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
  return sub_2408E59A8();
}

uint64_t sub_240478540(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BD9D8, type metadata accessor for TranscriptProtoQueryResults) & 1;
}

unint64_t static TranscriptProtoQueryStep.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_240478584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD8A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD8A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "queries";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoQueryStep._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92E8, (uint64_t)qword_256FFD8A8, a1);
}

uint64_t TranscriptProtoQueryStep.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 3)
      {
        type metadata accessor for TranscriptProtoParameterQuery(0);
        sub_2404FA028(&qword_256FFE9A8, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
        sub_2408E5960();
      }
      else if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryStep, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoQueryStep.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_240478908(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for TranscriptProtoParameterQuery(0);
      sub_2404FA028(&qword_256FFE9A8, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
      sub_2408E5A5C();
    }
    type metadata accessor for TranscriptProtoQueryStep(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240478908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Step;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Step = type metadata accessor for TranscriptProtoQueryStep(0);
  sub_2403A9210(a1 + *(int *)(Step + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t static TranscriptProtoQueryStep.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404CB984(a1, a2, (char *)type metadata accessor for TranscriptProtoQueryStep, sub_2408C0714) & 1;
}

uint64_t TranscriptProtoQueryStep.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryStep, &qword_256FFE9B0, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
}

uint64_t sub_240478AC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404AA538(a1, type metadata accessor for TranscriptProtoStatementID, MEMORY[0x24BEE4AF8], a2);
}

unint64_t sub_240478AD4()
{
  return 0xD000000000000014;
}

uint64_t sub_240478AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryStep.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240478B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryStep.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240478B18()
{
  sub_2404FA028(&qword_2570009A0, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
  return sub_2408E5828();
}

uint64_t sub_240478B68@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92E8, (uint64_t)qword_256FFD8A8, a1);
}

uint64_t sub_240478B84()
{
  sub_2404FA028(&qword_256FFF7C8, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
  return sub_2408E599C();
}

uint64_t sub_240478BC4()
{
  sub_2404FA028(&qword_256FFF7C8, type metadata accessor for TranscriptProtoQueryStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStep);
  return sub_2408E59A8();
}

uint64_t sub_240478C14(_QWORD *a1, char *a2)
{
  return sub_2404CB984(a1, a2, (char *)type metadata accessor for TranscriptProtoQueryStep, sub_2408C0714) & 1;
}

unint64_t static TranscriptProtoParameterQuery.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_240478C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD8C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD8C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "context";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "data";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "dependencies";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "deviceId";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoParameterQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92F0, (uint64_t)qword_256FFD8C0, a1);
}

uint64_t TranscriptProtoParameterQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterQuery, type metadata accessor for TranscriptProtoActionParameterContext, &qword_256FFF410, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParameterQuery, type metadata accessor for TranscriptProtoQueryData, &qword_256FFF730, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_240478FA0();
          goto LABEL_5;
        case 4:
          type metadata accessor for TranscriptProtoParameterQuery(0);
          v12 = v11;
          sub_2408E5930();
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240478FA0()
{
  sub_2408E5774();
  type metadata accessor for ToolKitProtoTypedValue(0);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7F0, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  return sub_2408E5840();
}

uint64_t TranscriptProtoParameterQuery.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404791F0(v3, a1, a2, a3);
  if (!v4)
  {
    sub_240479364(v3, a1, a2, a3);
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      sub_2408E5774();
      type metadata accessor for ToolKitProtoTypedValue(0);
      sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      sub_2404FA028(&qword_256FFE7F0, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      sub_2408E59B4();
    }
    sub_2404C7E70(v3, a1, a2, a3, type metadata accessor for TranscriptProtoParameterQuery);
    type metadata accessor for TranscriptProtoParameterQuery(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404791F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFAFF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoParameterQuery(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFAFF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFAFF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoActionParameterContext);
  sub_2404FA028(&qword_256FFF410, type metadata accessor for TranscriptProtoActionParameterContext, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionParameterContext);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoActionParameterContext);
}

uint64_t sub_240479364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Data;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001060);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  v9 = *(_QWORD *)(Data - 8);
  MEMORY[0x24BDAC7A8](Data);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoParameterQuery(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_257001060);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, Data) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257001060);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoQueryData);
  sub_2404FA028(&qword_256FFF730, type metadata accessor for TranscriptProtoQueryData, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryData);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoQueryData);
}

uint64_t TranscriptProtoParameterQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoParameterQuery, &qword_256FFE9B8, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
}

unint64_t sub_2404794F8@<X0>(int *a1@<X0>, unint64_t *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t Data;
  _QWORD *v8;
  unint64_t result;

  v4 = (char *)a2 + a1[5];
  v5 = type metadata accessor for TranscriptProtoActionParameterContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + a1[6];
  Data = type metadata accessor for TranscriptProtoQueryData(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Data - 8) + 56))(v6, 1, 1, Data);
  v8 = (unint64_t *)((char *)a2 + a1[7]);
  *v8 = 0;
  v8[1] = 0;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = sub_2403A8EF4(MEMORY[0x24BEE4AF8]);
  *a2 = result;
  return result;
}

unint64_t sub_24047959C()
{
  return 0xD000000000000019;
}

uint64_t sub_2404795B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterQuery.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404795CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterQuery.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404795E0()
{
  sub_2404FA028(&qword_257000998, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
  return sub_2408E5828();
}

uint64_t sub_240479630@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92F0, (uint64_t)qword_256FFD8C0, a1);
}

uint64_t sub_24047964C()
{
  sub_2404FA028(&qword_256FFE9A8, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
  return sub_2408E599C();
}

uint64_t sub_24047968C()
{
  sub_2404FA028(&qword_256FFE9A8, type metadata accessor for TranscriptProtoParameterQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterQuery);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoQueryStepResults.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404796FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD8D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD8D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "queryResults";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "originStatementId";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "rawQueryEventId";
  *(_QWORD *)(v12 + 8) = 15;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoQueryStepResults._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF92F8, (uint64_t)qword_256FFD8D8, a1);
}

uint64_t TranscriptProtoQueryStepResults.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v12 = v11;
        sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryStepResults, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for TranscriptProtoQueryResults(0);
        sub_2404FA028(&qword_256FFE9C0, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults);
        v12 = v11;
        sub_2408E5960();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    v12 = v11;
    sub_2408E593C();
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoQueryStepResults.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;

  if (!*(_QWORD *)(*v3 + 16)
    || (type metadata accessor for TranscriptProtoQueryResults(0),
        sub_2404FA028(&qword_256FFE9C0, type metadata accessor for TranscriptProtoQueryResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryResults), result = sub_2408E5A5C(), !v4))
  {
    result = sub_240479B18((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      v9 = v3[2];
      v10 = HIBYTE(v9) & 0xF;
      if ((v9 & 0x2000000000000000) == 0)
        v10 = v3[1] & 0xFFFFFFFFFFFFLL;
      if (v10)
        sub_2408E5A38();
      type metadata accessor for TranscriptProtoQueryStepResults(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_240479B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t StepResults;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  sub_2403A9210(a1 + *(int *)(StepResults + 24), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoQueryStepResults.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryStepResults, &qword_256FFE9C8, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
}

uint64_t sub_240479CAC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v3;
  uint64_t v4;
  uint64_t result;

  v3 = (char *)a2 + *(int *)(a1 + 24);
  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = MEMORY[0x24BEE4AF8];
  a2[1] = 0;
  a2[2] = 0xE000000000000000;
  return result;
}

unint64_t sub_240479D20()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240479D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryStepResults.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240479D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryStepResults.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240479D64()
{
  sub_2404FA028(&qword_257000990, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
  return sub_2408E5828();
}

uint64_t sub_240479DB4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF92F8, (uint64_t)qword_256FFD8D8, a1);
}

uint64_t sub_240479DD0()
{
  sub_2404FA028(&qword_256FFF7F0, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
  return sub_2408E599C();
}

uint64_t sub_240479E10()
{
  sub_2404FA028(&qword_256FFF7F0, type metadata accessor for TranscriptProtoQueryStepResults, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryStepResults);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoResponseDialog.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_240479E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD8F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD8F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "fullPrint";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "fullSpeak";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "supportingPrint";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "supportingSpeak";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoResponseDialog._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9300, (uint64_t)qword_256FFD8F0, a1);
}

uint64_t TranscriptProtoResponseDialog.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2408E593C();
          break;
        case 2:
        case 3:
        case 4:
          sub_2408E5930();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoResponseDialog.traverse<A>(visitor:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = *v0;
  v3 = v0[1];
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v4 || (result = sub_2408E5A38(), !v1))
  {
    if (v0[3])
      result = sub_2408E5A38();
    if (!v1)
    {
      if (v0[5])
        sub_2408E5A38();
      if (v0[7])
        sub_2408E5A38();
      type metadata accessor for TranscriptProtoResponseDialog(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t TranscriptProtoResponseDialog.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoResponseDialog, &qword_256FFE9D0, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
}

uint64_t sub_24047A26C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  return result;
}

unint64_t sub_24047A2A8()
{
  return 0xD000000000000019;
}

uint64_t sub_24047A2C4()
{
  return TranscriptProtoResponseDialog.decodeMessage<A>(decoder:)();
}

uint64_t sub_24047A2D8()
{
  return TranscriptProtoResponseDialog.traverse<A>(visitor:)();
}

uint64_t sub_24047A2EC()
{
  sub_2404FA028(&qword_257000988, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
  return sub_2408E5828();
}

uint64_t sub_24047A33C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9300, (uint64_t)qword_256FFD8F0, a1);
}

uint64_t sub_24047A358()
{
  sub_2404FA028(&qword_256FFF808, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
  return sub_2408E599C();
}

uint64_t sub_24047A398()
{
  sub_2404FA028(&qword_256FFF808, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoResponseOutput.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_24047A408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD908);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD908);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "visualOutput";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "printedDialogOutput";
  *(_QWORD *)(v11 + 8) = 19;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "spokenDialogOutput";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "responseType";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "resultStatementIds";
  *(_QWORD *)(v16 + 8) = 18;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoResponseOutput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9308, (uint64_t)qword_256FFD908, a1);
}

uint64_t TranscriptProtoResponseOutput.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for TranscriptProtoVisualOutput(0);
          sub_2404FA028(&qword_256FFE9D8, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoResponseOutput, type metadata accessor for TranscriptProtoDialogType, &qword_256FFF8A8, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
          goto LABEL_6;
        case 3:
          v12 = v11;
          sub_2404557D8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoResponseOutput, type metadata accessor for TranscriptProtoDialogType, &qword_256FFF8A8, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
          goto LABEL_6;
        case 4:
          sub_2404EF6F4();
          v12 = v11;
          sub_2408E58A0();
          goto LABEL_6;
        case 5:
          type metadata accessor for TranscriptProtoStatementID(0);
          sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
LABEL_5:
          v12 = v11;
          sub_2408E5960();
LABEL_6:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoResponseOutput.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v3 + 16)
    || (type metadata accessor for TranscriptProtoVisualOutput(0),
        sub_2404FA028(&qword_256FFE9D8, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput), result = sub_2408E5A5C(), !v4))
  {
    result = sub_24047A9B0(v3, a1, a2, a3);
    if (!v4)
    {
      sub_24047AB24(v3, a1, a2, a3);
      if (*(_BYTE *)(v3 + 8))
      {
        sub_2404EF6F4();
        sub_2408E59E4();
      }
      if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
      {
        type metadata accessor for TranscriptProtoStatementID(0);
        sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
        sub_2408E5A5C();
      }
      type metadata accessor for TranscriptProtoResponseOutput(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_24047A9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoDialogType(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoResponseOutput(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFA3F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3F8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoDialogType);
  sub_2404FA028(&qword_256FFF8A8, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoDialogType);
}

uint64_t sub_24047AB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoDialogType(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoResponseOutput(0);
  sub_2403A9210(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_256FFA3F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3F8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoDialogType);
  sub_2404FA028(&qword_256FFF8A8, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoDialogType);
}

uint64_t TranscriptProtoResponseOutput.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoResponseOutput, &qword_256FFE9F0, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
}

uint64_t sub_24047ACB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v8;

  v4 = a2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for TranscriptProtoDialogType(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(a2 + *(int *)(a1 + 32), 1, 1, v5);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  v8 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)a2 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v8;
  return result;
}

unint64_t sub_24047AD50()
{
  return 0xD000000000000019;
}

uint64_t sub_24047AD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoResponseOutput.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24047AD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoResponseOutput.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24047AD94()
{
  sub_2404FA028(&qword_257000980, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
  return sub_2408E5828();
}

uint64_t sub_24047ADE4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9308, (uint64_t)qword_256FFD908, a1);
}

uint64_t sub_24047AE00()
{
  sub_2404FA028(&qword_256FFF820, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
  return sub_2408E599C();
}

uint64_t sub_24047AE40()
{
  sub_2404FA028(&qword_256FFF820, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoVisualOutput.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_24047AEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD920);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD920);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "liveActivity";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "inAppResponse";
  *(_QWORD *)(v11 + 8) = 13;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "systemSnippet";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "pluginSnippet";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoVisualOutput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9310, (uint64_t)qword_256FFD920, a1);
}

uint64_t TranscriptProtoVisualOutput.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_24047B17C(v5, a1, a2, a3);
          break;
        case 2:
          sub_24047B5BC(v5, a1, a2, a3);
          break;
        case 3:
          sub_24047BA00(v5, a1, a2, a3);
          break;
        case 5:
          sub_24047BE44(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24047B17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE9F8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001030);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE9F8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE9F8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoVisualOutputType);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutputType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutputType);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001030);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF848, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001030);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001030);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001030);
    return sub_2403A97FC((uint64_t)v33, &qword_257001030);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001030);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE9F8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24047B5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE9F8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001038);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE9F8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE9F8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoVisualOutputType);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutputType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001038);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutputType);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF860, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001038);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001038);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001038);
    return sub_2403A97FC((uint64_t)v33, &qword_257001038);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001038);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE9F8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24047BA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE9F8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001040);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE9F8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE9F8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoVisualOutputType);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutputType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001040);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutputType);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF878, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001040);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001040);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001040);
    return sub_2403A97FC((uint64_t)v33, &qword_257001040);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001040);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE9F8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24047BE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE9F8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001048);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFE9F8);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFE9F8);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoVisualOutputType);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutputType);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001048);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoVisualOutputType);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF890, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001048);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001048);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001048);
    return sub_2403A97FC((uint64_t)v33, &qword_257001048);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001048);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFE9F8);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoVisualOutput.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE9F8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFE9F8);
  v4 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_24047C354 + 4 * byte_2408EB968[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoVisualOutput(0);
  return sub_2408E578C();
}

uint64_t sub_24047C420(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE9F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoLiveActivityOutputPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE9F8);
  v8 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE9F8);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
    sub_2404FA028(&qword_256FFF848, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoVisualOutputType);
  __break(1u);
  return result;
}

uint64_t sub_24047C5BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE9F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoInAppResponseOutputPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE9F8);
  v8 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE9F8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
    sub_2404FA028(&qword_256FFF860, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoVisualOutputType);
  __break(1u);
  return result;
}

uint64_t sub_24047C75C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE9F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemSnippetOutputPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE9F8);
  v8 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE9F8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
    sub_2404FA028(&qword_256FFF878, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoVisualOutputType);
  __break(1u);
  return result;
}

uint64_t sub_24047C8FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE9F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPluginSnippetOutputPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFE9F8);
  v8 = type metadata accessor for TranscriptProtoVisualOutputType(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFE9F8);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
    sub_2404FA028(&qword_256FFF890, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoVisualOutputType);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoVisualOutput.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoVisualOutput, &qword_256FFEA00, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
}

uint64_t sub_24047CABC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoVisualOutputType, a1);
}

unint64_t sub_24047CAC8()
{
  return 0xD000000000000017;
}

uint64_t sub_24047CAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoVisualOutput.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24047CAF8()
{
  return TranscriptProtoVisualOutput.traverse<A>(visitor:)();
}

uint64_t sub_24047CB0C()
{
  sub_2404FA028(&qword_257000978, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
  return sub_2408E5828();
}

uint64_t sub_24047CB5C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9310, (uint64_t)qword_256FFD920, a1);
}

uint64_t sub_24047CB78()
{
  sub_2404FA028(&qword_256FFE9D8, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
  return sub_2408E599C();
}

uint64_t sub_24047CBB8()
{
  sub_2404FA028(&qword_256FFE9D8, type metadata accessor for TranscriptProtoVisualOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoVisualOutput);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoLiveActivityOutputPayload.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_24047CC28(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD938, 1, (uint64_t)"sessionId", 9);
}

uint64_t static TranscriptProtoLiveActivityOutputPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9318, (uint64_t)qword_256FFD938, a1);
}

uint64_t TranscriptProtoLiveActivityOutputPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoLiveActivityOutputPayload.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoLiveActivityOutputPayload);
}

uint64_t static TranscriptProtoLiveActivityOutputPayload.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoLiveActivityOutputPayload) & 1;
}

uint64_t TranscriptProtoLiveActivityOutputPayload.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoLiveActivityOutputPayload, &qword_256FFEA08, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
}

unint64_t sub_24047CCD4()
{
  return 0xD000000000000024;
}

uint64_t sub_24047CCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoLiveActivityOutputPayload.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24047CD04()
{
  sub_2404FA028(&qword_257000970, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
  return sub_2408E5828();
}

uint64_t sub_24047CD54@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9318, (uint64_t)qword_256FFD938, a1);
}

uint64_t sub_24047CD70()
{
  sub_2404FA028(&qword_256FFF848, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
  return sub_2408E599C();
}

uint64_t sub_24047CDB0()
{
  sub_2404FA028(&qword_256FFF848, type metadata accessor for TranscriptProtoLiveActivityOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityOutputPayload);
  return sub_2408E59A8();
}

uint64_t sub_24047CE00(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoLiveActivityOutputPayload) & 1;
}

unint64_t static TranscriptProtoInAppResponseOutputPayload.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_24047CE3C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD950, 1, (uint64_t)"bundleId", 8);
}

uint64_t static TranscriptProtoInAppResponseOutputPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9320, (uint64_t)qword_256FFD950, a1);
}

uint64_t TranscriptProtoInAppResponseOutputPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoInAppResponseOutputPayload.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoInAppResponseOutputPayload);
}

uint64_t static TranscriptProtoInAppResponseOutputPayload.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoInAppResponseOutputPayload) & 1;
}

uint64_t TranscriptProtoInAppResponseOutputPayload.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoInAppResponseOutputPayload, &qword_256FFEA10, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
}

unint64_t sub_24047CEE8()
{
  return 0xD000000000000025;
}

uint64_t sub_24047CF04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoInAppResponseOutputPayload.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24047CF18()
{
  sub_2404FA028(&qword_257000968, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
  return sub_2408E5828();
}

uint64_t sub_24047CF68@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9320, (uint64_t)qword_256FFD950, a1);
}

uint64_t sub_24047CF84()
{
  sub_2404FA028(&qword_256FFF860, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
  return sub_2408E599C();
}

uint64_t sub_24047CFC4()
{
  sub_2404FA028(&qword_256FFF860, type metadata accessor for TranscriptProtoInAppResponseOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoInAppResponseOutputPayload);
  return sub_2408E59A8();
}

uint64_t sub_24047D014(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoInAppResponseOutputPayload) & 1;
}

unint64_t static TranscriptProtoSystemSnippetOutputPayload.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_24047D050(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD968, 1, (uint64_t)"snippetPayload", 14);
}

uint64_t static TranscriptProtoSystemSnippetOutputPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9328, (uint64_t)qword_256FFD968, a1);
}

uint64_t TranscriptProtoSystemSnippetOutputPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A8]);
}

void TranscriptProtoSystemSnippetOutputPayload.traverse<A>(visitor:)()
{
  sub_2404852F8();
}

uint64_t static TranscriptProtoSystemSnippetOutputPayload.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_2404E0934(a1, a2, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload) & 1;
}

uint64_t TranscriptProtoSystemSnippetOutputPayload.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, &qword_256FFEA18, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
}

unint64_t sub_24047D0FC()
{
  return 0xD000000000000025;
}

uint64_t sub_24047D118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoControlPayload.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_24047D12C()
{
  TranscriptProtoSystemSnippetOutputPayload.traverse<A>(visitor:)();
}

uint64_t sub_24047D140()
{
  sub_2404FA028(&qword_257000960, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
  return sub_2408E5828();
}

uint64_t sub_24047D190@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9328, (uint64_t)qword_256FFD968, a1);
}

uint64_t sub_24047D1AC()
{
  sub_2404FA028(&qword_256FFF878, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
  return sub_2408E599C();
}

uint64_t sub_24047D1EC()
{
  sub_2404FA028(&qword_256FFF878, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemSnippetOutputPayload);
  return sub_2408E59A8();
}

uint64_t sub_24047D23C(uint64_t *a1, uint64_t a2)
{
  return sub_2404E0934(a1, a2, type metadata accessor for TranscriptProtoSystemSnippetOutputPayload) & 1;
}

unint64_t static TranscriptProtoPluginSnippetOutputPayload.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_24047D278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD980);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD980);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "pluginModelData";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "bundleId";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPluginSnippetOutputPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9330, (uint64_t)qword_256FFD980, a1);
}

uint64_t TranscriptProtoPluginSnippetOutputPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240484ED0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A8]);
}

void TranscriptProtoPluginSnippetOutputPayload.traverse<A>(visitor:)()
{
  sub_240484F90();
}

uint64_t static TranscriptProtoPluginSnippetOutputPayload.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_2404D3268(a1, a2, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload) & 1;
}

uint64_t TranscriptProtoPluginSnippetOutputPayload.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, &qword_256FFEA20, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
}

unint64_t sub_24047D45C()
{
  return 0xD000000000000025;
}

uint64_t sub_24047D478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPluginSnippetPayload.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_24047D48C()
{
  TranscriptProtoPluginSnippetOutputPayload.traverse<A>(visitor:)();
}

uint64_t sub_24047D4A0()
{
  sub_2404FA028(&qword_257000958, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
  return sub_2408E5828();
}

uint64_t sub_24047D4F0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9330, (uint64_t)qword_256FFD980, a1);
}

uint64_t sub_24047D50C()
{
  sub_2404FA028(&qword_256FFF890, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
  return sub_2408E599C();
}

uint64_t sub_24047D54C()
{
  sub_2404FA028(&qword_256FFF890, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetOutputPayload);
  return sub_2408E59A8();
}

uint64_t sub_24047D59C(uint64_t *a1, uint64_t a2)
{
  return sub_2404D3268(a1, a2, type metadata accessor for TranscriptProtoPluginSnippetOutputPayload) & 1;
}

unint64_t static TranscriptProtoDialogType.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_24047D5D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFD998);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFD998);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "staticText";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "sonicText";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "generatedText";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "unableToGenerate";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "suppressed";
  *(_QWORD *)(v16 + 8) = 10;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoDialogType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9338, (uint64_t)qword_256FFD998, a1);
}

uint64_t TranscriptProtoDialogType.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_24047D904(v5, a1, a2, a3);
          break;
        case 2:
          sub_24047DD44(v5, a1, a2, a3);
          break;
        case 3:
          sub_24047E188(v5, a1, a2, a3);
          break;
        case 4:
          sub_24047E5CC(v5, a1, a2, a3);
          break;
        case 5:
          sub_24047EA10(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24047D904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoStaticText(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001000);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3F0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3F0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoDialogFormat);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoDialogFormat);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoDialogFormat);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001000);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoStaticText);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoStaticText);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF8C0, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001000);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001000);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001000);
    return sub_2403A97FC((uint64_t)v33, &qword_257001000);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoStaticText);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001000);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3F0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoStaticText);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24047DD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSonicText(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001008);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3F0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3F0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoDialogFormat);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoDialogFormat);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001008);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSonicText);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSonicText);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoDialogFormat);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF8D8, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001008);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001008);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001008);
    return sub_2403A97FC((uint64_t)v33, &qword_257001008);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSonicText);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001008);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3F0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSonicText);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24047E188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoGeneratedText(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001010);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3F0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3F0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoDialogFormat);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoDialogFormat);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001010);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoGeneratedText);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoGeneratedText);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoDialogFormat);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF8F0, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001010);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001010);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001010);
    return sub_2403A97FC((uint64_t)v33, &qword_257001010);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoGeneratedText);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001010);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3F0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoGeneratedText);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24047E5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoUnableToGenerate(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001018);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3F0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3F0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoDialogFormat);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoDialogFormat);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001018);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoUnableToGenerate);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoUnableToGenerate);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoDialogFormat);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF908, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001018);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001018);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001018);
    return sub_2403A97FC((uint64_t)v33, &qword_257001018);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoUnableToGenerate);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001018);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3F0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoUnableToGenerate);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24047EA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSuppressed(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoDialogFormat(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001020);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA3F0);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA3F0);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoDialogFormat);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoDialogFormat);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257001020);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSuppressed);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSuppressed);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoDialogFormat);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF920, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257001020);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257001020);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257001020);
    return sub_2403A97FC((uint64_t)v33, &qword_257001020);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSuppressed);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257001020);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA3F0);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSuppressed);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoDialogType.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFA3F0);
  v4 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_24047EF20 + 4 * byte_2408EB971[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoDialogType(0);
  return sub_2408E578C();
}

uint64_t sub_24047F008(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStaticText(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3F0);
  v8 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3F0);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStaticText);
    sub_2404FA028(&qword_256FFF8C0, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStaticText);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoDialogFormat);
  __break(1u);
  return result;
}

uint64_t sub_24047F1A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSonicText(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3F0);
  v8 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3F0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSonicText);
    sub_2404FA028(&qword_256FFF8D8, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSonicText);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoDialogFormat);
  __break(1u);
  return result;
}

uint64_t sub_24047F344(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoGeneratedText(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3F0);
  v8 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3F0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoGeneratedText);
    sub_2404FA028(&qword_256FFF8F0, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoGeneratedText);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoDialogFormat);
  __break(1u);
  return result;
}

uint64_t sub_24047F4E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUnableToGenerate(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3F0);
  v8 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3F0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUnableToGenerate);
    sub_2404FA028(&qword_256FFF908, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoUnableToGenerate);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoDialogFormat);
  __break(1u);
  return result;
}

uint64_t sub_24047F684(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSuppressed(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA3F0);
  v8 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA3F0);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSuppressed);
    sub_2404FA028(&qword_256FFF920, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSuppressed);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoDialogFormat);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoDialogType.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoDialogType, &qword_256FFEA28, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
}

uint64_t sub_24047F844@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoDialogFormat, a1);
}

unint64_t sub_24047F850()
{
  return 0xD000000000000015;
}

uint64_t sub_24047F86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoDialogType.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24047F880()
{
  return TranscriptProtoDialogType.traverse<A>(visitor:)();
}

uint64_t sub_24047F894()
{
  sub_2404FA028(&qword_257000950, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
  return sub_2408E5828();
}

uint64_t sub_24047F8E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9338, (uint64_t)qword_256FFD998, a1);
}

uint64_t sub_24047F900()
{
  sub_2404FA028(&qword_256FFF8A8, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
  return sub_2408E599C();
}

uint64_t sub_24047F940()
{
  sub_2404FA028(&qword_256FFF8A8, type metadata accessor for TranscriptProtoDialogType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDialogType);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoStaticText.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_24047F9B0(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD9B0, 1, (uint64_t)"text", 4);
}

uint64_t static TranscriptProtoStaticText._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9340, (uint64_t)qword_256FFD9B0, a1);
}

uint64_t TranscriptProtoStaticText.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoStaticText.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoStaticText);
}

uint64_t static TranscriptProtoStaticText.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoStaticText) & 1;
}

uint64_t TranscriptProtoStaticText.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoStaticText, &qword_256FFEA30, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
}

unint64_t sub_24047FA5C()
{
  return 0xD000000000000015;
}

uint64_t sub_24047FA78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoStaticText.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24047FA8C()
{
  sub_2404FA028(&qword_257000948, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
  return sub_2408E5828();
}

uint64_t sub_24047FADC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9340, (uint64_t)qword_256FFD9B0, a1);
}

uint64_t sub_24047FAF8()
{
  sub_2404FA028(&qword_256FFF8C0, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
  return sub_2408E599C();
}

uint64_t sub_24047FB38()
{
  sub_2404FA028(&qword_256FFF8C0, type metadata accessor for TranscriptProtoStaticText, (uint64_t)&protocol conformance descriptor for TranscriptProtoStaticText);
  return sub_2408E59A8();
}

uint64_t sub_24047FB88(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoStaticText) & 1;
}

unint64_t static TranscriptProtoSonicText.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_24047FBC4(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD9C8, 1, (uint64_t)"text", 4);
}

uint64_t static TranscriptProtoSonicText._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9348, (uint64_t)qword_256FFD9C8, a1);
}

uint64_t TranscriptProtoSonicText.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoSonicText.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSonicText);
}

uint64_t static TranscriptProtoSonicText.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoSonicText) & 1;
}

uint64_t TranscriptProtoSonicText.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSonicText, &qword_256FFEA38, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
}

uint64_t sub_24047FC70@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

unint64_t sub_24047FCA0()
{
  return 0xD000000000000014;
}

uint64_t sub_24047FCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSonicText.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24047FCD0()
{
  sub_2404FA028(&qword_257000940, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
  return sub_2408E5828();
}

uint64_t sub_24047FD20@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9348, (uint64_t)qword_256FFD9C8, a1);
}

uint64_t sub_24047FD3C()
{
  sub_2404FA028(&qword_256FFF8D8, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
  return sub_2408E599C();
}

uint64_t sub_24047FD7C()
{
  sub_2404FA028(&qword_256FFF8D8, type metadata accessor for TranscriptProtoSonicText, (uint64_t)&protocol conformance descriptor for TranscriptProtoSonicText);
  return sub_2408E59A8();
}

uint64_t sub_24047FDCC(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoSonicText) & 1;
}

unint64_t static TranscriptProtoGeneratedText.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_24047FE08(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFD9E0, 1, (uint64_t)"text", 4);
}

uint64_t static TranscriptProtoGeneratedText._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9350, (uint64_t)qword_256FFD9E0, a1);
}

uint64_t TranscriptProtoGeneratedText.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoGeneratedText.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoGeneratedText);
}

uint64_t static TranscriptProtoGeneratedText.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoGeneratedText) & 1;
}

uint64_t TranscriptProtoGeneratedText.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoGeneratedText, &qword_256FFEA40, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
}

unint64_t sub_24047FEB4()
{
  return 0xD000000000000018;
}

uint64_t sub_24047FED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoGeneratedText.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24047FEE4()
{
  sub_2404FA028(&qword_257000938, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
  return sub_2408E5828();
}

uint64_t sub_24047FF34@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9350, (uint64_t)qword_256FFD9E0, a1);
}

uint64_t sub_24047FF50()
{
  sub_2404FA028(&qword_256FFF8F0, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
  return sub_2408E599C();
}

uint64_t sub_24047FF90()
{
  sub_2404FA028(&qword_256FFF8F0, type metadata accessor for TranscriptProtoGeneratedText, (uint64_t)&protocol conformance descriptor for TranscriptProtoGeneratedText);
  return sub_2408E59A8();
}

uint64_t sub_24047FFE0(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoGeneratedText) & 1;
}

unint64_t static TranscriptProtoUnableToGenerate.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_24048001C(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFD9F8);
}

uint64_t static TranscriptProtoUnableToGenerate._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9358, (uint64_t)qword_256FFD9F8, a1);
}

uint64_t TranscriptProtoUnableToGenerate.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoUnableToGenerate.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoUnableToGenerate, &qword_256FFEA48, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
}

unint64_t sub_240480078()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240480094()
{
  sub_2404FA028(&qword_257000930, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
  return sub_2408E5828();
}

uint64_t sub_2404800E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9358, (uint64_t)qword_256FFD9F8, a1);
}

uint64_t sub_240480100()
{
  sub_2404FA028(&qword_256FFF908, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
  return sub_2408E599C();
}

uint64_t sub_240480140()
{
  sub_2404FA028(&qword_256FFF908, type metadata accessor for TranscriptProtoUnableToGenerate, (uint64_t)&protocol conformance descriptor for TranscriptProtoUnableToGenerate);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSuppressed.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_2404801AC(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFDA10);
}

uint64_t static TranscriptProtoSuppressed._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9360, (uint64_t)qword_256FFDA10, a1);
}

uint64_t TranscriptProtoSuppressed.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoSuppressed.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSuppressed, &qword_256FFEA50, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
}

unint64_t sub_240480208()
{
  return 0xD000000000000015;
}

uint64_t sub_240480224()
{
  sub_2404FA028(&qword_257000928, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
  return sub_2408E5828();
}

uint64_t sub_240480274@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9360, (uint64_t)qword_256FFDA10, a1);
}

uint64_t sub_240480290()
{
  sub_2404FA028(&qword_256FFF920, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
  return sub_2408E599C();
}

uint64_t sub_2404802D0()
{
  sub_2404FA028(&qword_256FFF920, type metadata accessor for TranscriptProtoSuppressed, (uint64_t)&protocol conformance descriptor for TranscriptProtoSuppressed);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoResponseManifest.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_24048033C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDA28);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDA28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EAD90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "parameters";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "dialog";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "visual";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "templateId";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "templateLocation";
  *((_QWORD *)v17 + 1) = 16;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "useTemplateAsFallback";
  *((_QWORD *)v19 + 1) = 21;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "dialogPresentationHint";
  *((_QWORD *)v21 + 1) = 22;
  v21[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoResponseManifest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9368, (uint64_t)qword_256FFDA28, a1);
}

uint64_t TranscriptProtoResponseManifest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for TranscriptProtoResponseParameter(0);
          sub_2404FA028(&qword_256FFEA58, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
          sub_2408E5960();
          break;
        case 2:
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoResponseManifest, type metadata accessor for TranscriptProtoResponseDialog, &qword_256FFF808, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
          break;
        case 3:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoResponseManifest, type metadata accessor for TranscriptProtoResponseVisual, &qword_256FFF960, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
          break;
        case 4:
        case 5:
          type metadata accessor for TranscriptProtoResponseManifest(0);
          sub_2408E5930();
          break;
        case 6:
          type metadata accessor for TranscriptProtoResponseManifest(0);
          sub_2408E587C();
          break;
        case 7:
          sub_2404807C8();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2404807C8()
{
  type metadata accessor for TranscriptProtoResponseManifest(0);
  sub_2404F9FA0();
  return sub_2408E5894();
}

uint64_t TranscriptProtoResponseManifest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v3 + 16)
    || (type metadata accessor for TranscriptProtoResponseParameter(0),
        sub_2404FA028(&qword_256FFEA58, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter), result = sub_2408E5A5C(), !v4))
  {
    result = sub_2404809E0(v3, a1, a2, a3);
    if (!v4)
    {
      sub_240480B54(v3, a1, a2, a3);
      sub_2404C7E70(v3, a1, a2, a3, type metadata accessor for TranscriptProtoResponseManifest);
      sub_2404BDCD0(v3, a1, a2, a3, type metadata accessor for TranscriptProtoResponseManifest);
      sub_240480CC8(v3);
      sub_240480D3C(v3);
      type metadata accessor for TranscriptProtoResponseManifest(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_2404809E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoResponseDialog(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoResponseManifest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA408);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA408);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoResponseDialog);
  sub_2404FA028(&qword_256FFF808, type metadata accessor for TranscriptProtoResponseDialog, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseDialog);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoResponseDialog);
}

uint64_t sub_240480B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoResponseVisual(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoResponseManifest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA410);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA410);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoResponseVisual);
  sub_2404FA028(&qword_256FFF960, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoResponseVisual);
}

uint64_t sub_240480CC8(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for TranscriptProtoResponseManifest(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 36)) != 2)
    return sub_2408E59D8();
  return result;
}

uint64_t sub_240480D3C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for TranscriptProtoResponseManifest(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 40)) != 2)
  {
    sub_2404F9FA0();
    return sub_2408E59E4();
  }
  return result;
}

uint64_t TranscriptProtoResponseManifest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoResponseManifest, &qword_256FFEA60, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
}

uint64_t sub_240480DE8@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;

  v4 = (char *)a2 + a1[5];
  v5 = type metadata accessor for TranscriptProtoResponseDialog(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + a1[6];
  v7 = type metadata accessor for TranscriptProtoResponseVisual(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = a1[8];
  v9 = (_QWORD *)((char *)a2 + a1[7]);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)((char *)a2 + v8);
  *v10 = 0;
  v10[1] = 0;
  v11 = a1[10];
  *((_BYTE *)a2 + a1[9]) = 2;
  *((_BYTE *)a2 + v11) = 2;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_240480EA4()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240480EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoResponseManifest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240480ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoResponseManifest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240480EE8()
{
  sub_2404FA028(&qword_257000920, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
  return sub_2408E5828();
}

uint64_t sub_240480F38@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9368, (uint64_t)qword_256FFDA28, a1);
}

uint64_t sub_240480F54()
{
  sub_2404FA028(&qword_256FFF938, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
  return sub_2408E599C();
}

uint64_t sub_240480F94()
{
  sub_2404FA028(&qword_256FFF938, type metadata accessor for TranscriptProtoResponseManifest, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseManifest);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoResponseParameter.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_240481004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDA40);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDA40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "type";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "required";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "format";
  *((_QWORD *)v17 + 1) = 6;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "profanityFilter";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoResponseParameter._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9370, (uint64_t)qword_256FFDA40, a1);
}

uint64_t TranscriptProtoResponseParameter.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2408E593C();
          break;
        case 2:
          sub_2408E58AC();
          break;
        case 3:
        case 5:
          sub_2408E5930();
          break;
        case 4:
        case 6:
          sub_2408E587C();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoResponseParameter.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    result = sub_2404814E4(v0);
    if (!v1)
    {
      if (*(_QWORD *)(v0 + 40))
        sub_2408E5A38();
      if (*(_BYTE *)(v0 + 48) != 2)
        sub_2408E59D8();
      if (*(_QWORD *)(v0 + 64))
        sub_2408E5A38();
      if (*(_BYTE *)(v0 + 72) != 2)
        sub_2408E59D8();
      type metadata accessor for TranscriptProtoResponseParameter(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_2404814E4(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 24);
  if (v1 >> 60 != 15)
  {
    v2 = *(_QWORD *)(result + 16);
    sub_240360070(v2, v1);
    sub_2408E59F0();
    return sub_2403C2424(v2, v1);
  }
  return result;
}

uint64_t TranscriptProtoResponseParameter.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoResponseParameter, &qword_256FFEA68, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
}

uint64_t sub_240481594@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_OWORD *)(a1 + 16) = xmmword_2408EA6D0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 48) = 2;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0;
  *(_BYTE *)(a1 + 72) = 2;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  return result;
}

unint64_t sub_2404815E4()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_240481600()
{
  return TranscriptProtoResponseParameter.decodeMessage<A>(decoder:)();
}

uint64_t sub_240481614()
{
  return TranscriptProtoResponseParameter.traverse<A>(visitor:)();
}

uint64_t sub_240481628()
{
  sub_2404FA028(&qword_257000918, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
  return sub_2408E5828();
}

uint64_t sub_240481678@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9370, (uint64_t)qword_256FFDA40, a1);
}

uint64_t sub_240481694()
{
  sub_2404FA028(&qword_256FFEA58, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
  return sub_2408E599C();
}

uint64_t sub_2404816D4()
{
  sub_2404FA028(&qword_256FFEA58, type metadata accessor for TranscriptProtoResponseParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseParameter);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoResponseVisual.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_240481744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDA58);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDA58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 4;
  *(_QWORD *)v7 = "views";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 5;
  *(_QWORD *)v11 = "labels";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoResponseVisual._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9378, (uint64_t)qword_256FFDA58, a1);
}

uint64_t TranscriptProtoResponseVisual.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 5)
        break;
      if (result == 4)
      {
        type metadata accessor for TranscriptProtoUIType(0);
        sub_2404FA028(&qword_256FFEA70, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    type metadata accessor for TranscriptProtoUILabel(0);
    sub_2404FA028(&qword_256FFEA78, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
LABEL_5:
    sub_2408E5960();
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoResponseVisual.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*v0 + 16)
    || (type metadata accessor for TranscriptProtoUIType(0),
        sub_2404FA028(&qword_256FFEA70, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType), result = sub_2408E5A5C(), !v1))
  {
    if (!*(_QWORD *)(v0[1] + 16)
      || (type metadata accessor for TranscriptProtoUILabel(0),
          sub_2404FA028(&qword_256FFEA78, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel), result = sub_2408E5A5C(), !v1))
    {
      type metadata accessor for TranscriptProtoResponseVisual(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t static TranscriptProtoResponseVisual.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404DF384(a1, a2, sub_2408BDA14, sub_2408BDDC4, type metadata accessor for TranscriptProtoResponseVisual) & 1;
}

uint64_t TranscriptProtoResponseVisual.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoResponseVisual, &qword_256FFEA80, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
}

uint64_t sub_240481B50@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  v3 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v3;
  return result;
}

unint64_t sub_240481B84()
{
  return 0xD000000000000019;
}

uint64_t sub_240481BA0()
{
  return TranscriptProtoResponseVisual.decodeMessage<A>(decoder:)();
}

uint64_t sub_240481BB4()
{
  return TranscriptProtoResponseVisual.traverse<A>(visitor:)();
}

uint64_t sub_240481BC8()
{
  sub_2404FA028(&qword_257000910, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
  return sub_2408E5828();
}

uint64_t sub_240481C18@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9378, (uint64_t)qword_256FFDA58, a1);
}

uint64_t sub_240481C34()
{
  sub_2404FA028(&qword_256FFF960, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
  return sub_2408E599C();
}

uint64_t sub_240481C74()
{
  sub_2404FA028(&qword_256FFF960, type metadata accessor for TranscriptProtoResponseVisual, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseVisual);
  return sub_2408E59A8();
}

uint64_t sub_240481CC4(_QWORD *a1, char *a2)
{
  return sub_2404DF384(a1, a2, sub_2408BDA14, sub_2408BDDC4, type metadata accessor for TranscriptProtoResponseVisual) & 1;
}

unint64_t static TranscriptProtoUIType.protoMessageName.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_240481D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDA70);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDA70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "archiveView";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "liveActivity";
  *(_QWORD *)(v11 + 8) = 12;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "pluginSnippet";
  *((_QWORD *)v13 + 1) = 13;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "controlSnippet";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoUIType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9380, (uint64_t)qword_256FFDA70, a1);
}

uint64_t TranscriptProtoUIType.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240481FDC(v5, a1, a2, a3);
          break;
        case 2:
          sub_24048241C(v5, a1, a2, a3);
          break;
        case 4:
          sub_240482860(v5, a1, a2, a3);
          break;
        case 5:
          sub_240482CA4(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240481FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEA88);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoUitype(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FC0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEA88);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEA88);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoUitype);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoUitype);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoUitype);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000FC0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoArchiveViewPayload);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoArchiveViewPayload);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF9B0, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000FC0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000FC0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000FC0);
    return sub_2403A97FC((uint64_t)v33, &qword_257000FC0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoArchiveViewPayload);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000FC0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEA88);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoArchiveViewPayload);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24048241C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEA88);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoUitype(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FC8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEA88);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEA88);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoUitype);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoUitype);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000FC8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoLiveActivityPayload);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoLiveActivityPayload);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoUitype);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF9C8, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000FC8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000FC8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000FC8);
    return sub_2403A97FC((uint64_t)v33, &qword_257000FC8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoLiveActivityPayload);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000FC8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEA88);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoLiveActivityPayload);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240482860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoPluginSnippetPayload(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEA88);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoUitype(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FD0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEA88);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEA88);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoUitype);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoUitype);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000FD0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoPluginSnippetPayload);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoPluginSnippetPayload);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoUitype);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF9E0, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000FD0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000FD0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000FD0);
    return sub_2403A97FC((uint64_t)v33, &qword_257000FD0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoPluginSnippetPayload);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000FD0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEA88);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoPluginSnippetPayload);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240482CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoControlPayload(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEA88);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoUitype(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FD8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEA88);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEA88);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoUitype);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoUitype);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000FD8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoControlPayload);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoControlPayload);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoUitype);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF9F8, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000FD8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000FD8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000FD8);
    return sub_2403A97FC((uint64_t)v33, &qword_257000FD8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoControlPayload);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000FD8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEA88);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoControlPayload);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoUIType.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEA88);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFEA88);
  v4 = type metadata accessor for TranscriptProtoUitype(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_2404831B4 + 4 * byte_2408EB988[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoUIType(0);
  return sub_2408E578C();
}

uint64_t sub_240483280(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEA88);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoArchiveViewPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEA88);
  v8 = type metadata accessor for TranscriptProtoUitype(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEA88);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoArchiveViewPayload);
    sub_2404FA028(&qword_256FFF9B0, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoArchiveViewPayload);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoUitype);
  __break(1u);
  return result;
}

uint64_t sub_24048341C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEA88);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoLiveActivityPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEA88);
  v8 = type metadata accessor for TranscriptProtoUitype(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEA88);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoLiveActivityPayload);
    sub_2404FA028(&qword_256FFF9C8, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoLiveActivityPayload);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoUitype);
  __break(1u);
  return result;
}

uint64_t sub_2404835BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEA88);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPluginSnippetPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEA88);
  v8 = type metadata accessor for TranscriptProtoUitype(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEA88);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPluginSnippetPayload);
    sub_2404FA028(&qword_256FFF9E0, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPluginSnippetPayload);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoUitype);
  __break(1u);
  return result;
}

uint64_t sub_24048375C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEA88);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoControlPayload(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEA88);
  v8 = type metadata accessor for TranscriptProtoUitype(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEA88);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoControlPayload);
    sub_2404FA028(&qword_256FFF9F8, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoControlPayload);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoUitype);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoUIType.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoUIType, &qword_256FFEA90, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
}

uint64_t sub_24048391C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoUitype, a1);
}

unint64_t sub_240483928()
{
  return 0xD000000000000011;
}

uint64_t sub_240483944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUIType.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240483958()
{
  return TranscriptProtoUIType.traverse<A>(visitor:)();
}

uint64_t sub_24048396C()
{
  sub_2404FA028(&qword_257000908, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
  return sub_2408E5828();
}

uint64_t sub_2404839BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9380, (uint64_t)qword_256FFDA70, a1);
}

uint64_t sub_2404839D8()
{
  sub_2404FA028(&qword_256FFEA70, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
  return sub_2408E599C();
}

uint64_t sub_240483A18()
{
  sub_2404FA028(&qword_256FFEA70, type metadata accessor for TranscriptProtoUIType, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIType);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoUILabel.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_240483A88(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDA88, 1, (uint64_t)"confirmationLabel", 17);
}

uint64_t static TranscriptProtoUILabel._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9388, (uint64_t)qword_256FFDA88, a1);
}

uint64_t TranscriptProtoUILabel.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404733C8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240483ADC);
}

uint64_t sub_240483ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v45 = a4;
  v44 = a3;
  v5 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v38 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (uint64_t)&v33 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FA8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TranscriptProtoLabel(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v33 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FB0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v33 - v23;
  v39 = v6;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v25((char *)&v33 - v23, 1, 1, v5);
  v36 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_257000FA8);
  v34 = v14;
  v35 = v13;
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v37 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_257000FA8);
  }
  else
  {
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoLabel);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoLabel);
    sub_2403A97FC((uint64_t)v24, &qword_257000FB0);
    v26 = v40;
    sub_2403A91CC((uint64_t)v17, v40, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    sub_2403A91CC(v26, (uint64_t)v24, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    v25(v24, 0, 1, v5);
  }
  v28 = (uint64_t)v41;
  v27 = v42;
  sub_2404FA028(&qword_256FFF998, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
  sub_2408E596C();
  if (v27)
    return sub_2403A97FC((uint64_t)v24, &qword_257000FB0);
  sub_2403A9210((uint64_t)v24, v28, &qword_257000FB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v28, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000FB0);
    return sub_2403A97FC(v28, &qword_257000FB0);
  }
  else
  {
    v30 = v28;
    v31 = v38;
    sub_2403A91CC(v30, v38, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    if (v37 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000FB0);
    v32 = v36;
    sub_2403A97FC(v36, &qword_257000FA8);
    sub_2403A91CC(v31, v32, type metadata accessor for TranscriptProtoUIConfirmationLabel);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v35);
  }
}

uint64_t TranscriptProtoUILabel.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240483ED0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240483F60, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUILabel);
}

uint64_t sub_240483ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  result = a4(v5, a1, a2, a3);
  if (!v6)
  {
    a5(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240483F60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FA8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_257000FA8);
  v8 = type metadata accessor for TranscriptProtoLabel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v4, &qword_257000FA8);
  sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUIConfirmationLabel);
  sub_2404FA028(&qword_256FFF998, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoUIConfirmationLabel);
}

uint64_t TranscriptProtoUILabel.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoUILabel, &qword_256FFEA98, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
}

uint64_t sub_2404840F4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoLabel, a1);
}

unint64_t sub_240484100()
{
  return 0xD000000000000012;
}

uint64_t sub_24048411C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUILabel.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240484130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUILabel.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240484144()
{
  sub_2404FA028(&qword_257000900, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
  return sub_2408E5828();
}

uint64_t sub_240484194@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9388, (uint64_t)qword_256FFDA88, a1);
}

uint64_t sub_2404841B0()
{
  sub_2404FA028(&qword_256FFEA78, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
  return sub_2408E599C();
}

uint64_t sub_2404841F0()
{
  sub_2404FA028(&qword_256FFEA78, type metadata accessor for TranscriptProtoUILabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUILabel);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoUIConfirmationLabel.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240484260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDAA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDAA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "affirmative";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "negative";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoUIConfirmationLabel._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9390, (uint64_t)qword_256FFDAA0, a1);
}

uint64_t TranscriptProtoUIConfirmationLabel.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240484ED0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoUIConfirmationLabel.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    v5 = v0[3];
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = v0[2] & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_2408E5A38(), !v1))
    {
      type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t TranscriptProtoUIConfirmationLabel.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoUIConfirmationLabel, &qword_256FFEAA0, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
}

uint64_t sub_2404844E0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  return result;
}

unint64_t sub_240484514()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240484530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUIConfirmationLabel.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240484544()
{
  return TranscriptProtoUIConfirmationLabel.traverse<A>(visitor:)();
}

uint64_t sub_240484558()
{
  sub_2404FA028(&qword_2570008F8, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
  return sub_2408E5828();
}

uint64_t sub_2404845A8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9390, (uint64_t)qword_256FFDAA0, a1);
}

uint64_t sub_2404845C4()
{
  sub_2404FA028(&qword_256FFF998, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
  return sub_2408E599C();
}

uint64_t sub_240484604()
{
  sub_2404FA028(&qword_256FFF998, type metadata accessor for TranscriptProtoUIConfirmationLabel, (uint64_t)&protocol conformance descriptor for TranscriptProtoUIConfirmationLabel);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoArchiveViewPayload.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_240484674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDAB8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDAB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "viewData";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "containerBundleId";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "targetBundleId";
  *(_QWORD *)(v12 + 8) = 14;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoArchiveViewPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9398, (uint64_t)qword_256FFDAB8, a1);
}

uint64_t TranscriptProtoArchiveViewPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BEA68(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A8], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C118], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C118]);
}

void TranscriptProtoArchiveViewPayload.traverse<A>(visitor:)()
{
  __asm { BR              X10 }
}

uint64_t sub_240484894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_2408E59F0(), !v2))
  {
    if (*(_QWORD *)(v3 + 24))
      result = sub_2408E5A38();
    if (!v2)
    {
      if (*(_QWORD *)(v3 + 40))
        sub_2408E5A38();
      type metadata accessor for TranscriptProtoArchiveViewPayload(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t TranscriptProtoArchiveViewPayload.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoArchiveViewPayload, &qword_256FFEAA8, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
}

double sub_240484998@<D0>(_OWORD *a1@<X8>)
{
  double result;

  a1[1] = 0u;
  a1[2] = 0u;
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = 0.0;
  *a1 = xmmword_2408EB790;
  return result;
}

unint64_t sub_2404849D4()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2404849F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoArchiveViewPayload.decodeMessage<A>(decoder:)(a1, a2, a3);
}

void sub_240484A04()
{
  TranscriptProtoArchiveViewPayload.traverse<A>(visitor:)();
}

uint64_t sub_240484A18()
{
  sub_2404FA028(&qword_2570008F0, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
  return sub_2408E5828();
}

uint64_t sub_240484A68@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9398, (uint64_t)qword_256FFDAB8, a1);
}

uint64_t sub_240484A84()
{
  sub_2404FA028(&qword_256FFF9B0, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
  return sub_2408E599C();
}

uint64_t sub_240484AC4()
{
  sub_2404FA028(&qword_256FFF9B0, type metadata accessor for TranscriptProtoArchiveViewPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoArchiveViewPayload);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoLiveActivityPayload.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240484B34(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDAD0, 1, (uint64_t)"sessionId", 9);
}

uint64_t static TranscriptProtoLiveActivityPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93A0, (uint64_t)qword_256FFDAD0, a1);
}

uint64_t TranscriptProtoLiveActivityPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoLiveActivityPayload.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoLiveActivityPayload);
}

uint64_t static TranscriptProtoLiveActivityPayload.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoLiveActivityPayload) & 1;
}

uint64_t TranscriptProtoLiveActivityPayload.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoLiveActivityPayload, &qword_256FFEAB0, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
}

unint64_t sub_240484BE0()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240484BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoLiveActivityPayload.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240484C10()
{
  sub_2404FA028(&qword_2570008E8, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
  return sub_2408E5828();
}

uint64_t sub_240484C60@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93A0, (uint64_t)qword_256FFDAD0, a1);
}

uint64_t sub_240484C7C()
{
  sub_2404FA028(&qword_256FFF9C8, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
  return sub_2408E599C();
}

uint64_t sub_240484CBC()
{
  sub_2404FA028(&qword_256FFF9C8, type metadata accessor for TranscriptProtoLiveActivityPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoLiveActivityPayload);
  return sub_2408E59A8();
}

uint64_t sub_240484D0C(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoLiveActivityPayload) & 1;
}

unint64_t static TranscriptProtoPluginSnippetPayload.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_240484D48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDAE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDAE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "pluginModelData";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "bundleId";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPluginSnippetPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93A8, (uint64_t)qword_256FFDAE8, a1);
}

uint64_t TranscriptProtoPluginSnippetPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240484ED0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A8]);
}

uint64_t sub_240484ED0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  result = sub_2408E5858();
  if (!v5)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2408E593C();
      }
      else if (result == 1)
      {
        a4(v4, a2, a3);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

void TranscriptProtoPluginSnippetPayload.traverse<A>(visitor:)()
{
  sub_240484F90();
}

void sub_240484F90()
{
  __asm { BR              X10 }
}

uint64_t sub_240484FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_2408E59F0(), !v2))
  {
    v6 = *(_QWORD *)(v3 + 24);
    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = *(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFLL;
    if (!v7 || (result = sub_2408E5A38(), !v2))
    {
      v4(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t static TranscriptProtoPluginSnippetPayload.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_2404D3268(a1, a2, type metadata accessor for TranscriptProtoPluginSnippetPayload) & 1;
}

uint64_t TranscriptProtoPluginSnippetPayload.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPluginSnippetPayload, &qword_256FFEAB8, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
}

double sub_2404850E4@<D0>(uint64_t a1@<X8>)
{
  double result;

  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = 0.0;
  *(_OWORD *)a1 = xmmword_2408EB790;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  return result;
}

unint64_t sub_240485120()
{
  return 0xD00000000000001FLL;
}

void sub_24048513C()
{
  TranscriptProtoPluginSnippetPayload.traverse<A>(visitor:)();
}

uint64_t sub_240485150()
{
  sub_2404FA028(&qword_2570008E0, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
  return sub_2408E5828();
}

uint64_t sub_2404851A0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93A8, (uint64_t)qword_256FFDAE8, a1);
}

uint64_t sub_2404851BC()
{
  sub_2404FA028(&qword_256FFF9E0, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
  return sub_2408E599C();
}

uint64_t sub_2404851FC()
{
  sub_2404FA028(&qword_256FFF9E0, type metadata accessor for TranscriptProtoPluginSnippetPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoPluginSnippetPayload);
  return sub_2408E59A8();
}

uint64_t sub_24048524C(uint64_t *a1, uint64_t a2)
{
  return sub_2404D3268(a1, a2, type metadata accessor for TranscriptProtoPluginSnippetPayload) & 1;
}

unint64_t static TranscriptProtoControlPayload.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_240485288(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDB00, 1, (uint64_t)"controlMetadata", 15);
}

uint64_t static TranscriptProtoControlPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93B0, (uint64_t)qword_256FFDB00, a1);
}

uint64_t TranscriptProtoControlPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0A8]);
}

void TranscriptProtoControlPayload.traverse<A>(visitor:)()
{
  sub_2404852F8();
}

void sub_2404852F8()
{
  __asm { BR              X10 }
}

uint64_t sub_240485348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(_QWORD);
  uint64_t result;

  if ((a2 & 0xFF000000000000) == 0 || (result = sub_2408E59F0(), !v2))
  {
    v3(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoControlPayload.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  return sub_2404E0934(a1, a2, type metadata accessor for TranscriptProtoControlPayload) & 1;
}

uint64_t TranscriptProtoControlPayload.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoControlPayload, &qword_256FFEAC0, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
}

double sub_240485414@<D0>(_OWORD *a1@<X8>)
{
  double result;

  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = 0.0;
  *a1 = xmmword_2408EB790;
  return result;
}

unint64_t sub_240485448()
{
  return 0xD000000000000019;
}

void sub_240485464()
{
  TranscriptProtoControlPayload.traverse<A>(visitor:)();
}

uint64_t sub_240485478()
{
  sub_2404FA028(&qword_2570008D8, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
  return sub_2408E5828();
}

uint64_t sub_2404854C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93B0, (uint64_t)qword_256FFDB00, a1);
}

uint64_t sub_2404854E4()
{
  sub_2404FA028(&qword_256FFF9F8, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
  return sub_2408E599C();
}

uint64_t sub_240485524()
{
  sub_2404FA028(&qword_256FFF9F8, type metadata accessor for TranscriptProtoControlPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoControlPayload);
  return sub_2408E59A8();
}

uint64_t sub_240485574(uint64_t *a1, uint64_t a2)
{
  return sub_2404E0934(a1, a2, type metadata accessor for TranscriptProtoControlPayload) & 1;
}

unint64_t static TranscriptProtoSystemPromptResolution.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_2404855B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDB18);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDB18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "actionEventId";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "userAction";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "systemResponseEventId";
  *((_QWORD *)v13 + 1) = 21;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "statementId";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 6;
  *(_QWORD *)v16 = "input";
  *(_QWORD *)(v16 + 8) = 5;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSystemPromptResolution._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93B8, (uint64_t)qword_256FFDB18, a1);
}

uint64_t TranscriptProtoSystemPromptResolution.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2408E5930();
          break;
        case 2:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemPromptResolution, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, &qword_256FFFB28, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
          break;
        case 3:
          sub_2408E593C();
          break;
        case 4:
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemPromptResolution, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        case 6:
          sub_2404557D8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemPromptResolution, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, &qword_256FFFA28, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoSystemPromptResolution.traverse<A>(visitor:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v7 = result;
  if (v3[3])
    result = sub_2408E5A38();
  if (!v4)
  {
    sub_240485A7C((uint64_t)v3, v7, a2, a3);
    v8 = v3[1];
    v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v9 = *v3 & 0xFFFFFFFFFFFFLL;
    if (v9)
      sub_2408E5A38();
    sub_240485BF0((uint64_t)v3, v7, a2, a3);
    sub_240485D64((uint64_t)v3, v7, a2, a3);
    type metadata accessor for TranscriptProtoSystemPromptResolution(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240485A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA330);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA330);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
  sub_2404FA028(&qword_256FFFB28, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
}

uint64_t sub_240485BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_240485D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
  sub_2403A9210(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_256FFA340);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA340);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
  sub_2404FA028(&qword_256FFFA28, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
}

uint64_t TranscriptProtoSystemPromptResolution.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemPromptResolution, &qword_256FFEAC8, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
}

uint64_t sub_240485EF8@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;

  a2[2] = 0;
  a2[3] = 0;
  v4 = (char *)a2 + a1[6];
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + a1[7];
  v7 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (char *)a2 + a1[8];
  v9 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  return result;
}

unint64_t sub_240485FBC()
{
  return 0xD000000000000021;
}

uint64_t sub_240485FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSystemPromptResolution.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240485FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSystemPromptResolution.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240486000()
{
  sub_2404FA028(&qword_2570008D0, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
  return sub_2408E5828();
}

uint64_t sub_240486050@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93B8, (uint64_t)qword_256FFDB18, a1);
}

uint64_t sub_24048606C()
{
  sub_2404FA028(&qword_256FFFA10, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
  return sub_2408E599C();
}

uint64_t sub_2404860AC()
{
  sub_2404FA028(&qword_256FFFA10, type metadata accessor for TranscriptProtoSystemPromptResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolution);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSystemPromptResolutionInput.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_24048611C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDB30);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDB30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "touch";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "headGesture";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "text";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "speech";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSystemPromptResolutionInput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93C0, (uint64_t)qword_256FFDB30, a1);
}

uint64_t TranscriptProtoSystemPromptResolutionInput.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240438FB0(a1, v5, a2, a3, &qword_256FFA338, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum, 2);
          break;
        case 2:
          sub_240438FB0(a1, v5, a2, a3, &qword_256FFA338, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum, 3);
          break;
        case 3:
          sub_24048641C(v5, a1, a2, a3);
          break;
        case 4:
          sub_24048685C(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24048641C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F80);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA338);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA338);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000F80);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequestContentTextContent);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestContentTextContent);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF110, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000F80);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000F80);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000F80);
    return sub_2403A97FC((uint64_t)v33, &qword_257000F80);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequestContentTextContent);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000F80);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA338);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequestContentTextContent);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24048685C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F88);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA338);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA338);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000F88);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFF128, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000F88);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000F88);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000F88);
    return sub_2403A97FC((uint64_t)v33, &qword_257000F88);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000F88);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA338);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoSystemPromptResolutionInput.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFA338);
  v4 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v6 = (char *)sub_240486DB4 + 4 * byte_2408EB9A2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  return sub_2408E578C();
}

void sub_240486DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_240486FFC(v1);
  sub_240388AE4(v2, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  if (!v0)
    JUMPOUT(0x240486D44);
  JUMPOUT(0x240486D6CLL);
}

uint64_t sub_240486E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 2)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240486FFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestContentTextContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA338);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA338);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentTextContent);
    sub_2404FA028(&qword_256FFF110, type metadata accessor for TranscriptProtoRequestContentTextContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentTextContent);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentTextContent);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  __break(1u);
  return result;
}

uint64_t sub_240487198(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRequestContentSpeechContent(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA338);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA338);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
    sub_2404FA028(&qword_256FFF128, type metadata accessor for TranscriptProtoRequestContentSpeechContent, (uint64_t)&protocol conformance descriptor for TranscriptProtoRequestContentSpeechContent);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRequestContentSpeechContent);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoSystemPromptResolutionInput.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemPromptResolutionInput, &qword_256FFEAD0, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
}

uint64_t sub_240487358@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum, a1);
}

unint64_t sub_240487364()
{
  return 0xD000000000000026;
}

uint64_t sub_240487380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSystemPromptResolutionInput.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240487394()
{
  return TranscriptProtoSystemPromptResolutionInput.traverse<A>(visitor:)();
}

uint64_t sub_2404873A8()
{
  sub_2404FA028(&qword_2570008C8, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
  return sub_2408E5828();
}

uint64_t sub_2404873F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93C0, (uint64_t)qword_256FFDB30, a1);
}

uint64_t sub_240487414()
{
  sub_2404FA028(&qword_256FFFA28, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
  return sub_2408E599C();
}

uint64_t sub_240487454()
{
  sub_2404FA028(&qword_256FFFA28, type metadata accessor for TranscriptProtoSystemPromptResolutionInput, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionInput);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionResponse.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2404874C4(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFDB48);
}

uint64_t static TranscriptProtoActionResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93C8, (uint64_t)qword_256FFDB48, a1);
}

uint64_t TranscriptProtoActionResponse.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoActionResponse.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionResponse, &qword_256FFEAD8, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
}

unint64_t sub_240487520()
{
  return 0xD000000000000019;
}

uint64_t sub_24048753C()
{
  sub_2404FA028(&qword_2570008C0, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
  return sub_2408E5828();
}

uint64_t sub_24048758C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93C8, (uint64_t)qword_256FFDB48, a1);
}

uint64_t sub_2404875A8()
{
  sub_2404FA028(&qword_256FFFA40, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
  return sub_2408E599C();
}

uint64_t sub_2404875E8()
{
  sub_2404FA028(&qword_256FFFA40, type metadata accessor for TranscriptProtoActionResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResponse);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoActionResolverRequest.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_240487654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDB60);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDB60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EAD90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "toolId";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "resolvedParameters";
  *(_QWORD *)(v11 + 8) = 18;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "unresolvedParameterSets";
  *((_QWORD *)v13 + 1) = 23;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "isClientAction";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "isConfirmed";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "statementId";
  *((_QWORD *)v19 + 1) = 11;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "isAuthenticated";
  *((_QWORD *)v21 + 1) = 15;
  v21[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoActionResolverRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93D0, (uint64_t)qword_256FFDB60, a1);
}

uint64_t TranscriptProtoActionResolverRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 2:
          v12 = v11;
          sub_2408E593C();
          goto LABEL_10;
        case 3:
          v12 = v11;
          sub_240457AD4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoActionResolverRequest, type metadata accessor for TranscriptProtoParameterSet, &qword_256FFEAE0, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
          goto LABEL_10;
        case 4:
          type metadata accessor for TranscriptProtoParameterSet(0);
          sub_2404FA028(&qword_256FFEAE0, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
          v12 = v11;
          sub_2408E5960();
          goto LABEL_10;
        case 5:
        case 6:
        case 8:
          v12 = v11;
          sub_2408E5888();
          goto LABEL_10;
        case 7:
          v12 = v11;
          sub_240487A88();
LABEL_10:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240487A88()
{
  type metadata accessor for TranscriptProtoActionResolverRequest(0);
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  return sub_2408E596C();
}

uint64_t TranscriptProtoActionResolverRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = *(_QWORD *)(v3 + 8);
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    result = sub_240487CF8(v3, a1, a2, a3);
    if (!v4)
    {
      if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
      {
        type metadata accessor for TranscriptProtoParameterSet(0);
        sub_2404FA028(&qword_256FFEAE0, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
        sub_2408E5A5C();
      }
      if (*(_BYTE *)(v3 + 24) == 1)
        sub_2408E59D8();
      if (*(_BYTE *)(v3 + 25) == 1)
        sub_2408E59D8();
      sub_240487E6C(v3, a1, a2, a3);
      if (*(_BYTE *)(v3 + 26) == 1)
        sub_2408E59D8();
      type metadata accessor for TranscriptProtoActionResolverRequest(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_240487CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoParameterSet(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 36), (uint64_t)v7, &qword_256FFA3A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoParameterSet);
  sub_2404FA028(&qword_256FFEAE0, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoParameterSet);
}

uint64_t sub_240487E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 40), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoActionResolverRequest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoActionResolverRequest, &qword_256FFEAE8, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
}

uint64_t sub_240488000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = a2 + *(int *)(a1 + 36);
  v5 = type metadata accessor for TranscriptProtoParameterSet(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a2 + *(int *)(a1 + 40);
  v7 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_QWORD *)(a2 + 16) = MEMORY[0x24BEE4AF8];
  *(_WORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 26) = 0;
  return result;
}

unint64_t sub_2404880A8()
{
  return 0xD000000000000020;
}

uint64_t sub_2404880C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionResolverRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404880D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoActionResolverRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404880EC()
{
  sub_2404FA028(&qword_2570008B8, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
  return sub_2408E5828();
}

uint64_t sub_24048813C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93D0, (uint64_t)qword_256FFDB60, a1);
}

uint64_t sub_240488158()
{
  sub_2404FA028(&qword_256FFFA58, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
  return sub_2408E599C();
}

uint64_t sub_240488198()
{
  sub_2404FA028(&qword_256FFFA58, type metadata accessor for TranscriptProtoActionResolverRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoActionResolverRequest);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoContextRetrieved.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240488208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDB78);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDB78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 3;
  *(_QWORD *)v7 = "requiredContext";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 4;
  *(_QWORD *)v11 = "utteranceContext";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoContextRetrieved._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93D8, (uint64_t)qword_256FFDB78, a1);
}

uint64_t TranscriptProtoContextRetrieved.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 4 || result == 3)
      {
        type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
        sub_2404FA028(&qword_256FFEAF0, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
        sub_2408E5960();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoContextRetrieved.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*v0 + 16)
    || (type metadata accessor for TranscriptProtoRetrievedContextStatement(0),
        sub_2404FA028(&qword_256FFEAF0, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement), result = sub_2408E5A5C(), !v1))
  {
    if (!*(_QWORD *)(v0[1] + 16)
      || (type metadata accessor for TranscriptProtoRetrievedContextStatement(0),
          sub_2404FA028(&qword_256FFEAF0, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement), result = sub_2408E5A5C(), !v1))
    {
      type metadata accessor for TranscriptProtoContextRetrieved(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t static TranscriptProtoContextRetrieved.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404DF384(a1, a2, sub_2408BBF10, sub_2408BBF10, type metadata accessor for TranscriptProtoContextRetrieved) & 1;
}

uint64_t TranscriptProtoContextRetrieved.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoContextRetrieved, &qword_256FFEAF8, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
}

unint64_t sub_240488604()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_240488620()
{
  return TranscriptProtoContextRetrieved.decodeMessage<A>(decoder:)();
}

uint64_t sub_240488634()
{
  return TranscriptProtoContextRetrieved.traverse<A>(visitor:)();
}

uint64_t sub_240488648()
{
  sub_2404FA028(&qword_2570008B0, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
  return sub_2408E5828();
}

uint64_t sub_240488698@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93D8, (uint64_t)qword_256FFDB78, a1);
}

uint64_t sub_2404886B4()
{
  sub_2404FA028(&qword_256FFFA70, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
  return sub_2408E599C();
}

uint64_t sub_2404886F4()
{
  sub_2404FA028(&qword_256FFFA70, type metadata accessor for TranscriptProtoContextRetrieved, (uint64_t)&protocol conformance descriptor for TranscriptProtoContextRetrieved);
  return sub_2408E59A8();
}

uint64_t sub_240488744(_QWORD *a1, char *a2)
{
  return sub_2404DF384(a1, a2, sub_2408BBF10, sub_2408BBF10, type metadata accessor for TranscriptProtoContextRetrieved) & 1;
}

unint64_t static TranscriptProtoRetrievedContextStatement.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_24048878C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDB90);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDB90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "retrievedContext";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoRetrievedContextStatement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93E0, (uint64_t)qword_256FFDB90, a1);
}

uint64_t TranscriptProtoRetrievedContextStatement.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoRetrievedContextStatement, type metadata accessor for ContextProtoRetrievedContext, &qword_256FFEF20, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
      }
      else if (result == 1)
      {
        type metadata accessor for TranscriptProtoStatementID(0);
        sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoRetrievedContextStatement.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA300, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  if (!v4)
  {
    sub_240488AE8(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240488AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F68);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoRetrievedContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000F68);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000F68);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoRetrievedContext);
  sub_2404FA028(&qword_256FFEF20, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t TranscriptProtoRetrievedContextStatement.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRetrievedContextStatement, &qword_256FFEB00, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
}

uint64_t sub_240488C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404892F4(a1, type metadata accessor for TranscriptProtoStatementID, type metadata accessor for ContextProtoRetrievedContext, a2);
}

unint64_t sub_240488C90()
{
  return 0xD000000000000024;
}

uint64_t sub_240488CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRetrievedContextStatement.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240488CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRetrievedContextStatement.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240488CD4()
{
  sub_2404FA028(&qword_2570008A8, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
  return sub_2408E5828();
}

uint64_t sub_240488D24@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93E0, (uint64_t)qword_256FFDB90, a1);
}

uint64_t sub_240488D40()
{
  sub_2404FA028(&qword_256FFEAF0, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
  return sub_2408E599C();
}

uint64_t sub_240488D80()
{
  sub_2404FA028(&qword_256FFEAF0, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoDynamicEnumerationEntityStatement.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_240488DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDBA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDBA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "dynamicEnumerationEntity";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoDynamicEnumerationEntityStatement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93E8, (uint64_t)qword_256FFDBA8, a1);
}

uint64_t TranscriptProtoDynamicEnumerationEntityStatement.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, type metadata accessor for ContextProtoDynamicEnumerationEntity, &qword_257000F58, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
      }
      else if (result == 1)
      {
        type metadata accessor for TranscriptProtoStatementID(0);
        sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoDynamicEnumerationEntityStatement.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA300, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  if (!v4)
  {
    sub_24048914C(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24048914C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F50);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000F50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000F50);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoDynamicEnumerationEntity);
  sub_2404FA028(&qword_257000F58, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

uint64_t TranscriptProtoDynamicEnumerationEntityStatement.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, &qword_256FFEB08, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
}

uint64_t sub_2404892E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404892F4(a1, type metadata accessor for TranscriptProtoStatementID, type metadata accessor for ContextProtoDynamicEnumerationEntity, a2);
}

uint64_t sub_2404892F4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a4, 1, 1, v7);
  v8 = a4 + *(int *)(a1 + 20);
  v9 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_24048937C()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_240489398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoDynamicEnumerationEntityStatement.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404893AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoDynamicEnumerationEntityStatement.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404893C0()
{
  sub_2404FA028(&qword_2570008A0, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
  return sub_2408E5828();
}

uint64_t sub_240489410@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93E8, (uint64_t)qword_256FFDBA8, a1);
}

uint64_t sub_24048942C()
{
  sub_2404FA028(&qword_256FFEEF8, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
  return sub_2408E599C();
}

uint64_t sub_24048946C()
{
  sub_2404FA028(&qword_256FFEEF8, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSafetyModeRelease.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2404894DC(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFDBC0);
}

uint64_t static TranscriptProtoSafetyModeRelease._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93F0, (uint64_t)qword_256FFDBC0, a1);
}

uint64_t TranscriptProtoSafetyModeRelease.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoSafetyModeRelease.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSafetyModeRelease, &qword_256FFEB10, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
}

unint64_t sub_240489538()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_240489554()
{
  sub_2404FA028(&qword_257000898, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
  return sub_2408E5828();
}

uint64_t sub_2404895A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93F0, (uint64_t)qword_256FFDBC0, a1);
}

uint64_t sub_2404895C0()
{
  sub_2404FA028(&qword_256FFFAA8, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
  return sub_2408E599C();
}

uint64_t sub_240489600()
{
  sub_2404FA028(&qword_256FFFAA8, type metadata accessor for TranscriptProtoSafetyModeRelease, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeRelease);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSafetyModeException.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_24048966C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDBD8, 1, (uint64_t)"clientQueryId", 13);
}

uint64_t static TranscriptProtoSafetyModeException._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF93F8, (uint64_t)qword_256FFDBD8, a1);
}

uint64_t TranscriptProtoSafetyModeException.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C118]);
}

uint64_t TranscriptProtoSafetyModeException.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B8D2C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSafetyModeException);
}

uint64_t static TranscriptProtoSafetyModeException.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404D4F58(a1, a2, type metadata accessor for TranscriptProtoSafetyModeException) & 1;
}

uint64_t TranscriptProtoSafetyModeException.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSafetyModeException, &qword_256FFEB18, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
}

unint64_t sub_240489718()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_240489734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprUndoVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240489748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSafetyModeException.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048975C()
{
  sub_2404FA028(&qword_257000890, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
  return sub_2408E5828();
}

uint64_t sub_2404897AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF93F8, (uint64_t)qword_256FFDBD8, a1);
}

uint64_t sub_2404897C8()
{
  sub_2404FA028(&qword_256FFFAC0, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
  return sub_2408E599C();
}

uint64_t sub_240489808()
{
  sub_2404FA028(&qword_256FFFAC0, type metadata accessor for TranscriptProtoSafetyModeException, (uint64_t)&protocol conformance descriptor for TranscriptProtoSafetyModeException);
  return sub_2408E59A8();
}

uint64_t sub_240489858(_QWORD *a1, char *a2)
{
  return sub_2404D4F58(a1, a2, type metadata accessor for TranscriptProtoSafetyModeException) & 1;
}

unint64_t static TranscriptProtoParameterSet.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_240489894(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDBF0, 2, (uint64_t)"parameters", 10);
}

uint64_t static TranscriptProtoParameterSet._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9400, (uint64_t)qword_256FFDBF0, a1);
}

uint64_t TranscriptProtoParameterSet.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404898F8(a1, a2, a3, type metadata accessor for TranscriptProtoParameter, &qword_256FFEB20, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
}

uint64_t sub_2404898F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t result;
  char v11;

  while (1)
  {
    result = sub_2408E5858();
    if (v6 || (v11 & 1) != 0)
      break;
    if (result == 2)
    {
      a4(0);
      sub_2404FA028(a5, a4, a6);
      sub_2408E5960();
    }
    v6 = 0;
  }
  return result;
}

uint64_t TranscriptProtoParameterSet.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (type metadata accessor for TranscriptProtoParameter(0),
        sub_2404FA028(&qword_256FFEB20, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter), result = sub_2408E5A5C(), !v1))
  {
    type metadata accessor for TranscriptProtoParameterSet(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoParameterSet.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BC508, type metadata accessor for TranscriptProtoParameterSet) & 1;
}

uint64_t TranscriptProtoParameterSet.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoParameterSet, &qword_256FFEB28, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
}

unint64_t sub_240489AD4()
{
  return 0xD000000000000017;
}

uint64_t sub_240489AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameterSet.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240489B04()
{
  return TranscriptProtoParameterSet.traverse<A>(visitor:)();
}

uint64_t sub_240489B18()
{
  sub_2404FA028(&qword_257000888, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
  return sub_2408E5828();
}

uint64_t sub_240489B68@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9400, (uint64_t)qword_256FFDBF0, a1);
}

uint64_t sub_240489B84()
{
  sub_2404FA028(&qword_256FFEAE0, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
  return sub_2408E599C();
}

uint64_t sub_240489BC4()
{
  sub_2404FA028(&qword_256FFEAE0, type metadata accessor for TranscriptProtoParameterSet, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameterSet);
  return sub_2408E59A8();
}

uint64_t sub_240489C14(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BC508, type metadata accessor for TranscriptProtoParameterSet) & 1;
}

unint64_t static TranscriptProtoParameter.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_240489C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDC08);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDC08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "key";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "collectionIndex";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "candidate";
  *(_QWORD *)(v12 + 8) = 9;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoParameter._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9408, (uint64_t)qword_256FFDC08, a1);
}

uint64_t TranscriptProtoParameter.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoParameter, type metadata accessor for TranscriptProtoCandidate, &qword_256FFE998, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
          break;
        case 2:
          sub_2408E58F4();
          break;
        case 1:
          sub_2408E593C();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoParameter.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;

  result = *(_QWORD *)v3;
  v9 = *(_QWORD *)(v3 + 8);
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (!v10 || (result = sub_2408E5A38(), !v4))
  {
    if ((*(_BYTE *)(v3 + 24) & 1) == 0)
      result = sub_2408E5A14();
    if (!v4)
    {
      sub_240489FF8(v3, a1, a2, a3);
      type metadata accessor for TranscriptProtoParameter(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_240489FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoCandidate(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoParameter(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA7B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA7B8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoCandidate);
  sub_2404FA028(&qword_256FFE998, type metadata accessor for TranscriptProtoCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoCandidate);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoCandidate);
}

uint64_t TranscriptProtoParameter.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoParameter, &qword_256FFEB30, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
}

uint64_t sub_24048A18C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24048A198(a1, type metadata accessor for TranscriptProtoCandidate, a2);
}

uint64_t sub_24048A198@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  v4 = a3 + *(int *)(a1 + 24);
  v5 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0xE000000000000000;
  return result;
}

unint64_t sub_24048A20C()
{
  return 0xD000000000000014;
}

uint64_t sub_24048A228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameter.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24048A23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoParameter.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048A250()
{
  sub_2404FA028(&qword_257000880, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
  return sub_2408E5828();
}

uint64_t sub_24048A2A0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9408, (uint64_t)qword_256FFDC08, a1);
}

uint64_t sub_24048A2BC()
{
  sub_2404FA028(&qword_256FFEB20, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
  return sub_2408E599C();
}

uint64_t sub_24048A2FC()
{
  sub_2404FA028(&qword_256FFEB20, type metadata accessor for TranscriptProtoParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoParameter);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoClientInitiatedClientAction.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_24048A36C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDC20);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDC20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "toolId";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameters";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoClientInitiatedClientAction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9410, (uint64_t)qword_256FFDC20, a1);
}

uint64_t TranscriptProtoClientInitiatedClientAction.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2408E5858();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
    {
      sub_24048A564();
    }
    else if (result == 1)
    {
      sub_2408E593C();
    }
  }
  return result;
}

uint64_t sub_24048A564()
{
  sub_2408E5768();
  type metadata accessor for ToolKitProtoTypedValue(0);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7F0, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  return sub_2408E5840();
}

uint64_t TranscriptProtoClientInitiatedClientAction.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    if (!*(_QWORD *)(v0[2] + 16)
      || (sub_2408E5768(),
          type metadata accessor for ToolKitProtoTypedValue(0),
          sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue), sub_2404FA028(&qword_256FFE7F0, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue), result = sub_2408E59B4(), !v1))
    {
      type metadata accessor for TranscriptProtoClientInitiatedClientAction(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t static TranscriptProtoClientInitiatedClientAction.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404D07D8(a1, a2, sub_240890664, type metadata accessor for TranscriptProtoClientInitiatedClientAction) & 1;
}

uint64_t TranscriptProtoClientInitiatedClientAction.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoClientInitiatedClientAction, &qword_256FFEB38, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
}

uint64_t sub_24048A7C8@<X0>(_QWORD *a1@<X8>)
{
  return sub_2404B8204((uint64_t (*)(_QWORD))sub_2403A8C1C, a1);
}

unint64_t sub_24048A7D4()
{
  return 0xD000000000000026;
}

uint64_t sub_24048A7F0()
{
  return TranscriptProtoClientInitiatedClientAction.decodeMessage<A>(decoder:)();
}

uint64_t sub_24048A804()
{
  return TranscriptProtoClientInitiatedClientAction.traverse<A>(visitor:)();
}

uint64_t sub_24048A818()
{
  sub_2404FA028(&qword_257000878, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
  return sub_2408E5828();
}

uint64_t sub_24048A868@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9410, (uint64_t)qword_256FFDC20, a1);
}

uint64_t sub_24048A884()
{
  sub_2404FA028(&qword_256FFFAF8, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
  return sub_2408E599C();
}

uint64_t sub_24048A8C4()
{
  sub_2404FA028(&qword_256FFFAF8, type metadata accessor for TranscriptProtoClientInitiatedClientAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientInitiatedClientAction);
  return sub_2408E59A8();
}

uint64_t sub_24048A914(_QWORD *a1, char *a2)
{
  return sub_2404D07D8(a1, a2, sub_240890664, type metadata accessor for TranscriptProtoClientInitiatedClientAction) & 1;
}

unint64_t static TranscriptProtoSystemQuery.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_24048A958(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFDC38);
}

uint64_t static TranscriptProtoSystemQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9418, (uint64_t)qword_256FFDC38, a1);
}

uint64_t TranscriptProtoSystemQuery.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoSystemQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemQuery, &qword_256FFEB40, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
}

unint64_t sub_24048A9B4()
{
  return 0xD000000000000016;
}

uint64_t sub_24048A9D0()
{
  sub_2404FA028(&qword_257000870, type metadata accessor for TranscriptProtoSystemQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
  return sub_2408E5828();
}

uint64_t sub_24048AA20@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9418, (uint64_t)qword_256FFDC38, a1);
}

uint64_t sub_24048AA3C()
{
  sub_2404FA028(&qword_256FFFB10, type metadata accessor for TranscriptProtoSystemQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
  return sub_2408E599C();
}

uint64_t sub_24048AA7C()
{
  sub_2404FA028(&qword_256FFFB10, type metadata accessor for TranscriptProtoSystemQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemQuery);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSystemPromptResolutionUserAction.protoMessageName.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_24048AAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDC50);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDC50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8A00;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "actionConfirmed";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "parameterValueSelected";
  *(_QWORD *)(v11 + 8) = 22;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "parameterConfirmed";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "parameterItemSelected";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "deviceUnlocked";
  *((_QWORD *)v17 + 1) = 14;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "disambiguationIndexSelected";
  *((_QWORD *)v19 + 1) = 27;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "requirementAddressed";
  *((_QWORD *)v21 + 1) = 20;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 8;
  *(_QWORD *)v23 = "actionCanceled";
  *((_QWORD *)v23 + 1) = 14;
  v23[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSystemPromptResolutionUserAction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9420, (uint64_t)qword_256FFDC50, a1);
}

uint64_t TranscriptProtoSystemPromptResolutionUserAction.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v16 = a1;
          v17 = (_BYTE *)v5;
          v18 = a2;
          v19 = a3;
          v20 = 0;
          goto LABEL_12;
        case 2:
          sub_24048AF54(v5, a1, a2, a3);
          break;
        case 3:
          v16 = a1;
          v17 = (_BYTE *)v5;
          v18 = a2;
          v19 = a3;
          v20 = 2;
LABEL_12:
          sub_24048B398(v16, v17, v18, v19, &qword_256FFA328, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum, v20);
          break;
        case 4:
          v11 = a1;
          v12 = (_QWORD *)v5;
          v13 = a2;
          v14 = a3;
          v15 = 3;
          goto LABEL_5;
        case 5:
          sub_240438FB0(a1, v5, a2, a3, &qword_256FFA328, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum, 7);
          break;
        case 6:
          v11 = a1;
          v12 = (_QWORD *)v5;
          v13 = a2;
          v14 = a3;
          v15 = 4;
LABEL_5:
          sub_24048B520(v11, v12, v13, v14, &qword_256FFA328, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum, v15);
          break;
        case 7:
          sub_24048B6A8(v5, a1, a2, a3);
          break;
        case 8:
          sub_24048BAEC(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24048AF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA328);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA328);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA328);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24048B398(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD), int a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  int v20;
  int v21;
  unsigned __int8 v22;

  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = 2;
  result = sub_2408E587C();
  if (!v7 && v22 != 2)
  {
    v20 = v22;
    v21 = a7;
    sub_2403A9210((uint64_t)a2, (uint64_t)v14, a5);
    v16 = a6(0);
    v19 = *(_QWORD *)(v16 - 8);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v16);
    sub_2403A97FC((uint64_t)v14, a5);
    if (v17 != 1)
      sub_2408E5864();
    v18 = v20 & 1;
    sub_2403A97FC((uint64_t)a2, a5);
    *a2 = v18;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(a2, 0, 1, v16);
  }
  return result;
}

uint64_t sub_24048B520(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD), int a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;

  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = 0;
  v21 = 1;
  result = sub_2408E58F4();
  if (!v7 && (v21 & 1) == 0)
  {
    v22 = a7;
    v19 = v20;
    sub_2403A9210((uint64_t)a2, (uint64_t)v14, a5);
    v16 = a6(0);
    v18 = *(_QWORD *)(v16 - 8);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v16);
    sub_2403A97FC((uint64_t)v14, a5);
    if (v17 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)a2, a5);
    *a2 = v19;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a2, 0, 1, v16);
  }
  return result;
}

uint64_t sub_24048B6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F30);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA328);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA328);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000F30);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFB58, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000F30);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000F30);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000F30);
    return sub_2403A97FC((uint64_t)v33, &qword_257000F30);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000F30);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA328);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24048BAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F38);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA328);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA328);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000F38);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFB40, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000F38);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000F38);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000F38);
    return sub_2403A97FC((uint64_t)v33, &qword_257000F38);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000F38);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA328);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoSystemPromptResolutionUserAction.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFA328);
  v4 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v6 = (char *)&loc_24048C028 + 4 * byte_2408EB9B5[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  return sub_2408E578C();
}

uint64_t sub_24048C158(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA328);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA328);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  __break(1u);
  return result;
}

uint64_t sub_24048C2F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA328);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA328);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    return sub_2408E59D8();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  __break(1u);
  return result;
}

uint64_t sub_24048C40C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA328);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA328);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    return sub_2408E5A14();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  __break(1u);
  return result;
}

uint64_t sub_24048C520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFA328);
  v12 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFA328);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    if (EnumCaseMultiPayload == 7)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24048C6B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA328);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA328);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    return sub_2408E5A14();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  __break(1u);
  return result;
}

uint64_t sub_24048C7CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA328);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA328);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
    sub_2404FA028(&qword_256FFFB58, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  __break(1u);
  return result;
}

uint64_t sub_24048C96C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA328);
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA328);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
    sub_2404FA028(&qword_256FFFB40, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoSystemPromptResolutionUserAction.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, &qword_256FFEB48, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
}

uint64_t sub_24048CB2C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum, a1);
}

unint64_t sub_24048CB38()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_24048CB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSystemPromptResolutionUserAction.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24048CB68()
{
  return TranscriptProtoSystemPromptResolutionUserAction.traverse<A>(visitor:)();
}

uint64_t sub_24048CB7C()
{
  sub_2404FA028(&qword_257000868, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
  return sub_2408E5828();
}

uint64_t sub_24048CBCC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9420, (uint64_t)qword_256FFDC50, a1);
}

uint64_t sub_24048CBE8()
{
  sub_2404FA028(&qword_256FFFB28, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
  return sub_2408E599C();
}

uint64_t sub_24048CC28()
{
  sub_2404FA028(&qword_256FFFB28, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionUserAction);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSystemPromptResolutionActionCancellation.protoMessageName.getter()
{
  return 0xD000000000000033;
}

uint64_t sub_24048CC98(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFDC68);
}

uint64_t static TranscriptProtoSystemPromptResolutionActionCancellation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9428, (uint64_t)qword_256FFDC68, a1);
}

uint64_t TranscriptProtoSystemPromptResolutionActionCancellation.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoSystemPromptResolutionActionCancellation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, &qword_256FFEB50, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
}

unint64_t sub_24048CCF4()
{
  return 0xD000000000000033;
}

uint64_t sub_24048CD10()
{
  sub_2404FA028(&qword_257000860, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
  return sub_2408E5828();
}

uint64_t sub_24048CD60@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9428, (uint64_t)qword_256FFDC68, a1);
}

uint64_t sub_24048CD7C()
{
  sub_2404FA028(&qword_256FFFB40, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
  return sub_2408E599C();
}

uint64_t sub_24048CDBC()
{
  sub_2404FA028(&qword_256FFFB40, type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionActionCancellation);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSystemPromptResolutionRequirementResolution.protoMessageName.getter()
{
  return 0xD000000000000036;
}

uint64_t sub_24048CE28(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDC80, 1, (uint64_t)"isRequirementSatisfied", 22);
}

uint64_t static TranscriptProtoSystemPromptResolutionRequirementResolution._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9430, (uint64_t)qword_256FFDC80, a1);
}

uint64_t TranscriptProtoSystemPromptResolutionRequirementResolution.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2408E5858();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_2408E5888();
  }
  return result;
}

uint64_t TranscriptProtoSystemPromptResolutionRequirementResolution.traverse<A>(visitor:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  if (*v0 != 1 || (result = sub_2408E59D8(), !v1))
  {
    type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoSystemPromptResolutionRequirementResolution.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, &qword_256FFEB58, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
}

uint64_t sub_24048CF84@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  return result;
}

unint64_t sub_24048CFB0()
{
  return 0xD000000000000036;
}

uint64_t sub_24048CFCC()
{
  return TranscriptProtoSystemPromptResolutionRequirementResolution.decodeMessage<A>(decoder:)();
}

uint64_t sub_24048CFE0()
{
  return TranscriptProtoSystemPromptResolutionRequirementResolution.traverse<A>(visitor:)();
}

uint64_t sub_24048CFF4()
{
  sub_2404FA028(&qword_257000858, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  return sub_2408E5828();
}

uint64_t sub_24048D044@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9430, (uint64_t)qword_256FFDC80, a1);
}

uint64_t sub_24048D060()
{
  sub_2404FA028(&qword_256FFFB58, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  return sub_2408E599C();
}

uint64_t sub_24048D0A0()
{
  sub_2404FA028(&qword_256FFFB58, type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemPromptResolutionRequirementResolution);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoVariableSetter.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_24048D110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDC98);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDC98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 3;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 4;
  *(_QWORD *)v11 = "dependencies";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoVariableSetter._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9438, (uint64_t)qword_256FFDC98, a1);
}

uint64_t TranscriptProtoVariableSetter.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 4)
      {
        sub_240478FA0();
      }
      else if (result == 3)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoVariableSetter, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoVariableSetter.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_24048D490(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      sub_2408E5774();
      type metadata accessor for ToolKitProtoTypedValue(0);
      sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      sub_2404FA028(&qword_256FFE7F0, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      sub_2408E59B4();
    }
    type metadata accessor for TranscriptProtoVariableSetter(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24048D490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoVariableSetter(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t static TranscriptProtoVariableSetter.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404DD4D4(a1, a2, (char *)type metadata accessor for TranscriptProtoVariableSetter, sub_24088FCEC) & 1;
}

uint64_t TranscriptProtoVariableSetter.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoVariableSetter, &qword_256FFEB60, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
}

uint64_t sub_24048D648@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2404BA7C4(a1, type metadata accessor for ToolKitProtoTypedValue, (uint64_t (*)(_QWORD))sub_2403A8EF4, a2);
}

unint64_t sub_24048D65C()
{
  return 0xD000000000000019;
}

uint64_t sub_24048D678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoVariableSetter.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24048D68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoVariableSetter.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048D6A0()
{
  sub_2404FA028(&qword_257000850, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
  return sub_2408E5828();
}

uint64_t sub_24048D6F0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9438, (uint64_t)qword_256FFDC98, a1);
}

uint64_t sub_24048D70C()
{
  sub_2404FA028(&qword_256FFEB68, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
  return sub_2408E599C();
}

uint64_t sub_24048D74C()
{
  sub_2404FA028(&qword_256FFEB68, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
  return sub_2408E59A8();
}

uint64_t sub_24048D79C(_QWORD *a1, char *a2)
{
  return sub_2404DD4D4(a1, a2, (char *)type metadata accessor for TranscriptProtoVariableSetter, sub_24088FCEC) & 1;
}

unint64_t static TranscriptProtoVariableStep.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_24048D7E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDCB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDCB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "setters";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoVariableStep._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9440, (uint64_t)qword_256FFDCB0, a1);
}

uint64_t TranscriptProtoVariableStep.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 3)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoVariableStep, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
      }
      else if (result == 2)
      {
        type metadata accessor for TranscriptProtoVariableSetter(0);
        sub_2404FA028(&qword_256FFEB68, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter);
        sub_2408E5960();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoVariableStep.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v3 + 16)
    || (type metadata accessor for TranscriptProtoVariableSetter(0),
        sub_2404FA028(&qword_256FFEB68, type metadata accessor for TranscriptProtoVariableSetter, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableSetter), result = sub_2408E5A5C(), !v4))
  {
    result = sub_24048DB6C(v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for TranscriptProtoVariableStep(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_24048DB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoVariableStep(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoVariableStep.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoVariableStep, &qword_256FFEB70, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
}

unint64_t sub_24048DD00()
{
  return 0xD000000000000017;
}

uint64_t sub_24048DD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoVariableStep.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24048DD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoVariableStep.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048DD44()
{
  sub_2404FA028(&qword_257000848, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
  return sub_2408E5828();
}

uint64_t sub_24048DD94@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9440, (uint64_t)qword_256FFDCB0, a1);
}

uint64_t sub_24048DDB0()
{
  sub_2404FA028(&qword_256FFFB80, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
  return sub_2408E599C();
}

uint64_t sub_24048DDF0()
{
  sub_2404FA028(&qword_256FFFB80, type metadata accessor for TranscriptProtoVariableStep, (uint64_t)&protocol conformance descriptor for TranscriptProtoVariableStep);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTFlatExprCallVariant.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_24048DE60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDCC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDCC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "fn";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameters";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTFlatExprCallVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9448, (uint64_t)qword_256FFDCC8, a1);
}

uint64_t TranscriptProtoASTFlatExprCallVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B7EFC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24048DFE4);
}

uint64_t sub_24048DFE4()
{
  sub_2408E5768();
  type metadata accessor for TranscriptProtoASTFlatValue(0);
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_2404FA028(&qword_256FFEB80, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  return sub_2408E5840();
}

uint64_t TranscriptProtoASTFlatExprCallVariant.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    if (!*(_QWORD *)(v0[2] + 16)
      || (sub_2408E5768(),
          type metadata accessor for TranscriptProtoASTFlatValue(0),
          sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue), sub_2404FA028(&qword_256FFEB80, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue), result = sub_2408E59B4(), !v1))
    {
      type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t static TranscriptProtoASTFlatExprCallVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404D07D8(a1, a2, sub_24088F190, type metadata accessor for TranscriptProtoASTFlatExprCallVariant) & 1;
}

uint64_t TranscriptProtoASTFlatExprCallVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprCallVariant, &qword_256FFEB88, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
}

uint64_t sub_24048E248@<X0>(_QWORD *a1@<X8>)
{
  return sub_2404B8204((uint64_t (*)(_QWORD))sub_2403A8C54, a1);
}

unint64_t sub_24048E254()
{
  return 0xD000000000000021;
}

uint64_t sub_24048E270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprCallVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24048E284()
{
  return TranscriptProtoASTFlatExprCallVariant.traverse<A>(visitor:)();
}

uint64_t sub_24048E298()
{
  sub_2404FA028(&qword_257000840, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
  return sub_2408E5828();
}

uint64_t sub_24048E2E8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9448, (uint64_t)qword_256FFDCC8, a1);
}

uint64_t sub_24048E304()
{
  sub_2404FA028(&qword_256FFFB98, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
  return sub_2408E599C();
}

uint64_t sub_24048E344()
{
  sub_2404FA028(&qword_256FFFB98, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
  return sub_2408E59A8();
}

uint64_t sub_24048E394(_QWORD *a1, char *a2)
{
  return sub_2404D07D8(a1, a2, sub_24088F190, type metadata accessor for TranscriptProtoASTFlatExprCallVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatExprSayVariant.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_24048E3D8(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDCE0, 1, (uint64_t)"rawEventIds", 11);
}

uint64_t static TranscriptProtoASTFlatExprSayVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9450, (uint64_t)qword_256FFDCE0, a1);
}

uint64_t TranscriptProtoASTFlatExprSayVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0E8]);
}

uint64_t TranscriptProtoASTFlatExprSayVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404C3EA4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
}

uint64_t static TranscriptProtoASTFlatExprSayVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoASTFlatExprSayVariant) & 1;
}

uint64_t TranscriptProtoASTFlatExprSayVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprSayVariant, &qword_256FFEB90, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
}

unint64_t sub_24048E48C()
{
  return 0xD000000000000020;
}

uint64_t sub_24048E4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprSayVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048E4BC()
{
  sub_2404FA028(&qword_257000838, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
  return sub_2408E5828();
}

uint64_t sub_24048E50C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9450, (uint64_t)qword_256FFDCE0, a1);
}

uint64_t sub_24048E528()
{
  sub_2404FA028(&qword_256FFFBB0, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
  return sub_2408E599C();
}

uint64_t sub_24048E568()
{
  sub_2404FA028(&qword_256FFFBB0, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
  return sub_2408E59A8();
}

uint64_t sub_24048E5B8(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoASTFlatExprSayVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatExprPickVariant.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_24048E5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDCF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDCF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "rawEventId";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "pickType";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTFlatExprPickVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9458, (uint64_t)qword_256FFDCF8, a1);
}

uint64_t TranscriptProtoASTFlatExprPickVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BF2D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprPickVariant, type metadata accessor for TranscriptProtoASTPickType, &qword_256FFFC58, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
}

uint64_t TranscriptProtoASTFlatExprPickVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24044BC48(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_24048E7C0, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
}

uint64_t sub_24048E7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTPickType(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000D08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000D08);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTPickType);
  sub_2404FA028(&qword_256FFFC58, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTPickType);
}

uint64_t TranscriptProtoASTFlatExprPickVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprPickVariant, &qword_256FFEB98, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
}

uint64_t sub_24048E954@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404BF554(a1, type metadata accessor for TranscriptProtoASTPickType, a2);
}

unint64_t sub_24048E960()
{
  return 0xD000000000000021;
}

uint64_t sub_24048E97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprPickVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24048E990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprPickVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048E9A4()
{
  sub_2404FA028(&qword_257000830, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
  return sub_2408E5828();
}

uint64_t sub_24048E9F4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9458, (uint64_t)qword_256FFDCF8, a1);
}

uint64_t sub_24048EA10()
{
  sub_2404FA028(&qword_256FFFBC8, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
  return sub_2408E599C();
}

uint64_t sub_24048EA50()
{
  sub_2404FA028(&qword_256FFFBC8, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTFlatExprConfirmVariant.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_24048EAC0(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDD10, 1, (uint64_t)"rawEventId", 10);
}

uint64_t static TranscriptProtoASTFlatExprConfirmVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9460, (uint64_t)qword_256FFDD10, a1);
}

uint64_t TranscriptProtoASTFlatExprConfirmVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoASTFlatExprConfirmVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
}

uint64_t static TranscriptProtoASTFlatExprConfirmVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant) & 1;
}

uint64_t TranscriptProtoASTFlatExprConfirmVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, &qword_256FFEBA0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
}

unint64_t sub_24048EB6C()
{
  return 0xD000000000000024;
}

uint64_t sub_24048EB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprConfirmVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048EB9C()
{
  sub_2404FA028(&qword_257000828, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
  return sub_2408E5828();
}

uint64_t sub_24048EBEC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9460, (uint64_t)qword_256FFDD10, a1);
}

uint64_t sub_24048EC08()
{
  sub_2404FA028(&qword_256FFFBE0, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
  return sub_2408E599C();
}

uint64_t sub_24048EC48()
{
  sub_2404FA028(&qword_256FFFBE0, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
  return sub_2408E59A8();
}

uint64_t sub_24048EC98(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatExprUndoVariant.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_24048ECD4(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDD28, 1, (uint64_t)"rawEventId", 10);
}

uint64_t static TranscriptProtoASTFlatExprUndoVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9468, (uint64_t)qword_256FFDD28, a1);
}

uint64_t TranscriptProtoASTFlatExprUndoVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C118]);
}

uint64_t TranscriptProtoASTFlatExprUndoVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B8D2C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
}

uint64_t static TranscriptProtoASTFlatExprUndoVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404D4F58(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant) & 1;
}

uint64_t TranscriptProtoASTFlatExprUndoVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, &qword_256FFEBA8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
}

unint64_t sub_24048ED80()
{
  return 0xD000000000000021;
}

uint64_t sub_24048ED9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprUndoVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048EDB0()
{
  sub_2404FA028(&qword_257000820, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
  return sub_2408E5828();
}

uint64_t sub_24048EE00@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9468, (uint64_t)qword_256FFDD28, a1);
}

uint64_t sub_24048EE1C()
{
  sub_2404FA028(&qword_256FFFBF8, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
  return sub_2408E599C();
}

uint64_t sub_24048EE5C()
{
  sub_2404FA028(&qword_256FFFBF8, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
  return sub_2408E59A8();
}

uint64_t sub_24048EEAC(_QWORD *a1, char *a2)
{
  return sub_2404D4F58(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatExprRejectVariant.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_24048EEE8(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDD40, 1, (uint64_t)"rawEventId", 10);
}

uint64_t static TranscriptProtoASTFlatExprRejectVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9470, (uint64_t)qword_256FFDD40, a1);
}

uint64_t TranscriptProtoASTFlatExprRejectVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoASTFlatExprRejectVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
}

uint64_t static TranscriptProtoASTFlatExprRejectVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant) & 1;
}

uint64_t TranscriptProtoASTFlatExprRejectVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, &qword_256FFEBB0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
}

unint64_t sub_24048EF94()
{
  return 0xD000000000000023;
}

uint64_t sub_24048EFB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprRejectVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048EFC4()
{
  sub_2404FA028(&qword_257000818, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
  return sub_2408E5828();
}

uint64_t sub_24048F014@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9470, (uint64_t)qword_256FFDD40, a1);
}

uint64_t sub_24048F030()
{
  sub_2404FA028(&qword_256FFFC10, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
  return sub_2408E599C();
}

uint64_t sub_24048F070()
{
  sub_2404FA028(&qword_256FFFC10, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
  return sub_2408E59A8();
}

uint64_t sub_24048F0C0(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatExprCancelVariant.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_24048F0FC(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDD58, 1, (uint64_t)"rawEventId", 10);
}

uint64_t static TranscriptProtoASTFlatExprCancelVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9478, (uint64_t)qword_256FFDD58, a1);
}

uint64_t TranscriptProtoASTFlatExprCancelVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoASTFlatExprCancelVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
}

uint64_t static TranscriptProtoASTFlatExprCancelVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant) & 1;
}

uint64_t TranscriptProtoASTFlatExprCancelVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, &qword_256FFEBB8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
}

unint64_t sub_24048F1A8()
{
  return 0xD000000000000023;
}

uint64_t sub_24048F1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprCancelVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048F1D8()
{
  sub_2404FA028(&qword_257000810, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
  return sub_2408E5828();
}

uint64_t sub_24048F228@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9478, (uint64_t)qword_256FFDD58, a1);
}

uint64_t sub_24048F244()
{
  sub_2404FA028(&qword_256FFFC28, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
  return sub_2408E599C();
}

uint64_t sub_24048F284()
{
  sub_2404FA028(&qword_256FFFC28, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
  return sub_2408E59A8();
}

uint64_t sub_24048F2D4(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatExprContinuePlanningVariant.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_24048F310(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFDD70);
}

uint64_t static TranscriptProtoASTFlatExprContinuePlanningVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9480, (uint64_t)qword_256FFDD70, a1);
}

uint64_t TranscriptProtoASTFlatExprContinuePlanningVariant.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoASTFlatExprContinuePlanningVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, &qword_256FFEBC0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
}

unint64_t sub_24048F36C()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_24048F388()
{
  sub_2404FA028(&qword_257000808, type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
  return sub_2408E5828();
}

uint64_t sub_24048F3D8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9480, (uint64_t)qword_256FFDD70, a1);
}

uint64_t sub_24048F3F4()
{
  sub_2404FA028(&qword_256FFFC40, type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
  return sub_2408E599C();
}

uint64_t sub_24048F434()
{
  sub_2404FA028(&qword_256FFFC40, type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprContinuePlanningVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTPickType.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_24048F4A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDD88);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDD88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "index";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "none";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTPickType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9488, (uint64_t)qword_256FFDD88, a1);
}

uint64_t TranscriptProtoASTPickType.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2408E5858();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 3)
    {
      sub_24048F730();
    }
    else if (result == 1)
    {
      sub_24048F6A0();
    }
  }
  return result;
}

uint64_t sub_24048F6A0()
{
  return sub_2408E58F4();
}

uint64_t sub_24048F730()
{
  return sub_2408E587C();
}

uint64_t TranscriptProtoASTPickType.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t result;

  v2 = *(unsigned __int8 *)(v0 + 8);
  if (v2 != 255)
  {
    if ((v2 & 1) != 0)
    {
      result = sub_24048F87C(v0);
      if (v1)
        return result;
    }
    else
    {
      result = sub_2408E5A14();
      if (v1)
        return result;
    }
  }
  type metadata accessor for TranscriptProtoASTPickType(0);
  return sub_2408E578C();
}

uint64_t sub_24048F87C(uint64_t result)
{
  int v1;

  v1 = *(unsigned __int8 *)(result + 8);
  if (v1 != 255 && (v1 & 1) != 0)
    return sub_2408E59D8();
  __break(1u);
  return result;
}

uint64_t TranscriptProtoASTPickType.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTPickType, &qword_256FFEBC8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
}

uint64_t sub_24048F8E0@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = -1;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_24048F908()
{
  return 0xD000000000000016;
}

uint64_t sub_24048F924()
{
  return TranscriptProtoASTPickType.decodeMessage<A>(decoder:)();
}

uint64_t sub_24048F938()
{
  return TranscriptProtoASTPickType.traverse<A>(visitor:)();
}

uint64_t sub_24048F94C()
{
  sub_2404FA028(&qword_257000800, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
  return sub_2408E5828();
}

uint64_t sub_24048F99C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9488, (uint64_t)qword_256FFDD88, a1);
}

uint64_t sub_24048F9B8()
{
  sub_2404FA028(&qword_256FFFC58, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
  return sub_2408E599C();
}

uint64_t sub_24048F9F8()
{
  sub_2404FA028(&qword_256FFFC58, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTFlatExprSearchVariant.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_24048FA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDDA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDDA0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isLowConfidenceKnowledge";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "pickOne";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTFlatExprSearchVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9490, (uint64_t)qword_256FFDDA0, a1);
}

uint64_t TranscriptProtoASTFlatExprSearchVariant.decodeMessage<A>(decoder:)()
{
  return sub_2404B9368();
}

uint64_t TranscriptProtoASTFlatExprSearchVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9438(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
}

uint64_t static TranscriptProtoASTFlatExprSearchVariant.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2404D488C(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant) & 1;
}

uint64_t TranscriptProtoASTFlatExprSearchVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, &qword_256FFEBD0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
}

unint64_t sub_24048FC88()
{
  return 0xD000000000000023;
}

uint64_t sub_24048FCA4()
{
  return TranscriptProtoSearchExpression.decodeMessage<A>(decoder:)();
}

uint64_t sub_24048FCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprSearchVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048FCCC()
{
  sub_2404FA028(&qword_2570007F8, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
  return sub_2408E5828();
}

uint64_t sub_24048FD1C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9490, (uint64_t)qword_256FFDDA0, a1);
}

uint64_t sub_24048FD38()
{
  sub_2404FA028(&qword_256FFFC70, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
  return sub_2408E599C();
}

uint64_t sub_24048FD78()
{
  sub_2404FA028(&qword_256FFFC70, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
  return sub_2408E59A8();
}

uint64_t sub_24048FDC8(uint64_t a1, uint64_t a2)
{
  return sub_2404D488C(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatExprUpdateParametersVariant.protoMessageName.getter()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_24048FE04(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDDB8, 1, (uint64_t)"updates", 7);
}

uint64_t static TranscriptProtoASTFlatExprUpdateParametersVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9498, (uint64_t)qword_256FFDDB8, a1);
}

uint64_t TranscriptProtoASTFlatExprUpdateParametersVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, &qword_256FFEBD8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
}

uint64_t TranscriptProtoASTFlatExprUpdateParametersVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, &qword_256FFEBD8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
}

uint64_t static TranscriptProtoASTFlatExprUpdateParametersVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BAD3C, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant) & 1;
}

uint64_t TranscriptProtoASTFlatExprUpdateParametersVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, &qword_256FFEBE0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
}

unint64_t sub_24048FEE0()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_24048FEFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprUpdateParametersVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24048FF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprUpdateParametersVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24048FF24()
{
  sub_2404FA028(&qword_2570007F0, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
  return sub_2408E5828();
}

uint64_t sub_24048FF74@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9498, (uint64_t)qword_256FFDDB8, a1);
}

uint64_t sub_24048FF90()
{
  sub_2404FA028(&qword_256FFFC88, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
  return sub_2408E599C();
}

uint64_t sub_24048FFD0()
{
  sub_2404FA028(&qword_256FFFC88, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
  return sub_2408E59A8();
}

uint64_t sub_240490020(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BAD3C, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatExprGetMentionedApps.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_240490064(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFDDD0);
}

uint64_t static TranscriptProtoASTFlatExprGetMentionedApps._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94A0, (uint64_t)qword_256FFDDD0, a1);
}

uint64_t TranscriptProtoASTFlatExprGetMentionedApps.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoASTFlatExprGetMentionedApps.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, &qword_256FFEBE8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
}

unint64_t sub_2404900C0()
{
  return 0xD000000000000026;
}

uint64_t sub_2404900DC()
{
  sub_2404FA028(&qword_2570007E8, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
  return sub_2408E5828();
}

uint64_t sub_24049012C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94A0, (uint64_t)qword_256FFDDD0, a1);
}

uint64_t sub_240490148()
{
  sub_2404FA028(&qword_256FFFCA0, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
  return sub_2408E599C();
}

uint64_t sub_240490188()
{
  sub_2404FA028(&qword_256FFFCA0, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTFlatExprUpdateVariant.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_2404901F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDDE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDDE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "path";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "value";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "kind";
  *((_QWORD *)v15 + 1) = 4;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTFlatExprUpdateVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94A8, (uint64_t)qword_256FFDDE8, a1);
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, type metadata accessor for TranscriptProtoASTFlatValue, &qword_256FFEB78, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
          goto LABEL_5;
        case 2:
          type metadata accessor for TranscriptProtoASTFlatValue(0);
          sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
          v12 = v11;
          sub_2408E5960();
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, type metadata accessor for TranscriptProtoASTFlatValue, &qword_256FFEB78, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
          goto LABEL_5;
        case 4:
          sub_2404EF738();
          v12 = v11;
          sub_2408E58A0();
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404906BC((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for TranscriptProtoASTFlatValue(0);
      sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
      sub_2408E5A5C();
    }
    sub_240490830((uint64_t)v3, a1, a2, a3);
    if (v3[8] == 1)
    {
      sub_2404EF738();
      sub_2408E59E4();
    }
    type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404906BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t updated;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  sub_2403A9210(a1 + *(int *)(updated + 24), (uint64_t)v7, &qword_257000DF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000DF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t sub_240490830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t updated;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  sub_2403A9210(a1 + *(int *)(updated + 28), (uint64_t)v7, &qword_257000DF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000DF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t TranscriptProtoASTFlatExprUpdateVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, &qword_256FFEBF8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
}

uint64_t sub_2404909C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v4 = a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(a2 + *(int *)(a1 + 28), 1, 1, v5);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

unint64_t sub_240490A58()
{
  return 0xD000000000000023;
}

uint64_t sub_240490A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprUpdateVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240490A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprUpdateVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240490A9C()
{
  sub_2404FA028(&qword_2570007E0, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
  return sub_2408E5828();
}

uint64_t sub_240490AEC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94A8, (uint64_t)qword_256FFDDE8, a1);
}

uint64_t sub_240490B08()
{
  sub_2404FA028(&qword_256FFEBD8, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
  return sub_2408E599C();
}

uint64_t sub_240490B48()
{
  sub_2404FA028(&qword_256FFEBD8, type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTFlatExprPickOneVariant.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_240490BB8(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDE00, 1, (uint64_t)"rawEventId", 10);
}

uint64_t static TranscriptProtoASTFlatExprPickOneVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94B0, (uint64_t)qword_256FFDE00, a1);
}

uint64_t TranscriptProtoASTFlatExprPickOneVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoASTFlatExprPickOneVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
}

uint64_t static TranscriptProtoASTFlatExprPickOneVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant) & 1;
}

uint64_t TranscriptProtoASTFlatExprPickOneVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, &qword_256FFEC00, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
}

unint64_t sub_240490C64()
{
  return 0xD000000000000024;
}

uint64_t sub_240490C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprPickOneVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240490C94()
{
  sub_2404FA028(&qword_2570007D8, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
  return sub_2408E5828();
}

uint64_t sub_240490CE4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94B0, (uint64_t)qword_256FFDE00, a1);
}

uint64_t sub_240490D00()
{
  sub_2404FA028(&qword_256FFFCC8, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
  return sub_2408E599C();
}

uint64_t sub_240490D40()
{
  sub_2404FA028(&qword_256FFFCC8, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
  return sub_2408E59A8();
}

uint64_t sub_240490D90(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatExprResolveToolVariant.protoMessageName.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_240490DCC(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDE18, 1, (uint64_t)"toolIds", 7);
}

uint64_t static TranscriptProtoASTFlatExprResolveToolVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94B8, (uint64_t)qword_256FFDE18, a1);
}

uint64_t TranscriptProtoASTFlatExprResolveToolVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0E8]);
}

uint64_t TranscriptProtoASTFlatExprResolveToolVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404C3EA4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
}

uint64_t static TranscriptProtoASTFlatExprResolveToolVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant) & 1;
}

uint64_t TranscriptProtoASTFlatExprResolveToolVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, &qword_256FFEC08, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
}

unint64_t sub_240490E80()
{
  return 0xD000000000000028;
}

uint64_t sub_240490E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprResolveToolVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240490EB0()
{
  sub_2404FA028(&qword_2570007D0, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
  return sub_2408E5828();
}

uint64_t sub_240490F00@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94B8, (uint64_t)qword_256FFDE18, a1);
}

uint64_t sub_240490F1C()
{
  sub_2404FA028(&qword_256FFFCE0, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
  return sub_2408E599C();
}

uint64_t sub_240490F5C()
{
  sub_2404FA028(&qword_256FFFCE0, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
  return sub_2408E59A8();
}

uint64_t sub_240490FAC(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatExprDotVariant.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_240490FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDE30);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDE30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTFlatExprDotVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94C0, (uint64_t)qword_256FFDE30, a1);
}

uint64_t TranscriptProtoASTFlatExprDotVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B72D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprDotVariant, type metadata accessor for TranscriptProtoASTFlatValue, &qword_256FFEB78, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
}

uint64_t TranscriptProtoASTFlatExprDotVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404A80D4(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_2404911B4, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
}

uint64_t sub_2404911B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000DF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000DF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t TranscriptProtoASTFlatExprDotVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprDotVariant, &qword_256FFEC10, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
}

uint64_t sub_240491348@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404BF554(a1, type metadata accessor for TranscriptProtoASTFlatValue, a2);
}

unint64_t sub_240491354()
{
  return 0xD000000000000020;
}

uint64_t sub_240491370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprDotVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240491384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprDotVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240491398()
{
  sub_2404FA028(&qword_2570007C8, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
  return sub_2408E5828();
}

uint64_t sub_2404913E8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94C0, (uint64_t)qword_256FFDE30, a1);
}

uint64_t sub_240491404()
{
  sub_2404FA028(&qword_256FFFCF8, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
  return sub_2408E599C();
}

uint64_t sub_240491444()
{
  sub_2404FA028(&qword_256FFFCF8, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTFlatAssignExpr.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2404914B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDE48);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDE48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "name";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "expr";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTFlatAssignExpr._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94C8, (uint64_t)qword_256FFDE48, a1);
}

uint64_t TranscriptProtoASTFlatAssignExpr.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BF2D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatAssignExpr, type metadata accessor for TranscriptProtoASTFlatExpr, &qword_256FFFD28, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
}

uint64_t TranscriptProtoASTFlatAssignExpr.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24044BC48(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_24049167C, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatAssignExpr);
}

uint64_t sub_24049167C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F20);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTFlatAssignExpr(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000F20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000F20);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatExpr);
  sub_2404FA028(&qword_256FFFD28, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatExpr);
}

uint64_t TranscriptProtoASTFlatAssignExpr.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatAssignExpr, &qword_256FFEC18, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
}

uint64_t sub_240491810@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404BF554(a1, type metadata accessor for TranscriptProtoASTFlatExpr, a2);
}

unint64_t sub_24049181C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_240491838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatAssignExpr.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24049184C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatAssignExpr.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240491860()
{
  sub_2404FA028(&qword_2570007C0, type metadata accessor for TranscriptProtoASTFlatAssignExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
  return sub_2408E5828();
}

uint64_t sub_2404918B0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94C8, (uint64_t)qword_256FFDE48, a1);
}

uint64_t sub_2404918CC()
{
  sub_2404FA028(&qword_256FFFD10, type metadata accessor for TranscriptProtoASTFlatAssignExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
  return sub_2408E599C();
}

uint64_t sub_24049190C()
{
  sub_2404FA028(&qword_256FFFD10, type metadata accessor for TranscriptProtoASTFlatAssignExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatAssignExpr);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTFlatExpr.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_24049197C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  uint64_t v46;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDE60);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDE60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_2408EB7A0;
  v5 = v46 + v4;
  v6 = v46 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v46 + v4) = 1;
  *(_QWORD *)v6 = "value";
  *(_QWORD *)(v6 + 8) = 5;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v46 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "prefix";
  *(_QWORD *)(v10 + 8) = 6;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v46 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "infix";
  *((_QWORD *)v12 + 1) = 5;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v46 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "dot";
  *((_QWORD *)v14 + 1) = 3;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v46 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "index";
  *((_QWORD *)v16 + 1) = 5;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v46 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "call";
  *((_QWORD *)v18 + 1) = 4;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v46 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 8;
  *(_QWORD *)v20 = "endOfPlan";
  *((_QWORD *)v20 + 1) = 9;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v46 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 9;
  *(_QWORD *)v22 = "say";
  *((_QWORD *)v22 + 1) = 3;
  v22[16] = 2;
  v9();
  v23 = v46 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 10;
  *(_QWORD *)v23 = "pick";
  *(_QWORD *)(v23 + 8) = 4;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v46 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 11;
  *(_QWORD *)v25 = "confirm";
  *((_QWORD *)v25 + 1) = 7;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v46 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 12;
  *(_QWORD *)v27 = "search";
  *((_QWORD *)v27 + 1) = 6;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v46 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 13;
  *(_QWORD *)v29 = "pickOne";
  *((_QWORD *)v29 + 1) = 7;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v46 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 14;
  *(_QWORD *)v31 = "noMatchingTool";
  *((_QWORD *)v31 + 1) = 14;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v46 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 15;
  *(_QWORD *)v33 = "undo";
  *((_QWORD *)v33 + 1) = 4;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v46 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 16;
  *(_QWORD *)v35 = "resolveTool";
  *((_QWORD *)v35 + 1) = 11;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v46 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 17;
  *(_QWORD *)v37 = "reject";
  *((_QWORD *)v37 + 1) = 6;
  v37[16] = 2;
  v9();
  v38 = v46 + v4 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 18;
  *(_QWORD *)v38 = "cancel";
  *(_QWORD *)(v38 + 8) = 6;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v46 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 19;
  *(_QWORD *)v40 = "continuePlanning";
  *((_QWORD *)v40 + 1) = 16;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v46 + v4 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 20;
  *(_QWORD *)v42 = "updateParameters";
  *((_QWORD *)v42 + 1) = 16;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v46 + v4 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 21;
  *(_QWORD *)v44 = "getMentionedApps";
  *((_QWORD *)v44 + 1) = 16;
  v44[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTFlatExpr._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94D0, (uint64_t)qword_256FFDE60, a1);
}

uint64_t TranscriptProtoASTFlatExpr.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240492174(v5, a1, a2, a3);
          break;
        case 2:
          sub_2404925B4(v5, a1, a2, a3);
          break;
        case 3:
          sub_2404929F8(v5, a1, a2, a3);
          break;
        case 4:
          sub_240492E3C(v5, a1, a2, a3);
          break;
        case 5:
          sub_240493280(v5, a1, a2, a3);
          break;
        case 6:
          sub_2404936C4(v5, a1, a2, a3);
          break;
        case 8:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 18;
          goto LABEL_20;
        case 9:
          sub_240493B08(v5, a1, a2, a3);
          break;
        case 10:
          sub_240493F4C(v5, a1, a2, a3);
          break;
        case 11:
          sub_240494390(v5, a1, a2, a3);
          break;
        case 12:
          sub_2404947D4(v5, a1, a2, a3);
          break;
        case 13:
          sub_240494C18(v5, a1, a2, a3);
          break;
        case 14:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 19;
LABEL_20:
          sub_240438FB0(v11, v12, v13, v14, &qword_256FFEC20, type metadata accessor for TranscriptProtoAstflatExprEnum, v15);
          break;
        case 15:
          sub_24049505C(v5, a1, a2, a3);
          break;
        case 16:
          sub_2404954A0(v5, a1, a2, a3);
          break;
        case 17:
          sub_2404958E4(v5, a1, a2, a3);
          break;
        case 18:
          sub_240495D28(v5, a1, a2, a3);
          break;
        case 19:
          sub_24049616C(v5, a1, a2, a3);
          break;
        case 20:
          sub_2404965B0(v5, a1, a2, a3);
          break;
        case 21:
          sub_2404969F4(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240492174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000DF8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000DF8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000DF8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000DF8);
    return sub_2403A97FC((uint64_t)v33, &qword_257000DF8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000DF8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404925B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E98);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E98);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFE28, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E98);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E98);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E98);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E98);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E98);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404929F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000EA0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000EA0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFD98, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000EA0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000EA0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000EA0);
    return sub_2403A97FC((uint64_t)v33, &qword_257000EA0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000EA0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240492E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000EA8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000EA8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFCF8, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000EA8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000EA8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000EA8);
    return sub_2403A97FC((uint64_t)v33, &qword_257000EA8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000EA8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240493280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000EB0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000EB0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFD80, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000EB0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000EB0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000EB0);
    return sub_2403A97FC((uint64_t)v33, &qword_257000EB0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000EB0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404936C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000EB8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000EB8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFB98, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000EB8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000EB8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000EB8);
    return sub_2403A97FC((uint64_t)v33, &qword_257000EB8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000EB8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240493B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000EC0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000EC0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFBB0, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000EC0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000EC0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000EC0);
    return sub_2403A97FC((uint64_t)v33, &qword_257000EC0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000EC0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240493F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000EC8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000EC8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFBC8, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000EC8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000EC8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000EC8);
    return sub_2403A97FC((uint64_t)v33, &qword_257000EC8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000EC8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240494390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000ED0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000ED0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFBE0, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000ED0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000ED0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000ED0);
    return sub_2403A97FC((uint64_t)v33, &qword_257000ED0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000ED0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404947D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000ED8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000ED8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFC70, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000ED8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000ED8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000ED8);
    return sub_2403A97FC((uint64_t)v33, &qword_257000ED8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000ED8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240494C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000EE0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000EE0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFCC8, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000EE0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000EE0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000EE0);
    return sub_2403A97FC((uint64_t)v33, &qword_257000EE0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000EE0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049505C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000EE8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000EE8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFBF8, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000EE8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000EE8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000EE8);
    return sub_2403A97FC((uint64_t)v33, &qword_257000EE8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000EE8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404954A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000EF0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000EF0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFCE0, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000EF0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000EF0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000EF0);
    return sub_2403A97FC((uint64_t)v33, &qword_257000EF0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000EF0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404958E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000EF8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000EF8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFC10, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000EF8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000EF8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000EF8);
    return sub_2403A97FC((uint64_t)v33, &qword_257000EF8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000EF8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240495D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F00);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000F00);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFC28, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000F00);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000F00);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000F00);
    return sub_2403A97FC((uint64_t)v33, &qword_257000F00);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000F00);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049616C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DA0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 15)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000DA0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000218, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000DA0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000DA0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000DA0);
    return sub_2403A97FC((uint64_t)v33, &qword_257000DA0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000DA0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404965B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
  v6 = *(_QWORD *)(updated - 8);
  v7 = MEMORY[0x24BDAC7A8](updated);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F08);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = updated;
  v25(&v36[-v23], 1, 1, updated);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 16)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000F08);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFC88, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000F08);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000F08);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000F08);
    return sub_2403A97FC((uint64_t)v33, &qword_257000F08);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000F08);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404969F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t MentionedApps;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  MentionedApps = type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps(0);
  v6 = *(_QWORD *)(MentionedApps - 8);
  v7 = MEMORY[0x24BDAC7A8](MentionedApps);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F10);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = MentionedApps;
  v25(&v36[-v23], 1, 1, MentionedApps);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC20);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC20);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatExprEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000F10);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatExprEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFCA0, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000F10);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000F10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000F10);
    return sub_2403A97FC((uint64_t)v33, &qword_257000F10);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000F10);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC20);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoASTFlatExpr.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFEC20);
  v4 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v6 = (char *)sub_240496F4C + 4 * byte_2408EB9D6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoASTFlatExpr(0);
  return sub_2408E578C();
}

void sub_240496F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2404971BC(v1);
  sub_240388AE4(v2, type metadata accessor for TranscriptProtoAstflatExprEnum);
  if (!v0)
    JUMPOUT(0x240496EDCLL);
  JUMPOUT(0x240496F04);
}

void sub_240497044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_240498050(v1);
  if (v0)
  {
    sub_240388AE4(v2, type metadata accessor for TranscriptProtoAstflatExprEnum);
    JUMPOUT(0x240496F04);
  }
  sub_240388AE4(v2, type metadata accessor for TranscriptProtoAstflatExprEnum);
  JUMPOUT(0x240496EDCLL);
}

void sub_24049717C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_240497B78(v2, v3, v1, v4);
  if (!v0)
    JUMPOUT(0x240496EDCLL);
  JUMPOUT(0x240496F04);
}

uint64_t sub_2404971BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
    sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240497358(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
    sub_2404FA028(&qword_256FFFE28, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404974F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
    sub_2404FA028(&qword_256FFFD98, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240497698(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
    sub_2404FA028(&qword_256FFFCF8, type metadata accessor for TranscriptProtoASTFlatExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprDotVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprDotVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240497838(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
    sub_2404FA028(&qword_256FFFD80, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404979D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
    sub_2404FA028(&qword_256FFFB98, type metadata accessor for TranscriptProtoASTFlatExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCallVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprCallVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240497B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFEC20);
  v12 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFEC20);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoAstflatExprEnum);
    if (EnumCaseMultiPayload == 18)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240497D10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
    sub_2404FA028(&qword_256FFFBB0, type metadata accessor for TranscriptProtoASTFlatExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSayVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprSayVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240497EB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
    sub_2404FA028(&qword_256FFFBC8, type metadata accessor for TranscriptProtoASTFlatExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPickVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240498050(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 8)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
    sub_2404FA028(&qword_256FFFBE0, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprConfirmVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404981F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 9)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
    sub_2404FA028(&qword_256FFFC70, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprSearchVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240498390(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 10)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
    sub_2404FA028(&qword_256FFFCC8, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPickOneVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240498530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFEC20);
  v12 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFEC20);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoAstflatExprEnum);
    if (EnumCaseMultiPayload == 19)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2404986C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 11)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
    sub_2404FA028(&qword_256FFFBF8, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUndoVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240498868(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 12)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
    sub_2404FA028(&qword_256FFFCE0, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprResolveToolVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240498A08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 13)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
    sub_2404FA028(&qword_256FFFC10, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprRejectVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprRejectVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240498BA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 14)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
    sub_2404FA028(&qword_256FFFC28, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprCancelVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprCancelVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240498D48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 15)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
    sub_2404FA028(&qword_257000218, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240498EE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t updated;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
  MEMORY[0x24BDAC7A8](updated);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 16)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
    sub_2404FA028(&qword_256FFFC88, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprUpdateParametersVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t sub_240499088(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t MentionedApps;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MentionedApps = type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps(0);
  MEMORY[0x24BDAC7A8](MentionedApps);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC20);
  v8 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC20);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 17)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
    sub_2404FA028(&qword_256FFFCA0, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprGetMentionedApps);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatExprEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoASTFlatExpr.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExpr, &qword_256FFEC28, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
}

uint64_t sub_240499248@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoAstflatExprEnum, a1);
}

unint64_t sub_240499254()
{
  return 0xD000000000000016;
}

uint64_t sub_240499270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExpr.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240499284()
{
  return TranscriptProtoASTFlatExpr.traverse<A>(visitor:)();
}

uint64_t sub_240499298()
{
  sub_2404FA028(&qword_2570007B8, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
  return sub_2408E5828();
}

uint64_t sub_2404992E8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94D0, (uint64_t)qword_256FFDE60, a1);
}

uint64_t sub_240499304()
{
  sub_2404FA028(&qword_256FFFD28, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
  return sub_2408E599C();
}

uint64_t sub_240499344()
{
  sub_2404FA028(&qword_256FFFD28, type metadata accessor for TranscriptProtoASTFlatExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExpr);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTFlatValue.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_2404993B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  uint64_t v29;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDE78);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDE78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_2408EB750;
  v5 = v29 + v4;
  v6 = v29 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v29 + v4) = 1;
  *(_QWORD *)v6 = "null";
  *(_QWORD *)(v6 + 8) = 4;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v29 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "BOOL";
  *(_QWORD *)(v10 + 8) = 4;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v29 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "int";
  *((_QWORD *)v12 + 1) = 3;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v29 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "double";
  *((_QWORD *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v29 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "string";
  *((_QWORD *)v16 + 1) = 6;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v29 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "array";
  *((_QWORD *)v18 + 1) = 5;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v29 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "dict";
  *((_QWORD *)v20 + 1) = 4;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v29 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 10;
  *(_QWORD *)v22 = "symbol";
  *((_QWORD *)v22 + 1) = 6;
  v22[16] = 2;
  v9();
  v23 = v29 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 8;
  *(_QWORD *)v23 = "variable";
  *(_QWORD *)(v23 + 8) = 8;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v29 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "identifier";
  *((_QWORD *)v25 + 1) = 10;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v29 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "statement";
  *((_QWORD *)v27 + 1) = 9;
  v27[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTFlatValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94D8, (uint64_t)qword_256FFDE78, a1);
}

uint64_t TranscriptProtoASTFlatValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240438FB0(a1, (uint64_t)v5, a2, a3, &qword_256FFEC30, type metadata accessor for TranscriptProtoAstflatValueEnum, 10);
          break;
        case 2:
          sub_24048B398(a1, v5, a2, a3, &qword_256FFEC30, type metadata accessor for TranscriptProtoAstflatValueEnum, 0);
          break;
        case 3:
          sub_24048B520(a1, v5, a2, a3, &qword_256FFEC30, type metadata accessor for TranscriptProtoAstflatValueEnum, 1);
          break;
        case 4:
          sub_2404A5794(a1, v5, a2, a3, &qword_256FFEC30, type metadata accessor for TranscriptProtoAstflatValueEnum);
          break;
        case 5:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 3;
          goto LABEL_5;
        case 6:
          sub_240499AA8((uint64_t)v5, a1, a2, a3);
          break;
        case 7:
          sub_240499EEC((uint64_t)v5, a1, a2, a3);
          break;
        case 8:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 7;
          goto LABEL_5;
        case 9:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 8;
          goto LABEL_5;
        case 10:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 6;
LABEL_5:
          sub_240499908(v11, v12, v13, v14, &qword_256FFEC30, type metadata accessor for TranscriptProtoAstflatValueEnum, v15);
          break;
        case 11:
          sub_24049A330((uint64_t)v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240499908(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD), int a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;

  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = 0;
  v24 = 0;
  result = sub_2408E5930();
  if (v7)
    return swift_bridgeObjectRelease();
  if (v24)
  {
    v22 = v24;
    v25 = a7;
    v21 = v23;
    sub_2403A9210((uint64_t)a2, (uint64_t)v14, a5);
    v16 = a6(0);
    v20 = *(_QWORD *)(v16 - 8);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v14, 1, v16);
    sub_2403A97FC((uint64_t)v14, a5);
    if (v17 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)a2, a5);
    v18 = v22;
    *a2 = v21;
    a2[1] = v18;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(a2, 0, 1, v16);
  }
  return result;
}

uint64_t sub_240499AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E80);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC30);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC30);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatValueEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatValueEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E80);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatValueEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFD50, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E80);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E80);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E80);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E80);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E80);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC30);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240499EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E88);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC30);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC30);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatValueEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatValueEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E88);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatValueEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFD68, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E88);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E88);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E88);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E88);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E88);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC30);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049A330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC30);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC30);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstflatValueEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstflatValueEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoStatementID);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstflatValueEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA300);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA300);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoStatementID);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC30);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoStatementID);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoASTFlatValue.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFEC30);
  v4 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_24049A840 + 4 * byte_2408EB9F5[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoASTFlatValue(0);
  return sub_2408E578C();
}

uint64_t sub_24049AA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v15[2];

  v15[1] = a4;
  v5 = sub_2408E5714();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, &qword_256FFEC30);
  v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    result = sub_2403A97FC((uint64_t)v11, &qword_256FFEC30);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoAstflatValueEnum);
    if (EnumCaseMultiPayload == 10)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24049ABF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, a5);
  v12 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    sub_2403A97FC((uint64_t)v11, a5);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    return sub_2408E59D8();
  }
  result = sub_240388AE4((uint64_t)v11, a6);
  __break(1u);
  return result;
}

uint64_t sub_24049AD0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC30);
  v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC30);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
    sub_2404FA028(&qword_256FFFD50, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  __break(1u);
  return result;
}

uint64_t sub_24049AEAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC30);
  v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC30);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
    sub_2404FA028(&qword_256FFFD68, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValueDictVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  __break(1u);
  return result;
}

uint64_t sub_24049B04C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC30);
  v5 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC30);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_2408E5A38();
    return swift_bridgeObjectRelease();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  __break(1u);
  return result;
}

uint64_t sub_24049B174(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC30);
  v5 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC30);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 8)
  {
    sub_2408E5A38();
    return swift_bridgeObjectRelease();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  __break(1u);
  return result;
}

uint64_t sub_24049B29C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC30);
  v5 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC30);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_2408E5A38();
    return swift_bridgeObjectRelease();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  __break(1u);
  return result;
}

uint64_t sub_24049B3C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC30);
  v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC30);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 9)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstflatValueEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoASTFlatValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatValue, &qword_256FFEB80, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
}

uint64_t sub_24049B584@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoAstflatValueEnum, a1);
}

unint64_t sub_24049B590()
{
  return 0xD000000000000017;
}

uint64_t sub_24049B5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24049B5C0()
{
  return TranscriptProtoASTFlatValue.traverse<A>(visitor:)();
}

uint64_t sub_24049B5D4()
{
  sub_2404FA028(&qword_2570007B0, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  return sub_2408E5828();
}

uint64_t sub_24049B624@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94D8, (uint64_t)qword_256FFDE78, a1);
}

uint64_t sub_24049B640()
{
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  return sub_2408E599C();
}

uint64_t sub_24049B680()
{
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTFlatValueArrayVariant.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_24049B6F0(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDE90, 1, (uint64_t)"values", 6);
}

uint64_t static TranscriptProtoASTFlatValueArrayVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94E0, (uint64_t)qword_256FFDE90, a1);
}

uint64_t TranscriptProtoASTFlatValueArrayVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for TranscriptProtoASTFlatValue, &qword_256FFEB78, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
}

uint64_t TranscriptProtoASTFlatValueArrayVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for TranscriptProtoASTFlatValue, &qword_256FFEB78, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatValueArrayVariant);
}

uint64_t static TranscriptProtoASTFlatValueArrayVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BBB4C, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant) & 1;
}

uint64_t TranscriptProtoASTFlatValueArrayVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, &qword_256FFEC38, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
}

unint64_t sub_24049B7CC()
{
  return 0xD000000000000023;
}

uint64_t sub_24049B7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatValueArrayVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24049B7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatValueArrayVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24049B810()
{
  sub_2404FA028(&qword_2570007A8, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
  return sub_2408E5828();
}

uint64_t sub_24049B860@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94E0, (uint64_t)qword_256FFDE90, a1);
}

uint64_t sub_24049B87C()
{
  sub_2404FA028(&qword_256FFFD50, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
  return sub_2408E599C();
}

uint64_t sub_24049B8BC()
{
  sub_2404FA028(&qword_256FFFD50, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueArrayVariant);
  return sub_2408E59A8();
}

uint64_t sub_24049B90C(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BBB4C, type metadata accessor for TranscriptProtoASTFlatValueArrayVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatValueDictVariant.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_24049B950(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDEA8, 1, (uint64_t)"values", 6);
}

uint64_t static TranscriptProtoASTFlatValueDictVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94E8, (uint64_t)qword_256FFDEA8, a1);
}

uint64_t TranscriptProtoASTFlatValueDictVariant.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2408E5858();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_24049B9F8();
  }
  return result;
}

uint64_t sub_24049B9F8()
{
  sub_2408E5768();
  type metadata accessor for TranscriptProtoASTFlatValue(0);
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_2404FA028(&qword_256FFEB80, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  return sub_2408E5840();
}

uint64_t TranscriptProtoASTFlatValueDictVariant.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (sub_2408E5768(),
        type metadata accessor for TranscriptProtoASTFlatValue(0),
        sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue), sub_2404FA028(&qword_256FFEB80, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue), result = sub_2408E59B4(), !v1))
  {
    type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoASTFlatValueDictVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_24088F190, type metadata accessor for TranscriptProtoASTFlatValueDictVariant) & 1;
}

uint64_t TranscriptProtoASTFlatValueDictVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatValueDictVariant, &qword_256FFEC40, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
}

uint64_t sub_24049BC30@<X0>(uint64_t *a1@<X8>)
{
  return sub_2404AFDC8((uint64_t (*)(_QWORD))sub_2403A8C54, a1);
}

unint64_t sub_24049BC3C()
{
  return 0xD000000000000022;
}

uint64_t sub_24049BC58()
{
  return TranscriptProtoASTFlatValueDictVariant.decodeMessage<A>(decoder:)();
}

uint64_t sub_24049BC6C()
{
  return TranscriptProtoASTFlatValueDictVariant.traverse<A>(visitor:)();
}

uint64_t sub_24049BC80()
{
  sub_2404FA028(&qword_2570007A0, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
  return sub_2408E5828();
}

uint64_t sub_24049BCD0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94E8, (uint64_t)qword_256FFDEA8, a1);
}

uint64_t sub_24049BCEC()
{
  sub_2404FA028(&qword_256FFFD68, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
  return sub_2408E599C();
}

uint64_t sub_24049BD2C()
{
  sub_2404FA028(&qword_256FFFD68, type metadata accessor for TranscriptProtoASTFlatValueDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValueDictVariant);
  return sub_2408E59A8();
}

uint64_t sub_24049BD7C(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_24088F190, type metadata accessor for TranscriptProtoASTFlatValueDictVariant) & 1;
}

unint64_t static TranscriptProtoASTFlatExprIndexVariant.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_24049BDC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDEC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDEC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTFlatExprIndexVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94F0, (uint64_t)qword_256FFDEC0, a1);
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, type metadata accessor for TranscriptProtoASTFlatValue, &qword_256FFEB78, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
      }
      else if (result == 1)
      {
        type metadata accessor for TranscriptProtoASTFlatValue(0);
        sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_257000DF8, type metadata accessor for TranscriptProtoASTFlatValue, &qword_256FFEB78, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  if (!v4)
  {
    sub_24049C110(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_24049C110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000DF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000DF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t TranscriptProtoASTFlatExprIndexVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, &qword_256FFEC48, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
}

uint64_t sub_24049C2A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404B7BA4(a1, type metadata accessor for TranscriptProtoASTFlatValue, a2);
}

unint64_t sub_24049C2B0()
{
  return 0xD000000000000022;
}

uint64_t sub_24049C2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprIndexVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24049C2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprIndexVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24049C2F4()
{
  sub_2404FA028(&qword_257000798, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
  return sub_2408E5828();
}

uint64_t sub_24049C344@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94F0, (uint64_t)qword_256FFDEC0, a1);
}

uint64_t sub_24049C360()
{
  sub_2404FA028(&qword_256FFFD80, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
  return sub_2408E599C();
}

uint64_t sub_24049C3A0()
{
  sub_2404FA028(&qword_256FFFD80, type metadata accessor for TranscriptProtoASTFlatExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprIndexVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTFlatExprInfixVariant.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_24049C410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDED8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDED8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "first";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "second";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "third";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTFlatExprInfixVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF94F8, (uint64_t)qword_256FFDED8, a1);
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B69E8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, type metadata accessor for TranscriptProtoASTFlatValue, &qword_256FFEB78, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B6B34(a1, a2, a3, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_24049C620, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_24049C794, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprInfixVariant);
}

uint64_t sub_24049C620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000DF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000DF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t sub_24049C794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_257000DF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000DF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t TranscriptProtoASTFlatExprInfixVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, &qword_256FFEC58, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
}

uint64_t sub_24049C928@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2404B6F4C(a1, type metadata accessor for TranscriptProtoASTFlatValue, a2);
}

unint64_t sub_24049C934()
{
  return 0xD000000000000022;
}

uint64_t sub_24049C950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprInfixVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_24049C964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprInfixVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24049C978()
{
  sub_2404FA028(&qword_257000790, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
  return sub_2408E5828();
}

uint64_t sub_24049C9C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF94F8, (uint64_t)qword_256FFDED8, a1);
}

uint64_t sub_24049C9E4()
{
  sub_2404FA028(&qword_256FFFD98, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
  return sub_2408E599C();
}

uint64_t sub_24049CA24()
{
  sub_2404FA028(&qword_256FFFD98, type metadata accessor for TranscriptProtoASTFlatExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprInfixVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoExpression.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_24049CA94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v48;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDEF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDEF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_2408EB7B0;
  v5 = v48 + v4;
  v6 = v48 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v48 + v4) = 1;
  *(_QWORD *)v6 = "value";
  *(_QWORD *)(v6 + 8) = 5;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v48 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "statementId";
  *(_QWORD *)(v10 + 8) = 11;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v48 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "prefix";
  *((_QWORD *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v48 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "infix";
  *((_QWORD *)v14 + 1) = 5;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v48 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "dot";
  *((_QWORD *)v16 + 1) = 3;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v48 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "index";
  *((_QWORD *)v18 + 1) = 5;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v48 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "updateParameters";
  *((_QWORD *)v20 + 1) = 16;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v48 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "call";
  *((_QWORD *)v22 + 1) = 4;
  v22[16] = 2;
  v9();
  v23 = v48 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "say";
  *(_QWORD *)(v23 + 8) = 3;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v48 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "pick";
  *((_QWORD *)v25 + 1) = 4;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v48 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 12;
  *(_QWORD *)v27 = "confirm";
  *((_QWORD *)v27 + 1) = 7;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v48 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 13;
  *(_QWORD *)v29 = "search";
  *((_QWORD *)v29 + 1) = 6;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v48 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 14;
  *(_QWORD *)v31 = "pickOne";
  *((_QWORD *)v31 + 1) = 7;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v48 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 15;
  *(_QWORD *)v33 = "resolveTool";
  *((_QWORD *)v33 + 1) = 11;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v48 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 16;
  *(_QWORD *)v35 = "undo";
  *((_QWORD *)v35 + 1) = 4;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v48 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 17;
  *(_QWORD *)v37 = "reject";
  *((_QWORD *)v37 + 1) = 6;
  v37[16] = 2;
  v9();
  v38 = v48 + v4 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 18;
  *(_QWORD *)v38 = "cancel";
  *(_QWORD *)(v38 + 8) = 6;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v48 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 19;
  *(_QWORD *)v40 = "noMatchingTool";
  *((_QWORD *)v40 + 1) = 14;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v48 + v4 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 20;
  *(_QWORD *)v42 = "continuePlanning";
  *((_QWORD *)v42 + 1) = 16;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v48 + v4 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 21;
  *(_QWORD *)v44 = "endOfPlan";
  *((_QWORD *)v44 + 1) = 9;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v48 + v4 + 20 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 22;
  *(_QWORD *)v46 = "getMentionedApps";
  *((_QWORD *)v46 + 1) = 16;
  v46[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9500, (uint64_t)qword_256FFDEF0, a1);
}

uint64_t TranscriptProtoExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_24049D2C0(v5, a1, a2, a3);
          break;
        case 2:
          sub_24049D700(v5, a1, a2, a3);
          break;
        case 3:
          sub_24049DB44(v5, a1, a2, a3);
          break;
        case 4:
          sub_24049DF88(v5, a1, a2, a3);
          break;
        case 5:
          sub_24049E3CC(v5, a1, a2, a3);
          break;
        case 6:
          sub_24049E810(v5, a1, a2, a3);
          break;
        case 7:
          sub_24049EC54(v5, a1, a2, a3);
          break;
        case 8:
          sub_24049F098(v5, a1, a2, a3);
          break;
        case 9:
          sub_24049F4DC(v5, a1, a2, a3);
          break;
        case 10:
          sub_24049F920(v5, a1, a2, a3);
          break;
        case 12:
          sub_24049FD64(v5, a1, a2, a3);
          break;
        case 13:
          sub_2404A01A8(v5, a1, a2, a3);
          break;
        case 14:
          sub_2404A05EC(v5, a1, a2, a3);
          break;
        case 15:
          sub_2404A0A30(v5, a1, a2, a3);
          break;
        case 16:
          sub_2404A0E74(v5, a1, a2, a3);
          break;
        case 17:
          sub_2404A12B8(v5, a1, a2, a3);
          break;
        case 18:
          sub_2404A16FC(v5, a1, a2, a3);
          break;
        case 19:
          sub_2404A1B40(v5, a1, a2, a3);
          break;
        case 20:
          sub_2404A1F84(v5, a1, a2, a3);
          break;
        case 21:
          sub_2404A23C8(v5, a1, a2, a3);
          break;
        case 22:
          sub_2404A280C(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24049D2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoValueExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E18);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E18);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoValueExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoValueExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFDC8, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E18);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E18);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E18);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E18);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoValueExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E18);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoValueExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049D700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoStatementID);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA300);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA300);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoStatementID);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoStatementID);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049DB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E20);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E20);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoPrefixExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoPrefixExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFDF8, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E20);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E20);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E20);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E20);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoPrefixExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E20);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoPrefixExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049DF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoInfixExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E28);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E28);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoInfixExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoInfixExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFE10, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E28);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E28);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E28);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E28);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoInfixExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E28);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoInfixExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049E3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoDotExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E30);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E30);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoDotExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoDotExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFE40, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E30);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E30);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E30);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E30);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoDotExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E30);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoDotExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049E810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoIndexExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E38);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E38);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoIndexExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoIndexExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFE58, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E38);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E38);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E38);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E38);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoIndexExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E38);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoIndexExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049EC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  v6 = *(_QWORD *)(updated - 8);
  v7 = MEMORY[0x24BDAC7A8](updated);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF58);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = updated;
  v25(&v36[-v23], 1, 1, updated);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFCF58);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoUpdateParametersExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoUpdateParametersExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFE70, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFCF58);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFCF58);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF58);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFCF58);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoUpdateParametersExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF58);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoUpdateParametersExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049F098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoCallExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E40);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E40);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoCallExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoCallExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFE98, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E40);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E40);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E40);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E40);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoCallExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E40);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoCallExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049F4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSayExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E48);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E48);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSayExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSayExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFEB0, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E48);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E48);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E48);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E48);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSayExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E48);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSayExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049F920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoPickExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF90);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 9)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFCF90);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoPickExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoPickExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFEC8, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFCF90);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFCF90);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF90);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFCF90);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoPickExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF90);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoPickExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_24049FD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoConfirmExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF88);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFCF88);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoConfirmExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoConfirmExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFEE0, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFCF88);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFCF88);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF88);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFCF88);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoConfirmExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF88);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoConfirmExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404A01A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoSearchExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF80);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFCF80);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoSearchExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoSearchExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFEF8, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFCF80);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFCF80);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF80);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFCF80);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoSearchExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF80);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoSearchExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404A05EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoPickOneExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF78);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFCF78);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoPickOneExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoPickOneExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFF10, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFCF78);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFCF78);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF78);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFCF78);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoPickOneExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF78);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoPickOneExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404A0A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E50);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 13)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E50);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoResolveToolExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoResolveToolExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFF28, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E50);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E50);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E50);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E50);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoResolveToolExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E50);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoResolveToolExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404A0E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoUndoExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF70);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 14)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFCF70);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoUndoExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoUndoExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFF40, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFCF70);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFCF70);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF70);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFCF70);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoUndoExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF70);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoUndoExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404A12B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoRejectExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF68);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 15)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFCF68);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoRejectExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoRejectExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFF58, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFCF68);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFCF68);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF68);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFCF68);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoRejectExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF68);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoRejectExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404A16FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoCancelExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF60);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 16)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFCF60);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoCancelExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoCancelExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFF70, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFCF60);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFCF60);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF60);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFCF60);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoCancelExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFCF60);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoCancelExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404A1B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoNoMatchingToolExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E58);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E58);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFF88, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E58);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E58);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E58);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E58);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E58);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404A1F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoContinuePlanningExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E60);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 18)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E60);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoContinuePlanningExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoContinuePlanningExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFFA0, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E60);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E60);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E60);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E60);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoContinuePlanningExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E60);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoContinuePlanningExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404A23C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoEndOfPlanExpression(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E68);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 19)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E68);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoEndOfPlanExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoEndOfPlanExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFFB8, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E68);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E68);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E68);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E68);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoEndOfPlanExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E68);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoEndOfPlanExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404A280C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t MentionedAppsExpression;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  MentionedAppsExpression = type metadata accessor for TranscriptProtoGetMentionedAppsExpression(0);
  v6 = *(_QWORD *)(MentionedAppsExpression - 8);
  v7 = MEMORY[0x24BDAC7A8](MentionedAppsExpression);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E70);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = MentionedAppsExpression;
  v25(&v36[-v23], 1, 1, MentionedAppsExpression);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFCF98);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFCF98);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 20)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E70);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFFD0, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E70);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E70);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E70);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E70);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E70);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFCF98);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoExpression.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFCF98);
  v4 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v6 = (char *)&loc_2404A2D48 + 4 * byte_2408EBA16[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoExpression(0);
  return sub_2408E578C();
}

uint64_t sub_2404A2FE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoValueExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoValueExpression);
    sub_2404FA028(&qword_256FFFDC8, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoValueExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A3184(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A3324(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPrefixExpression);
    sub_2404FA028(&qword_256FFFDF8, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPrefixExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A34C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoInfixExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoInfixExpression);
    sub_2404FA028(&qword_256FFFE10, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoInfixExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A3664(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoDotExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoDotExpression);
    sub_2404FA028(&qword_256FFFE40, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoDotExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A3804(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoIndexExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoIndexExpression);
    sub_2404FA028(&qword_256FFFE58, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoIndexExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A39A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t updated;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  MEMORY[0x24BDAC7A8](updated);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUpdateParametersExpression);
    sub_2404FA028(&qword_256FFFE70, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoUpdateParametersExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A3B44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoCallExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 7)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoCallExpression);
    sub_2404FA028(&qword_256FFFE98, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoCallExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A3CE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSayExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 8)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSayExpression);
    sub_2404FA028(&qword_256FFFEB0, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSayExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A3E84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPickExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 9)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPickExpression);
    sub_2404FA028(&qword_256FFFEC8, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPickExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A4024(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoConfirmExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 10)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoConfirmExpression);
    sub_2404FA028(&qword_256FFFEE0, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoConfirmExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A41C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoSearchExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 11)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoSearchExpression);
    sub_2404FA028(&qword_256FFFEF8, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoSearchExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A4364(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoPickOneExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 12)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoPickOneExpression);
    sub_2404FA028(&qword_256FFFF10, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoPickOneExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A4504(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 13)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoResolveToolExpression);
    sub_2404FA028(&qword_256FFFF28, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoResolveToolExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A46A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoUndoExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 14)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoUndoExpression);
    sub_2404FA028(&qword_256FFFF40, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoUndoExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A4844(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoRejectExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 15)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoRejectExpression);
    sub_2404FA028(&qword_256FFFF58, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoRejectExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A49E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoCancelExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 16)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoCancelExpression);
    sub_2404FA028(&qword_256FFFF70, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoCancelExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A4B84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoNoMatchingToolExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 17)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
    sub_2404FA028(&qword_256FFFF88, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoNoMatchingToolExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A4D24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoContinuePlanningExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 18)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoContinuePlanningExpression);
    sub_2404FA028(&qword_256FFFFA0, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoContinuePlanningExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A4EC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoEndOfPlanExpression(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 19)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoEndOfPlanExpression);
    sub_2404FA028(&qword_256FFFFB8, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoEndOfPlanExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A5064(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t MentionedAppsExpression;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MentionedAppsExpression = type metadata accessor for TranscriptProtoGetMentionedAppsExpression(0);
  MEMORY[0x24BDAC7A8](MentionedAppsExpression);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFCF98);
  v8 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFCF98);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 20)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
    sub_2404FA028(&qword_256FFFFD0, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoGetMentionedAppsExpression);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoExpressionEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoExpression, &qword_256FFEC60, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
}

uint64_t sub_2404A5224@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoExpressionEnum, a1);
}

unint64_t sub_2404A5230()
{
  return 0xD000000000000015;
}

uint64_t sub_2404A524C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExpression.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404A5260()
{
  return TranscriptProtoExpression.traverse<A>(visitor:)();
}

uint64_t sub_2404A5274()
{
  sub_2404FA028(&qword_257000788, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
  return sub_2408E5828();
}

uint64_t sub_2404A52C4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9500, (uint64_t)qword_256FFDEF0, a1);
}

uint64_t sub_2404A52E0()
{
  sub_2404FA028(&qword_256FFFDB0, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
  return sub_2408E599C();
}

uint64_t sub_2404A5320()
{
  sub_2404FA028(&qword_256FFFDB0, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoValueExpression.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2404A5390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v22;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDF08);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDF08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_2408EAD90;
  v5 = v22 + v4;
  v6 = v22 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v22 + v4) = 1;
  *(_QWORD *)v6 = "null";
  *(_QWORD *)(v6 + 8) = 4;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "BOOL";
  *(_QWORD *)(v10 + 8) = 4;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "int";
  *((_QWORD *)v12 + 1) = 3;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "double";
  *((_QWORD *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "string";
  *((_QWORD *)v16 + 1) = 6;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "array";
  *((_QWORD *)v18 + 1) = 5;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "symbol";
  *((_QWORD *)v20 + 1) = 6;
  v20[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoValueExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9508, (uint64_t)qword_256FFDF08, a1);
}

uint64_t TranscriptProtoValueExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240438FB0(a1, (uint64_t)v5, a2, a3, &qword_256FFEC68, type metadata accessor for TranscriptProtoValueExpressionEnum, 6);
          break;
        case 2:
          sub_24048B398(a1, v5, a2, a3, &qword_256FFEC68, type metadata accessor for TranscriptProtoValueExpressionEnum, 0);
          break;
        case 3:
          sub_24048B520(a1, v5, a2, a3, &qword_256FFEC68, type metadata accessor for TranscriptProtoValueExpressionEnum, 1);
          break;
        case 4:
          sub_2404A5794(a1, v5, a2, a3, &qword_256FFEC68, type metadata accessor for TranscriptProtoValueExpressionEnum);
          break;
        case 5:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 3;
          goto LABEL_14;
        case 6:
          sub_2404A5908((uint64_t)v5, a1, a2, a3);
          break;
        case 7:
          v11 = a1;
          v12 = v5;
          v13 = a2;
          v14 = a3;
          v15 = 5;
LABEL_14:
          sub_240499908(v11, v12, v13, v14, &qword_256FFEC68, type metadata accessor for TranscriptProtoValueExpressionEnum, v15);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2404A5794(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = 0;
  v20 = 1;
  result = sub_2408E5918();
  if (!v6 && (v20 & 1) == 0)
  {
    v14 = v19;
    sub_2403A9210((uint64_t)a2, (uint64_t)v12, a5);
    v15 = a6(0);
    v18 = *(_QWORD *)(v15 - 8);
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v15);
    sub_2403A97FC((uint64_t)v12, a5);
    if (v16 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)a2, a5);
    *a2 = v14;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a2, 0, 1, v15);
  }
  return result;
}

uint64_t sub_2404A5908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000E08);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEC68);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEC68);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoValueExpressionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoValueExpressionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000E08);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoValueExpressionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFFDE0, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000E08);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000E08);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000E08);
    return sub_2403A97FC((uint64_t)v33, &qword_257000E08);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000E08);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEC68);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoValueExpression.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFEC68);
  v4 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_2404A5E18 + 4 * byte_2408EBA32[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoValueExpression(0);
  return sub_2408E578C();
}

uint64_t sub_2404A5FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t result;
  _QWORD v19[4];

  v19[0] = a3;
  v19[3] = a4;
  v9 = sub_2408E5714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v15, a5);
  v16 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16) == 1)
  {
    result = sub_2403A97FC((uint64_t)v15, a5);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    result = sub_240388AE4((uint64_t)v15, a6);
    if (EnumCaseMultiPayload == 6)
    {
      MEMORY[0x2426834C8](result);
      sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
      sub_2408E59E4();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2404A6174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, a5);
  v12 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    sub_2403A97FC((uint64_t)v11, a5);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    return sub_2408E5A14();
  }
  result = sub_240388AE4((uint64_t)v11, a6);
  __break(1u);
  return result;
}

uint64_t sub_2404A6280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, a5);
  v12 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    sub_2403A97FC((uint64_t)v11, a5);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    return sub_2408E5A2C();
  }
  result = sub_240388AE4((uint64_t)v11, a6);
  __break(1u);
  return result;
}

uint64_t sub_2404A638C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v11, a5);
  v12 = a6(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    sub_2403A97FC((uint64_t)v11, a5);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2408E5A38();
    return swift_bridgeObjectRelease();
  }
  result = sub_240388AE4((uint64_t)v11, a6);
  __break(1u);
  return result;
}

uint64_t sub_2404A64AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC68);
  v8 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC68);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
    sub_2404FA028(&qword_256FFFDE0, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoValueExpressionEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404A664C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEC68);
  v5 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEC68);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2408E5A38();
    return swift_bridgeObjectRelease();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoValueExpressionEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoValueExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoValueExpression, &qword_256FFEC70, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
}

uint64_t sub_2404A6794@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoValueExpressionEnum, a1);
}

unint64_t sub_2404A67A0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2404A67BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoValueExpression.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404A67D0()
{
  return TranscriptProtoValueExpression.traverse<A>(visitor:)();
}

uint64_t sub_2404A67E4()
{
  sub_2404FA028(&qword_257000780, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
  return sub_2408E5828();
}

uint64_t sub_2404A6834@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9508, (uint64_t)qword_256FFDF08, a1);
}

uint64_t sub_2404A6850()
{
  sub_2404FA028(&qword_256FFFDC8, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
  return sub_2408E599C();
}

uint64_t sub_2404A6890()
{
  sub_2404FA028(&qword_256FFFDC8, type metadata accessor for TranscriptProtoValueExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoValueExpressionArrayVariant.protoMessageName.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_2404A6900(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDF20, 1, (uint64_t)"values", 6);
}

uint64_t static TranscriptProtoValueExpressionArrayVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9510, (uint64_t)qword_256FFDF20, a1);
}

uint64_t TranscriptProtoValueExpressionArrayVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoValueExpressionArrayVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoValueExpressionArrayVariant);
}

uint64_t static TranscriptProtoValueExpressionArrayVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BE728, type metadata accessor for TranscriptProtoValueExpressionArrayVariant) & 1;
}

uint64_t TranscriptProtoValueExpressionArrayVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoValueExpressionArrayVariant, &qword_256FFEC78, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
}

unint64_t sub_2404A69DC()
{
  return 0xD000000000000026;
}

uint64_t sub_2404A69F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSayExpression.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404A6A0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoValueExpressionArrayVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404A6A20()
{
  sub_2404FA028(&qword_257000778, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
  return sub_2408E5828();
}

uint64_t sub_2404A6A70@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9510, (uint64_t)qword_256FFDF20, a1);
}

uint64_t sub_2404A6A8C()
{
  sub_2404FA028(&qword_256FFFDE0, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
  return sub_2408E599C();
}

uint64_t sub_2404A6ACC()
{
  sub_2404FA028(&qword_256FFFDE0, type metadata accessor for TranscriptProtoValueExpressionArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoValueExpressionArrayVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404A6B1C(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BE728, type metadata accessor for TranscriptProtoValueExpressionArrayVariant) & 1;
}

unint64_t static TranscriptProtoPrefixExpression.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404A6B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDF38);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDF38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "prefixOp";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPrefixExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9518, (uint64_t)qword_256FFDF38, a1);
}

uint64_t TranscriptProtoPrefixExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPrefixExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
      }
      else if (result == 1)
      {
        sub_2404EF7C0();
        sub_2408E58A0();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoPrefixExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B6424(a1, a2, a3, (void (*)(void))sub_2404EF7C0, (uint64_t)&type metadata for TranscriptProtoPrefixExpression_PrefixOp, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_2404A6E14, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPrefixExpression);
}

uint64_t sub_2404A6E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoPrefixExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPrefixExpression, &qword_256FFEC88, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
}

uint64_t sub_2404A6FA8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2404BB03C(a1, type metadata accessor for TranscriptProtoStatementID, a2);
}

unint64_t sub_2404A6FB4()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404A6FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPrefixExpression.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404A6FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPrefixExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404A6FF8()
{
  sub_2404FA028(&qword_257000770, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
  return sub_2408E5828();
}

uint64_t sub_2404A7048@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9518, (uint64_t)qword_256FFDF38, a1);
}

uint64_t sub_2404A7064()
{
  sub_2404FA028(&qword_256FFFDF8, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
  return sub_2408E599C();
}

uint64_t sub_2404A70A4()
{
  sub_2404FA028(&qword_256FFFDF8, type metadata accessor for TranscriptProtoPrefixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPrefixExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoInfixExpression.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2404A7114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDF50);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDF50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "infixOp";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "lhs";
  *((_QWORD *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "rhs";
  *(_QWORD *)(v12 + 8) = 3;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoInfixExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9520, (uint64_t)qword_256FFDF50, a1);
}

uint64_t TranscriptProtoInfixExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v12 = v11;
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoInfixExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
        goto LABEL_5;
      }
      if (result == 1)
      {
        sub_2404EF804();
        v12 = v11;
        sub_2408E58A0();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    v12 = v11;
    sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoInfixExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoInfixExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  if (!*v3 || (sub_2404EF804(), result = sub_2408E59E4(), !v4))
  {
    result = sub_2404A74E8((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      sub_2404A765C((uint64_t)v3, a1, a2, a3);
      type metadata accessor for TranscriptProtoInfixExpression(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_2404A74E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoInfixExpression(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_2404A765C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoInfixExpression(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoInfixExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoInfixExpression, &qword_256FFEC98, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
}

uint64_t sub_2404A77F0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2404B6F4C(a1, type metadata accessor for TranscriptProtoStatementID, a2);
}

unint64_t sub_2404A77FC()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2404A7818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoInfixExpression.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404A782C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoInfixExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404A7840()
{
  sub_2404FA028(&qword_257000768, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
  return sub_2408E5828();
}

uint64_t sub_2404A7890@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9520, (uint64_t)qword_256FFDF50, a1);
}

uint64_t sub_2404A78AC()
{
  sub_2404FA028(&qword_256FFFE10, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
  return sub_2408E599C();
}

uint64_t sub_2404A78EC()
{
  sub_2404FA028(&qword_256FFFE10, type metadata accessor for TranscriptProtoInfixExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoInfixExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTFlatExprPrefixVariant.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_2404A795C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDF68);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDF68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "first";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "second";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTFlatExprPrefixVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9528, (uint64_t)qword_256FFDF68, a1);
}

uint64_t TranscriptProtoASTFlatExprPrefixVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, type metadata accessor for TranscriptProtoASTFlatValue, &qword_256FFEB78, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
      }
      else if (result == 1)
      {
        sub_2404EF848();
        sub_2408E58A0();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoASTFlatExprPrefixVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B6424(a1, a2, a3, (void (*)(void))sub_2404EF848, (uint64_t)&type metadata for TranscriptProtoASTPrefixOp, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_2404A7C10, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant);
}

uint64_t sub_2404A7C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000DF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000DF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2404FA028(&qword_256FFEB78, type metadata accessor for TranscriptProtoASTFlatValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t TranscriptProtoASTFlatExprPrefixVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, &qword_256FFECA8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
}

uint64_t sub_2404A7DA4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2404BB03C(a1, type metadata accessor for TranscriptProtoASTFlatValue, a2);
}

unint64_t sub_2404A7DB0()
{
  return 0xD000000000000023;
}

uint64_t sub_2404A7DCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprPrefixVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404A7DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTFlatExprPrefixVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404A7DF4()
{
  sub_2404FA028(&qword_257000760, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
  return sub_2408E5828();
}

uint64_t sub_2404A7E44@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9528, (uint64_t)qword_256FFDF68, a1);
}

uint64_t sub_2404A7E60()
{
  sub_2404FA028(&qword_256FFFE28, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
  return sub_2408E599C();
}

uint64_t sub_2404A7EA0()
{
  sub_2404FA028(&qword_256FFFE28, type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTFlatExprPrefixVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoDotExpression.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_2404A7F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDF80);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDF80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoDotExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9530, (uint64_t)qword_256FFDF80, a1);
}

uint64_t TranscriptProtoDotExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B72D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoDotExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoDotExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404A80D4(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_2404A819C, (void (*)(_QWORD))type metadata accessor for TranscriptProtoDotExpression);
}

uint64_t sub_2404A80D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t, uint64_t), void (*a5)(_QWORD))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;

  result = a4(v5, a1, a2, a3);
  if (!v6)
  {
    v9 = v5[1];
    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = *v5 & 0xFFFFFFFFFFFFLL;
    if (v10)
      sub_2408E5A38();
    a5(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404A819C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoDotExpression(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoDotExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoDotExpression, &qword_256FFECB0, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
}

unint64_t sub_2404A8330()
{
  return 0xD000000000000018;
}

uint64_t sub_2404A834C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoDotExpression.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404A8360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoDotExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404A8374()
{
  sub_2404FA028(&qword_257000758, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
  return sub_2408E5828();
}

uint64_t sub_2404A83C4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9530, (uint64_t)qword_256FFDF80, a1);
}

uint64_t sub_2404A83E0()
{
  sub_2404FA028(&qword_256FFFE40, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
  return sub_2408E599C();
}

uint64_t sub_2404A8420()
{
  sub_2404FA028(&qword_256FFFE40, type metadata accessor for TranscriptProtoDotExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoDotExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoIndexExpression.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2404A8490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDF98);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDF98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoIndexExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9538, (uint64_t)qword_256FFDF98, a1);
}

uint64_t TranscriptProtoIndexExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoIndexExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
      }
      else if (result == 1)
      {
        type metadata accessor for TranscriptProtoStatementID(0);
        sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoIndexExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA300, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  if (!v4)
  {
    sub_2404A87E0(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoIndexExpression(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404A87E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoIndexExpression(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoIndexExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoIndexExpression, &qword_256FFECB8, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
}

unint64_t sub_2404A8974()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2404A8990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoIndexExpression.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404A89A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoIndexExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404A89B8()
{
  sub_2404FA028(&qword_257000750, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
  return sub_2408E5828();
}

uint64_t sub_2404A8A08@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9538, (uint64_t)qword_256FFDF98, a1);
}

uint64_t sub_2404A8A24()
{
  sub_2404FA028(&qword_256FFFE58, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
  return sub_2408E599C();
}

uint64_t sub_2404A8A64()
{
  sub_2404FA028(&qword_256FFFE58, type metadata accessor for TranscriptProtoIndexExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoIndexExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoUpdateParametersExpression.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_2404A8AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDFB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDFB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "callStatementId";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "updates";
  *((_QWORD *)v11 + 1) = 7;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoUpdateParametersExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9540, (uint64_t)qword_256FFDFB0, a1);
}

uint64_t TranscriptProtoUpdateParametersExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
        sub_2404FA028(&qword_256FFECC0, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
        sub_2408E5960();
      }
      else if (result == 1)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUpdateParametersExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoUpdateParametersExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404A8E58(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
      sub_2404FA028(&qword_256FFECC0, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
      sub_2408E5A5C();
    }
    type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404A8E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t updated;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
  sub_2403A9210(a1 + *(int *)(updated + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t static TranscriptProtoUpdateParametersExpression.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404CB984(a1, a2, (char *)type metadata accessor for TranscriptProtoUpdateParametersExpression, sub_2408BAE14) & 1;
}

uint64_t TranscriptProtoUpdateParametersExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoUpdateParametersExpression, &qword_256FFECC8, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
}

unint64_t sub_2404A9010()
{
  return 0xD000000000000025;
}

uint64_t sub_2404A902C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUpdateParametersExpression.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404A9040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUpdateParametersExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404A9054()
{
  sub_2404FA028(&qword_257000748, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
  return sub_2408E5828();
}

uint64_t sub_2404A90A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9540, (uint64_t)qword_256FFDFB0, a1);
}

uint64_t sub_2404A90C0()
{
  sub_2404FA028(&qword_256FFFE70, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
  return sub_2408E599C();
}

uint64_t sub_2404A9100()
{
  sub_2404FA028(&qword_256FFFE70, type metadata accessor for TranscriptProtoUpdateParametersExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParametersExpression);
  return sub_2408E59A8();
}

uint64_t sub_2404A9150(_QWORD *a1, char *a2)
{
  return sub_2404CB984(a1, a2, (char *)type metadata accessor for TranscriptProtoUpdateParametersExpression, sub_2408BAE14) & 1;
}

unint64_t static TranscriptProtoUpdateParameterExpression_UpdateParameter.protoMessageName.getter()
{
  return 0xD000000000000034;
}

uint64_t sub_2404A9194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDFC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDFC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "parameterId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "kind";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "value";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoUpdateParameterExpression_UpdateParameter._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9548, (uint64_t)qword_256FFDFC8, a1);
}

uint64_t TranscriptProtoUpdateParameterExpression_UpdateParameter.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        sub_2404EF88C();
        v12 = v11;
        sub_2408E58A0();
        goto LABEL_5;
      }
      if (result == 1)
      {
        v12 = v11;
        sub_2408E593C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    v12 = v11;
    sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoUpdateParameterExpression_UpdateParameter.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = *(_QWORD *)(v3 + 8);
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    if (*(_BYTE *)(v3 + 16) != 1 || (sub_2404EF88C(), result = sub_2408E59E4(), !v4))
    {
      result = sub_2404A9578(v3, a1, a2, a3);
      if (!v4)
      {
        type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t sub_2404A9578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t updated;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter(0);
  sub_2403A9210(a1 + *(int *)(updated + 24), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoUpdateParameterExpression_UpdateParameter.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, &qword_256FFECD8, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
}

uint64_t sub_2404A970C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404A9718(a1, type metadata accessor for TranscriptProtoStatementID, a2);
}

uint64_t sub_2404A9718@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = a3 + *(int *)(a1 + 24);
  v5 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0xE000000000000000;
  *(_BYTE *)(a3 + 16) = 0;
  return result;
}

unint64_t sub_2404A9784()
{
  return 0xD000000000000034;
}

uint64_t sub_2404A97A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUpdateParameterExpression_UpdateParameter.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404A97B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUpdateParameterExpression_UpdateParameter.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404A97C8()
{
  sub_2404FA028(&qword_257000740, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  return sub_2408E5828();
}

uint64_t sub_2404A9818@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9548, (uint64_t)qword_256FFDFC8, a1);
}

uint64_t sub_2404A9834()
{
  sub_2404FA028(&qword_256FFECC0, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  return sub_2408E599C();
}

uint64_t sub_2404A9874()
{
  sub_2404FA028(&qword_256FFECC0, type metadata accessor for TranscriptProtoUpdateParameterExpression_UpdateParameter, (uint64_t)&protocol conformance descriptor for TranscriptProtoUpdateParameterExpression_UpdateParameter);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoCallExpression.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2404A98E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFDFE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFDFE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "fn";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameters";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoCallExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9550, (uint64_t)qword_256FFDFE0, a1);
}

uint64_t TranscriptProtoCallExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B7EFC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2404A9A68);
}

uint64_t sub_2404A9A68()
{
  sub_2408E5768();
  type metadata accessor for TranscriptProtoStatementID(0);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFECE0, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  return sub_2408E5840();
}

uint64_t TranscriptProtoCallExpression.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    if (!*(_QWORD *)(v0[2] + 16)
      || (sub_2408E5768(),
          type metadata accessor for TranscriptProtoStatementID(0),
          sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID), sub_2404FA028(&qword_256FFECE0, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID), result = sub_2408E59B4(), !v1))
    {
      type metadata accessor for TranscriptProtoCallExpression(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t static TranscriptProtoCallExpression.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404D07D8(a1, a2, sub_2408901B4, type metadata accessor for TranscriptProtoCallExpression) & 1;
}

uint64_t TranscriptProtoCallExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoCallExpression, &qword_256FFECE8, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
}

uint64_t sub_2404A9CCC@<X0>(_QWORD *a1@<X8>)
{
  return sub_2404B8204((uint64_t (*)(_QWORD))sub_2403A8C70, a1);
}

unint64_t sub_2404A9CD8()
{
  return 0xD000000000000019;
}

uint64_t sub_2404A9CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoCallExpression.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404A9D08()
{
  return TranscriptProtoCallExpression.traverse<A>(visitor:)();
}

uint64_t sub_2404A9D1C()
{
  sub_2404FA028(&qword_257000738, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
  return sub_2408E5828();
}

uint64_t sub_2404A9D6C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9550, (uint64_t)qword_256FFDFE0, a1);
}

uint64_t sub_2404A9D88()
{
  sub_2404FA028(&qword_256FFFE98, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
  return sub_2408E599C();
}

uint64_t sub_2404A9DC8()
{
  sub_2404FA028(&qword_256FFFE98, type metadata accessor for TranscriptProtoCallExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCallExpression);
  return sub_2408E59A8();
}

uint64_t sub_2404A9E18(_QWORD *a1, char *a2)
{
  return sub_2404D07D8(a1, a2, sub_2408901B4, type metadata accessor for TranscriptProtoCallExpression) & 1;
}

unint64_t static TranscriptProtoSayExpression.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_2404A9E5C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFDFF8, 1, (uint64_t)"statementIds", 12);
}

uint64_t static TranscriptProtoSayExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9558, (uint64_t)qword_256FFDFF8, a1);
}

uint64_t TranscriptProtoSayExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoSayExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSayExpression);
}

uint64_t static TranscriptProtoSayExpression.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BE728, type metadata accessor for TranscriptProtoSayExpression) & 1;
}

uint64_t TranscriptProtoSayExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSayExpression, &qword_256FFECF0, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
}

unint64_t sub_2404A9F38()
{
  return 0xD000000000000018;
}

uint64_t sub_2404A9F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSayExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404A9F68()
{
  sub_2404FA028(&qword_257000730, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
  return sub_2408E5828();
}

uint64_t sub_2404A9FB8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9558, (uint64_t)qword_256FFDFF8, a1);
}

uint64_t sub_2404A9FD4()
{
  sub_2404FA028(&qword_256FFFEB0, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
  return sub_2408E599C();
}

uint64_t sub_2404AA014()
{
  sub_2404FA028(&qword_256FFFEB0, type metadata accessor for TranscriptProtoSayExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSayExpression);
  return sub_2408E59A8();
}

uint64_t sub_2404AA064(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BE728, type metadata accessor for TranscriptProtoSayExpression) & 1;
}

unint64_t static TranscriptProtoPickExpression.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2404AA0A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE010);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE010);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoPickExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9560, (uint64_t)qword_256FFE010, a1);
}

uint64_t TranscriptProtoPickExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2408E5900();
      }
      else if (result == 1)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoPickExpression, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoPickExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404AA394((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    if (*v3)
      sub_2408E5A14();
    type metadata accessor for TranscriptProtoPickExpression(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404AA394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoPickExpression(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoPickExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPickExpression, &qword_256FFECF8, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
}

uint64_t sub_2404AA528@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404AA538(a1, type metadata accessor for TranscriptProtoStatementID, 0, a2);
}

uint64_t sub_2404AA538@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  char *v6;
  uint64_t v7;
  uint64_t result;

  v6 = (char *)a4 + *(int *)(a1 + 20);
  v7 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a4 = a3;
  return result;
}

unint64_t sub_2404AA5A0()
{
  return 0xD000000000000019;
}

uint64_t sub_2404AA5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPickExpression.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404AA5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPickExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AA5E4()
{
  sub_2404FA028(&qword_257000728, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
  return sub_2408E5828();
}

uint64_t sub_2404AA634@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9560, (uint64_t)qword_256FFE010, a1);
}

uint64_t sub_2404AA650()
{
  sub_2404FA028(&qword_256FFFEC8, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
  return sub_2408E599C();
}

uint64_t sub_2404AA690()
{
  sub_2404FA028(&qword_256FFFEC8, type metadata accessor for TranscriptProtoPickExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoConfirmExpression.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2404AA700(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE028, 1, (uint64_t)"statementId", 11);
}

uint64_t static TranscriptProtoConfirmExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9568, (uint64_t)qword_256FFE028, a1);
}

uint64_t TranscriptProtoConfirmExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240464D60(a1, a2, a3, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoConfirmExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA300, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  if (!v4)
  {
    type metadata accessor for TranscriptProtoConfirmExpression(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoConfirmExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoConfirmExpression, &qword_256FFED00, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
}

uint64_t sub_2404AA824@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoStatementID, a1);
}

unint64_t sub_2404AA830()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2404AA84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUndoExpression.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404AA860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoConfirmExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AA874()
{
  sub_2404FA028(&qword_257000720, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
  return sub_2408E5828();
}

uint64_t sub_2404AA8C4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9568, (uint64_t)qword_256FFE028, a1);
}

uint64_t sub_2404AA8E0()
{
  sub_2404FA028(&qword_256FFFEE0, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
  return sub_2408E599C();
}

uint64_t sub_2404AA920()
{
  sub_2404FA028(&qword_256FFFEE0, type metadata accessor for TranscriptProtoConfirmExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoConfirmExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSearchExpression.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404AA990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE040);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE040);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isLowConfidenceKnowledge";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "pickOne";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSearchExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9570, (uint64_t)qword_256FFE040, a1);
}

uint64_t TranscriptProtoSearchExpression.decodeMessage<A>(decoder:)()
{
  return sub_2404B9368();
}

uint64_t TranscriptProtoSearchExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9438(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSearchExpression);
}

uint64_t static TranscriptProtoSearchExpression.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2404D488C(a1, a2, type metadata accessor for TranscriptProtoSearchExpression) & 1;
}

uint64_t TranscriptProtoSearchExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSearchExpression, &qword_256FFED08, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
}

unint64_t sub_2404AABAC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404AABC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSearchExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AABDC()
{
  sub_2404FA028(&qword_257000718, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
  return sub_2408E5828();
}

uint64_t sub_2404AAC2C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9570, (uint64_t)qword_256FFE040, a1);
}

uint64_t sub_2404AAC48()
{
  sub_2404FA028(&qword_256FFFEF8, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
  return sub_2408E599C();
}

uint64_t sub_2404AAC88()
{
  sub_2404FA028(&qword_256FFFEF8, type metadata accessor for TranscriptProtoSearchExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoSearchExpression);
  return sub_2408E59A8();
}

uint64_t sub_2404AACD8(uint64_t a1, uint64_t a2)
{
  return sub_2404D488C(a1, a2, type metadata accessor for TranscriptProtoSearchExpression) & 1;
}

unint64_t static TranscriptProtoPickOneExpression.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2404AAD14(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE058, 1, (uint64_t)"statementId", 11);
}

uint64_t static TranscriptProtoPickOneExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9578, (uint64_t)qword_256FFE058, a1);
}

uint64_t TranscriptProtoPickOneExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240464D60(a1, a2, a3, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoPickOneExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA300, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  if (!v4)
  {
    type metadata accessor for TranscriptProtoPickOneExpression(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoPickOneExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoPickOneExpression, &qword_256FFED10, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
}

unint64_t sub_2404AAE38()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2404AAE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoPickOneExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AAE68()
{
  sub_2404FA028(&qword_257000710, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
  return sub_2408E5828();
}

uint64_t sub_2404AAEB8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9578, (uint64_t)qword_256FFE058, a1);
}

uint64_t sub_2404AAED4()
{
  sub_2404FA028(&qword_256FFFF10, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
  return sub_2408E599C();
}

uint64_t sub_2404AAF14()
{
  sub_2404FA028(&qword_256FFFF10, type metadata accessor for TranscriptProtoPickOneExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoPickOneExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoResolveToolExpression.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_2404AAF84(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE070, 1, (uint64_t)"toolIds", 7);
}

uint64_t static TranscriptProtoResolveToolExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9580, (uint64_t)qword_256FFE070, a1);
}

uint64_t TranscriptProtoResolveToolExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0E8]);
}

uint64_t TranscriptProtoResolveToolExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404C3EA4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoResolveToolExpression);
}

uint64_t static TranscriptProtoResolveToolExpression.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoResolveToolExpression) & 1;
}

uint64_t TranscriptProtoResolveToolExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoResolveToolExpression, &qword_256FFED18, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
}

unint64_t sub_2404AB038()
{
  return 0xD000000000000020;
}

uint64_t sub_2404AB054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoResolveToolExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AB068()
{
  sub_2404FA028(&qword_257000708, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
  return sub_2408E5828();
}

uint64_t sub_2404AB0B8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9580, (uint64_t)qword_256FFE070, a1);
}

uint64_t sub_2404AB0D4()
{
  sub_2404FA028(&qword_256FFFF28, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
  return sub_2408E599C();
}

uint64_t sub_2404AB114()
{
  sub_2404FA028(&qword_256FFFF28, type metadata accessor for TranscriptProtoResolveToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoResolveToolExpression);
  return sub_2408E59A8();
}

uint64_t sub_2404AB164(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoResolveToolExpression) & 1;
}

unint64_t static TranscriptProtoUndoExpression.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2404AB1A8(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE088, 1, (uint64_t)"statementId", 11);
}

uint64_t static TranscriptProtoUndoExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9588, (uint64_t)qword_256FFE088, a1);
}

uint64_t TranscriptProtoUndoExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240464D60(a1, a2, a3, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoUndoExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA300, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  if (!v4)
  {
    type metadata accessor for TranscriptProtoUndoExpression(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoUndoExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoUndoExpression, &qword_256FFED20, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
}

unint64_t sub_2404AB2CC()
{
  return 0xD000000000000019;
}

uint64_t sub_2404AB2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUndoExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AB2FC()
{
  sub_2404FA028(&qword_257000700, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
  return sub_2408E5828();
}

uint64_t sub_2404AB34C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9588, (uint64_t)qword_256FFE088, a1);
}

uint64_t sub_2404AB368()
{
  sub_2404FA028(&qword_256FFFF40, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
  return sub_2408E599C();
}

uint64_t sub_2404AB3A8()
{
  sub_2404FA028(&qword_256FFFF40, type metadata accessor for TranscriptProtoUndoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoRejectExpression.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404AB418(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE0A0, 1, (uint64_t)"statementId", 11);
}

uint64_t static TranscriptProtoRejectExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9590, (uint64_t)qword_256FFE0A0, a1);
}

uint64_t TranscriptProtoRejectExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240464D60(a1, a2, a3, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoRejectExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA300, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  if (!v4)
  {
    type metadata accessor for TranscriptProtoRejectExpression(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoRejectExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoRejectExpression, &qword_256FFED28, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
}

unint64_t sub_2404AB53C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404AB558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoRejectExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AB56C()
{
  sub_2404FA028(&qword_2570006F8, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
  return sub_2408E5828();
}

uint64_t sub_2404AB5BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9590, (uint64_t)qword_256FFE0A0, a1);
}

uint64_t sub_2404AB5D8()
{
  sub_2404FA028(&qword_256FFFF58, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
  return sub_2408E599C();
}

uint64_t sub_2404AB618()
{
  sub_2404FA028(&qword_256FFFF58, type metadata accessor for TranscriptProtoRejectExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoRejectExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoCancelExpression.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404AB688(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE0B8, 1, (uint64_t)"statementId", 11);
}

uint64_t static TranscriptProtoCancelExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9598, (uint64_t)qword_256FFE0B8, a1);
}

uint64_t TranscriptProtoCancelExpression.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240464D60(a1, a2, a3, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoCancelExpression.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA300, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  if (!v4)
  {
    type metadata accessor for TranscriptProtoCancelExpression(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoCancelExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoCancelExpression, &qword_256FFED30, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
}

unint64_t sub_2404AB7AC()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404AB7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoCancelExpression.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AB7DC()
{
  sub_2404FA028(&qword_2570006F0, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
  return sub_2408E5828();
}

uint64_t sub_2404AB82C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9598, (uint64_t)qword_256FFE0B8, a1);
}

uint64_t sub_2404AB848()
{
  sub_2404FA028(&qword_256FFFF70, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
  return sub_2408E599C();
}

uint64_t sub_2404AB888()
{
  sub_2404FA028(&qword_256FFFF70, type metadata accessor for TranscriptProtoCancelExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoCancelExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoNoMatchingToolExpression.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_2404AB8F8(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFE0D0);
}

uint64_t static TranscriptProtoNoMatchingToolExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95A0, (uint64_t)qword_256FFE0D0, a1);
}

uint64_t TranscriptProtoNoMatchingToolExpression.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoNoMatchingToolExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoNoMatchingToolExpression, &qword_256FFED38, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
}

unint64_t sub_2404AB954()
{
  return 0xD000000000000023;
}

uint64_t sub_2404AB970()
{
  sub_2404FA028(&qword_2570006E8, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
  return sub_2408E5828();
}

uint64_t sub_2404AB9C0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95A0, (uint64_t)qword_256FFE0D0, a1);
}

uint64_t sub_2404AB9DC()
{
  sub_2404FA028(&qword_256FFFF88, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
  return sub_2408E599C();
}

uint64_t sub_2404ABA1C()
{
  sub_2404FA028(&qword_256FFFF88, type metadata accessor for TranscriptProtoNoMatchingToolExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoNoMatchingToolExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoContinuePlanningExpression.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_2404ABA88(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFE0E8);
}

uint64_t static TranscriptProtoContinuePlanningExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95A8, (uint64_t)qword_256FFE0E8, a1);
}

uint64_t TranscriptProtoContinuePlanningExpression.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoContinuePlanningExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoContinuePlanningExpression, &qword_256FFED40, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
}

unint64_t sub_2404ABAE4()
{
  return 0xD000000000000025;
}

uint64_t sub_2404ABB00()
{
  sub_2404FA028(&qword_2570006E0, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
  return sub_2408E5828();
}

uint64_t sub_2404ABB50@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95A8, (uint64_t)qword_256FFE0E8, a1);
}

uint64_t sub_2404ABB6C()
{
  sub_2404FA028(&qword_256FFFFA0, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
  return sub_2408E599C();
}

uint64_t sub_2404ABBAC()
{
  sub_2404FA028(&qword_256FFFFA0, type metadata accessor for TranscriptProtoContinuePlanningExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanningExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoEndOfPlanExpression.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2404ABC18(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFE100);
}

uint64_t static TranscriptProtoEndOfPlanExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95B0, (uint64_t)qword_256FFE100, a1);
}

uint64_t TranscriptProtoEndOfPlanExpression.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoEndOfPlanExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoEndOfPlanExpression, &qword_256FFED48, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
}

unint64_t sub_2404ABC74()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2404ABC90()
{
  sub_2404FA028(&qword_2570006D8, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
  return sub_2408E5828();
}

uint64_t sub_2404ABCE0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95B0, (uint64_t)qword_256FFE100, a1);
}

uint64_t sub_2404ABCFC()
{
  sub_2404FA028(&qword_256FFFFB8, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
  return sub_2408E599C();
}

uint64_t sub_2404ABD3C()
{
  sub_2404FA028(&qword_256FFFFB8, type metadata accessor for TranscriptProtoEndOfPlanExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoEndOfPlanExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoGetMentionedAppsExpression.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_2404ABDA8(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFE118);
}

uint64_t static TranscriptProtoGetMentionedAppsExpression._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95B8, (uint64_t)qword_256FFE118, a1);
}

uint64_t TranscriptProtoGetMentionedAppsExpression.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoGetMentionedAppsExpression.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoGetMentionedAppsExpression, &qword_256FFED50, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
}

unint64_t sub_2404ABE04()
{
  return 0xD000000000000025;
}

uint64_t sub_2404ABE20()
{
  sub_2404FA028(&qword_2570006D0, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
  return sub_2408E5828();
}

uint64_t sub_2404ABE70@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95B8, (uint64_t)qword_256FFE118, a1);
}

uint64_t sub_2404ABE8C()
{
  sub_2404FA028(&qword_256FFFFD0, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
  return sub_2408E599C();
}

uint64_t sub_2404ABECC()
{
  sub_2404FA028(&qword_256FFFFD0, type metadata accessor for TranscriptProtoGetMentionedAppsExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoGetMentionedAppsExpression);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTProgram.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_2404ABF38(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE130, 1, (uint64_t)"stmts", 5);
}

uint64_t static TranscriptProtoASTProgram._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95C0, (uint64_t)qword_256FFE130, a1);
}

uint64_t TranscriptProtoASTProgram.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for TranscriptProtoASTStmt, &qword_256FFED58, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
}

uint64_t TranscriptProtoASTProgram.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for TranscriptProtoASTStmt, &qword_256FFED58, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTProgram);
}

uint64_t static TranscriptProtoASTProgram.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BFDF8, type metadata accessor for TranscriptProtoASTProgram) & 1;
}

uint64_t TranscriptProtoASTProgram.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTProgram, &qword_256FFED60, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
}

unint64_t sub_2404AC014()
{
  return 0xD000000000000015;
}

uint64_t sub_2404AC030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTProgram.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404AC044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTProgram.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AC058()
{
  sub_2404FA028(&qword_2570006C8, type metadata accessor for TranscriptProtoASTProgram, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
  return sub_2408E5828();
}

uint64_t sub_2404AC0A8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95C0, (uint64_t)qword_256FFE130, a1);
}

uint64_t sub_2404AC0C4()
{
  sub_2404FA028(&qword_256FFFFE8, type metadata accessor for TranscriptProtoASTProgram, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
  return sub_2408E599C();
}

uint64_t sub_2404AC104()
{
  sub_2404FA028(&qword_256FFFFE8, type metadata accessor for TranscriptProtoASTProgram, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTProgram);
  return sub_2408E59A8();
}

uint64_t sub_2404AC154(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BFDF8, type metadata accessor for TranscriptProtoASTProgram) & 1;
}

unint64_t static TranscriptProtoASTStmt.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_2404AC198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE148);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE148);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "expr";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "if";
  *((_QWORD *)v11 + 1) = 2;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "for";
  *(_QWORD *)(v12 + 8) = 3;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTStmt._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95C8, (uint64_t)qword_256FFE148, a1);
}

uint64_t TranscriptProtoASTStmt.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404760FC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2404AC36C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2404AC648, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2404AC938);
}

uint64_t sub_2404AC36C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v26 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v27 = (uint64_t)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - v15;
  v28 = v6;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v29 = *a1 & 0xF000000000000007;
  if (!(v18 >> 62) && v29 != 0xF000000000000007)
  {
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000CF8);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
    sub_2404F9F88(v18);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExpr);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000CF8);
  v22 = v27;
  sub_2403A9210((uint64_t)v16, v27, &qword_257000CF8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v22, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000CF8);
    return sub_2403A97FC(v22, &qword_257000CF8);
  }
  else
  {
    sub_2403A91CC(v22, (uint64_t)v9, type metadata accessor for TranscriptProtoASTExpr);
    if (v29 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000CF8);
    v23 = swift_allocBox();
    sub_2403A91CC((uint64_t)v9, v24, type metadata accessor for TranscriptProtoASTExpr);
    v25 = *a1;
    *a1 = v23;
    return sub_2404F9F88(v25);
  }
}

uint64_t sub_2404AC648(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v6 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v29 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v27 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DE0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v27 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18((char *)v27 - v16, 1, 1, v6);
  v19 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && (v19 & 0xC000000000000000) == 0x4000000000000000)
  {
    v27[1] = a2;
    swift_retain();
    sub_2403A97FC((uint64_t)v17, &qword_257000DE0);
    v20 = swift_projectBox();
    sub_2403AE1A4(v20, (uint64_t)v11, type metadata accessor for TranscriptProtoASTIfStmt);
    sub_2404F9F88(v19);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v17, type metadata accessor for TranscriptProtoASTIfStmt);
    v18(v17, 0, 1, v6);
  }
  sub_2404FA028(&qword_257000010, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
  v21 = v30;
  sub_2408E596C();
  if (v21)
    return sub_2403A97FC((uint64_t)v17, &qword_257000DE0);
  sub_2403A9210((uint64_t)v17, (uint64_t)v15, &qword_257000DE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_2403A97FC((uint64_t)v17, &qword_257000DE0);
    return sub_2403A97FC((uint64_t)v15, &qword_257000DE0);
  }
  else
  {
    v23 = v29;
    sub_2403A91CC((uint64_t)v15, v29, type metadata accessor for TranscriptProtoASTIfStmt);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v17, &qword_257000DE0);
    v24 = swift_allocBox();
    sub_2403A91CC(v23, v25, type metadata accessor for TranscriptProtoASTIfStmt);
    v26 = *a1;
    *a1 = v24 | 0x4000000000000000;
    return sub_2404F9F88(v26);
  }
}

uint64_t sub_2404AC938(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v6 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v29 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v27 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DE8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v27 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v18((char *)v27 - v16, 1, 1, v6);
  v19 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && (v19 & 0xC000000000000000) == 0x8000000000000000)
  {
    v27[1] = a2;
    swift_retain();
    sub_2403A97FC((uint64_t)v17, &qword_257000DE8);
    v20 = swift_projectBox();
    sub_2403AE1A4(v20, (uint64_t)v11, type metadata accessor for TranscriptProtoASTForInStmt);
    sub_2404F9F88(v19);
    sub_2403A91CC((uint64_t)v11, (uint64_t)v17, type metadata accessor for TranscriptProtoASTForInStmt);
    v18(v17, 0, 1, v6);
  }
  sub_2404FA028(&qword_257000028, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
  v21 = v30;
  sub_2408E596C();
  if (v21)
    return sub_2403A97FC((uint64_t)v17, &qword_257000DE8);
  sub_2403A9210((uint64_t)v17, (uint64_t)v15, &qword_257000DE8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1)
  {
    sub_2403A97FC((uint64_t)v17, &qword_257000DE8);
    return sub_2403A97FC((uint64_t)v15, &qword_257000DE8);
  }
  else
  {
    v23 = v29;
    sub_2403A91CC((uint64_t)v15, v29, type metadata accessor for TranscriptProtoASTForInStmt);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v17, &qword_257000DE8);
    v24 = swift_allocBox();
    sub_2403A91CC(v23, v25, type metadata accessor for TranscriptProtoASTForInStmt);
    v26 = *a1;
    *a1 = v24 | 0x8000000000000000;
    return sub_2404F9F88(v26);
  }
}

uint64_t TranscriptProtoASTStmt.traverse<A>(visitor:)()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t result;

  if ((~*v0 & 0xF000000000000007) != 0)
  {
    v2 = (unint64_t)*v0 >> 62;
    if ((_DWORD)v2)
    {
      if ((_DWORD)v2 == 1)
      {
        result = sub_2404ACDF0(v0);
        if (v1)
          return result;
      }
      else
      {
        result = sub_2404ACEFC(v0);
        if (v1)
          return result;
      }
    }
    else
    {
      result = sub_2404ACCEC(v0);
      if (v1)
        return result;
    }
  }
  type metadata accessor for TranscriptProtoASTStmt(0);
  return sub_2408E578C();
}

uint64_t sub_2404ACCEC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExpr(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *a1;
  if ((unint64_t)*a1 >> 62)
    v6 = 1;
  else
    v6 = (*a1 & 0xF000000000000007) == 0xF000000000000007;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v4, type metadata accessor for TranscriptProtoASTExpr);
    sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoASTExpr);
  }
  return result;
}

uint64_t sub_2404ACDF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && (*a1 & 0xC000000000000000) == 0x4000000000000000)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTIfStmt);
    sub_2404FA028(&qword_257000010, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTIfStmt);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404ACEFC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && (*a1 & 0xC000000000000000) == 0x8000000000000000)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTForInStmt);
    sub_2404FA028(&qword_257000028, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTForInStmt);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t TranscriptProtoASTStmt.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTStmt, &qword_256FFED68, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
}

unint64_t sub_2404AD028()
{
  return 0xD000000000000012;
}

uint64_t sub_2404AD044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTStmt.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404AD058()
{
  return TranscriptProtoASTStmt.traverse<A>(visitor:)();
}

uint64_t sub_2404AD06C()
{
  sub_2404FA028(&qword_2570006C0, type metadata accessor for TranscriptProtoASTStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
  return sub_2408E5828();
}

uint64_t sub_2404AD0BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95C8, (uint64_t)qword_256FFE148, a1);
}

uint64_t sub_2404AD0D8()
{
  sub_2404FA028(&qword_256FFED58, type metadata accessor for TranscriptProtoASTStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
  return sub_2408E599C();
}

uint64_t sub_2404AD118()
{
  sub_2404FA028(&qword_256FFED58, type metadata accessor for TranscriptProtoASTStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTIfStmt.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_2404AD188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE160);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE160);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "condition";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "thenBlock";
  *((_QWORD *)v11 + 1) = 9;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "elseBlock";
  *(_QWORD *)(v12 + 8) = 9;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTIfStmt._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95D0, (uint64_t)qword_256FFE160, a1);
}

uint64_t TranscriptProtoASTIfStmt.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    v11 = a3;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTIfStmt, type metadata accessor for TranscriptProtoASTBlockStmt, &qword_257000040, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
          break;
        case 2:
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTIfStmt, type metadata accessor for TranscriptProtoASTBlockStmt, &qword_257000040, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
          break;
        case 1:
          type metadata accessor for TranscriptProtoASTExpr(0);
          sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
          a3 = v11;
          sub_2408E596C();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoASTIfStmt.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_257000CF8, type metadata accessor for TranscriptProtoASTExpr, &qword_256FFED98, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  if (!v4)
  {
    sub_2404AD5B4(v3, a1, a2, a3);
    sub_2404AD728(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoASTIfStmt(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404AD5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000DD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000DD8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTBlockStmt);
  sub_2404FA028(&qword_257000040, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTBlockStmt);
}

uint64_t sub_2404AD728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTIfStmt(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_257000DD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000DD8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTBlockStmt);
  sub_2404FA028(&qword_257000040, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTBlockStmt);
}

uint64_t TranscriptProtoASTIfStmt.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTIfStmt, &qword_256FFED70, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
}

uint64_t sub_2404AD8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404C2940(a1, type metadata accessor for TranscriptProtoASTExpr, type metadata accessor for TranscriptProtoASTBlockStmt, a2);
}

unint64_t sub_2404AD8D0()
{
  return 0xD000000000000014;
}

uint64_t sub_2404AD8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTIfStmt.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404AD900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTIfStmt.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AD914()
{
  sub_2404FA028(&qword_2570006B8, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
  return sub_2408E5828();
}

uint64_t sub_2404AD964@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95D0, (uint64_t)qword_256FFE160, a1);
}

uint64_t sub_2404AD980()
{
  sub_2404FA028(&qword_257000010, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
  return sub_2408E599C();
}

uint64_t sub_2404AD9C0()
{
  sub_2404FA028(&qword_257000010, type metadata accessor for TranscriptProtoASTIfStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTIfStmt);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTForInStmt.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_2404ADA30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE178);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE178);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "elementIdent";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "iterable";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "block";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTForInStmt._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95D8, (uint64_t)qword_256FFE178, a1);
}

uint64_t TranscriptProtoASTForInStmt.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTForInStmt, type metadata accessor for TranscriptProtoASTBlockStmt, &qword_257000040, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
          break;
        case 2:
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTForInStmt, type metadata accessor for TranscriptProtoASTExpr, &qword_256FFED98, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
          break;
        case 1:
          sub_2408E593C();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoASTForInStmt.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = v3[1];
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    result = sub_2404ADDE4((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      sub_2404ADF58((uint64_t)v3, a1, a2, a3);
      type metadata accessor for TranscriptProtoASTForInStmt(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_2404ADDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExpr(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000CF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000CF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t sub_2404ADF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTForInStmt(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_257000DD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000DD8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTBlockStmt);
  sub_2404FA028(&qword_257000040, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTBlockStmt);
}

uint64_t TranscriptProtoASTForInStmt.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTForInStmt, &qword_256FFED78, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
}

uint64_t sub_2404AE0EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404C3C3C(a1, type metadata accessor for TranscriptProtoASTExpr, type metadata accessor for TranscriptProtoASTBlockStmt, a2);
}

unint64_t sub_2404AE100()
{
  return 0xD000000000000017;
}

uint64_t sub_2404AE11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTForInStmt.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404AE130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTForInStmt.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AE144()
{
  sub_2404FA028(&qword_2570006B0, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
  return sub_2408E5828();
}

uint64_t sub_2404AE194@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95D8, (uint64_t)qword_256FFE178, a1);
}

uint64_t sub_2404AE1B0()
{
  sub_2404FA028(&qword_257000028, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
  return sub_2408E599C();
}

uint64_t sub_2404AE1F0()
{
  sub_2404FA028(&qword_257000028, type metadata accessor for TranscriptProtoASTForInStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTForInStmt);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTBlockStmt.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_2404AE260(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE190, 1, (uint64_t)"stmts", 5);
}

uint64_t static TranscriptProtoASTBlockStmt._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95E0, (uint64_t)qword_256FFE190, a1);
}

uint64_t TranscriptProtoASTBlockStmt.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for TranscriptProtoASTStmt, &qword_256FFED58, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt);
}

uint64_t TranscriptProtoASTBlockStmt.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for TranscriptProtoASTStmt, &qword_256FFED58, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTStmt, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTBlockStmt);
}

uint64_t static TranscriptProtoASTBlockStmt.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BFDF8, type metadata accessor for TranscriptProtoASTBlockStmt) & 1;
}

uint64_t TranscriptProtoASTBlockStmt.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTBlockStmt, &qword_256FFED80, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
}

unint64_t sub_2404AE33C()
{
  return 0xD000000000000017;
}

uint64_t sub_2404AE358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTProgram.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404AE36C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTBlockStmt.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AE380()
{
  sub_2404FA028(&qword_2570006A8, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
  return sub_2408E5828();
}

uint64_t sub_2404AE3D0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95E0, (uint64_t)qword_256FFE190, a1);
}

uint64_t sub_2404AE3EC()
{
  sub_2404FA028(&qword_257000040, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
  return sub_2408E599C();
}

uint64_t sub_2404AE42C()
{
  sub_2404FA028(&qword_257000040, type metadata accessor for TranscriptProtoASTBlockStmt, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTBlockStmt);
  return sub_2408E59A8();
}

uint64_t sub_2404AE47C(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BFDF8, type metadata accessor for TranscriptProtoASTBlockStmt) & 1;
}

unint64_t static TranscriptProtoASTLiteral.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_2404AE4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v22;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE1A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE1A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_2408EAD90;
  v5 = v22 + v4;
  v6 = v22 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v22 + v4) = 1;
  *(_QWORD *)v6 = "null";
  *(_QWORD *)(v6 + 8) = 4;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "BOOL";
  *(_QWORD *)(v10 + 8) = 4;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "int";
  *((_QWORD *)v12 + 1) = 3;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "double";
  *((_QWORD *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "string";
  *((_QWORD *)v16 + 1) = 6;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "array";
  *((_QWORD *)v18 + 1) = 5;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "dict";
  *((_QWORD *)v20 + 1) = 4;
  v20[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTLiteral._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95E8, (uint64_t)qword_256FFE1A8, a1);
}

uint64_t TranscriptProtoASTLiteral.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240438FB0(a1, (uint64_t)v5, a2, a3, &qword_256FFED88, type metadata accessor for TranscriptProtoAstliteralEnum, 6);
          break;
        case 2:
          sub_24048B398(a1, v5, a2, a3, &qword_256FFED88, type metadata accessor for TranscriptProtoAstliteralEnum, 0);
          break;
        case 3:
          sub_24048B520(a1, v5, a2, a3, &qword_256FFED88, type metadata accessor for TranscriptProtoAstliteralEnum, 1);
          break;
        case 4:
          sub_2404A5794(a1, v5, a2, a3, &qword_256FFED88, type metadata accessor for TranscriptProtoAstliteralEnum);
          break;
        case 5:
          sub_240499908(a1, v5, a2, a3, &qword_256FFED88, type metadata accessor for TranscriptProtoAstliteralEnum, 3);
          break;
        case 6:
          sub_2404AE8CC((uint64_t)v5, a1, a2, a3);
          break;
        case 7:
          sub_2404AED10((uint64_t)v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2404AE8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFED88);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DC0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFED88);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFED88);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstliteralEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstliteralEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000DC0);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstliteralEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000070, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000DC0);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000DC0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000DC0);
    return sub_2403A97FC((uint64_t)v33, &qword_257000DC0);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000DC0);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFED88);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404AED10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFED88);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DC8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFED88);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFED88);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoAstliteralEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoAstliteralEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000DC8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoAstliteralEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000088, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000DC8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000DC8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000DC8);
    return sub_2403A97FC((uint64_t)v33, &qword_257000DC8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000DC8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFED88);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoASTLiteral.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFED88);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFED88);
  v4 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_2404AF220 + 4 * byte_2408EBA40[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoASTLiteral(0);
  return sub_2408E578C();
}

uint64_t sub_2404AF3B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFED88);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFED88);
  v8 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFED88);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
    sub_2404FA028(&qword_257000070, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstliteralEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404AF550(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFED88);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFED88);
  v8 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFED88);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
    sub_2404FA028(&qword_257000088, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTLiteralDictVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoAstliteralEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoASTLiteral.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTLiteral, &qword_256FFED90, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
}

uint64_t sub_2404AF710@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoAstliteralEnum, a1);
}

unint64_t sub_2404AF71C()
{
  return 0xD000000000000015;
}

uint64_t sub_2404AF738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTLiteral.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404AF74C()
{
  return TranscriptProtoASTLiteral.traverse<A>(visitor:)();
}

uint64_t sub_2404AF760()
{
  sub_2404FA028(&qword_2570006A0, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
  return sub_2408E5828();
}

uint64_t sub_2404AF7B0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95E8, (uint64_t)qword_256FFE1A8, a1);
}

uint64_t sub_2404AF7CC()
{
  sub_2404FA028(&qword_257000058, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
  return sub_2408E599C();
}

uint64_t sub_2404AF80C()
{
  sub_2404FA028(&qword_257000058, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTLiteralArrayVariant.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_2404AF87C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE1C0, 1, (uint64_t)"exprs", 5);
}

uint64_t static TranscriptProtoASTLiteralArrayVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95F0, (uint64_t)qword_256FFE1C0, a1);
}

uint64_t TranscriptProtoASTLiteralArrayVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for TranscriptProtoASTExpr, &qword_256FFED98, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
}

uint64_t TranscriptProtoASTLiteralArrayVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for TranscriptProtoASTExpr, &qword_256FFED98, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTLiteralArrayVariant);
}

uint64_t static TranscriptProtoASTLiteralArrayVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408C0BCC, type metadata accessor for TranscriptProtoASTLiteralArrayVariant) & 1;
}

uint64_t TranscriptProtoASTLiteralArrayVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTLiteralArrayVariant, &qword_256FFEDA0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
}

unint64_t sub_2404AF958()
{
  return 0xD000000000000021;
}

uint64_t sub_2404AF974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTLiteralArrayVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404AF988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTLiteralArrayVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404AF99C()
{
  sub_2404FA028(&qword_257000698, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
  return sub_2408E5828();
}

uint64_t sub_2404AF9EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95F0, (uint64_t)qword_256FFE1C0, a1);
}

uint64_t sub_2404AFA08()
{
  sub_2404FA028(&qword_257000070, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
  return sub_2408E599C();
}

uint64_t sub_2404AFA48()
{
  sub_2404FA028(&qword_257000070, type metadata accessor for TranscriptProtoASTLiteralArrayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralArrayVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404AFA98(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408C0BCC, type metadata accessor for TranscriptProtoASTLiteralArrayVariant) & 1;
}

unint64_t static TranscriptProtoASTLiteralDictVariant.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_2404AFADC(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE1D8, 2, (uint64_t)"values", 6);
}

uint64_t static TranscriptProtoASTLiteralDictVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF95F8, (uint64_t)qword_256FFE1D8, a1);
}

uint64_t TranscriptProtoASTLiteralDictVariant.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2408E5858();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
      sub_2404AFB84();
  }
  return result;
}

uint64_t sub_2404AFB84()
{
  sub_2408E5768();
  type metadata accessor for TranscriptProtoASTExpr(0);
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_2404FA028(&qword_256FFEDA8, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  return sub_2408E5840();
}

uint64_t TranscriptProtoASTLiteralDictVariant.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (sub_2408E5768(),
        type metadata accessor for TranscriptProtoASTExpr(0),
        sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr), sub_2404FA028(&qword_256FFEDA8, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr), result = sub_2408E59B4(), !v1))
  {
    type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoASTLiteralDictVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_24088F7F4, type metadata accessor for TranscriptProtoASTLiteralDictVariant) & 1;
}

uint64_t TranscriptProtoASTLiteralDictVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTLiteralDictVariant, &qword_256FFEDB0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
}

uint64_t sub_2404AFDBC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2404AFDC8((uint64_t (*)(_QWORD))sub_2403A8C8C, a1);
}

uint64_t sub_2404AFDC8@<X0>(uint64_t (*a1)(_QWORD)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t result;

  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = a1(MEMORY[0x24BEE4AF8]);
  *a2 = result;
  return result;
}

unint64_t sub_2404AFE04()
{
  return 0xD000000000000020;
}

uint64_t sub_2404AFE20()
{
  return TranscriptProtoASTLiteralDictVariant.decodeMessage<A>(decoder:)();
}

uint64_t sub_2404AFE34()
{
  return TranscriptProtoASTLiteralDictVariant.traverse<A>(visitor:)();
}

uint64_t sub_2404AFE48()
{
  sub_2404FA028(&qword_257000690, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
  return sub_2408E5828();
}

uint64_t sub_2404AFE98@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF95F8, (uint64_t)qword_256FFE1D8, a1);
}

uint64_t sub_2404AFEB4()
{
  sub_2404FA028(&qword_257000088, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
  return sub_2408E599C();
}

uint64_t sub_2404AFEF4()
{
  sub_2404FA028(&qword_257000088, type metadata accessor for TranscriptProtoASTLiteralDictVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteralDictVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404AFF44(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_24088F7F4, type metadata accessor for TranscriptProtoASTLiteralDictVariant) & 1;
}

unint64_t static TranscriptProtoASTExpr.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_2404AFF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  uint64_t v50;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE1F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE1F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_2408EB7C0;
  v5 = v50 + v4;
  v6 = v50 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v50 + v4) = 1;
  *(_QWORD *)v6 = "ident";
  *(_QWORD *)(v6 + 8) = 5;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v50 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "literal";
  *(_QWORD *)(v10 + 8) = 7;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v50 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "prefix";
  *((_QWORD *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v50 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "infix";
  *((_QWORD *)v14 + 1) = 5;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v50 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "dot";
  *((_QWORD *)v16 + 1) = 3;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v50 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "index";
  *((_QWORD *)v18 + 1) = 5;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v50 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "call";
  *((_QWORD *)v20 + 1) = 4;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v50 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "endOfPlan";
  *((_QWORD *)v22 + 1) = 9;
  v22[16] = 2;
  v9();
  v23 = v50 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "say";
  *(_QWORD *)(v23 + 8) = 3;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v50 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "pick";
  *((_QWORD *)v25 + 1) = 4;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v50 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "confirm";
  *((_QWORD *)v27 + 1) = 7;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v50 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "statementId";
  *((_QWORD *)v29 + 1) = 11;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v50 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "search";
  *((_QWORD *)v31 + 1) = 6;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v50 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "pickOne";
  *((_QWORD *)v33 + 1) = 7;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v50 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "noMatchingTool";
  *((_QWORD *)v35 + 1) = 14;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v50 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 16;
  *(_QWORD *)v37 = "undo";
  *((_QWORD *)v37 + 1) = 4;
  v37[16] = 2;
  v9();
  v38 = v50 + v4 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 17;
  *(_QWORD *)v38 = "resolveTool";
  *(_QWORD *)(v38 + 8) = 11;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v50 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 18;
  *(_QWORD *)v40 = "reject";
  *((_QWORD *)v40 + 1) = 6;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v50 + v4 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 19;
  *(_QWORD *)v42 = "cancel";
  *((_QWORD *)v42 + 1) = 6;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v50 + v4 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 20;
  *(_QWORD *)v44 = "continuePlanning";
  *((_QWORD *)v44 + 1) = 16;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v50 + v4 + 20 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 21;
  *(_QWORD *)v46 = "updateParameters";
  *((_QWORD *)v46 + 1) = 16;
  v46[16] = 2;
  v9();
  v47 = (_QWORD *)(v50 + v4 + 21 * v3);
  v48 = (char *)v47 + *(int *)(v1 + 48);
  *v47 = 22;
  *(_QWORD *)v48 = "getMentionedApps";
  *((_QWORD *)v48 + 1) = 16;
  v48[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTExpr._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9600, (uint64_t)qword_256FFE1F0, a1);
}

uint64_t TranscriptProtoASTExpr.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2404B07E4(a1, v5);
          break;
        case 2:
          sub_2404B08C0((unint64_t *)v5, a1, a2, a3);
          break;
        case 3:
          sub_2404B0BB0((unint64_t *)v5, a1, a2, a3);
          break;
        case 4:
          sub_2404B0EA0((unint64_t *)v5, a1, a2, a3);
          break;
        case 5:
          sub_2404B119C((unint64_t *)v5, a1, a2, a3);
          break;
        case 6:
          sub_2404B148C((unint64_t *)v5, a1, a2, a3);
          break;
        case 7:
          sub_2404B1784((unint64_t *)v5, a1, a2, a3);
          break;
        case 8:
          sub_2404B1A74(a1, v5);
          break;
        case 9:
          sub_2404B1C34((unint64_t *)v5, a1, a2, a3);
          break;
        case 10:
          sub_2404B1F2C((unint64_t *)v5, a1, a2, a3);
          break;
        case 11:
          sub_2404B221C((unint64_t *)v5, a1, a2, a3);
          break;
        case 12:
          sub_2404B2514((unint64_t *)v5, a1, a2, a3);
          break;
        case 13:
          sub_2404B2808((unint64_t *)v5, a1, a2, a3);
          break;
        case 14:
          sub_2404B2B00((unint64_t *)v5, a1, a2, a3);
          break;
        case 15:
          sub_2404B2DF0((unint64_t *)v5, a1, a2, a3);
          break;
        case 16:
          sub_2404B30E8((unint64_t *)v5, a1, a2, a3);
          break;
        case 17:
          sub_2404B33D8((unint64_t *)v5, a1, a2, a3);
          break;
        case 18:
          sub_2404B36D0((unint64_t *)v5, a1, a2, a3);
          break;
        case 19:
          sub_2404B39C0((unint64_t *)v5, a1, a2, a3);
          break;
        case 20:
          sub_2404B3CB8((unint64_t *)v5, a1, a2, a3);
          break;
        case 21:
          sub_2404B3FAC((unint64_t *)v5, a1, a2, a3);
          break;
        case 22:
          sub_2404B42A4((unint64_t *)v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2404B07E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_2408E5930();
  if (v2)
    return swift_bridgeObjectRelease();
  if (v7)
  {
    if ((~*a2 & 0xF000000000000007) != 0)
      sub_2408E5864();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = 0;
    *(_QWORD *)(v5 + 24) = v7;
    v6 = *a2;
    *a2 = v5;
    return sub_2404F9F30(v6);
  }
  return result;
}

uint64_t sub_2404B08C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTLiteral(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D18);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 1)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D18);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTLiteral);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTLiteral);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_257000058, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D18);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D18);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D18);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTLiteral);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D18);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTLiteral);
    v25 = *a1;
    *a1 = v23 | 4;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B0BB0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprPrefixVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D20);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 2)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D20);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_2570000B0, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D20);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D20);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D20);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D20);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
    v25 = *a1;
    *a1 = v23 | 0x1000000000000000;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B0EA0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D28);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 3)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D28);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprInfixVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprInfixVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_2570000C8, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D28);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D28);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D28);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprInfixVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D28);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprInfixVariant);
    v25 = *a1;
    *a1 = v23 | 0x1000000000000004;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B119C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprDotVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D30);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 4)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D30);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprDotVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprDotVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_2570000E0, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D30);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D30);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D30);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprDotVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D30);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprDotVariant);
    v25 = *a1;
    *a1 = v23 | 0x2000000000000000;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B148C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D38);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 5)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D38);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprIndexVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprIndexVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_2570000F8, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D38);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D38);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D38);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprIndexVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D38);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprIndexVariant);
    v25 = *a1;
    *a1 = v23 | 0x2000000000000004;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B1784(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprCallVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D40);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 6)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D40);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprCallVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprCallVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_257000110, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D40);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D40);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D40);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprCallVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D40);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprCallVariant);
    v25 = *a1;
    *a1 = v23 | 0x3000000000000000;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B1A74(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;

  v16 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D48);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - v7;
  v9 = sub_2408E5714();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948];
  v11 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v9);
  sub_2404FA028(&qword_257000D10, v10, MEMORY[0x24BE5B938]);
  sub_2408E5894();
  if (v2)
    return sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  sub_2403A9210((uint64_t)v8, (uint64_t)v6, &qword_257000D48);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v9);
  sub_2403A97FC((uint64_t)v6, &qword_257000D48);
  if (v12 == 1)
    return sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  if ((~*v16 & 0xF000000000000007) != 0)
    sub_2408E5864();
  sub_2403A97FC((uint64_t)v8, &qword_257000D48);
  v14 = *v16;
  *v16 = 0xA000000000000004;
  return sub_2404F9F30(v14);
}

uint64_t sub_2404B1C34(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprSayVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D50);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 7)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D50);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprSayVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprSayVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_257000128, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D50);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D50);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D50);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprSayVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D50);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprSayVariant);
    v25 = *a1;
    *a1 = v23 | 0x3000000000000004;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B1F2C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprPickVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D58);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 8)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D58);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprPickVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprPickVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_257000140, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D58);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D58);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D58);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprPickVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D58);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprPickVariant);
    v25 = *a1;
    *a1 = v23 | 0x4000000000000000;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B221C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprConfirmVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D60);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 9)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D60);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_257000158, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D60);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D60);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D60);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D60);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
    v25 = *a1;
    *a1 = v23 | 0x4000000000000004;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B2514(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 0xA)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_256FFA300);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoStatementID);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_256FFA300);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_256FFA300);
    return sub_2403A97FC((uint64_t)v14, &qword_256FFA300);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoStatementID);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_256FFA300);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoStatementID);
    v25 = *a1;
    *a1 = v23 | 0x5000000000000000;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B2808(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprSearchVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D68);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 0xB)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D68);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprSearchVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprSearchVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_2570001A0, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D68);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D68);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D68);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D68);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprSearchVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D68);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprSearchVariant);
    v25 = *a1;
    *a1 = v23 | 0x5000000000000004;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B2B00(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprPickOneVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D70);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 0xC)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D70);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_2570001B8, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D70);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D70);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D70);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D70);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
    v25 = *a1;
    *a1 = v23 | 0x6000000000000000;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B2DF0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D78);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 0xD)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D78);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_2570001D0, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D78);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D78);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D78);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D78);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
    v25 = *a1;
    *a1 = v23 | 0x6000000000000004;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B30E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprUndoVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D80);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 0xE)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D80);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprUndoVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprUndoVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_257000170, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D80);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D80);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D80);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprUndoVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D80);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprUndoVariant);
    v25 = *a1;
    *a1 = v23 | 0x7000000000000000;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B33D8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprResolveToolVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D88);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 0xF)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D88);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_257000200, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D88);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D88);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D88);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D88);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
    v25 = *a1;
    *a1 = v23 | 0x7000000000000004;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B36D0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprRejectVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D90);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 0x10)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D90);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprRejectVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprRejectVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_2570001E8, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D90);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D90);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D90);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprRejectVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D90);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprRejectVariant);
    v25 = *a1;
    *a1 = v23 | 0x8000000000000000;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B39C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprCancelVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D98);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 0x11)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000D98);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprCancelVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprCancelVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_257000188, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000D98);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000D98);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000D98);
    return sub_2403A97FC((uint64_t)v14, &qword_257000D98);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprCancelVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000D98);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprCancelVariant);
    v25 = *a1;
    *a1 = v23 | 0x8000000000000004;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B3CB8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  v5 = type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DA0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, v5);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 0x12)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000DA0);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
    v17(v16, 0, 1, v5);
  }
  sub_2404FA028(&qword_257000218, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000DA0);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000DA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000DA0);
    return sub_2403A97FC((uint64_t)v14, &qword_257000DA0);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000DA0);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
    v25 = *a1;
    *a1 = v23 | 0x9000000000000000;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B3FAC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  updated = type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
  v6 = *(_QWORD *)(updated - 8);
  v7 = MEMORY[0x24BDAC7A8](updated);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DA8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, updated);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 0x13)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000DA8);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
    v17(v16, 0, 1, updated);
  }
  sub_2404FA028(&qword_257000230, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000DA8);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000DA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, updated) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000DA8);
    return sub_2403A97FC((uint64_t)v14, &qword_257000DA8);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000DA8);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
    v25 = *a1;
    *a1 = v23 | 0x9000000000000004;
    return sub_2404F9F30(v25);
  }
}

uint64_t sub_2404B42A4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t MentionedApps;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v31 = a3;
  v32 = a4;
  MentionedApps = type metadata accessor for TranscriptProtoASTExprGetMentionedApps(0);
  v6 = *(_QWORD *)(MentionedApps - 8);
  v7 = MEMORY[0x24BDAC7A8](MentionedApps);
  v29 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DB0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v26 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v17((char *)&v26 - v15, 1, 1, MentionedApps);
  v18 = *a1;
  v28 = *a1 & 0xF000000000000007;
  if (v28 != 0xF000000000000007 && ((v18 >> 59) & 0x1E | (v18 >> 2) & 1) == 0x14)
  {
    v27 = a1;
    swift_retain();
    sub_2403A97FC((uint64_t)v16, &qword_257000DB0);
    v19 = swift_projectBox();
    sub_2403AE1A4(v19, (uint64_t)v10, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
    sub_2404F9F30(v18);
    a1 = v27;
    sub_2403A91CC((uint64_t)v10, (uint64_t)v16, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
    v17(v16, 0, 1, MentionedApps);
  }
  sub_2404FA028(&qword_257000248, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
  v20 = v30;
  sub_2408E596C();
  if (v20)
    return sub_2403A97FC((uint64_t)v16, &qword_257000DB0);
  sub_2403A9210((uint64_t)v16, (uint64_t)v14, &qword_257000DB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, MentionedApps) == 1)
  {
    sub_2403A97FC((uint64_t)v16, &qword_257000DB0);
    return sub_2403A97FC((uint64_t)v14, &qword_257000DB0);
  }
  else
  {
    v22 = v29;
    sub_2403A91CC((uint64_t)v14, v29, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
    if (v28 != 0xF000000000000007)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v16, &qword_257000DB0);
    v23 = swift_allocBox();
    sub_2403A91CC(v22, v24, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
    v25 = *a1;
    *a1 = v23 | 0xA000000000000000;
    return sub_2404F9F30(v25);
  }
}

uint64_t TranscriptProtoASTExpr.traverse<A>(visitor:)()
{
  _QWORD *v0;

  if ((~*v0 & 0xF000000000000007) != 0)
    __asm { BR              X10 }
  type metadata accessor for TranscriptProtoASTExpr(0);
  return sub_2408E578C();
}

_QWORD *sub_2404B489C(_QWORD *result)
{
  if ((~*result & 0xF000000000000007) != 0 && ((*result >> 59) & 0x1E | (*result >> 2) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    sub_2408E5A38();
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B492C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTLiteral(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 1)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTLiteral);
    sub_2404FA028(&qword_257000058, type metadata accessor for TranscriptProtoASTLiteral, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTLiteral);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTLiteral);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B4A40(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprPrefixVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 2)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
    sub_2404FA028(&qword_2570000B0, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprPrefixVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B4B54(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 3)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprInfixVariant);
    sub_2404FA028(&qword_2570000C8, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprInfixVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B4C68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprDotVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 4)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprDotVariant);
    sub_2404FA028(&qword_2570000E0, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprDotVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B4D7C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 5)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprIndexVariant);
    sub_2404FA028(&qword_2570000F8, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprIndexVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B4E90(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprCallVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 6)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprCallVariant);
    sub_2404FA028(&qword_257000110, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprCallVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B4FA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v9;

  v2 = sub_2408E5714();
  v3 = *(_QWORD *)(v2 - 8);
  result = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0
    && *a1 == 0xA000000000000004
    && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 21)
  {
    MEMORY[0x2426834C8](result);
    sub_2404FA028(&qword_257000D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5B948], MEMORY[0x24BE5B938]);
    sub_2408E59E4();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B50B4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprSayVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 7)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprSayVariant);
    sub_2404FA028(&qword_257000128, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprSayVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B51C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprPickVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 8)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprPickVariant);
    sub_2404FA028(&qword_257000140, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprPickVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B52DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprConfirmVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 9)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
    sub_2404FA028(&qword_257000158, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprConfirmVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B53F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoStatementID(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 10)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoStatementID);
    sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoStatementID);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B5504(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprSearchVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 11)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprSearchVariant);
    sub_2404FA028(&qword_2570001A0, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprSearchVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B5618(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprPickOneVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 12)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
    sub_2404FA028(&qword_2570001B8, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprPickOneVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B572C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 13)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
    sub_2404FA028(&qword_2570001D0, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B5840(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprUndoVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 14)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprUndoVariant);
    sub_2404FA028(&qword_257000170, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprUndoVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B5954(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprResolveToolVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 15)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
    sub_2404FA028(&qword_257000200, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B5A68(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprRejectVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 16)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprRejectVariant);
    sub_2404FA028(&qword_2570001E8, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprRejectVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B5B7C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprCancelVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 17)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprCancelVariant);
    sub_2404FA028(&qword_257000188, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprCancelVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B5C90(_QWORD *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant(0);
  result = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 18)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
    sub_2404FA028(&qword_257000218, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B5DA4(_QWORD *a1)
{
  uint64_t updated;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  updated = type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
  result = MEMORY[0x24BDAC7A8](updated);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 19)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
    sub_2404FA028(&qword_257000230, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2404B5EB8(_QWORD *a1)
{
  uint64_t MentionedApps;
  uint64_t result;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;

  MentionedApps = type metadata accessor for TranscriptProtoASTExprGetMentionedApps(0);
  result = MEMORY[0x24BDAC7A8](MentionedApps);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((~*a1 & 0xF000000000000007) != 0 && ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) == 20)
  {
    v7 = swift_projectBox();
    sub_2403AE1A4(v7, (uint64_t)v5, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
    sub_2404FA028(&qword_257000248, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v5, type metadata accessor for TranscriptProtoASTExprGetMentionedApps);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t TranscriptProtoASTExpr.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExpr, &qword_256FFEDA8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
}

uint64_t sub_2404B5FEC@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0xF000000000000007;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2404B6010()
{
  return 0xD000000000000012;
}

uint64_t sub_2404B602C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExpr.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404B6040()
{
  return TranscriptProtoASTExpr.traverse<A>(visitor:)();
}

uint64_t sub_2404B6054()
{
  sub_2404FA028(&qword_257000688, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  return sub_2408E5828();
}

uint64_t sub_2404B60A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9600, (uint64_t)qword_256FFE1F0, a1);
}

uint64_t sub_2404B60C0()
{
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  return sub_2408E599C();
}

uint64_t sub_2404B6100()
{
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTExprPrefixVariant.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2404B6170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE208);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "first";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "second";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTExprPrefixVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9608, (uint64_t)qword_256FFE208, a1);
}

uint64_t TranscriptProtoASTExprPrefixVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprPrefixVariant, type metadata accessor for TranscriptProtoASTExpr, &qword_256FFED98, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
      }
      else if (result == 1)
      {
        sub_2404EF848();
        sub_2408E58A0();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoASTExprPrefixVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B6424(a1, a2, a3, (void (*)(void))sub_2404EF848, (uint64_t)&type metadata for TranscriptProtoASTPrefixOp, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_2404B6504, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprPrefixVariant);
}

uint64_t sub_2404B6424(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t (*a6)(_BYTE *, uint64_t, uint64_t, uint64_t), void (*a7)(_QWORD))
{
  _BYTE *v7;
  uint64_t v8;
  uint64_t result;

  if (!*v7 || (a4(), result = sub_2408E59E4(), !v8))
  {
    result = a6(v7, a1, a2, a3);
    if (!v8)
    {
      a7(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_2404B6504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExpr(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTExprPrefixVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000CF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000CF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t TranscriptProtoASTExprPrefixVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprPrefixVariant, &qword_256FFEDB8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
}

uint64_t sub_2404B6698@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2404BB03C(a1, type metadata accessor for TranscriptProtoASTExpr, a2);
}

unint64_t sub_2404B66A4()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2404B66C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprPrefixVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404B66D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprPrefixVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B66E8()
{
  sub_2404FA028(&qword_257000680, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B6738@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9608, (uint64_t)qword_256FFE208, a1);
}

uint64_t sub_2404B6754()
{
  sub_2404FA028(&qword_2570000B0, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B6794()
{
  sub_2404FA028(&qword_2570000B0, type metadata accessor for TranscriptProtoASTExprPrefixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPrefixVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTExprInfixVariant.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2404B6804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE220);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE220);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "first";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "second";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "third";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTExprInfixVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9610, (uint64_t)qword_256FFE220, a1);
}

uint64_t TranscriptProtoASTExprInfixVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B69E8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprInfixVariant, type metadata accessor for TranscriptProtoASTExpr, &qword_256FFED98, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
}

uint64_t sub_2404B69E8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v17;
  uint64_t result;
  char v19;

  v13 = v7;
  while (1)
  {
    result = sub_2408E5858();
    v17 = v8;
    if (v8 || (v19 & 1) != 0)
      return result;
    switch(result)
    {
      case 3:
        sub_240448BC4(a1, v13, a2, a3, a4, a5, a6, a7);
LABEL_3:
        v17 = 0;
        break;
      case 2:
        sub_240448B20(a1, v13, a2, a3, a4, a5, a6, a7);
        goto LABEL_3;
      case 1:
        sub_2404EF77C();
        sub_2408E58A0();
        goto LABEL_3;
    }
    v8 = v17;
  }
}

uint64_t TranscriptProtoASTExprInfixVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B6B34(a1, a2, a3, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_2404B6C38, (void (*)(_BYTE *, uint64_t, uint64_t, uint64_t))sub_2404B6DAC, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprInfixVariant);
}

uint64_t sub_2404B6B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_BYTE *, uint64_t, uint64_t, uint64_t), void (*a5)(_BYTE *, uint64_t, uint64_t, uint64_t), void (*a6)(_QWORD))
{
  _BYTE *v6;
  uint64_t v7;
  uint64_t result;

  if (!*v6 || (sub_2404EF77C(), result = sub_2408E59E4(), !v7))
  {
    result = a4(v6, a1, a2, a3);
    if (!v7)
    {
      a5(v6, a1, a2, a3);
      a6(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_2404B6C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExpr(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000CF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000CF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t sub_2404B6DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExpr(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_257000CF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000CF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t TranscriptProtoASTExprInfixVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprInfixVariant, &qword_256FFEDC0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
}

uint64_t sub_2404B6F40@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_2404B6F4C(a1, type metadata accessor for TranscriptProtoASTExpr, a2);
}

uint64_t sub_2404B6F4C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, _BYTE *a3@<X8>)
{
  _BYTE *v5;
  uint64_t v6;
  void (*v7)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v5 = &a3[*(int *)(a1 + 20)];
  v6 = a2(0);
  v7 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v7(&a3[*(int *)(a1 + 24)], 1, 1, v6);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = 0;
  return result;
}

unint64_t sub_2404B6FD4()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2404B6FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprInfixVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404B7004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprInfixVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B7018()
{
  sub_2404FA028(&qword_257000678, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B7068@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9610, (uint64_t)qword_256FFE220, a1);
}

uint64_t sub_2404B7084()
{
  sub_2404FA028(&qword_2570000C8, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B70C4()
{
  sub_2404FA028(&qword_2570000C8, type metadata accessor for TranscriptProtoASTExprInfixVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprInfixVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTExprDotVariant.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2404B7134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE238);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE238);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTExprDotVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9618, (uint64_t)qword_256FFE238, a1);
}

uint64_t TranscriptProtoASTExprDotVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B72D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprDotVariant, type metadata accessor for TranscriptProtoASTExpr, &qword_256FFED98, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
}

uint64_t sub_2404B72D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t result;
  char v18;

  v13 = v7;
  while (1)
  {
    result = sub_2408E5858();
    if (v8 || (v18 & 1) != 0)
      break;
    if (result == 2)
    {
      sub_2408E593C();
    }
    else if (result == 1)
    {
      sub_240448B20(a1, v13, a2, a3, a4, a5, a6, a7);
    }
  }
  return result;
}

uint64_t TranscriptProtoASTExprDotVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404A80D4(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_2404B73B4, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprDotVariant);
}

uint64_t sub_2404B73B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExpr(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTExprDotVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000CF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000CF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t TranscriptProtoASTExprDotVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprDotVariant, &qword_256FFEDC8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
}

uint64_t sub_2404B7548@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404BF554(a1, type metadata accessor for TranscriptProtoASTExpr, a2);
}

unint64_t sub_2404B7554()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2404B7570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprDotVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404B7584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprDotVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B7598()
{
  sub_2404FA028(&qword_257000670, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B75E8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9618, (uint64_t)qword_256FFE238, a1);
}

uint64_t sub_2404B7604()
{
  sub_2404FA028(&qword_2570000E0, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B7644()
{
  sub_2404FA028(&qword_2570000E0, type metadata accessor for TranscriptProtoASTExprDotVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprDotVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTExprIndexVariant.protoMessageName.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2404B76B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE250);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE250);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "lhs";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "index";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTExprIndexVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9620, (uint64_t)qword_256FFE250, a1);
}

uint64_t TranscriptProtoASTExprIndexVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprIndexVariant, type metadata accessor for TranscriptProtoASTExpr, &qword_256FFED98, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
      }
      else if (result == 1)
      {
        type metadata accessor for TranscriptProtoASTExpr(0);
        sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoASTExprIndexVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_257000CF8, type metadata accessor for TranscriptProtoASTExpr, &qword_256FFED98, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  if (!v4)
  {
    sub_2404B7A04(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404B7A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExpr(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000CF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000CF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t TranscriptProtoASTExprIndexVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprIndexVariant, &qword_256FFEDD0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
}

uint64_t sub_2404B7B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404B7BA4(a1, type metadata accessor for TranscriptProtoASTExpr, a2);
}

uint64_t sub_2404B7BA4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);

  v5 = a2(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(a3, 1, 1, v5);
  v6(a3 + *(int *)(a1 + 20), 1, 1, v5);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2404B7C18()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_2404B7C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprIndexVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404B7C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprIndexVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B7C5C()
{
  sub_2404FA028(&qword_257000668, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B7CAC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9620, (uint64_t)qword_256FFE250, a1);
}

uint64_t sub_2404B7CC8()
{
  sub_2404FA028(&qword_2570000F8, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B7D08()
{
  sub_2404FA028(&qword_2570000F8, type metadata accessor for TranscriptProtoASTExprIndexVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprIndexVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTExprCallVariant.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2404B7D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE268);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE268);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "fn";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameters";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTExprCallVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9628, (uint64_t)qword_256FFE268, a1);
}

uint64_t TranscriptProtoASTExprCallVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B7EFC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_2404B7F94);
}

uint64_t sub_2404B7EFC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;
  char v12;

  v7 = v4;
  while (1)
  {
    result = sub_2408E5858();
    if (v5 || (v12 & 1) != 0)
      break;
    if (result == 2)
    {
      a4(a1, v7, a2, a3);
    }
    else if (result == 1)
    {
      sub_2408E593C();
    }
  }
  return result;
}

uint64_t sub_2404B7F94()
{
  sub_2408E5768();
  type metadata accessor for TranscriptProtoASTExpr(0);
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_2404FA028(&qword_256FFEDA8, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  return sub_2408E5840();
}

uint64_t TranscriptProtoASTExprCallVariant.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    if (!*(_QWORD *)(v0[2] + 16)
      || (sub_2408E5768(),
          type metadata accessor for TranscriptProtoASTExpr(0),
          sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr), sub_2404FA028(&qword_256FFEDA8, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr), result = sub_2408E59B4(), !v1))
    {
      type metadata accessor for TranscriptProtoASTExprCallVariant(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t static TranscriptProtoASTExprCallVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404D07D8(a1, a2, sub_24088F7F4, type metadata accessor for TranscriptProtoASTExprCallVariant) & 1;
}

uint64_t TranscriptProtoASTExprCallVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprCallVariant, &qword_256FFEDD8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
}

uint64_t sub_2404B81F8@<X0>(_QWORD *a1@<X8>)
{
  return sub_2404B8204((uint64_t (*)(_QWORD))sub_2403A8C8C, a1);
}

uint64_t sub_2404B8204@<X0>(uint64_t (*a1)(_QWORD)@<X2>, _QWORD *a2@<X8>)
{
  uint64_t result;

  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  result = a1(MEMORY[0x24BEE4AF8]);
  a2[2] = result;
  return result;
}

unint64_t sub_2404B8248()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2404B8264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprCallVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404B8278()
{
  return TranscriptProtoASTExprCallVariant.traverse<A>(visitor:)();
}

uint64_t sub_2404B828C()
{
  sub_2404FA028(&qword_257000660, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B82DC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9628, (uint64_t)qword_256FFE268, a1);
}

uint64_t sub_2404B82F8()
{
  sub_2404FA028(&qword_257000110, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B8338()
{
  sub_2404FA028(&qword_257000110, type metadata accessor for TranscriptProtoASTExprCallVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCallVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404B8388(_QWORD *a1, char *a2)
{
  return sub_2404D07D8(a1, a2, sub_24088F7F4, type metadata accessor for TranscriptProtoASTExprCallVariant) & 1;
}

unint64_t static TranscriptProtoASTExprSayVariant.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2404B83CC(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE280, 1, (uint64_t)"rawEventIds", 11);
}

uint64_t static TranscriptProtoASTExprSayVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9630, (uint64_t)qword_256FFE280, a1);
}

uint64_t TranscriptProtoASTExprSayVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0E8]);
}

uint64_t TranscriptProtoASTExprSayVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404C3EA4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprSayVariant);
}

uint64_t static TranscriptProtoASTExprSayVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoASTExprSayVariant) & 1;
}

uint64_t TranscriptProtoASTExprSayVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprSayVariant, &qword_256FFEDE0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
}

unint64_t sub_2404B8480()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_2404B849C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprSayVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B84B0()
{
  sub_2404FA028(&qword_257000658, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B8500@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9630, (uint64_t)qword_256FFE280, a1);
}

uint64_t sub_2404B851C()
{
  sub_2404FA028(&qword_257000128, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B855C()
{
  sub_2404FA028(&qword_257000128, type metadata accessor for TranscriptProtoASTExprSayVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSayVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404B85AC(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoASTExprSayVariant) & 1;
}

unint64_t static TranscriptProtoASTExprPickVariant.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2404B85F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE298);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE298);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "rawEventId";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "pickType";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTExprPickVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9638, (uint64_t)qword_256FFE298, a1);
}

uint64_t TranscriptProtoASTExprPickVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BF2D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprPickVariant, type metadata accessor for TranscriptProtoASTPickType, &qword_256FFFC58, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
}

uint64_t TranscriptProtoASTExprPickVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24044BC48(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_2404B87B4, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprPickVariant);
}

uint64_t sub_2404B87B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTPickType(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTExprPickVariant(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000D08);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000D08);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTPickType);
  sub_2404FA028(&qword_256FFFC58, type metadata accessor for TranscriptProtoASTPickType, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTPickType);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTPickType);
}

uint64_t TranscriptProtoASTExprPickVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprPickVariant, &qword_256FFEDE8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
}

unint64_t sub_2404B8948()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2404B8964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprPickVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404B8978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprPickVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B898C()
{
  sub_2404FA028(&qword_257000650, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B89DC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9638, (uint64_t)qword_256FFE298, a1);
}

uint64_t sub_2404B89F8()
{
  sub_2404FA028(&qword_257000140, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B8A38()
{
  sub_2404FA028(&qword_257000140, type metadata accessor for TranscriptProtoASTExprPickVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTExprConfirmVariant.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_2404B8AA8(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE2B0, 1, (uint64_t)"rawEventId", 10);
}

uint64_t static TranscriptProtoASTExprConfirmVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9640, (uint64_t)qword_256FFE2B0, a1);
}

uint64_t TranscriptProtoASTExprConfirmVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoASTExprConfirmVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprConfirmVariant);
}

uint64_t static TranscriptProtoASTExprConfirmVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTExprConfirmVariant) & 1;
}

uint64_t TranscriptProtoASTExprConfirmVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprConfirmVariant, &qword_256FFEDF0, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
}

unint64_t sub_2404B8B54()
{
  return 0xD000000000000020;
}

uint64_t sub_2404B8B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprConfirmVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B8B84()
{
  sub_2404FA028(&qword_257000648, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B8BD4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9640, (uint64_t)qword_256FFE2B0, a1);
}

uint64_t sub_2404B8BF0()
{
  sub_2404FA028(&qword_257000158, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B8C30()
{
  sub_2404FA028(&qword_257000158, type metadata accessor for TranscriptProtoASTExprConfirmVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprConfirmVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404B8C80(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTExprConfirmVariant) & 1;
}

unint64_t static TranscriptProtoASTExprUndoVariant.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2404B8CBC(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE2C8, 1, (uint64_t)"rawEventId", 10);
}

uint64_t static TranscriptProtoASTExprUndoVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9648, (uint64_t)qword_256FFE2C8, a1);
}

uint64_t TranscriptProtoASTExprUndoVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C118]);
}

uint64_t TranscriptProtoASTExprUndoVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B8D2C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprUndoVariant);
}

uint64_t sub_2404B8D2C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (*(_QWORD *)(v4 + 8))
    result = sub_2408E5A38();
  if (!v5)
  {
    a4(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoASTExprUndoVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404D4F58(a1, a2, type metadata accessor for TranscriptProtoASTExprUndoVariant) & 1;
}

uint64_t TranscriptProtoASTExprUndoVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprUndoVariant, &qword_256FFEDF8, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
}

uint64_t sub_2404B8E08@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2404B8E28()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2404B8E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprUndoVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B8E58()
{
  sub_2404FA028(&qword_257000640, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B8EA8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9648, (uint64_t)qword_256FFE2C8, a1);
}

uint64_t sub_2404B8EC4()
{
  sub_2404FA028(&qword_257000170, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B8F04()
{
  sub_2404FA028(&qword_257000170, type metadata accessor for TranscriptProtoASTExprUndoVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUndoVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404B8F54(_QWORD *a1, char *a2)
{
  return sub_2404D4F58(a1, a2, type metadata accessor for TranscriptProtoASTExprUndoVariant) & 1;
}

unint64_t static TranscriptProtoASTExprCancelVariant.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2404B8F90(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE2E0, 1, (uint64_t)"rawEventId", 10);
}

uint64_t static TranscriptProtoASTExprCancelVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9650, (uint64_t)qword_256FFE2E0, a1);
}

uint64_t TranscriptProtoASTExprCancelVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoASTExprCancelVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprCancelVariant);
}

uint64_t static TranscriptProtoASTExprCancelVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTExprCancelVariant) & 1;
}

uint64_t TranscriptProtoASTExprCancelVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprCancelVariant, &qword_256FFEE00, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
}

unint64_t sub_2404B903C()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2404B9058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprCancelVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B906C()
{
  sub_2404FA028(&qword_257000638, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B90BC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9650, (uint64_t)qword_256FFE2E0, a1);
}

uint64_t sub_2404B90D8()
{
  sub_2404FA028(&qword_257000188, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B9118()
{
  sub_2404FA028(&qword_257000188, type metadata accessor for TranscriptProtoASTExprCancelVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprCancelVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404B9168(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTExprCancelVariant) & 1;
}

unint64_t static TranscriptProtoASTExprSearchVariant.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2404B91A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE2F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE2F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isLowConfidenceKnowledge";
  *((_QWORD *)v11 + 1) = 24;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "pickOne";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTExprSearchVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9658, (uint64_t)qword_256FFE2F8, a1);
}

uint64_t TranscriptProtoASTExprSearchVariant.decodeMessage<A>(decoder:)()
{
  return sub_2404B9368();
}

uint64_t sub_2404B9368()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 3 || result == 2)
      {
        sub_2408E5888();
      }
      else if (result == 1)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoASTExprSearchVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9438(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprSearchVariant);
}

uint64_t sub_2404B9438(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v7 = *(_QWORD *)(v4 + 8);
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = *(_QWORD *)v4 & 0xFFFFFFFFFFFFLL;
  if (!v8 || (result = sub_2408E5A38(), !v5))
  {
    if (*(_BYTE *)(v4 + 16) != 1 || (result = sub_2408E59D8(), !v5))
    {
      if (*(_BYTE *)(v4 + 17) != 1 || (result = sub_2408E59D8(), !v5))
      {
        a4(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t static TranscriptProtoASTExprSearchVariant.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2404D488C(a1, a2, type metadata accessor for TranscriptProtoASTExprSearchVariant) & 1;
}

uint64_t TranscriptProtoASTExprSearchVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprSearchVariant, &qword_256FFEE08, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
}

uint64_t sub_2404B9580@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_WORD *)(a1 + 16) = 0;
  return result;
}

unint64_t sub_2404B95B4()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2404B95D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprSearchVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B95E4()
{
  sub_2404FA028(&qword_257000630, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B9634@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9658, (uint64_t)qword_256FFE2F8, a1);
}

uint64_t sub_2404B9650()
{
  sub_2404FA028(&qword_2570001A0, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B9690()
{
  sub_2404FA028(&qword_2570001A0, type metadata accessor for TranscriptProtoASTExprSearchVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprSearchVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404B96E0(uint64_t a1, uint64_t a2)
{
  return sub_2404D488C(a1, a2, type metadata accessor for TranscriptProtoASTExprSearchVariant) & 1;
}

unint64_t static TranscriptProtoASTExprPickOneVariant.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_2404B971C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE310, 1, (uint64_t)"rawEventId", 10);
}

uint64_t static TranscriptProtoASTExprPickOneVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9660, (uint64_t)qword_256FFE310, a1);
}

uint64_t TranscriptProtoASTExprPickOneVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t TranscriptProtoASTExprPickOneVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprPickOneVariant);
}

uint64_t static TranscriptProtoASTExprPickOneVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTExprPickOneVariant) & 1;
}

uint64_t TranscriptProtoASTExprPickOneVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprPickOneVariant, &qword_256FFEE10, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
}

unint64_t sub_2404B97C8()
{
  return 0xD000000000000020;
}

uint64_t sub_2404B97E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprPickOneVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B97F8()
{
  sub_2404FA028(&qword_257000628, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B9848@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9660, (uint64_t)qword_256FFE310, a1);
}

uint64_t sub_2404B9864()
{
  sub_2404FA028(&qword_2570001B8, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B98A4()
{
  sub_2404FA028(&qword_2570001B8, type metadata accessor for TranscriptProtoASTExprPickOneVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprPickOneVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404B98F4(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTExprPickOneVariant) & 1;
}

unint64_t static TranscriptProtoASTExprNoMatchingToolVariant.protoMessageName.getter()
{
  return 0xD000000000000027;
}

uint64_t sub_2404B9930(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFE328);
}

uint64_t static TranscriptProtoASTExprNoMatchingToolVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9668, (uint64_t)qword_256FFE328, a1);
}

uint64_t TranscriptProtoASTExprNoMatchingToolVariant.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoASTExprNoMatchingToolVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, &qword_256FFEE18, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
}

unint64_t sub_2404B998C()
{
  return 0xD000000000000027;
}

uint64_t sub_2404B99A8()
{
  sub_2404FA028(&qword_257000620, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B99F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9668, (uint64_t)qword_256FFE328, a1);
}

uint64_t sub_2404B9A14()
{
  sub_2404FA028(&qword_2570001D0, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B9A54()
{
  sub_2404FA028(&qword_2570001D0, type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprNoMatchingToolVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTExprRejectVariant.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2404B9AC0(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE340, 1, (uint64_t)"rawEventId", 10);
}

uint64_t static TranscriptProtoASTExprRejectVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9670, (uint64_t)qword_256FFE340, a1);
}

uint64_t TranscriptProtoASTExprRejectVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t sub_2404B9B14(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  while (1)
  {
    result = sub_2408E5858();
    if (v5 || (v10 & 1) != 0)
      break;
    if (result == 1)
      a4(v4, a2, a3);
  }
  return result;
}

uint64_t TranscriptProtoASTExprRejectVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9BA8(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprRejectVariant);
}

uint64_t sub_2404B9BA8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v7 = v4[1];
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = *v4 & 0xFFFFFFFFFFFFLL;
  if (!v8 || (result = sub_2408E5A38(), !v5))
  {
    a4(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoASTExprRejectVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTExprRejectVariant) & 1;
}

uint64_t TranscriptProtoASTExprRejectVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprRejectVariant, &qword_256FFEE20, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
}

unint64_t sub_2404B9C90()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2404B9CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprRejectVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B9CC0()
{
  sub_2404FA028(&qword_257000618, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B9D10@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9670, (uint64_t)qword_256FFE340, a1);
}

uint64_t sub_2404B9D2C()
{
  sub_2404FA028(&qword_2570001E8, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B9D6C()
{
  sub_2404FA028(&qword_2570001E8, type metadata accessor for TranscriptProtoASTExprRejectVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprRejectVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404B9DBC(_QWORD *a1, char *a2)
{
  return sub_2404C9E04(a1, a2, type metadata accessor for TranscriptProtoASTExprRejectVariant) & 1;
}

unint64_t static TranscriptProtoASTExprResolveToolVariant.protoMessageName.getter()
{
  return 0xD000000000000024;
}

uint64_t sub_2404B9DF8(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE358, 1, (uint64_t)"toolIds", 7);
}

uint64_t static TranscriptProtoASTExprResolveToolVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9678, (uint64_t)qword_256FFE358, a1);
}

uint64_t TranscriptProtoASTExprResolveToolVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0E8]);
}

uint64_t TranscriptProtoASTExprResolveToolVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404C3EA4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprResolveToolVariant);
}

uint64_t static TranscriptProtoASTExprResolveToolVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoASTExprResolveToolVariant) & 1;
}

uint64_t TranscriptProtoASTExprResolveToolVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprResolveToolVariant, &qword_256FFEE28, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
}

unint64_t sub_2404B9EAC()
{
  return 0xD000000000000024;
}

uint64_t sub_2404B9EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprResolveToolVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404B9EDC()
{
  sub_2404FA028(&qword_257000610, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
  return sub_2408E5828();
}

uint64_t sub_2404B9F2C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9678, (uint64_t)qword_256FFE358, a1);
}

uint64_t sub_2404B9F48()
{
  sub_2404FA028(&qword_257000200, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
  return sub_2408E599C();
}

uint64_t sub_2404B9F88()
{
  sub_2404FA028(&qword_257000200, type metadata accessor for TranscriptProtoASTExprResolveToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprResolveToolVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404B9FD8(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoASTExprResolveToolVariant) & 1;
}

unint64_t static TranscriptProtoASTExprContinuePlanningVariant.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_2404BA01C(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFE370);
}

uint64_t static TranscriptProtoASTExprContinuePlanningVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9680, (uint64_t)qword_256FFE370, a1);
}

uint64_t TranscriptProtoASTExprContinuePlanningVariant.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoASTExprContinuePlanningVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, &qword_256FFEE30, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
}

unint64_t sub_2404BA078()
{
  return 0xD000000000000029;
}

uint64_t sub_2404BA094()
{
  sub_2404FA028(&qword_257000608, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
  return sub_2408E5828();
}

uint64_t sub_2404BA0E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9680, (uint64_t)qword_256FFE370, a1);
}

uint64_t sub_2404BA100()
{
  sub_2404FA028(&qword_257000218, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
  return sub_2408E599C();
}

uint64_t sub_2404BA140()
{
  sub_2404FA028(&qword_257000218, type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprContinuePlanningVariant);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTExprUpdateParametersVariant.protoMessageName.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_2404BA1AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE388);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE388);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameters";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTExprUpdateParametersVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9688, (uint64_t)qword_256FFE388, a1);
}

uint64_t TranscriptProtoASTExprUpdateParametersVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2404BA3F4();
      }
      else if (result == 1)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2404BA3F4()
{
  sub_2408E5768();
  type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  sub_2404FA028(&qword_256FFEE38, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
  sub_2404FA028(&qword_256FFEE40, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
  return sub_2408E5840();
}

uint64_t TranscriptProtoASTExprUpdateParametersVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404BA5F8(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      sub_2408E5768();
      type metadata accessor for TranscriptProtoASTUpdateExpr(0);
      sub_2404FA028(&qword_256FFEE38, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
      sub_2404FA028(&qword_256FFEE40, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
      sub_2408E59B4();
    }
    type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404BA5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t updated;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant(0);
  sub_2403A9210(a1 + *(int *)(updated + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t static TranscriptProtoASTExprUpdateParametersVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404CB984(a1, a2, (char *)type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, sub_24088EA08) & 1;
}

uint64_t TranscriptProtoASTExprUpdateParametersVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, &qword_256FFEE48, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
}

uint64_t sub_2404BA7B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2404BA7C4(a1, type metadata accessor for TranscriptProtoStatementID, (uint64_t (*)(_QWORD))sub_2403A8CA8, a2);
}

uint64_t sub_2404BA7C4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t *a4@<X8>)
{
  char *v6;
  uint64_t v7;
  uint64_t result;

  v6 = (char *)a4 + *(int *)(a1 + 20);
  v7 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  result = a3(MEMORY[0x24BEE4AF8]);
  *a4 = result;
  return result;
}

unint64_t sub_2404BA838()
{
  return 0xD000000000000029;
}

uint64_t sub_2404BA854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprUpdateParametersVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404BA868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTExprUpdateParametersVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404BA87C()
{
  sub_2404FA028(&qword_257000600, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
  return sub_2408E5828();
}

uint64_t sub_2404BA8CC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9688, (uint64_t)qword_256FFE388, a1);
}

uint64_t sub_2404BA8E8()
{
  sub_2404FA028(&qword_257000230, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
  return sub_2408E599C();
}

uint64_t sub_2404BA928()
{
  sub_2404FA028(&qword_257000230, type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprUpdateParametersVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404BA978(_QWORD *a1, char *a2)
{
  return sub_2404CB984(a1, a2, (char *)type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, sub_24088EA08) & 1;
}

unint64_t static TranscriptProtoASTExprGetMentionedApps.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_2404BA9BC(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFE3A0);
}

uint64_t static TranscriptProtoASTExprGetMentionedApps._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9690, (uint64_t)qword_256FFE3A0, a1);
}

uint64_t TranscriptProtoASTExprGetMentionedApps.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t TranscriptProtoASTExprGetMentionedApps.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTExprGetMentionedApps, &qword_256FFEE50, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
}

unint64_t sub_2404BAA18()
{
  return 0xD000000000000022;
}

uint64_t sub_2404BAA34()
{
  sub_2404FA028(&qword_2570005F8, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
  return sub_2408E5828();
}

uint64_t sub_2404BAA84@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9690, (uint64_t)qword_256FFE3A0, a1);
}

uint64_t sub_2404BAAA0()
{
  sub_2404FA028(&qword_257000248, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
  return sub_2408E599C();
}

uint64_t sub_2404BAAE0()
{
  sub_2404FA028(&qword_257000248, type metadata accessor for TranscriptProtoASTExprGetMentionedApps, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExprGetMentionedApps);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoASTUpdateExpr.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_2404BAB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE3B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE3B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "kind";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "expr";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoASTUpdateExpr._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9698, (uint64_t)qword_256FFE3B8, a1);
}

uint64_t TranscriptProtoASTUpdateExpr.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoASTUpdateExpr, type metadata accessor for TranscriptProtoASTExpr, &qword_256FFED98, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
      }
      else if (result == 1)
      {
        sub_2404EF738();
        sub_2408E58A0();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoASTUpdateExpr.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  if (*v3 != 1 || (sub_2404EF738(), result = sub_2408E59E4(), !v4))
  {
    result = sub_2404BAEA8((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      type metadata accessor for TranscriptProtoASTUpdateExpr(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_2404BAEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoASTExpr(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoASTUpdateExpr(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_257000CF8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_257000CF8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
  sub_2404FA028(&qword_256FFED98, type metadata accessor for TranscriptProtoASTExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTExpr);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t TranscriptProtoASTUpdateExpr.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoASTUpdateExpr, &qword_256FFEE40, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
}

uint64_t sub_2404BB03C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t result;

  v4 = &a3[*(int *)(a1 + 20)];
  v5 = a2(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = 0;
  return result;
}

unint64_t sub_2404BB0A0()
{
  return 0xD000000000000018;
}

uint64_t sub_2404BB0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTUpdateExpr.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404BB0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoASTUpdateExpr.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404BB0E4()
{
  sub_2404FA028(&qword_2570005F0, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
  return sub_2408E5828();
}

uint64_t sub_2404BB134@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9698, (uint64_t)qword_256FFE3B8, a1);
}

uint64_t sub_2404BB150()
{
  sub_2404FA028(&qword_256FFEE38, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
  return sub_2408E599C();
}

uint64_t sub_2404BB190()
{
  sub_2404FA028(&qword_256FFEE38, type metadata accessor for TranscriptProtoASTUpdateExpr, (uint64_t)&protocol conformance descriptor for TranscriptProtoASTUpdateExpr);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoToolParameterValue.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2404BB200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE3D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE3D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "reference";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "value";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoToolParameterValue._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96A0, (uint64_t)qword_256FFE3D0, a1);
}

uint64_t TranscriptProtoToolParameterValue.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2404BB42C((uint64_t)v5, a1, a2, a3);
      }
      else if (result == 1)
      {
        sub_240499908(a1, v5, a2, a3, &qword_256FFEE58, type metadata accessor for TranscriptProtoToolParameterValueEnum, 0);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2404BB42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEE58);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFEE58);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFEE58);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoTypedValue);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoTypedValue);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoToolParameterValueEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA3A8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA3A8);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoTypedValue);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFEE58);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoTypedValue);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoToolParameterValue.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEE58);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v4, &qword_256FFEE58);
  v5 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    goto LABEL_2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2404BBB00(v0);
    result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    if (!v1)
    {
LABEL_2:
      type metadata accessor for TranscriptProtoToolParameterValue(0);
      return sub_2408E578C();
    }
  }
  else
  {
    sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    result = sub_2404BB9D8(v0);
    if (!v1)
      goto LABEL_2;
  }
  return result;
}

uint64_t sub_2404BB9D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEE58);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEE58);
  v5 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEE58);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2408E5A38();
    return swift_bridgeObjectRelease();
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoToolParameterValueEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404BBB00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEE58);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFEE58);
  v8 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFEE58);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
    sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoTypedValue);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoToolParameterValueEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoToolParameterValue.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoToolParameterValue, &qword_256FFEE60, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
}

uint64_t sub_2404BBCC0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoToolParameterValueEnum, a1);
}

unint64_t sub_2404BBCCC()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_2404BBCE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoToolParameterValue.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404BBCFC()
{
  return TranscriptProtoToolParameterValue.traverse<A>(visitor:)();
}

uint64_t sub_2404BBD10()
{
  sub_2404FA028(&qword_2570005E8, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
  return sub_2408E5828();
}

uint64_t sub_2404BBD60@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96A0, (uint64_t)qword_256FFE3D0, a1);
}

uint64_t sub_2404BBD7C()
{
  sub_2404FA028(&qword_257000270, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
  return sub_2408E599C();
}

uint64_t sub_2404BBDBC()
{
  sub_2404FA028(&qword_257000270, type metadata accessor for TranscriptProtoToolParameterValue, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolParameterValue);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoEntitySpanMatchResult.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_2404BBE2C(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE3E8, 1, (uint64_t)"entities", 8);
}

uint64_t static TranscriptProtoEntitySpanMatchResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96A8, (uint64_t)qword_256FFE3E8, a1);
}

uint64_t TranscriptProtoEntitySpanMatchResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ContextProtoSpanMatchedEntity, &qword_256FFEE68, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

uint64_t TranscriptProtoEntitySpanMatchResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ContextProtoSpanMatchedEntity, &qword_256FFEE68, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity, (void (*)(_QWORD))type metadata accessor for TranscriptProtoEntitySpanMatchResult);
}

uint64_t static TranscriptProtoEntitySpanMatchResult.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BA37C, type metadata accessor for TranscriptProtoEntitySpanMatchResult) & 1;
}

uint64_t TranscriptProtoEntitySpanMatchResult.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoEntitySpanMatchResult, &qword_256FFEE70, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
}

unint64_t sub_2404BBF08()
{
  return 0xD000000000000020;
}

uint64_t sub_2404BBF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoEntitySpanMatchResult.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404BBF38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoEntitySpanMatchResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404BBF4C()
{
  sub_2404FA028(&qword_2570005E0, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
  return sub_2408E5828();
}

uint64_t sub_2404BBF9C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96A8, (uint64_t)qword_256FFE3E8, a1);
}

uint64_t sub_2404BBFB8()
{
  sub_2404FA028(&qword_257000288, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
  return sub_2408E599C();
}

uint64_t sub_2404BBFF8()
{
  sub_2404FA028(&qword_257000288, type metadata accessor for TranscriptProtoEntitySpanMatchResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoEntitySpanMatchResult);
  return sub_2408E59A8();
}

uint64_t sub_2404BC048(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BA37C, type metadata accessor for TranscriptProtoEntitySpanMatchResult) & 1;
}

unint64_t static TranscriptProtoToolRetrievalResponse.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_2404BC08C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE400);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE400);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "originalSubQuery";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "rewrittenQuery";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "confidence";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "retrievedTools";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "types";
  *(_QWORD *)(v16 + 8) = 5;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoToolRetrievalResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96B0, (uint64_t)qword_256FFE400, a1);
}

uint64_t TranscriptProtoToolRetrievalResponse.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          v4 = v3;
          sub_2408E593C();
          goto LABEL_6;
        case 3:
          v4 = v3;
          sub_2408E58D0();
          goto LABEL_6;
        case 4:
          type metadata accessor for ContextProtoRetrievedTool(0);
          sub_2404FA028(&qword_256FFEE78, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
          goto LABEL_5;
        case 5:
          type metadata accessor for ContextProtoToolRetrievalType(0);
          sub_2404FA028(&qword_256FFEE80, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
LABEL_5:
          v4 = v3;
          sub_2408E5960();
LABEL_6:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoToolRetrievalResponse.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    v5 = *(_QWORD *)(v0 + 24);
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = *(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_2408E5A38(), !v1))
    {
      if (*(float *)(v0 + 32) == 0.0 || (result = sub_2408E59FC(), !v1))
      {
        if (!*(_QWORD *)(*(_QWORD *)(v0 + 40) + 16)
          || (type metadata accessor for ContextProtoRetrievedTool(0),
              sub_2404FA028(&qword_256FFEE78, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool), result = sub_2408E5A5C(), !v1))
        {
          if (!*(_QWORD *)(*(_QWORD *)(v0 + 48) + 16)
            || (type metadata accessor for ContextProtoToolRetrievalType(0),
                sub_2404FA028(&qword_256FFEE80, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType), result = sub_2408E5A5C(), !v1))
          {
            type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
            return sub_2408E578C();
          }
        }
      }
    }
  }
  return result;
}

uint64_t TranscriptProtoToolRetrievalResponse.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoToolRetrievalResponse, &qword_256FFEE88, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
}

uint64_t sub_2404BC604@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_DWORD *)(a1 + 32) = 0;
  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 40) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 48) = v3;
  return result;
}

unint64_t sub_2404BC648()
{
  return 0xD000000000000020;
}

uint64_t sub_2404BC664()
{
  return TranscriptProtoToolRetrievalResponse.decodeMessage<A>(decoder:)();
}

uint64_t sub_2404BC678()
{
  return TranscriptProtoToolRetrievalResponse.traverse<A>(visitor:)();
}

uint64_t sub_2404BC68C()
{
  sub_2404FA028(&qword_2570005D8, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
  return sub_2408E5828();
}

uint64_t sub_2404BC6DC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96B0, (uint64_t)qword_256FFE400, a1);
}

uint64_t sub_2404BC6F8()
{
  sub_2404FA028(&qword_2570002A0, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
  return sub_2408E599C();
}

uint64_t sub_2404BC738()
{
  sub_2404FA028(&qword_2570002A0, type metadata accessor for TranscriptProtoToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolRetrievalResponse);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSystemResponse.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2404BC7A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE418);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE418);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EAD90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "actionEventId";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "toolId";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "outcome";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "responseOutput";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "statementId";
  *((_QWORD *)v17 + 1) = 11;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "clientQueryId";
  *((_QWORD *)v19 + 1) = 13;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "interpretedStatementResults";
  *((_QWORD *)v21 + 1) = 27;
  v21[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSystemResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96B8, (uint64_t)qword_256FFE418, a1);
}

uint64_t TranscriptProtoSystemResponse.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          goto LABEL_10;
        case 2:
          sub_2408E593C();
          break;
        case 3:
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemResponse, type metadata accessor for TranscriptProtoStatementOutcome, &qword_256FFF618, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
          break;
        case 5:
          sub_2404557D8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemResponse, type metadata accessor for TranscriptProtoResponseOutput, &qword_256FFF820, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
          break;
        case 6:
          sub_240457AD4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoSystemResponse, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        case 7:
          type metadata accessor for TranscriptProtoSystemResponse(0);
LABEL_10:
          sub_2408E5930();
          break;
        case 8:
          type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
          sub_2404FA028(&qword_256FFEE90, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
          sub_2408E5960();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoSystemResponse.traverse<A>(visitor:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v7 = result;
  if (v3[4])
    result = sub_2408E5A38();
  if (!v4)
  {
    v8 = v3[1];
    v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0)
      v9 = *v3 & 0xFFFFFFFFFFFFLL;
    if (v9)
      sub_2408E5A38();
    sub_2404BCE1C((uint64_t)v3, v7, a2, a3);
    sub_2404BCF90((uint64_t)v3, v7, a2, a3);
    sub_240457DE0((uint64_t)v3, v7, a2, a3, type metadata accessor for TranscriptProtoSystemResponse, 6);
    sub_2404BD104((uint64_t)v3, v7, a2, a3, type metadata accessor for TranscriptProtoSystemResponse);
    if (*(_QWORD *)(v3[2] + 16))
    {
      type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
      sub_2404FA028(&qword_256FFEE90, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
      sub_2408E5A5C();
    }
    type metadata accessor for TranscriptProtoSystemResponse(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404BCE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoSystemResponse(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFA3E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3E8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2404FA028(&qword_256FFF618, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementOutcome);
}

uint64_t sub_2404BCF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoResponseOutput(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoSystemResponse(0);
  sub_2403A9210(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_256FFA400);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA400);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoResponseOutput);
  sub_2404FA028(&qword_256FFF820, type metadata accessor for TranscriptProtoResponseOutput, (uint64_t)&protocol conformance descriptor for TranscriptProtoResponseOutput);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoResponseOutput);
}

uint64_t sub_2404BD104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 40) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t TranscriptProtoSystemResponse.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSystemResponse, &qword_256FFEE98, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
}

uint64_t sub_2404BD1A0@<X0>(int *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;

  a2[3] = 0;
  a2[4] = 0;
  v4 = (char *)a2 + a1[7];
  v5 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + a1[8];
  v7 = type metadata accessor for TranscriptProtoResponseOutput(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (char *)a2 + a1[9];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = (_QWORD *)((char *)a2 + a1[10]);
  *v10 = 0;
  v10[1] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_2404BD278()
{
  return 0xD000000000000019;
}

uint64_t sub_2404BD294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2404BD2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 44);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_2404BD314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSystemResponse.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404BD328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoSystemResponse.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404BD33C()
{
  sub_2404FA028(&qword_2570005D0, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
  return sub_2408E5828();
}

uint64_t sub_2404BD38C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96B8, (uint64_t)qword_256FFE418, a1);
}

uint64_t sub_2404BD3A8()
{
  sub_2404FA028(&qword_2570002B8, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
  return sub_2408E599C();
}

uint64_t sub_2404BD3E8()
{
  sub_2404FA028(&qword_2570002B8, type metadata accessor for TranscriptProtoSystemResponse, (uint64_t)&protocol conformance descriptor for TranscriptProtoSystemResponse);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoInterpretedStatementResult.protoMessageName.getter()
{
  return 0xD000000000000025;
}

uint64_t sub_2404BD458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE430);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE430);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "outcome";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "resultStatementId";
  *(_QWORD *)(v11 + 8) = 17;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "originProgramStatementId";
  *((_QWORD *)v13 + 1) = 24;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "actionEventId";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "toolId";
  *((_QWORD *)v17 + 1) = 6;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "originTaskStatementId";
  *((_QWORD *)v19 + 1) = 21;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoInterpretedStatementResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96C0, (uint64_t)qword_256FFE430, a1);
}

uint64_t TranscriptProtoInterpretedStatementResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    v13 = a3;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for TranscriptProtoStatementOutcome(0);
          sub_2404FA028(&qword_256FFF618, type metadata accessor for TranscriptProtoStatementOutcome, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
          a3 = v13;
          v12 = v11;
          sub_2408E596C();
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoInterpretedStatementResult, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoInterpretedStatementResult, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          goto LABEL_5;
        case 4:
        case 5:
          type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
          v12 = v11;
          sub_2408E5930();
          goto LABEL_5;
        case 6:
          v12 = v11;
          sub_240457AD4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoInterpretedStatementResult, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoInterpretedStatementResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA3E8, type metadata accessor for TranscriptProtoStatementOutcome, &qword_256FFF618, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementOutcome);
  if (!v4)
  {
    sub_2404BD9E8(v3, a1, a2, a3);
    sub_2404BDB5C(v3, a1, a2, a3);
    sub_2404C7E70(v3, a1, a2, a3, type metadata accessor for TranscriptProtoInterpretedStatementResult);
    sub_2404BDCD0(v3, a1, a2, a3, type metadata accessor for TranscriptProtoInterpretedStatementResult);
    sub_240457DE0(v3, a1, a2, a3, type metadata accessor for TranscriptProtoInterpretedStatementResult, 6);
    type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404BD9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_2404BDB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_2404BDCD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 32) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t TranscriptProtoInterpretedStatementResult.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoInterpretedStatementResult, &qword_256FFEEA0, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
}

uint64_t sub_2404BDD6C@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;

  v4 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  v5 = a2 + a1[5];
  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v7(a2 + a1[6], 1, 1, v6);
  v8 = a1[8];
  v9 = (_QWORD *)(a2 + a1[7]);
  *v9 = 0;
  v9[1] = 0;
  v10 = (_QWORD *)(a2 + v8);
  *v10 = 0;
  v10[1] = 0;
  v7(a2 + a1[9], 1, 1, v6);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2404BDE40()
{
  return 0xD000000000000025;
}

uint64_t sub_2404BDE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2404BDE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 40);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_2404BDEDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoInterpretedStatementResult.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404BDEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoInterpretedStatementResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404BDF04()
{
  sub_2404FA028(&qword_2570005C8, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
  return sub_2408E5828();
}

uint64_t sub_2404BDF54@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96C0, (uint64_t)qword_256FFE430, a1);
}

uint64_t sub_2404BDF70()
{
  sub_2404FA028(&qword_256FFEE90, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
  return sub_2408E599C();
}

uint64_t sub_2404BDFB0()
{
  sub_2404FA028(&qword_256FFEE90, type metadata accessor for TranscriptProtoInterpretedStatementResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoInterpretedStatementResult);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoProgramStatement.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404BE020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE448);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE448);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "id";
  *(_QWORD *)(v7 + 8) = 2;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 4;
  *(_QWORD *)v11 = "expression";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "targetType";
  *(_QWORD *)(v12 + 8) = 10;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoProgramStatement._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96C8, (uint64_t)qword_256FFE448, a1);
}

uint64_t TranscriptProtoProgramStatement.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 4)
        break;
      if (result == 3)
      {
        v12 = v11;
        sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoProgramStatement, type metadata accessor for ToolKitProtoTypeInstance, &qword_257000CB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for TranscriptProtoStatementID(0);
        sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
        v12 = v11;
        sub_2408E596C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    v12 = v11;
    sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoProgramStatement, type metadata accessor for TranscriptProtoExpression, &qword_256FFFDB0, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoProgramStatement.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA300, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  if (!v4)
  {
    sub_2404BE410(v3, a1, a2, a3);
    sub_2404BE584(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoProgramStatement(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404BE410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoProgramStatement(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA428);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA428);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t sub_2404BE584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCFA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoExpression(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoProgramStatement(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFCFA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFCFA0);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoExpression);
  sub_2404FA028(&qword_256FFFDB0, type metadata accessor for TranscriptProtoExpression, (uint64_t)&protocol conformance descriptor for TranscriptProtoExpression);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoExpression);
}

uint64_t TranscriptProtoProgramStatement.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoProgramStatement, &qword_256FFEEA8, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
}

uint64_t sub_2404BE718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404C1F98(a1, type metadata accessor for TranscriptProtoStatementID, type metadata accessor for TranscriptProtoExpression, type metadata accessor for ToolKitProtoTypeInstance, a2);
}

unint64_t sub_2404BE734()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404BE750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoProgramStatement.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404BE764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoProgramStatement.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404BE778()
{
  sub_2404FA028(&qword_2570005C0, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
  return sub_2408E5828();
}

uint64_t sub_2404BE7C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96C8, (uint64_t)qword_256FFE448, a1);
}

uint64_t sub_2404BE7E4()
{
  sub_2404FA028(&qword_256FFE918, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
  return sub_2408E599C();
}

uint64_t sub_2404BE824()
{
  sub_2404FA028(&qword_256FFE918, type metadata accessor for TranscriptProtoProgramStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoProgramStatement);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoLocaleSettings.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2404BE894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE460);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE460);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "deviceLocale";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "userLocale";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "responseLocale";
  *(_QWORD *)(v12 + 8) = 14;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoLocaleSettings._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96D0, (uint64_t)qword_256FFE460, a1);
}

uint64_t TranscriptProtoLocaleSettings.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BEA68(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120], (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C120]);
}

uint64_t sub_2404BEA68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t), void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v14;

  result = sub_2408E5858();
  if (!v7)
  {
    while ((v14 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          a6(v6 + 32, a2, a3);
          break;
        case 2:
          a5(v6 + 16, a2, a3);
          break;
        case 1:
          a4(v6, a2, a3);
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoLocaleSettings.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BEB64(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoLocaleSettings);
}

uint64_t sub_2404BEB64(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v7 = v4[1];
  v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v8 = *v4 & 0xFFFFFFFFFFFFLL;
  if (!v8 || (result = sub_2408E5A38(), !v5))
  {
    v10 = v4[3];
    v11 = HIBYTE(v10) & 0xF;
    if ((v10 & 0x2000000000000000) == 0)
      v11 = v4[2] & 0xFFFFFFFFFFFFLL;
    if (!v11 || (result = sub_2408E5A38(), !v5))
    {
      v12 = v4[5];
      v13 = HIBYTE(v12) & 0xF;
      if ((v12 & 0x2000000000000000) == 0)
        v13 = v4[4] & 0xFFFFFFFFFFFFLL;
      if (!v13 || (result = sub_2408E5A38(), !v5))
      {
        a4(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t static TranscriptProtoLocaleSettings.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404E4C74(a1, a2, type metadata accessor for TranscriptProtoLocaleSettings) & 1;
}

uint64_t TranscriptProtoLocaleSettings.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoLocaleSettings, &qword_256FFEEB0, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
}

uint64_t sub_2404BECBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  return result;
}

unint64_t sub_2404BECF4()
{
  return 0xD000000000000019;
}

uint64_t sub_2404BED10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUndoContext.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404BED24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoLocaleSettings.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404BED38()
{
  sub_2404FA028(&qword_2570005B8, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
  return sub_2408E5828();
}

uint64_t sub_2404BED88@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96D0, (uint64_t)qword_256FFE460, a1);
}

uint64_t sub_2404BEDA4()
{
  sub_2404FA028(&qword_2570002F0, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
  return sub_2408E599C();
}

uint64_t sub_2404BEDE4()
{
  sub_2404FA028(&qword_2570002F0, type metadata accessor for TranscriptProtoLocaleSettings, (uint64_t)&protocol conformance descriptor for TranscriptProtoLocaleSettings);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoDeviceDetailsDeviceType.protoMessageName.getter()
{
  return 0xD000000000000022;
}

uint64_t sub_2404BEE54(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE478, 1, (uint64_t)"rawValue", 8);
}

uint64_t static TranscriptProtoDeviceDetailsDeviceType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96D8, (uint64_t)qword_256FFE478, a1);
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_2408E5858();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_2408E58E8();
  }
  return result;
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.traverse<A>(visitor:)()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (result = sub_2408E5A08(), !v1))
  {
    type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t TranscriptProtoDeviceDetailsDeviceType.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, &qword_256FFEEB8, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
}

uint64_t sub_2404BEFA8@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  return result;
}

unint64_t sub_2404BEFD4()
{
  return 0xD000000000000022;
}

uint64_t sub_2404BEFF0()
{
  return TranscriptProtoDeviceDetailsDeviceType.decodeMessage<A>(decoder:)();
}

uint64_t sub_2404BF004()
{
  return TranscriptProtoDeviceDetailsDeviceType.traverse<A>(visitor:)();
}

uint64_t sub_2404BF018()
{
  sub_2404FA028(&qword_2570005B0, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
  return sub_2408E5828();
}

uint64_t sub_2404BF068@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96D8, (uint64_t)qword_256FFE478, a1);
}

uint64_t sub_2404BF084()
{
  sub_2404FA028(&qword_257000308, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
  return sub_2408E599C();
}

uint64_t sub_2404BF0C4()
{
  sub_2404FA028(&qword_257000308, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoDeviceDetails.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_2404BF134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE490);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE490);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "deviceIdsId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "type";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoDeviceDetails._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96E0, (uint64_t)qword_256FFE490, a1);
}

uint64_t TranscriptProtoDeviceDetails.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404BF2D4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoDeviceDetails, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, &qword_257000308, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
}

uint64_t sub_2404BF2D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t result;
  char v18;

  v13 = v7;
  while (1)
  {
    result = sub_2408E5858();
    if (v8 || (v18 & 1) != 0)
      break;
    if (result == 2)
    {
      sub_240448B20(a1, v13, a2, a3, a4, a5, a6, a7);
    }
    else if (result == 1)
    {
      sub_2408E593C();
    }
  }
  return result;
}

uint64_t TranscriptProtoDeviceDetails.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24044BC48(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t))sub_2404BF3B4, (void (*)(_QWORD))type metadata accessor for TranscriptProtoDeviceDetails);
}

uint64_t sub_2404BF3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoDeviceDetails(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA318);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA318);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
  sub_2404FA028(&qword_257000308, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetailsDeviceType);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
}

uint64_t TranscriptProtoDeviceDetails.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoDeviceDetails, &qword_256FFEEC0, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
}

uint64_t sub_2404BF548@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404BF554(a1, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType, a2);
}

uint64_t sub_2404BF554@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, _QWORD *a3@<X8>)
{
  char *v4;
  uint64_t v5;
  uint64_t result;

  v4 = (char *)a3 + *(int *)(a1 + 20);
  v5 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a3 = 0;
  a3[1] = 0xE000000000000000;
  return result;
}

unint64_t sub_2404BF5BC()
{
  return 0xD000000000000018;
}

uint64_t sub_2404BF5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoDeviceDetails.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404BF5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoDeviceDetails.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404BF600()
{
  sub_2404FA028(&qword_2570005A8, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
  return sub_2408E5828();
}

uint64_t sub_2404BF650@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96E0, (uint64_t)qword_256FFE490, a1);
}

uint64_t sub_2404BF66C()
{
  sub_2404FA028(&qword_257000320, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
  return sub_2408E599C();
}

uint64_t sub_2404BF6AC()
{
  sub_2404FA028(&qword_257000320, type metadata accessor for TranscriptProtoDeviceDetails, (uint64_t)&protocol conformance descriptor for TranscriptProtoDeviceDetails);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoStatementID.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_2404BF71C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE4A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE4A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "index";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "name";
  *((_QWORD *)v11 + 1) = 4;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoStatementID._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96E8, (uint64_t)qword_256FFE4A8, a1);
}

uint64_t TranscriptProtoStatementID.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2408E5930();
      }
      else if (result == 1)
      {
        sub_2408E5948();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoStatementID.traverse<A>(visitor:)()
{
  unsigned int *v0;
  uint64_t v1;
  uint64_t result;

  result = *v0;
  if (!(_DWORD)result || (result = sub_2408E5A44(), !v1))
  {
    if (*((_QWORD *)v0 + 2))
      result = sub_2408E5A38();
    if (!v1)
    {
      type metadata accessor for TranscriptProtoStatementID(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t TranscriptProtoStatementID.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoStatementID, &qword_256FFECE0, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
}

uint64_t sub_2404BFA04@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_DWORD *)a1 = 0;
  return result;
}

unint64_t sub_2404BFA34()
{
  return 0xD000000000000016;
}

uint64_t sub_2404BFA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2404BFA90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 24);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_2404BFAD0()
{
  return TranscriptProtoStatementID.decodeMessage<A>(decoder:)();
}

uint64_t sub_2404BFAE4()
{
  return TranscriptProtoStatementID.traverse<A>(visitor:)();
}

uint64_t sub_2404BFAF8()
{
  sub_2404FA028(&qword_2570005A0, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  return sub_2408E5828();
}

uint64_t sub_2404BFB48@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96E8, (uint64_t)qword_256FFE4A8, a1);
}

uint64_t sub_2404BFB64()
{
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  return sub_2408E599C();
}

uint64_t sub_2404BFBA4()
{
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoToolResolution.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2404BFC14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE4C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE4C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "tool";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "originProgramStatementId";
  *(_QWORD *)(v12 + 8) = 24;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoToolResolution._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96F0, (uint64_t)qword_256FFE4C0, a1);
}

uint64_t TranscriptProtoToolResolution.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    v11 = a3;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoToolResolution, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        case 2:
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoToolResolution, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        case 1:
          type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
          sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
          a3 = v11;
          sub_2408E596C();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoToolResolution.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA468, type metadata accessor for ToolKitProtoToolDefinition.Version1, &qword_256FFE778, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
  if (!v4)
  {
    sub_2404C0044(v3, a1, a2, a3);
    sub_2404C01B8(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoToolResolution(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404C0044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoToolResolution(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_2404C01B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoToolResolution(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t static TranscriptProtoToolResolution.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2404DDCC0(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1, &qword_257000CC0, &qword_256FFA468, (uint64_t (*)(char *, char *))static ToolKitProtoToolDefinition.Version1.== infix(_:_:), type metadata accessor for TranscriptProtoToolResolution) & 1;
}

uint64_t TranscriptProtoToolResolution.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoToolResolution, &qword_256FFEEC8, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
}

uint64_t sub_2404C0388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404C2940(a1, type metadata accessor for ToolKitProtoToolDefinition.Version1, type metadata accessor for TranscriptProtoStatementID, a2);
}

unint64_t sub_2404C039C()
{
  return 0xD000000000000019;
}

uint64_t sub_2404C03B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoToolResolution.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C03CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoToolResolution.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C03E0()
{
  sub_2404FA028(&qword_257000598, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
  return sub_2408E5828();
}

uint64_t sub_2404C0430@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96F0, (uint64_t)qword_256FFE4C0, a1);
}

uint64_t sub_2404C044C()
{
  sub_2404FA028(&qword_257000348, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
  return sub_2408E599C();
}

uint64_t sub_2404C048C()
{
  sub_2404FA028(&qword_257000348, type metadata accessor for TranscriptProtoToolResolution, (uint64_t)&protocol conformance descriptor for TranscriptProtoToolResolution);
  return sub_2408E59A8();
}

uint64_t sub_2404C04DC(uint64_t a1, uint64_t a2)
{
  return sub_2404DDCC0(a1, a2, type metadata accessor for ToolKitProtoToolDefinition.Version1, &qword_257000CC0, &qword_256FFA468, (uint64_t (*)(char *, char *))static ToolKitProtoToolDefinition.Version1.== infix(_:_:), type metadata accessor for TranscriptProtoToolResolution) & 1;
}

unint64_t static TranscriptProtoUndoRedoRequest.protoMessageName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2404C0538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE4D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE4D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "bundleIdentifier";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "token";
  *(_QWORD *)(v11 + 8) = 5;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "operation";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "statementId";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "statementIdToUndo";
  *(_QWORD *)(v16 + 8) = 17;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoUndoRedoRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF96F8, (uint64_t)qword_256FFE4D8, a1);
}

uint64_t TranscriptProtoUndoRedoRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_2408E593C();
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_2408E5930();
          goto LABEL_5;
        case 3:
          sub_2404EF8D0();
          v12 = v11;
          sub_2408E58A0();
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUndoRedoRequest, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          goto LABEL_5;
        case 5:
          v12 = v11;
          sub_2404557D8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoUndoRedoRequest, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoUndoRedoRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;

  v5 = v3;
  result = *(_QWORD *)v5;
  v10 = *(_QWORD *)(v5 + 8);
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = *(_QWORD *)v5 & 0xFFFFFFFFFFFFLL;
  if (!v11 || (result = sub_2408E5A38(), !v4))
  {
    if (*(_QWORD *)(v5 + 32))
      result = sub_2408E5A38();
    if (!v4)
    {
      if (*(_BYTE *)(v5 + 16) == 1)
      {
        sub_2404EF8D0();
        sub_2408E59E4();
      }
      sub_2404C0A20(v5, a1, a2, a3);
      sub_2404C0B94(v5, a1, a2, a3);
      type metadata accessor for TranscriptProtoUndoRedoRequest(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_2404C0A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_2404C0B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoUndoRedoRequest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoUndoRedoRequest, &qword_256FFEED8, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
}

uint64_t sub_2404C0D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  v4 = a2 + *(int *)(a1 + 28);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(a2 + *(int *)(a1 + 32), 1, 1, v5);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

unint64_t sub_2404C0DBC()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_2404C0DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUndoRedoRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C0DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoUndoRedoRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C0E00()
{
  sub_2404FA028(&qword_257000590, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
  return sub_2408E5828();
}

uint64_t sub_2404C0E50@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF96F8, (uint64_t)qword_256FFE4D8, a1);
}

uint64_t sub_2404C0E6C()
{
  sub_2404FA028(&qword_257000360, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
  return sub_2408E599C();
}

uint64_t sub_2404C0EAC()
{
  sub_2404FA028(&qword_257000360, type metadata accessor for TranscriptProtoUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoUndoRedoRequest);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoClientUndoRedoRequest.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_2404C0F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE4F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE4F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "token";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "operation";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "statementId";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "statementIdToUndo";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoClientUndoRedoRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9700, (uint64_t)qword_256FFE4F0, a1);
}

uint64_t TranscriptProtoClientUndoRedoRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_2408E593C();
          goto LABEL_5;
        case 2:
          sub_2404EF8D0();
          v12 = v11;
          sub_2408E58A0();
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoClientUndoRedoRequest, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          goto LABEL_5;
        case 4:
          v12 = v11;
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoClientUndoRedoRequest, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoClientUndoRedoRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = *(_QWORD *)(v3 + 8);
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    if (*(_BYTE *)(v3 + 16) != 1 || (sub_2404EF8D0(), result = sub_2408E59E4(), !v4))
    {
      result = sub_2404C1388(v3, a1, a2, a3);
      if (!v4)
      {
        sub_2404C14FC(v3, a1, a2, a3);
        type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t sub_2404C1388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_2404C14FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoClientUndoRedoRequest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoClientUndoRedoRequest, &qword_256FFEEE0, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
}

uint64_t sub_2404C1690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v4 = a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v6(a2 + *(int *)(a1 + 28), 1, 1, v5);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

unint64_t sub_2404C1720()
{
  return 0xD000000000000020;
}

uint64_t sub_2404C173C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoClientUndoRedoRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C1750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoClientUndoRedoRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C1764()
{
  sub_2404FA028(&qword_257000588, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
  return sub_2408E5828();
}

uint64_t sub_2404C17B4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9700, (uint64_t)qword_256FFE4F0, a1);
}

uint64_t sub_2404C17D0()
{
  sub_2404FA028(&qword_257000378, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
  return sub_2408E599C();
}

uint64_t sub_2404C1810()
{
  sub_2404FA028(&qword_257000378, type metadata accessor for TranscriptProtoClientUndoRedoRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoClientUndoRedoRequest);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoTypeConversionRequest.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_2404C1880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE508);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE508);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "target";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "statementId";
  *(_QWORD *)(v12 + 8) = 11;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoTypeConversionRequest._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9708, (uint64_t)qword_256FFE508, a1);
}

uint64_t TranscriptProtoTypeConversionRequest.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v12 = v11;
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoTypeConversionRequest, type metadata accessor for ToolKitProtoTypeInstance, &qword_257000CB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for ToolKitProtoTypedValue(0);
        sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
        v12 = v11;
        sub_2408E596C();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    v12 = v11;
    sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoTypeConversionRequest, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoTypeConversionRequest.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA3A8, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  if (!v4)
  {
    sub_2404C1C74(v3, a1, a2, a3);
    sub_2404C1DE8(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoTypeConversionRequest(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404C1C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA428);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA428);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t sub_2404C1DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t TranscriptProtoTypeConversionRequest.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoTypeConversionRequest, &qword_256FFEEE8, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
}

uint64_t sub_2404C1F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404C1F98(a1, type metadata accessor for ToolKitProtoTypedValue, type metadata accessor for ToolKitProtoTypeInstance, type metadata accessor for TranscriptProtoStatementID, a2);
}

uint64_t sub_2404C1F98@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t (*a4)(_QWORD)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a5, 1, 1, v9);
  v10 = a5 + *(int *)(a1 + 20);
  v11 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = a5 + *(int *)(a1 + 24);
  v13 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2404C2058()
{
  return 0xD000000000000020;
}

uint64_t sub_2404C2074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoTypeConversionRequest.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C2088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoTypeConversionRequest.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C209C()
{
  sub_2404FA028(&qword_257000580, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
  return sub_2408E5828();
}

uint64_t sub_2404C20EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9708, (uint64_t)qword_256FFE508, a1);
}

uint64_t sub_2404C2108()
{
  sub_2404FA028(&qword_257000390, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
  return sub_2408E599C();
}

uint64_t sub_2404C2148()
{
  sub_2404FA028(&qword_257000390, type metadata accessor for TranscriptProtoTypeConversionRequest, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionRequest);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoTypeConversionResult.protoMessageName.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2404C21B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE520);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE520);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "statementId";
  *((_QWORD *)v11 + 1) = 11;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "originStatementId";
  *(_QWORD *)(v12 + 8) = 17;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoTypeConversionResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9710, (uint64_t)qword_256FFE520, a1);
}

uint64_t TranscriptProtoTypeConversionResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    v11 = a3;
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoTypeConversionResult, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        case 2:
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoTypeConversionResult, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
        case 1:
          type metadata accessor for ToolKitProtoTypedValue(0);
          sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
          a3 = v11;
          sub_2408E596C();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoTypeConversionResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA3A8, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  if (!v4)
  {
    sub_2404C25E8(v3, a1, a2, a3);
    sub_2404C275C(v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoTypeConversionResult(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404C25E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_2404C275C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoTypeConversionResult(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t static TranscriptProtoTypeConversionResult.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2404DDCC0(a1, a2, type metadata accessor for ToolKitProtoTypedValue, &qword_257000CA8, &qword_256FFA3A8, static ToolKitProtoTypedValue.== infix(_:_:), type metadata accessor for TranscriptProtoTypeConversionResult) & 1;
}

uint64_t TranscriptProtoTypeConversionResult.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoTypeConversionResult, &qword_256FFEEF0, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
}

uint64_t sub_2404C292C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2404C2940(a1, type metadata accessor for ToolKitProtoTypedValue, type metadata accessor for TranscriptProtoStatementID, a2);
}

uint64_t sub_2404C2940@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t (*a3)(_QWORD)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  v7 = a2(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a4, 1, 1, v7);
  v8 = a4 + *(int *)(a1 + 20);
  v9 = a3(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(a4 + *(int *)(a1 + 24), 1, 1, v9);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2404C29EC()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_2404C2A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoTypeConversionResult.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C2A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoTypeConversionResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C2A30()
{
  sub_2404FA028(&qword_257000578, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
  return sub_2408E5828();
}

uint64_t sub_2404C2A80@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9710, (uint64_t)qword_256FFE520, a1);
}

uint64_t sub_2404C2A9C()
{
  sub_2404FA028(&qword_2570003A8, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
  return sub_2408E599C();
}

uint64_t sub_2404C2ADC()
{
  sub_2404FA028(&qword_2570003A8, type metadata accessor for TranscriptProtoTypeConversionResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoTypeConversionResult);
  return sub_2408E59A8();
}

uint64_t sub_2404C2B2C(uint64_t a1, uint64_t a2)
{
  return sub_2404DDCC0(a1, a2, type metadata accessor for ToolKitProtoTypedValue, &qword_257000CA8, &qword_256FFA3A8, static ToolKitProtoTypedValue.== infix(_:_:), type metadata accessor for TranscriptProtoTypeConversionResult) & 1;
}

unint64_t static TranscriptProtoQueryDecorationResult.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_2404C2B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE538);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE538);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "spans";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "requiredContext";
  *(_QWORD *)(v11 + 8) = 15;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "utteranceContext";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "toolRetrievalResponse";
  *((_QWORD *)v15 + 1) = 21;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "dynamicEnumerationEntities";
  *(_QWORD *)(v16 + 8) = 26;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoQueryDecorationResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9718, (uint64_t)qword_256FFE538, a1);
}

uint64_t TranscriptProtoQueryDecorationResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for ContextProtoSpanMatchedEntity(0);
          sub_2404FA028(&qword_256FFEE68, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
          goto LABEL_5;
        case 2:
        case 3:
          type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
          sub_2404FA028(&qword_256FFEAF0, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement);
          goto LABEL_5;
        case 4:
          sub_2404557D8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationResult, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, &qword_257000CA0, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
          break;
        case 5:
          type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
          sub_2404FA028(&qword_256FFEEF8, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
LABEL_5:
          sub_2408E5960();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoQueryDecorationResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v5 = v3;
  if (!*(_QWORD *)(*v5 + 16)
    || (type metadata accessor for ContextProtoSpanMatchedEntity(0),
        sub_2404FA028(&qword_256FFEE68, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity), result = sub_2408E5A5C(), !v4))
  {
    if (!*(_QWORD *)(v5[1] + 16)
      || (type metadata accessor for TranscriptProtoRetrievedContextStatement(0),
          sub_2404FA028(&qword_256FFEAF0, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement), result = sub_2408E5A5C(), !v4))
    {
      if (!*(_QWORD *)(v5[2] + 16)
        || (type metadata accessor for TranscriptProtoRetrievedContextStatement(0),
            sub_2404FA028(&qword_256FFEAF0, type metadata accessor for TranscriptProtoRetrievedContextStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoRetrievedContextStatement), result = sub_2408E5A5C(), !v4))
      {
        result = sub_2404C318C((uint64_t)v5, a1, a2, a3);
        if (!v4)
        {
          if (*(_QWORD *)(v5[3] + 16))
          {
            type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
            sub_2404FA028(&qword_256FFEEF8, type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement, (uint64_t)&protocol conformance descriptor for TranscriptProtoDynamicEnumerationEntityStatement);
            sub_2408E5A5C();
          }
          type metadata accessor for TranscriptProtoQueryDecorationResult(0);
          return sub_2408E578C();
        }
      }
    }
  }
  return result;
}

uint64_t sub_2404C318C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t DecorationResult;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v9 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  MEMORY[0x24BDAC7A8](DecorationToolRetrievalResponse);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  sub_2403A9210(a1 + *(int *)(DecorationResult + 32), (uint64_t)v7, &qword_256FFA470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, DecorationToolRetrievalResponse) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA470);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  sub_2404FA028(&qword_257000CA0, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
}

uint64_t TranscriptProtoQueryDecorationResult.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryDecorationResult, &qword_256FFEF00, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
}

uint64_t sub_2404C3320@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v3;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t result;
  uint64_t v6;

  v3 = (char *)a2 + *(int *)(a1 + 32);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationToolRetrievalResponse - 8) + 56))(v3, 1, 1, DecorationToolRetrievalResponse);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  v6 = MEMORY[0x24BEE4AF8];
  *a2 = MEMORY[0x24BEE4AF8];
  a2[1] = v6;
  a2[2] = v6;
  a2[3] = v6;
  return result;
}

unint64_t sub_2404C3390()
{
  return 0xD000000000000020;
}

uint64_t sub_2404C33AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2404C33EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 36);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_2404C342C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationResult.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C3440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C3454()
{
  sub_2404FA028(&qword_257000570, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
  return sub_2408E5828();
}

uint64_t sub_2404C34A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9718, (uint64_t)qword_256FFE538, a1);
}

uint64_t sub_2404C34C0()
{
  sub_2404FA028(&qword_2570003C0, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
  return sub_2408E599C();
}

uint64_t sub_2404C3500()
{
  sub_2404FA028(&qword_2570003C0, type metadata accessor for TranscriptProtoQueryDecorationResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationResult);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResult.protoMessageName.getter()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_2404C3570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE550);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE550);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "statementId";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "dataSource";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "payload";
  *(_QWORD *)(v12 + 8) = 7;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResult._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9720, (uint64_t)qword_256FFE550, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, &qword_257000480, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
          break;
        case 2:
          sub_2408E593C();
          break;
        case 1:
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;

  result = sub_2404C3920((uint64_t)v3, a1, a2, a3);
  if (!v4)
  {
    v9 = v3[1];
    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = *v3 & 0xFFFFFFFFFFFFLL;
    if (v10)
      sub_2408E5A38();
    sub_2404C3A94((uint64_t)v3, a1, a2, a3);
    type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2404C3920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t DecorationPrePlannerResult;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  sub_2403A9210(a1 + *(int *)(DecorationPrePlannerResult + 20), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_2404C3A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t DecorationPrePlannerResult;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  v9 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayload);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  sub_2403A9210(a1 + *(int *)(DecorationPrePlannerResult + 24), (uint64_t)v7, &qword_256FFA480);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, DecorationPrePlannerResultPayload) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA480);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  sub_2404FA028(&qword_257000480, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResult.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, &qword_256FFEF08, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
}

uint64_t sub_2404C3C28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_2404C3C3C(a1, type metadata accessor for TranscriptProtoStatementID, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, a2);
}

uint64_t sub_2404C3C3C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t (*a3)(_QWORD)@<X3>, _QWORD *a4@<X8>)
{
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;

  v7 = (char *)a4 + *(int *)(a1 + 20);
  v8 = a2(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (char *)a4 + *(int *)(a1 + 24);
  v10 = a3(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a4 = 0;
  a4[1] = 0xE000000000000000;
  return result;
}

unint64_t sub_2404C3CD4()
{
  return 0xD00000000000002ALL;
}

uint64_t sub_2404C3CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResult.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C3D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResult.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C3D18()
{
  sub_2404FA028(&qword_257000568, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
  return sub_2408E5828();
}

uint64_t sub_2404C3D68@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9720, (uint64_t)qword_256FFE550, a1);
}

uint64_t sub_2404C3D84()
{
  sub_2404FA028(&qword_2570003D8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
  return sub_2408E599C();
}

uint64_t sub_2404C3DC4()
{
  sub_2404FA028(&qword_2570003D8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResult);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.protoMessageName.getter()
{
  return 0xD000000000000046;
}

uint64_t sub_2404C3E34(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE568, 1, (uint64_t)"values", 6);
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9728, (uint64_t)qword_256FFE568, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404B9B14(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BE5C0E8]);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2404C3EA4(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
}

uint64_t sub_2404C3EA4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v4 + 16) || (result = sub_2408E5A20(), !v5))
  {
    a4(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant) & 1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, &qword_256FFEF10, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
}

unint64_t sub_2404C3F88()
{
  return 0xD000000000000046;
}

uint64_t sub_2404C3FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C3FB8()
{
  sub_2404FA028(&qword_257000560, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
  return sub_2408E5828();
}

uint64_t sub_2404C4008@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9728, (uint64_t)qword_256FFE568, a1);
}

uint64_t sub_2404C4024()
{
  sub_2404FA028(&qword_2570003F0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
  return sub_2408E599C();
}

uint64_t sub_2404C4064()
{
  sub_2404FA028(&qword_2570003F0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404C40B4(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant) & 1;
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.protoMessageName.getter()
{
  return 0xD00000000000004ALL;
}

uint64_t sub_2404C40F8(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE580, 1, (uint64_t)"values", 6);
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9730, (uint64_t)qword_256FFE580, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BAAE8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant) & 1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, &qword_256FFEF18, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
}

unint64_t sub_2404C41D4()
{
  return 0xD00000000000004ALL;
}

uint64_t sub_2404C41F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoValueDisambiguation.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C4204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C4218()
{
  sub_2404FA028(&qword_257000558, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  return sub_2408E5828();
}

uint64_t sub_2404C4268@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9730, (uint64_t)qword_256FFE580, a1);
}

uint64_t sub_2404C4284()
{
  sub_2404FA028(&qword_257000408, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  return sub_2408E599C();
}

uint64_t sub_2404C42C4()
{
  sub_2404FA028(&qword_257000408, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404C4314(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BAAE8, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant) & 1;
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.protoMessageName.getter()
{
  return 0xD000000000000050;
}

uint64_t sub_2404C4358(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE598, 1, (uint64_t)"values", 6);
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9738, (uint64_t)qword_256FFE598, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ContextProtoRetrievedContext, &qword_256FFEF20, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ContextProtoRetrievedContext, &qword_256FFEF20, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BA984, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant) & 1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, &qword_256FFEF28, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
}

unint64_t sub_2404C4434()
{
  return 0xD000000000000050;
}

uint64_t sub_2404C4450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C4464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C4478()
{
  sub_2404FA028(&qword_257000550, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  return sub_2408E5828();
}

uint64_t sub_2404C44C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9738, (uint64_t)qword_256FFE598, a1);
}

uint64_t sub_2404C44E4()
{
  sub_2404FA028(&qword_257000420, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  return sub_2408E599C();
}

uint64_t sub_2404C4524()
{
  sub_2404FA028(&qword_257000420, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404C4574(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BA984, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant) & 1;
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.protoMessageName.getter()
{
  return 0xD000000000000051;
}

uint64_t sub_2404C45B8(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE5B0, 1, (uint64_t)"values", 6);
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9740, (uint64_t)qword_256FFE5B0, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ContextProtoSpanMatchedEntity, &qword_256FFEE68, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ContextProtoSpanMatchedEntity, &qword_256FFEE68, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BA37C, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant) & 1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, &qword_256FFEF30, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
}

unint64_t sub_2404C4694()
{
  return 0xD000000000000051;
}

uint64_t sub_2404C46B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C46C4()
{
  sub_2404FA028(&qword_257000548, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  return sub_2408E5828();
}

uint64_t sub_2404C4714@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9740, (uint64_t)qword_256FFE5B0, a1);
}

uint64_t sub_2404C4730()
{
  sub_2404FA028(&qword_257000438, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  return sub_2408E599C();
}

uint64_t sub_2404C4770()
{
  sub_2404FA028(&qword_257000438, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404C47C0(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2408BA37C, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant) & 1;
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.protoMessageName.getter()
{
  return 0xD00000000000004DLL;
}

uint64_t sub_2404C4804(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE5C8, 1, (uint64_t)"values", 6);
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9748, (uint64_t)qword_256FFE5C8, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ContextProtoRetrievedTool, &qword_256FFEE78, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ContextProtoRetrievedTool, &qword_256FFEE78, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BA998, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant) & 1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, &qword_256FFEF38, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
}

unint64_t sub_2404C48E0()
{
  return 0xD00000000000004DLL;
}

uint64_t sub_2404C48FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C4910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C4924()
{
  sub_2404FA028(&qword_257000540, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  return sub_2408E5828();
}

uint64_t sub_2404C4974@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9748, (uint64_t)qword_256FFE5C8, a1);
}

uint64_t sub_2404C4990()
{
  sub_2404FA028(&qword_257000450, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  return sub_2408E599C();
}

uint64_t sub_2404C49D0()
{
  sub_2404FA028(&qword_257000450, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404C4A20(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408BA998, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant) & 1;
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.protoMessageName.getter()
{
  return 0xD00000000000004FLL;
}

uint64_t sub_2404C4A64(uint64_t a1)
{
  return sub_2404C4A80(a1, qword_256FFE5E0, 1, (uint64_t)"values", 6);
}

uint64_t sub_2404C4A80(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9 = sub_2408E5A98();
  __swift_allocate_value_buffer(v9, a2);
  __swift_project_value_buffer(v9, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_2408EADA0;
  v14 = v13 + v12 + *(int *)(v10 + 48);
  *(_QWORD *)(v13 + v12) = a3;
  *(_QWORD *)v14 = a4;
  *(_QWORD *)(v14 + 8) = a5;
  *(_BYTE *)(v14 + 16) = 2;
  v15 = *MEMORY[0x24BE5C318];
  v16 = sub_2408E5A74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9750, (uint64_t)qword_256FFE5E0, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C300(a1, a2, a3, type metadata accessor for ContextProtoToolQueryOutput, &qword_256FFEF40, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24046C3FC(a1, a2, a3, type metadata accessor for ContextProtoToolQueryOutput, &qword_256FFEF40, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput, (void (*)(_QWORD))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408C1D50, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant) & 1;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, &qword_256FFEF48, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
}

unint64_t sub_2404C4C4C()
{
  return 0xD00000000000004FLL;
}

uint64_t sub_2404C4C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C4C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C4C90()
{
  sub_2404FA028(&qword_257000538, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  return sub_2408E5828();
}

uint64_t sub_2404C4CE0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9750, (uint64_t)qword_256FFE5E0, a1);
}

uint64_t sub_2404C4CFC()
{
  sub_2404FA028(&qword_257000468, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  return sub_2408E599C();
}

uint64_t sub_2404C4D3C()
{
  sub_2404FA028(&qword_257000468, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  return sub_2408E59A8();
}

uint64_t sub_2404C4D8C(_QWORD *a1, char *a2)
{
  return sub_2404C9900(a1, a2, sub_2408C1D50, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant) & 1;
}

unint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayload.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_2404C4DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE5F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE5F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "strings";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "typedValues";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "retrievedContexts";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "entitySpanMatchResults";
  *((_QWORD *)v15 + 1) = 22;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "retrievedTools";
  *((_QWORD *)v17 + 1) = 14;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "toolQueryOutputs";
  *((_QWORD *)v19 + 1) = 16;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoQueryDecorationPrePlannerResultPayload._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9758, (uint64_t)qword_256FFE5F8, a1);
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayload.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2404C5148(v5, a1, a2, a3);
          break;
        case 2:
          sub_2404C5588(v5, a1, a2, a3);
          break;
        case 3:
          sub_2404C59CC(v5, a1, a2, a3);
          break;
        case 4:
          sub_2404C5E10(v5, a1, a2, a3);
          break;
        case 5:
          sub_2404C6254(v5, a1, a2, a3);
          break;
        case 6:
          sub_2404C6698(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2404C5148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
  v6 = *(_QWORD *)(DecorationPrePlannerResultPayloadRepeatedStringVariant - 8);
  v7 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedStringVariant);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = *(_QWORD *)(DecorationPrePlannerPayloadEnum - 8);
  v15 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C60);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = DecorationPrePlannerResultPayloadRepeatedStringVariant;
  v25(&v36[-v23], 1, 1, DecorationPrePlannerResultPayloadRepeatedStringVariant);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA478);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, DecorationPrePlannerPayloadEnum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA478);
    v28 = DecorationPrePlannerPayloadEnum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v28 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000C60);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_2570003F0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000C60);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000C60);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000C60);
    return sub_2403A97FC((uint64_t)v33, &qword_257000C60);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000C60);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA478);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404C5588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
  v6 = *(_QWORD *)(DecorationPrePlannerResultPayloadRepeatedTypedValueVariant - 8);
  v7 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = *(_QWORD *)(DecorationPrePlannerPayloadEnum - 8);
  v15 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C68);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = DecorationPrePlannerResultPayloadRepeatedTypedValueVariant;
  v25(&v36[-v23], 1, 1, DecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA478);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, DecorationPrePlannerPayloadEnum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA478);
    v28 = DecorationPrePlannerPayloadEnum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v28 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000C68);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000408, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000C68);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000C68);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000C68);
    return sub_2403A97FC((uint64_t)v33, &qword_257000C68);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000C68);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA478);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404C59CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
  v6 = *(_QWORD *)(DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant - 8);
  v7 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = *(_QWORD *)(DecorationPrePlannerPayloadEnum - 8);
  v15 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C70);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant;
  v25(&v36[-v23], 1, 1, DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA478);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, DecorationPrePlannerPayloadEnum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA478);
    v28 = DecorationPrePlannerPayloadEnum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v28 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000C70);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000420, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000C70);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000C70);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000C70);
    return sub_2403A97FC((uint64_t)v33, &qword_257000C70);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000C70);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA478);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404C5E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
  v6 = *(_QWORD *)(DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant - 8);
  v7 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = *(_QWORD *)(DecorationPrePlannerPayloadEnum - 8);
  v15 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C78);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant;
  v25(&v36[-v23], 1, 1, DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA478);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, DecorationPrePlannerPayloadEnum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA478);
    v28 = DecorationPrePlannerPayloadEnum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v28 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000C78);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000438, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000C78);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000C78);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000C78);
    return sub_2403A97FC((uint64_t)v33, &qword_257000C78);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000C78);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA478);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404C6254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
  v6 = *(_QWORD *)(DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant - 8);
  v7 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = *(_QWORD *)(DecorationPrePlannerPayloadEnum - 8);
  v15 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C80);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant;
  v25(&v36[-v23], 1, 1, DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA478);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, DecorationPrePlannerPayloadEnum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA478);
    v28 = DecorationPrePlannerPayloadEnum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v28 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000C80);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000450, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000C80);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000C80);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000C80);
    return sub_2403A97FC((uint64_t)v33, &qword_257000C80);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000C80);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA478);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_2404C6698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
  v6 = *(_QWORD *)(DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant - 8);
  v7 = MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v14 = *(_QWORD *)(DecorationPrePlannerPayloadEnum - 8);
  v15 = MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C88);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant;
  v25(&v36[-v23], 1, 1, DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFA478);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, DecorationPrePlannerPayloadEnum);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFA478);
    v28 = DecorationPrePlannerPayloadEnum;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v28 = DecorationPrePlannerPayloadEnum;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_2403A97FC((uint64_t)v24, &qword_257000C88);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_257000468, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_257000C88);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_257000C88);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_257000C88);
    return sub_2403A97FC((uint64_t)v33, &qword_257000C88);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_257000C88);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFA478);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayload.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t DecorationPrePlannerPayloadEnum;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFA478);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8) + 48))(v3, 1, DecorationPrePlannerPayloadEnum) != 1)
  {
    v5 = (char *)&loc_2404C6BA8 + 4 * byte_2408EBA9A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  return sub_2408E578C();
}

uint64_t sub_2404C6CAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedStringVariant);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA478);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8) + 48))(v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA478);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
    sub_2404FA028(&qword_2570003F0, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404C6E48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedTypedValueVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedTypedValueVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA478);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8) + 48))(v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA478);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
    sub_2404FA028(&qword_257000408, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404C6FE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA478);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8) + 48))(v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA478);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
    sub_2404FA028(&qword_257000420, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404C7188(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA478);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8) + 48))(v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA478);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
    sub_2404FA028(&qword_257000438, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404C7328(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA478);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8) + 48))(v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA478);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 4)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
    sub_2404FA028(&qword_257000450, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  __break(1u);
  return result;
}

uint64_t sub_2404C74C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant;
  uint64_t v6;
  char *v7;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFA478);
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8) + 48))(v4, 1, DecorationPrePlannerPayloadEnum) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFA478);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 5)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
    sub_2404FA028(&qword_257000468, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
  __break(1u);
  return result;
}

uint64_t TranscriptProtoQueryDecorationPrePlannerResultPayload.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, &qword_256FFEF50, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
}

uint64_t sub_2404C7688@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum, a1);
}

uint64_t sub_2404C7694@<X0>(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2404C76E4()
{
  return 0xD000000000000031;
}

uint64_t sub_2404C7700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2404C7740(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 20);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_2404C7780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayload.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C7794()
{
  return TranscriptProtoQueryDecorationPrePlannerResultPayload.traverse<A>(visitor:)();
}

uint64_t sub_2404C77A8()
{
  sub_2404FA028(&qword_257000530, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  return sub_2408E5828();
}

uint64_t sub_2404C77F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9758, (uint64_t)qword_256FFE5F8, a1);
}

uint64_t sub_2404C7814()
{
  sub_2404FA028(&qword_257000480, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  return sub_2408E599C();
}

uint64_t sub_2404C7854()
{
  sub_2404FA028(&qword_257000480, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload, (uint64_t)&protocol conformance descriptor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoTextQuery.protoMessageName.getter()
{
  return 0xD000000000000014;
}

uint64_t sub_2404C78C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE610);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE610);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "safetyMode";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "statementId";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "clientQueryId";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoTextQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9760, (uint64_t)qword_256FFE610, a1);
}

uint64_t TranscriptProtoTextQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_2408E593C();
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_2408E5888();
          goto LABEL_5;
        case 3:
          v12 = v11;
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoTextQuery, type metadata accessor for TranscriptProtoStatementID, &qword_256FFE9E8, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
          goto LABEL_5;
        case 4:
          type metadata accessor for TranscriptProtoTextQuery(0);
          v12 = v11;
          sub_2408E5930();
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoTextQuery.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = *(_QWORD *)(v3 + 8);
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    if (*(_BYTE *)(v3 + 16) != 1 || (result = sub_2408E59D8(), !v4))
    {
      result = sub_2404C7CFC(v3, a1, a2, a3);
      if (!v4)
      {
        sub_2404C7E70(v3, a1, a2, a3, type metadata accessor for TranscriptProtoTextQuery);
        type metadata accessor for TranscriptProtoTextQuery(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t sub_2404C7CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoTextQuery(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA300);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA300);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
  sub_2404FA028(&qword_256FFE9E8, type metadata accessor for TranscriptProtoStatementID, (uint64_t)&protocol conformance descriptor for TranscriptProtoStatementID);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoStatementID);
}

uint64_t sub_2404C7E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 28) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t TranscriptProtoTextQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoTextQuery, &qword_256FFEF58, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
}

uint64_t sub_2404C7F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v4 = a2 + *(int *)(a1 + 24);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (_QWORD *)(a2 + *(int *)(a1 + 28));
  *v6 = 0;
  v6[1] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0xE000000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

unint64_t sub_2404C7F78()
{
  return 0xD000000000000014;
}

uint64_t sub_2404C7F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2404C7FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 32);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_2404C8014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoTextQuery.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C8028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoTextQuery.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C803C()
{
  sub_2404FA028(&qword_257000528, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
  return sub_2408E5828();
}

uint64_t sub_2404C808C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9760, (uint64_t)qword_256FFE610, a1);
}

uint64_t sub_2404C80A8()
{
  sub_2404FA028(&qword_257000498, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
  return sub_2408E599C();
}

uint64_t sub_2404C80E8()
{
  sub_2404FA028(&qword_257000498, type metadata accessor for TranscriptProtoTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoTextQuery);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoExternalAgentTextQuery.protoMessageName.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_2404C8158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE628);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE628);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "query";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "queryRewriteMetadataEventId";
  *((_QWORD *)v11 + 1) = 27;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "queryRewriteMetadataInlined";
  *(_QWORD *)(v12 + 8) = 27;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoExternalAgentTextQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9768, (uint64_t)qword_256FFE628, a1);
}

uint64_t TranscriptProtoExternalAgentTextQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoExternalAgentTextQuery, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, &qword_256FFF168, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
          break;
        case 2:
          sub_2408E5930();
          break;
        case 1:
          sub_2408E593C();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t TranscriptProtoExternalAgentTextQuery.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;

  result = *v3;
  v9 = v3[1];
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v10 || (result = sub_2408E5A38(), !v4))
  {
    if (v3[3])
      result = sub_2408E5A38();
    if (!v4)
    {
      sub_2404C84F4((uint64_t)v3, a1, a2, a3);
      type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_2404C84F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA368);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA368);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_2404FA028(&qword_256FFF168, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t TranscriptProtoExternalAgentTextQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoExternalAgentTextQuery, &qword_256FFEF60, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
}

uint64_t sub_2404C8688@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v3;
  uint64_t v4;
  uint64_t result;

  a2[2] = 0;
  a2[3] = 0;
  v3 = (char *)a2 + *(int *)(a1 + 24);
  v4 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  return result;
}

unint64_t sub_2404C86F4()
{
  return 0xD000000000000021;
}

uint64_t sub_2404C8710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExternalAgentTextQuery.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C8724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExternalAgentTextQuery.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C8738()
{
  sub_2404FA028(&qword_257000520, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
  return sub_2408E5828();
}

uint64_t sub_2404C8788@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9768, (uint64_t)qword_256FFE628, a1);
}

uint64_t sub_2404C87A4()
{
  sub_2404FA028(&qword_2570004B0, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
  return sub_2408E599C();
}

uint64_t sub_2404C87E4()
{
  sub_2404FA028(&qword_2570004B0, type metadata accessor for TranscriptProtoExternalAgentTextQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentTextQuery);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoSpeechQuery.protoMessageName.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_2404C8854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE640);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE640);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "candidates";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "safetyMode";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "clientQueryId";
  *(_QWORD *)(v12 + 8) = 13;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoSpeechQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9770, (uint64_t)qword_256FFE640, a1);
}

uint64_t TranscriptProtoSpeechQuery.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v4 = v3;
        sub_2408E5888();
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
        sub_2404FA028(&qword_256FFE6D8, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
        v4 = v3;
        sub_2408E5960();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    v4 = v3;
    sub_2408E5930();
LABEL_5:
    v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoSpeechQuery.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (type metadata accessor for TranscriptProtoSpeechRequestCandidate(0),
        sub_2404FA028(&qword_256FFE6D8, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate), result = sub_2408E5A5C(), !v1))
  {
    if (*(_BYTE *)(v0 + 8) != 1 || (result = sub_2408E59D8(), !v1))
    {
      if (*(_QWORD *)(v0 + 24))
        result = sub_2408E5A38();
      if (!v1)
      {
        type metadata accessor for TranscriptProtoSpeechQuery(0);
        return sub_2408E578C();
      }
    }
  }
  return result;
}

uint64_t TranscriptProtoSpeechQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoSpeechQuery, &qword_256FFEF68, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
}

uint64_t sub_2404C8C68@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

unint64_t sub_2404C8CA4()
{
  return 0xD000000000000016;
}

uint64_t sub_2404C8CC0()
{
  return TranscriptProtoSpeechQuery.decodeMessage<A>(decoder:)();
}

uint64_t sub_2404C8CD4()
{
  return TranscriptProtoSpeechQuery.traverse<A>(visitor:)();
}

uint64_t sub_2404C8CE8()
{
  sub_2404FA028(&qword_257000518, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
  return sub_2408E5828();
}

uint64_t sub_2404C8D38@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9770, (uint64_t)qword_256FFE640, a1);
}

uint64_t sub_2404C8D54()
{
  sub_2404FA028(&qword_2570004C8, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
  return sub_2408E599C();
}

uint64_t sub_2404C8D94()
{
  sub_2404FA028(&qword_2570004C8, type metadata accessor for TranscriptProtoSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechQuery);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoExternalAgentSpeechQuery.protoMessageName.getter()
{
  return 0xD000000000000023;
}

uint64_t sub_2404C8E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_256FFE658);
  __swift_project_value_buffer(v0, (uint64_t)qword_256FFE658);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "candidates";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "queryRewriteMetadataEventId";
  *((_QWORD *)v11 + 1) = 27;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "queryRewriteMetadataInlined";
  *(_QWORD *)(v12 + 8) = 27;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static TranscriptProtoExternalAgentSpeechQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9778, (uint64_t)qword_256FFE658, a1);
}

uint64_t TranscriptProtoExternalAgentSpeechQuery.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while (1)
    {
      if ((v10 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v12 = v11;
        sub_2408E5930();
        goto LABEL_5;
      }
      if (result == 1)
      {
        type metadata accessor for TranscriptProtoSpeechRequestCandidate(0);
        sub_2404FA028(&qword_256FFE6D8, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate);
        v12 = v11;
        sub_2408E5960();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    v12 = v11;
    sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, &qword_256FFF168, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
LABEL_5:
    v11 = v12;
    goto LABEL_6;
  }
  return result;
}

uint64_t TranscriptProtoExternalAgentSpeechQuery.traverse<A>(visitor:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;

  v7 = result;
  if (!*(_QWORD *)(*v3 + 16)
    || (type metadata accessor for TranscriptProtoSpeechRequestCandidate(0),
        sub_2404FA028(&qword_256FFE6D8, type metadata accessor for TranscriptProtoSpeechRequestCandidate, (uint64_t)&protocol conformance descriptor for TranscriptProtoSpeechRequestCandidate), result = sub_2408E5A5C(), !v4))
  {
    if (v3[2])
      result = sub_2408E5A38();
    if (!v4)
    {
      sub_2404C9210((uint64_t)v3, v7, a2, a3);
      type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_2404C9210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA368);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA368);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_2404FA028(&qword_256FFF168, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentRequestRewriteMetadata);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t TranscriptProtoExternalAgentSpeechQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, &qword_256FFEF70, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
}

uint64_t sub_2404C93A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v3;
  uint64_t v4;
  uint64_t result;

  a2[1] = 0;
  a2[2] = 0;
  v3 = (char *)a2 + *(int *)(a1 + 24);
  v4 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_2404C9414()
{
  return 0xD000000000000023;
}

uint64_t sub_2404C9430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2404C9470(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_2404C94B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExternalAgentSpeechQuery.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2404C94C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TranscriptProtoExternalAgentSpeechQuery.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2404C94D8()
{
  sub_2404FA028(&qword_257000510, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
  return sub_2408E5828();
}

uint64_t sub_2404C9528@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9778, (uint64_t)qword_256FFE658, a1);
}

uint64_t sub_2404C9544()
{
  sub_2404FA028(&qword_2570004E0, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
  return sub_2408E599C();
}

uint64_t sub_2404C9584()
{
  sub_2404FA028(&qword_2570004E0, type metadata accessor for TranscriptProtoExternalAgentSpeechQuery, (uint64_t)&protocol conformance descriptor for TranscriptProtoExternalAgentSpeechQuery);
  return sub_2408E59A8();
}

unint64_t static TranscriptProtoContinuePlanning.protoMessageName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_2404C95F4(uint64_t a1)
{
  return sub_2404C9600(a1, qword_256FFE670);
}

uint64_t sub_2404C9600(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_2408E5A98();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_2408E5A8C();
}

uint64_t static TranscriptProtoContinuePlanning._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9780, (uint64_t)qword_256FFE670, a1);
}

uint64_t TranscriptProtoContinuePlanning.decodeMessage<A>(decoder:)()
{
  return sub_2404C9674();
}

uint64_t sub_2404C9674()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  do
    result = sub_2408E5858();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t TranscriptProtoContinuePlanning.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for TranscriptProtoContinuePlanning, &qword_256FFEF78, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
}

unint64_t sub_2404C96D4()
{
  return 0xD00000000000001BLL;
}

uint64_t _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0V13unknownFields21InternalSwiftProtobuf14UnknownStorageVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0V13unknownFields21InternalSwiftProtobuf14UnknownStorageVvs_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t sub_2404C9760()
{
  sub_2404FA028(&qword_257000508, type metadata accessor for TranscriptProtoContinuePlanning, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
  return sub_2408E5828();
}

uint64_t sub_2404C97B0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9780, (uint64_t)qword_256FFE670, a1);
}

uint64_t sub_2404C97CC()
{
  sub_2404FA028(&qword_2570004F8, type metadata accessor for TranscriptProtoContinuePlanning, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
  return sub_2408E599C();
}

uint64_t sub_2404C980C()
{
  sub_2408E6218();
  sub_2408E5CB4();
  return sub_2408E623C();
}

uint64_t sub_2404C9860()
{
  sub_2404FA028(&qword_2570004F8, type metadata accessor for TranscriptProtoContinuePlanning, (uint64_t)&protocol conformance descriptor for TranscriptProtoContinuePlanning);
  return sub_2408E59A8();
}

uint64_t sub_2404C98B0()
{
  sub_2408E6218();
  sub_2408E5CB4();
  return sub_2408E623C();
}

uint64_t sub_2404C9900(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v8 = sub_2408E57A4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - v13;
  if ((a3(*a1, *(_QWORD *)a2) & 1) != 0)
  {
    v15 = a4(0);
    v16 = (char *)a1 + *(int *)(v15 + 20);
    v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v17(v14, v16, v8);
    v17(v12, &a2[*(int *)(v15 + 20)], v8);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v18 = sub_2408E5CD8();
    v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v12, v8);
    v19(v14, v8);
  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t _s23LighthouseDataProcessor53TranscriptProtoSystemRequirementAuthenticationRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  unsigned __int8 *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (unsigned __int8 *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001160);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3B8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (unsigned __int8 *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA3B8);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA3B8);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA3B8);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA3B8);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA3B8);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, (uint64_t)v36, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
      v25 = _s23LighthouseDataProcessor053TranscriptProtoSystemRequirementAuthenticationRequestH5LevelV2eeoiySbAC_ACtFZ_0(v16, v24);
      sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA3B8);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA3B8);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA3B8);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA3B8);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA3B8);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257001160);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA3B8);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA3B8);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA3B8);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t sub_2404C9E04(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v6 = sub_2408E57A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v13 || (v14 = 0, (sub_2408E617C() & 1) != 0))
  {
    v15 = a3(0);
    v16 = (char *)a1 + *(int *)(v15 + 20);
    v17 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v17(v12, v16, v6);
    v17(v10, &a2[*(int *)(v15 + 20)], v6);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_2408E5CD8();
    v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v10, v6);
    v18(v12, v6);
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor48TranscriptProtoDynamicEnumerationEntityStatementV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a2;
  v3 = sub_2408E57A4();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v58 - v6;
  v67 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v58 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F48);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F50);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v58 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (uint64_t)&v58 - v14;
  v15 = type metadata accessor for TranscriptProtoStatementID(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v69 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_256FFA300);
  sub_2403A9210(v71, (uint64_t)v28, &qword_256FFA300);
  v31 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA300);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA300);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) != 1)
  {
    sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA300);
    if (v32(v31, 1, v15) != 1)
    {
      sub_2403A91CC(v31, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementID);
      v35 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v25, (uint64_t)v18);
      sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v33 = &qword_257000C50;
    v34 = (uint64_t)v21;
LABEL_14:
    sub_2403A97FC(v34, v33);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
  if (v32(v31, 1, v15) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
LABEL_8:
  v36 = type metadata accessor for TranscriptProtoDynamicEnumerationEntityStatement(0);
  v37 = v69;
  v38 = v66;
  sub_2403A9210(v69 + *(int *)(v36 + 20), v66, &qword_257000F50);
  v40 = v70;
  v39 = v71;
  sub_2403A9210(v71 + *(int *)(v36 + 20), v70, &qword_257000F50);
  v41 = v68;
  v42 = v68 + *(int *)(v64 + 48);
  sub_2403A9210(v38, v68, &qword_257000F50);
  sub_2403A9210(v40, v42, &qword_257000F50);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v44 = v67;
  if (v43(v41, 1, v67) == 1)
  {
    sub_2403A97FC(v40, &qword_257000F50);
    sub_2403A97FC(v38, &qword_257000F50);
    if (v43(v42, 1, v44) == 1)
    {
      sub_2403A97FC(v41, &qword_257000F50);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v41, v63, &qword_257000F50);
  if (v43(v42, 1, v44) == 1)
  {
    sub_2403A97FC(v70, &qword_257000F50);
    sub_2403A97FC(v38, &qword_257000F50);
    sub_240388AE4(v45, type metadata accessor for ContextProtoDynamicEnumerationEntity);
LABEL_13:
    v33 = &qword_257000F48;
    v34 = v41;
    goto LABEL_14;
  }
  v48 = v58;
  sub_2403A91CC(v42, v58, type metadata accessor for ContextProtoDynamicEnumerationEntity);
  v49 = static ContextProtoDynamicEnumerationEntity.== infix(_:_:)(v45, v48);
  sub_240388AE4(v48, type metadata accessor for ContextProtoDynamicEnumerationEntity);
  sub_2403A97FC(v70, &qword_257000F50);
  sub_2403A97FC(v38, &qword_257000F50);
  sub_240388AE4(v45, type metadata accessor for ContextProtoDynamicEnumerationEntity);
  sub_2403A97FC(v41, &qword_257000F50);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t sub_2404CA5BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v6 = sub_2408E57A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v13 || (v14 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16))
    {
      v15 = a3(0);
      v16 = a1 + *(int *)(v15 + 24);
      v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v17(v12, v16, v6);
      v17(v10, a2 + *(int *)(v15 + 24), v6);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_2408E5CD8();
      v18 = *(void (**)(char *, uint64_t))(v7 + 8);
      v18(v10, v6);
      v18(v12, v6);
    }
    else
    {
      v14 = 0;
    }
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor53TranscriptProtoQueryDecorationPrePlannerResultPayloadV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v8 = *(_QWORD *)(DecorationPrePlannerPayloadEnum - 8);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerPayloadEnum);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C58);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA478);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA478);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA478);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA478);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, DecorationPrePlannerPayloadEnum) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA478);
    if (v23(v22, 1, DecorationPrePlannerPayloadEnum) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
      _s23LighthouseDataProcessor51TranscriptProtoQueryDecorationPrePlannerPayloadEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA478);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA478);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA478);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA478);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA478);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000C58);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA478);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA478);
  if (v23(v22, 1, DecorationPrePlannerPayloadEnum) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA478);
LABEL_8:
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(DecorationPrePlannerResultPayload + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(DecorationPrePlannerResultPayload + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor46TranscriptProtoQueryDecorationPrePlannerResultV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t DecorationPrePlannerResult;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  _QWORD *v36;
  _QWORD *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char DecorationPrePlannerResultPayloadV2eeoiySbAC_ACtFZ_0;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;

  v73 = a1;
  v74 = a2;
  v2 = sub_2408E57A4();
  v63 = *(_QWORD *)(v2 - 8);
  v64 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v62 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v61 = (char *)&v59 - v5;
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  v67 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
  MEMORY[0x24BDAC7A8](DecorationPrePlannerResultPayload);
  v60 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C90);
  MEMORY[0x24BDAC7A8](v66);
  v71 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v65 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v68 = (uint64_t)&v59 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v69 = (uint64_t)&v59 - v13;
  v14 = type metadata accessor for TranscriptProtoStatementID(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v59 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v59 - v28;
  DecorationPrePlannerResult = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResult(0);
  sub_2403A9210((uint64_t)v73 + *(int *)(DecorationPrePlannerResult + 20), (uint64_t)v29, &qword_256FFA300);
  v72 = DecorationPrePlannerResult;
  sub_2403A9210((uint64_t)v74 + *(int *)(DecorationPrePlannerResult + 20), (uint64_t)v27, &qword_256FFA300);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_2403A9210((uint64_t)v29, (uint64_t)v20, &qword_256FFA300);
  sub_2403A9210((uint64_t)v27, v31, &qword_256FFA300);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (v32((uint64_t)v20, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA300);
    if (v32(v31, 1, v14) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
      goto LABEL_8;
    }
LABEL_6:
    v33 = &qword_257000C50;
    v34 = (uint64_t)v20;
LABEL_17:
    sub_2403A97FC(v34, v33);
    goto LABEL_18;
  }
  sub_2403A9210((uint64_t)v20, (uint64_t)v24, &qword_256FFA300);
  if (v32(v31, 1, v14) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v29, &qword_256FFA300);
    sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  sub_2403A91CC(v31, (uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
  v35 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v24, (uint64_t)v17);
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v27, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v29, &qword_256FFA300);
  sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA300);
  if ((v35 & 1) == 0)
  {
LABEL_18:
    v38 = 0;
    return v38 & 1;
  }
LABEL_8:
  v37 = v73;
  v36 = v74;
  if (*v73 == *v74 && v73[1] == v74[1] || (v38 = 0, (sub_2408E617C() & 1) != 0))
  {
    v39 = v72;
    v40 = v69;
    sub_2403A9210((uint64_t)v37 + *(int *)(v72 + 24), v69, &qword_256FFA480);
    v41 = v68;
    sub_2403A9210((uint64_t)v36 + *(int *)(v39 + 24), v68, &qword_256FFA480);
    v42 = v71;
    v43 = v71 + *(int *)(v66 + 48);
    sub_2403A9210(v40, v71, &qword_256FFA480);
    sub_2403A9210(v41, v43, &qword_256FFA480);
    v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
    v45 = DecorationPrePlannerResultPayload;
    if (v44(v42, 1, DecorationPrePlannerResultPayload) == 1)
    {
      sub_2403A97FC(v41, &qword_256FFA480);
      sub_2403A97FC(v40, &qword_256FFA480);
      if (v44(v43, 1, v45) == 1)
      {
        sub_2403A97FC(v42, &qword_256FFA480);
LABEL_21:
        v50 = v72;
        v51 = (char *)v37 + *(int *)(v72 + 28);
        v53 = v63;
        v52 = v64;
        v54 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        v55 = v61;
        v54(v61, v51, v64);
        v56 = (char *)v36 + *(int *)(v50 + 28);
        v57 = v62;
        v54(v62, v56, v52);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v38 = sub_2408E5CD8();
        v58 = *(void (**)(char *, uint64_t))(v53 + 8);
        v58(v57, v52);
        v58(v55, v52);
        return v38 & 1;
      }
    }
    else
    {
      v46 = v65;
      sub_2403A9210(v42, v65, &qword_256FFA480);
      if (v44(v43, 1, v45) != 1)
      {
        v48 = v60;
        sub_2403A91CC(v43, v60, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
        DecorationPrePlannerResultPayloadV2eeoiySbAC_ACtFZ_0 = _s23LighthouseDataProcessor53TranscriptProtoQueryDecorationPrePlannerResultPayloadV2eeoiySbAC_ACtFZ_0(v46, v48);
        sub_240388AE4(v48, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
        sub_2403A97FC(v41, &qword_256FFA480);
        sub_2403A97FC(v40, &qword_256FFA480);
        sub_240388AE4(v46, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
        sub_2403A97FC(v42, &qword_256FFA480);
        if ((DecorationPrePlannerResultPayloadV2eeoiySbAC_ACtFZ_0 & 1) != 0)
          goto LABEL_21;
        goto LABEL_18;
      }
      sub_2403A97FC(v41, &qword_256FFA480);
      sub_2403A97FC(v40, &qword_256FFA480);
      sub_240388AE4(v46, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
    }
    v33 = &qword_257000C90;
    v34 = v42;
    goto LABEL_17;
  }
  return v38 & 1;
}

uint64_t sub_2404CB190(_QWORD *a1, char *a2)
{
  return sub_2404CB984(a1, a2, (char *)type metadata accessor for TranscriptProtoASTExprUpdateParametersVariant, sub_24088EA08);
}

uint64_t _s23LighthouseDataProcessor42TranscriptProtoSystemPromptResolutionInputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F78);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA338);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA338);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA338);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA338);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA338);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA338);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
      _s23LighthouseDataProcessor46TranscriptProtoSystemPromptResolutionInputEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA338);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA338);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA338);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA338);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA338);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionInputEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000F78);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA338);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA338);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA338);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor42TranscriptProtoParameterCandidatesNotFoundV2eeoiySbAC_ACtFZ_0(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  char *v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;

  v4 = sub_2408E57A4();
  v44 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v40 - v7;
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v41 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v40 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v40 - v21;
  v23 = *a1;
  v24 = a1[1];
  v25 = *(_QWORD *)a2;
  v26 = *((_QWORD *)a2 + 1);
  v45 = a2;
  if (v23 == v25 && v24 == v26 || (v27 = 0, (sub_2408E617C() & 1) != 0))
  {
    v40 = v4;
    v28 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
    sub_2403A9210((uint64_t)a1 + *(int *)(v28 + 20), (uint64_t)v22, &qword_256FFA3A8);
    sub_2403A9210((uint64_t)&v45[*(int *)(v28 + 20)], (uint64_t)v20, &qword_256FFA3A8);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA3A8);
    sub_2403A9210((uint64_t)v20, v29, &qword_256FFA3A8);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
      if (v30(v29, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
LABEL_11:
        v33 = v44;
        v34 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
        v35 = v42;
        v36 = v40;
        v34(v42, (char *)a1 + *(int *)(v28 + 24), v40);
        v37 = v43;
        v34(v43, &v45[*(int *)(v28 + 24)], v36);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v27 = sub_2408E5CD8();
        v38 = *(void (**)(char *, uint64_t))(v33 + 8);
        v38(v37, v36);
        v38(v35, v36);
        return v27 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA3A8);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v41;
        sub_2403A91CC(v29, (uint64_t)v41, type metadata accessor for ToolKitProtoTypedValue);
        v32 = static ToolKitProtoTypedValue.== infix(_:_:)(v17, v31);
        sub_240388AE4((uint64_t)v31, type metadata accessor for ToolKitProtoTypedValue);
        sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
        sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue);
        sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
        if ((v32 & 1) != 0)
          goto LABEL_11;
LABEL_12:
        v27 = 0;
        return v27 & 1;
      }
      sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue);
    }
    sub_2403A97FC((uint64_t)v13, &qword_257000CA8);
    goto LABEL_12;
  }
  return v27 & 1;
}

uint64_t sub_2404CB970(_QWORD *a1, char *a2)
{
  return sub_2404CB984(a1, a2, (char *)type metadata accessor for TranscriptProtoUpdateParametersExpression, sub_2408BAE14);
}

uint64_t sub_2404CB984(_QWORD *a1, char *a2, char *a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char v33;
  _QWORD *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  char v42;
  void (*v43)(char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD, _QWORD);
  _QWORD *v51;
  char *v52;

  v50 = a4;
  v52 = a3;
  v6 = sub_2408E57A4();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)&v45 - v9;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v49 = (uint64_t)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v45 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v45 - v23;
  v25 = ((uint64_t (*)(_QWORD))v52)(0);
  v26 = *(int *)(v25 + 20);
  v51 = a1;
  v27 = (uint64_t)a1 + v26;
  v28 = v25;
  sub_2403A9210(v27, (uint64_t)v24, &qword_256FFA300);
  v29 = *(int *)(v28 + 20);
  v52 = a2;
  sub_2403A9210((uint64_t)&a2[v29], (uint64_t)v22, &qword_256FFA300);
  v30 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_2403A9210((uint64_t)v24, (uint64_t)v15, &qword_256FFA300);
  sub_2403A9210((uint64_t)v22, v30, &qword_256FFA300);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v31((uint64_t)v15, 1, v10) == 1)
  {
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
    if (v31(v30, 1, v10) == 1)
    {
      sub_2403A97FC((uint64_t)v15, &qword_256FFA300);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2403A9210((uint64_t)v15, (uint64_t)v19, &qword_256FFA300);
  if (v31(v30, 1, v10) == 1)
  {
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
    sub_240388AE4((uint64_t)v19, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    sub_2403A97FC((uint64_t)v15, &qword_257000C50);
LABEL_10:
    v42 = 0;
    return v42 & 1;
  }
  v32 = v49;
  sub_2403A91CC(v30, v49, type metadata accessor for TranscriptProtoStatementID);
  v33 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v19, v32);
  sub_240388AE4(v32, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
  sub_240388AE4((uint64_t)v19, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v15, &qword_256FFA300);
  if ((v33 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v34 = v51;
  v35 = v52;
  if ((v50(*v51, *(_QWORD *)v52) & 1) == 0)
    goto LABEL_10;
  v36 = (char *)v34 + *(int *)(v28 + 24);
  v38 = v47;
  v37 = v48;
  v39 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v40 = v45;
  v39(v45, v36, v48);
  v41 = v46;
  v39(v46, &v35[*(int *)(v28 + 24)], v37);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v42 = sub_2408E5CD8();
  v43 = *(void (**)(char *, uint64_t))(v38 + 8);
  v43(v41, v37);
  v43(v40, v37);
  return v42 & 1;
}

uint64_t _s23LighthouseDataProcessor41TranscriptProtoInterpretedStatementResultV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  char v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  int *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t, uint64_t);
  char *v102;
  uint64_t v103;
  char *v104;
  void (*v105)(char *, uint64_t);
  int *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;

  v128 = a2;
  v3 = sub_2408E57A4();
  v109 = *(_QWORD *)(v3 - 8);
  v110 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v108 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v107 = (char *)&v106 - v6;
  v124 = type metadata accessor for TranscriptProtoStatementID(0);
  v122 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v116 = (uint64_t)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  v8 = MEMORY[0x24BDAC7A8](v126);
  v113 = (uint64_t)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v117 = (uint64_t)&v106 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v125 = (uint64_t)&v106 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v111 = (uint64_t)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v112 = (uint64_t)&v106 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v114 = (uint64_t)&v106 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v115 = (uint64_t)&v106 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v119 = (uint64_t)&v106 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v123 = (char *)&v106 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v118 = (uint64_t)&v106 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v120 = (uint64_t)&v106 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v121 = (uint64_t)&v106 - v30;
  v31 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v106 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CD8);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v106 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v106 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)&v106 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v106 - v45;
  v127 = a1;
  sub_2403A9210(a1, (uint64_t)&v106 - v45, &qword_256FFA3E8);
  sub_2403A9210(v128, (uint64_t)v44, &qword_256FFA3E8);
  v47 = (uint64_t)&v37[*(int *)(v35 + 48)];
  sub_2403A9210((uint64_t)v46, (uint64_t)v37, &qword_256FFA3E8);
  sub_2403A9210((uint64_t)v44, v47, &qword_256FFA3E8);
  v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  if (v48((uint64_t)v37, 1, v31) == 1)
  {
    sub_2403A97FC((uint64_t)v44, &qword_256FFA3E8);
    sub_2403A97FC((uint64_t)v46, &qword_256FFA3E8);
    if (v48(v47, 1, v31) == 1)
    {
      sub_2403A97FC((uint64_t)v37, &qword_256FFA3E8);
      goto LABEL_8;
    }
LABEL_6:
    v49 = &qword_257000CD8;
    v50 = (uint64_t)v37;
LABEL_21:
    sub_2403A97FC(v50, v49);
    goto LABEL_22;
  }
  sub_2403A9210((uint64_t)v37, (uint64_t)v41, &qword_256FFA3E8);
  if (v48(v47, 1, v31) == 1)
  {
    sub_2403A97FC((uint64_t)v44, &qword_256FFA3E8);
    sub_2403A97FC((uint64_t)v46, &qword_256FFA3E8);
    sub_240388AE4((uint64_t)v41, type metadata accessor for TranscriptProtoStatementOutcome);
    goto LABEL_6;
  }
  sub_2403A91CC(v47, (uint64_t)v34, type metadata accessor for TranscriptProtoStatementOutcome);
  v51 = _s23LighthouseDataProcessor31TranscriptProtoStatementOutcomeV2eeoiySbAC_ACtFZ_0((uint64_t)v41, (uint64_t)v34);
  sub_240388AE4((uint64_t)v34, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2403A97FC((uint64_t)v44, &qword_256FFA3E8);
  sub_2403A97FC((uint64_t)v46, &qword_256FFA3E8);
  sub_240388AE4((uint64_t)v41, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2403A97FC((uint64_t)v37, &qword_256FFA3E8);
  if ((v51 & 1) == 0)
    goto LABEL_22;
LABEL_8:
  v52 = type metadata accessor for TranscriptProtoInterpretedStatementResult(0);
  v53 = v121;
  sub_2403A9210(v127 + *(int *)(v52 + 20), v121, &qword_256FFA300);
  v106 = (int *)v52;
  v54 = v128;
  v55 = v120;
  sub_2403A9210(v128 + *(int *)(v52 + 20), v120, &qword_256FFA300);
  v56 = v125;
  v57 = v125 + *(int *)(v126 + 48);
  sub_2403A9210(v53, v125, &qword_256FFA300);
  sub_2403A9210(v55, v57, &qword_256FFA300);
  v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
  v59 = v124;
  if (v58(v56, 1, v124) == 1)
  {
    sub_2403A97FC(v55, &qword_256FFA300);
    sub_2403A97FC(v53, &qword_256FFA300);
    v60 = v58(v57, 1, v59);
    v61 = (uint64_t)v123;
    if (v60 == 1)
    {
      sub_2403A97FC(v56, &qword_256FFA300);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  v62 = v118;
  sub_2403A9210(v56, v118, &qword_256FFA300);
  v63 = v58(v57, 1, v59);
  v61 = (uint64_t)v123;
  if (v63 == 1)
  {
    sub_2403A97FC(v55, &qword_256FFA300);
    sub_2403A97FC(v53, &qword_256FFA300);
    sub_240388AE4(v62, type metadata accessor for TranscriptProtoStatementID);
LABEL_13:
    v49 = &qword_257000C50;
    v50 = v56;
    goto LABEL_21;
  }
  v64 = v116;
  sub_2403A91CC(v57, v116, type metadata accessor for TranscriptProtoStatementID);
  v65 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v62, v64);
  sub_240388AE4(v64, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v55, &qword_256FFA300);
  sub_2403A97FC(v53, &qword_256FFA300);
  sub_240388AE4(v62, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v125, &qword_256FFA300);
  if ((v65 & 1) == 0)
  {
LABEL_22:
    v72 = 0;
    return v72 & 1;
  }
LABEL_15:
  v66 = v106;
  sub_2403A9210(v127 + v106[6], v61, &qword_256FFA300);
  v67 = v54 + v66[6];
  v68 = v119;
  sub_2403A9210(v67, v119, &qword_256FFA300);
  v69 = v117;
  v70 = v117 + *(int *)(v126 + 48);
  sub_2403A9210(v61, v117, &qword_256FFA300);
  sub_2403A9210(v68, v70, &qword_256FFA300);
  if (v58(v69, 1, v59) == 1)
  {
    sub_2403A97FC(v68, &qword_256FFA300);
    sub_2403A97FC(v61, &qword_256FFA300);
    if (v58(v70, 1, v59) == 1)
    {
      sub_2403A97FC(v69, &qword_256FFA300);
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  v71 = v115;
  sub_2403A9210(v69, v115, &qword_256FFA300);
  if (v58(v70, 1, v59) == 1)
  {
    sub_2403A97FC(v119, &qword_256FFA300);
    sub_2403A97FC(v61, &qword_256FFA300);
    sub_240388AE4(v71, type metadata accessor for TranscriptProtoStatementID);
LABEL_20:
    v49 = &qword_257000C50;
    v50 = v69;
    goto LABEL_21;
  }
  v74 = v116;
  sub_2403A91CC(v70, v116, type metadata accessor for TranscriptProtoStatementID);
  v75 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v71, v74);
  sub_240388AE4(v74, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v119, &qword_256FFA300);
  sub_2403A97FC(v61, &qword_256FFA300);
  sub_240388AE4(v71, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v69, &qword_256FFA300);
  if ((v75 & 1) == 0)
    goto LABEL_22;
LABEL_25:
  v76 = v106[7];
  v77 = v128;
  v78 = (_QWORD *)(v127 + v76);
  v79 = *(_QWORD *)(v127 + v76 + 8);
  v80 = (_QWORD *)(v128 + v76);
  v81 = v80[1];
  if (v79)
  {
    if (!v81)
      goto LABEL_22;
    v82 = v114;
    if (*v78 != *v80 || v79 != v81)
    {
      v72 = 0;
      if ((sub_2408E617C() & 1) == 0)
        return v72 & 1;
    }
  }
  else
  {
    v82 = v114;
    if (v81)
      goto LABEL_22;
  }
  v83 = v106[8];
  v84 = (_QWORD *)(v127 + v83);
  v85 = *(_QWORD *)(v127 + v83 + 8);
  v86 = (_QWORD *)(v77 + v83);
  v87 = v86[1];
  if (!v85)
  {
    if (v87)
      goto LABEL_22;
LABEL_39:
    v88 = v106;
    sub_2403A9210(v127 + v106[9], v82, &qword_256FFA300);
    v89 = v112;
    sub_2403A9210(v77 + v88[9], v112, &qword_256FFA300);
    v90 = v113;
    v91 = v113 + *(int *)(v126 + 48);
    sub_2403A9210(v82, v113, &qword_256FFA300);
    v92 = v90;
    sub_2403A9210(v89, v91, &qword_256FFA300);
    if (v58(v90, 1, v59) == 1)
    {
      sub_2403A97FC(v89, &qword_256FFA300);
      v92 = v113;
      sub_2403A97FC(v82, &qword_256FFA300);
      if (v58(v91, 1, v59) == 1)
      {
        sub_2403A97FC(v92, &qword_256FFA300);
LABEL_46:
        v98 = v106;
        v100 = v109;
        v99 = v110;
        v101 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 16);
        v102 = v107;
        v101(v107, v127 + v106[10], v110);
        v103 = v77 + v98[10];
        v104 = v108;
        v101(v108, v103, v99);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v72 = sub_2408E5CD8();
        v105 = *(void (**)(char *, uint64_t))(v100 + 8);
        v105(v104, v99);
        v105(v102, v99);
        return v72 & 1;
      }
    }
    else
    {
      v93 = v90;
      v94 = v111;
      sub_2403A9210(v93, v111, &qword_256FFA300);
      if (v58(v91, 1, v59) != 1)
      {
        v95 = v94;
        v96 = v116;
        sub_2403A91CC(v91, v116, type metadata accessor for TranscriptProtoStatementID);
        v97 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v95, v96);
        sub_240388AE4(v96, type metadata accessor for TranscriptProtoStatementID);
        sub_2403A97FC(v112, &qword_256FFA300);
        sub_2403A97FC(v114, &qword_256FFA300);
        sub_240388AE4(v95, type metadata accessor for TranscriptProtoStatementID);
        sub_2403A97FC(v92, &qword_256FFA300);
        if ((v97 & 1) != 0)
          goto LABEL_46;
        goto LABEL_22;
      }
      sub_2403A97FC(v112, &qword_256FFA300);
      sub_2403A97FC(v114, &qword_256FFA300);
      sub_240388AE4(v94, type metadata accessor for TranscriptProtoStatementID);
    }
    v49 = &qword_257000C50;
    v50 = v92;
    goto LABEL_21;
  }
  if (!v87)
    goto LABEL_22;
  if (*v84 == *v86 && v85 == v87)
    goto LABEL_39;
  v72 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_39;
  return v72 & 1;
}

uint64_t _s23LighthouseDataProcessor39TranscriptProtoSystemRequirementMessageV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001168);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA3C0);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA3C0);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA3C0);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA3C0);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA3C0);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
      _s23LighthouseDataProcessor43TranscriptProtoSystemRequirementMessageEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA3C0);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA3C0);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA3C0);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA3C0);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA3C0);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSystemRequirementMessageEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257001168);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA3C0);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA3C0);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA3C0);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor39TranscriptProtoExternalAgentSpeechQueryV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t *v62;

  v62 = a2;
  v3 = sub_2408E57A4();
  v59 = *(_QWORD *)(v3 - 8);
  v60 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v58 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v61 = (char *)&v53 - v6;
  v7 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C38);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v53 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v53 - v21;
  v23 = a1;
  v24 = *a1;
  v25 = v62;
  if ((sub_2408BB6B4(v24, *v62) & 1) == 0)
    goto LABEL_24;
  v56 = v13;
  v57 = v20;
  v54 = v10;
  v55 = v17;
  v26 = v23[2];
  v27 = v25[2];
  v28 = v23;
  if (!v26)
  {
    v30 = v7;
    v31 = (uint64_t)v22;
    v29 = (uint64_t)v57;
    v32 = v8;
    if (v27)
      goto LABEL_24;
    goto LABEL_9;
  }
  v29 = (uint64_t)v57;
  if (!v27)
    goto LABEL_24;
  v30 = v7;
  v31 = (uint64_t)v22;
  v32 = v8;
  if (v28[1] == v25[1] && v26 == v27 || (v33 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_9:
    v34 = type metadata accessor for TranscriptProtoExternalAgentSpeechQuery(0);
    sub_2403A9210((uint64_t)v28 + *(int *)(v34 + 24), v31, &qword_256FFA368);
    v53 = v34;
    sub_2403A9210((uint64_t)v25 + *(int *)(v34 + 24), v29, &qword_256FFA368);
    v35 = (uint64_t)v56;
    v36 = (uint64_t)&v56[*(int *)(v11 + 48)];
    sub_2403A9210(v31, (uint64_t)v56, &qword_256FFA368);
    sub_2403A9210(v29, v36, &qword_256FFA368);
    v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
    if (v37(v35, 1, v30) == 1)
    {
      sub_2403A97FC(v29, &qword_256FFA368);
      sub_2403A97FC(v31, &qword_256FFA368);
      v38 = v37(v36, 1, v30);
      v39 = v61;
      if (v38 == 1)
      {
        sub_2403A97FC(v35, &qword_256FFA368);
LABEL_12:
        v40 = v53;
        v42 = v59;
        v41 = v60;
        v43 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
        v43(v39, (char *)v28 + *(int *)(v53 + 28), v60);
        v44 = v58;
        v43(v58, (char *)v25 + *(int *)(v40 + 28), v41);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v33 = sub_2408E5CD8();
        v45 = *(void (**)(char *, uint64_t))(v42 + 8);
        v45(v44, v41);
        v45(v39, v41);
        return v33 & 1;
      }
      goto LABEL_15;
    }
    v46 = (uint64_t)v55;
    sub_2403A9210(v35, (uint64_t)v55, &qword_256FFA368);
    if (v37(v36, 1, v30) == 1)
    {
      sub_2403A97FC(v29, &qword_256FFA368);
      sub_2403A97FC(v31, &qword_256FFA368);
      sub_240388AE4(v46, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
LABEL_15:
      v47 = &qword_257000C38;
      v48 = v35;
LABEL_23:
      sub_2403A97FC(v48, v47);
      goto LABEL_24;
    }
    v49 = (uint64_t)v54;
    sub_2403A91CC(v36, (uint64_t)v54, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    if ((*(_QWORD *)v46 != *(_QWORD *)v49 || *(_QWORD *)(v46 + 8) != *(_QWORD *)(v49 + 8))
      && (sub_2408E617C() & 1) == 0
      || (sub_2408BAD50(*(_QWORD **)(v46 + 16), *(_QWORD **)(v49 + 16)) & 1) == 0)
    {
      sub_240388AE4(v49, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      sub_2403A97FC((uint64_t)v57, &qword_256FFA368);
      sub_2403A97FC(v31, &qword_256FFA368);
      sub_240388AE4(v46, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
      v48 = v35;
      v47 = &qword_256FFA368;
      goto LABEL_23;
    }
    v50 = v46;
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v51 = sub_2408E5CD8();
    sub_240388AE4(v49, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_2403A97FC((uint64_t)v57, &qword_256FFA368);
    sub_2403A97FC(v31, &qword_256FFA368);
    sub_240388AE4(v50, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    v39 = v61;
    sub_2403A97FC(v35, &qword_256FFA368);
    if ((v51 & 1) != 0)
      goto LABEL_12;
LABEL_24:
    v33 = 0;
  }
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor39TranscriptProtoASTFlatExprUpdateVariantV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t updated;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t *v72;

  v72 = a2;
  v3 = sub_2408E57A4();
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v61 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v60 = (char *)&v59 - v6;
  v7 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v70 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v68 = (uint64_t)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v59 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v64 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v66 = (uint64_t)&v59 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v69 = (uint64_t)&v59 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v59 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v59 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v59 - v28;
  updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateVariant(0);
  v31 = *(int *)(updated + 24);
  v71 = a1;
  sub_2403A9210((uint64_t)a1 + v31, (uint64_t)v29, &qword_257000DF8);
  v67 = updated;
  sub_2403A9210((uint64_t)v72 + *(int *)(updated + 24), (uint64_t)v27, &qword_257000DF8);
  v65 = v10;
  v32 = *(int *)(v10 + 48);
  v33 = v7;
  v34 = (uint64_t)&v14[v32];
  sub_2403A9210((uint64_t)v29, (uint64_t)v14, &qword_257000DF8);
  sub_2403A9210((uint64_t)v27, v34, &qword_257000DF8);
  v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v35((uint64_t)v14, 1, v33) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_257000DF8);
    sub_2403A97FC((uint64_t)v29, &qword_257000DF8);
    if (v35(v34, 1, v33) == 1)
    {
      sub_2403A97FC((uint64_t)v14, &qword_257000DF8);
      goto LABEL_9;
    }
LABEL_6:
    v36 = (uint64_t)v14;
LABEL_7:
    sub_2403A97FC(v36, &qword_257000DF0);
    goto LABEL_18;
  }
  sub_2403A9210((uint64_t)v14, (uint64_t)v24, &qword_257000DF8);
  if (v35(v34, 1, v33) == 1)
  {
    sub_2403A97FC((uint64_t)v27, &qword_257000DF8);
    sub_2403A97FC((uint64_t)v29, &qword_257000DF8);
    sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatValue);
    goto LABEL_6;
  }
  v37 = v70;
  sub_2403A91CC(v34, v70, type metadata accessor for TranscriptProtoASTFlatValue);
  v38 = _s23LighthouseDataProcessor27TranscriptProtoASTFlatValueV2eeoiySbAC_ACtFZ_0((uint64_t)v24, v37);
  sub_240388AE4(v37, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2403A97FC((uint64_t)v27, &qword_257000DF8);
  sub_2403A97FC((uint64_t)v29, &qword_257000DF8);
  sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2403A97FC((uint64_t)v14, &qword_257000DF8);
  if ((v38 & 1) == 0)
    goto LABEL_18;
LABEL_9:
  v39 = v71;
  v40 = v72;
  if ((sub_2408BBB4C(*v71, *v72) & 1) == 0)
    goto LABEL_18;
  v41 = v67;
  v42 = v69;
  sub_2403A9210((uint64_t)v39 + *(int *)(v67 + 28), v69, &qword_257000DF8);
  v43 = v66;
  sub_2403A9210((uint64_t)v40 + *(int *)(v41 + 28), v66, &qword_257000DF8);
  v44 = v68;
  v45 = v68 + *(int *)(v65 + 48);
  sub_2403A9210(v42, v68, &qword_257000DF8);
  sub_2403A9210(v43, v45, &qword_257000DF8);
  if (v35(v44, 1, v33) != 1)
  {
    v46 = v64;
    sub_2403A9210(v44, v64, &qword_257000DF8);
    if (v35(v45, 1, v33) != 1)
    {
      v47 = v70;
      sub_2403A91CC(v45, v70, type metadata accessor for TranscriptProtoASTFlatValue);
      v48 = _s23LighthouseDataProcessor27TranscriptProtoASTFlatValueV2eeoiySbAC_ACtFZ_0(v46, v47);
      sub_240388AE4(v47, type metadata accessor for TranscriptProtoASTFlatValue);
      sub_2403A97FC(v43, &qword_257000DF8);
      sub_2403A97FC(v69, &qword_257000DF8);
      sub_240388AE4(v46, type metadata accessor for TranscriptProtoASTFlatValue);
      sub_2403A97FC(v44, &qword_257000DF8);
      if ((v48 & 1) == 0)
        goto LABEL_18;
      goto LABEL_17;
    }
    sub_2403A97FC(v43, &qword_257000DF8);
    sub_2403A97FC(v69, &qword_257000DF8);
    sub_240388AE4(v46, type metadata accessor for TranscriptProtoASTFlatValue);
    goto LABEL_15;
  }
  sub_2403A97FC(v43, &qword_257000DF8);
  sub_2403A97FC(v42, &qword_257000DF8);
  if (v35(v45, 1, v33) != 1)
  {
LABEL_15:
    v36 = v44;
    goto LABEL_7;
  }
  sub_2403A97FC(v44, &qword_257000DF8);
LABEL_17:
  if (*((unsigned __int8 *)v39 + 8) == *((unsigned __int8 *)v40 + 8))
  {
    v51 = (char *)v39 + *(int *)(v41 + 32);
    v53 = v62;
    v52 = v63;
    v54 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
    v55 = v60;
    v54(v60, v51, v63);
    v56 = (char *)v40 + *(int *)(v41 + 32);
    v57 = v61;
    v54(v61, v56, v52);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v49 = sub_2408E5CD8();
    v58 = *(void (**)(char *, uint64_t))(v53 + 8);
    v58(v57, v52);
    v58(v55, v52);
    return v49 & 1;
  }
LABEL_18:
  v49 = 0;
  return v49 & 1;
}

uint64_t sub_2404CD868(uint64_t a1, uint64_t a2)
{
  return sub_2404D488C(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprSearchVariant);
}

uint64_t _s23LighthouseDataProcessor39TranscriptProtoASTFlatExprPrefixVariantV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  char v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unsigned __int8 *, uint64_t);
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_2408E57A4();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - v8;
  v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF0);
  MEMORY[0x24BDAC7A8](v46);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v41 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v41 - v21;
  if (*a1 != *a2)
    goto LABEL_8;
  v23 = a1;
  v24 = a2;
  v25 = v20;
  v41 = v12;
  v42 = v9;
  v43 = v7;
  v26 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
  v27 = v23;
  sub_2403A9210((uint64_t)&v23[*(int *)(v26 + 20)], (uint64_t)v22, &qword_257000DF8);
  v28 = v24;
  sub_2403A9210((uint64_t)&v24[*(int *)(v26 + 20)], (uint64_t)v19, &qword_257000DF8);
  v29 = (uint64_t)&v14[*(int *)(v46 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v14, &qword_257000DF8);
  sub_2403A9210((uint64_t)v19, v29, &qword_257000DF8);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  if (v30((uint64_t)v14, 1, v48) == 1)
  {
    sub_2403A97FC((uint64_t)v19, &qword_257000DF8);
    sub_2403A97FC((uint64_t)v22, &qword_257000DF8);
    if (v30(v29, 1, v48) == 1)
    {
      sub_2403A97FC((uint64_t)v14, &qword_257000DF8);
LABEL_11:
      v36 = v44;
      v35 = v45;
      v37 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v44 + 16);
      v38 = v42;
      v37(v42, &v27[*(int *)(v26 + 24)], v45);
      v39 = v43;
      v37(v43, &v28[*(int *)(v26 + 24)], v35);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v31 = sub_2408E5CD8();
      v40 = *(void (**)(char *, uint64_t))(v36 + 8);
      v40(v39, v35);
      v40(v38, v35);
      return v31 & 1;
    }
    goto LABEL_7;
  }
  sub_2403A9210((uint64_t)v14, v25, &qword_257000DF8);
  if (v30(v29, 1, v48) == 1)
  {
    sub_2403A97FC((uint64_t)v19, &qword_257000DF8);
    sub_2403A97FC((uint64_t)v22, &qword_257000DF8);
    sub_240388AE4(v25, type metadata accessor for TranscriptProtoASTFlatValue);
LABEL_7:
    sub_2403A97FC((uint64_t)v14, &qword_257000DF0);
    goto LABEL_8;
  }
  v33 = (uint64_t)v41;
  sub_2403A91CC(v29, (uint64_t)v41, type metadata accessor for TranscriptProtoASTFlatValue);
  v34 = _s23LighthouseDataProcessor27TranscriptProtoASTFlatValueV2eeoiySbAC_ACtFZ_0(v25, v33);
  sub_240388AE4(v33, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2403A97FC((uint64_t)v19, &qword_257000DF8);
  sub_2403A97FC((uint64_t)v22, &qword_257000DF8);
  sub_240388AE4(v25, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2403A97FC((uint64_t)v14, &qword_257000DF8);
  if ((v34 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v31 = 0;
  return v31 & 1;
}

uint64_t sub_2404CDC64(_QWORD *a1, char *a2)
{
  return sub_2404DD4D4(a1, a2, (char *)type metadata accessor for TranscriptProtoUnresolvedParameterValue, sub_2408BAAE8);
}

uint64_t _s23LighthouseDataProcessor38TranscriptProtoShimParameterResolutionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoShimParameterResolutionEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011E0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFE810);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFE810);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFE810);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFE810);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFE810);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFE810);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      v25 = _s23LighthouseDataProcessor42TranscriptProtoShimParameterResolutionEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFE810);
      sub_2403A97FC((uint64_t)v21, &qword_256FFE810);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFE810);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFE810);
    sub_2403A97FC((uint64_t)v21, &qword_256FFE810);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoShimParameterResolutionEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_2570011E0);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFE810);
  sub_2403A97FC((uint64_t)v21, &qword_256FFE810);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFE810);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoShimParameterResolution(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor38TranscriptProtoSessionCoordinatorErrorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011B8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA370);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA370);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA370);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA370);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA370);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA370);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
      v25 = _s23LighthouseDataProcessor42TranscriptProtoSessionCoordinatorErrorEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA370);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA370);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA370);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA370);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA370);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSessionCoordinatorErrorEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_2570011B8);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA370);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA370);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA370);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoSessionCoordinatorError(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor38TranscriptProtoParameterDisambiguationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    v13 = *(_BYTE *)(a2 + 32);
    if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 32))
        goto LABEL_14;
    }
    else
    {
      if (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24))
        v13 = 1;
      if ((v13 & 1) != 0)
        goto LABEL_14;
    }
    if ((sub_2408BAAE8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) == 0)
    {
LABEL_14:
      v12 = 0;
      return v12 & 1;
    }
    v14 = type metadata accessor for TranscriptProtoParameterDisambiguation(0);
    v15 = a1 + *(int *)(v14 + 28);
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v16(v10, v15, v4);
    v16(v8, a2 + *(int *)(v14 + 28), v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v12 = sub_2408E5CD8();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v10, v4);
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor38TranscriptProtoASTFlatExprInfixVariantV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, unsigned __int8 *, uint64_t);
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  unsigned __int8 *v62;
  char *v63;
  unsigned __int8 *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v4 = sub_2408E57A4();
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v69 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v60 - v7;
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v72 = *(_QWORD *)(v9 - 8);
  v73 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v60 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8]((char *)&v60 - v22);
  v25 = (char *)&v60 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v31 = (char *)&v60 - v30;
  if (*a1 != *a2)
    goto LABEL_16;
  v65 = v26;
  v66 = v29;
  v67 = v28;
  v68 = v11;
  v60 = v8;
  v61 = v27;
  v63 = v15;
  v32 = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
  v33 = *(int *)(v32 + 20);
  v64 = a1;
  sub_2403A9210((uint64_t)&a1[v33], (uint64_t)v31, &qword_257000DF8);
  v34 = *(int *)(v32 + 20);
  v62 = a2;
  sub_2403A9210((uint64_t)&a2[v34], (uint64_t)v25, &qword_257000DF8);
  v35 = (uint64_t)&v17[*(int *)(v12 + 48)];
  sub_2403A9210((uint64_t)v31, (uint64_t)v17, &qword_257000DF8);
  sub_2403A9210((uint64_t)v25, v35, &qword_257000DF8);
  v36 = v73;
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  if (v37((uint64_t)v17, 1, v73) != 1)
  {
    v38 = v65;
    sub_2403A9210((uint64_t)v17, v65, &qword_257000DF8);
    v39 = v37(v35, 1, v36);
    v40 = (uint64_t)v68;
    if (v39 != 1)
    {
      sub_2403A91CC(v35, (uint64_t)v68, type metadata accessor for TranscriptProtoASTFlatValue);
      LODWORD(v72) = _s23LighthouseDataProcessor27TranscriptProtoASTFlatValueV2eeoiySbAC_ACtFZ_0(v38, v40);
      sub_240388AE4(v40, type metadata accessor for TranscriptProtoASTFlatValue);
      sub_2403A97FC((uint64_t)v25, &qword_257000DF8);
      sub_2403A97FC((uint64_t)v31, &qword_257000DF8);
      sub_240388AE4(v38, type metadata accessor for TranscriptProtoASTFlatValue);
      sub_2403A97FC((uint64_t)v17, &qword_257000DF8);
      if ((v72 & 1) == 0)
        goto LABEL_16;
      goto LABEL_9;
    }
    sub_2403A97FC((uint64_t)v25, &qword_257000DF8);
    sub_2403A97FC((uint64_t)v31, &qword_257000DF8);
    sub_240388AE4(v38, type metadata accessor for TranscriptProtoASTFlatValue);
LABEL_7:
    v41 = (uint64_t)v17;
LABEL_15:
    sub_2403A97FC(v41, &qword_257000DF0);
    goto LABEL_16;
  }
  sub_2403A97FC((uint64_t)v25, &qword_257000DF8);
  sub_2403A97FC((uint64_t)v31, &qword_257000DF8);
  if (v37(v35, 1, v36) != 1)
    goto LABEL_7;
  sub_2403A97FC((uint64_t)v17, &qword_257000DF8);
LABEL_9:
  v42 = v64;
  v43 = v67;
  sub_2403A9210((uint64_t)&v64[*(int *)(v32 + 24)], v67, &qword_257000DF8);
  v73 = v32;
  v44 = v62;
  v45 = v66;
  sub_2403A9210((uint64_t)&v62[*(int *)(v32 + 24)], v66, &qword_257000DF8);
  v46 = (uint64_t)v63;
  v47 = (uint64_t)&v63[*(int *)(v12 + 48)];
  sub_2403A9210(v43, (uint64_t)v63, &qword_257000DF8);
  sub_2403A9210(v45, v47, &qword_257000DF8);
  if (v37(v46, 1, v36) == 1)
  {
    sub_2403A97FC(v45, &qword_257000DF8);
    sub_2403A97FC(v43, &qword_257000DF8);
    if (v37(v47, 1, v36) == 1)
    {
      sub_2403A97FC(v46, &qword_257000DF8);
LABEL_19:
      v53 = v73;
      v55 = v70;
      v54 = v71;
      v56 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v70 + 16);
      v57 = v60;
      v56(v60, &v42[*(int *)(v73 + 28)], v71);
      v58 = v69;
      v56(v69, &v44[*(int *)(v53 + 28)], v54);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v49 = sub_2408E5CD8();
      v59 = *(void (**)(char *, uint64_t))(v55 + 8);
      v59(v58, v54);
      v59(v57, v54);
      return v49 & 1;
    }
    goto LABEL_14;
  }
  v48 = v61;
  sub_2403A9210(v46, v61, &qword_257000DF8);
  if (v37(v47, 1, v36) == 1)
  {
    sub_2403A97FC(v66, &qword_257000DF8);
    sub_2403A97FC(v67, &qword_257000DF8);
    sub_240388AE4(v48, type metadata accessor for TranscriptProtoASTFlatValue);
LABEL_14:
    v41 = v46;
    goto LABEL_15;
  }
  v51 = (uint64_t)v68;
  sub_2403A91CC(v47, (uint64_t)v68, type metadata accessor for TranscriptProtoASTFlatValue);
  v52 = _s23LighthouseDataProcessor27TranscriptProtoASTFlatValueV2eeoiySbAC_ACtFZ_0(v48, v51);
  sub_240388AE4(v51, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2403A97FC(v66, &qword_257000DF8);
  sub_2403A97FC(v67, &qword_257000DF8);
  sub_240388AE4(v48, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2403A97FC(v46, &qword_257000DF8);
  if ((v52 & 1) != 0)
    goto LABEL_19;
LABEL_16:
  v49 = 0;
  return v49 & 1;
}

uint64_t _s23LighthouseDataProcessor38TranscriptProtoASTFlatExprIndexVariantV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v4 = sub_2408E57A4();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v60 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v58 - v7;
  v8 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v64 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v66 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v58 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v63 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v65 = (uint64_t)&v58 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v69 = (uint64_t)&v58 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v58 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v67 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_257000DF8);
  v68 = a2;
  sub_2403A9210(a2, (uint64_t)v28, &qword_257000DF8);
  v31 = (uint64_t)&v15[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v15, &qword_257000DF8);
  sub_2403A9210((uint64_t)v28, v31, &qword_257000DF8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v32((uint64_t)v15, 1, v8) != 1)
  {
    sub_2403A9210((uint64_t)v15, (uint64_t)v25, &qword_257000DF8);
    if (v32(v31, 1, v8) != 1)
    {
      v34 = v64;
      sub_2403A91CC(v31, v64, type metadata accessor for TranscriptProtoASTFlatValue);
      v35 = _s23LighthouseDataProcessor27TranscriptProtoASTFlatValueV2eeoiySbAC_ACtFZ_0((uint64_t)v25, v34);
      sub_240388AE4(v34, type metadata accessor for TranscriptProtoASTFlatValue);
      sub_2403A97FC((uint64_t)v28, &qword_257000DF8);
      sub_2403A97FC((uint64_t)v30, &qword_257000DF8);
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoASTFlatValue);
      sub_2403A97FC((uint64_t)v15, &qword_257000DF8);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_257000DF8);
    sub_2403A97FC((uint64_t)v30, &qword_257000DF8);
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoASTFlatValue);
LABEL_6:
    v33 = (uint64_t)v15;
LABEL_14:
    sub_2403A97FC(v33, &qword_257000DF0);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_257000DF8);
  sub_2403A97FC((uint64_t)v30, &qword_257000DF8);
  if (v32(v31, 1, v8) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v15, &qword_257000DF8);
LABEL_8:
  v36 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
  v37 = v67;
  v38 = v69;
  sub_2403A9210(v67 + *(int *)(v36 + 20), v69, &qword_257000DF8);
  v39 = v68;
  v40 = v65;
  sub_2403A9210(v68 + *(int *)(v36 + 20), v65, &qword_257000DF8);
  v41 = *(int *)(v11 + 48);
  v42 = v40;
  v43 = v66;
  v44 = v66 + v41;
  sub_2403A9210(v38, v66, &qword_257000DF8);
  sub_2403A9210(v42, v44, &qword_257000DF8);
  if (v32(v43, 1, v8) == 1)
  {
    sub_2403A97FC(v42, &qword_257000DF8);
    sub_2403A97FC(v38, &qword_257000DF8);
    if (v32(v44, 1, v8) == 1)
    {
      sub_2403A97FC(v43, &qword_257000DF8);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v43, v63, &qword_257000DF8);
  if (v32(v44, 1, v8) == 1)
  {
    sub_2403A97FC(v42, &qword_257000DF8);
    sub_2403A97FC(v69, &qword_257000DF8);
    sub_240388AE4(v45, type metadata accessor for TranscriptProtoASTFlatValue);
LABEL_13:
    v33 = v43;
    goto LABEL_14;
  }
  v48 = v64;
  sub_2403A91CC(v44, v64, type metadata accessor for TranscriptProtoASTFlatValue);
  v49 = _s23LighthouseDataProcessor27TranscriptProtoASTFlatValueV2eeoiySbAC_ACtFZ_0(v45, v48);
  sub_240388AE4(v48, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2403A97FC(v42, &qword_257000DF8);
  sub_2403A97FC(v69, &qword_257000DF8);
  sub_240388AE4(v45, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2403A97FC(v43, &qword_257000DF8);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t _s23LighthouseDataProcessor47TranscriptProtoSystemPromptResolutionUserActionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F28);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA328);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA328);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA328);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA328);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA328);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
      _s23LighthouseDataProcessor51TranscriptProtoSystemPromptResolutionUserActionEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA328);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA328);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA328);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA328);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA328);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000F28);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA328);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA328);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA328);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor37TranscriptProtoSystemPromptResolutionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  char v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  uint64_t v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  char *v104;

  v4 = sub_2408E57A4();
  v86 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v85 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v84 = (char *)&v80 - v7;
  v8 = type metadata accessor for TranscriptProtoSystemPromptResolutionInput(0);
  v89 = *(_QWORD *)(v8 - 8);
  v90 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v83 = (uint64_t)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F90);
  MEMORY[0x24BDAC7A8](v88);
  v96 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA340);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v95 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v93 = (char *)&v80 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v94 = (char *)&v80 - v16;
  v17 = type metadata accessor for TranscriptProtoStatementID(0);
  v98 = *(_QWORD *)(v17 - 8);
  v99 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v87 = (uint64_t)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v97);
  v100 = (uint64_t)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v91 = (uint64_t)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v101 = (uint64_t)&v80 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v102 = (uint64_t)&v80 - v25;
  v26 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction(0);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v92 = (uint64_t)&v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F98);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA330);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v80 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)&v80 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v80 - v39;
  v103 = a1;
  v104 = a2;
  v41 = a1[3];
  v42 = *((_QWORD *)a2 + 3);
  if (!v41)
  {
    v82 = v4;
    v43 = v103;
    if (v42)
      goto LABEL_32;
    goto LABEL_8;
  }
  if (!v42)
    goto LABEL_32;
  v82 = v4;
  v43 = v103;
  if (v103[2] == *((_QWORD *)v104 + 2) && v41 == v42 || (v44 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_8:
    v45 = type metadata accessor for TranscriptProtoSystemPromptResolution(0);
    sub_2403A9210((uint64_t)v43 + *(int *)(v45 + 24), (uint64_t)v40, &qword_256FFA330);
    v81 = (int *)v45;
    sub_2403A9210((uint64_t)&v104[*(int *)(v45 + 24)], (uint64_t)v38, &qword_256FFA330);
    v46 = (uint64_t)&v31[*(int *)(v29 + 48)];
    sub_2403A9210((uint64_t)v40, (uint64_t)v31, &qword_256FFA330);
    sub_2403A9210((uint64_t)v38, v46, &qword_256FFA330);
    v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (v47((uint64_t)v31, 1, v26) == 1)
    {
      sub_2403A97FC((uint64_t)v38, &qword_256FFA330);
      sub_2403A97FC((uint64_t)v40, &qword_256FFA330);
      if (v47(v46, 1, v26) == 1)
      {
        sub_2403A97FC((uint64_t)v31, &qword_256FFA330);
LABEL_15:
        if (*v43 != *(_QWORD *)v104 || v43[1] != *((_QWORD *)v104 + 1))
        {
          v44 = 0;
          if ((sub_2408E617C() & 1) == 0)
            return v44 & 1;
        }
        v52 = v81;
        v53 = v102;
        sub_2403A9210((uint64_t)v43 + v81[7], v102, &qword_256FFA300);
        v54 = v101;
        sub_2403A9210((uint64_t)&v104[v52[7]], v101, &qword_256FFA300);
        v55 = v100;
        v56 = v100 + *(int *)(v97 + 48);
        sub_2403A9210(v53, v100, &qword_256FFA300);
        sub_2403A9210(v54, v56, &qword_256FFA300);
        v57 = v99;
        v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48);
        if (v58(v55, 1, v99) == 1)
        {
          sub_2403A97FC(v54, &qword_256FFA300);
          sub_2403A97FC(v53, &qword_256FFA300);
          v59 = v58(v56, 1, v57);
          v61 = (uint64_t)v95;
          v60 = (uint64_t)v96;
          v63 = (uint64_t)v93;
          v62 = (uint64_t)v94;
          if (v59 == 1)
          {
            sub_2403A97FC(v55, &qword_256FFA300);
LABEL_25:
            sub_2403A9210((uint64_t)v103 + v52[8], v62, &qword_256FFA340);
            sub_2403A9210((uint64_t)&v104[v52[8]], v63, &qword_256FFA340);
            v68 = v60 + *(int *)(v88 + 48);
            sub_2403A9210(v62, v60, &qword_256FFA340);
            sub_2403A9210(v63, v68, &qword_256FFA340);
            v69 = v90;
            v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
            if (v70(v60, 1, v90) == 1)
            {
              sub_2403A97FC(v63, &qword_256FFA340);
              sub_2403A97FC(v62, &qword_256FFA340);
              if (v70(v68, 1, v69) == 1)
              {
                sub_2403A97FC(v60, &qword_256FFA340);
LABEL_35:
                v74 = v86;
                v75 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
                v76 = v84;
                v77 = v82;
                v75(v84, (char *)v103 + v52[9], v82);
                v78 = v85;
                v75(v85, &v104[v52[9]], v77);
                sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                v44 = sub_2408E5CD8();
                v79 = *(void (**)(char *, uint64_t))(v74 + 8);
                v79(v78, v77);
                v79(v76, v77);
                return v44 & 1;
              }
              goto LABEL_30;
            }
            sub_2403A9210(v60, v61, &qword_256FFA340);
            if (v70(v68, 1, v69) == 1)
            {
              sub_2403A97FC(v63, &qword_256FFA340);
              sub_2403A97FC(v62, &qword_256FFA340);
              sub_240388AE4(v61, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
LABEL_30:
              v48 = &qword_257000F90;
              v49 = v60;
              goto LABEL_31;
            }
            v72 = v83;
            sub_2403A91CC(v68, v83, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
            v73 = _s23LighthouseDataProcessor42TranscriptProtoSystemPromptResolutionInputV2eeoiySbAC_ACtFZ_0(v61, v72);
            sub_240388AE4(v72, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
            sub_2403A97FC(v63, &qword_256FFA340);
            sub_2403A97FC(v62, &qword_256FFA340);
            sub_240388AE4(v61, type metadata accessor for TranscriptProtoSystemPromptResolutionInput);
            sub_2403A97FC(v60, &qword_256FFA340);
            if ((v73 & 1) != 0)
              goto LABEL_35;
LABEL_32:
            v44 = 0;
            return v44 & 1;
          }
        }
        else
        {
          v64 = v91;
          sub_2403A9210(v55, v91, &qword_256FFA300);
          v65 = v58(v56, 1, v57);
          v61 = (uint64_t)v95;
          v60 = (uint64_t)v96;
          v63 = (uint64_t)v93;
          v62 = (uint64_t)v94;
          if (v65 != 1)
          {
            v66 = v87;
            sub_2403A91CC(v56, v87, type metadata accessor for TranscriptProtoStatementID);
            v67 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v64, v66);
            sub_240388AE4(v66, type metadata accessor for TranscriptProtoStatementID);
            sub_2403A97FC(v101, &qword_256FFA300);
            sub_2403A97FC(v102, &qword_256FFA300);
            sub_240388AE4(v64, type metadata accessor for TranscriptProtoStatementID);
            sub_2403A97FC(v55, &qword_256FFA300);
            if ((v67 & 1) == 0)
              goto LABEL_32;
            goto LABEL_25;
          }
          sub_2403A97FC(v101, &qword_256FFA300);
          sub_2403A97FC(v102, &qword_256FFA300);
          sub_240388AE4(v64, type metadata accessor for TranscriptProtoStatementID);
        }
        v48 = &qword_257000C50;
        v49 = v55;
LABEL_31:
        sub_2403A97FC(v49, v48);
        goto LABEL_32;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v31, (uint64_t)v35, &qword_256FFA330);
      if (v47(v46, 1, v26) != 1)
      {
        v50 = v92;
        sub_2403A91CC(v46, v92, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
        v51 = _s23LighthouseDataProcessor47TranscriptProtoSystemPromptResolutionUserActionV2eeoiySbAC_ACtFZ_0((uint64_t)v35, v50);
        sub_240388AE4(v50, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
        sub_2403A97FC((uint64_t)v38, &qword_256FFA330);
        sub_2403A97FC((uint64_t)v40, &qword_256FFA330);
        sub_240388AE4((uint64_t)v35, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
        sub_2403A97FC((uint64_t)v31, &qword_256FFA330);
        if ((v51 & 1) == 0)
          goto LABEL_32;
        goto LABEL_15;
      }
      sub_2403A97FC((uint64_t)v38, &qword_256FFA330);
      sub_2403A97FC((uint64_t)v40, &qword_256FFA330);
      sub_240388AE4((uint64_t)v35, type metadata accessor for TranscriptProtoSystemPromptResolutionUserAction);
    }
    v48 = &qword_257000F98;
    v49 = (uint64_t)v31;
    goto LABEL_31;
  }
  return v44 & 1;
}

uint64_t _s23LighthouseDataProcessor37TranscriptProtoExternalAgentTextQueryV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  _QWORD *v29;
  char *v30;
  char v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v4 = sub_2408E57A4();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v46 = (char *)&v42 - v7;
  v8 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v45 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C38);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v42 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v42 - v21;
  if (*a1 == *a2 && a1[1] == a2[1] || (v23 = 0, (sub_2408E617C() & 1) != 0))
  {
    v24 = a1[3];
    v25 = a2[3];
    if (v24)
    {
      if (!v25)
        goto LABEL_19;
      if (a1[2] != a2[2] || v24 != v25)
      {
        v23 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v23 & 1;
      }
    }
    else if (v25)
    {
      goto LABEL_19;
    }
    v44 = v17;
    v26 = type metadata accessor for TranscriptProtoExternalAgentTextQuery(0);
    sub_2403A9210((uint64_t)a1 + *(int *)(v26 + 24), (uint64_t)v22, &qword_256FFA368);
    v43 = v26;
    sub_2403A9210((uint64_t)a2 + *(int *)(v26 + 24), (uint64_t)v20, &qword_256FFA368);
    v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA368);
    sub_2403A9210((uint64_t)v20, v27, &qword_256FFA368);
    v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v28((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA368);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA368);
      if (v28(v27, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_256FFA368);
LABEL_18:
        v32 = v43;
        v33 = (char *)a1 + *(int *)(v43 + 28);
        v35 = v48;
        v34 = v49;
        v36 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
        v37 = v46;
        v36(v46, v33, v49);
        v38 = (char *)a2 + *(int *)(v32 + 28);
        v39 = v47;
        v36(v47, v38, v34);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v23 = sub_2408E5CD8();
        v40 = *(void (**)(char *, uint64_t))(v35 + 8);
        v40(v39, v34);
        v40(v37, v34);
        return v23 & 1;
      }
      goto LABEL_16;
    }
    v29 = v44;
    sub_2403A9210((uint64_t)v13, (uint64_t)v44, &qword_256FFA368);
    if (v28(v27, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA368);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA368);
      sub_240388AE4((uint64_t)v29, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
LABEL_16:
      sub_2403A97FC((uint64_t)v13, &qword_257000C38);
      goto LABEL_19;
    }
    v30 = v45;
    sub_2403A91CC(v27, (uint64_t)v45, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    v31 = sub_2404D07D8(v29, v30, (uint64_t (*)(_QWORD, _QWORD))sub_2408BAD50, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_240388AE4((uint64_t)v30, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_2403A97FC((uint64_t)v20, &qword_256FFA368);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA368);
    sub_240388AE4((uint64_t)v29, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    sub_2403A97FC((uint64_t)v13, &qword_256FFA368);
    if ((v31 & 1) != 0)
      goto LABEL_18;
LABEL_19:
    v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_2404D03C8(_QWORD *a1, char *a2)
{
  return sub_2404D4F58(a1, a2, type metadata accessor for TranscriptProtoASTFlatExprUndoVariant);
}

uint64_t _s23LighthouseDataProcessor37TranscriptProtoASTFlatExprPickVariantV2eeoiySbAC_ACtFZ_0(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;

  v4 = sub_2408E57A4();
  v44 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v40 - v7;
  v8 = type metadata accessor for TranscriptProtoASTPickType(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v41 = (uint64_t *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D00);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v40 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v40 - v21;
  v23 = *a1;
  v24 = a1[1];
  v25 = *(_QWORD *)a2;
  v26 = *((_QWORD *)a2 + 1);
  v45 = a2;
  if (v23 == v25 && v24 == v26 || (v27 = 0, (sub_2408E617C() & 1) != 0))
  {
    v40 = v4;
    v28 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
    sub_2403A9210((uint64_t)a1 + *(int *)(v28 + 20), (uint64_t)v22, &qword_257000D08);
    sub_2403A9210((uint64_t)&v45[*(int *)(v28 + 20)], (uint64_t)v20, &qword_257000D08);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_257000D08);
    sub_2403A9210((uint64_t)v20, v29, &qword_257000D08);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_257000D08);
      sub_2403A97FC((uint64_t)v22, &qword_257000D08);
      if (v30(v29, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_257000D08);
LABEL_11:
        v33 = v44;
        v34 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
        v35 = v42;
        v36 = v40;
        v34(v42, (char *)a1 + *(int *)(v28 + 24), v40);
        v37 = v43;
        v34(v43, &v45[*(int *)(v28 + 24)], v36);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v27 = sub_2408E5CD8();
        v38 = *(void (**)(char *, uint64_t))(v33 + 8);
        v38(v37, v36);
        v38(v35, v36);
        return v27 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_257000D08);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v41;
        sub_2403A91CC(v29, (uint64_t)v41, type metadata accessor for TranscriptProtoASTPickType);
        v32 = _s23LighthouseDataProcessor26TranscriptProtoASTPickTypeV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v31);
        sub_240388AE4((uint64_t)v31, type metadata accessor for TranscriptProtoASTPickType);
        sub_2403A97FC((uint64_t)v20, &qword_257000D08);
        sub_2403A97FC((uint64_t)v22, &qword_257000D08);
        sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTPickType);
        sub_2403A97FC((uint64_t)v13, &qword_257000D08);
        if ((v32 & 1) != 0)
          goto LABEL_11;
LABEL_12:
        v27 = 0;
        return v27 & 1;
      }
      sub_2403A97FC((uint64_t)v20, &qword_257000D08);
      sub_2403A97FC((uint64_t)v22, &qword_257000D08);
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTPickType);
    }
    sub_2403A97FC((uint64_t)v13, &qword_257000D00);
    goto LABEL_12;
  }
  return v27 & 1;
}

uint64_t sub_2404D07D8(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v8 = sub_2408E57A4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v22 - v13;
  v15 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v15 || (v16 = 0, (sub_2408E617C() & 1) != 0))
  {
    if ((a3(a1[2], *((_QWORD *)a2 + 2)) & 1) != 0)
    {
      v17 = a4(0);
      v18 = (char *)a1 + *(int *)(v17 + 24);
      v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v19(v14, v18, v8);
      v19(v12, &a2[*(int *)(v17 + 24)], v8);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v16 = sub_2408E5CD8();
      v20 = *(void (**)(char *, uint64_t))(v9 + 8);
      v20(v12, v8);
      v20(v14, v8);
    }
    else
    {
      v16 = 0;
    }
  }
  return v16 & 1;
}

uint64_t _s23LighthouseDataProcessor36TranscriptProtoTypeConversionRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t *v42;
  uint64_t v43;
  char v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  char v65;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v99 = a2;
  v3 = sub_2408E57A4();
  v81 = *(_QWORD *)(v3 - 8);
  v82 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v80 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v79 = (char *)&v77 - v6;
  v7 = type metadata accessor for TranscriptProtoStatementID(0);
  v85 = *(_QWORD *)(v7 - 8);
  v86 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v78 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v84);
  v96 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v88 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v94 = (char *)&v77 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v95 = (char *)&v77 - v15;
  v93 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v90 = *(_QWORD *)(v93 - 8);
  MEMORY[0x24BDAC7A8](v93);
  v83 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v89);
  v98 = (uint64_t)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v87 = (uint64_t)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v91 = (uint64_t)&v77 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v92 = (uint64_t)&v77 - v23;
  v24 = type metadata accessor for ToolKitProtoTypedValue(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v77 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v77 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v77 - v38;
  v97 = a1;
  sub_2403A9210(a1, (uint64_t)&v77 - v38, &qword_256FFA3A8);
  sub_2403A9210(v99, (uint64_t)v37, &qword_256FFA3A8);
  v40 = (uint64_t)&v30[*(int *)(v28 + 48)];
  sub_2403A9210((uint64_t)v39, (uint64_t)v30, &qword_256FFA3A8);
  sub_2403A9210((uint64_t)v37, v40, &qword_256FFA3A8);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v41((uint64_t)v30, 1, v24) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v39, &qword_256FFA3A8);
    if (v41(v40, 1, v24) == 1)
    {
      sub_2403A97FC((uint64_t)v30, &qword_256FFA3A8);
      goto LABEL_8;
    }
LABEL_6:
    v42 = &qword_257000CA8;
    v43 = (uint64_t)v30;
LABEL_21:
    sub_2403A97FC(v43, v42);
    goto LABEL_22;
  }
  sub_2403A9210((uint64_t)v30, (uint64_t)v34, &qword_256FFA3A8);
  if (v41(v40, 1, v24) == 1)
  {
    sub_2403A97FC((uint64_t)v37, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v39, &qword_256FFA3A8);
    sub_240388AE4((uint64_t)v34, type metadata accessor for ToolKitProtoTypedValue);
    goto LABEL_6;
  }
  sub_2403A91CC(v40, (uint64_t)v27, type metadata accessor for ToolKitProtoTypedValue);
  v44 = static ToolKitProtoTypedValue.== infix(_:_:)(v34, v27);
  sub_240388AE4((uint64_t)v27, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v37, &qword_256FFA3A8);
  sub_2403A97FC((uint64_t)v39, &qword_256FFA3A8);
  sub_240388AE4((uint64_t)v34, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA3A8);
  if ((v44 & 1) == 0)
    goto LABEL_22;
LABEL_8:
  v45 = (int *)type metadata accessor for TranscriptProtoTypeConversionRequest(0);
  v46 = v92;
  sub_2403A9210(v97 + v45[5], v92, &qword_256FFA428);
  v47 = v91;
  sub_2403A9210(v99 + v45[5], v91, &qword_256FFA428);
  v48 = v98;
  v49 = v98 + *(int *)(v89 + 48);
  sub_2403A9210(v46, v98, &qword_256FFA428);
  sub_2403A9210(v47, v49, &qword_256FFA428);
  v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
  v51 = v93;
  if (v50(v48, 1, v93) != 1)
  {
    v57 = v87;
    sub_2403A9210(v48, v87, &qword_256FFA428);
    v58 = v50(v49, 1, v51);
    v54 = (uint64_t)v95;
    v53 = (uint64_t)v96;
    v56 = (uint64_t)v94;
    if (v58 != 1)
    {
      v59 = v83;
      sub_2403A91CC(v49, v83, type metadata accessor for ToolKitProtoTypeInstance);
      LODWORD(v93) = static ToolKitProtoTypeInstance.== infix(_:_:)(v57, v59);
      sub_240388AE4(v59, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A97FC(v47, &qword_256FFA428);
      sub_2403A97FC(v46, &qword_256FFA428);
      sub_240388AE4(v57, type metadata accessor for ToolKitProtoTypeInstance);
      sub_2403A97FC(v48, &qword_256FFA428);
      v55 = (uint64_t)v88;
      if ((v93 & 1) == 0)
        goto LABEL_22;
      goto LABEL_15;
    }
    sub_2403A97FC(v47, &qword_256FFA428);
    sub_2403A97FC(v46, &qword_256FFA428);
    sub_240388AE4(v57, type metadata accessor for ToolKitProtoTypeInstance);
    goto LABEL_13;
  }
  sub_2403A97FC(v47, &qword_256FFA428);
  sub_2403A97FC(v46, &qword_256FFA428);
  v52 = v50(v49, 1, v51);
  v54 = (uint64_t)v95;
  v53 = (uint64_t)v96;
  v55 = (uint64_t)v88;
  v56 = (uint64_t)v94;
  if (v52 != 1)
  {
LABEL_13:
    v42 = &qword_257000CB0;
    v43 = v98;
    goto LABEL_21;
  }
  sub_2403A97FC(v98, &qword_256FFA428);
LABEL_15:
  v60 = v97;
  sub_2403A9210(v97 + v45[6], v54, &qword_256FFA300);
  v61 = v99;
  sub_2403A9210(v99 + v45[6], v56, &qword_256FFA300);
  v62 = v53 + *(int *)(v84 + 48);
  sub_2403A9210(v54, v53, &qword_256FFA300);
  sub_2403A9210(v56, v62, &qword_256FFA300);
  v63 = v86;
  v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
  if (v64(v53, 1, v86) == 1)
  {
    sub_2403A97FC(v56, &qword_256FFA300);
    sub_2403A97FC(v54, &qword_256FFA300);
    if (v64(v62, 1, v63) == 1)
    {
      sub_2403A97FC(v53, &qword_256FFA300);
LABEL_25:
      v69 = v60 + v45[7];
      v71 = v81;
      v70 = v82;
      v72 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 16);
      v73 = v79;
      v72(v79, v69, v82);
      v74 = v61 + v45[7];
      v75 = v80;
      v72(v80, v74, v70);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v65 = sub_2408E5CD8();
      v76 = *(void (**)(char *, uint64_t))(v71 + 8);
      v76(v75, v70);
      v76(v73, v70);
      return v65 & 1;
    }
    goto LABEL_20;
  }
  sub_2403A9210(v53, v55, &qword_256FFA300);
  if (v64(v62, 1, v63) == 1)
  {
    sub_2403A97FC(v56, &qword_256FFA300);
    sub_2403A97FC(v54, &qword_256FFA300);
    sub_240388AE4(v55, type metadata accessor for TranscriptProtoStatementID);
LABEL_20:
    v42 = &qword_257000C50;
    v43 = v53;
    goto LABEL_21;
  }
  v67 = v78;
  sub_2403A91CC(v62, v78, type metadata accessor for TranscriptProtoStatementID);
  v68 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v55, v67);
  sub_240388AE4(v67, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v56, &qword_256FFA300);
  sub_2403A97FC(v54, &qword_256FFA300);
  sub_240388AE4(v55, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v53, &qword_256FFA300);
  if ((v68 & 1) != 0)
    goto LABEL_25;
LABEL_22:
  v65 = 0;
  return v65 & 1;
}

uint64_t _s23LighthouseDataProcessor36TranscriptProtoToolRetrievalResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    v13 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v13 || (v12 = 0, (sub_2408E617C() & 1) != 0))
    {
      if (*(float *)(a1 + 32) == *(float *)(a2 + 32)
        && (sub_2408BA998(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40)) & 1) != 0
        && (sub_2408BBEFC(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48)) & 1) != 0)
      {
        v14 = type metadata accessor for TranscriptProtoToolRetrievalResponse(0);
        v15 = a1 + *(int *)(v14 + 36);
        v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v16(v10, v15, v4);
        v16(v8, a2 + *(int *)(v14 + 36), v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_2408E5CD8();
        v17 = *(void (**)(char *, uint64_t))(v5 + 8);
        v17(v8, v4);
        v17(v10, v4);
      }
      else
      {
        v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor36TranscriptProtoRequestPrescribedPlanV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001228);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA358);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA358);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA358);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA358);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA358);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA358);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
      _s23LighthouseDataProcessor40TranscriptProtoRequestPrescribedPlanEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA358);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA358);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA358);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA358);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA358);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoRequestPrescribedPlanEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257001228);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA358);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA358);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA358);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoRequestPrescribedPlan(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor36TranscriptProtoQueryDecorationResultV2eeoiySbAC_ACtFZ_0(char **a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char **v22;
  char *v23;
  uint64_t *v24;
  char **v25;
  uint64_t DecorationResult;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char DecorationToolRetrievalResponseV2eeoiySbAC_ACtFZ_0;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t *v59;

  v59 = a2;
  v55 = sub_2408E57A4();
  v58 = *(_QWORD *)(v55 - 8);
  v3 = MEMORY[0x24BDAC7A8](v55);
  v57 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)&v48 - v5;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v7 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  MEMORY[0x24BDAC7A8](DecorationToolRetrievalResponse);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C98);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v48 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v48 - v20;
  v22 = a1;
  v23 = *a1;
  v24 = v59;
  if ((sub_2408BA37C(v23) & 1) == 0)
    goto LABEL_13;
  v53 = v12;
  v54 = v19;
  v51 = v16;
  v52 = v21;
  v50 = v9;
  if ((sub_2408BBF10((uint64_t)v22[1], v24[1]) & 1) == 0)
    goto LABEL_13;
  v25 = v22;
  if ((sub_2408BBF10((uint64_t)v22[2], v24[2]) & 1) == 0)
    goto LABEL_13;
  DecorationResult = type metadata accessor for TranscriptProtoQueryDecorationResult(0);
  v27 = (uint64_t)v22 + *(int *)(DecorationResult + 32);
  v28 = (uint64_t)v52;
  sub_2403A9210(v27, (uint64_t)v52, &qword_256FFA470);
  v49 = DecorationResult;
  v29 = (uint64_t)v54;
  sub_2403A9210((uint64_t)v24 + *(int *)(DecorationResult + 32), (uint64_t)v54, &qword_256FFA470);
  v30 = *(int *)(v10 + 48);
  v31 = (uint64_t)v53;
  v32 = (uint64_t)&v53[v30];
  sub_2403A9210(v28, (uint64_t)v53, &qword_256FFA470);
  sub_2403A9210(v29, v32, &qword_256FFA470);
  v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v33(v31, 1, DecorationToolRetrievalResponse) == 1)
  {
    sub_2403A97FC(v29, &qword_256FFA470);
    sub_2403A97FC(v28, &qword_256FFA470);
    if (v33(v32, 1, DecorationToolRetrievalResponse) == 1)
    {
      sub_2403A97FC(v31, &qword_256FFA470);
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  v34 = (uint64_t)v51;
  sub_2403A9210(v31, (uint64_t)v51, &qword_256FFA470);
  if (v33(v32, 1, DecorationToolRetrievalResponse) == 1)
  {
    sub_2403A97FC((uint64_t)v54, &qword_256FFA470);
    sub_2403A97FC(v28, &qword_256FFA470);
    sub_240388AE4(v34, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
LABEL_9:
    sub_2403A97FC(v31, &qword_257000C98);
LABEL_13:
    v45 = 0;
    return v45 & 1;
  }
  v35 = (uint64_t)v50;
  sub_2403A91CC(v32, (uint64_t)v50, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  DecorationToolRetrievalResponseV2eeoiySbAC_ACtFZ_0 = _s23LighthouseDataProcessor48ContextProtoQueryDecorationToolRetrievalResponseV2eeoiySbAC_ACtFZ_0(v34, v35);
  sub_240388AE4(v35, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  sub_2403A97FC((uint64_t)v54, &qword_256FFA470);
  sub_2403A97FC(v28, &qword_256FFA470);
  sub_240388AE4(v34, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  sub_2403A97FC(v31, &qword_256FFA470);
  if ((DecorationToolRetrievalResponseV2eeoiySbAC_ACtFZ_0 & 1) == 0)
    goto LABEL_13;
LABEL_11:
  if ((sub_2408BBF24((uint64_t)v25[3], v24[3]) & 1) == 0)
    goto LABEL_13;
  v37 = v49;
  v38 = (uint64_t)v25 + *(int *)(v49 + 36);
  v39 = v58;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  v41 = v55;
  v42 = v56;
  v40(v56, v38, v55);
  v43 = (char *)v24 + *(int *)(v37 + 36);
  v44 = v57;
  v40(v57, (uint64_t)v43, v41);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v45 = sub_2408E5CD8();
  v46 = *(void (**)(char *, uint64_t))(v39 + 8);
  v46(v44, v41);
  v46(v42, v41);
  return v45 & 1;
}

uint64_t _s23LighthouseDataProcessor36TranscriptProtoParameterConfirmationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char *v28;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_2408E57A4();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v41 - v7;
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v41 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v41 - v21;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v23 = 0, (sub_2408E617C() & 1) != 0))
  {
    v24 = *(_BYTE *)(a2 + 24);
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        goto LABEL_16;
    }
    else
    {
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
        v24 = 1;
      if ((v24 & 1) != 0)
        goto LABEL_16;
    }
    v43 = v17;
    v25 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
    sub_2403A9210(a1 + *(int *)(v25 + 24), (uint64_t)v22, &qword_256FFA3A8);
    v42 = v25;
    sub_2403A9210(a2 + *(int *)(v25 + 24), (uint64_t)v20, &qword_256FFA3A8);
    v26 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA3A8);
    sub_2403A9210((uint64_t)v20, v26, &qword_256FFA3A8);
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v27((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
      if (v27(v26, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
LABEL_19:
        v32 = v42;
        v33 = a1 + *(int *)(v42 + 28);
        v35 = v47;
        v34 = v48;
        v36 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
        v37 = v45;
        v36(v45, v33, v48);
        v38 = a2 + *(int *)(v32 + 28);
        v39 = v46;
        v36(v46, v38, v34);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v23 = sub_2408E5CD8();
        v40 = *(void (**)(char *, uint64_t))(v35 + 8);
        v40(v39, v34);
        v40(v37, v34);
        return v23 & 1;
      }
    }
    else
    {
      v28 = v43;
      sub_2403A9210((uint64_t)v13, (uint64_t)v43, &qword_256FFA3A8);
      if (v27(v26, 1, v8) != 1)
      {
        v30 = v44;
        sub_2403A91CC(v26, (uint64_t)v44, type metadata accessor for ToolKitProtoTypedValue);
        v31 = static ToolKitProtoTypedValue.== infix(_:_:)(v28, v30);
        sub_240388AE4((uint64_t)v30, type metadata accessor for ToolKitProtoTypedValue);
        sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
        sub_240388AE4((uint64_t)v28, type metadata accessor for ToolKitProtoTypedValue);
        sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
        if ((v31 & 1) != 0)
          goto LABEL_19;
LABEL_16:
        v23 = 0;
        return v23 & 1;
      }
      sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
      sub_240388AE4((uint64_t)v28, type metadata accessor for ToolKitProtoTypedValue);
    }
    sub_2403A97FC((uint64_t)v13, &qword_257000CA8);
    goto LABEL_16;
  }
  return v23 & 1;
}

uint64_t _s23LighthouseDataProcessor36TranscriptProtoClientUndoRedoRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  _BYTE *v43;
  _BYTE *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  void (*v55)(_BYTE *, uint64_t);
  _BYTE v56[12];
  int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;

  v4 = sub_2408E57A4();
  v63 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v62 = &v56[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v61 = &v56[-v7];
  v69 = type metadata accessor for TranscriptProtoStatementID(0);
  v8 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v65 = &v56[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v68 = &v56[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v56[-v13];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v64 = &v56[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v66 = &v56[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v67 = &v56[-v21];
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = &v56[-v23];
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = &v56[-v26];
  MEMORY[0x24BDAC7A8](v25);
  v29 = &v56[-v28];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v30 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16))
    {
      v58 = v4;
      v31 = type metadata accessor for TranscriptProtoClientUndoRedoRequest(0);
      sub_2403A9210(a1 + *(int *)(v31 + 24), (uint64_t)v29, &qword_256FFA300);
      v59 = v31;
      sub_2403A9210(a2 + *(int *)(v31 + 24), (uint64_t)v27, &qword_256FFA300);
      v32 = (uint64_t)&v14[*(int *)(v10 + 48)];
      sub_2403A9210((uint64_t)v29, (uint64_t)v14, &qword_256FFA300);
      sub_2403A9210((uint64_t)v27, v32, &qword_256FFA300);
      v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
      v34 = v69;
      if (v33((uint64_t)v14, 1, v69) == 1)
      {
        v60 = v33;
        sub_2403A97FC((uint64_t)v27, &qword_256FFA300);
        sub_2403A97FC((uint64_t)v29, &qword_256FFA300);
        if (v60(v32, 1, v34) == 1)
        {
          sub_2403A97FC((uint64_t)v14, &qword_256FFA300);
LABEL_12:
          v37 = v59;
          v38 = v67;
          sub_2403A9210(a1 + *(int *)(v59 + 28), (uint64_t)v67, &qword_256FFA300);
          v39 = v66;
          sub_2403A9210(a2 + *(int *)(v37 + 28), (uint64_t)v66, &qword_256FFA300);
          v40 = v68;
          v41 = (uint64_t)&v68[*(int *)(v10 + 48)];
          sub_2403A9210((uint64_t)v38, (uint64_t)v68, &qword_256FFA300);
          sub_2403A9210((uint64_t)v39, v41, &qword_256FFA300);
          v42 = v60;
          if (v60((uint64_t)v40, 1, v34) == 1)
          {
            sub_2403A97FC((uint64_t)v39, &qword_256FFA300);
            sub_2403A97FC((uint64_t)v38, &qword_256FFA300);
            if (v42(v41, 1, v34) == 1)
            {
              sub_2403A97FC((uint64_t)v40, &qword_256FFA300);
LABEL_22:
              v47 = v58;
              v48 = v59;
              v49 = a1 + *(int *)(v59 + 32);
              v50 = v63;
              v51 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v63 + 16);
              v52 = v61;
              v51(v61, v49, v58);
              v53 = a2 + *(int *)(v48 + 32);
              v54 = v62;
              v51(v62, v53, v47);
              sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
              v30 = sub_2408E5CD8();
              v55 = *(void (**)(_BYTE *, uint64_t))(v50 + 8);
              v55(v54, v47);
              v55(v52, v47);
              return v30 & 1;
            }
          }
          else
          {
            v43 = v64;
            sub_2403A9210((uint64_t)v40, (uint64_t)v64, &qword_256FFA300);
            if (v42(v41, 1, v34) != 1)
            {
              v45 = v65;
              sub_2403A91CC(v41, (uint64_t)v65, type metadata accessor for TranscriptProtoStatementID);
              v46 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v43, (uint64_t)v45);
              sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoStatementID);
              sub_2403A97FC((uint64_t)v39, &qword_256FFA300);
              sub_2403A97FC((uint64_t)v38, &qword_256FFA300);
              sub_240388AE4((uint64_t)v43, type metadata accessor for TranscriptProtoStatementID);
              sub_2403A97FC((uint64_t)v40, &qword_256FFA300);
              if ((v46 & 1) != 0)
                goto LABEL_22;
              goto LABEL_19;
            }
            sub_2403A97FC((uint64_t)v39, &qword_256FFA300);
            sub_2403A97FC((uint64_t)v38, &qword_256FFA300);
            sub_240388AE4((uint64_t)v43, type metadata accessor for TranscriptProtoStatementID);
          }
          v35 = (uint64_t)v40;
          goto LABEL_18;
        }
LABEL_10:
        v35 = (uint64_t)v14;
LABEL_18:
        sub_2403A97FC(v35, &qword_257000C50);
        goto LABEL_19;
      }
      sub_2403A9210((uint64_t)v14, (uint64_t)v24, &qword_256FFA300);
      if (v33(v32, 1, v34) == 1)
      {
        sub_2403A97FC((uint64_t)v27, &qword_256FFA300);
        sub_2403A97FC((uint64_t)v29, &qword_256FFA300);
        sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoStatementID);
        goto LABEL_10;
      }
      v60 = v33;
      v36 = v65;
      sub_2403A91CC(v32, (uint64_t)v65, type metadata accessor for TranscriptProtoStatementID);
      v57 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v24, (uint64_t)v36);
      sub_240388AE4((uint64_t)v36, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v27, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v29, &qword_256FFA300);
      sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v14, &qword_256FFA300);
      if ((v57 & 1) != 0)
        goto LABEL_12;
    }
LABEL_19:
    v30 = 0;
  }
  return v30 & 1;
}

uint64_t _s23LighthouseDataProcessor36TranscriptProtoActionResolverRequestV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t *v37;
  uint64_t v38;
  char v40;
  unsigned __int8 *v41;
  unsigned __int8 *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, unsigned __int8 *, uint64_t);
  uint64_t v57;
  unsigned __int8 *v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 *v75;
  unsigned __int8 *v76;

  v74 = sub_2408E57A4();
  v65 = *(_QWORD *)(v74 - 8);
  v4 = MEMORY[0x24BDAC7A8](v74);
  v64 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v63 = (char *)&v61 - v6;
  v72 = type metadata accessor for TranscriptProtoStatementID(0);
  v69 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v66 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v68);
  v73 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v67 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v61 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v71 = (uint64_t)&v61 - v14;
  v15 = type metadata accessor for TranscriptProtoParameterSet(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (uint64_t *)((char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F70);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (uint64_t *)((char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v61 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v61 - v29;
  v31 = *(_QWORD *)a1;
  v32 = *((_QWORD *)a1 + 1);
  v75 = a2;
  v76 = a1;
  if (v31 == *(_QWORD *)a2 && v32 == *((_QWORD *)a2 + 1) || (v33 = 0, (sub_2408E617C() & 1) != 0))
  {
    v34 = type metadata accessor for TranscriptProtoActionResolverRequest(0);
    sub_2403A9210((uint64_t)&v76[*(int *)(v34 + 36)], (uint64_t)v30, &qword_256FFA3A0);
    v62 = v34;
    sub_2403A9210((uint64_t)&v75[*(int *)(v34 + 36)], (uint64_t)v28, &qword_256FFA3A0);
    v35 = (uint64_t)&v21[*(int *)(v19 + 48)];
    sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA3A0);
    sub_2403A9210((uint64_t)v28, v35, &qword_256FFA3A0);
    v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (v36((uint64_t)v21, 1, v15) == 1)
    {
      sub_2403A97FC((uint64_t)v28, &qword_256FFA3A0);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA3A0);
      if (v36(v35, 1, v15) == 1)
      {
        sub_2403A97FC((uint64_t)v21, &qword_256FFA3A0);
LABEL_15:
        v41 = v75;
        v42 = v76;
        if ((sub_2408BBF38(*((_QWORD *)v76 + 2), *((_QWORD *)v75 + 2)) & 1) == 0
          || v42[24] != v41[24]
          || v42[25] != v41[25])
        {
          goto LABEL_11;
        }
        v43 = v62;
        v44 = v71;
        sub_2403A9210((uint64_t)&v42[*(int *)(v62 + 40)], v71, &qword_256FFA300);
        v45 = v70;
        sub_2403A9210((uint64_t)&v41[*(int *)(v43 + 40)], v70, &qword_256FFA300);
        v46 = v73;
        v47 = v73 + *(int *)(v68 + 48);
        sub_2403A9210(v44, v73, &qword_256FFA300);
        sub_2403A9210(v45, v47, &qword_256FFA300);
        v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
        v49 = v72;
        if (v48(v46, 1, v72) == 1)
        {
          sub_2403A97FC(v45, &qword_256FFA300);
          sub_2403A97FC(v44, &qword_256FFA300);
          if (v48(v47, 1, v49) == 1)
          {
            sub_2403A97FC(v46, &qword_256FFA300);
            goto LABEL_26;
          }
        }
        else
        {
          v50 = v67;
          sub_2403A9210(v46, v67, &qword_256FFA300);
          if (v48(v47, 1, v49) != 1)
          {
            v51 = v66;
            sub_2403A91CC(v47, v66, type metadata accessor for TranscriptProtoStatementID);
            v52 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v50, v51);
            sub_240388AE4(v51, type metadata accessor for TranscriptProtoStatementID);
            sub_2403A97FC(v45, &qword_256FFA300);
            sub_2403A97FC(v44, &qword_256FFA300);
            sub_240388AE4(v50, type metadata accessor for TranscriptProtoStatementID);
            sub_2403A97FC(v46, &qword_256FFA300);
            if ((v52 & 1) != 0)
            {
LABEL_26:
              if (v42[26] == v41[26])
              {
                v54 = v62;
                v53 = v63;
                v55 = v65;
                v56 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v65 + 16);
                v57 = v74;
                v56(v63, &v42[*(int *)(v62 + 44)], v74);
                v58 = &v41[*(int *)(v54 + 44)];
                v59 = v64;
                v56(v64, v58, v57);
                sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                v33 = sub_2408E5CD8();
                v60 = *(void (**)(char *, uint64_t))(v55 + 8);
                v60(v59, v57);
                v60(v53, v57);
                return v33 & 1;
              }
            }
LABEL_11:
            v33 = 0;
            return v33 & 1;
          }
          sub_2403A97FC(v45, &qword_256FFA300);
          sub_2403A97FC(v44, &qword_256FFA300);
          sub_240388AE4(v50, type metadata accessor for TranscriptProtoStatementID);
        }
        v37 = &qword_257000C50;
        v38 = v46;
LABEL_10:
        sub_2403A97FC(v38, v37);
        goto LABEL_11;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA3A0);
      if (v36(v35, 1, v15) != 1)
      {
        sub_2403A91CC(v35, (uint64_t)v18, type metadata accessor for TranscriptProtoParameterSet);
        if ((sub_2408BC508(*v25, *v18) & 1) == 0)
        {
          sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoParameterSet);
          sub_2403A97FC((uint64_t)v28, &qword_256FFA3A0);
          sub_2403A97FC((uint64_t)v30, &qword_256FFA3A0);
          sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoParameterSet);
          v38 = (uint64_t)v21;
          v37 = &qword_256FFA3A0;
          goto LABEL_10;
        }
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v40 = sub_2408E5CD8();
        sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoParameterSet);
        sub_2403A97FC((uint64_t)v28, &qword_256FFA3A0);
        sub_2403A97FC((uint64_t)v30, &qword_256FFA3A0);
        sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoParameterSet);
        sub_2403A97FC((uint64_t)v21, &qword_256FFA3A0);
        if ((v40 & 1) == 0)
          goto LABEL_11;
        goto LABEL_15;
      }
      sub_2403A97FC((uint64_t)v28, &qword_256FFA3A0);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA3A0);
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoParameterSet);
    }
    v37 = &qword_257000F70;
    v38 = (uint64_t)v21;
    goto LABEL_10;
  }
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor36TranscriptProtoASTFlatExprDotVariantV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  char *v32;
  _QWORD *v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;

  v4 = sub_2408E57A4();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v43 - v7;
  v8 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
  v24 = *(int *)(v23 + 20);
  v49 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_257000DF8);
  v27 = *(int *)(v26 + 20);
  v50 = a2;
  sub_2403A9210((uint64_t)&a2[v27], (uint64_t)v20, &qword_257000DF8);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_257000DF8);
  sub_2403A9210((uint64_t)v20, v28, &qword_257000DF8);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_257000DF8);
    sub_2403A97FC((uint64_t)v22, &qword_257000DF8);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_257000DF8);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_257000DF8);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_257000DF8);
    sub_2403A97FC((uint64_t)v22, &qword_257000DF8);
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTFlatValue);
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_257000DF0);
LABEL_12:
    v34 = 0;
    return v34 & 1;
  }
  v30 = v44;
  sub_2403A91CC(v28, v44, type metadata accessor for TranscriptProtoASTFlatValue);
  v31 = _s23LighthouseDataProcessor27TranscriptProtoASTFlatValueV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v30);
  sub_240388AE4(v30, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2403A97FC((uint64_t)v20, &qword_257000DF8);
  sub_2403A97FC((uint64_t)v22, &qword_257000DF8);
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTFlatValue);
  sub_2403A97FC((uint64_t)v13, &qword_257000DF8);
  if ((v31 & 1) == 0)
    goto LABEL_12;
LABEL_8:
  v33 = v49;
  v32 = v50;
  if (*v49 == *(_QWORD *)v50 && v49[1] == *((_QWORD *)v50 + 1) || (v34 = 0, (sub_2408E617C() & 1) != 0))
  {
    v35 = (char *)v33 + *(int *)(v26 + 24);
    v37 = v47;
    v36 = v48;
    v38 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v39 = v45;
    v38(v45, v35, v48);
    v40 = v46;
    v38(v46, &v32[*(int *)(v26 + 24)], v36);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v34 = sub_2408E5CD8();
    v41 = *(void (**)(char *, uint64_t))(v37 + 8);
    v41(v40, v36);
    v41(v39, v36);
  }
  return v34 & 1;
}

uint64_t sub_2404D323C(uint64_t a1, uint64_t a2)
{
  return sub_2404DDCC0(a1, a2, type metadata accessor for ToolKitProtoTypedValue, &qword_257000CA8, &qword_256FFA3A8, static ToolKitProtoTypedValue.== infix(_:_:), type metadata accessor for TranscriptProtoTypeConversionResult);
}

uint64_t sub_2404D3268(uint64_t *a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v6 = sub_2408E57A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - v11;
  sub_2408C422C(*a1, a1[1]);
  if ((v13 & 1) != 0)
  {
    v14 = a1[2] == *(_QWORD *)(a2 + 16) && a1[3] == *(_QWORD *)(a2 + 24);
    if (v14 || (v15 = 0, (sub_2408E617C() & 1) != 0))
    {
      v16 = a3(0);
      v17 = (char *)a1 + *(int *)(v16 + 24);
      v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v18(v12, v17, v6);
      v18(v10, (char *)(a2 + *(int *)(v16 + 24)), v6);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v15 = sub_2408E5CD8();
      v19 = *(void (**)(char *, uint64_t))(v7 + 8);
      v19(v10, v6);
      v19(v12, v6);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t _s23LighthouseDataProcessor35TranscriptProtoExternalAgentRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  char v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;

  v78 = a2;
  v3 = sub_2408E57A4();
  v67 = *(_QWORD *)(v3 - 8);
  v68 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v66 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v65 = (char *)&v65 - v6;
  v77 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v72 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v70 = (uint64_t)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C38);
  MEMORY[0x24BDAC7A8](v71);
  v73 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v75 = (char *)&v65 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v76 = (char *)&v65 - v14;
  v15 = type metadata accessor for TranscriptProtoRequestContent(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001260);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA350);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v65 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v65 - v29;
  v74 = a1;
  sub_2403A9210(a1, (uint64_t)&v65 - v29, &qword_256FFA350);
  sub_2403A9210(v78, (uint64_t)v28, &qword_256FFA350);
  v31 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA350);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA350);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) == 1)
  {
    sub_2403A97FC((uint64_t)v28, &qword_256FFA350);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA350);
    if (v32(v31, 1, v15) == 1)
    {
      sub_2403A97FC((uint64_t)v21, &qword_256FFA350);
      goto LABEL_11;
    }
LABEL_6:
    v33 = &qword_257001260;
    v34 = (uint64_t)v21;
    goto LABEL_7;
  }
  sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA350);
  if (v32(v31, 1, v15) == 1)
  {
    sub_2403A97FC((uint64_t)v28, &qword_256FFA350);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA350);
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoRequestContent);
    goto LABEL_6;
  }
  sub_2403A91CC(v31, (uint64_t)v18, type metadata accessor for TranscriptProtoRequestContent);
  v37 = _s23LighthouseDataProcessor29TranscriptProtoRequestContentV2eeoiySbAC_ACtFZ_0((uint64_t)v25, (uint64_t)v18);
  sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoRequestContent);
  sub_2403A97FC((uint64_t)v28, &qword_256FFA350);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA350);
  sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoRequestContent);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA350);
  if ((v37 & 1) == 0)
    goto LABEL_8;
LABEL_11:
  v38 = (int *)type metadata accessor for TranscriptProtoExternalAgentRequest(0);
  v39 = v38[5];
  v40 = v74;
  v41 = (_QWORD *)(v74 + v39);
  v42 = *(_QWORD *)(v74 + v39 + 8);
  v43 = v78;
  v44 = (_QWORD *)(v78 + v39);
  v45 = v44[1];
  if (!v42)
  {
    v47 = (uint64_t)v76;
    v46 = v77;
    v48 = (uint64_t)v75;
    if (v45)
      goto LABEL_8;
LABEL_18:
    sub_2403A9210(v40 + v38[6], v47, &qword_256FFA368);
    sub_2403A9210(v43 + v38[6], v48, &qword_256FFA368);
    v49 = v73;
    v50 = v73 + *(int *)(v71 + 48);
    sub_2403A9210(v47, v73, &qword_256FFA368);
    v51 = v49;
    sub_2403A9210(v48, v50, &qword_256FFA368);
    v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
    if (v52(v51, 1, v46) == 1)
    {
      sub_2403A97FC(v48, &qword_256FFA368);
      sub_2403A97FC(v47, &qword_256FFA368);
      if (v52(v50, 1, v46) == 1)
      {
        sub_2403A97FC(v51, &qword_256FFA368);
LABEL_21:
        v53 = v40 + v38[7];
        v55 = v67;
        v54 = v68;
        v56 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
        v57 = v65;
        v56(v65, v53, v68);
        v58 = v43 + v38[7];
        v59 = v66;
        v56(v66, v58, v54);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v35 = sub_2408E5CD8();
        v60 = *(void (**)(char *, uint64_t))(v55 + 8);
        v60(v59, v54);
        v60(v57, v54);
        return v35 & 1;
      }
    }
    else
    {
      v61 = v69;
      sub_2403A9210(v51, v69, &qword_256FFA368);
      if (v52(v50, 1, v46) != 1)
      {
        v62 = (_QWORD *)v70;
        sub_2403A91CC(v50, v70, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
        if ((*(_QWORD *)v61 == *v62 && *(_QWORD *)(v61 + 8) == v62[1] || (sub_2408E617C() & 1) != 0)
          && (sub_2408BAD50(*(_QWORD **)(v61 + 16), *(_QWORD **)(v70 + 16)) & 1) != 0)
        {
          v63 = v70;
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v64 = sub_2408E5CD8();
          sub_240388AE4(v63, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
          sub_2403A97FC(v48, &qword_256FFA368);
          sub_2403A97FC(v47, &qword_256FFA368);
          sub_240388AE4(v61, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
          sub_2403A97FC(v51, &qword_256FFA368);
          if ((v64 & 1) != 0)
            goto LABEL_21;
          goto LABEL_8;
        }
        sub_240388AE4(v70, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
        sub_2403A97FC(v48, &qword_256FFA368);
        sub_2403A97FC(v47, &qword_256FFA368);
        sub_240388AE4(v61, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
        v34 = v51;
        v33 = &qword_256FFA368;
        goto LABEL_7;
      }
      sub_2403A97FC(v48, &qword_256FFA368);
      sub_2403A97FC(v47, &qword_256FFA368);
      sub_240388AE4(v61, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    }
    v33 = &qword_257000C38;
    v34 = v51;
LABEL_7:
    sub_2403A97FC(v34, v33);
LABEL_8:
    v35 = 0;
    return v35 & 1;
  }
  v47 = (uint64_t)v76;
  v46 = v77;
  v48 = (uint64_t)v75;
  if (!v45)
    goto LABEL_8;
  if (*v41 == *v44 && v42 == v45)
    goto LABEL_18;
  v35 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_18;
  return v35 & 1;
}

uint64_t _s23LighthouseDataProcessor35TranscriptProtoExternalAgentOutcomeV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  char v55;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v4 = sub_2408E57A4();
  v74 = *(_QWORD *)(v4 - 8);
  v75 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v73 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v72 = (char *)&v67 - v7;
  v8 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v78 = *(_QWORD *)(v8 - 8);
  v79 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v71 = (uint64_t)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CD8);
  MEMORY[0x24BDAC7A8](v77);
  v80 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v76 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v67 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v67 - v17;
  v19 = type metadata accessor for TranscriptProtoStatementID(0);
  v81 = *(_QWORD *)(v19 - 8);
  v82 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v67 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)&v67 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v67 - v32;
  if ((sub_2408BAD50(*(_QWORD **)a1, *(_QWORD **)a2) & 1) == 0)
    goto LABEL_16;
  v69 = v18;
  v70 = v28;
  v67 = v21;
  v68 = v16;
  v34 = type metadata accessor for TranscriptProtoExternalAgentOutcome(0);
  v35 = a1;
  sub_2403A9210((uint64_t)&a1[*(int *)(v34 + 20)], (uint64_t)v33, &qword_256FFA300);
  v36 = a2;
  sub_2403A9210((uint64_t)&a2[*(int *)(v34 + 20)], (uint64_t)v31, &qword_256FFA300);
  v37 = (uint64_t)&v24[*(int *)(v22 + 48)];
  sub_2403A9210((uint64_t)v33, (uint64_t)v24, &qword_256FFA300);
  sub_2403A9210((uint64_t)v31, v37, &qword_256FFA300);
  v38 = v82;
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
  if (v39((uint64_t)v24, 1, v82) != 1)
  {
    v40 = (uint64_t)v70;
    sub_2403A9210((uint64_t)v24, (uint64_t)v70, &qword_256FFA300);
    if (v39(v37, 1, v38) != 1)
    {
      v43 = v37;
      v44 = (uint64_t)v67;
      sub_2403A91CC(v43, (uint64_t)v67, type metadata accessor for TranscriptProtoStatementID);
      v45 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v40, v44);
      sub_240388AE4(v44, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v31, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v33, &qword_256FFA300);
      sub_240388AE4(v40, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
      if ((v45 & 1) == 0)
        goto LABEL_16;
      goto LABEL_9;
    }
    sub_2403A97FC((uint64_t)v31, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v33, &qword_256FFA300);
    sub_240388AE4(v40, type metadata accessor for TranscriptProtoStatementID);
LABEL_7:
    v41 = &qword_257000C50;
    v42 = (uint64_t)v24;
LABEL_15:
    sub_2403A97FC(v42, v41);
    goto LABEL_16;
  }
  sub_2403A97FC((uint64_t)v31, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v33, &qword_256FFA300);
  if (v39(v37, 1, v38) != 1)
    goto LABEL_7;
  sub_2403A97FC((uint64_t)v24, &qword_256FFA300);
LABEL_9:
  v46 = (uint64_t)&v35[*(int *)(v34 + 24)];
  v47 = v34;
  v48 = (uint64_t)v69;
  sub_2403A9210(v46, (uint64_t)v69, &qword_256FFA3E8);
  v82 = v47;
  v49 = (uint64_t)v68;
  sub_2403A9210((uint64_t)&v36[*(int *)(v47 + 24)], (uint64_t)v68, &qword_256FFA3E8);
  v50 = v80;
  v51 = v80 + *(int *)(v77 + 48);
  sub_2403A9210(v48, v80, &qword_256FFA3E8);
  sub_2403A9210(v49, v51, &qword_256FFA3E8);
  v52 = v79;
  v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  if (v53(v50, 1, v79) == 1)
  {
    sub_2403A97FC(v49, &qword_256FFA3E8);
    sub_2403A97FC(v48, &qword_256FFA3E8);
    if (v53(v51, 1, v52) == 1)
    {
      sub_2403A97FC(v50, &qword_256FFA3E8);
LABEL_19:
      v59 = v82;
      v61 = v74;
      v60 = v75;
      v62 = v36;
      v63 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
      v64 = v72;
      v63(v72, &v35[*(int *)(v82 + 28)], v75);
      v65 = v73;
      v63(v73, &v62[*(int *)(v59 + 28)], v60);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v55 = sub_2408E5CD8();
      v66 = *(void (**)(char *, uint64_t))(v61 + 8);
      v66(v65, v60);
      v66(v64, v60);
      return v55 & 1;
    }
    goto LABEL_14;
  }
  v54 = v76;
  sub_2403A9210(v50, v76, &qword_256FFA3E8);
  if (v53(v51, 1, v52) == 1)
  {
    sub_2403A97FC(v49, &qword_256FFA3E8);
    sub_2403A97FC(v48, &qword_256FFA3E8);
    sub_240388AE4(v54, type metadata accessor for TranscriptProtoStatementOutcome);
LABEL_14:
    v41 = &qword_257000CD8;
    v42 = v50;
    goto LABEL_15;
  }
  v57 = v71;
  sub_2403A91CC(v51, v71, type metadata accessor for TranscriptProtoStatementOutcome);
  v58 = _s23LighthouseDataProcessor31TranscriptProtoStatementOutcomeV2eeoiySbAC_ACtFZ_0(v54, v57);
  sub_240388AE4(v57, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2403A97FC(v49, &qword_256FFA3E8);
  sub_2403A97FC(v48, &qword_256FFA3E8);
  sub_240388AE4(v54, type metadata accessor for TranscriptProtoStatementOutcome);
  sub_2403A97FC(v50, &qword_256FFA3E8);
  if ((v58 & 1) != 0)
    goto LABEL_19;
LABEL_16:
  v55 = 0;
  return v55 & 1;
}

uint64_t _s23LighthouseDataProcessor35TranscriptProtoActionParameterValueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  char v46;
  uint64_t *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a2;
  v3 = sub_2408E57A4();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v58 - v6;
  v67 = type metadata accessor for TranscriptProtoPromptSelection(0);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v58 = (uint64_t *)((char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001208);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001210);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t *)((char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v58 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (uint64_t)&v58 - v14;
  v15 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001218);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001220);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v69 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_257001220);
  sub_2403A9210(v71, (uint64_t)v28, &qword_257001220);
  v31 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_257001220);
  sub_2403A9210((uint64_t)v28, v31, &qword_257001220);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) != 1)
  {
    sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_257001220);
    if (v32(v31, 1, v15) != 1)
    {
      sub_2403A91CC(v31, (uint64_t)v18, type metadata accessor for TranscriptProtoToolParameterValue);
      v35 = _s23LighthouseDataProcessor33TranscriptProtoToolParameterValueV2eeoiySbAC_ACtFZ_0((uint64_t)v25, (uint64_t)v18);
      sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoToolParameterValue);
      sub_2403A97FC((uint64_t)v28, &qword_257001220);
      sub_2403A97FC((uint64_t)v30, &qword_257001220);
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoToolParameterValue);
      sub_2403A97FC((uint64_t)v21, &qword_257001220);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_257001220);
    sub_2403A97FC((uint64_t)v30, &qword_257001220);
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoToolParameterValue);
LABEL_6:
    v33 = &qword_257001218;
    v34 = (uint64_t)v21;
LABEL_14:
    sub_2403A97FC(v34, v33);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_257001220);
  sub_2403A97FC((uint64_t)v30, &qword_257001220);
  if (v32(v31, 1, v15) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v21, &qword_257001220);
LABEL_8:
  v36 = type metadata accessor for TranscriptProtoActionParameterValue(0);
  v37 = v69;
  v38 = v66;
  sub_2403A9210(v69 + *(int *)(v36 + 20), v66, &qword_257001210);
  v40 = v70;
  v39 = v71;
  sub_2403A9210(v71 + *(int *)(v36 + 20), v70, &qword_257001210);
  v41 = v68;
  v42 = v68 + *(int *)(v64 + 48);
  sub_2403A9210(v38, v68, &qword_257001210);
  sub_2403A9210(v40, v42, &qword_257001210);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v44 = v67;
  if (v43(v41, 1, v67) == 1)
  {
    sub_2403A97FC(v40, &qword_257001210);
    sub_2403A97FC(v38, &qword_257001210);
    if (v43(v42, 1, v44) == 1)
    {
      sub_2403A97FC(v41, &qword_257001210);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v41, (uint64_t)v63, &qword_257001210);
  if (v43(v42, 1, v44) == 1)
  {
    sub_2403A97FC(v70, &qword_257001210);
    sub_2403A97FC(v38, &qword_257001210);
    sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoPromptSelection);
LABEL_13:
    v33 = &qword_257001208;
    v34 = v41;
    goto LABEL_14;
  }
  v48 = v58;
  sub_2403A91CC(v42, (uint64_t)v58, type metadata accessor for TranscriptProtoPromptSelection);
  v49 = _s23LighthouseDataProcessor30TranscriptProtoPromptSelectionV2eeoiySbAC_ACtFZ_0(v45, v48);
  sub_240388AE4((uint64_t)v48, type metadata accessor for TranscriptProtoPromptSelection);
  sub_2403A97FC(v70, &qword_257001210);
  sub_2403A97FC(v38, &qword_257001210);
  sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoPromptSelection);
  sub_2403A97FC(v41, &qword_257001210);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t sub_2404D4880(uint64_t a1, uint64_t a2)
{
  return sub_2404D488C(a1, a2, type metadata accessor for TranscriptProtoASTExprSearchVariant);
}

uint64_t sub_2404D488C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v6 = sub_2408E57A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - v11;
  v13 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v13 || (v14 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (*(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16)
      && *(unsigned __int8 *)(a1 + 17) == *(unsigned __int8 *)(a2 + 17))
    {
      v15 = a3(0);
      v16 = a1 + *(int *)(v15 + 28);
      v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v17(v12, v16, v6);
      v17(v10, a2 + *(int *)(v15 + 28), v6);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_2408E5CD8();
      v18 = *(void (**)(char *, uint64_t))(v7 + 8);
      v18(v10, v6);
      v18(v12, v6);
    }
    else
    {
      v14 = 0;
    }
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor35TranscriptProtoASTExprPrefixVariantV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  char v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unsigned __int8 *, uint64_t);
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_2408E57A4();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - v8;
  v10 = type metadata accessor for TranscriptProtoASTExpr(0);
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF0);
  MEMORY[0x24BDAC7A8](v46);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v41 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v41 - v21;
  if (*a1 != *a2)
    goto LABEL_8;
  v23 = a1;
  v24 = a2;
  v25 = v20;
  v41 = v12;
  v42 = v9;
  v43 = v7;
  v26 = type metadata accessor for TranscriptProtoASTExprPrefixVariant(0);
  v27 = v23;
  sub_2403A9210((uint64_t)&v23[*(int *)(v26 + 20)], (uint64_t)v22, &qword_257000CF8);
  v28 = v24;
  sub_2403A9210((uint64_t)&v24[*(int *)(v26 + 20)], (uint64_t)v19, &qword_257000CF8);
  v29 = (uint64_t)&v14[*(int *)(v46 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v14, &qword_257000CF8);
  sub_2403A9210((uint64_t)v19, v29, &qword_257000CF8);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  if (v30((uint64_t)v14, 1, v48) == 1)
  {
    sub_2403A97FC((uint64_t)v19, &qword_257000CF8);
    sub_2403A97FC((uint64_t)v22, &qword_257000CF8);
    if (v30(v29, 1, v48) == 1)
    {
      sub_2403A97FC((uint64_t)v14, &qword_257000CF8);
LABEL_11:
      v36 = v44;
      v35 = v45;
      v37 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v44 + 16);
      v38 = v42;
      v37(v42, &v27[*(int *)(v26 + 24)], v45);
      v39 = v43;
      v37(v43, &v28[*(int *)(v26 + 24)], v35);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v31 = sub_2408E5CD8();
      v40 = *(void (**)(char *, uint64_t))(v36 + 8);
      v40(v39, v35);
      v40(v38, v35);
      return v31 & 1;
    }
    goto LABEL_7;
  }
  sub_2403A9210((uint64_t)v14, v25, &qword_257000CF8);
  if (v30(v29, 1, v48) == 1)
  {
    sub_2403A97FC((uint64_t)v19, &qword_257000CF8);
    sub_2403A97FC((uint64_t)v22, &qword_257000CF8);
    sub_240388AE4(v25, type metadata accessor for TranscriptProtoASTExpr);
LABEL_7:
    sub_2403A97FC((uint64_t)v14, &qword_257000CF0);
    goto LABEL_8;
  }
  v33 = (uint64_t)v41;
  sub_2403A91CC(v29, (uint64_t)v41, type metadata accessor for TranscriptProtoASTExpr);
  v34 = _s23LighthouseDataProcessor22TranscriptProtoASTExprV2eeoiySbAC_ACtFZ_0(v25, v33);
  sub_240388AE4(v33, type metadata accessor for TranscriptProtoASTExpr);
  sub_2403A97FC((uint64_t)v19, &qword_257000CF8);
  sub_2403A97FC((uint64_t)v22, &qword_257000CF8);
  sub_240388AE4(v25, type metadata accessor for TranscriptProtoASTExpr);
  sub_2403A97FC((uint64_t)v14, &qword_257000CF8);
  if ((v34 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v31 = 0;
  return v31 & 1;
}

uint64_t _s23LighthouseDataProcessor34TranscriptProtoUIConfirmationLabelV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    v13 = a1[2] == *((_QWORD *)a2 + 2) && a1[3] == *((_QWORD *)a2 + 3);
    if (v13 || (v12 = 0, (sub_2408E617C() & 1) != 0))
    {
      v14 = type metadata accessor for TranscriptProtoUIConfirmationLabel(0);
      v15 = (char *)a1 + *(int *)(v14 + 24);
      v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v16(v10, v15, v4);
      v16(v8, &a2[*(int *)(v14 + 24)], v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_2408E5CD8();
      v17 = *(void (**)(char *, uint64_t))(v5 + 8);
      v17(v8, v4);
      v17(v10, v4);
    }
  }
  return v12 & 1;
}

uint64_t sub_2404D4F4C(_QWORD *a1, char *a2)
{
  return sub_2404D4F58(a1, a2, type metadata accessor for TranscriptProtoSafetyModeException);
}

uint64_t sub_2404D4F58(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_2408E57A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - v11;
  v13 = a1[1];
  v14 = *((_QWORD *)a2 + 1);
  if (!v13)
  {
    if (!v14)
    {
LABEL_11:
      v17 = a3(0);
      v18 = (char *)a1 + *(int *)(v17 + 20);
      v19 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v19(v12, v18, v6);
      v19(v10, &a2[*(int *)(v17 + 20)], v6);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v16 = sub_2408E5CD8();
      v20 = *(void (**)(char *, uint64_t))(v7 + 8);
      v20(v10, v6);
      v20(v12, v6);
      return v16 & 1;
    }
LABEL_10:
    v16 = 0;
    return v16 & 1;
  }
  if (!v14)
    goto LABEL_10;
  if (*a1 == *(_QWORD *)a2 && v13 == v14)
    goto LABEL_11;
  v16 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_11;
  return v16 & 1;
}

uint64_t _s23LighthouseDataProcessor34TranscriptProtoParameterNotAllowedV2eeoiySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  char *v31;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;

  v4 = sub_2408E57A4();
  v46 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v43 - v7;
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = *a1;
  v24 = a1[1];
  v25 = *a2;
  v26 = a2[1];
  v48 = a2;
  if (v23 == v25 && v24 == v26 || (v27 = 0, (sub_2408E617C() & 1) != 0))
  {
    v43 = v4;
    v28 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
    sub_2403A9210((uint64_t)a1 + *(int *)(v28 + 24), (uint64_t)v22, &qword_256FFA3A8);
    sub_2403A9210((uint64_t)v48 + *(int *)(v28 + 24), (uint64_t)v20, &qword_256FFA3A8);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA3A8);
    sub_2403A9210((uint64_t)v20, v29, &qword_256FFA3A8);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
      if (v30(v29, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
LABEL_11:
        v33 = v48;
        if (*((unsigned __int8 *)a1 + 16) == *((unsigned __int8 *)v48 + 16))
        {
          v34 = (uint64_t)a1 + *(int *)(v28 + 28);
          v35 = v46;
          v36 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
          v37 = v43;
          v38 = v44;
          v36(v44, v34, v43);
          v39 = (uint64_t)v33 + *(int *)(v28 + 28);
          v40 = v45;
          v36(v45, v39, v37);
          sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v27 = sub_2408E5CD8();
          v41 = *(void (**)(char *, uint64_t))(v35 + 8);
          v41(v40, v37);
          v41(v38, v37);
          return v27 & 1;
        }
LABEL_13:
        v27 = 0;
        return v27 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA3A8);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v47;
        sub_2403A91CC(v29, (uint64_t)v47, type metadata accessor for ToolKitProtoTypedValue);
        v32 = static ToolKitProtoTypedValue.== infix(_:_:)(v17, v31);
        sub_240388AE4((uint64_t)v31, type metadata accessor for ToolKitProtoTypedValue);
        sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
        sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
        sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue);
        sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
        if ((v32 & 1) == 0)
          goto LABEL_13;
        goto LABEL_11;
      }
      sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
      sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
      sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue);
    }
    sub_2403A97FC((uint64_t)v13, &qword_257000CA8);
    goto LABEL_13;
  }
  return v27 & 1;
}

uint64_t _s23LighthouseDataProcessor34TranscriptProtoASTExprInfixVariantV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, unsigned __int8 *, uint64_t);
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  unsigned __int8 *v62;
  char *v63;
  unsigned __int8 *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v4 = sub_2408E57A4();
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v69 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v60 - v7;
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v72 = *(_QWORD *)(v9 - 8);
  v73 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v60 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8]((char *)&v60 - v22);
  v25 = (char *)&v60 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v31 = (char *)&v60 - v30;
  if (*a1 != *a2)
    goto LABEL_16;
  v65 = v26;
  v66 = v29;
  v67 = v28;
  v68 = v11;
  v60 = v8;
  v61 = v27;
  v63 = v15;
  v32 = type metadata accessor for TranscriptProtoASTExprInfixVariant(0);
  v33 = *(int *)(v32 + 20);
  v64 = a1;
  sub_2403A9210((uint64_t)&a1[v33], (uint64_t)v31, &qword_257000CF8);
  v34 = *(int *)(v32 + 20);
  v62 = a2;
  sub_2403A9210((uint64_t)&a2[v34], (uint64_t)v25, &qword_257000CF8);
  v35 = (uint64_t)&v17[*(int *)(v12 + 48)];
  sub_2403A9210((uint64_t)v31, (uint64_t)v17, &qword_257000CF8);
  sub_2403A9210((uint64_t)v25, v35, &qword_257000CF8);
  v36 = v73;
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  if (v37((uint64_t)v17, 1, v73) != 1)
  {
    v38 = v65;
    sub_2403A9210((uint64_t)v17, v65, &qword_257000CF8);
    v39 = v37(v35, 1, v36);
    v40 = (uint64_t)v68;
    if (v39 != 1)
    {
      sub_2403A91CC(v35, (uint64_t)v68, type metadata accessor for TranscriptProtoASTExpr);
      LODWORD(v72) = _s23LighthouseDataProcessor22TranscriptProtoASTExprV2eeoiySbAC_ACtFZ_0(v38, v40);
      sub_240388AE4(v40, type metadata accessor for TranscriptProtoASTExpr);
      sub_2403A97FC((uint64_t)v25, &qword_257000CF8);
      sub_2403A97FC((uint64_t)v31, &qword_257000CF8);
      sub_240388AE4(v38, type metadata accessor for TranscriptProtoASTExpr);
      sub_2403A97FC((uint64_t)v17, &qword_257000CF8);
      if ((v72 & 1) == 0)
        goto LABEL_16;
      goto LABEL_9;
    }
    sub_2403A97FC((uint64_t)v25, &qword_257000CF8);
    sub_2403A97FC((uint64_t)v31, &qword_257000CF8);
    sub_240388AE4(v38, type metadata accessor for TranscriptProtoASTExpr);
LABEL_7:
    v41 = (uint64_t)v17;
LABEL_15:
    sub_2403A97FC(v41, &qword_257000CF0);
    goto LABEL_16;
  }
  sub_2403A97FC((uint64_t)v25, &qword_257000CF8);
  sub_2403A97FC((uint64_t)v31, &qword_257000CF8);
  if (v37(v35, 1, v36) != 1)
    goto LABEL_7;
  sub_2403A97FC((uint64_t)v17, &qword_257000CF8);
LABEL_9:
  v42 = v64;
  v43 = v67;
  sub_2403A9210((uint64_t)&v64[*(int *)(v32 + 24)], v67, &qword_257000CF8);
  v73 = v32;
  v44 = v62;
  v45 = v66;
  sub_2403A9210((uint64_t)&v62[*(int *)(v32 + 24)], v66, &qword_257000CF8);
  v46 = (uint64_t)v63;
  v47 = (uint64_t)&v63[*(int *)(v12 + 48)];
  sub_2403A9210(v43, (uint64_t)v63, &qword_257000CF8);
  sub_2403A9210(v45, v47, &qword_257000CF8);
  if (v37(v46, 1, v36) == 1)
  {
    sub_2403A97FC(v45, &qword_257000CF8);
    sub_2403A97FC(v43, &qword_257000CF8);
    if (v37(v47, 1, v36) == 1)
    {
      sub_2403A97FC(v46, &qword_257000CF8);
LABEL_19:
      v53 = v73;
      v55 = v70;
      v54 = v71;
      v56 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v70 + 16);
      v57 = v60;
      v56(v60, &v42[*(int *)(v73 + 28)], v71);
      v58 = v69;
      v56(v69, &v44[*(int *)(v53 + 28)], v54);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v49 = sub_2408E5CD8();
      v59 = *(void (**)(char *, uint64_t))(v55 + 8);
      v59(v58, v54);
      v59(v57, v54);
      return v49 & 1;
    }
    goto LABEL_14;
  }
  v48 = v61;
  sub_2403A9210(v46, v61, &qword_257000CF8);
  if (v37(v47, 1, v36) == 1)
  {
    sub_2403A97FC(v66, &qword_257000CF8);
    sub_2403A97FC(v67, &qword_257000CF8);
    sub_240388AE4(v48, type metadata accessor for TranscriptProtoASTExpr);
LABEL_14:
    v41 = v46;
    goto LABEL_15;
  }
  v51 = (uint64_t)v68;
  sub_2403A91CC(v47, (uint64_t)v68, type metadata accessor for TranscriptProtoASTExpr);
  v52 = _s23LighthouseDataProcessor22TranscriptProtoASTExprV2eeoiySbAC_ACtFZ_0(v48, v51);
  sub_240388AE4(v51, type metadata accessor for TranscriptProtoASTExpr);
  sub_2403A97FC(v66, &qword_257000CF8);
  sub_2403A97FC(v67, &qword_257000CF8);
  sub_240388AE4(v48, type metadata accessor for TranscriptProtoASTExpr);
  sub_2403A97FC(v46, &qword_257000CF8);
  if ((v52 & 1) != 0)
    goto LABEL_19;
LABEL_16:
  v49 = 0;
  return v49 & 1;
}

uint64_t _s23LighthouseDataProcessor34TranscriptProtoASTExprIndexVariantV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v4 = sub_2408E57A4();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v60 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v58 - v7;
  v8 = type metadata accessor for TranscriptProtoASTExpr(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v64 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v66 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v58 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v63 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v65 = (uint64_t)&v58 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v69 = (uint64_t)&v58 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v58 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v67 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_257000CF8);
  v68 = a2;
  sub_2403A9210(a2, (uint64_t)v28, &qword_257000CF8);
  v31 = (uint64_t)&v15[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v15, &qword_257000CF8);
  sub_2403A9210((uint64_t)v28, v31, &qword_257000CF8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v32((uint64_t)v15, 1, v8) != 1)
  {
    sub_2403A9210((uint64_t)v15, (uint64_t)v25, &qword_257000CF8);
    if (v32(v31, 1, v8) != 1)
    {
      v34 = v64;
      sub_2403A91CC(v31, v64, type metadata accessor for TranscriptProtoASTExpr);
      v35 = _s23LighthouseDataProcessor22TranscriptProtoASTExprV2eeoiySbAC_ACtFZ_0(v25, v34);
      sub_240388AE4(v34, type metadata accessor for TranscriptProtoASTExpr);
      sub_2403A97FC((uint64_t)v28, &qword_257000CF8);
      sub_2403A97FC((uint64_t)v30, &qword_257000CF8);
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoASTExpr);
      sub_2403A97FC((uint64_t)v15, &qword_257000CF8);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_257000CF8);
    sub_2403A97FC((uint64_t)v30, &qword_257000CF8);
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoASTExpr);
LABEL_6:
    v33 = (uint64_t)v15;
LABEL_14:
    sub_2403A97FC(v33, &qword_257000CF0);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_257000CF8);
  sub_2403A97FC((uint64_t)v30, &qword_257000CF8);
  if (v32(v31, 1, v8) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v15, &qword_257000CF8);
LABEL_8:
  v36 = type metadata accessor for TranscriptProtoASTExprIndexVariant(0);
  v37 = v67;
  v38 = v69;
  sub_2403A9210(v67 + *(int *)(v36 + 20), v69, &qword_257000CF8);
  v39 = v68;
  v40 = v65;
  sub_2403A9210(v68 + *(int *)(v36 + 20), v65, &qword_257000CF8);
  v41 = *(int *)(v11 + 48);
  v42 = v40;
  v43 = v66;
  v44 = v66 + v41;
  sub_2403A9210(v38, v66, &qword_257000CF8);
  sub_2403A9210(v42, v44, &qword_257000CF8);
  if (v32(v43, 1, v8) == 1)
  {
    sub_2403A97FC(v42, &qword_257000CF8);
    sub_2403A97FC(v38, &qword_257000CF8);
    if (v32(v44, 1, v8) == 1)
    {
      sub_2403A97FC(v43, &qword_257000CF8);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v43, v63, &qword_257000CF8);
  if (v32(v44, 1, v8) == 1)
  {
    sub_2403A97FC(v42, &qword_257000CF8);
    sub_2403A97FC(v69, &qword_257000CF8);
    sub_240388AE4(v45, type metadata accessor for TranscriptProtoASTExpr);
LABEL_13:
    v33 = v43;
    goto LABEL_14;
  }
  v48 = v64;
  sub_2403A91CC(v44, v64, type metadata accessor for TranscriptProtoASTExpr);
  v49 = _s23LighthouseDataProcessor22TranscriptProtoASTExprV2eeoiySbAC_ACtFZ_0(v45, v48);
  sub_240388AE4(v48, type metadata accessor for TranscriptProtoASTExpr);
  sub_2403A97FC(v42, &qword_257000CF8);
  sub_2403A97FC(v69, &qword_257000CF8);
  sub_240388AE4(v45, type metadata accessor for TranscriptProtoASTExpr);
  sub_2403A97FC(v43, &qword_257000CF8);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t _s23LighthouseDataProcessor33TranscriptProtoToolParameterValueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CE8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEE58);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFEE58);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFEE58);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFEE58);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFEE58);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFEE58);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoToolParameterValueEnum);
      v25 = _s23LighthouseDataProcessor37TranscriptProtoToolParameterValueEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoToolParameterValueEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFEE58);
      sub_2403A97FC((uint64_t)v21, &qword_256FFEE58);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoToolParameterValueEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFEE58);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFEE58);
    sub_2403A97FC((uint64_t)v21, &qword_256FFEE58);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoToolParameterValueEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000CE8);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFEE58);
  sub_2403A97FC((uint64_t)v21, &qword_256FFEE58);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFEE58);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoToolParameterValue(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t sub_2404D64D4(_QWORD *a1, char *a2)
{
  return sub_2404D64E8(a1, a2, sub_2408BC91C, type metadata accessor for TranscriptProtoToolDisambiguation);
}

uint64_t sub_2404D64E8(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v8 = sub_2408E57A4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v24 - v13;
  v15 = a1[2];
  v16 = *((_QWORD *)a2 + 2);
  if (!v15)
  {
    if (v16)
      goto LABEL_12;
    goto LABEL_10;
  }
  if (!v16)
    goto LABEL_12;
  v17 = a1[1] == *((_QWORD *)a2 + 1) && v15 == v16;
  if (v17 || (v18 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_10:
    if ((a3(*a1, *(_QWORD *)a2) & 1) != 0)
    {
      v19 = a4(0);
      v20 = (char *)a1 + *(int *)(v19 + 24);
      v21 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      v21(v14, v20, v8);
      v21(v12, &a2[*(int *)(v19 + 24)], v8);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v18 = sub_2408E5CD8();
      v22 = *(void (**)(char *, uint64_t))(v9 + 8);
      v22(v12, v8);
      v22(v14, v8);
      return v18 & 1;
    }
LABEL_12:
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t _s23LighthouseDataProcessor33TranscriptProtoActionCancellationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v4 = sub_2408E57A4();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v60 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v58 - v7;
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v64 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v66 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v58 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v63 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v65 = (uint64_t)&v58 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v69 = (uint64_t)&v58 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v58 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v67 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_256FFA300);
  v68 = a2;
  sub_2403A9210(a2, (uint64_t)v28, &qword_256FFA300);
  v31 = (uint64_t)&v15[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v15, &qword_256FFA300);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA300);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v32((uint64_t)v15, 1, v8) != 1)
  {
    sub_2403A9210((uint64_t)v15, (uint64_t)v25, &qword_256FFA300);
    if (v32(v31, 1, v8) != 1)
    {
      v34 = v64;
      sub_2403A91CC(v31, v64, type metadata accessor for TranscriptProtoStatementID);
      v35 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v25, v34);
      sub_240388AE4(v34, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v15, &qword_256FFA300);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v33 = (uint64_t)v15;
LABEL_14:
    sub_2403A97FC(v33, &qword_257000C50);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
  if (v32(v31, 1, v8) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v15, &qword_256FFA300);
LABEL_8:
  v36 = type metadata accessor for TranscriptProtoActionCancellation(0);
  v37 = v67;
  v38 = v69;
  sub_2403A9210(v67 + *(int *)(v36 + 20), v69, &qword_256FFA300);
  v39 = v68;
  v40 = v65;
  sub_2403A9210(v68 + *(int *)(v36 + 20), v65, &qword_256FFA300);
  v41 = *(int *)(v11 + 48);
  v42 = v40;
  v43 = v66;
  v44 = v66 + v41;
  sub_2403A9210(v38, v66, &qword_256FFA300);
  sub_2403A9210(v42, v44, &qword_256FFA300);
  if (v32(v43, 1, v8) == 1)
  {
    sub_2403A97FC(v42, &qword_256FFA300);
    sub_2403A97FC(v38, &qword_256FFA300);
    if (v32(v44, 1, v8) == 1)
    {
      sub_2403A97FC(v43, &qword_256FFA300);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v43, v63, &qword_256FFA300);
  if (v32(v44, 1, v8) == 1)
  {
    sub_2403A97FC(v42, &qword_256FFA300);
    sub_2403A97FC(v69, &qword_256FFA300);
    sub_240388AE4(v45, type metadata accessor for TranscriptProtoStatementID);
LABEL_13:
    v33 = v43;
    goto LABEL_14;
  }
  v48 = v64;
  sub_2403A91CC(v44, v64, type metadata accessor for TranscriptProtoStatementID);
  v49 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v45, v48);
  sub_240388AE4(v48, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v42, &qword_256FFA300);
  sub_2403A97FC(v69, &qword_256FFA300);
  sub_240388AE4(v45, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v43, &qword_256FFA300);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t sub_2404D6C74(_QWORD *a1, char *a2)
{
  return sub_2404D4F58(a1, a2, type metadata accessor for TranscriptProtoASTExprUndoVariant);
}

uint64_t _s23LighthouseDataProcessor33TranscriptProtoASTExprPickVariantV2eeoiySbAC_ACtFZ_0(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t *v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;

  v4 = sub_2408E57A4();
  v44 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v40 - v7;
  v8 = type metadata accessor for TranscriptProtoASTPickType(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v41 = (uint64_t *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D00);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v40 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v40 - v21;
  v23 = *a1;
  v24 = a1[1];
  v25 = *(_QWORD *)a2;
  v26 = *((_QWORD *)a2 + 1);
  v45 = a2;
  if (v23 == v25 && v24 == v26 || (v27 = 0, (sub_2408E617C() & 1) != 0))
  {
    v40 = v4;
    v28 = type metadata accessor for TranscriptProtoASTExprPickVariant(0);
    sub_2403A9210((uint64_t)a1 + *(int *)(v28 + 20), (uint64_t)v22, &qword_257000D08);
    sub_2403A9210((uint64_t)&v45[*(int *)(v28 + 20)], (uint64_t)v20, &qword_257000D08);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_257000D08);
    sub_2403A9210((uint64_t)v20, v29, &qword_257000D08);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_257000D08);
      sub_2403A97FC((uint64_t)v22, &qword_257000D08);
      if (v30(v29, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_257000D08);
LABEL_11:
        v33 = v44;
        v34 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
        v35 = v42;
        v36 = v40;
        v34(v42, (char *)a1 + *(int *)(v28 + 24), v40);
        v37 = v43;
        v34(v43, &v45[*(int *)(v28 + 24)], v36);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v27 = sub_2408E5CD8();
        v38 = *(void (**)(char *, uint64_t))(v33 + 8);
        v38(v37, v36);
        v38(v35, v36);
        return v27 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_257000D08);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v41;
        sub_2403A91CC(v29, (uint64_t)v41, type metadata accessor for TranscriptProtoASTPickType);
        v32 = _s23LighthouseDataProcessor26TranscriptProtoASTPickTypeV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v31);
        sub_240388AE4((uint64_t)v31, type metadata accessor for TranscriptProtoASTPickType);
        sub_2403A97FC((uint64_t)v20, &qword_257000D08);
        sub_2403A97FC((uint64_t)v22, &qword_257000D08);
        sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTPickType);
        sub_2403A97FC((uint64_t)v13, &qword_257000D08);
        if ((v32 & 1) != 0)
          goto LABEL_11;
LABEL_12:
        v27 = 0;
        return v27 & 1;
      }
      sub_2403A97FC((uint64_t)v20, &qword_257000D08);
      sub_2403A97FC((uint64_t)v22, &qword_257000D08);
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTPickType);
    }
    sub_2403A97FC((uint64_t)v13, &qword_257000D00);
    goto LABEL_12;
  }
  return v27 & 1;
}

uint64_t _s23LighthouseDataProcessor32TranscriptProtoPickOneExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoStatementID(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA300);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA300);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA300);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA300);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA300);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoStatementID);
      v25 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA300);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000C50);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA300);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoPickOneExpression(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor32TranscriptProtoConfirmExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoStatementID(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA300);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA300);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA300);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA300);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA300);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoStatementID);
      v25 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA300);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000C50);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA300);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoConfirmExpression(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor36TranscriptProtoPermissionRequirementV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  void (*v15)(char *, unsigned __int8 *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  v11 = *a1;
  v12 = *a2;
  if (v11 != 8)
  {
    if (v12 != 8 && v11 == v12)
      goto LABEL_3;
LABEL_8:
    v16 = 0;
    return v16 & 1;
  }
  if (v12 != 8)
    goto LABEL_8;
LABEL_3:
  v13 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
  v14 = &a1[*(int *)(v13 + 20)];
  v15 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
  v15(v10, v14, v4);
  v15(v8, &a2[*(int *)(v13 + 20)], v4);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v16 = sub_2408E5CD8();
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  return v16 & 1;
}

uint64_t _s23LighthouseDataProcessor32TranscriptProtoActionRequirementV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001180);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3C8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFA3C8);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA3C8);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA3C8);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA3C8);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA3C8);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for TranscriptProtoActionRequirementEnum);
      _s23LighthouseDataProcessor36TranscriptProtoActionRequirementEnumO2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoActionRequirementEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA3C8);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA3C8);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoActionRequirementEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA3C8);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA3C8);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA3C8);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoActionRequirementEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257001180);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA3C8);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA3C8);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA3C8);
LABEL_8:
  v27 = type metadata accessor for TranscriptProtoActionRequirement(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor32TranscriptProtoASTFlatAssignExprV2eeoiySbAC_ACtFZ_0(uint64_t *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;

  v4 = sub_2408E57A4();
  v44 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v40 - v7;
  v8 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v41 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F18);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F20);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v40 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v40 - v21;
  v23 = *a1;
  v24 = a1[1];
  v25 = *(_QWORD *)a2;
  v26 = *((_QWORD *)a2 + 1);
  v45 = a2;
  if (v23 == v25 && v24 == v26 || (v27 = 0, (sub_2408E617C() & 1) != 0))
  {
    v40 = v4;
    v28 = type metadata accessor for TranscriptProtoASTFlatAssignExpr(0);
    sub_2403A9210((uint64_t)a1 + *(int *)(v28 + 20), (uint64_t)v22, &qword_257000F20);
    sub_2403A9210((uint64_t)&v45[*(int *)(v28 + 20)], (uint64_t)v20, &qword_257000F20);
    v29 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_257000F20);
    sub_2403A9210((uint64_t)v20, v29, &qword_257000F20);
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v30((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_257000F20);
      sub_2403A97FC((uint64_t)v22, &qword_257000F20);
      if (v30(v29, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_257000F20);
LABEL_11:
        v33 = v44;
        v34 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
        v35 = v42;
        v36 = v40;
        v34(v42, (char *)a1 + *(int *)(v28 + 24), v40);
        v37 = v43;
        v34(v43, &v45[*(int *)(v28 + 24)], v36);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v27 = sub_2408E5CD8();
        v38 = *(void (**)(char *, uint64_t))(v33 + 8);
        v38(v37, v36);
        v38(v35, v36);
        return v27 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_257000F20);
      if (v30(v29, 1, v8) != 1)
      {
        v31 = v41;
        sub_2403A91CC(v29, v41, type metadata accessor for TranscriptProtoASTFlatExpr);
        v32 = _s23LighthouseDataProcessor26TranscriptProtoASTFlatExprV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v31);
        sub_240388AE4(v31, type metadata accessor for TranscriptProtoASTFlatExpr);
        sub_2403A97FC((uint64_t)v20, &qword_257000F20);
        sub_2403A97FC((uint64_t)v22, &qword_257000F20);
        sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTFlatExpr);
        sub_2403A97FC((uint64_t)v13, &qword_257000F20);
        if ((v32 & 1) != 0)
          goto LABEL_11;
LABEL_12:
        v27 = 0;
        return v27 & 1;
      }
      sub_2403A97FC((uint64_t)v20, &qword_257000F20);
      sub_2403A97FC((uint64_t)v22, &qword_257000F20);
      sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTFlatExpr);
    }
    sub_2403A97FC((uint64_t)v13, &qword_257000F18);
    goto LABEL_12;
  }
  return v27 & 1;
}

uint64_t _s23LighthouseDataProcessor32TranscriptProtoASTExprDotVariantV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  char *v32;
  _QWORD *v33;
  char v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;

  v4 = sub_2408E57A4();
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v43 - v7;
  v8 = type metadata accessor for TranscriptProtoASTExpr(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for TranscriptProtoASTExprDotVariant(0);
  v24 = *(int *)(v23 + 20);
  v49 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_257000CF8);
  v27 = *(int *)(v26 + 20);
  v50 = a2;
  sub_2403A9210((uint64_t)&a2[v27], (uint64_t)v20, &qword_257000CF8);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_257000CF8);
  sub_2403A9210((uint64_t)v20, v28, &qword_257000CF8);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_257000CF8);
    sub_2403A97FC((uint64_t)v22, &qword_257000CF8);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_257000CF8);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_257000CF8);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_257000CF8);
    sub_2403A97FC((uint64_t)v22, &qword_257000CF8);
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTExpr);
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_257000CF0);
LABEL_12:
    v34 = 0;
    return v34 & 1;
  }
  v30 = v44;
  sub_2403A91CC(v28, v44, type metadata accessor for TranscriptProtoASTExpr);
  v31 = _s23LighthouseDataProcessor22TranscriptProtoASTExprV2eeoiySbAC_ACtFZ_0(v17, v30);
  sub_240388AE4(v30, type metadata accessor for TranscriptProtoASTExpr);
  sub_2403A97FC((uint64_t)v20, &qword_257000CF8);
  sub_2403A97FC((uint64_t)v22, &qword_257000CF8);
  sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTExpr);
  sub_2403A97FC((uint64_t)v13, &qword_257000CF8);
  if ((v31 & 1) == 0)
    goto LABEL_12;
LABEL_8:
  v33 = v49;
  v32 = v50;
  if (*v49 == *(_QWORD *)v50 && v49[1] == *((_QWORD *)v50 + 1) || (v34 = 0, (sub_2408E617C() & 1) != 0))
  {
    v35 = (char *)v33 + *(int *)(v26 + 24);
    v37 = v47;
    v36 = v48;
    v38 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
    v39 = v45;
    v38(v45, v35, v48);
    v40 = v46;
    v38(v46, &v32[*(int *)(v26 + 24)], v36);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v34 = sub_2408E5CD8();
    v41 = *(void (**)(char *, uint64_t))(v37 + 8);
    v41(v40, v36);
    v41(v39, v36);
  }
  return v34 & 1;
}

uint64_t sub_2404D8528(uint64_t a1, uint64_t a2)
{
  return sub_2404D488C(a1, a2, type metadata accessor for TranscriptProtoSearchExpression);
}

uint64_t _s23LighthouseDataProcessor31TranscriptProtoRejectExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoStatementID(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA300);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA300);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA300);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA300);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA300);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoStatementID);
      v25 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA300);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000C50);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA300);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoRejectExpression(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t sub_2404D88FC(_QWORD *a1, char *a2)
{
  return sub_2404E4C74(a1, a2, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
}

uint64_t _s23LighthouseDataProcessor34TranscriptProtoPlanGenerationErrorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_2408E57A4();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v41 - v7;
  v8 = type metadata accessor for TranscriptProtoPlanGenerationModelOutputError(0);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570010A8);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TranscriptProtoPlanGenerationErrorEnum(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v43 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570010B0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA390);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v41 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v41 - v24;
  v45 = a1;
  sub_2403A9210(a1, (uint64_t)&v41 - v24, &qword_256FFA390);
  v46 = a2;
  sub_2403A9210(a2, (uint64_t)v23, &qword_256FFA390);
  v26 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_2403A9210((uint64_t)v25, (uint64_t)v16, &qword_256FFA390);
  sub_2403A9210((uint64_t)v23, v26, &qword_256FFA390);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v27((uint64_t)v16, 1, v11) != 1)
  {
    sub_2403A9210((uint64_t)v16, (uint64_t)v20, &qword_256FFA390);
    if (v27(v26, 1, v11) != 1)
    {
      v28 = v43;
      sub_2403A91CC(v26, v43, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
      v29 = v42;
      v30 = (char *)(v42 + *(int *)(v41 + 48));
      sub_2403AE1A4((uint64_t)v20, v42, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
      sub_2403AE1A4(v28, (uint64_t)v30, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
      v31 = v44;
      sub_2403A91CC(v29, (uint64_t)v44, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
      LOBYTE(v29) = sub_2404E4C74(v31, v30, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
      sub_240388AE4((uint64_t)v30, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
      sub_240388AE4((uint64_t)v31, type metadata accessor for TranscriptProtoPlanGenerationModelOutputError);
      sub_240388AE4(v28, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
      sub_2403A97FC((uint64_t)v23, &qword_256FFA390);
      sub_2403A97FC((uint64_t)v25, &qword_256FFA390);
      sub_240388AE4((uint64_t)v20, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
      sub_2403A97FC((uint64_t)v16, &qword_256FFA390);
      if ((v29 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v38 = 0;
      return v38 & 1;
    }
    sub_2403A97FC((uint64_t)v23, &qword_256FFA390);
    sub_2403A97FC((uint64_t)v25, &qword_256FFA390);
    sub_240388AE4((uint64_t)v20, type metadata accessor for TranscriptProtoPlanGenerationErrorEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v16, &qword_2570010B0);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v23, &qword_256FFA390);
  sub_2403A97FC((uint64_t)v25, &qword_256FFA390);
  if (v27(v26, 1, v11) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v16, &qword_256FFA390);
LABEL_8:
  v32 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  v34 = v49;
  v33 = v50;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
  v36 = v47;
  v35(v47, v45 + *(int *)(v32 + 20), v50);
  v37 = v48;
  v35(v48, v46 + *(int *)(v32 + 20), v33);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v38 = sub_2408E5CD8();
  v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  v39(v37, v33);
  v39(v36, v33);
  return v38 & 1;
}

uint64_t _s23LighthouseDataProcessor31TranscriptProtoRecoverableErrorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_2408E57A4();
  v49 = *(_QWORD *)(v4 - 8);
  v50 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)&v41 - v7;
  v8 = type metadata accessor for TranscriptProtoPlanGenerationError(0);
  MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570010C0);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TranscriptProtoRecoverableErrorEnum(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v43 = (uint64_t)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570010C8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA398);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v41 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v41 - v24;
  v45 = a1;
  sub_2403A9210(a1, (uint64_t)&v41 - v24, &qword_256FFA398);
  v46 = a2;
  sub_2403A9210(a2, (uint64_t)v23, &qword_256FFA398);
  v26 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_2403A9210((uint64_t)v25, (uint64_t)v16, &qword_256FFA398);
  sub_2403A9210((uint64_t)v23, v26, &qword_256FFA398);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v27((uint64_t)v16, 1, v11) != 1)
  {
    sub_2403A9210((uint64_t)v16, (uint64_t)v20, &qword_256FFA398);
    if (v27(v26, 1, v11) != 1)
    {
      v28 = v43;
      sub_2403A91CC(v26, v43, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
      v29 = v42;
      v30 = v42 + *(int *)(v41 + 48);
      sub_2403AE1A4((uint64_t)v20, v42, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
      sub_2403AE1A4(v28, v30, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
      v31 = v44;
      sub_2403A91CC(v29, v44, type metadata accessor for TranscriptProtoPlanGenerationError);
      LOBYTE(v29) = _s23LighthouseDataProcessor34TranscriptProtoPlanGenerationErrorV2eeoiySbAC_ACtFZ_0(v31, v30);
      sub_240388AE4(v30, type metadata accessor for TranscriptProtoPlanGenerationError);
      sub_240388AE4(v31, type metadata accessor for TranscriptProtoPlanGenerationError);
      sub_240388AE4(v28, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
      sub_2403A97FC((uint64_t)v23, &qword_256FFA398);
      sub_2403A97FC((uint64_t)v25, &qword_256FFA398);
      sub_240388AE4((uint64_t)v20, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
      sub_2403A97FC((uint64_t)v16, &qword_256FFA398);
      if ((v29 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v38 = 0;
      return v38 & 1;
    }
    sub_2403A97FC((uint64_t)v23, &qword_256FFA398);
    sub_2403A97FC((uint64_t)v25, &qword_256FFA398);
    sub_240388AE4((uint64_t)v20, type metadata accessor for TranscriptProtoRecoverableErrorEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v16, &qword_2570010C8);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v23, &qword_256FFA398);
  sub_2403A97FC((uint64_t)v25, &qword_256FFA398);
  if (v27(v26, 1, v11) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v16, &qword_256FFA398);
LABEL_8:
  v32 = type metadata accessor for TranscriptProtoRecoverableError(0);
  v34 = v49;
  v33 = v50;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
  v36 = v47;
  v35(v47, v45 + *(int *)(v32 + 20), v50);
  v37 = v48;
  v35(v48, v46 + *(int *)(v32 + 20), v33);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v38 = sub_2408E5CD8();
  v39 = *(void (**)(char *, uint64_t))(v34 + 8);
  v39(v37, v33);
  v39(v36, v33);
  return v38 & 1;
}

uint64_t _s23LighthouseDataProcessor31TranscriptProtoQueryStepResultsV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t StepResults;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_2408E57A4();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v44 - v7;
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v44 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v44 - v22;
  v24 = a1;
  v25 = *a1;
  v26 = a2;
  if ((sub_2408BD6EC(v25, *a2) & 1) == 0)
    goto LABEL_8;
  v45 = v8;
  v46 = v18;
  v44 = v11;
  StepResults = type metadata accessor for TranscriptProtoQueryStepResults(0);
  sub_2403A9210((uint64_t)v24 + *(int *)(StepResults + 24), (uint64_t)v23, &qword_256FFA300);
  sub_2403A9210((uint64_t)a2 + *(int *)(StepResults + 24), (uint64_t)v21, &qword_256FFA300);
  v28 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_2403A9210((uint64_t)v23, (uint64_t)v14, &qword_256FFA300);
  sub_2403A9210((uint64_t)v21, v28, &qword_256FFA300);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
  v30 = v26;
  v31 = v24;
  if (v29((uint64_t)v14, 1, v51) == 1)
  {
    sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v23, &qword_256FFA300);
    if (v29(v28, 1, v51) == 1)
    {
      sub_2403A97FC((uint64_t)v14, &qword_256FFA300);
      goto LABEL_11;
    }
    goto LABEL_7;
  }
  v32 = (uint64_t)v46;
  sub_2403A9210((uint64_t)v14, (uint64_t)v46, &qword_256FFA300);
  if (v29(v28, 1, v51) == 1)
  {
    sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v23, &qword_256FFA300);
    sub_240388AE4(v32, type metadata accessor for TranscriptProtoStatementID);
LABEL_7:
    sub_2403A97FC((uint64_t)v14, &qword_257000C50);
LABEL_8:
    v33 = 0;
    return v33 & 1;
  }
  v35 = (uint64_t)v44;
  sub_2403A91CC(v28, (uint64_t)v44, type metadata accessor for TranscriptProtoStatementID);
  v36 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v32, v35);
  sub_240388AE4(v35, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v23, &qword_256FFA300);
  sub_240388AE4(v32, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v14, &qword_256FFA300);
  if ((v36 & 1) == 0)
    goto LABEL_8;
LABEL_11:
  v37 = v30;
  if (v31[1] == v30[1] && v31[2] == v30[2] || (v33 = 0, (sub_2408E617C() & 1) != 0))
  {
    v39 = v48;
    v38 = v49;
    v40 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v41 = v45;
    v40(v45, (char *)v31 + *(int *)(StepResults + 28), v49);
    v42 = v47;
    v40(v47, (char *)v37 + *(int *)(StepResults + 28), v38);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v33 = sub_2408E5CD8();
    v43 = *(void (**)(char *, uint64_t))(v39 + 8);
    v43(v42, v38);
    v43(v41, v38);
  }
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor31TranscriptProtoPrefixExpressionV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  char v31;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unsigned __int8 *, uint64_t);
  char *v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = sub_2408E57A4();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v41 - v8;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v46);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v41 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v41 - v21;
  if (*a1 != *a2)
    goto LABEL_8;
  v23 = a1;
  v24 = a2;
  v25 = v20;
  v41 = v12;
  v42 = v9;
  v43 = v7;
  v26 = type metadata accessor for TranscriptProtoPrefixExpression(0);
  v27 = v23;
  sub_2403A9210((uint64_t)&v23[*(int *)(v26 + 20)], (uint64_t)v22, &qword_256FFA300);
  v28 = v24;
  sub_2403A9210((uint64_t)&v24[*(int *)(v26 + 20)], (uint64_t)v19, &qword_256FFA300);
  v29 = (uint64_t)&v14[*(int *)(v46 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v14, &qword_256FFA300);
  sub_2403A9210((uint64_t)v19, v29, &qword_256FFA300);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  if (v30((uint64_t)v14, 1, v48) == 1)
  {
    sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    if (v30(v29, 1, v48) == 1)
    {
      sub_2403A97FC((uint64_t)v14, &qword_256FFA300);
LABEL_11:
      v36 = v44;
      v35 = v45;
      v37 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v44 + 16);
      v38 = v42;
      v37(v42, &v27[*(int *)(v26 + 24)], v45);
      v39 = v43;
      v37(v43, &v28[*(int *)(v26 + 24)], v35);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v31 = sub_2408E5CD8();
      v40 = *(void (**)(char *, uint64_t))(v36 + 8);
      v40(v39, v35);
      v40(v38, v35);
      return v31 & 1;
    }
    goto LABEL_7;
  }
  sub_2403A9210((uint64_t)v14, v25, &qword_256FFA300);
  if (v30(v29, 1, v48) == 1)
  {
    sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
    sub_240388AE4(v25, type metadata accessor for TranscriptProtoStatementID);
LABEL_7:
    sub_2403A97FC((uint64_t)v14, &qword_257000C50);
    goto LABEL_8;
  }
  v33 = (uint64_t)v41;
  sub_2403A91CC(v29, (uint64_t)v41, type metadata accessor for TranscriptProtoStatementID);
  v34 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v25, v33);
  sub_240388AE4(v33, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA300);
  sub_240388AE4(v25, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC((uint64_t)v14, &qword_256FFA300);
  if ((v34 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v31 = 0;
  return v31 & 1;
}

uint64_t _s23LighthouseDataProcessor40TranscriptProtoRetrievedContextStatementV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a2;
  v3 = sub_2408E57A4();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v58 - v6;
  v67 = type metadata accessor for ContextProtoRetrievedContext(0);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v58 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F60);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F68);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v58 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (uint64_t)&v58 - v14;
  v15 = type metadata accessor for TranscriptProtoStatementID(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v69 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_256FFA300);
  sub_2403A9210(v71, (uint64_t)v28, &qword_256FFA300);
  v31 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA300);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA300);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) != 1)
  {
    sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA300);
    if (v32(v31, 1, v15) != 1)
    {
      sub_2403A91CC(v31, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementID);
      v35 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v25, (uint64_t)v18);
      sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v33 = &qword_257000C50;
    v34 = (uint64_t)v21;
LABEL_14:
    sub_2403A97FC(v34, v33);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
  if (v32(v31, 1, v15) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
LABEL_8:
  v36 = type metadata accessor for TranscriptProtoRetrievedContextStatement(0);
  v37 = v69;
  v38 = v66;
  sub_2403A9210(v69 + *(int *)(v36 + 20), v66, &qword_257000F68);
  v40 = v70;
  v39 = v71;
  sub_2403A9210(v71 + *(int *)(v36 + 20), v70, &qword_257000F68);
  v41 = v68;
  v42 = v68 + *(int *)(v64 + 48);
  sub_2403A9210(v38, v68, &qword_257000F68);
  sub_2403A9210(v40, v42, &qword_257000F68);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v44 = v67;
  if (v43(v41, 1, v67) == 1)
  {
    sub_2403A97FC(v40, &qword_257000F68);
    sub_2403A97FC(v38, &qword_257000F68);
    if (v43(v42, 1, v44) == 1)
    {
      sub_2403A97FC(v41, &qword_257000F68);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v41, v63, &qword_257000F68);
  if (v43(v42, 1, v44) == 1)
  {
    sub_2403A97FC(v70, &qword_257000F68);
    sub_2403A97FC(v38, &qword_257000F68);
    sub_240388AE4(v45, type metadata accessor for ContextProtoRetrievedContext);
LABEL_13:
    v33 = &qword_257000F60;
    v34 = v41;
    goto LABEL_14;
  }
  v48 = v58;
  sub_2403A91CC(v42, v58, type metadata accessor for ContextProtoRetrievedContext);
  v49 = static ContextProtoRetrievedContext.== infix(_:_:)(v45, v48);
  sub_240388AE4(v48, type metadata accessor for ContextProtoRetrievedContext);
  sub_2403A97FC(v70, &qword_257000F68);
  sub_2403A97FC(v38, &qword_257000F68);
  sub_240388AE4(v45, type metadata accessor for ContextProtoRetrievedContext);
  sub_2403A97FC(v41, &qword_257000F68);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t _s23LighthouseDataProcessor31TranscriptProtoCancelExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for TranscriptProtoStatementID(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFA300);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFA300);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFA300);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFA300);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFA300);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for TranscriptProtoStatementID);
      v25 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
      sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v12, &qword_256FFA300);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
    sub_240388AE4((uint64_t)v16, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_257000C50);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v21, &qword_256FFA300);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFA300);
LABEL_8:
  v26 = type metadata accessor for TranscriptProtoCancelExpression(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(v26 + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(v26 + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor30TranscriptProtoUndoRedoRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  void (*v57)(_BYTE *, uint64_t);
  _BYTE v58[4];
  int v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;

  v4 = sub_2408E57A4();
  v64 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v63 = &v58[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v62 = &v58[-v7];
  v70 = type metadata accessor for TranscriptProtoStatementID(0);
  v8 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v66 = &v58[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v69 = &v58[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v58[-v13];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v65 = &v58[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = MEMORY[0x24BDAC7A8](v16);
  v67 = &v58[-v19];
  v20 = MEMORY[0x24BDAC7A8](v18);
  v68 = &v58[-v21];
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = &v58[-v23];
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = &v58[-v26];
  MEMORY[0x24BDAC7A8](v25);
  v29 = &v58[-v28];
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v30 = 0, (sub_2408E617C() & 1) != 0))
  {
    v31 = *(_QWORD *)(a1 + 32);
    v32 = *(_QWORD *)(a2 + 32);
    if (v31)
    {
      if (!v32)
        goto LABEL_26;
      if (*(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24) || v31 != v32)
      {
        v30 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v30 & 1;
      }
    }
    else if (v32)
    {
      goto LABEL_26;
    }
    if (*(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16))
      goto LABEL_26;
    v60 = v4;
    v33 = type metadata accessor for TranscriptProtoUndoRedoRequest(0);
    sub_2403A9210(a1 + *(int *)(v33 + 28), (uint64_t)v29, &qword_256FFA300);
    v61 = v33;
    sub_2403A9210(a2 + *(int *)(v33 + 28), (uint64_t)v27, &qword_256FFA300);
    v34 = (uint64_t)&v14[*(int *)(v10 + 48)];
    sub_2403A9210((uint64_t)v29, (uint64_t)v14, &qword_256FFA300);
    sub_2403A9210((uint64_t)v27, v34, &qword_256FFA300);
    v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v36 = v70;
    if (v35((uint64_t)v14, 1, v70) == 1)
    {
      sub_2403A97FC((uint64_t)v27, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v29, &qword_256FFA300);
      if (v35(v34, 1, v70) == 1)
      {
        sub_2403A97FC((uint64_t)v14, &qword_256FFA300);
LABEL_19:
        v39 = v61;
        v40 = v68;
        sub_2403A9210(a1 + *(int *)(v61 + 32), (uint64_t)v68, &qword_256FFA300);
        v41 = v67;
        sub_2403A9210(a2 + *(int *)(v39 + 32), (uint64_t)v67, &qword_256FFA300);
        v42 = v69;
        v43 = (uint64_t)&v69[*(int *)(v10 + 48)];
        sub_2403A9210((uint64_t)v40, (uint64_t)v69, &qword_256FFA300);
        sub_2403A9210((uint64_t)v41, v43, &qword_256FFA300);
        v44 = v70;
        if (v35((uint64_t)v42, 1, v70) == 1)
        {
          sub_2403A97FC((uint64_t)v41, &qword_256FFA300);
          sub_2403A97FC((uint64_t)v40, &qword_256FFA300);
          if (v35(v43, 1, v44) == 1)
          {
            sub_2403A97FC((uint64_t)v42, &qword_256FFA300);
LABEL_29:
            v49 = v60;
            v50 = v61;
            v51 = a1 + *(int *)(v61 + 36);
            v52 = v64;
            v53 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v64 + 16);
            v54 = v62;
            v53(v62, v51, v60);
            v55 = a2 + *(int *)(v50 + 36);
            v56 = v63;
            v53(v63, v55, v49);
            sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v30 = sub_2408E5CD8();
            v57 = *(void (**)(_BYTE *, uint64_t))(v52 + 8);
            v57(v56, v49);
            v57(v54, v49);
            return v30 & 1;
          }
          goto LABEL_24;
        }
        v45 = v65;
        sub_2403A9210((uint64_t)v42, (uint64_t)v65, &qword_256FFA300);
        if (v35(v43, 1, v44) == 1)
        {
          sub_2403A97FC((uint64_t)v41, &qword_256FFA300);
          sub_2403A97FC((uint64_t)v40, &qword_256FFA300);
          sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoStatementID);
LABEL_24:
          v37 = (uint64_t)v42;
          goto LABEL_25;
        }
        v47 = v66;
        sub_2403A91CC(v43, (uint64_t)v66, type metadata accessor for TranscriptProtoStatementID);
        v48 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v45, (uint64_t)v47);
        sub_240388AE4((uint64_t)v47, type metadata accessor for TranscriptProtoStatementID);
        sub_2403A97FC((uint64_t)v41, &qword_256FFA300);
        sub_2403A97FC((uint64_t)v40, &qword_256FFA300);
        sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoStatementID);
        sub_2403A97FC((uint64_t)v42, &qword_256FFA300);
        if ((v48 & 1) != 0)
          goto LABEL_29;
LABEL_26:
        v30 = 0;
        return v30 & 1;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v14, (uint64_t)v24, &qword_256FFA300);
      if (v35(v34, 1, v36) != 1)
      {
        v38 = v66;
        sub_2403A91CC(v34, (uint64_t)v66, type metadata accessor for TranscriptProtoStatementID);
        v59 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v24, (uint64_t)v38);
        sub_240388AE4((uint64_t)v38, type metadata accessor for TranscriptProtoStatementID);
        sub_2403A97FC((uint64_t)v27, &qword_256FFA300);
        sub_2403A97FC((uint64_t)v29, &qword_256FFA300);
        sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoStatementID);
        sub_2403A97FC((uint64_t)v14, &qword_256FFA300);
        if ((v59 & 1) == 0)
          goto LABEL_26;
        goto LABEL_19;
      }
      sub_2403A97FC((uint64_t)v27, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v29, &qword_256FFA300);
      sub_240388AE4((uint64_t)v24, type metadata accessor for TranscriptProtoStatementID);
    }
    v37 = (uint64_t)v14;
LABEL_25:
    sub_2403A97FC(v37, &qword_257000C50);
    goto LABEL_26;
  }
  return v30 & 1;
}

uint64_t _s23LighthouseDataProcessor32TranscriptProtoResponseParameterV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;

  v4 = sub_2408E57A4();
  v33 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v32 - v8;
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v11 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v11 & 1;
  }
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a2 + 24);
  if (v13 >> 60 == 15)
  {
    if (v15 >> 60 == 15)
      goto LABEL_14;
LABEL_10:
    sub_2403C2410(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
    sub_2403C2410(v14, v15);
    sub_2403C2424(v12, v13);
    sub_2403C2424(v14, v15);
    goto LABEL_11;
  }
  if (v15 >> 60 == 15)
    goto LABEL_10;
  sub_2403C2410(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  sub_2403C2410(v14, v15);
  sub_2408C422C(v12, v13);
  v18 = v17;
  sub_2403C2424(v14, v15);
  sub_2403C2424(v12, v13);
  if ((v18 & 1) == 0)
    goto LABEL_11;
LABEL_14:
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(_QWORD *)(a2 + 40);
  if (v19)
  {
    if (!v20)
      goto LABEL_11;
    if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || v19 != v20)
    {
      v11 = 0;
      if ((sub_2408E617C() & 1) == 0)
        return v11 & 1;
    }
  }
  else if (v20)
  {
    goto LABEL_11;
  }
  v21 = *(unsigned __int8 *)(a1 + 48);
  v22 = *(unsigned __int8 *)(a2 + 48);
  if (v21 == 2)
  {
    if (v22 != 2)
      goto LABEL_11;
  }
  else if (v22 == 2 || ((((v22 & 1) == 0) ^ v21) & 1) == 0)
  {
    goto LABEL_11;
  }
  v23 = *(_QWORD *)(a1 + 64);
  v24 = *(_QWORD *)(a2 + 64);
  if (!v23)
  {
    if (!v24)
      goto LABEL_33;
LABEL_11:
    v11 = 0;
    return v11 & 1;
  }
  if (!v24)
    goto LABEL_11;
  if (*(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56) && v23 == v24 || (v11 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_33:
    v25 = *(unsigned __int8 *)(a1 + 72);
    v26 = *(unsigned __int8 *)(a2 + 72);
    if (v25 == 2)
    {
      if (v26 == 2)
      {
LABEL_38:
        v27 = type metadata accessor for TranscriptProtoResponseParameter(0);
        v28 = a1 + *(int *)(v27 + 40);
        v29 = v33;
        v30 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
        v30(v9, v28, v4);
        v30(v7, a2 + *(int *)(v27 + 40), v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v11 = sub_2408E5CD8();
        v31 = *(void (**)(char *, uint64_t))(v29 + 8);
        v31(v7, v4);
        v31(v9, v4);
        return v11 & 1;
      }
    }
    else if (v26 != 2 && ((((v26 & 1) == 0) ^ v25) & 1) != 0)
    {
      goto LABEL_38;
    }
    goto LABEL_11;
  }
  return v11 & 1;
}

uint64_t _s23LighthouseDataProcessor31TranscriptProtoResponseManifestV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  char *v40;
  char v41;
  uint64_t *v42;
  int *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char v56;
  uint64_t *v57;
  uint64_t *v58;
  char v59;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  char *v76;
  uint64_t v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t *v81;
  int *v82;
  uint64_t *v83;
  uint64_t *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;

  v4 = sub_2408E57A4();
  v87 = *(_QWORD *)(v4 - 8);
  v88 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v86 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v85 = (char *)&v80 - v7;
  v8 = type metadata accessor for TranscriptProtoResponseVisual(0);
  v92 = *(_QWORD *)(v8 - 8);
  v93 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v89 = (uint64_t *)((char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FE0);
  MEMORY[0x24BDAC7A8](v91);
  v94 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x24BDAC7A8](v12);
  v97 = (uint64_t)&v80 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v95 = (uint64_t)&v80 - v17;
  v18 = type metadata accessor for TranscriptProtoResponseDialog(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v90 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000FE8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v96 = (uint64_t *)((char *)&v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v80 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v80 - v30;
  if ((sub_2408BD9EC(*a1, *a2) & 1) == 0)
    goto LABEL_27;
  v81 = v14;
  v32 = type metadata accessor for TranscriptProtoResponseManifest(0);
  v33 = *(int *)(v32 + 20);
  v83 = a1;
  sub_2403A9210((uint64_t)a1 + v33, (uint64_t)v31, &qword_256FFA408);
  v82 = (int *)v32;
  v34 = *(int *)(v32 + 20);
  v84 = a2;
  sub_2403A9210((uint64_t)a2 + v34, (uint64_t)v29, &qword_256FFA408);
  v35 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_2403A9210((uint64_t)v31, (uint64_t)v23, &qword_256FFA408);
  sub_2403A9210((uint64_t)v29, v35, &qword_256FFA408);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v36((uint64_t)v23, 1, v18) == 1)
  {
    sub_2403A97FC((uint64_t)v29, &qword_256FFA408);
    sub_2403A97FC((uint64_t)v31, &qword_256FFA408);
    if (v36(v35, 1, v18) == 1)
    {
      sub_2403A97FC((uint64_t)v23, &qword_256FFA408);
      goto LABEL_9;
    }
LABEL_7:
    v38 = &qword_257000FE8;
    v39 = (uint64_t)v23;
LABEL_26:
    sub_2403A97FC(v39, v38);
    goto LABEL_27;
  }
  v37 = v96;
  sub_2403A9210((uint64_t)v23, (uint64_t)v96, &qword_256FFA408);
  if (v36(v35, 1, v18) == 1)
  {
    sub_2403A97FC((uint64_t)v29, &qword_256FFA408);
    sub_2403A97FC((uint64_t)v31, &qword_256FFA408);
    sub_240388AE4((uint64_t)v37, type metadata accessor for TranscriptProtoResponseDialog);
    goto LABEL_7;
  }
  v40 = v90;
  sub_2403A91CC(v35, (uint64_t)v90, type metadata accessor for TranscriptProtoResponseDialog);
  v41 = _s23LighthouseDataProcessor29TranscriptProtoResponseDialogV2eeoiySbAC_ACtFZ_0(v37, v40);
  sub_240388AE4((uint64_t)v40, type metadata accessor for TranscriptProtoResponseDialog);
  sub_2403A97FC((uint64_t)v29, &qword_256FFA408);
  sub_2403A97FC((uint64_t)v31, &qword_256FFA408);
  sub_240388AE4((uint64_t)v37, type metadata accessor for TranscriptProtoResponseDialog);
  sub_2403A97FC((uint64_t)v23, &qword_256FFA408);
  if ((v41 & 1) == 0)
    goto LABEL_27;
LABEL_9:
  v43 = v82;
  v42 = v83;
  v44 = v95;
  sub_2403A9210((uint64_t)v83 + v82[6], v95, &qword_256FFA410);
  v45 = v84;
  v46 = v97;
  sub_2403A9210((uint64_t)v84 + v43[6], v97, &qword_256FFA410);
  v47 = v94;
  v48 = v94 + *(int *)(v91 + 48);
  sub_2403A9210(v44, v94, &qword_256FFA410);
  sub_2403A9210(v46, v48, &qword_256FFA410);
  v49 = v93;
  v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
  if (v50(v47, 1, v93) == 1)
  {
    sub_2403A97FC(v46, &qword_256FFA410);
    sub_2403A97FC(v44, &qword_256FFA410);
    if (v50(v48, 1, v49) == 1)
    {
      sub_2403A97FC(v47, &qword_256FFA410);
      goto LABEL_12;
    }
    goto LABEL_20;
  }
  v57 = v81;
  sub_2403A9210(v47, (uint64_t)v81, &qword_256FFA410);
  if (v50(v48, 1, v49) == 1)
  {
    sub_2403A97FC(v97, &qword_256FFA410);
    sub_2403A97FC(v44, &qword_256FFA410);
    sub_240388AE4((uint64_t)v57, type metadata accessor for TranscriptProtoResponseVisual);
LABEL_20:
    v38 = &qword_257000FE0;
    v39 = v47;
    goto LABEL_26;
  }
  v58 = v89;
  sub_2403A91CC(v48, (uint64_t)v89, type metadata accessor for TranscriptProtoResponseVisual);
  if ((sub_2408BDA14(*v57, *v58) & 1) == 0 || (sub_2408BDDC4(v57[1], v58[1]) & 1) == 0)
  {
    sub_240388AE4((uint64_t)v58, type metadata accessor for TranscriptProtoResponseVisual);
    sub_2403A97FC(v97, &qword_256FFA410);
    sub_2403A97FC(v95, &qword_256FFA410);
    sub_240388AE4((uint64_t)v57, type metadata accessor for TranscriptProtoResponseVisual);
    v39 = v47;
    v38 = &qword_256FFA410;
    goto LABEL_26;
  }
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v59 = sub_2408E5CD8();
  sub_240388AE4((uint64_t)v58, type metadata accessor for TranscriptProtoResponseVisual);
  sub_2403A97FC(v97, &qword_256FFA410);
  sub_2403A97FC(v95, &qword_256FFA410);
  sub_240388AE4((uint64_t)v57, type metadata accessor for TranscriptProtoResponseVisual);
  sub_2403A97FC(v47, &qword_256FFA410);
  if ((v59 & 1) == 0)
    goto LABEL_27;
LABEL_12:
  v51 = v43[7];
  v52 = (uint64_t *)((char *)v42 + v51);
  v53 = *(uint64_t *)((char *)v42 + v51 + 8);
  v54 = (uint64_t *)((char *)v45 + v51);
  v55 = v54[1];
  if (v53)
  {
    if (!v55)
      goto LABEL_27;
    if (*v52 != *v54 || v53 != v55)
    {
      v56 = 0;
      if ((sub_2408E617C() & 1) == 0)
        return v56 & 1;
    }
  }
  else if (v55)
  {
    goto LABEL_27;
  }
  v61 = v43[8];
  v62 = (uint64_t *)((char *)v42 + v61);
  v63 = *(uint64_t *)((char *)v42 + v61 + 8);
  v64 = (uint64_t *)((char *)v45 + v61);
  v65 = v64[1];
  if (v63)
  {
    if (!v65)
      goto LABEL_27;
    if (*v62 != *v64 || v63 != v65)
    {
      v56 = 0;
      if ((sub_2408E617C() & 1) == 0)
        return v56 & 1;
    }
  }
  else if (v65)
  {
    goto LABEL_27;
  }
  v66 = v43[9];
  v67 = *((unsigned __int8 *)v42 + v66);
  v68 = *((unsigned __int8 *)v45 + v66);
  if (v67 != 2)
  {
    if (v68 != 2 && ((((v68 & 1) == 0) ^ v67) & 1) != 0)
      goto LABEL_42;
LABEL_27:
    v56 = 0;
    return v56 & 1;
  }
  if (v68 != 2)
    goto LABEL_27;
LABEL_42:
  v69 = v43[10];
  v70 = *((unsigned __int8 *)v42 + v69);
  v71 = *((unsigned __int8 *)v45 + v69);
  if (v70 == 2)
  {
    if (v71 == 2)
    {
LABEL_47:
      v72 = (uint64_t)v42 + v43[11];
      v74 = v87;
      v73 = v88;
      v75 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
      v76 = v85;
      v75(v85, v72, v88);
      v77 = (uint64_t)v45 + v43[11];
      v78 = v86;
      v75(v86, v77, v73);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v56 = sub_2408E5CD8();
      v79 = *(void (**)(char *, uint64_t))(v74 + 8);
      v79(v78, v73);
      v79(v76, v73);
      return v56 & 1;
    }
    goto LABEL_27;
  }
  v56 = 0;
  if (v71 != 2 && ((v71 ^ v70) & 1) == 0)
    goto LABEL_47;
  return v56 & 1;
}

uint64_t _s23LighthouseDataProcessor37TranscriptProtoStatementResultPayloadV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t *v45;
  char v46;
  uint64_t *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a2;
  v3 = sub_2408E57A4();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v58 - v6;
  v67 = type metadata accessor for TranscriptProtoResponseManifest(0);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v58 = (uint64_t *)((char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_257001200);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t *)((char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v58 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (uint64_t)&v58 - v14;
  v15 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CD8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v69 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_256FFA3E8);
  sub_2403A9210(v71, (uint64_t)v28, &qword_256FFA3E8);
  v31 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA3E8);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA3E8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) != 1)
  {
    sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA3E8);
    if (v32(v31, 1, v15) != 1)
    {
      sub_2403A91CC(v31, (uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcome);
      v35 = _s23LighthouseDataProcessor31TranscriptProtoStatementOutcomeV2eeoiySbAC_ACtFZ_0((uint64_t)v25, (uint64_t)v18);
      sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoStatementOutcome);
      sub_2403A97FC((uint64_t)v28, &qword_256FFA3E8);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA3E8);
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoStatementOutcome);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA3E8);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_256FFA3E8);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA3E8);
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoStatementOutcome);
LABEL_6:
    v33 = &qword_257000CD8;
    v34 = (uint64_t)v21;
LABEL_14:
    sub_2403A97FC(v34, v33);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_256FFA3E8);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA3E8);
  if (v32(v31, 1, v15) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v21, &qword_256FFA3E8);
LABEL_8:
  v36 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  v37 = v69;
  v38 = v66;
  sub_2403A9210(v69 + *(int *)(v36 + 20), v66, &qword_256FFA418);
  v40 = v70;
  v39 = v71;
  sub_2403A9210(v71 + *(int *)(v36 + 20), v70, &qword_256FFA418);
  v41 = v68;
  v42 = v68 + *(int *)(v64 + 48);
  sub_2403A9210(v38, v68, &qword_256FFA418);
  sub_2403A9210(v40, v42, &qword_256FFA418);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v44 = v67;
  if (v43(v41, 1, v67) == 1)
  {
    sub_2403A97FC(v40, &qword_256FFA418);
    sub_2403A97FC(v38, &qword_256FFA418);
    if (v43(v42, 1, v44) == 1)
    {
      sub_2403A97FC(v41, &qword_256FFA418);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v41, (uint64_t)v63, &qword_256FFA418);
  if (v43(v42, 1, v44) == 1)
  {
    sub_2403A97FC(v70, &qword_256FFA418);
    sub_2403A97FC(v38, &qword_256FFA418);
    sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoResponseManifest);
LABEL_13:
    v33 = &qword_257001200;
    v34 = v41;
    goto LABEL_14;
  }
  v48 = v58;
  sub_2403A91CC(v42, (uint64_t)v58, type metadata accessor for TranscriptProtoResponseManifest);
  v49 = _s23LighthouseDataProcessor31TranscriptProtoResponseManifestV2eeoiySbAC_ACtFZ_0(v45, v48);
  sub_240388AE4((uint64_t)v48, type metadata accessor for TranscriptProtoResponseManifest);
  sub_2403A97FC(v70, &qword_256FFA418);
  sub_2403A97FC(v38, &qword_256FFA418);
  sub_240388AE4((uint64_t)v45, type metadata accessor for TranscriptProtoResponseManifest);
  sub_2403A97FC(v41, &qword_256FFA418);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t _s23LighthouseDataProcessor30TranscriptProtoStatementResultV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t *v56;
  uint64_t v57;
  int *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  int *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  char *v94;
  uint64_t v95;
  char *v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  char *v120;

  v4 = sub_2408E57A4();
  v101 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v100 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v99 = (char *)&v98 - v7;
  v118 = type metadata accessor for TranscriptProtoStatementID(0);
  v115 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v105 = (uint64_t)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  v9 = MEMORY[0x24BDAC7A8](v117);
  v103 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v107 = (uint64_t)&v98 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v116 = (uint64_t)&v98 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v102 = (uint64_t)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v108 = (char *)&v98 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v109 = (char *)&v98 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v104 = (uint64_t)&v98 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v106 = (uint64_t)&v98 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v111 = (uint64_t)&v98 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v110 = (uint64_t)&v98 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v113 = (uint64_t)&v98 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v114 = (uint64_t)&v98 - v31;
  v32 = type metadata accessor for TranscriptProtoStatementResultPayload(0);
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v112 = (int *)((char *)&v98 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570011F8);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v98 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA420);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v98 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)&v98 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v98 - v45;
  v119 = a1;
  v120 = a2;
  v47 = a1[1];
  v48 = *((_QWORD *)a2 + 1);
  if (!v47)
  {
    v98 = v4;
    v49 = v119;
    if (v48)
      goto LABEL_37;
    goto LABEL_8;
  }
  if (!v48)
    goto LABEL_37;
  v98 = v4;
  v49 = v119;
  if (*v119 == *(_QWORD *)v120 && v47 == v48 || (v50 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_8:
    v51 = v49[3];
    v52 = *((_QWORD *)v120 + 3);
    if (v51)
    {
      if (!v52)
        goto LABEL_37;
      if (v49[2] != *((_QWORD *)v120 + 2) || v51 != v52)
      {
        v50 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v50 & 1;
      }
    }
    else if (v52)
    {
      goto LABEL_37;
    }
    v53 = (int *)type metadata accessor for TranscriptProtoStatementResult(0);
    sub_2403A9210((uint64_t)v49 + v53[6], (uint64_t)v46, &qword_256FFA420);
    sub_2403A9210((uint64_t)&v120[v53[6]], (uint64_t)v44, &qword_256FFA420);
    v54 = (uint64_t)&v37[*(int *)(v35 + 48)];
    sub_2403A9210((uint64_t)v46, (uint64_t)v37, &qword_256FFA420);
    sub_2403A9210((uint64_t)v44, v54, &qword_256FFA420);
    v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    if (v55((uint64_t)v37, 1, v32) == 1)
    {
      sub_2403A97FC((uint64_t)v44, &qword_256FFA420);
      sub_2403A97FC((uint64_t)v46, &qword_256FFA420);
      if (v55(v54, 1, v32) == 1)
      {
        sub_2403A97FC((uint64_t)v37, &qword_256FFA420);
        goto LABEL_23;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v37, (uint64_t)v41, &qword_256FFA420);
      if (v55(v54, 1, v32) != 1)
      {
        v58 = v112;
        sub_2403A91CC(v54, (uint64_t)v112, type metadata accessor for TranscriptProtoStatementResultPayload);
        v59 = _s23LighthouseDataProcessor37TranscriptProtoStatementResultPayloadV2eeoiySbAC_ACtFZ_0((uint64_t)v41, (uint64_t)v58);
        sub_240388AE4((uint64_t)v58, type metadata accessor for TranscriptProtoStatementResultPayload);
        sub_2403A97FC((uint64_t)v44, &qword_256FFA420);
        sub_2403A97FC((uint64_t)v46, &qword_256FFA420);
        sub_240388AE4((uint64_t)v41, type metadata accessor for TranscriptProtoStatementResultPayload);
        sub_2403A97FC((uint64_t)v37, &qword_256FFA420);
        if ((v59 & 1) == 0)
          goto LABEL_37;
LABEL_23:
        v60 = v114;
        sub_2403A9210((uint64_t)v49 + v53[7], v114, &qword_256FFA300);
        v112 = v53;
        v61 = v113;
        sub_2403A9210((uint64_t)&v120[v53[7]], v113, &qword_256FFA300);
        v62 = v116;
        v63 = v117;
        v64 = v116 + *(int *)(v117 + 48);
        sub_2403A9210(v60, v116, &qword_256FFA300);
        sub_2403A9210(v61, v64, &qword_256FFA300);
        v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
        v66 = v118;
        if (v65(v62, 1, v118) == 1)
        {
          sub_2403A97FC(v61, &qword_256FFA300);
          sub_2403A97FC(v60, &qword_256FFA300);
          if (v65(v64, 1, v66) == 1)
          {
            sub_2403A97FC(v62, &qword_256FFA300);
            goto LABEL_30;
          }
        }
        else
        {
          v67 = v110;
          sub_2403A9210(v62, v110, &qword_256FFA300);
          if (v65(v64, 1, v66) != 1)
          {
            v68 = v63;
            v69 = v61;
            v70 = v105;
            sub_2403A91CC(v64, v105, type metadata accessor for TranscriptProtoStatementID);
            LODWORD(v115) = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v67, v70);
            sub_240388AE4(v70, type metadata accessor for TranscriptProtoStatementID);
            v71 = v69;
            v63 = v68;
            sub_2403A97FC(v71, &qword_256FFA300);
            sub_2403A97FC(v60, &qword_256FFA300);
            sub_240388AE4(v67, type metadata accessor for TranscriptProtoStatementID);
            sub_2403A97FC(v62, &qword_256FFA300);
            if ((v115 & 1) == 0)
              goto LABEL_37;
LABEL_30:
            v73 = v111;
            v72 = v112;
            sub_2403A9210((uint64_t)v49 + v112[8], v111, &qword_256FFA300);
            v74 = (uint64_t)&v120[v72[8]];
            v75 = v106;
            sub_2403A9210(v74, v106, &qword_256FFA300);
            v76 = v107;
            v77 = v107 + *(int *)(v63 + 48);
            sub_2403A9210(v73, v107, &qword_256FFA300);
            sub_2403A9210(v75, v77, &qword_256FFA300);
            if (v65(v76, 1, v66) == 1)
            {
              sub_2403A97FC(v75, &qword_256FFA300);
              sub_2403A97FC(v73, &qword_256FFA300);
              v78 = v65(v77, 1, v66);
              v80 = (uint64_t)v108;
              v79 = (uint64_t)v109;
              if (v78 == 1)
              {
                sub_2403A97FC(v76, &qword_256FFA300);
LABEL_40:
                v86 = v112;
                sub_2403A9210((uint64_t)v119 + v112[9], v79, &qword_256FFA300);
                sub_2403A9210((uint64_t)&v120[v86[9]], v80, &qword_256FFA300);
                v37 = v103;
                v87 = (uint64_t)&v103[*(int *)(v63 + 48)];
                sub_2403A9210(v79, (uint64_t)v103, &qword_256FFA300);
                sub_2403A9210(v80, v87, &qword_256FFA300);
                if (v65((uint64_t)v37, 1, v66) == 1)
                {
                  sub_2403A97FC(v80, &qword_256FFA300);
                  sub_2403A97FC(v79, &qword_256FFA300);
                  if (v65(v87, 1, v66) == 1)
                  {
                    sub_2403A97FC((uint64_t)v37, &qword_256FFA300);
LABEL_47:
                    v91 = v112;
                    v92 = v101;
                    v93 = *(void (**)(char *, char *, uint64_t))(v101 + 16);
                    v94 = v99;
                    v95 = v98;
                    v93(v99, (char *)v119 + v112[10], v98);
                    v96 = v100;
                    v93(v100, &v120[v91[10]], v95);
                    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                    v50 = sub_2408E5CD8();
                    v97 = *(void (**)(char *, uint64_t))(v92 + 8);
                    v97(v96, v95);
                    v97(v94, v95);
                    return v50 & 1;
                  }
                  goto LABEL_45;
                }
                v88 = v102;
                sub_2403A9210((uint64_t)v37, v102, &qword_256FFA300);
                if (v65(v87, 1, v66) == 1)
                {
                  sub_2403A97FC(v80, &qword_256FFA300);
                  sub_2403A97FC(v79, &qword_256FFA300);
                  sub_240388AE4(v88, type metadata accessor for TranscriptProtoStatementID);
LABEL_45:
                  v56 = &qword_257000C50;
                  goto LABEL_21;
                }
                v89 = v105;
                sub_2403A91CC(v87, v105, type metadata accessor for TranscriptProtoStatementID);
                v90 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v88, v89);
                sub_240388AE4(v89, type metadata accessor for TranscriptProtoStatementID);
                sub_2403A97FC(v80, &qword_256FFA300);
                sub_2403A97FC(v79, &qword_256FFA300);
                sub_240388AE4(v88, type metadata accessor for TranscriptProtoStatementID);
                sub_2403A97FC((uint64_t)v37, &qword_256FFA300);
                if ((v90 & 1) != 0)
                  goto LABEL_47;
LABEL_37:
                v50 = 0;
                return v50 & 1;
              }
            }
            else
            {
              v81 = v104;
              sub_2403A9210(v76, v104, &qword_256FFA300);
              v82 = v65(v77, 1, v66);
              v80 = (uint64_t)v108;
              v79 = (uint64_t)v109;
              if (v82 != 1)
              {
                v84 = v75;
                v85 = v105;
                sub_2403A91CC(v77, v105, type metadata accessor for TranscriptProtoStatementID);
                LODWORD(v116) = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v81, v85);
                sub_240388AE4(v85, type metadata accessor for TranscriptProtoStatementID);
                sub_2403A97FC(v84, &qword_256FFA300);
                sub_2403A97FC(v111, &qword_256FFA300);
                sub_240388AE4(v81, type metadata accessor for TranscriptProtoStatementID);
                sub_2403A97FC(v76, &qword_256FFA300);
                if ((v116 & 1) == 0)
                  goto LABEL_37;
                goto LABEL_40;
              }
              sub_2403A97FC(v75, &qword_256FFA300);
              sub_2403A97FC(v111, &qword_256FFA300);
              sub_240388AE4(v81, type metadata accessor for TranscriptProtoStatementID);
            }
            v56 = &qword_257000C50;
            v57 = v76;
            goto LABEL_36;
          }
          sub_2403A97FC(v61, &qword_256FFA300);
          sub_2403A97FC(v60, &qword_256FFA300);
          sub_240388AE4(v67, type metadata accessor for TranscriptProtoStatementID);
        }
        v56 = &qword_257000C50;
        v57 = v62;
        goto LABEL_36;
      }
      sub_2403A97FC((uint64_t)v44, &qword_256FFA420);
      sub_2403A97FC((uint64_t)v46, &qword_256FFA420);
      sub_240388AE4((uint64_t)v41, type metadata accessor for TranscriptProtoStatementResultPayload);
    }
    v56 = &qword_2570011F8;
LABEL_21:
    v57 = (uint64_t)v37;
LABEL_36:
    sub_2403A97FC(v57, v56);
    goto LABEL_37;
  }
  return v50 & 1;
}

uint64_t _s23LighthouseDataProcessor30TranscriptProtoInfixExpressionV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, unsigned __int8 *, uint64_t);
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  unsigned __int8 *v62;
  char *v63;
  unsigned __int8 *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v4 = sub_2408E57A4();
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v69 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v60 - v7;
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v72 = *(_QWORD *)(v9 - 8);
  v73 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v60 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v23 = MEMORY[0x24BDAC7A8]((char *)&v60 - v22);
  v25 = (char *)&v60 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v31 = (char *)&v60 - v30;
  if (*a1 != *a2)
    goto LABEL_16;
  v65 = v26;
  v66 = v29;
  v67 = v28;
  v68 = v11;
  v60 = v8;
  v61 = v27;
  v63 = v15;
  v32 = type metadata accessor for TranscriptProtoInfixExpression(0);
  v33 = *(int *)(v32 + 20);
  v64 = a1;
  sub_2403A9210((uint64_t)&a1[v33], (uint64_t)v31, &qword_256FFA300);
  v34 = *(int *)(v32 + 20);
  v62 = a2;
  sub_2403A9210((uint64_t)&a2[v34], (uint64_t)v25, &qword_256FFA300);
  v35 = (uint64_t)&v17[*(int *)(v12 + 48)];
  sub_2403A9210((uint64_t)v31, (uint64_t)v17, &qword_256FFA300);
  sub_2403A9210((uint64_t)v25, v35, &qword_256FFA300);
  v36 = v73;
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  if (v37((uint64_t)v17, 1, v73) != 1)
  {
    v38 = v65;
    sub_2403A9210((uint64_t)v17, v65, &qword_256FFA300);
    v39 = v37(v35, 1, v36);
    v40 = (uint64_t)v68;
    if (v39 != 1)
    {
      sub_2403A91CC(v35, (uint64_t)v68, type metadata accessor for TranscriptProtoStatementID);
      LODWORD(v72) = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v38, v40);
      sub_240388AE4(v40, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v25, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v31, &qword_256FFA300);
      sub_240388AE4(v38, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v17, &qword_256FFA300);
      if ((v72 & 1) == 0)
        goto LABEL_16;
      goto LABEL_9;
    }
    sub_2403A97FC((uint64_t)v25, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v31, &qword_256FFA300);
    sub_240388AE4(v38, type metadata accessor for TranscriptProtoStatementID);
LABEL_7:
    v41 = (uint64_t)v17;
LABEL_15:
    sub_2403A97FC(v41, &qword_257000C50);
    goto LABEL_16;
  }
  sub_2403A97FC((uint64_t)v25, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v31, &qword_256FFA300);
  if (v37(v35, 1, v36) != 1)
    goto LABEL_7;
  sub_2403A97FC((uint64_t)v17, &qword_256FFA300);
LABEL_9:
  v42 = v64;
  v43 = v67;
  sub_2403A9210((uint64_t)&v64[*(int *)(v32 + 24)], v67, &qword_256FFA300);
  v73 = v32;
  v44 = v62;
  v45 = v66;
  sub_2403A9210((uint64_t)&v62[*(int *)(v32 + 24)], v66, &qword_256FFA300);
  v46 = (uint64_t)v63;
  v47 = (uint64_t)&v63[*(int *)(v12 + 48)];
  sub_2403A9210(v43, (uint64_t)v63, &qword_256FFA300);
  sub_2403A9210(v45, v47, &qword_256FFA300);
  if (v37(v46, 1, v36) == 1)
  {
    sub_2403A97FC(v45, &qword_256FFA300);
    sub_2403A97FC(v43, &qword_256FFA300);
    if (v37(v47, 1, v36) == 1)
    {
      sub_2403A97FC(v46, &qword_256FFA300);
LABEL_19:
      v53 = v73;
      v55 = v70;
      v54 = v71;
      v56 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v70 + 16);
      v57 = v60;
      v56(v60, &v42[*(int *)(v73 + 28)], v71);
      v58 = v69;
      v56(v69, &v44[*(int *)(v53 + 28)], v54);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v49 = sub_2408E5CD8();
      v59 = *(void (**)(char *, uint64_t))(v55 + 8);
      v59(v58, v54);
      v59(v57, v54);
      return v49 & 1;
    }
    goto LABEL_14;
  }
  v48 = v61;
  sub_2403A9210(v46, v61, &qword_256FFA300);
  if (v37(v47, 1, v36) == 1)
  {
    sub_2403A97FC(v66, &qword_256FFA300);
    sub_2403A97FC(v67, &qword_256FFA300);
    sub_240388AE4(v48, type metadata accessor for TranscriptProtoStatementID);
LABEL_14:
    v41 = v46;
    goto LABEL_15;
  }
  v51 = (uint64_t)v68;
  sub_2403A91CC(v47, (uint64_t)v68, type metadata accessor for TranscriptProtoStatementID);
  v52 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v48, v51);
  sub_240388AE4(v51, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v66, &qword_256FFA300);
  sub_2403A97FC(v67, &qword_256FFA300);
  sub_240388AE4(v48, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v46, &qword_256FFA300);
  if ((v52 & 1) != 0)
    goto LABEL_19;
LABEL_16:
  v49 = 0;
  return v49 & 1;
}

uint64_t _s23LighthouseDataProcessor30TranscriptProtoIndexExpressionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v4 = sub_2408E57A4();
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v60 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)&v58 - v7;
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v64 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C50);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v66 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v58 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v63 = (uint64_t)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v65 = (uint64_t)&v58 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v69 = (uint64_t)&v58 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v58 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v67 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_256FFA300);
  v68 = a2;
  sub_2403A9210(a2, (uint64_t)v28, &qword_256FFA300);
  v31 = (uint64_t)&v15[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v15, &qword_256FFA300);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA300);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v32((uint64_t)v15, 1, v8) != 1)
  {
    sub_2403A9210((uint64_t)v15, (uint64_t)v25, &qword_256FFA300);
    if (v32(v31, 1, v8) != 1)
    {
      v34 = v64;
      sub_2403A91CC(v31, v64, type metadata accessor for TranscriptProtoStatementID);
      v35 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0((uint64_t)v25, v34);
      sub_240388AE4(v34, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
      sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoStatementID);
      sub_2403A97FC((uint64_t)v15, &qword_256FFA300);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
    sub_240388AE4((uint64_t)v25, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v33 = (uint64_t)v15;
LABEL_14:
    sub_2403A97FC(v33, &qword_257000C50);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_256FFA300);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA300);
  if (v32(v31, 1, v8) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v15, &qword_256FFA300);
LABEL_8:
  v36 = type metadata accessor for TranscriptProtoIndexExpression(0);
  v37 = v67;
  v38 = v69;
  sub_2403A9210(v67 + *(int *)(v36 + 20), v69, &qword_256FFA300);
  v39 = v68;
  v40 = v65;
  sub_2403A9210(v68 + *(int *)(v36 + 20), v65, &qword_256FFA300);
  v41 = *(int *)(v11 + 48);
  v42 = v40;
  v43 = v66;
  v44 = v66 + v41;
  sub_2403A9210(v38, v66, &qword_256FFA300);
  sub_2403A9210(v42, v44, &qword_256FFA300);
  if (v32(v43, 1, v8) == 1)
  {
    sub_2403A97FC(v42, &qword_256FFA300);
    sub_2403A97FC(v38, &qword_256FFA300);
    if (v32(v44, 1, v8) == 1)
    {
      sub_2403A97FC(v43, &qword_256FFA300);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v43, v63, &qword_256FFA300);
  if (v32(v44, 1, v8) == 1)
  {
    sub_2403A97FC(v42, &qword_256FFA300);
    sub_2403A97FC(v69, &qword_256FFA300);
    sub_240388AE4(v45, type metadata accessor for TranscriptProtoStatementID);
LABEL_13:
    v33 = v43;
    goto LABEL_14;
  }
  v48 = v64;
  sub_2403A91CC(v44, v64, type metadata accessor for TranscriptProtoStatementID);
  v49 = _s23LighthouseDataProcessor26TranscriptProtoStatementIDV2eeoiySbAC_ACtFZ_0(v45, v48);
  sub_240388AE4(v48, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v42, &qword_256FFA300);
  sub_2403A97FC(v69, &qword_256FFA300);
  sub_240388AE4(v45, type metadata accessor for TranscriptProtoStatementID);
  sub_2403A97FC(v43, &qword_256FFA300);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t sub_2404DD4D4(_QWORD *a1, char *a2, char *a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  char *v32;
  char v33;
  _QWORD *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  char v42;
  void (*v43)(char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t (*v50)(_QWORD, _QWORD);
  _QWORD *v51;
  char *v52;

  v50 = a4;
  v52 = a3;
  v6 = sub_2408E57A4();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v45 = (char *)&v45 - v9;
  v10 = type metadata accessor for ToolKitProtoTypedValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v49 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v45 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v45 - v23;
  v25 = ((uint64_t (*)(_QWORD))v52)(0);
  v26 = *(int *)(v25 + 20);
  v51 = a1;
  v27 = (uint64_t)a1 + v26;
  v28 = v25;
  sub_2403A9210(v27, (uint64_t)v24, &qword_256FFA3A8);
  v29 = *(int *)(v28 + 20);
  v52 = a2;
  sub_2403A9210((uint64_t)&a2[v29], (uint64_t)v22, &qword_256FFA3A8);
  v30 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_2403A9210((uint64_t)v24, (uint64_t)v15, &qword_256FFA3A8);
  sub_2403A9210((uint64_t)v22, v30, &qword_256FFA3A8);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v31((uint64_t)v15, 1, v10) == 1)
  {
    sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    if (v31(v30, 1, v10) == 1)
    {
      sub_2403A97FC((uint64_t)v15, &qword_256FFA3A8);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2403A9210((uint64_t)v15, (uint64_t)v19, &qword_256FFA3A8);
  if (v31(v30, 1, v10) == 1)
  {
    sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
    sub_240388AE4((uint64_t)v19, type metadata accessor for ToolKitProtoTypedValue);
LABEL_6:
    sub_2403A97FC((uint64_t)v15, &qword_257000CA8);
LABEL_10:
    v42 = 0;
    return v42 & 1;
  }
  v32 = v49;
  sub_2403A91CC(v30, (uint64_t)v49, type metadata accessor for ToolKitProtoTypedValue);
  v33 = static ToolKitProtoTypedValue.== infix(_:_:)(v19, v32);
  sub_240388AE4((uint64_t)v32, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
  sub_2403A97FC((uint64_t)v24, &qword_256FFA3A8);
  sub_240388AE4((uint64_t)v19, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v15, &qword_256FFA3A8);
  if ((v33 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v34 = v51;
  v35 = v52;
  if ((v50(*v51, *(_QWORD *)v52) & 1) == 0)
    goto LABEL_10;
  v36 = (char *)v34 + *(int *)(v28 + 24);
  v38 = v47;
  v37 = v48;
  v39 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v40 = v45;
  v39(v45, v36, v48);
  v41 = v46;
  v39(v46, &v35[*(int *)(v28 + 24)], v37);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v42 = sub_2408E5CD8();
  v43 = *(void (**)(char *, uint64_t))(v38 + 8);
  v43(v41, v37);
  v43(v40, v37);
  return v42 & 1;
}

